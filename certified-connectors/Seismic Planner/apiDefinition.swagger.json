{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "Seismic",
      "email": "support@seismic.com",
      "url": "https://seismic.com"
    },
    "description": "Seismic planner connector provides a set of actions to interact with enablement planner projects, tasks and requests.",
    "title": "Seismic Planner",
    "version": "1.0"
  },
  "host": "api.seismic.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/planner/v2/spaces/{spaceId}/nodes/{nodeId}/comments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Node ID",
            "x-ms-summary": "Node ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "nodeId",
            "required": true,
            "type": "string"
          },
          {
            "description": "List of user IDs to query by creator",
            "x-ms-summary": "Creator IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "creatorIds",
            "type": "array"
          },
          {
            "description": "Cursor used for pagination",
            "x-ms-summary": "Cursor",
            "in": "query",
            "name": "cursor",
            "type": "string"
          },
          {
            "description": "Number to limit records",
            "x-ms-summary": "Limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "Sort by query",
            "x-ms-summary": "Sort",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "sort",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CommentQueryResponse"
            }
          }
        },
        "tags": [
          "Comment"
        ],
        "description": "Get all comments for a given project, task, or request. Requires node (project, task, or request) ID.",
        "operationId": "GetComments",
        "summary": "Get comments",
        "x-ms-summary": "Get comments"
      },
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Node ID",
            "x-ms-summary": "Node ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "nodeId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCommentModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        },
        "tags": [
          "Comment"
        ],
        "description": "Create a comment on a given project, task, or request. Requires node (project, task, or request) ID.",
        "operationId": "CreateComment",
        "summary": "Create comment",
        "x-ms-summary": "Create comment"
      }
    },
    "/planner/v2/spaces/{spaceId}/nodes/{nodeId}/comments/{commentId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Node ID",
            "x-ms-summary": "Node ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "nodeId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Comment ID",
            "x-ms-summary": "Comment ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "commentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        },
        "tags": [
          "Comment"
        ],
        "description": "Get a single comment. Requires node (project, task, or request) and comment ID.",
        "operationId": "GetComment",
        "summary": "Get comment",
        "x-ms-summary": "Get comment"
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Node ID",
            "x-ms-summary": "Node ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "nodeId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Comment ID",
            "x-ms-summary": "Comment ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "commentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Comment"
        ],
        "description": "Delete a comment. Requires node (project, task, or request) and comment ID.",
        "operationId": "DeleteComment",
        "summary": "Delete comment",
        "x-ms-summary": "Delete comment"
      },
      "put": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Node ID",
            "x-ms-summary": "Node ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "nodeId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Comment ID",
            "x-ms-summary": "Comment ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "commentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCommentModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        },
        "tags": [
          "Comment"
        ],
        "description": "Update an existing comment. Requires node (project, task, or request) and comment ID.",
        "operationId": "UpdateComment",
        "summary": "Update comment",
        "x-ms-summary": "Update comment"
      }
    },
    "/planner/v2/spaces/{spaceId}/projects": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Filter from a planned end date",
            "x-ms-summary": "Planned End Date From",
            "format": "date-time",
            "in": "query",
            "name": "plannedEndDateFrom",
            "type": "string"
          },
          {
            "description": "Filter to a planned end date",
            "x-ms-summary": "Planned End Date To",
            "format": "date-time",
            "in": "query",
            "name": "plannedEndDateTo",
            "type": "string"
          },
          {
            "description": "Filter from a planned start date",
            "x-ms-summary": "Planned Start Date From",
            "format": "date-time",
            "in": "query",
            "name": "plannedStartDateFrom",
            "type": "string"
          },
          {
            "description": "Filter to a planned start date",
            "x-ms-summary": "Planned Start Date To",
            "format": "date-time",
            "in": "query",
            "name": "plannedStartDateTo",
            "type": "string"
          },
          {
            "description": "List of project IDs to query by",
            "x-ms-summary": "Project IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "ids",
            "type": "array"
          },
          {
            "description": "Project title to query by",
            "x-ms-summary": "Project Title",
            "in": "query",
            "name": "title",
            "type": "string"
          },
          {
            "description": "List of user IDs to query by manager",
            "x-ms-summary": "Manager IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "managerIds",
            "type": "array"
          },
          {
            "description": "List of user IDs to query by creator",
            "x-ms-summary": "Creator IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "creatorIds",
            "type": "array"
          },
          {
            "description": "List of association IDs to query by",
            "x-ms-summary": "Associated Node IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "associatedNodeIds",
            "type": "array"
          },
          {
            "description": "Cursor used for pagination",
            "x-ms-summary": "Cursor",
            "in": "query",
            "name": "cursor",
            "type": "string"
          },
          {
            "description": "Number to limit records returned",
            "x-ms-summary": "Limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "Sort query",
            "x-ms-summary": "Sort",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "sort",
            "type": "array"
          },
          {
            "description": "List of custom properties to query by",
            "x-ms-summary": "Custom Properties",
            "in": "query",
            "name": "customProperties",
            "type": "string"
          },
          {
            "description": "List of user IDs to query by follower",
            "x-ms-summary": "Follower IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "followerIds",
            "type": "array"
          },
          {
            "default": false,
            "description": "Indicator to allow for inclusion of association data",
            "x-ms-summary": "Include Associations",
            "in": "query",
            "name": "includeAssociations",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PlannerProjectQueryResponse"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "description": "Get a list of projects with their attributes and associations.",
        "operationId": "GetProjects",
        "summary": "Get projects",
        "x-ms-summary": "Get projects",
        "x-seismic-scopes": [
          "seismic.planner.view",
          "seismic.planner.manage"
        ]
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "List of project IDs",
            "x-ms-summary": "Project IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "ids",
            "required": true,
            "type": "array"
          },
          {
            "default": false,
            "description": "Also delete associated tasks",
            "x-ms-summary": "Delete Tasks",
            "in": "query",
            "name": "deleteTasks",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "description": "Delete one or more projects.",
        "operationId": "DeleteProjects",
        "summary": "Delete projects",
        "x-ms-summary": "Delete projects",
        "x-seismic-scopes": [
          "seismic.planner.manage"
        ]
      },
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "The planner project data",
            "x-ms-summary": "Body",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PlannerProject"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "description": "Create a project.",
        "operationId": "CreateProject",
        "summary": "Create project",
        "x-ms-summary": "Create project",
        "x-seismic-scopes": [
          "seismic.planner.manage"
        ]
      }
    },
    "/planner/v2/spaces/{spaceId}/projects/{projectId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Project ID",
            "x-ms-summary": "Project ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Number to indicate depth of associated node data returned",
            "x-ms-summary": "Associated Nodes Depth",
            "format": "int32",
            "in": "query",
            "name": "associatedNodesDepth",
            "type": "integer"
          },
          {
            "description": "Indicator to include associated tasks data",
            "x-ms-summary": "Include Works",
            "in": "query",
            "name": "includeWorks",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PlannerProject"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "description": "Get a single project by ID. Return tasks if desired.",
        "operationId": "GetProject",
        "summary": "Get project",
        "x-ms-summary": "Get project",
        "x-seismic-scopes": [
          "seismic.planner.view",
          "seismic.planner.manage"
        ]
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Project ID",
            "x-ms-summary": "Project ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Also delete associated tasks",
            "x-ms-summary": "Delete Tasks",
            "in": "query",
            "name": "deleteTasks",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "description": "Delete a project.",
        "operationId": "DeleteProject",
        "summary": "Delete project",
        "x-ms-summary": "Delete project",
        "x-seismic-scopes": [
          "seismic.planner.manage"
        ]
      },
      "put": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Project ID",
            "x-ms-summary": "Project ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PlannerProject"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "description": "Update and return a project.",
        "operationId": "UpdateProject",
        "summary": "Update a project",
        "x-ms-summary": "Update a project"
      }
    },
    "/planner/v2/spaces/{spaceId}/requests": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "filter by request due date (inclusive)",
            "x-ms-summary": "Planned End Date From",
            "format": "date-time",
            "in": "query",
            "name": "plannedEndDateFrom",
            "type": "string"
          },
          {
            "description": "filter by request due date (exclusive)",
            "x-ms-summary": "Planned End Date To",
            "format": "date-time",
            "in": "query",
            "name": "plannedEndDateTo",
            "type": "string"
          },
          {
            "description": "filter by request start date (inclusive)",
            "x-ms-summary": "Planned Start Date From",
            "format": "date-time",
            "in": "query",
            "name": "plannedStartDateFrom",
            "type": "string"
          },
          {
            "description": "filter by request start date (exclusive)",
            "x-ms-summary": "Planned Start Date To",
            "format": "date-time",
            "in": "query",
            "name": "plannedStartDateTo",
            "type": "string"
          },
          {
            "description": "filter by request created date (inclusive)",
            "x-ms-summary": "Created At From",
            "format": "date-time",
            "in": "query",
            "name": "createdAtFrom",
            "type": "string"
          },
          {
            "description": "filter by request created date (exclusive)",
            "x-ms-summary": "Created At To",
            "format": "date-time",
            "in": "query",
            "name": "createdAtTo",
            "type": "string"
          },
          {
            "description": "filter by request updated date (inclusive)",
            "x-ms-summary": "Updated At From",
            "format": "date-time",
            "in": "query",
            "name": "updatedAtFrom",
            "type": "string"
          },
          {
            "description": "filter by request updated date (exclusive)",
            "x-ms-summary": "Updated At To",
            "format": "date-time",
            "in": "query",
            "name": "updatedAtTo",
            "type": "string"
          },
          {
            "description": "A list of request IDs",
            "x-ms-summary": "Request IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "ids",
            "type": "array"
          },
          {
            "description": "Keyword values to search for on request titles",
            "x-ms-summary": "Title",
            "in": "query",
            "name": "title",
            "type": "string"
          },
          {
            "description": "A list of assignees' user IDs to filter by",
            "x-ms-summary": "Assignee IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "assigneeIds",
            "type": "array"
          },
          {
            "description": "A list of priority values, Available values : critical, high, medium, low",
            "x-ms-summary": "Priorities",
            "in": "query",
            "items": {
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "noPriority"
              ],
              "type": "string"
            },
            "name": "priorities",
            "type": "array"
          },
          {
            "description": "Keyword values to search",
            "x-ms-summary": "Keywords",
            "in": "query",
            "name": "keywords",
            "type": "string"
          },
          {
            "description": "A list of assigner' user Ids to filter by",
            "x-ms-summary": "Assigner IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "assignerIds",
            "type": "array"
          },
          {
            "description": "A list of creators' user IDs to filter by",
            "x-ms-summary": "Creator IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "creatorIds",
            "type": "array"
          },
          {
            "description": "A list of step IDs to filter by",
            "x-ms-summary": "Step IDs",
            "in": "query",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "name": "stepIds",
            "type": "array"
          },
          {
            "description": "Status schema ID to filter by",
            "x-ms-summary": "Status Schema ID",
            "in": "query",
            "name": "statusSchemaId",
            "type": "string"
          },
          {
            "description": "A token used to guide the next page window",
            "x-ms-summary": "Cursor",
            "in": "query",
            "name": "cursor",
            "type": "string"
          },
          {
            "description": "Number of items to return per page, default: 50",
            "x-ms-summary": "Limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "Sort by requests",
            "x-ms-summary": "Sort",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "sort",
            "type": "array"
          },
          {
            "description": "The project ID a request is associated to",
            "x-ms-summary": "Project ID",
            "in": "query",
            "name": "projectId",
            "type": "string"
          },
          {
            "description": "Filter by if requests are associated with a project",
            "x-ms-summary": "Has Project",
            "in": "query",
            "name": "hasProject",
            "type": "boolean"
          },
          {
            "description": "Filter by custom properties",
            "x-ms-summary": "Custom Properties",
            "in": "query",
            "name": "customProperties",
            "type": "string"
          },
          {
            "description": "A list of followers' user id",
            "x-ms-summary": "Follower IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "followerIds",
            "type": "array"
          },
          {
            "description": "A list of Associated node IDs to filter by",
            "x-ms-summary": "Associated Node IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "associatedNodeIds",
            "type": "array"
          },
          {
            "description": "List of content reference objects",
            "x-ms-summary": "Content Reference Objects",
            "in": "query",
            "name": "contentRefs",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "default": false,
            "description": "whether to include request form custom properties, default false",
            "x-ms-summary": "Include Request Form Custom Properties",
            "in": "query",
            "name": "includeRequestFormCustomProperties",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PlannerRequestQueryResponse"
            }
          }
        },
        "tags": [
          "Request"
        ],
        "description": "Get a list of requests.",
        "operationId": "GetRequests",
        "summary": "Get requests",
        "x-ms-summary": "Get requests"
      },
      "delete": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "name": "spaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content-Type",
            "description": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "description": "List of request IDs for deletion",
            "x-ms-summary": "Body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Request"
        ],
        "description": "Bulk delete requests.",
        "operationId": "DeleteRequests",
        "summary": "Delete requests",
        "x-ms-summary": "Delete requests"
      },
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Data to create a request",
            "x-ms-summary": "Body",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PlannerRequest"
            }
          }
        },
        "tags": [
          "Request"
        ],
        "description": "Create a request.",
        "operationId": "CreateRequest",
        "summary": "Create request",
        "x-ms-summary": "Create request"
      }
    },
    "/planner/v2/spaces/{spaceId}/requests/{requestId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Request ID",
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "requestId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PlannerRequest"
            }
          }
        },
        "tags": [
          "Request"
        ],
        "description": "Get a single request.",
        "operationId": "GetRequest",
        "summary": "Get request",
        "x-ms-summary": "Get request"
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Request ID",
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "requestId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "x-ms-summary": "No Content"
          }
        },
        "tags": [
          "Request"
        ],
        "description": "Delete a request.",
        "operationId": "DeleteRequest",
        "summary": "Delete request",
        "x-ms-summary": "Delete request"
      },
      "put": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Request ID",
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "requestId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Data for updating a request",
            "x-ms-summary": "Body",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PlannerRequest"
            }
          }
        },
        "tags": [
          "Request"
        ],
        "description": "Update a request.",
        "operationId": "UpdateRequest",
        "summary": "Update request",
        "x-ms-summary": "Update request"
      }
    },
    "/planner/v2/spaces/{spaceId}/statusschema": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Get default status schema",
            "x-ms-summary": "Is Default",
            "in": "query",
            "name": "isDefault",
            "type": "boolean"
          },
          {
            "description": "Query by node type",
            "x-ms-summary": "Type",
            "enum": [
              "task",
              "request"
            ],
            "in": "query",
            "name": "type",
            "type": "string"
          },
          {
            "description": "List of status schemas IDs",
            "x-ms-summary": "Status Schema IDS",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "ids",
            "type": "array"
          },
          {
            "description": "List of user IDs to query by creator",
            "x-ms-summary": "Creator IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "creatorIds",
            "type": "array"
          },
          {
            "description": "Cursor used for pagination",
            "x-ms-summary": "Cursor",
            "in": "query",
            "name": "cursor",
            "type": "string"
          },
          {
            "description": "Number to limit returned records",
            "x-ms-summary": "Limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StatusSchemaQueryResponse"
            }
          }
        },
        "tags": [
          "Status Schema"
        ],
        "description": "Get a list of task/request status schemas. These schemas hold the data for set statuses for specific work.\n\nExample: `(Not started, In progress, Complete)`",
        "operationId": "GetStatusSchemas",
        "summary": "Get status schemas",
        "x-ms-summary": "Get status schemas"
      }
    },
    "/planner/v2/spaces/{spaceId}/statusschema/{statusSchemaId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Status schema ID",
            "x-ms-summary": "Status Schema ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "statusSchemaId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StatusSchema"
            }
          }
        },
        "tags": [
          "Status Schema"
        ],
        "description": "Get a single status schema by ID. These schemas hold the data for set statuses for specific work.\n\nExample: `(Not started, In progress, Complete)`",
        "operationId": "GetStatusSchema",
        "summary": "Get status schema",
        "x-ms-summary": "Get status schema"
      }
    },
    "/planner/v2/spaces/{spaceId}/tasks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Filter by task due date (inclusive)",
            "x-ms-summary": "Planned End Date From",
            "format": "date-time",
            "in": "query",
            "name": "plannedEndDateFrom",
            "type": "string"
          },
          {
            "description": "Filter by task due date (exclusive)",
            "x-ms-summary": "Planned End Date To",
            "format": "date-time",
            "in": "query",
            "name": "plannedEndDateTo",
            "type": "string"
          },
          {
            "description": "Filter by task start date (inclusive)",
            "x-ms-summary": "Planned Start Date From",
            "format": "date-time",
            "in": "query",
            "name": "plannedStartDateFrom",
            "type": "string"
          },
          {
            "description": "Filter by task start date (exclusive)",
            "x-ms-summary": "Planned Start Date To",
            "format": "date-time",
            "in": "query",
            "name": "plannedStartDateTo",
            "type": "string"
          },
          {
            "description": "Filter by task created date (inclusive)",
            "x-ms-summary": "Created At From",
            "format": "date-time",
            "in": "query",
            "name": "createdAtFrom",
            "type": "string"
          },
          {
            "description": "Filter by task created date (exclusive)",
            "x-ms-summary": "Created At To",
            "format": "date-time",
            "in": "query",
            "name": "createdAtTo",
            "type": "string"
          },
          {
            "description": "Filter by task updated date (inclusive)",
            "x-ms-summary": "Updated At From",
            "format": "date-time",
            "in": "query",
            "name": "updatedAtFrom",
            "type": "string"
          },
          {
            "description": "Filter by task updated date (exclusive)",
            "x-ms-summary": "Updated At To",
            "format": "date-time",
            "in": "query",
            "name": "updatedAtTo",
            "type": "string"
          },
          {
            "description": "Filter by a list of task IDs",
            "x-ms-summary": "Task IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "ids",
            "type": "array"
          },
          {
            "description": "Filter by task title",
            "x-ms-summary": "Title",
            "in": "query",
            "name": "title",
            "type": "string"
          },
          {
            "description": "Filter by task description",
            "x-ms-summary": "Description",
            "in": "query",
            "name": "description",
            "type": "string"
          },
          {
            "description": "List of user IDs to filter by assignee",
            "x-ms-summary": "Assignee IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "assigneeIds",
            "type": "array"
          },
          {
            "description": "Filter by list of priorities",
            "x-ms-summary": "Priorities",
            "in": "query",
            "items": {
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "noPriority"
              ],
              "type": "string"
            },
            "name": "priorities",
            "type": "array"
          },
          {
            "description": "Filter by keywords",
            "x-ms-summary": "Keywords",
            "in": "query",
            "name": "keywords",
            "type": "string"
          },
          {
            "description": "List of user IDs to filter by user that assigned the task",
            "x-ms-summary": "Assigner IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "assignerIds",
            "type": "array"
          },
          {
            "description": "Filter by status value IDs",
            "x-ms-summary": "Step IDs",
            "in": "query",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "name": "stepIds",
            "type": "array"
          },
          {
            "description": "Filter by status schema IDs",
            "x-ms-summary": "Status Schema ID",
            "in": "query",
            "name": "statusSchemaId",
            "type": "string"
          },
          {
            "description": "Cursor used for pagination",
            "x-ms-summary": "Cursor",
            "in": "query",
            "name": "cursor",
            "type": "string"
          },
          {
            "description": "Number to limit returned records",
            "x-ms-summary": "Limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "Sort by query",
            "x-ms-summary": "Sort",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "sort",
            "type": "array"
          },
          {
            "description": "Include subtasks within the returned list",
            "x-ms-summary": "Recursive",
            "in": "query",
            "name": "recursive",
            "type": "boolean"
          },
          {
            "description": "Filter by project ID",
            "x-ms-summary": "Project ID",
            "in": "query",
            "name": "projectId",
            "type": "string"
          },
          {
            "description": "Filter by tasks that are associated with a project",
            "x-ms-summary": "Has Project",
            "in": "query",
            "name": "hasProject",
            "type": "boolean"
          },
          {
            "description": "Filter by custom property values",
            "x-ms-summary": "Custom Properties",
            "in": "query",
            "name": "customProperties",
            "type": "string"
          },
          {
            "description": "List of user IDs to filter by followers",
            "x-ms-summary": "Follower IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "followerIds",
            "type": "array"
          },
          {
            "description": "List of association IDs to filter by",
            "x-ms-summary": "Associated Node IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "associatedNodeIds",
            "type": "array"
          },
          {
            "description": "List of user IDs to filter by creator",
            "x-ms-summary": "Creator IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "creatorIds",
            "type": "array"
          },
          {
            "description": "Include association data in the response",
            "x-ms-summary": "Include Associations",
            "in": "query",
            "name": "includeAssociations",
            "type": "boolean"
          },
          {
            "description": "List of task IDs to filter by",
            "x-ms-summary": "Parent ID",
            "in": "query",
            "name": "parentId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PlannerTaskQueryResponse"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Get a list of tasks.",
        "operationId": "GetTasks",
        "summary": "Get tasks",
        "x-ms-summary": "Get tasks"
      },
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "The planner task data",
            "x-ms-summary": "Body",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTask"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PlannerTask"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Create a task.",
        "operationId": "CreateTask",
        "summary": "Create task",
        "x-ms-summary": "Create task"
      }
    },
    "/planner/v2/spaces/{spaceId}/tasks/{taskId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Task ID",
            "x-ms-summary": "Task ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PlannerTask"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Get a single task by ID.",
        "operationId": "GetTask",
        "summary": "Get task",
        "x-ms-summary": "Get task"
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Task ID",
            "x-ms-summary": "Task ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Delete a task.",
        "operationId": "DeleteTask",
        "summary": "Delete task",
        "x-ms-summary": "Delete task",
        "x-seismic-scopes": [
          "seismic.planner.manage"
        ]
      },
      "put": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Space ID",
            "x-ms-summary": "Space ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "type": "string",
            "default": "default"
          },
          {
            "description": "Task ID",
            "x-ms-summary": "Task ID",
            "x-ms-url-encoding": "single",
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Task data to be updated",
            "x-ms-summary": "Body",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PlannerTask"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Update an existing task.",
        "operationId": "UpdateTask",
        "summary": "Update task",
        "x-ms-summary": "Update task"
      }
    }
  },
  "definitions": {
    "Association": {
      "properties": {
        "description": {
          "description": "Description of association",
          "x-ms-summary": "Description",
          "type": "string"
        },
        "name": {
          "description": "Name of association",
          "x-ms-summary": "Name",
          "type": "string"
        },
        "nodeGuid": {
          "description": "Longer GUID format",
          "x-ms-summary": "Node GUID",
          "readOnly": true,
          "type": "string",
          "x-nullable": true
        },
        "nodeId": {
          "description": "Node ID",
          "x-ms-summary": "Node ID",
          "type": "string"
        },
        "nodeType": {
          "description": "Node type of the association",
          "x-ms-summary": "Node Type",
          "enum": [
            "project",
            "task",
            "request",
            "content"
          ],
          "type": "string"
        },
        "spaceGuid": {
          "description": "Longer GUID format",
          "x-ms-summary": "Space GUID",
          "readOnly": true,
          "type": "string",
          "x-nullable": true
        },
        "spaceId": {
          "description": "Space ID",
          "x-ms-summary": "Space ID",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssociationReq": {
      "properties": {
        "nodeId": {
          "description": "Node ID",
          "x-ms-summary": "Node ID",
          "type": "string"
        },
        "nodeType": {
          "description": "Node type of the association",
          "x-ms-summary": "Node Type",
          "enum": [
            "project",
            "task",
            "request",
            "content"
          ],
          "type": "string"
        },
        "spaceId": {
          "description": "Space ID",
          "x-ms-summary": "Space ID",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AsyncOperationResponse": {
      "properties": {
        "asyncOperationIds": {
          "description": "List of async action IDs",
          "x-ms-summary": "Async Operation IDs",
          "items": {
            "x-ms-summary": "Async Operation ID",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Comment": {
      "properties": {
        "annotationPayload": {
          "x-ms-summary": "Annotation Payload",
          "type": "string",
          "x-nullable": true
        },
        "annotationType": {
          "x-ms-summary": "Annotation Type",
          "type": "string",
          "x-nullable": true
        },
        "commentContent": {
          "x-ms-summary": "Comment Content",
          "type": "string"
        },
        "createdAt": {
          "x-ms-summary": "Created At",
          "description": "Date string of date created",
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "description": "User ID of the creator",
          "x-ms-summary": "Creator ID",
          "type": "string"
        },
        "id": {
          "description": "Comment ID",
          "x-ms-summary": "Comment ID",
          "type": "string"
        },
        "isResolved": {
          "description": "True/false on whether the comment is resolved",
          "x-ms-summary": "Is Resolved",
          "type": "boolean"
        },
        "nodeId": {
          "description": "Node ID",
          "x-ms-summary": "Node ID",
          "type": "string"
        },
        "nodeType": {
          "description": "Node type of the comment",
          "x-ms-summary": "Node Type",
          "enum": [
            "project",
            "task",
            "request"
          ],
          "type": "string"
        },
        "pageIndex": {
          "description": "Number page index",
          "x-ms-summary": "Page Index",
          "type": "string"
        },
        "parentId": {
          "description": "Parent comment ID",
          "x-ms-summary": "Parent ID",
          "type": "string"
        },
        "replyCount": {
          "description": "Number of replies",
          "x-ms-summary": "Reply Count",
          "format": "int32",
          "type": "integer"
        },
        "spaceId": {
          "description": "Space ID",
          "x-ms-summary": "Space ID",
          "type": "string"
        },
        "updatedAt": {
          "description": "Date string of updated date",
          "x-ms-summary": "Updated At",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "CommentQueryResponse": {
      "properties": {
        "count": {
          "description": "Number of records returned",
          "x-ms-summary": "Count",
          "format": "int32",
          "type": "integer"
        },
        "cursor": {
          "description": "Cursor used for pagination",
          "x-ms-summary": "Cursor",
          "type": "string"
        },
        "items": {
          "description": "List of items in the response",
          "x-ms-summary": "Items",
          "items": {
            "$ref": "#/definitions/Comment"
          },
          "type": "array"
        },
        "limit": {
          "description": "Number to limit records",
          "x-ms-summary": "Limit",
          "format": "int32",
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "type": "object"
    },
    "ContentRef": {
      "properties": {
        "contentId": {
          "description": "Content ID",
          "x-ms-summary": "Content ID",
          "format": "uuid",
          "type": "string"
        },
        "docCenterFullPath": {
          "description": "Full location path of where content exists in DocCenter",
          "x-ms-summary": "DocCenter Full Path",
          "type": "string",
          "x-nullable": true
        },
        "majorVersion": {
          "description": "Number of major version",
          "x-ms-summary": "Major Version",
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "minorVersion": {
          "description": "Number of minor version",
          "x-ms-summary": "Minor Version",
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "modifiedDate": {
          "description": "Date the content reference was last updated",
          "x-ms-summary": "Modified Date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "orderNo": {
          "description": "Number to indicate order",
          "x-ms-summary": "Order Number",
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "profileId": {
          "description": "Profile ID",
          "x-ms-summary": "Profile ID",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "profileVersionId": {
          "description": "Version ID of profile",
          "x-ms-summary": "Profile Version ID",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "source": {
          "description": "Source of content",
          "x-ms-summary": "Source",
          "enum": [
            "Library",
            "DocCenter",
            "NewsCenter",
            "Workspace"
          ],
          "type": "string"
        },
        "teamSiteId": {
          "description": "TeamSite ID",
          "x-ms-summary": "TeamSite ID",
          "type": "string",
          "x-nullable": true
        },
        "thumbnailId": {
          "description": "ID for image thumbnail",
          "x-ms-summary": "Thumbnail ID",
          "type": "string",
          "x-nullable": true
        },
        "versionId": {
          "description": "Version ID of content",
          "x-ms-summary": "Version ID",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "CreateCommentModel": {
      "properties": {
        "annotationPayload": {
          "x-ms-summary": "Annotation Payload",
          "type": "string",
          "x-nullable": true,
          "title": "Annotation Payload"
        },
        "annotationType": {
          "x-ms-summary": "Annotation Type",
          "description": "Annotation type",
          "type": "string",
          "x-nullable": true
        },
        "commentContent": {
          "x-ms-summary": "Comment Content",
          "description": "Content of the comment",
          "type": "string"
        },
        "isResolved": {
          "x-ms-summary": "Is Resolved",
          "description": "True/false on whether the comment is resolved",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "CreateProject": {
      "properties": {
        "associations": {
          "x-ms-summary": "Associations",
          "description": "List of association objects",
          "items": {
            "$ref": "#/definitions/AssociationReq"
          },
          "type": "array",
          "x-nullable": true
        },
        "customProperties": {
          "x-ms-summary": "Custom Properties",
          "description": "List of custom properties",
          "items": {
            "$ref": "#/definitions/CustomPropertyValuesInput"
          },
          "type": "array",
          "x-nullable": true
        },
        "description": {
          "x-ms-summary": "Description",
          "description": "Title of description",
          "type": "string",
          "x-nullable": true
        },
        "managerId": {
          "x-ms-summary": "Manager ID",
          "description": "User ID of manager",
          "type": "string",
          "x-nullable": true
        },
        "plannedDuration": {
          "x-ms-summary": "Planned Duration",
          "description": "Planned duration in days",
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "plannedEndDate": {
          "x-ms-summary": "Planned End Date",
          "description": "Date string of end date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "plannedStartDate": {
          "x-ms-summary": "Planned Start Date",
          "description": "Date string of start date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "x-ms-summary": "Title",
          "description": "Title of project",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateRequest": {
      "properties": {
        "assigneeId": {
          "x-ms-summary": "Assignee ID",
          "description": "User ID of assignee",
          "type": "string",
          "x-nullable": true
        },
        "associations": {
          "x-ms-summary": "Associations",
          "description": "List of associations (Library content)",
          "items": {
            "$ref": "#/definitions/AssociationReq"
          },
          "type": "array",
          "x-nullable": true
        },
        "contentRefs": {
          "x-ms-summary": "Content References",
          "description": "List of content references (DocCenter and Workspace associations)",
          "items": {
            "$ref": "#/definitions/ContentRef"
          },
          "type": "array",
          "x-nullable": true
        },
        "customProperties": {
          "x-ms-summary": "Custom Properties",
          "description": "List of custom properties",
          "items": {
            "$ref": "#/definitions/CustomPropertyValuesInput"
          },
          "type": "array",
          "x-nullable": true
        },
        "formRef": {
          "x-ms-summary": "Form Reference",
          "description": "Form reference object",
          "x-nullable": true
        },
        "plannedDuration": {
          "x-ms-summary": "Planned Duration",
          "description": "Planned duration in days",
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "plannedEndDate": {
          "x-ms-summary": "Planned End Date",
          "description": "Date string of end date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "plannedStartDate": {
          "x-ms-summary": "Planned Start Date",
          "description": "Date string of start date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "priority": {
          "description": "Priority value",
          "x-ms-summary": "Priority",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ],
          "type": "string",
          "x-nullable": true
        },
        "projectId": {
          "description": "ID of project the request belongs to",
          "x-ms-summary": "Project ID",
          "type": "string",
          "x-nullable": true
        },
        "statusSchemaId": {
          "x-ms-summary": "Status Schema ID",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "x-ms-summary": "Title",
          "description": "Title of request",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateTask": {
      "properties": {
        "assigneeId": {
          "x-ms-summary": "Assignee ID",
          "description": "User ID of assignee",
          "type": "string",
          "x-nullable": true
        },
        "associations": {
          "x-ms-summary": "Associations",
          "description": "List of associations (Library content)",
          "items": {
            "$ref": "#/definitions/AssociationReq"
          },
          "type": "array",
          "x-nullable": true
        },
        "customProperties": {
          "x-ms-summary": "Custom Properties",
          "description": "List of custom properties",
          "items": {
            "$ref": "#/definitions/CustomPropertyValuesInput"
          },
          "type": "array",
          "x-nullable": true
        },
        "description": {
          "x-ms-summary": "Description",
          "description": "Description of task",
          "type": "string",
          "x-nullable": true
        },
        "parentId": {
          "x-ms-summary": "Parent ID",
          "description": "Task ID of parent",
          "type": "string",
          "x-nullable": true
        },
        "plannedDuration": {
          "x-ms-summary": "Planned Duration",
          "description": "Planned duration in days",
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "plannedEndDate": {
          "x-ms-summary": "Planned End Date",
          "description": "Date string of end date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "plannedStartDate": {
          "x-ms-summary": "Planned Start Date",
          "description": "Date string of start date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "priority": {
          "x-ms-summary": "Priority",
          "description": "Priority values",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ],
          "type": "string",
          "x-nullable": true
        },
        "projectId": {
          "x-ms-summary": "Project ID",
          "description": "ID of project the task is associated with",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "x-ms-summary": "Title",
          "description": "Title of task",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomProperty": {
      "properties": {
        "allowMultipleValues": {
          "x-ms-summary": "Allow Multiple Values",
          "description": "Indicates if custom property allows for multiple values",
          "type": "boolean"
        },
        "createdById": {
          "x-ms-summary": "Created By ID",
          "description": "User ID of the creator",
          "type": "string",
          "x-nullable": true
        },
        "hasDomainOfValues": {
          "x-ms-summary": "Has Domain Of Values",
          "description": "Indicates if custom property has possible values",
          "type": "boolean"
        },
        "hint": {
          "x-ms-summary": "Hint",
          "description": "Value that describes the hint displayed under the custom property name",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "x-ms-summary": "Custom Property ID",
          "type": "string"
        },
        "isRequired": {
          "x-ms-summary": "Is Required",
          "description": "Indicates whether the custom property is required or not",
          "type": "boolean",
          "x-nullable": true
        },
        "lastModifiedById": {
          "x-ms-summary": "Last Modified By ID",
          "description": "User ID of the user that last updated the custom property",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "x-ms-summary": "Name",
          "description": "Name of custom property",
          "type": "string"
        },
        "operationSetting": {
          "x-ms-summary": "Operation Setting",
          "description": "Object that describes settings for different operations on a custom property",
          "enum": [
            "Editable",
            "ReadOnly",
            "Hidden"
          ],
          "type": "string"
        },
        "order": {
          "x-ms-summary": "Order",
          "description": "Number indicating order within custom property list",
          "format": "int32",
          "type": "integer"
        },
        "possibleValues": {
          "x-ms-summary": "Possible Values",
          "description": "List of possible values for the custom property (if applicable)",
          "items": {
            "$ref": "#/definitions/PossibleValuesItem"
          },
          "type": "array"
        },
        "scopeSettings": {
          "x-ms-summary": "Scope Settings",
          "description": "Object that describes settings for different scopes on a custom property",
          "items": {
            "$ref": "#/definitions/ScopeSettingsItemDefinition"
          },
          "type": "array",
          "x-nullable": true
        },
        "scopes": {
          "x-ms-summary": "Scopes",
          "description": "List of scopes",
          "items": {
            "enum": [
              "task",
              "project",
              "content",
              "request"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "valueSchemaName": {
          "x-ms-summary": "Value Schema Name",
          "description": "Name of custom property value schema",
          "enum": [
            "dateRange",
            "user",
            "tag"
          ],
          "type": "string",
          "x-nullable": true
        },
        "valueSchemaProperty": {
          "$ref": "#/definitions/ValueSchemaPropertyDefinition"
        },
        "valueType": {
          "x-ms-summary": "Value Type",
          "description": "Type of custom property value",
          "enum": [
            "Boolean",
            "Integer",
            "Double",
            "DateTime",
            "String",
            "Dictionary"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomPropertyDataDisplay": {
      "properties": {
        "name": {
          "x-ms-summary": "Name",
          "description": "Name of custom property",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomPropertyValues": {
      "properties": {
        "id": {
          "x-ms-summary": "Custom Property ID",
          "type": "string"
        },
        "localizations": {
          "x-ms-summary": "Localizations",
          "additionalProperties": {
            "$ref": "#/definitions/CustomPropertyDataDisplay"
          },
          "description": "Localization object",
          "type": "object",
          "x-nullable": true
        },
        "multipleValue": {
          "x-ms-summary": "Multiple Value",
          "description": "Indicate if the custom property allows multiple values",
          "type": "boolean"
        },
        "name": {
          "x-ms-summary": "Name",
          "description": "Name of custom property",
          "type": "string"
        },
        "values": {
          "x-ms-summary": "Values",
          "description": "List of custom property values",
          "items": {
            "$ref": "#/definitions/CustomPropertyValuesValues"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CustomPropertyValuesInput": {
      "properties": {
        "id": {
          "x-ms-summary": "Custom Property ID",
          "type": "string"
        },
        "values": {
          "x-ms-summary": "Values",
          "description": "List of custom property values",
          "items": {
            "$ref": "#/definitions/CustomPropertyValuesValues"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CustomPropertyValuesValues": {
      "properties": {
        "id": {
          "x-ms-summary": "Value ID",
          "type": "string",
          "x-nullable": true
        },
        "value": {
          "x-ms-summary": "Value",
          "description": "Value data for custom property value",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "DeleteRequest": {
      "properties": {
        "ids": {
          "x-ms-summary": "Request IDs",
          "description": "List of Request IDs to delete",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Follower": {
      "properties": {
        "id": {
          "x-ms-summary": "User/User group ID",
          "description": "User/User group ID of follower",
          "type": "string"
        },
        "type": {
          "x-ms-summary": "Type",
          "description": "Either user or user group follower type",
          "enum": [
            "user",
            "group"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Meta": {
      "x-ms-summary": "Metadata object",
      "description": "Metadata object",
      "properties": {
        "count": {
          "x-ms-summary": "Count",
          "description": "Number of records returned",
          "format": "int32",
          "type": "integer"
        },
        "query": {
          "x-ms-summary": "Query",
          "description": "Query object",
          "items": {
            "$ref": "#/definitions/MetaQueryInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MetaQueryInfo": {
      "properties": {
        "sort": {
          "x-ms-summary": "Sort",
          "description": "Sort query",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "PlannerProject": {
      "properties": {
        "actualDuration": {
          "x-ms-summary": "Actual Duration",
          "description": "Calculated actual duration in days",
          "format": "int32",
          "type": "integer"
        },
        "actualEndDate": {
          "x-ms-summary": "Actual End Date",
          "description": "Calculated end date from when the project actually ended",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "actualStartDate": {
          "x-ms-summary": "Actual Start Date",
          "description": "Calculated start date from when the project actually started",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "associatedNodes": {
          "x-ms-summary": "Associated Nodes",
          "description": "List of association data",
          "items": {
            "$ref": "#/definitions/ProjectAssociatedNodes"
          },
          "type": "array"
        },
        "associations": {
          "x-ms-summary": "Associations",
          "description": "List of associations (Library content)",
          "items": {
            "$ref": "#/definitions/Association"
          },
          "type": "array"
        },
        "copyFrom": {
          "x-ms-summary": "Copy From",
          "description": "Project ID the project is copied from",
          "type": "string",
          "x-nullable": true
        },
        "createdAt": {
          "x-ms-summary": "Created At",
          "description": "Date string of created date",
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "x-ms-summary": "Creator ID",
          "description": "User ID of creator",
          "type": "string"
        },
        "customProperties": {
          "x-ms-summary": "Custom Properties",
          "description": "List of custom properties",
          "items": {
            "$ref": "#/definitions/CustomPropertyValues"
          },
          "type": "array"
        },
        "description": {
          "x-ms-summary": "Description",
          "description": "Description of project",
          "type": "string"
        },
        "followers": {
          "x-ms-summary": "Followers",
          "description": "List of followers",
          "items": {
            "$ref": "#/definitions/Follower"
          },
          "type": "array"
        },
        "id": {
          "x-ms-summary": "Project ID",
          "type": "string"
        },
        "isActive": {
          "x-ms-summary": "Is Active",
          "description": "Indicator on if a project is active or not",
          "type": "boolean"
        },
        "isTemplate": {
          "x-ms-summary": "Is Template",
          "description": "Indicator on if the project is a template or not",
          "type": "boolean"
        },
        "managerId": {
          "x-ms-summary": "Manager ID",
          "description": "User ID of project manager",
          "type": "string",
          "x-nullable": true
        },
        "maxRank": {
          "x-ms-summary": "Max Rank",
          "description": "Maximum rank number",
          "type": "string",
          "x-nullable": true
        },
        "minRank": {
          "x-ms-summary": "Min Rank",
          "description": "Minimum rank number",
          "type": "string",
          "x-nullable": true
        },
        "plannedDuration": {
          "x-ms-summary": "Planned Duration",
          "description": "Planned duration in days",
          "format": "int32",
          "type": "integer"
        },
        "plannedEndDate": {
          "x-ms-summary": "Planned End Date",
          "description": "Date string of planned end date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "plannedStartDate": {
          "x-ms-summary": "Planned Start Date",
          "description": "Date string of planned start date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "spaceId": {
          "x-ms-summary": "Space ID",
          "type": "string"
        },
        "templateId": {
          "x-ms-summary": "Template ID",
          "description": "Template ID the the project was created from",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "x-ms-summary": "Title",
          "description": "Title of project",
          "type": "string"
        },
        "updatedAt": {
          "x-ms-summary": "Updated At",
          "description": "Date project was last updated",
          "format": "date-time",
          "type": "string"
        },
        "works": {
          "x-ms-summary": "Works",
          "description": "List of tasks and requests",
          "items": {
            "$ref": "#/definitions/PlannerTask"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "PlannerProjectQueryResponse": {
      "properties": {
        "count": {
          "x-ms-summary": "Count",
          "description": "Number of records returned",
          "format": "int32",
          "type": "integer"
        },
        "cursor": {
          "x-ms-summary": "Cursor",
          "description": "Cursor used for pagination",
          "type": "string"
        },
        "items": {
          "x-ms-summary": "Project objects",
          "description": "List of project items in the response",
          "items": {
            "$ref": "#/definitions/PlannerProject"
          },
          "type": "array"
        },
        "limit": {
          "x-ms-summary": "Limit",
          "description": "Number to limit records",
          "format": "int32",
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "type": "object"
    },
    "PlannerRequest": {
      "properties": {
        "assigneeId": {
          "x-ms-summary": "Assignee ID",
          "description": "User ID of the assignee",
          "type": "string",
          "x-nullable": true
        },
        "assignerId": {
          "x-ms-summary": "Assigner ID",
          "description": "User ID of the assigner",
          "type": "string",
          "x-nullable": true
        },
        "associations": {
          "x-ms-summary": "Associations",
          "description": "List of associations (Library content)",
          "items": {
            "$ref": "#/definitions/Association"
          },
          "type": "array"
        },
        "contentRefs": {
          "x-ms-summary": "Content Reference Objects",
          "description": "List of content references (WorkSpace and DocCenter content)",
          "items": {
            "$ref": "#/definitions/ContentRef"
          },
          "type": "array"
        },
        "createdAt": {
          "x-ms-summary": "Created At",
          "description": "Date string for created date",
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "x-ms-summary": "Creator ID",
          "description": "User ID of the creator",
          "type": "string"
        },
        "customProperties": {
          "x-ms-summary": "Custom Properties",
          "description": "List of custom properties",
          "items": {
            "$ref": "#/definitions/CustomPropertyValues"
          },
          "type": "array"
        },
        "followers": {
          "x-ms-summary": "Followers",
          "description": "List of followers",
          "items": {
            "$ref": "#/definitions/Follower"
          },
          "type": "array"
        },
        "formRef": {
          "x-ms-summary": "Form Ref",
          "description": "Form reference object",
          "x-nullable": true
        },
        "id": {
          "x-ms-summary": "Request ID",
          "type": "string"
        },
        "note": {
          "x-ms-summary": "Note",
          "description": "Note for notifications on status changes",
          "type": "string",
          "x-nullable": true
        },
        "plannedDuration": {
          "x-ms-summary": "Planned Duration",
          "description": "Planned duration in days",
          "format": "int32",
          "type": "integer"
        },
        "plannedEndDate": {
          "x-ms-summary": "Planned End Date",
          "description": "Date string of planned end date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "plannedStartDate": {
          "x-ms-summary": "Plannted Start Date",
          "description": "Date string of planned start date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "priority": {
          "x-ms-summary": "Priority",
          "description": "Priority value",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ],
          "type": "string",
          "x-nullable": true
        },
        "projectId": {
          "x-ms-summary": "Project ID",
          "description": "Project ID of the project the request is associated with",
          "type": "string",
          "x-nullable": true
        },
        "rank": {
          "x-ms-summary": "Rank",
          "description": "Rank of request in request list",
          "type": "string"
        },
        "requestFormCustomPropertyOption": {
          "$ref": "#/definitions/RequestFormCustomProperties"
        },
        "spaceId": {
          "x-ms-summary": "Space ID",
          "type": "string"
        },
        "statusSchemaId": {
          "x-ms-summary": "Status Schema ID",
          "type": "string"
        },
        "stepId": {
          "x-ms-summary": "Step ID",
          "description": "Step ID indicating the status value",
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "x-ms-summary": "Title",
          "description": "Title of the request",
          "type": "string"
        },
        "updatedAt": {
          "x-ms-summary": "Updated At",
          "description": "Date the request was last updated",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PlannerRequestQueryResponse": {
      "properties": {
        "count": {
          "x-ms-summary": "Count",
          "description": "Number of records returned",
          "format": "int32",
          "type": "integer"
        },
        "cursor": {
          "x-ms-summary": "Cursor",
          "description": "Cursor used for pagination",
          "type": "string"
        },
        "items": {
          "x-ms-summary": "Request objects",
          "description": "List of request objects in the response",
          "items": {
            "$ref": "#/definitions/PlannerRequest"
          },
          "type": "array"
        },
        "limit": {
          "x-ms-summary": "Limit",
          "description": "Number to limit records",
          "format": "int32",
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "type": "object"
    },
    "PlannerSubTask": {
      "properties": {
        "actualDuration": {
          "x-ms-summary": "Actual Duration",
          "description": "Calculated actual duration in days",
          "format": "int32",
          "type": "integer"
        },
        "actualEndDate": {
          "x-ms-summary": "Actual End Date",
          "description": "Date when work on the task was completed",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "actualStartDate": {
          "x-ms-summary": "Actual Start Date",
          "description": "Date when work on the task started",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "assigneeId": {
          "x-ms-summary": "Assignee ID",
          "description": "User ID of assignee",
          "type": "string",
          "x-nullable": true
        },
        "assignerId": {
          "x-ms-summary": "Assigner ID",
          "description": "User ID of the last user to add an assignee",
          "type": "string",
          "x-nullable": true
        },
        "associations": {
          "x-ms-summary": "Associations",
          "description": "List of associations on a task",
          "items": {
            "$ref": "#/definitions/Association"
          },
          "type": "array"
        },
        "copyFrom": {
          "x-ms-summary": "Copy From",
          "description": "Task ID that task was copied from",
          "type": "string",
          "x-nullable": true
        },
        "createdAt": {
          "x-ms-summary": "Created At",
          "description": "Date the task was created",
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "x-ms-summary": "Creator ID",
          "description": "User ID of creator",
          "type": "string"
        },
        "customProperties": {
          "x-ms-summary": "Custom Properties",
          "description": "List of custom properties on a task",
          "items": {
            "$ref": "#/definitions/CustomPropertyValues"
          },
          "type": "array",
          "x-nullable": true
        },
        "description": {
          "x-ms-summary": "Description",
          "description": "Description of task",
          "type": "string"
        },
        "followers": {
          "x-ms-summary": "Followers",
          "description": "List of followers on a task",
          "items": {
            "$ref": "#/definitions/Follower"
          },
          "type": "array"
        },
        "id": {
          "x-ms-summary": "Task ID",
          "type": "string"
        },
        "isTemplate": {
          "x-ms-summary": "Is Template",
          "description": "Indicates if a task is part of a template",
          "type": "boolean"
        },
        "maxRank": {
          "x-ms-summary": "Max Rank",
          "description": "Maximum rank",
          "type": "string",
          "x-nullable": true
        },
        "minRank": {
          "x-ms-summary": "Min Rank",
          "description": "Minimum rank",
          "type": "string",
          "x-nullable": true
        },
        "parentId": {
          "x-ms-summary": "Parent ID",
          "description": "Task ID of parent if task is a subtask",
          "type": "string",
          "x-nullable": true
        },
        "plannedDuration": {
          "x-ms-summary": "Planned Duration",
          "description": "Planned duration in days",
          "format": "int32",
          "type": "integer"
        },
        "plannedEndDate": {
          "x-ms-summary": "Planned End Date",
          "description": "Date string of end date (due date)",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "plannedStartDate": {
          "x-ms-summary": "Planned Start Date",
          "description": "Date string of start date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "priority": {
          "x-ms-summary": "Priority",
          "description": "Priority value",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ],
          "type": "string",
          "x-nullable": true
        },
        "projectId": {
          "x-ms-summary": "Project ID",
          "description": "Project ID the task belongs to",
          "type": "string",
          "x-nullable": true
        },
        "rank": {
          "x-ms-summary": "Rank",
          "description": "Rank of task in a task list",
          "type": "string"
        },
        "spaceId": {
          "x-ms-summary": "Space ID",
          "type": "string"
        },
        "statusSchemaId": {
          "x-ms-summary": "Status Schema ID",
          "type": "string"
        },
        "stepId": {
          "x-ms-summary": "Step ID",
          "description": "Id of step in status schema",
          "format": "int32",
          "type": "integer"
        },
        "templateId": {
          "x-ms-summary": "Template ID",
          "description": "Template ID of the template the task belongs to",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "x-ms-summary": "Title",
          "description": "Title of task",
          "type": "string"
        },
        "type": {
          "x-ms-summary": "Type",
          "description": "Type of task",
          "enum": [
            "request",
            "task"
          ],
          "type": "string"
        },
        "updatedAt": {
          "x-ms-summary": "Update At",
          "description": "Date the task was last updated",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PlannerTask": {
      "properties": {
        "actualDuration": {
          "x-ms-summary": "Actual Duration",
          "description": "Calculated actual duration in days",
          "format": "int32",
          "type": "integer"
        },
        "actualEndDate": {
          "x-ms-summary": "Actual End Date",
          "description": "Date when work on the task was completed",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "actualStartDate": {
          "x-ms-summary": "Actual Start Date",
          "description": "Date when work on the task started",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "assigneeId": {
          "x-ms-summary": "Assigne ID",
          "description": "User ID of assignee",
          "type": "string",
          "x-nullable": true
        },
        "assignerId": {
          "x-ms-summary": "Assigner ID",
          "description": "User ID of the last user to add an assignee",
          "type": "string",
          "x-nullable": true
        },
        "associations": {
          "x-ms-summary": "Associations",
          "description": "List of associations on a task",
          "items": {
            "$ref": "#/definitions/Association"
          },
          "type": "array"
        },
        "copyFrom": {
          "x-ms-summary": "Copy From",
          "description": "Task ID that task was copied from",
          "type": "string",
          "x-nullable": true
        },
        "createdAt": {
          "x-ms-summary": "Created At",
          "description": "Date the task was created",
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "x-ms-summary": "Creator ID",
          "description": "User ID of creator",
          "type": "string"
        },
        "customProperties": {
          "x-ms-summary": "Custom Properties",
          "description": "List of custom properties on a task",
          "items": {
            "$ref": "#/definitions/CustomPropertyValues"
          },
          "type": "array",
          "x-nullable": true
        },
        "description": {
          "x-ms-summary": "Description",
          "description": "Description of task",
          "type": "string"
        },
        "followers": {
          "x-ms-summary": "Followers",
          "description": "List of followers on a task",
          "items": {
            "$ref": "#/definitions/Follower"
          },
          "type": "array"
        },
        "id": {
          "x-ms-summary": "Task ID",
          "type": "string"
        },
        "isTemplate": {
          "x-ms-summary": "Is Template",
          "description": "Indicates if a task is part of a template",
          "type": "boolean"
        },
        "maxRank": {
          "x-ms-summary": "Max Rank",
          "description": "Maximum rank",
          "type": "string",
          "x-nullable": true
        },
        "minRank": {
          "x-ms-summary": "Min Rank",
          "description": "Minimum rank",
          "type": "string",
          "x-nullable": true
        },
        "parentId": {
          "x-ms-summary": "Parent ID",
          "description": "Task ID of parent if task is a subtask",
          "type": "string",
          "x-nullable": true
        },
        "plannedDuration": {
          "x-ms-summary": "Planned Duration",
          "description": "Planned duration in days",
          "format": "int32",
          "type": "integer"
        },
        "plannedEndDate": {
          "x-ms-summary": "Planned End Date",
          "description": "Date string of planned end date (due date)",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "plannedStartDate": {
          "x-ms-summary": "Planned Start Date",
          "description": "Date string of planned start date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "priority": {
          "x-ms-summary": "Priority",
          "description": "Priority value",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ],
          "type": "string",
          "x-nullable": true
        },
        "projectId": {
          "x-ms-summary": "Project ID",
          "description": "Project ID the task belongs to",
          "type": "string",
          "x-nullable": true
        },
        "rank": {
          "x-ms-summary": "Rank",
          "description": "Rank of task in a task list",
          "type": "string"
        },
        "spaceId": {
          "x-ms-summary": "Space ID",
          "type": "string"
        },
        "statusSchemaId": {
          "x-ms-summary": "Status Schema ID",
          "type": "string"
        },
        "stepId": {
          "x-ms-summary": "Step ID",
          "description": "Id of step in status schema",
          "format": "int32",
          "type": "integer"
        },
        "subTaskIds": {
          "x-ms-summary": "Sub Task IDs",
          "description": "List of subtask IDs",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subTasks": {
          "x-ms-summary": "Sub Tasks",
          "description": "List of subtasks on the task",
          "items": {
            "$ref": "#/definitions/PlannerSubTask"
          },
          "type": "array",
          "x-nullable": true
        },
        "templateId": {
          "x-ms-summary": "Template ID",
          "description": "Template ID of the template the task belongs to",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "x-ms-summary": "Title",
          "description": "Title of task",
          "type": "string"
        },
        "type": {
          "x-ms-summary": "Type",
          "description": "Type of task",
          "enum": [
            "request",
            "task"
          ],
          "type": "string"
        },
        "updatedAt": {
          "x-ms-summary": "Updated At",
          "description": "Date the task was last updated",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PlannerTaskQueryResponse": {
      "properties": {
        "count": {
          "x-ms-summary": "Count",
          "description": "Number of records returned",
          "format": "int32",
          "type": "integer"
        },
        "cursor": {
          "x-ms-summary": "Cursor",
          "description": "Cursor used for pagination",
          "type": "string"
        },
        "items": {
          "x-ms-summary": "Task objects",
          "description": "List of task objects in the response",
          "items": {
            "$ref": "#/definitions/PlannerTask"
          },
          "type": "array"
        },
        "limit": {
          "x-ms-summary": "Limit",
          "description": "Number to limit records",
          "format": "int32",
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "type": "object"
    },
    "PossibleValuesItem": {
      "properties": {
        "id": {
          "x-ms-summary": "Value ID",
          "type": "string"
        },
        "order": {
          "x-ms-summary": "Order",
          "description": "Number to indicate order",
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "x-ms-summary": "Value",
          "description": "Actual value data"
        }
      },
      "type": "object"
    },
    "ProblemDetails": {
      "additionalProperties": {},
      "properties": {
        "detail": {
          "x-ms-summary": "Detail",
          "type": "string",
          "x-nullable": true
        },
        "instance": {
          "x-ms-summary": "Instance",
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "x-ms-summary": "Status",
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "title": {
          "x-ms-summary": "Title",
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "x-ms-summary": "type",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ProjectAssociatedNodes": {
      "properties": {
        "nodeId": {
          "x-ms-summary": "Node ID",
          "type": "string"
        },
        "nodeType": {
          "x-ms-summary": "Node Type",
          "description": "Node type of the association",
          "enum": [
            "project",
            "task",
            "request",
            "content"
          ],
          "type": "string"
        },
        "spaceId": {
          "x-ms-summary": "Space ID",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestFormCustomProperties": {
      "description": "Request form custom properties",
      "properties": {
        "createdAt": {
          "x-ms-summary": "Created At",
          "description": "Date string of created date",
          "format": "date-time",
          "type": "string"
        },
        "customProperties": {
          "x-ms-summary": "Custom Properties",
          "description": "List of custom properties",
          "items": {
            "$ref": "#/definitions/CustomProperty"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ScopeSettingsItemDefinition": {
      "properties": {
        "isRequired": {
          "x-ms-summary": "Is Required",
          "description": "Indicator on whether a field is required or not",
          "type": "boolean"
        },
        "scope": {
          "x-ms-summary": "Scope",
          "description": "Type list of node types that the custom property definition belongs to",
          "enum": [
            "task",
            "project",
            "content",
            "request"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "StatusSchema": {
      "properties": {
        "createdAt": {
          "x-ms-summary": "Created At",
          "description": "Date string of created date",
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "x-ms-summary": "Creator ID",
          "description": "User ID of creator",
          "type": "string"
        },
        "id": {
          "x-ms-summary": "Status schema ID",
          "type": "string"
        },
        "isDefault": {
          "x-ms-summary": "Is Default",
          "description": "Indicator on if the status schema is the default schema",
          "type": "boolean"
        },
        "name": {
          "x-ms-summary": "Name",
          "description": "Name of status schema",
          "type": "string"
        },
        "spaceId": {
          "x-ms-summary": "Space ID",
          "type": "string"
        },
        "steps": {
          "x-ms-summary": "Steps",
          "description": "List of steps and their values",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "transitions": {
          "x-ms-summary": "Transitions",
          "description": "List of transition rules",
          "items": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "type": "array"
        },
        "type": {
          "x-ms-summary": "Type",
          "description": "Node type the status schema can be used for",
          "enum": [
            "task",
            "request"
          ],
          "type": "string"
        },
        "updatedAt": {
          "x-ms-summary": "Updated At",
          "description": "Date the status schema was last updated",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StatusSchemaQueryResponse": {
      "properties": {
        "count": {
          "x-ms-summary": "Count",
          "description": "Number of records returned",
          "format": "int32",
          "type": "integer"
        },
        "cursor": {
          "x-ms-summary": "Cursor",
          "description": "Cursor used for pagination",
          "type": "string"
        },
        "items": {
          "x-ms-summary": "Status Schema Objects",
          "description": "List of status schema objects in the response",
          "items": {
            "$ref": "#/definitions/StatusSchema"
          },
          "type": "array"
        },
        "limit": {
          "x-ms-summary": "Limit",
          "description": "Number to limit records",
          "format": "int32",
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "type": "object"
    },
    "UpdateCommentModel": {
      "properties": {
        "annotationPayload": {
          "x-ms-summary": "Annotation Payload",
          "type": "string",
          "x-nullable": true
        },
        "annotationType": {
          "x-ms-summary": "Annotation type",
          "type": "string",
          "x-nullable": true
        },
        "commentContent": {
          "x-ms-summary": "Comment Content",
          "description": "Content of the comment",
          "type": "string"
        },
        "isResolved": {
          "x-ms-summary": "Is Resolved",
          "description": "True/false on whether the comment is resolved",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "UpdateProject": {
      "properties": {
        "customProperties": {
          "x-ms-summary": "Custom Properties",
          "description": "List of custom properties",
          "items": {
            "$ref": "#/definitions/CustomPropertyValues"
          },
          "type": "array",
          "x-nullable": true
        },
        "description": {
          "x-ms-summary": "Description",
          "description": "Description of project",
          "type": "string"
        },
        "isActive": {
          "x-ms-summary": "Is Active",
          "description": "Indicator on whether a project is active?",
          "type": "boolean"
        },
        "managerId": {
          "x-ms-summary": "Manager ID",
          "description": "User ID of project manager",
          "type": "string",
          "x-nullable": true
        },
        "maxRank": {
          "x-ms-summary": "Max Rank",
          "description": "Maximum rank number",
          "type": "string",
          "x-nullable": true
        },
        "minRank": {
          "x-ms-summary": "Min Rank",
          "description": "Minimum rank number",
          "type": "string",
          "x-nullable": true
        },
        "plannedDuration": {
          "x-ms-summary": "Planned Duration",
          "description": "Planned duration in days",
          "format": "int32",
          "type": "integer"
        },
        "plannedEndDate": {
          "x-ms-summary": "Planned End Date",
          "description": "Date string of planned end date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "plannedStartDate": {
          "x-ms-summary": "Planned Start Date",
          "description": "Date string of planned start date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "x-ms-summary": "Title",
          "description": "Title of project",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateRequest": {
      "properties": {
        "assigneeId": {
          "x-ms-summary": "Assignee ID",
          "description": "User ID of the assignee",
          "type": "string",
          "x-nullable": true
        },
        "contentRefs": {
          "x-ms-summary": "Content Reference Objects",
          "description": "List of content references (WorkSpace and DocCenter content)",
          "items": {
            "$ref": "#/definitions/ContentRef"
          },
          "type": "array",
          "x-nullable": true
        },
        "customProperties": {
          "x-ms-summary": "Custom Properties",
          "description": "List of custom properties",
          "items": {
            "$ref": "#/definitions/CustomPropertyValuesInput"
          },
          "type": "array",
          "x-nullable": true
        },
        "formRef": {
          "x-ms-summary": "Form Reference",
          "description": "Form reference object",
          "x-nullable": true
        },
        "note": {
          "x-ms-summary": "Note",
          "description": "Note used for notifications on status changes",
          "type": "string",
          "x-nullable": true
        },
        "plannedDuration": {
          "x-ms-summary": "Planned Duration",
          "description": "Planned duration in days",
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "plannedEndDate": {
          "x-ms-summary": "Planned End Date",
          "description": "Date string of planned end date (due date)",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "plannedStartDate": {
          "x-ms-summary": "Planned Start Date",
          "description": "Date string of planned start date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "priority": {
          "x-ms-summary": "Priority",
          "description": "Priority value",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ],
          "type": "string",
          "x-nullable": true
        },
        "projectId": {
          "x-ms-summary": "Project ID",
          "description": "Project ID of the project the request belongs to",
          "type": "string",
          "x-nullable": true
        },
        "stepId": {
          "x-ms-summary": "Step ID",
          "description": "Step ID indicating status",
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "title": {
          "x-ms-summary": "Title",
          "description": "Title of the request",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "UpdateTask": {
      "properties": {
        "assigneeId": {
          "x-ms-summary": "Assignee ID",
          "description": "User ID of the assignee",
          "type": "string",
          "x-nullable": true
        },
        "customProperties": {
          "x-ms-summary": "Custom Properties",
          "description": "List of custom properties",
          "items": {
            "$ref": "#/definitions/CustomPropertyValuesInput"
          },
          "type": "array",
          "x-nullable": true
        },
        "description": {
          "x-ms-summary": "Description",
          "description": "Description of task",
          "type": "string",
          "x-nullable": true
        },
        "parentId": {
          "x-ms-summary": "Parent ID",
          "description": "Task ID of parent task",
          "type": "string",
          "x-nullable": true
        },
        "plannedDuration": {
          "x-ms-summary": "Planned Duration",
          "description": "Planned duration in days",
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "plannedEndDate": {
          "x-ms-summary": "Planned End Date",
          "description": "Date string of planned end date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "plannedStartDate": {
          "x-ms-summary": "Planned Start Date",
          "description": "Date string of planned start date",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "priority": {
          "x-ms-summary": "Priority",
          "description": "Priority value",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ],
          "type": "string",
          "x-nullable": true
        },
        "projectId": {
          "x-ms-summary": "Project ID",
          "description": "Project ID that the task belongs to",
          "type": "string",
          "x-nullable": true
        },
        "stepId": {
          "x-ms-summary": "Step ID",
          "description": "Step ID indicating the task status",
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "title": {
          "x-ms-summary": "Title",
          "description": "Title of task",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ValueSchemaPropertyDefinition": {
      "description": "Value schema definition",
      "properties": {
        "max": {
          "x-ms-summary": "Maximum number",
          "type": "string"
        },
        "min": {
          "x-ms-summary": "Minimum number",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "parameters": {},
  "responses": {},
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://seismic.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://seismic.com/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Marketing;Sales and CRM"
    }
  ],
  "securityDefinitions": {
    "oauth2-auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://auth.seismic.com/central/connect/authorize",
      "tokenUrl": "https://auth.seismic.com/central/connect/token",
      "scopes": {
        "seismic.planner.view seismic.planner.manage offline_access": "seismic.planner.view seismic.planner.manage offline_access"
      }
    }
  },
  "security": [
    {
      "oauth2-auth": [
        "seismic.planner.view seismic.planner.manage offline_access"
      ]
    }
  ],
  "tags": [
    {
      "description": "Comment endpoints",
      "name": "Comment"
    },
    {
      "description": "Project endpoints",
      "name": "Project"
    },
    {
      "description": "Request endpoints",
      "name": "Request"
    },
    {
      "description": "Status Schema endpoints",
      "name": "Status Schema"
    },
    {
      "description": "Task endpoints",
      "name": "Task"
    }
  ]
}