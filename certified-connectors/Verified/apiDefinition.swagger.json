{
  "swagger": "2.0",
  "info": {
    "version": "v2.1",
    "title": "Verified",
    "description": "Connector for the Verified API to enable the creation of custom document signing processes.",
    "contact": {
      "name": "Verified",
      "url": "https://verified.eu/en/#about-us",
      "email": "support@verified.eu"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://verified.eu/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://verified.eu/trust-center"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Content and Files;Productivity"
    }
  ],
  "host": "app.verified.eu",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth": {
      "post": {
        "operationId": "PostAuthenticate",
        "summary": "Generate security token",
        "description": "Get's the authentication token from the Verified API.",
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "Access token",
                  "title": "Token"
                }
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/companies/{company-id}": {
      "get": {
        "operationId": "GetCompaniesCompanyId",
        "summary": "Get company by id",
        "description": "Gets company information by company id.",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/CompanyId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelopes/{envelope-id}/recipients": {
      "get": {
        "operationId": "GetEnvelopesEnvelopeIdRecipients",
        "summary": "Get all envelope recipients",
        "description": "Gets all recipients of a given envelope",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Recipient"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      },
      "post": {
        "operationId": "PostEnvelopesEnvelopeIdRecipients",
        "summary": "Add recipient to envelope",
        "description": "Adds a recipient to a given envelope",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RecipientInput"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {},
            "headers": {
              "Location": {
                "description": "Location",
                "type": "string",
                "x-ms-summary": "Location"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/envelopes/{envelope-id}/recipients/{recipient-id}": {
      "get": {
        "operationId": "GetEnvelopesEnvelopeIdRecipientsRecipientId",
        "summary": "Get specific recipient for an envelope",
        "description": "Gets a specific recipient for a given envelope",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "$ref": "#/parameters/RecipientId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "x-ms-visibility": "advanced"
      },
      "put": {
        "operationId": "PutEnvelopesEnvelopeIdRecipientsRecipientId",
        "summary": "Update recipient by id",
        "description": "Updates a recipient",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "$ref": "#/parameters/RecipientId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RecipientInput"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelopes/{envelope-id}/documents/{document-id}/files/{file-id}/url": {
      "get": {
        "operationId": "GetEnvelopesEnvelopeIdDocumentsDocumentIdFilesFileIdUrl",
        "summary": "Get file URL by id",
        "description": "Gets the url to a file by the file id.",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "$ref": "#/parameters/DocumentId"
          },
          {
            "$ref": "#/parameters/FileId"
          },
          {
            "name": "asObject",
            "in": "query",
            "type": "boolean",
            "description": "Defines whether the response is an Object",
            "x-ms-summary": "As Object",
            "enum": [
              true,
              false
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "File URL"
                }
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/companies/{company-id}/users/{user-id}/settings": {
      "get": {
        "operationId": "GetCompaniesCompanyIdUsersUserIdSettings",
        "summary": "Get user settings",
        "description": "Gets a users settings by userid",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/CompanyId"
          },
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "User Id",
            "description": "ID of the user in question",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Setting"
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelopes/{envelope-id}": {
      "get": {
        "operationId": "GetEnvelopesEnvelopeId",
        "summary": "Get envelope by id",
        "description": "Gets envelope details by envelope id",
        "tags": [
          "cleaned"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Envelope"
            }
          }
        },
        "x-ms-visibility": "important"
      },
      "delete": {
        "operationId": "DeleteEnvelopesEnvelopeId",
        "summary": "Delete envelope by id",
        "description": "Delets an envelope identified by its id",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "x-ms-visibility": "advanced"
      },
      "put": {
        "operationId": "PutEnvelopesEnvelopeId",
        "summary": "Update envelope settings",
        "description": "Updates Settings of a given envelope.",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EnvelopeSettings"
            },
            "required": true,
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelopes/{envelope-id}/publish-status": {
      "put": {
        "operationId": "PutEnvelopesEnvelopeIdPublishStatus",
        "summary": "Update publish status for envelope",
        "description": "Updates the publish status of a given envelope",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "published": {
                  "type": "boolean",
                  "title": "Published",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "important"
                }
              },
              "example": {
                "published": true
              },
              "x-ms-visibility": "important",
              "required": [
                "published"
              ]
            },
            "required": true,
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/envelopes/{envelope-id}/documents/{document-id}/templates/{template-id}/user-data": {
      "post": {
        "operationId": "PostEnvelopesEnvelopeIdDocumentsDocumentIdTemplatesTemplateIdUserData",
        "summary": "Generate Document from Template",
        "description": "Generates a document from a preconfigured template.",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "$ref": "#/parameters/DocumentId"
          },
          {
            "name": "template-id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Template Id",
            "description": "The Id of the template which should be used",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object"
            },
            "required": true,
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelopes/{envelope-id}/abort-status": {
      "put": {
        "operationId": "PutEnvelopesEnvelopeIdAbortStatus",
        "summary": "Set envelope abort status",
        "description": "Sets the status of a given envelope to aborted",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                }
              },
              "x-ms-visibility": "advanced"
            },
            "required": false,
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelopes/{envelope-id}/documents/{document-id}/files": {
      "get": {
        "operationId": "GetEnvelopesEnvelopeIdDocumentsDocumentIdFiles",
        "summary": "Get files by document id",
        "description": "Get all files connected to a given document",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "$ref": "#/parameters/DocumentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/File"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      },
      "post": {
        "operationId": "PostEnvelopesEnvelopeIdDocumentsDocumentIdFiles",
        "summary": "Add file to document",
        "description": "Adds a file to a existing document",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "$ref": "#/parameters/DocumentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FileInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/auth/userinfo": {
      "get": {
        "operationId": "GetAuthUserinfo",
        "summary": "Get user information",
        "description": "Gets information of the currently logged in user",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelopes/{envelope-id}/documents/{document-id}/status/aborted": {
      "post": {
        "operationId": "PostEnvelopesEnvelopeIdDocumentsDocumentIdStatusAborted",
        "summary": "Set document abort status",
        "description": "Sets the status of a given document to aborted",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "$ref": "#/parameters/DocumentId"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelope-descriptors/{envelope-descriptor-id}": {
      "get": {
        "operationId": "GetEnvelopeDescriptorsEnvelopeDescriptorId",
        "summary": "Get descriptor by id",
        "description": "Gets information of a given descriptor by its Id",
        "tags": [
          "cleaned"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeDescriptorId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Descriptor"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelopes/{envelope-id}/trash-status": {
      "put": {
        "operationId": "PutEnvelopesEnvelopeIdTrashStatus",
        "summary": "Set envelope trash status",
        "description": "Sets the status of a given envelope to trashed",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string",
                  "title": "Comment"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/query/envelopes": {
      "get": {
        "operationId": "GetQueryEnvelopes",
        "summary": "Query all envelopes",
        "description": "Queries all envelopes matching a given filter",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/Filters"
          },
          {
            "name": "from",
            "in": "query",
            "type": "integer",
            "x-ms-summary": "From",
            "description": "From date"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "x-ms-summary": "Limit",
            "description": "Limit amount"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Sort",
            "description": "Sort by"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvelopeDescriptorString"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelope-descriptors": {
      "get": {
        "operationId": "GetEnvelopeDescriptors",
        "summary": "Get all descriptors",
        "description": "Gets a list of all descriptors present in the current company. The list could be filtered.",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/Filters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Descriptor"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/flows/{flow-id}/jobs/{envelope-id}": {
      "get": {
        "operationId": "GetFlowsFlowIdJobsEnvelopeId",
        "summary": "Get flow state by envelopeid",
        "description": "Gets the current flow state of a given envelope",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "name": "flow-id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Flow Id",
            "description": "Id of the flow in question",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "title": "Token"
                }
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelopes/{envelope-id}/documents/{document-id}": {
      "get": {
        "operationId": "GetEnvelopesEnvelopeIdDocumentsDocumentId",
        "summary": "Get document by id",
        "description": "Gets document information by its id",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "$ref": "#/parameters/DocumentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "x-ms-visibility": "advanced"
      },
      "delete": {
        "operationId": "DeleteEnvelopesEnvelopeIdDocumentsDocumentId",
        "summary": "Delete document by id",
        "description": "Deletes a document from the Verified Portal.",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "$ref": "#/parameters/DocumentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelope-descriptors/{envelope-descriptor-id}/envelopes": {
      "post": {
        "operationId": "PostEnvelopeDescriptorsEnvelopeDescriptorIdEnvelopes",
        "summary": "Create envelope - descriptor",
        "description": "Creates an envelope based on a specific descriptor.",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeDescriptorId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EnvelopeInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelopes/{envelope-id}/documents": {
      "get": {
        "operationId": "GetEnvelopesEnvelopeIdDocuments",
        "summary": "Get all documents by envelopeid",
        "description": "Get all documents related to a given envelope",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Document"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      },
      "post": {
        "operationId": "PostEnvelopesEnvelopeIdDocuments",
        "summary": "Add document to envelope",
        "description": "Add a new document to an existing envelope",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DocumentInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {},
            "headers": {
              "Location": {
                "description": "Location",
                "type": "string"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/envelopes/{envelope-id}/jobs/get.sign.link": {
      "post": {
        "operationId": "PostEnvelopesEnvelopeIdJobsGetSignLink",
        "summary": "Create signature link",
        "description": "Implementation is flow specific and may be missing for your specific flow.",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "recipient": {
                  "type": "object",
                  "title": "Recipient",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Id"
                    }
                  }
                },
                "redirectTo": {
                  "type": "string",
                  "description": "Full URL to redirect the user to after sign.",
                  "format": "uri",
                  "title": "Redirect To"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "getSignLink": {
                  "type": "object",
                  "title": "Get Sign Link",
                  "properties": {
                    "recipient": {
                      "type": "object",
                      "title": "Recipient",
                      "properties": {
                        "{recipient-id}": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "title": "URL"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelopes/{envelope-id}/documents/{document-id}/files/{file-id}": {
      "get": {
        "operationId": "GetEnvelopesEnvelopeIdDocumentsDocumentIdFilesFileId",
        "summary": "Get file by id",
        "description": "Gets information about a file by its id.",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "$ref": "#/parameters/DocumentId"
          },
          {
            "$ref": "#/parameters/FileId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelope-descriptors/default/envelopes": {
      "post": {
        "operationId": "PostEnvelopeDescriptorsDefaultEnvelopes",
        "summary": "Create envelope - default",
        "description": "Creates a new envelope using the default descriptor",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EnvelopeInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/envelope-descriptors/default": {
      "get": {
        "operationId": "GetEnvelopeDescriptorsDefault",
        "summary": "Get default descriptor",
        "description": "Gets the default descriptor for envelopes",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/Filters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Descriptor"
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/envelopes/{envelope-id}/jobs/send.notification": {
      "post": {
        "operationId": "PostEnvelopesEnvelopIdJobsSendNotification",
        "summary": "Send notification",
        "description": "Sends a notification to recepients of a given envelope,",
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/XNamespace"
          },
          {
            "$ref": "#/parameters/EnvelopeId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "envelope": {
                  "type": "object",
                  "title": "Envelope",
                  "properties": {
                    "greeting": {
                      "type": "string",
                      "title": "Greeting"
                    }
                  }
                },
                "recipient": {
                  "type": "object",
                  "title": "Recipient",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the recipient the notification should be send to.",
                      "title": "Recipient Id",
                      "x-ms-visibility": "important"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "required": [
                "recipient"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          }
        },
        "x-ms-visibility": "advanced"
      }
    }
  },
  "definitions": {
    "Setting": {
      "type": "object",
      "properties": {
        "global": {
          "type": "string",
          "title": "Global"
        },
        "preferences": {
          "type": "object",
          "title": "Preferences",
          "properties": {
            "signatoryLanguage": {
              "type": "string",
              "title": "Signatory Language"
            },
            "greeting": {
              "type": "string",
              "title": "Greeting"
            },
            "signingMethod": {
              "type": "string",
              "title": "Signing Method"
            },
            "reminderOffset": {
              "type": "string",
              "title": "Reminder Offset"
            }
          }
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "givenName": {
          "type": "string",
          "title": "First Name"
        },
        "familyName": {
          "type": "string",
          "title": "Last Name"
        },
        "email": {
          "type": "string",
          "title": "Email"
        },
        "metadata": {
          "type": "object",
          "properties": {
            "language": {
              "type": "string",
              "title": "Language"
            }
          }
        },
        "missingPassword": {
          "type": "boolean",
          "title": "Missing Password"
        },
        "isEnabled": {
          "type": "boolean",
          "title": "Is Enabled"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace"
        },
        "enabled": {
          "type": "boolean",
          "title": "Enabled"
        },
        "uid": {
          "type": "string",
          "title": "UID"
        },
        "id": {
          "type": "string",
          "title": "Id"
        },
        "roles": {
          "type": "array",
          "title": "Roles",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "validated": {
          "type": "boolean",
          "title": "Validated"
        }
      }
    },
    "Company": {
      "type": "object",
      "title": "Company",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name"
        },
        "regNumber": {
          "type": "string",
          "title": "Reg. Number"
        },
        "created": {
          "type": "string",
          "title": "Created"
        },
        "modified": {
          "type": "string",
          "title": "Modified"
        },
        "address": {
          "type": "string",
          "title": "Address"
        },
        "city": {
          "type": "string",
          "title": "City"
        },
        "zipCode": {
          "type": "string",
          "title": "Zip Code"
        },
        "logo": {
          "type": "string",
          "title": "Logo"
        },
        "country": {
          "type": "string",
          "title": "Country"
        },
        "uid": {
          "type": "string",
          "title": "UId"
        },
        "id": {
          "type": "string",
          "title": "Id"
        }
      }
    },
    "RecipientInput": {
      "type": "object",
      "properties": {
        "givenName": {
          "type": "string",
          "title": "First Name"
        },
        "familyName": {
          "type": "string",
          "title": "Last Name"
        },
        "language": {
          "type": "string",
          "pattern": "^[a-z]{2}_[A-Z]{2}$",
          "title": "Language",
          "enum": [
            "nb-NO",
            "sv-SE",
            "da-DK",
            "fi-FI",
            "lt-LT",
            "lv-LV"
          ]
        },
        "signingMethod": {
          "type": "string",
          "title": "Signing Method",
          "x-ms-visibility": "important",
          "enum": [
            "email",
            "sms",
            "bankid-no",
            "bankid-se",
            "bankid-dk",
            "nets-esign-no",
            "nets-esign-se",
            "nets-esign-dk",
            "nets-esign-tupas",
            "nets-eident-mobiilivarmenne",
            "nets-eident-fi",
            "nets-eident-dk",
            "eideasy-ee-ideideasy-lv-id",
            "eideasy-lt-id",
            "touch-sign"
          ]
        },
        "email": {
          "type": "string",
          "title": "E-Mail"
        },
        "telephone": {
          "type": "string",
          "description": "Format should be +<countryCode><telephonenumber>",
          "title": "Telephone",
          "x-ms-visibility": "advanced"
        },
        "order": {
          "type": "integer",
          "title": "Order",
          "x-ms-visibility": "advanced"
        },
        "role": {
          "$ref": "#/definitions/RoleInput"
        },
        "secure": {
          "type": "boolean",
          "title": "Secure",
          "x-ms-visibility": "advanced"
        },
        "sms": {
          "type": "boolean",
          "title": "SMS",
          "x-ms-visibility": "advanced"
        },
        "ssn": {
          "type": "string",
          "title": "SSN",
          "x-ms-visibility": "advanced"
        },
        "bank": {
          "type": "string",
          "title": "Bank",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "givenName",
        "familyName",
        "language",
        "email",
        "signingMethod",
        "role"
      ]
    },
    "Recipient": {
      "type": "object",
      "title": "Recipient",
      "properties": {
        "uid": {
          "type": "string",
          "title": "UID",
          "description": "Recipient UID"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace",
          "description": "Recipient Namespace"
        },
        "created": {
          "type": "string",
          "title": "Created",
          "description": "Recipient Created"
        },
        "role": {
          "$ref": "#/definitions/RoleActionString"
        },
        "familyName": {
          "type": "string",
          "title": "Last Name",
          "description": "Recipient Last Name"
        },
        "givenName": {
          "type": "string",
          "title": "First Name",
          "description": "Recipient Frist Name"
        },
        "language": {
          "type": "string",
          "title": "Language",
          "description": "Recipient Language"
        },
        "email": {
          "type": "string",
          "title": "Email",
          "description": "Recipient Email"
        },
        "signingMethod": {
          "type": "string",
          "title": "Signing Method",
          "description": "Recipient Signing Methid"
        },
        "order": {
          "type": "integer",
          "title": "Order",
          "description": "Recipient Order"
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Recipient Id"
        },
        "modified": {
          "type": "string",
          "title": "Modified",
          "description": "Recipient Modified"
        }
      }
    },
    "RoleInput": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "description": "Verifieds name of the action a recipient should execute.",
          "title": "Action",
          "x-ms-visibility": "important"
        },
        "label": {
          "type": "string",
          "description": "Label for the role/action of a recipient",
          "title": "Label",
          "x-ms-visibility": "important"
        },
        "name": {
          "type": "string",
          "description": "Verified name of the role of a recipient",
          "title": "Name",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "action",
        "name",
        "label"
      ]
    },
    "Role": {
      "type": "object",
      "title": "Role",
      "properties": {
        "action": {
          "type": "object",
          "title": "Action",
          "properties": {
            "type": {
              "type": "string",
              "title": "Type"
            },
            "methods": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Method"
              }
            }
          }
        },
        "label": {
          "type": "string",
          "title": "Label",
          "description": "Label"
        },
        "numMax": {
          "type": "integer",
          "title": "Num. Max",
          "description": "Num. Max"
        },
        "numMin": {
          "type": "integer",
          "title": "Num. Min",
          "description": "Num. Min"
        },
        "roleName": {
          "type": "string",
          "title": "Role Name"
        }
      }
    },
    "RoleActionString": {
      "type": "object",
      "title": "Role",
      "properties": {
        "action": {
          "$ref": "#/definitions/ActionString"
        },
        "label": {
          "type": "string",
          "title": "Label",
          "description": "Label"
        },
        "numMax": {
          "type": "integer",
          "title": "Num. Max",
          "description": "Num. Max"
        },
        "numMin": {
          "type": "integer",
          "title": "Num. Min",
          "description": "Num. Min"
        },
        "roleName": {
          "type": "string",
          "title": "Role Name"
        }
      }
    },
    "ActionString": {
      "type": "string",
      "title": "Action",
      "description": "Action"
    },
    "EnvelopeInput": {
      "type": "object",
      "properties": {
        "sender": {
          "type": "object",
          "title": "Sender",
          "properties": {
            "email": {
              "type": "string",
              "title": "Email"
            },
            "givenName": {
              "type": "string",
              "title": "First Name"
            },
            "familyName": {
              "type": "string",
              "title": "Last Name"
            }
          }
        },
        "automaticReminders": {
          "type": "number",
          "title": "Automatic Reminders"
        },
        "expiration": {
          "type": "string",
          "title": "Expiration"
        },
        "documents": {
          "type": "array",
          "title": "Documents",
          "items": {
            "type": "object",
            "properties": {
              "hash": {
                "type": "string",
                "title": "Hash"
              }
            }
          }
        }
      }
    },
    "Envelope": {
      "type": "object",
      "title": "Envelope",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Envelope Id"
        },
        "uid": {
          "type": "string",
          "title": "UID",
          "description": "Envelope UID"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace",
          "description": "Envelope Namespace"
        },
        "version": {
          "type": "integer",
          "title": "Version",
          "description": "Envelope Version"
        },
        "published": {
          "type": "boolean",
          "title": "Published",
          "description": "Envelope Published"
        },
        "completed": {
          "type": "boolean",
          "title": "Complete",
          "description": "Envelope Completed"
        },
        "aborted": {
          "type": "boolean",
          "title": "Aborted",
          "description": "Envelope Avorted"
        },
        "trashed": {
          "type": "boolean",
          "title": "Trashed",
          "description": "Envelope Trashed"
        },
        "sequentialSigning": {
          "type": "boolean",
          "title": "Sequential Signing"
        },
        "automaticReminders": {
          "type": "integer",
          "title": "Autmatic Reminders"
        },
        "created": {
          "type": "string",
          "title": "Created",
          "description": "Envelope Created"
        },
        "modified": {
          "type": "string",
          "title": "Modified",
          "description": "Envelope Modified"
        },
        "expired": {
          "type": "boolean",
          "title": "Expired",
          "description": "Envelope Expired"
        },
        "flow": {
          "$ref": "#/definitions/Flow"
        },
        "descriptor": {
          "$ref": "#/definitions/Descriptor"
        },
        "sender": {
          "$ref": "#/definitions/Person"
        },
        "documents": {
          "type": "array",
          "title": "Documents",
          "items": {
            "$ref": "#/definitions/Document"
          }
        },
        "recipients": {
          "type": "array",
          "title": "Recipients",
          "items": {
            "$ref": "#/definitions/Recipient"
          }
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "owners": {
          "type": "array",
          "title": "Owners",
          "items": {
            "$ref": "#/definitions/Person"
          }
        }
      }
    },
    "EnvelopeDescriptorString": {
      "type": "object",
      "title": "Envelope",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Envelope Id"
        },
        "uid": {
          "type": "string",
          "title": "UID",
          "description": "Envelope UID"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace",
          "description": "Envelope Namespace"
        },
        "version": {
          "type": "integer",
          "title": "Version",
          "description": "Envelope Version"
        },
        "published": {
          "type": "boolean",
          "title": "Published",
          "description": "Envelope Published"
        },
        "completed": {
          "type": "boolean",
          "title": "Complete",
          "description": "Envelope Completed"
        },
        "aborted": {
          "type": "boolean",
          "title": "Aborted",
          "description": "Envelope Avorted"
        },
        "trashed": {
          "type": "boolean",
          "title": "Trashed",
          "description": "Envelope Trashed"
        },
        "sequentialSigning": {
          "type": "boolean",
          "title": "Sequential Signing"
        },
        "automaticReminders": {
          "type": "integer",
          "title": "Autmatic Reminders"
        },
        "created": {
          "type": "string",
          "title": "Created",
          "description": "Envelope Created"
        },
        "modified": {
          "type": "string",
          "title": "Modified",
          "description": "Envelope Modified"
        },
        "expired": {
          "type": "boolean",
          "title": "Expired",
          "description": "Envelope Expired"
        },
        "flow": {
          "$ref": "#/definitions/Flow"
        },
        "descriptor": {
          "type": "string",
          "title": "Descriptor",
          "description": "Envelope descriptor"
        },
        "sender": {
          "$ref": "#/definitions/Person"
        },
        "documents": {
          "type": "array",
          "title": "Documents",
          "items": {
            "$ref": "#/definitions/Document"
          }
        },
        "recipients": {
          "type": "array",
          "title": "Recipients",
          "items": {
            "$ref": "#/definitions/Recipient"
          }
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "owners": {
          "type": "array",
          "title": "Owners",
          "items": {
            "$ref": "#/definitions/Person"
          }
        }
      }
    },
    "EnvelopeSettings": {
      "type": "object",
      "properties": {
        "sequentialSigning": {
          "type": "boolean",
          "title": "Sequential Signing",
          "enum": [
            true,
            false
          ],
          "x-ms-visibility": "important"
        },
        "greeting": {
          "type": "string",
          "title": "Greeting",
          "x-ms-visibility": "important"
        },
        "expiration": {
          "type": "string",
          "format": "date",
          "title": "Expiration",
          "description": "Date in the following format 2017-02-26T21:59:59.999Z",
          "x-ms-visibility": "important"
        },
        "automaticReminders": {
          "type": "number",
          "title": "Automatic Reminders",
          "description": "X Days before expiration",
          "x-ms-visibility": "important"
        }
      }
    },
    "FileInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name"
        },
        "fileType": {
          "type": "string",
          "title": "FileType"
        },
        "hash": {
          "type": "string",
          "title": "Hash"
        }
      },
      "required": [
        "name",
        "fileType"
      ]
    },
    "File": {
      "type": "object",
      "title": "File",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "File Id"
        },
        "url": {
          "type": "string",
          "title": "URL",
          "description": "File URL"
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "File Name"
        },
        "mimeType": {
          "type": "string",
          "title": "MimeType"
        },
        "fileType": {
          "type": "string",
          "title": "File Type"
        },
        "storagePath": {
          "type": "string",
          "title": "Storage Path"
        },
        "uploadedAt": {
          "type": "string",
          "title": "Uploaded At"
        },
        "created": {
          "type": "string",
          "title": "Created",
          "description": "File Created"
        },
        "owners": {
          "type": "array",
          "title": "Owners",
          "items": {
            "type": "object",
            "properties": {
              "uid": {
                "type": "string",
                "title": "UID",
                "description": "File Owner UID"
              },
              "_id": {
                "type": "string",
                "title": "Id",
                "description": "File Owner Id"
              }
            }
          }
        },
        "namespace": {
          "type": "string",
          "title": "Namespace"
        },
        "uid": {
          "type": "string",
          "title": "UID",
          "description": "File UID"
        }
      }
    },
    "Flow": {
      "type": "object",
      "title": "Flow",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Flow Id"
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Flow Name"
        }
      }
    },
    "Descriptor": {
      "type": "object",
      "title": "Descriptor",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Descriptor Name"
        },
        "version": {
          "type": "integer",
          "title": "Version",
          "description": "Descriptor Version"
        },
        "uid": {
          "type": "string",
          "title": "UID",
          "description": "Descriptor UID"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted",
          "description": "Descriptor Deletd"
        },
        "public": {
          "type": "boolean",
          "title": "Public",
          "description": "Descriptor Public"
        },
        "expired": {
          "type": "boolean",
          "title": "Expired",
          "description": "Descriptor Expired"
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Descriptor Id"
        },
        "mandatory": {
          "type": "boolean",
          "title": "Mandatory",
          "description": "Descriptor Mandatory"
        },
        "label": {
          "type": "string",
          "title": "Label",
          "description": "Descriptor Label"
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Descriptor Type"
        },
        "roles": {
          "type": "array",
          "title": "Roles",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "owners": {
          "type": "array",
          "title": "Owners",
          "items": {
            "$ref": "#/definitions/Person"
          }
        },
        "flow": {
          "$ref": "#/definitions/Flow"
        },
        "defaultValues": {
          "$ref": "#/definitions/DefaultValues"
        },
        "instances": {
          "type": "array",
          "title": "Instances",
          "items": {
            "type": "object",
            "properties": {}
          }
        }
      }
    },
    "Person": {
      "type": "object",
      "title": "Person",
      "properties": {
        "uid": {
          "type": "string",
          "title": "UID",
          "description": "Person UID"
        },
        "givenName": {
          "type": "string",
          "title": "First Name",
          "description": "Person First Name"
        },
        "familyName": {
          "type": "string",
          "title": "Last Name",
          "description": "Person Last Name"
        },
        "email": {
          "type": "string",
          "title": "Email",
          "description": "Person Email"
        },
        "language": {
          "type": "string",
          "title": "Language",
          "description": "Person Language"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "title": "Order",
          "description": "Person Order"
        }
      }
    },
    "Document": {
      "type": "object",
      "title": "Document",
      "properties": {
        "label": {
          "type": "string",
          "title": "Label",
          "description": "Document Label"
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Document Type"
        },
        "hash": {
          "type": "integer",
          "title": "Hash",
          "description": "Document Hash"
        },
        "numMax": {
          "type": "integer",
          "title": "Num. Max",
          "description": "Document Num. Max"
        },
        "numMin": {
          "type": "integer",
          "title": "Num. Min",
          "description": "Document Num. Min"
        },
        "uid": {
          "type": "string",
          "title": "UID",
          "description": "Document UID"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace",
          "description": "Document Namespace"
        },
        "source": {
          "type": "string",
          "title": "Source",
          "description": "Document Source"
        },
        "created": {
          "type": "string",
          "title": "Created",
          "description": "Document Created"
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Document Name"
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Document Id"
        },
        "modified": {
          "type": "string",
          "title": "Modified",
          "description": "Document Modified"
        },
        "rejected": {
          "type": "boolean",
          "title": "Rejected",
          "description": "Document Rejected"
        },
        "signed": {
          "type": "boolean",
          "title": "Signed",
          "description": "Document Signed"
        },
        "trashed": {
          "type": "boolean",
          "title": "Trashed",
          "description": "Document Trashed"
        },
        "version": {
          "type": "integer",
          "title": "Version",
          "description": "Document Version"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "flow": {
          "$ref": "#/definitions/Flow"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "template": {
          "$ref": "#/definitions/Template"
        },
        "descriptor": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "DocumentInput": {
      "type": "object",
      "properties": {
        "descriptor": {
          "type": "object",
          "title": "Descriptor",
          "properties": {
            "hash": {
              "type": "integer",
              "title": "Hash"
            }
          }
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "source": {
          "type": "string",
          "title": "Source"
        }
      },
      "required": [
        "name"
      ]
    },
    "Attachment": {
      "type": "object",
      "title": "Attachment",
      "properties": {
        "label": {
          "type": "string",
          "title": "Label",
          "description": "Attachment Label"
        },
        "numMax": {
          "type": "integer",
          "title": "Num. Max",
          "description": "Attachment Num. Max"
        },
        "numMin": {
          "type": "integer",
          "title": "Num. Min",
          "description": "Attachment Num.Min"
        },
        "hash": {
          "type": "integer",
          "title": "Hash",
          "description": "Attachment Hash"
        }
      }
    },
    "Template": {
      "type": "object",
      "title": "Template",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Template Type"
        },
        "html": {
          "type": "string",
          "title": "HTML"
        },
        "pdfHtml": {
          "type": "string",
          "title": "PDFHTML"
        },
        "id": {
          "type": "string",
          "title": "Id"
        },
        "uid": {
          "type": "string",
          "title": "UID"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace"
        },
        "version": {
          "type": "integer",
          "title": "Version"
        },
        "created": {
          "type": "string",
          "title": "Created"
        },
        "modified": {
          "type": "string",
          "title": "Modified"
        },
        "published": {
          "type": "boolean",
          "title": "Modified"
        },
        "completed": {
          "type": "boolean",
          "title": "Completed"
        },
        "aborted": {
          "type": "boolean",
          "title": "Aborted"
        }
      }
    },
    "DefaultValues": {
      "type": "object",
      "properties": {
        "signer": {
          "$ref": "#/definitions/Person"
        },
        "reviewer": {
          "$ref": "#/definitions/Person"
        }
      },
      "description": "defaultValues"
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "title": "Code",
          "description": "Error Code"
        },
        "message": {
          "type": "string",
          "title": "Message",
          "description": "Error Message"
        }
      }
    }
  },
  "parameters": {
    "Token": {
      "name": "token",
      "in": "header",
      "type": "string",
      "required": true,
      "description": "Token received from the 'Generate security token' action",
      "x-ms-visibility": "important",
      "x-ms-summary": "Token"
    },
    "ContentType": {
      "name": "Content-Type",
      "in": "header",
      "type": "string",
      "required": true,
      "description": "Content-Type",
      "x-ms-visibility": "internal",
      "x-ms-summary": "Content-Type of the request",
      "default": "application/json"
    },
    "XNamespace": {
      "name": "x-namespace",
      "in": "header",
      "type": "string",
      "required": true,
      "x-ms-visibility": "internal",
      "default": "/company/",
      "pattern": "^\\/companies\\/[^/]+$"
    },
    "EnvelopeId": {
      "name": "envelope-id",
      "in": "path",
      "type": "string",
      "required": true,
      "description": "Id of the envelope in question",
      "x-ms-visibility": "important",
      "x-ms-summary": "Envelope Id",
      "x-ms-url-encoding": "single"
    },
    "RecipientId": {
      "name": "recipient-id",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the recipients in question",
      "x-ms-summary": "Recipient Id",
      "x-ms-visibility": "important",
      "x-ms-url-encoding": "single"
    },
    "DocumentId": {
      "name": "document-id",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the document in question",
      "x-ms-summary": "Document Id",
      "x-ms-visibility": "important",
      "x-ms-url-encoding": "single"
    },
    "FileId": {
      "name": "file-id",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the File in question",
      "x-ms-summary": "File Id",
      "x-ms-visibility": "important",
      "x-ms-url-encoding": "single"
    },
    "CompanyId": {
      "name": "company-id",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-summary": "Company Id",
      "description": "The ID of the company in question",
      "x-ms-visibility": "important",
      "x-ms-url-encoding": "single"
    },
    "EnvelopeDescriptorId": {
      "name": "envelope-descriptor-id",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Id of the Envelope Descriptor",
      "x-ms-visibility": "important",
      "x-ms-summary": "Envelope Descriptor Id",
      "x-ms-url-encoding": "single"
    },
    "Filters": {
      "name": "filters",
      "in": "query",
      "type": "string",
      "description": "Filter query to select subamount",
      "x-ms-summary": "Filters",
      "x-ms-visibility": "important"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "401": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "403": {
      "description": "Forbidden",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "404": {
      "description": "Not Found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "409": {
      "description": "Conflict",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "500": {
      "description": "Internal Server Error. Unknown error occurred",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "title": "Code",
            "description": "Error Code"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Error Message"
          },
          "err": {
            "type": "string",
            "title": "Error",
            "description": "Error"
          }
        }
      }
    },
    "default": {
      "description": "Operation Failed."
    }
  },
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ],
  "tags": []
}