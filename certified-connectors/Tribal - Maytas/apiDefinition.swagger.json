{
  "swagger": "2.0",
  "info": {
    "title": "Tribal - Maytas",
    "description": "Streamline the day-to-day administration of training, reduce administration costs and improving efficiency, manage courses, monitor learner success rates",
    "version": "0.1",
    "contact": {
      "name": "Tribal Group",
      "url": "https://www.tribalgroup.com",
      "email": "servicedesk@tribalgroup.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.tribalgroup.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.tribalgroup.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management"
    }
  ],
  "host": "api.tribaledge.com",
  "schemes": ["https"],
  "basePath": "/emea/",
  "consumes": [],
  "produces": [],
  "paths": {
    "/eventsConnector/api/Events/entityTypes/MaytasGateway": {
      "get": {
        "summary": "Get Triggers",
        "description": "Get Triggers",
        "operationId": "GetTriggers",
        "x-ms-visibility": "internal",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DynamicValue"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/eventsConnector/api/Events/eventTypes/MaytasGateway/{name}": {
      "get": {
        "summary": "Get Trigger Event Types",
        "operationId": "GetTriggerEventTypes",
        "description": "Get Trigger Event Types",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetTriggers",
              "value-path": "name",
              "value-title": "description"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        }
      }
    },
    "/eventsConnector/api/Events/eventSchema/MaytasGateway/{eventType}/{name}": {
      "get": {
        "x-ms-visibility": "internal",
        "description": "Gets the triggers schema",
        "summary": "Gets the triggers schema",
        "operationId": "GetTriggerSchema",
        "parameters": [
          {
            "name": "name",
            "x-ms-summary": "The name",
            "description": "The name",
            "x-ms-url-encoding": "single",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventType",
            "x-ms-summary": "The name of the event type",
            "description": "The name of the event type",
            "x-ms-url-encoding": "single",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/eventsConnector/api/WebHook/MaytasGateway/{eventType}/{name}": {
      "x-ms-notification-content": {
        "description": "When an event happens",
        "x-ms-summary": "When an event happens",
        "schema": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetTriggerSchema",
                "parameters": {
                  "name": {
                    "parameter": "name"
                  },
                  "eventType": {
                    "parameter": "eventType"
                  }
                }
              }
            },
            "id": {
              "type": "string"
            },
            "source": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "time": {
              "format": "date-time",
              "type": "string"
            },
            "dataSchema": {
              "type": "string"
            },
            "dataContentType": {
              "type": "string"
            },
            "extensionAttributes": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TriggerCreateSuccess"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "When an event happens",
        "description": "This operation triggers when a specified event happens",
        "operationId": "WhenEventHappens",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "name",
            "x-ms-summary": "Name",
            "description": "The name of the event",
            "x-ms-url-encoding": "single",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTriggers",
              "value-path": "name",
              "value-title": "description"
            }
          },
          {
            "name": "eventType",
            "in": "path",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Event Type",
            "description": "The type of event e.g. Updated or Created",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTriggerEventTypes",
              "value-path": "name",
              "value-title": "description",
              "parameters": {
                "name": {
                  "parameter": "name"
                }
              }
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "targetUri": {
                  "type": "string",
                  "description": "targetUri",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": ""
                }
              },
              "required": [
                "targetUri"
              ]
            }
          }
        ]
      }
    },
    "/maytasgateway/api/connector/actions": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DynamicValue"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get Action Entities",
        "operationId": "GetActionEntities",
        "description": "Get Action Entities",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/maytasgateway/api/connector/actions/{name}/schemas/{operationType}/{schemaType}": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Action Entity Schema",
        "description": "Get Action Entity Schema",
        "operationId": "GetActionEntitySchema",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationType",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaType",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "isMany",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ]
      }
    },
    "/maytasgateway/odata/main/{name}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetActionEntitySchema",
                "parameters": {
                  "name": {
                    "parameter": "name"
                  },
                  "select": {
                    "parameter": "$select"
                  },
                  "expand": {
                    "parameter": "$expand"
                  },
                  "operationType": "Get",
                  "schemaType": "Response",
                  "isMany": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Read a collection of entities",
        "description": "Retrieve a collection of entities of your choice, further optional odata filters can be applied to tailor what is returned.",
        "operationId": "ReadEntityCollection",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Entity",
            "description": "The name of the entity to read a collection",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetActionEntities",
              "value-path": "name",
              "value-title": "description"
            }
          },
          {
            "name": "$filter",
            "x-ms-summary": "Filter",
            "description": "OData filter to perform",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "x-ms-summary": "Take",
            "description": "Number of items to take",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "x-ms-summary": "Skip",
            "description": "Number of items to skip",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$select",
            "in": "query",
            "x-ms-summary": "Select",
            "x-ms-url-encoding": "single",
            "description": "Columns to select",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "x-ms-summary": "Expand",
            "x-ms-url-encoding": "single",
            "description": "Columns to expand",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-correlation-id",
            "x-ms-summary": "Correlation Id",
            "description": "Correlation Id added in the x-correlation-id header",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetActionEntitySchema",
                "parameters": {
                  "name": {
                    "parameter": "name"
                  },
                  "operationType": "Get",
                  "schemaType": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Create an entity",
        "description": "Create a specified entity, required and optional inputs will be provided upon choosing your entity",
        "operationId": "CreateEntity",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "x-ms-summary": "Entity",
            "description": "The name of the entity to post",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetActionEntities",
              "value-path": "name",
              "value-title": "description"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetActionEntitySchema",
                "parameters": {
                  "operationType": "Post",
                  "schemaType": "Body",
                  "name": {
                    "parameter": "name"
                  }
                },
                "value-path": "properties"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetActionEntitySchema",
                "parameters": {
                  "operationType": {
                    "value": "Post"
                  },
                  "schemaType": {
                    "value": "Body"
                  },
                  "name": {
                    "parameterReference": "name"
                  }
                }
              }
            }
          },
          {
            "name": "x-correlation-id",
            "x-ms-summary": "Correlation Id",
            "description": "Correlation Id added in the x-correlation-id header",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ]
      }
    },
    "/maytasgateway/odata/main/{name}/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetActionEntitySchema",
                "parameters": {
                  "name": {
                    "parameter": "name"
                  },
                  "select": {
                    "parameter": "$select"
                  },
                  "expand": {
                    "parameter": "$expand"
                  },
                  "operationType": "Get",
                  "schemaType": "Response",
                  "isMany": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Read an entity",
        "description": "Retrieve a specific entity of your choice, further optional odata filters can be applied to tailor what is returned.",
        "operationId": "ReadEntity",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "x-ms-summary": "Entity",
            "x-ms-url-encoding": "single",
            "description": "The name of the entity to read",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetActionEntities",
              "value-path": "name",
              "value-title": "description"
            }
          },
          {
            "name": "id",
            "in": "path",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "The id of the entity to read",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "x-ms-summary": "Select",
            "x-ms-url-encoding": "single",
            "description": "Columns to select",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "x-ms-summary": "Expand",
            "x-ms-url-encoding": "single",
            "description": "Columns to expand",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-correlation-id",
            "x-ms-summary": "Correlation Id",
            "description": "Correlation Id added in the x-correlation-id header",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetActionEntitySchema",
                "parameters": {
                  "name": {
                    "parameter": "name"
                  },
                  "operationType": "Get",
                  "schemaType": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Update an entity",
        "description": "Update a specified entity, optional inputs will be provided upon choosing your entity. Any inputs not specified will not be included in the change.",
        "operationId": "UpdateEntity",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "x-ms-summary": "Entity",
            "description": "The name of the entity to update",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetActionEntities",
              "value-path": "name",
              "value-title": "description"
            }
          },
          {
            "name": "id",
            "in": "path",
            "x-ms-summary": "Id",
            "description": "The id of the entity to update",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetActionEntitySchema",
                "parameters": {
                  "operationType": "Patch",
                  "schemaType": "Body",
                  "name": {
                    "parameter": "name"
                  }
                },
                "value-path": "properties"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetActionEntitySchema",
                "parameters": {
                  "operationType": {
                    "value": "Patch"
                  },
                  "schemaType": {
                    "value": "Body"
                  },
                  "name": {
                    "parameterReference": "name"
                  }
                }
              }
            }
          },
          {
            "name": "x-correlation-id",
            "x-ms-summary": "Correlation Id",
            "description": "Correlation Id added in the x-correlation-id header",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ]
      }
    },
    "/": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "HTTP Request",
        "description": "Send a HTTP request. Headers, verbs and relative URLs need to be provided.",
        "operationId": "RawRequest",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "x-ms-summary": "Service",
                  "title": "Service",
                  "default": "MaytasGateway",
                  "x-ms-visibility": "internal"
                },
                "headers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "key"
                      },
                      "value": {
                        "type": "string",
                        "description": "value"
                      }
                    }
                  },
                  "description": "Any additional headers",
                  "x-ms-summary": "Headers",
                  "x-ms-visibility": "important"
                },
                "verb": {
                  "type": "string",
                  "description": "HTTP Verb",
                  "x-ms-summary": "Verb",
                  "x-ms-visibility": "important",
                  "enum": [
                    "GET",
                    "POST"
                  ]
                },
                "body": {
                  "type": "string",
                  "description": "Body of the request",
                  "x-ms-summary": "Body",
                  "x-ms-visibility": "important"
                },
                "relativeUrl": {
                  "type": "string",
                  "description": "Relative URL",
                  "x-ms-summary": "Relative URL e.g. odata/main/trainee",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "verb",
                "relativeUrl",
                "service"
              ]
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "DynamicValue": {
      "type": "object",
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "codeName",
        "message"
      ],
      "properties": {
        "codeName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "TriggerCreateSuccess": {
      "type": "object",
      "required": [
        "targetUri"
      ],
      "properties": {
        "targetUri": {
          "type": "string"
        }
      }
    }
  },
  "tags": [],
  "securityDefinitions": {}
}