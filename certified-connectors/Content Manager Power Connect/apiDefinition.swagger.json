{
  "swagger": "2.0",
  "info": {
    "title": "Content Manager Power Connect",
    "description": "Content Manager is a governance-based enterprise content management system designed to help government agencies, regulated industries and global organizations manage their business content from creation to disposal. Connect to Content Manager to perform actions including creating or updating records or locations, uploading or downloading electronic files, searching and more. (1.0.4.757)",
    "version": "1.0.4.757",
    "contact": {
      "name": "Kapish Services Pty Ltd",
      "url": "https://kapish.com.au/products/power_connect/",
      "email": "sales@kapish.com.au"
    }
  },
  "host": "kpcgateway.kapish.cloud",
  "basePath": "/kpc",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Search": {
      "post": {
        "operationId": "CMObjectSearch",
        "summary": "Find CM Objects",
        "description": "Search for CM Objects",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-summary": "User to Impersonate",
            "x-ms-visibility": "advanced",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Search",
            "in": "body",
            "description": "Search for an object",
            "schema": {
              "$ref": "#/definitions/CMSearch"
            }
          },
          {
            "name": "properties",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "Uri,NameString",
            "x-ms-summary": "Properties",
            "x-ms-visibility": "advanced",
            "description": "A comma separated list of object properties, e.g. Uri,NameString"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMBobResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/LookupRecordTypes": {
      "get": {
        "operationId": "LookupRecordTypes",
        "summary": "(Private) Record Types Lookup",
        "description": "Get all Record Types",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "queryString",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "active",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordTypesResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/GetSchemaAdditionalFields": {
      "get": {
        "operationId": "GetSchemaAdditionalFields",
        "summary": "(Private) Get Record Type Fields",
        "description": "Get the Additional Fields associated with a Record Type",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "rtyUri",
            "in": "query",
            "required": true,
            "default": 0,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Record Type Uri",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Operation Failed"
          }
        }
      }
    },
    "/GetSchemaRecordEntry": {
      "get": {
        "operationId": "GetSchemaRecordEntry",
        "summary": "(Private) Get Record Entry Schema",
        "description": "Get the schema for a Record entry form based on Record Type",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "rtyUri",
            "in": "query",
            "required": true,
            "default": 0,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Record Type Uri",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Operation Failed"
          }
        }
      }
    },
    "/LookupActionDefsAssignable": {
      "get": {
        "operationId": "LookupActionDefsAssignable",
        "summary": "(Private) Lookup Assignable Action Definitions",
        "description": "Returns all the Action Definitions that can be attached to Records",
        "x-ms-visibility": "internal",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CaptionValuePairsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/LookupRecordActionsOnRecord/{RecUri}": {
      "get": {
        "operationId": "LookupRecordActionsOnRecord",
        "summary": "(Private) Lookup Record Actions on a Record",
        "description": "Returns all the Record Actions associated with a Record",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "RecUri",
            "in": "path",
            "required": true,
            "default": 0,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Record Uri",
            "x-ms-visibility": "internal",
            "x-ms-url-encoding": "single"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CaptionValuePairsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/LookupRecordAdditionalFields": {
      "get": {
        "operationId": "LookupRecordAdditionalFields",
        "summary": "(Private) Lookup Record Additional Fields",
        "description": "Returns all the Additional Fields that can be used by Records",
        "x-ms-visibility": "internal",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CaptionValuePairsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/LookupLocationAdditionalFields": {
      "get": {
        "operationId": "LookupLocationAdditionalFields",
        "summary": "(Private) Lookup Location Additional Fields",
        "description": "Returns all the Additional Fields that can be used by Locations",
        "x-ms-visibility": "internal",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CaptionValuePairsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/LookupEnumGender": {
      "get": {
        "operationId": "LookupEnumGender",
        "summary": "(Private) Enum Caption Lookup for Gender",
        "description": "Get the captions for the Gender enumeration",
        "x-ms-visibility": "internal",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CaptionValuePairsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/LookupEnumRenditionType": {
      "get": {
        "operationId": "LookupEnumRenditionType",
        "summary": "(Private) Enum Caption Lookup for Rendition Types",
        "description": "Get the captions for the Rendition Type enumeration",
        "x-ms-visibility": "internal",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CaptionValuePairsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/LookupEnumContactType": {
      "get": {
        "operationId": "LookupEnumContactType",
        "summary": "(Private) Enum Caption Lookup for Contact Type",
        "description": "Get the captions for the Contact Type enumeration",
        "x-ms-visibility": "internal",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CaptionValuePairsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/LookupEnumMediaTypes": {
      "get": {
        "operationId": "LookupEnumMediaTypes",
        "summary": "(Private) Enum Caption Lookup for Media Types",
        "description": "Get the captions for the Media Types enumeration",
        "x-ms-visibility": "internal",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/CaptionValuePairsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/LookupEnumFavoriteType": {
      "get": {
        "operationId": "LookupEnumFavoriteType",
        "summary": "(Private) Enum Caption Lookup for Favorite Type",
        "description": "Get the captions for the Favorite Type enumeration",
        "x-ms-visibility": "internal",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/CaptionValuePairsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/LookupEnumUserTypes": {
      "get": {
        "operationId": "LookupEnumUserTypes",
        "summary": "(Private) Enum Caption Lookup for User Types",
        "description": "Get the captions for the User Types enumeration",
        "x-ms-visibility": "internal",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/CaptionValuePairsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/FindRecordAdvanced": {
      "get": {
        "operationId": "RecordSearchAdvanced",
        "summary": "Find Records (Advanced)",
        "description": "Search for Records (Fetch a collection of Records using a search string).  Returns a raw Content Manager ServiceAPI response.",
        "parameters": [
          {
            "name": "AuthorizationServer",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "CMServiceAPIUrl",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientId",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientSecret",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "parseResponse",
            "in": "header",
            "required": true,
            "type": "boolean",
            "x-ms-visibility": "internal",
            "default": false
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": true,
            "type": "string",
            "default": "all",
            "x-ms-summary": "Query"
          },
          {
            "name": "properties",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "RecordTitle,RecordNumber",
            "x-ms-summary": "Properties",
            "description": "A comma separated list of properties to return"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/Record": {
      "get": {
        "operationId": "RecordSearch",
        "summary": "Find Records",
        "description": "Search for Records (Fetch a collection of Records using a search string)",
        "parameters": [
          {
            "name": "AuthorizationServer",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "CMServiceAPIUrl",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientId",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientSecret",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": true,
            "type": "string",
            "default": "all",
            "x-ms-summary": "Query"
          },
          {
            "name": "properties",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "RecordTitle,RecordNumber",
            "x-ms-summary": "Properties",
            "description": "A comma separated list of properties to return"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      },
      "post": {
        "operationId": "RecordUpdate",
        "summary": "Update Record (Properties)",
        "description": "Update a Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-summary": "User to Impersonate",
            "x-ms-visibility": "advanced",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Update a record",
            "schema": {
              "$ref": "#/definitions/CMUpdateRecord"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/DeleteRecord/{Uri}": {
      "post": {
        "operationId": "DeleteRecord",
        "summary": "Delete Record",
        "description": "Delete a Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Uri",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Unique Identifier",
            "description": "The Unique ID of the Record to be deleted"
          },
          {
            "name": "DeleteRecordDetails",
            "in": "body",
            "description": "Delete a Record",
            "schema": {
              "$ref": "#/definitions/CMDeleteRecordDetails"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/CreateRecord": {
      "post": {
        "operationId": "RecordCreate",
        "summary": "Create Record (Document)",
        "description": "Create a Record",
        "parameters": [
          {
            "name": "AuthorizationServer",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "CMServiceAPIUrl",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientId",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientSecret",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Create a record",
            "schema": {
              "$ref": "#/definitions/CMCreateRecordDocument"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/CreateRecordContainer": {
      "post": {
        "operationId": "RecordCreateContainer",
        "summary": "Create Record (Folder)",
        "description": "Create a Record",
        "parameters": [
          {
            "name": "AuthorizationServer",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "CMServiceAPIUrl",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientId",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientSecret",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Create a record",
            "schema": {
              "$ref": "#/definitions/CMCreateRecordContainer"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/CreateRecordAdvanced": {
      "post": {
        "operationId": "RecordCreateAdvanced",
        "summary": "Create Record (Advanced)",
        "description": "Create a Record with Advanced Fields",
        "parameters": [
          {
            "name": "AuthorizationServer",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "CMServiceAPIUrl",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientId",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientSecret",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Create a record",
            "schema": {
              "$ref": "#/definitions/CMCreateRecordAdvanced"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/UpdateRecordAdvanced": {
      "post": {
        "operationId": "RecordUpdateAdvanced",
        "summary": "Update Record (Advanced)",
        "description": "Update a Record with Advanced Properties",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-summary": "User to Impersonate",
            "x-ms-visibility": "advanced",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Update a record",
            "schema": {
              "$ref": "#/definitions/CMUpdateRecordAdvanced"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/UpdateRecordFinalise": {
      "post": {
        "operationId": "RecordUpdateFinalise",
        "summary": "Update Record (Finalise)",
        "description": "Update a draft Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Update a record",
            "schema": {
              "$ref": "#/definitions/CMUpdateRecordFinalise"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/UpdateRecordUnfinalise": {
      "post": {
        "operationId": "RecordUpdateUnfinalise",
        "summary": "Update Record (Unfinalise - Set As Draft)",
        "description": "Update a Finalised Record to Draft",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Update a record",
            "schema": {
              "$ref": "#/definitions/CMUpdateRecordUnfinalise"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/AddAttachment": {
      "post": {
        "operationId": "RecordElecAttach",
        "summary": "Update Record (Attach Electronic File)",
        "description": "Attach an Electronic File to a Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "File",
            "in": "formData",
            "required": true,
            "type": "file",
            "x-ms-summary": "File",
            "description": "The File Content/Body of the electronic document to attach"
          },
          {
            "name": "Uri",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Unique ID of the record",
            "x-ms-summary": "Unique Identifier"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/Record/{Id}": {
      "get": {
        "operationId": "RecordSearchByID",
        "summary": "Find Record by ID",
        "description": "Fetch a single Record by Unique ID or Name",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-summary": "Format",
            "description": "Format",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Either the object Unique ID or Name",
            "required": true,
            "type": "string",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "IncludePropertyDefs",
            "in": "query",
            "description": "True to return an array of the Property Definitions used by properties in this response",
            "type": "boolean",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Include Property Definitions"
          },
          {
            "name": "descendantProperties",
            "in": "query",
            "type": "string",
            "description": "A comma separated list of object properties, applies only to object properties of this and lower level properties e.g. RecordNumber,RecordTitle.",
            "x-ms-summary": "Descendant Properties",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "properties",
            "in": "query",
            "description": "A comma separated list of object properties, e.g. RecordNumber,RecordTitle.",
            "type": "string",
            "default": "RecordNumber",
            "x-ms-summary": "Properties",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "propertySets",
            "in": "query",
            "type": "string",
            "description": "One or more pre-defined property sets, select from DataGridVisible, Detailed, FromSearch, All or a custom property set as defined in your service configuration.",
            "x-ms-summary": "Property Sets"
          },
          {
            "name": "PropertyValue",
            "in": "query",
            "description": "Include the raw value, the string value, or both in the results",
            "type": "string",
            "enum": [
              "Raw",
              "String",
              "Both"
            ],
            "x-ms-summary": "Property Value",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "stringDisplayType",
            "x-ms-summary": "String Display Type",
            "in": "query",
            "description": "If returning the string value which format to use",
            "type": "string",
            "x-ms-visibility": "advanced",
            "enum": [
              "Default",
              "DataEntry",
              "ErrorMessage",
              "Export",
              "Merge",
              "Reporter",
              "TreeColumn",
              "ViewPane",
              "WebPublish",
              "WebService"
            ],
            "x-ms-enum-values": [
              {
                "value": "Default",
                "displayName": "Default"
              },
              {
                "value": "DataEntry",
                "displayName": "Data Entry"
              },
              {
                "value": "ErrorMessage",
                "displayName": "Error Message"
              },
              {
                "value": "Export",
                "displayName": "Export"
              },
              {
                "value": "Merge",
                "displayName": "Merge"
              },
              {
                "value": "Reporter",
                "displayName": "Reporter"
              },
              {
                "value": "TreeColumn",
                "displayName": "Tree Column"
              },
              {
                "value": "ViewPane",
                "displayName": "View Pane"
              },
              {
                "value": "WebPublish",
                "displayName": "Web Publish"
              },
              {
                "value": "WebService",
                "displayName": "Web Service"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordElecDownload": {
      "get": {
        "operationId": "RecordElecDownload",
        "summary": "Download Electronic File",
        "description": "Download an Electronic File of a Record",
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "Unique ID or Record number",
            "required": true,
            "type": "string",
            "x-ms-summary": "Unique Identifier"
          },
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordReassignAction": {
      "post": {
        "operationId": "RecordReassignAction",
        "summary": "Update Record (Reassign Action)",
        "description": "Reassigns the nominated action to a specified location",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Reassigns the nominated action to a specified location",
            "schema": {
              "$ref": "#/definitions/CMReassignAction"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordClose": {
      "post": {
        "operationId": "RecordClose",
        "summary": "Update Record (Close)",
        "description": "Use the CloseRecord function to close a container - leave the date blank if you want the close date to be 'now'. Because closing a record may require updating many contained records, this function commits the changes automatically",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Closes the specified Record",
            "schema": {
              "$ref": "#/definitions/CMCloseRecord"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMLogResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordReopen": {
      "post": {
        "operationId": "RecordReopen",
        "summary": "Update Record (Reopen)",
        "description": "Use the ReopenRecord function to re-open a closed container. Because re-opening a record may require updating many contained records, this function commits the changes automatically",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Closes the specified Record",
            "schema": {
              "$ref": "#/definitions/CMReopenRecord"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMLogResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/GetFileFromUrl": {
      "get": {
        "operationId": "GetFileFromUrl",
        "summary": "Get File from URL",
        "description": "Download a file from URL to a staging area using the 'GetFileFromUrl' CM Service API plugin",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "URL of File",
            "description": "Unencoded URL of the file to download"
          },
          {
            "name": "filename",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Filename to Save As",
            "description": "Filename to save the downloaded URL as (just the filename with suffix, do not include the full directory)"
          },
          {
            "name": "contentType",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Content Type",
            "description": "Typical string found in most Content-Type header (e.g. image/png, text/plain, application/pdf)."
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetFileFromUrlResponse"
            },
            "examples": {
              "application/json": {
                "Filepath": "string",
                "Message": "string"
              }
            }
          }
        }
      }
    },
    "/UploadFile": {
      "post": {
        "operationId": "RecordElecUpload",
        "summary": "Upload Electronic File",
        "description": "Upload an Electronic File which may later be attached to a Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "record",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CMUploadElectronicFile"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "default"
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/UpdateRecordAdditionalFields": {
      "post": {
        "operationId": "RecordUpdateAdditionalFields",
        "summary": "Update Record (Additional Fields)",
        "description": "Update Additional Fields on a Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "AdditionalField",
            "in": "body",
            "description": "Set Additional Fields on a Record",
            "schema": {
              "$ref": "#/definitions/CMFields"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/UpdateRecordClassification": {
      "post": {
        "operationId": "RecordUpdateClassification",
        "summary": "Update Record (Classification)",
        "description": "Update the Classification of a Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Update a record",
            "schema": {
              "$ref": "#/definitions/CMUpdateRecordClassification"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordAttachAction": {
      "post": {
        "operationId": "RecordAttachAction",
        "summary": "Update Record (Attach Action or Procedure)",
        "description": "Attach an Action or procedure to a Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Attach an action to the Record",
            "schema": {
              "$ref": "#/definitions/CMAttachAction"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordCompleteActions": {
      "post": {
        "operationId": "RecordCompleteActions",
        "summary": "Update Record (Complete Actions)",
        "description": "Complete one or all actions due on a particular Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Complete one or all actions due on a particular Record",
            "schema": {
              "$ref": "#/definitions/CMCompleteActions"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordRemoveAllActions": {
      "post": {
        "operationId": "RecordRemoveAllActions",
        "summary": "Update Record (Remove All Actions)",
        "description": "Removes all actions attached to the specified record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Remove all actions from a Record",
            "schema": {
              "$ref": "#/definitions/CMRemoveAllActions"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordRescheduleActions": {
      "post": {
        "operationId": "RecordRescheduleActions",
        "summary": "Update Record (Reschedule Actions)",
        "description": "Reschedules all actions attached to this record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Reschedule Record Actions",
            "schema": {
              "$ref": "#/definitions/CMRescheduleActions"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordDispose": {
      "post": {
        "operationId": "RecordDispose",
        "summary": "Update Record (Dispose)",
        "description": "Dispose of a Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Dispose of a Record",
            "schema": {
              "$ref": "#/definitions/CMDispose"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordUndispose": {
      "post": {
        "operationId": "RecordUndispose",
        "summary": "Update Record (Undispose)",
        "description": "Reverts the state of the record (and any of its contents) so that it is no longer disposed",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Undispose a Record",
            "schema": {
              "$ref": "#/definitions/CMUndispose"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordCheckout": {
      "post": {
        "operationId": "RecordCheckout",
        "summary": "Update Record (Checkout)",
        "description": "Set the status of the Record to checked out",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Checkout a Record",
            "schema": {
              "$ref": "#/definitions/CMCheckout"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordUndoCheckout": {
      "post": {
        "operationId": "RecordUndoCheckout",
        "summary": "Update Record (Undo Checkout)",
        "description": "Undo a previous checkout of the electronic document for this Record, disregarding any changes made since it was checked out",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Undo a Record checkout",
            "schema": {
              "$ref": "#/definitions/CMUndoCheckout"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordAttachContact": {
      "post": {
        "operationId": "RecordAttachContact",
        "summary": "Update Record (Attach Contact)",
        "description": "Attach a Contact to a Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Attach a Contact to the Record",
            "schema": {
              "$ref": "#/definitions/CMAttachContact"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordAttachKeyword": {
      "post": {
        "operationId": "RecordAttachKeyword",
        "summary": "Update Record (Attach Thesaurus Term)",
        "description": "Attach a Thesaurus Term to a Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Attach a Thesaurus Term to the Record",
            "schema": {
              "$ref": "#/definitions/CMAttachKeyword"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordSetUserLabel": {
      "post": {
        "operationId": "RecordSetUserLabel",
        "summary": "Update Record (Set User Label)",
        "description": "Allows for the setting of a user label on a Record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Set a User Label on a Record",
            "schema": {
              "$ref": "#/definitions/CMSetUserLabel"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordRequestRendition": {
      "post": {
        "operationId": "RecordRequestRendition",
        "summary": "Update Record (Request Rendition)",
        "description": "Allows you to create a request for the automatic rendering engine to make a rendition of a record",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Request Record Rendition",
            "schema": {
              "$ref": "#/definitions/CMRequestRendition"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RecordSetAssignee": {
      "post": {
        "operationId": "RecordSetAssignee",
        "summary": "Update Record (Set Assignee)",
        "description": "Set the Assignee to a particular Location, back to Home or register as Missing",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Set the Assignee of a Record",
            "schema": {
              "$ref": "#/definitions/CMSetAssignee"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/Test": {
      "post": {
        "operationId": "Test",
        "summary": "Test",
        "description": "Test, test, testy, test, test",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "TestStuff",
            "in": "body",
            "description": "Test Definition",
            "schema": {
              "$ref": "#/definitions/CMTest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/Location": {
      "get": {
        "operationId": "LocationSearch",
        "summary": "Find Locations",
        "description": "Search for Locations (Fetch a collection of Locations using a search string)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal",
            "x-ms-summary": "Format",
            "description": "Format"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Enter a search query, e.g. 'all' to get all objects.",
            "x-ms-summary": "Query"
          },
          {
            "name": "ApplyDefaults",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Apply Defaults",
            "required": false,
            "type": "boolean",
            "description": "True to apply the user's default filter and sort to this search"
          },
          {
            "name": "CountResults",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Count Results",
            "required": false,
            "type": "boolean",
            "description": "True to include a count of the results"
          },
          {
            "name": "ExcludeCount",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Exclude Count",
            "required": false,
            "type": "boolean",
            "description": "True to exclude a count of the results"
          },
          {
            "name": "filter",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Filter",
            "required": false,
            "type": "string",
            "description": "A space separated list of search clauses to apply as a filter."
          },
          {
            "name": "fromSearch",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "From Search",
            "required": false,
            "type": "string",
            "description": "The Unique ID of a Saved Search from which to construct this search"
          },
          {
            "name": "descendantProperties",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Descendant Properties",
            "required": false,
            "type": "string",
            "description": "A comma separated list of object properties, applies only to object properties of this and lower level properties e.g. RecordNumber,RecordTitle"
          },
          {
            "name": "IncludePropertyDefs",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Include Property Definitions",
            "required": false,
            "type": "boolean",
            "description": "True to return an array of the Property Definitions used by properties in this response"
          },
          {
            "name": "Options",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Options",
            "required": false,
            "type": "string",
            "description": "Set one or more of the options typically set in User Options for this search only.  Use ids from the /PropertyDef?Get=SearchOptions service, append a minus sign to set to false, otherwise true is assumed."
          },
          {
            "name": "properties",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Properties",
            "required": false,
            "type": "string",
            "description": "A comma separated list of object properties, e.g. RecordNumber,RecordTitle"
          },
          {
            "name": "propertySets",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Property Sets",
            "required": false,
            "type": "string",
            "description": "One or more pre-defined property sets, select from DataGridVisible, Detailed, FromSearch, All or a custom property set as defined in your service configuration"
          },
          {
            "name": "PropertyValue",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Property Value",
            "required": false,
            "enum": [
              "Raw",
              "String",
              "Both"
            ],
            "type": "string",
            "description": "Include the raw value, the string value, or both in the results"
          },
          {
            "name": "pageSize",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Page Size",
            "required": false,
            "type": "string",
            "description": "The number of items to return in each page of results"
          },
          {
            "name": "purpose",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Purpose",
            "required": false,
            "type": "string",
            "description": "A special property to filter search results based on object Purpose enum values"
          },
          {
            "name": "purposeExtra",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Purpose Extra",
            "required": false,
            "type": "string",
            "description": "Necessary as a supplement to some purposes.  The ObjectDef service provides information on the enum or TrimMainObject type to specify, in particular ObjectDef.ExtraPurposeEnums, ObjectDef.ExtraPurposeObjectTypes and HaveExtraPurposeParameter."
          },
          {
            "name": "sortBy",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Sort By",
            "required": false,
            "type": "string",
            "description": "A comma separated list of search clause Ids"
          },
          {
            "name": "start",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Start",
            "required": false,
            "type": "string",
            "description": "The position in the result set to start, empty (or 1) to start at the beginning, 2 to start at the second object, 3 at the third, etc"
          },
          {
            "name": "stringDisplayType",
            "in": "query",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "String Display Type",
            "required": false,
            "enum": [
              "Default",
              "DataEntry",
              "ErrorMessage",
              "Export",
              "Merge",
              "Reporter",
              "TreeColumn",
              "ViewPane",
              "WebPublish",
              "WebService"
            ],
            "x-ms-enum-values": [
              {
                "value": "Default",
                "displayName": "Default"
              },
              {
                "value": "DataEntry",
                "displayName": "Data Entry"
              },
              {
                "value": "ErrorMessage",
                "displayName": "Error Message"
              },
              {
                "value": "Export",
                "displayName": "Export"
              },
              {
                "value": "Merge",
                "displayName": "Merge"
              },
              {
                "value": "Reporter",
                "displayName": "Reporter"
              },
              {
                "value": "TreeColumn",
                "displayName": "Tree Column"
              },
              {
                "value": "ViewPane",
                "displayName": "View Pane"
              },
              {
                "value": "WebPublish",
                "displayName": "Web Publish"
              },
              {
                "value": "WebService",
                "displayName": "Web Service"
              }
            ],
            "type": "string",
            "description": "If returning the string value which format to use"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMLocationsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      },
      "post": {
        "operationId": "LocationUpdate",
        "summary": "Update Location (Other)",
        "description": "Update a Location",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "UpdateLocation",
            "in": "body",
            "description": "Update a Location",
            "schema": {
              "$ref": "#/definitions/CMUpdateLocation"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMLocationsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/CreateLocation": {
      "post": {
        "operationId": "LocationCreate",
        "summary": "Create Location (Other)",
        "description": "Create a Location of any type",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "AuthorizationServer",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "CMServiceAPIUrl",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientId",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientSecret",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "CreateLocation",
            "in": "body",
            "description": "Create a Location",
            "schema": {
              "$ref": "#/definitions/CMCreateLocation"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMLocationsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/CreatePersonLocation": {
      "post": {
        "operationId": "LocationCreatePerson",
        "summary": "Create Location (Person)",
        "description": "Create a Person Location",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "AuthorizationServer",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "CMServiceAPIUrl",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientId",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ClientSecret",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "CreateLocation",
            "in": "body",
            "description": "Create a Location",
            "schema": {
              "$ref": "#/definitions/CMCreatePersonLocation"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMLocationsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/UpdatePersonLocation": {
      "post": {
        "operationId": "LocationUpdatePerson",
        "summary": "Update Location (Person)",
        "description": "Update a Person Location using its Unique Identifier",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "UpdateLocation",
            "in": "body",
            "description": "Update a Location",
            "schema": {
              "$ref": "#/definitions/CMUpdatePersonLocation"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMLocationsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/UpdateLocationAddress": {
      "post": {
        "operationId": "UpdateLocationAddress",
        "summary": "Update Location (Address)",
        "description": "Create / Update a Location's Address using the Unique ID of the address",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "UpdateLocation",
            "in": "body",
            "description": "Update a Location",
            "schema": {
              "$ref": "#/definitions/CMUpdateLocationAddress"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMLocationsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/Location/{Id}": {
      "get": {
        "operationId": "LocationSearchByID",
        "summary": "Find Location by ID",
        "description": "Fetch a single Location by Unique ID or Name",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Either the object Unique ID or Name",
            "x-ms-visibility": "important",
            "x-ms-summary": "Unique Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "descendantProperties",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A comma separated list of object properties, applies only to object properties of this and lower level properties e.g. Surname,GivenNames",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Descendant Properties"
          },
          {
            "name": "IncludePropertyDefs",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "True to return an array of the Property Definitions used by properties in this response",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Include Property Definitions"
          },
          {
            "name": "properties",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A comma separated list of object properties, e.g. Surname,GivenNames",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Properties"
          },
          {
            "name": "propertySets",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "One or more pre-defined property sets, select from DataGridVisible, Detailed, FromSearch, All or a custom property set as defined in your service configuration",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Property Sets"
          },
          {
            "name": "PropertyValue",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Raw",
              "String",
              "Both"
            ],
            "description": "Include the raw value, the string value, or both in the results",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Property Value"
          },
          {
            "name": "stringDisplayType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Default",
              "DataEntry",
              "ErrorMessage",
              "Export",
              "Merge",
              "Reporter",
              "TreeColumn",
              "ViewPane",
              "WebPublish",
              "WebService"
            ],
            "x-ms-enum-values": [
              {
                "value": "Default",
                "displayName": "Default"
              },
              {
                "value": "DataEntry",
                "displayName": "Data Entry"
              },
              {
                "value": "ErrorMessage",
                "displayName": "Error Message"
              },
              {
                "value": "Export",
                "displayName": "Export"
              },
              {
                "value": "Merge",
                "displayName": "Merge"
              },
              {
                "value": "Reporter",
                "displayName": "Reporter"
              },
              {
                "value": "TreeColumn",
                "displayName": "Tree Column"
              },
              {
                "value": "ViewPane",
                "displayName": "View Pane"
              },
              {
                "value": "WebPublish",
                "displayName": "Web Publish"
              },
              {
                "value": "WebService",
                "displayName": "Web Service"
              }
            ],
            "description": "Returns the string value which format to use",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "String Display Type"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMLocationsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/FindLocationChildAddressUri/{LocationUri}": {
      "get": {
        "operationId": "FindLocationChildAddressUri",
        "summary": "Find Unique ID of Location Address",
        "description": "Get the Unique ID of a Location's Child Address",
        "parameters": [
          {
            "name": "type",
            "enum": [
              "Street",
              "Postal"
            ],
            "x-ms-enum-values": [
              {
                "value": "Street",
                "displayName": "Street"
              },
              {
                "value": "Postal",
                "displayName": "Mailing"
              }
            ],
            "type": "string",
            "description": "Select address type",
            "x-ms-summary": "Type",
            "in": "query"
          },
          {
            "name": "LocationUri",
            "in": "path",
            "description": "Unique ID of Location",
            "required": true,
            "type": "string",
            "x-ms-summary": "Unique Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMLocationAddressUri"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/UpdateLocationAdditionalFields": {
      "post": {
        "operationId": "LocationUpdateAdditionalFields",
        "summary": "Update Location (Additional Fields)",
        "description": "Update Additional Fields on a Location",
        "parameters": [
          {
            "name": "userToImpersonate",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "User to Impersonate",
            "description": "The Network Login or Alternative Login of the Location in CM to impersonate"
          },
          {
            "name": "AdditionalField",
            "in": "body",
            "description": "Set Additional Fields on a Location",
            "schema": {
              "$ref": "#/definitions/CMFieldsLocation"
            }
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMLocationsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/ReadEventData": {
      "post": {
        "operationId": "ReadEventData",
        "summary": "Read Event Data",
        "description": "Transform Kapish Dispatch event data for flow consumption",
        "parameters": [
          {
            "name": "Raw Event Data",
            "in": "body",
            "description": "Data retrieved from Kapish Dispatch",
            "schema": {
              "$ref": "#/definitions/RawEventData"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMEventData"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/AddAccessControl": {
      "post": {
        "description": "AddAccessControl",
        "operationId": "AddAccessControl",
        "summary": "Update Record (Add Access Controls)",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Adds locations in a given Access Control",
            "schema": {
              "$ref": "#/definitions/SetAccessControl"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/RemoveAccessControl": {
      "post": {
        "description": "RemoveAccessControl",
        "operationId": "RemoveAccessControl",
        "summary": "Update Record (Remove Location from Access Controls)",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Removes locations from a given Access Control",
            "schema": {
              "$ref": "#/definitions/SetAccessControl"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/SetAccessControl": {
      "post": {
        "description": "SetAccessControl",
        "operationId": "SetAccessControl",
        "summary": "Update Record (Replace Access Controls)",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Replaces all locations in a given Access Control",
            "schema": {
              "$ref": "#/definitions/SetAccessControl"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    },
    "/InheritAccessControl": {
      "post": {
        "description": "InheritAccessControl",
        "operationId": "InheritAccessControl",
        "summary": "Update Record (Set Access Unrestricted or Based on Container)",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Record",
            "in": "body",
            "description": "Update Record (Set Access Unrestricted or Based on Container)",
            "schema": {
              "$ref": "#/definitions/InheritAccessControl"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CMRecordsResponse"
            }
          },
          "default": {
            "description": "default"
          }
        }
      }
    }
  },
  "definitions": {
    "InheritAccessControl": {
      "type": "object",
      "required": [
        "Uri"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "AccessControlList": {
          "$ref": "#/definitions/AccessControlList"
        }
      }
    },
    "SetAccessControl": {
      "type": "object",
      "required": [
        "Uri"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "AccessControlList": {
          "$ref": "#/definitions/AccessControlList"
        }
      }
    },
    "AccessControlList": {
      "type": "object",
      "properties": {
        "FunctionEnum": {
          "type": "string",
          "default": "RecordAccess",
          "x-ms-visibility": "advanced"
        },
        "FunctionProfiles": {
          "$ref": "#/definitions/FunctionProfiles"
        }
      }
    },
    "FunctionProfiles": {
      "type": "object",
      "properties": {
        "ViewDocument": {
          "$ref": "#/definitions/ViewDocument"
        },
        "ViewRecord": {
          "$ref": "#/definitions/ViewRecord"
        },
        "UpdateDocument": {
          "$ref": "#/definitions/UpdateDocument"
        },
        "UpdateMetadata": {
          "$ref": "#/definitions/UpdateMetadata"
        },
        "ModifyAccess": {
          "$ref": "#/definitions/ModifyAccess"
        },
        "DestroyRecord": {
          "$ref": "#/definitions/DestroyRecord"
        },
        "AddContents": {
          "$ref": "#/definitions/AddContents"
        }
      }
    },
    "ViewDocument": {
      "type": "object",
      "properties": {
        "AccessLocations": {
          "type": "array",
          "x-ms-summary": "View Document",
          "items": {
            "$ref": "#/definitions/AccessLocationsItem"
          }
        }
      }
    },
    "ViewRecord": {
      "type": "object",
      "properties": {
        "AccessLocations": {
          "type": "array",
          "x-ms-summary": "View Metadata",
          "items": {
            "$ref": "#/definitions/AccessLocationsItem"
          }
        }
      }
    },
    "UpdateDocument": {
      "type": "object",
      "properties": {
        "AccessLocations": {
          "type": "array",
          "x-ms-summary": "Update Document",
          "items": {
            "$ref": "#/definitions/AccessLocationsItem"
          }
        }
      }
    },
    "UpdateMetadata": {
      "type": "object",
      "properties": {
        "AccessLocations": {
          "type": "array",
          "x-ms-summary": "Update Record Metadata",
          "items": {
            "$ref": "#/definitions/AccessLocationsItem"
          }
        }
      }
    },
    "ModifyAccess": {
      "type": "object",
      "properties": {
        "AccessLocations": {
          "type": "array",
          "x-ms-summary": "Modify Record Access",
          "items": {
            "$ref": "#/definitions/AccessLocationsItem"
          }
        }
      }
    },
    "DestroyRecord": {
      "type": "object",
      "properties": {
        "AccessLocations": {
          "type": "array",
          "x-ms-summary": "Destroy Record",
          "items": {
            "$ref": "#/definitions/AccessLocationsItem"
          }
        }
      }
    },
    "AddContents": {
      "type": "object",
      "properties": {
        "AccessLocations": {
          "type": "array",
          "x-ms-summary": "Contribute Contents",
          "items": {
            "$ref": "#/definitions/AccessLocationsItem"
          }
        }
      }
    },
    "AccessLocationsItem": {
      "description": "AccessLocations",
      "type": "object",
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "description": "Location Unique Identifier",
          "x-ms-summary": "Unique ID"
        }
      }
    },
    "RawEventData": {
      "type": "object",
      "properties": {
        "Content": {
          "description": "The content of the Service Bus action that retrieved the CM Event Data",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Content"
        }
      }
    },
    "CMRecord": {
      "type": "object",
      "properties": {
        "RecordFilePath": {
          "description": "The filename as it appears in the Uploads folder",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "File Path"
        },
        "RecordAccessionNumber": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Accession Number"
        },
        "RecordAddressee": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Addressee"
        },
        "RecordAlternativeContainer": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Alternative Container"
        },
        "RecordAssignee": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Assignee"
        },
        "RecordAuthor": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "important",
          "x-ms-summary": "Author"
        },
        "RecordAuthorizationMethod": {
          "type": "string",
          "enum": [
            "Simple",
            "Challenge",
            "Docusign"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Authorization Method"
        },
        "RecordAutoClassificationConfidenceLevel": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto Classification Confidence Level"
        },
        "RecordAutoRenderToPDFOnSave": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto Render to PDF On Save"
        },
        "RecordBlueprintTitle": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Blue Print Title"
        },
        "RecordBypassRecordTypeAccessControls": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Bypass Record Type Access Controls"
        },
        "RecordCheckedInBy": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Checked In By"
        },
        "RecordCheckedOutTo": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Checked Out To"
        },
        "RecordClassification": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Classification"
        },
        "RecordClassOfRecord": {
          "type": "string",
          "enum": [
            "Vital",
            "Corporate",
            "WorkGroup",
            "Personal",
            "Reference",
            "Temporary"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Class of Record"
        },
        "RecordClient": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Client"
        },
        "RecordClientRecord": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Client Record"
        },
        "RecordConsignment": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Consignment"
        },
        "RecordConsignmentObject": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Consignment Object"
        },
        "RecordContainer": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "important",
          "x-ms-summary": "Container"
        },
        "RecordCreator": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Creator"
        },
        "RecordCurrentVersion": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Current Version"
        },
        "RecordDateClosed": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Closed"
        },
        "RecordDateCreated": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Created"
        },
        "RecordDateDue": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Due"
        },
        "RecordDateFinalized": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Finalized"
        },
        "RecordDateImported": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Imported"
        },
        "RecordDateInactive": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Inactive"
        },
        "RecordDateModified": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Modified"
        },
        "RecordDatePublished": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Published"
        },
        "RecordDateReceived": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Received"
        },
        "RecordDateRegistered": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Registered"
        },
        "RecordDocumentAttachPending": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Document Attach Pending"
        },
        "RecordDocumentSize": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Document Size"
        },
        "RecordDocumentType": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Document Type"
        },
        "RecordEditor": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Editor"
        },
        "RecordEStore": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Electronic Document Store"
        },
        "RecordExtension": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Document Extension"
        },
        "RecordExternalReference": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "External Reference"
        },
        "RecordFinalizeOnSave": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Finalize on Save"
        },
        "RecordFolderOrigin": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Folder Origin"
        },
        "RecordForeignBarcode": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Foreign Barcode"
        },
        "RecordGeneratedTitle": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Generated Title"
        },
        "RecordGpsLocation": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "GPS Location"
        },
        "RecordHomeLocation": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Location"
        },
        "RecordHomeSpace": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Space"
        },
        "RecordInitiateTemplate": {
          "description": "Unique ID of Workflow Template",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Initiate Template"
        },
        "RecordIsEnclosed": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Is Enclosed"
        },
        "RecordJurisdictions": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Jurisdiction"
        },
        "RecordLastActionDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Last Action Date"
        },
        "RecordLastPartRecord": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Last Part Record"
        },
        "RecordLatestVersion": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Latest Version"
        },
        "RecordLongNumber": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Expanded Number"
        },
        "RecordNumber": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Record Number"
        },
        "RecordManualDestructionDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Manual Destruction Date"
        },
        "RecordMatterRecord": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Matter Record"
        },
        "RecordMediaType": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Media Type"
        },
        "RecordMeeting": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Meeting"
        },
        "RecordMimeType": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Mime Type"
        },
        "RecordMyAuthorizationComments": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "My Authorization Comments"
        },
        "RecordMyAuthorizationComplete": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "My Authorization Complete"
        },
        "RecordMyReviewComments": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "My Review Comments"
        },
        "RecordMyReviewComplete": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "My Review Complete"
        },
        "RecordNbrPages": {
          "description": "",
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Number Pages?"
        },
        "RecordNeedsAuthorization": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Needs Authorization?"
        },
        "RecordNeedsReview": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Needs Review?"
        },
        "RecordNewPartCreationRule": {
          "description": "Unique ID of Auto Part Creation Rule",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "New Part Creation Rule"
        },
        "RecordNextPartRecord": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Next Part Record"
        },
        "NotesUpdateType": {
          "type": "string",
          "enum": [
            "Overwrite",
            "AppendOnly",
            "AppendWithNewLine",
            "AppendWithUserStamp",
            "PrependOnly",
            "PrependWithNewLine",
            "PrependWithUserStamp"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes Update Type"
        },
        "RecordNotes": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes"
        },
        "RecordOriginatedFrom": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Originated From"
        },
        "RecordOriginatedFromRun": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Originated From Run"
        },
        "RecordOtherContact": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Other Contact"
        },
        "RecordOwnerLocation": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Owner Location"
        },
        "RecordPreserveHierarchyOnDataEntry": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Preserver Hierarchy On Data Entry?"
        },
        "RecordPrevPartRecord": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Previous Part Record"
        },
        "RecordPrimaryContact": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Primary Contact"
        },
        "RecordPriority": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Priority"
        },
        "RecordRecordType": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "important",
          "x-ms-summary": "Record Type"
        },
        "RecordRelatedRecord": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Related Record"
        },
        "RecordRepresentative": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Representative"
        },
        "RecordRetentionSchedule": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Retention Schedule"
        },
        "RecordReviewDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review Date"
        },
        "RecordReviewDueDate": {
          "description": "",
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review Due Date"
        },
        "RecordReviewState": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review State"
        },
        "RecordRootPartRecord": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Root Part Record"
        },
        "RecordSecurity": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Security"
        },
        "RecordSeriesRecord": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Series Record"
        },
        "RecordTitle": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Title"
        },
        "RecordTypedTitle": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title (Free Text Part)"
        },
        "Uri": {
          "description": "",
          "type": "integer",
          "format": "int64",
          "x-ms-visibility": "important",
          "x-ms-summary": "Unique Identifier"
        },
        "Fields": {
          "description": "",
          "type": "object",
          "items": {
            "$ref": "#/definitions/CMFieldDictionary"
          },
          "x-ms-summary": "Additional Fields",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "CMEventData": {
      "type": "object",
      "properties": {
        "OnlineEventUri": {
          "x-ms-summary": "Event Unique Identifier",
          "type": "integer",
          "format": "int64"
        },
        "EventType": {
          "x-ms-summary": "Event Type ID",
          "type": "integer",
          "format": "int32"
        },
        "EventTypeString": {
          "x-ms-summary": "Event Type",
          "type": "string"
        },
        "EventDate": {
          "x-ms-summary": "Event Date",
          "type": "string",
          "format": "date-time"
        },
        "ObjectType": {
          "x-ms-summary": "Object Type ID",
          "type": "integer",
          "format": "int32"
        },
        "ObjectTypeString": {
          "x-ms-summary": "Object Type",
          "type": "string"
        },
        "ObjectUri": {
          "x-ms-summary": "Object Unique ID",
          "type": "integer",
          "format": "int64"
        },
        "RelatedObjectType": {
          "x-ms-summary": "Related Object Type ID",
          "type": "integer",
          "format": "int32"
        },
        "RelatedObjectTypeString": {
          "x-ms-summary": "Related Object Type",
          "type": "string"
        },
        "RelatedObjectUri": {
          "x-ms-summary": "Related Object Unique ID",
          "type": "integer",
          "format": "int64"
        },
        "FromMachine": {
          "x-ms-summary": "From Machine",
          "type": "string"
        },
        "ConnectionIPAddress": {
          "x-ms-summary": "Connection IP Address",
          "type": "string"
        },
        "ClientIPAddress": {
          "x-ms-summary": "Client IP Address",
          "type": "string"
        },
        "FromTimeZone": {
          "x-ms-summary": "From Time Zone",
          "type": "integer",
          "format": "int64"
        },
        "LoginName": {
          "x-ms-summary": "Login Name",
          "type": "string"
        },
        "LoginUri": {
          "x-ms-summary": "Login Unique ID",
          "type": "integer",
          "format": "int64"
        },
        "ExtraDetails": {
          "x-ms-summary": "Extra Details",
          "type": "string"
        }
      }
    },
    "CaptionValuePair": {
      "title": "Caption Value Pair",
      "type": "object",
      "properties": {
        "Caption": {
          "x-ms-summary": "Caption",
          "type": "string"
        },
        "Value": {
          "x-ms-summary": "Value",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CMRecordType": {
      "title": "Record Type",
      "type": "object",
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "NameString": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "RecordTypeUsualBehaviour": {
          "type": "object",
          "x-ms-summary": "Usual Behaviour"
        }
      }
    },
    "CMLogMessage": {
      "type": "object",
      "properties": {
        "LogMessage": {
          "type": "string",
          "x-ms-summary": "Log Message"
        },
        "TrimType": {
          "$ref": "#/definitions/CMTrimType"
        },
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        }
      }
    },
    "CMCloseRecord": {
      "type": "object",
      "required": [
        "Uri"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "ContinueOnError": {
          "type": "boolean",
          "x-ms-summary": "Continue on Error?",
          "default": true
        },
        "EncloseContents": {
          "type": "boolean",
          "x-ms-summary": "Enclose Contents?",
          "default": true
        },
        "FinalizeContents": {
          "type": "boolean",
          "x-ms-summary": "Finalize Contents?",
          "default": true
        },
        "LogErrorsOnly": {
          "type": "boolean",
          "x-ms-summary": "Log Errors Only?",
          "default": false
        },
        "LogResults": {
          "type": "boolean",
          "x-ms-summary": "Log Results?",
          "default": true,
          "description": "Return a text log of the Records closed in the Log Message property?"
        },
        "PurgeContentRevisions": {
          "type": "boolean",
          "x-ms-summary": "Purge Content Revisions?",
          "default": true
        },
        "SpecificCloseDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Specific Close Date?"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMReopenRecord": {
      "type": "object",
      "required": [
        "Uri"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "ContinueOnError": {
          "type": "boolean",
          "x-ms-summary": "Continue on Error?",
          "default": true
        },
        "LogResults": {
          "type": "boolean",
          "x-ms-summary": "Log Results?",
          "default": true,
          "description": "Return a text log of the Records reopened in the Log Message property?"
        },
        "UnfinalizeContents": {
          "type": "boolean",
          "x-ms-summary": "Unfinalize Contents?",
          "default": true
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMReassignAction": {
      "type": "object",
      "required": [
        "Uri",
        "NewAssignee",
        "RecordActionUri"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "NewAssignee": {
          "type": "string",
          "x-ms-summary": "New Assignee",
          "description": "Unique ID or email address of new Assignee"
        },
        "RecordActionUri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Action to Reassign",
          "x-ms-dynamic-values": {
            "operationId": "LookupRecordActionsOnRecord",
            "parameters": {
              "RecUri": {
                "parameter": "Uri"
              }
            },
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          },
          "x-ms-dynamic-list": {
            "operationId": "LookupRecordActionsOnRecord",
            "itemsPath": "Items",
            "itemValuePath": "Value",
            "itemTitlePath": "Caption",
            "parameters": {
              "RecUri": {
                "parameterReference": "Record/Uri"
              }
            }
          }
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMUpdateRecord": {
      "type": "object",
      "properties": {
        "Uri": {
          "description": "",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Unique Identifier"
        },
        "q": {
          "description": "Specify a query here to apply the update to a set of Records rather than only one (as specified by the Unique ID)",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Query"
        },
        "RecordTypedTitle": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title (Free Text Part)"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        },
        "RecordAuthor": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Author"
        },
        "RecordContainer": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Container"
        },
        "RecordClassification": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Classification",
          "description": "Provide the Unique Identifier of the Classification"
        },
        "RecordAddressee": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Addressee"
        },
        "RecordAlternativeContainer": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Alternative Container"
        },
        "RecordAssignee": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Assignee"
        },
        "RecordAutoRenderToPDFOnSave": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto Render to PDF On Save"
        },
        "RecordBypassRecordTypeAccessControls": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Bypass Record Type Access Controls"
        },
        "CheckinAs": {
          "description": "Set the Source property of the electronic document.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Check In As"
        },
        "RecordClient": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Client"
        },
        "RecordClientRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Client Record"
        },
        "CopyDocumentFromRecord": {
          "description": "Specify a Unique ID for the Record from which to copy the electronic document for this Record.,",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Copy Document From Record"
        },
        "RecordCreator": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Creator"
        },
        "RecordDateCreated": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Created"
        },
        "RecordDateDue": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Due"
        },
        "RecordDatePublished": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Published"
        },
        "RecordDateReceived": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Received"
        },
        "RecordExternalReference": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "External Reference"
        },
        "FailOnWarnings": {
          "description": "True to not create/save an object if there are any warnings.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Fail On Warnings?"
        },
        "RecordFilePath": {
          "description": "The filename as it appears in the Uploads folder.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "File Name in Uploads folder"
        },
        "RecordFinalizeOnSave": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Finalize on Save"
        },
        "RecordForeignBarcode": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Foreign Barcode"
        },
        "RecordGpsLocation": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "GPS Location"
        },
        "RecordHomeLocation": {
          "description": "Unique ID of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Location"
        },
        "RecordHomeSpace": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Space"
        },
        "RecordIsEnclosed": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Is Enclosed"
        },
        "RecordJurisdictions": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Jurisdiction"
        },
        "keepBookedOut": {
          "description": "True to leave the Record checked out after the electronic document is uploaded.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Keep Checked Out"
        },
        "RecordLongNumber": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Long Number"
        },
        "RecordMediaType": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Media Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupEnumMediaTypes",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          }
        },
        "RecordNotes": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes"
        },
        "NotesUpdateType": {
          "type": "string",
          "enum": [
            "Overwrite",
            "AppendOnly",
            "AppendWithNewLine",
            "AppendWithUserStamp",
            "PrependOnly",
            "PrependWithNewLine",
            "PrependWithUserStamp"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes Update Type",
          "x-ms-enum-values": [
            {
              "value": "Overwrite",
              "displayName": "Overwrite"
            },
            {
              "value": "AppendOnly",
              "displayName": "Append Only"
            },
            {
              "value": "AppendWithNewLine",
              "displayName": "Append With New Line"
            },
            {
              "value": "AppendWithUserStamp",
              "displayName": "Append With User Stamp"
            },
            {
              "value": "PrependOnly",
              "displayName": "Prepend Only"
            },
            {
              "value": "PrependWithNewLine",
              "displayName": "Prepend With New Line"
            },
            {
              "value": "PrependWithUserStamp",
              "displayName": "Prepend With User Stamp"
            }
          ],
          "default": "PrependWithUserStamp"
        },
        "RecordOtherContact": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Other Contact"
        },
        "RecordOwnerLocation": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Owner Location"
        },
        "RecordRelatedRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Related Record"
        },
        "RecordRepresentative": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Representative"
        },
        "RecordReviewDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review Date"
        },
        "RecordReviewDueDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review Due Date"
        },
        "RecordReviewState": {
          "type": "string",
          "enum": [
            "None",
            "Editing",
            "Reviewing",
            "Authorizing",
            "Finalizing",
            "Complete"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review State"
        },
        "RecordSecurity": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Security"
        }
      }
    },
    "CMUpdateRecordClassification": {
      "required": [
        "Uri",
        "RecordClassification"
      ],
      "type": "object",
      "properties": {
        "Uri": {
          "description": "",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Unique Identifier"
        },
        "RecordClassification": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Classification",
          "description": "Provide the Unique Identifier of the Classification"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMUpdateRecordAdvanced": {
      "required": [
        "Uri"
      ],
      "type": "object",
      "properties": {
        "Uri": {
          "description": "",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Unique Identifier"
        },
        "RecordRecordType": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Record Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupRecordTypes",
            "value-collection": "Results",
            "value-path": "Uri",
            "value-title": "NameString"
          }
        },
        "RecordClassification": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Classification",
          "description": "Provide the Unique Identifier of the Classification"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        },
        "RecordAuthor": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Author"
        },
        "RecordAccessionNumber": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Accession Number"
        },
        "RecordAddressee": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Addressee"
        },
        "RecordAlternativeContainer": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Alternative Container"
        },
        "RecordAssignee": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Assignee"
        },
        "RecordAutoClassificationConfidenceLevel": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto Classification Confidence Level"
        },
        "RecordAutoRenderToPDFOnSave": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto Render to PDF On Save"
        },
        "RecordBypassRecordTypeAccessControls": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Bypass Record Type Access Controls"
        },
        "ByPassSave": {
          "description": "True to not save the object.  One use of this is to set one or more properties on a Record post and return the data entry form.  The data entry form will then reflect the various properties set on the original Record.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Bypass Save?"
        },
        "ChangePositionWithinFavorites": {
          "description": "When search for favorites they will be returned in this order unless another sort is used.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Change Position Within Favourites"
        },
        "ChangePositionWithinUserLabel": {
          "description": "When searching by UserLabel they wil be returned in this order unless another sort is used.,",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Change Position Within User Label"
        },
        "CheckinAs": {
          "description": "Set the Source property of the electronic document.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Check In As"
        },
        "RecordClassOfRecord": {
          "type": "string",
          "enum": [
            "Vital",
            "Corporate",
            "WorkGroup",
            "Personal",
            "Reference",
            "Temporary"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Class of Record"
        },
        "RecordClient": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Client"
        },
        "RecordClientRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Client Record"
        },
        "comments": {
          "description": "Comments to go in the Record Notes when the document is uploaded.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Comments"
        },
        "RecordConsignment": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Consignment"
        },
        "RecordConsignmentObject": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Consignment Object"
        },
        "RecordContainer": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Container"
        },
        "CopyDocumentFromRecord": {
          "description": "Specify a Unique ID for the Record from which to copy the electronic document for this Record.,",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Copy Document From Record"
        },
        "RecordCreator": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Creator"
        },
        "RecordDateCreated": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Created"
        },
        "RecordDateDue": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Due"
        },
        "RecordDatePublished": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Published"
        },
        "RecordDateReceived": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Received"
        },
        "RecordEditor": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Editor"
        },
        "RecordEStore": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Electronic Document Store"
        },
        "RecordExternalReference": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "External Reference"
        },
        "FailOnWarnings": {
          "description": "True to not create/save an object if there are any warnings.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Fail On Warnings?"
        },
        "RecordFilePath": {
          "description": "The filename as it appears in the Uploads folder.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "File Name in Uploads folder"
        },
        "RecordFinalizeOnSave": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Finalize on Save"
        },
        "RecordForeignBarcode": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Foreign Barcode"
        },
        "RecordGpsLocation": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "GPS Location"
        },
        "RecordHomeLocation": {
          "description": "Unique ID of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Location"
        },
        "RecordHomeSpace": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Space"
        },
        "RecordIsEnclosed": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Is Enclosed"
        },
        "RecordJurisdictions": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Jurisdiction"
        },
        "keepBookedOut": {
          "description": "True to leave the Record checked out after the electronic document is uploaded.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Keep Checked Out"
        },
        "RecordLastActionDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Last Action Date"
        },
        "RecordLongNumber": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Long Number"
        },
        "MakeActive": {
          "description": "Reverts the state of the record (and any of its contents) so that it is no longer inactive. When processing contents you can specify whether the task should halt if any failures occur.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Make Active"
        },
        "MakeInactive": {
          "description": "Sets the dateInactive for this record and any of its contents. When processing contents you can specify whether the task should halt if any failures occur.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Make Inactive"
        },
        "makeNewRevision": {
          "description": "True to create a new Revision with this Electronic document false to replace the current Revision.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Make New Revision"
        },
        "RecordManualDestructionDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Manual Destruction Date"
        },
        "RecordMatterRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Matter Record"
        },
        "RecordMediaType": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Media Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupEnumMediaTypes",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          }
        },
        "RecordMyAuthorizationComments": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "My Authorization Comments"
        },
        "RecordMyAuthorizationComplete": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "My Authorization Complete"
        },
        "RecordMyReviewComments": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "My Review Comments"
        },
        "RecordMyReviewComplete": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "My Review Complete"
        },
        "RecordNeedsAuthorization": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Needs Authorization?"
        },
        "RecordNeedsReview": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Needs Review?"
        },
        "RecordNewPartCreationRule": {
          "description": "Unique ID of Auto Part Creation Rule",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "New Part Creation Rule"
        },
        "RecordNotes": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes"
        },
        "NotesUpdateType": {
          "type": "string",
          "enum": [
            "Overwrite",
            "AppendOnly",
            "AppendWithNewLine",
            "AppendWithUserStamp",
            "PrependOnly",
            "PrependWithNewLine",
            "PrependWithUserStamp"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes Update Type",
          "x-ms-enum-values": [
            {
              "value": "Overwrite",
              "displayName": "Overwrite"
            },
            {
              "value": "AppendOnly",
              "displayName": "Append Only"
            },
            {
              "value": "AppendWithNewLine",
              "displayName": "Append With New Line"
            },
            {
              "value": "AppendWithUserStamp",
              "displayName": "Append With User Stamp"
            },
            {
              "value": "PrependOnly",
              "displayName": "Prepend Only"
            },
            {
              "value": "PrependWithNewLine",
              "displayName": "Prepend With New Line"
            },
            {
              "value": "PrependWithUserStamp",
              "displayName": "Prepend With User Stamp"
            }
          ],
          "default": "PrependWithUserStamp"
        },
        "RecordOtherContact": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Other Contact"
        },
        "RecordOwnerLocation": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Owner Location"
        },
        "RecordPreserveHierarchyOnDataEntry": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Preserver Hierarchy On Data Entry?"
        },
        "RecordPrevPartRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Previous Part Record"
        },
        "RecordPriority": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Priority"
        },
        "RecordNewType": {
          "description": "Leave as Default unless creating a New Part Version or Copy.",
          "type": "string",
          "enum": [
            "Default",
            "Copy",
            "Part",
            "Version"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Record New Type"
        },
        "RecordRelatedRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Related Record"
        },
        "RecordRepresentative": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Representative"
        },
        "RecordRetentionSchedule": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Retention Schedule"
        },
        "RecordReviewDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review Date"
        },
        "RecordReviewDueDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review Due Date"
        },
        "RecordReviewState": {
          "type": "string",
          "enum": [
            "None",
            "Editing",
            "Reviewing",
            "Authorizing",
            "Finalizing",
            "Complete"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review State"
        },
        "RecordSecurity": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Security"
        },
        "RecordSeriesRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Series Record"
        },
        "RecordTypedTitle": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title (Free Text Part)"
        },
        "q": {
          "description": "Specify a query here to apply the update to a set of Records rather than only one (as specified by the Unique ID).",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Query String"
        }
      }
    },
    "CMUpdateRecordFinalise": {
      "required": [
        "Uri"
      ],
      "type": "object",
      "properties": {
        "Uri": {
          "description": "",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Unique Identifier"
        },
        "SetAsFinal": {
          "description": "",
          "type": "object",
          "x-ms-visibility": "important",
          "properties": {
            "SetAsFinalRemoveOldRevisions": {
              "type": "boolean",
              "x-ms-summary": "Remove Old Revisions"
            }
          }
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMUpdateRecordUnfinalise": {
      "required": [
        "Uri"
      ],
      "type": "object",
      "properties": {
        "Uri": {
          "description": "",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Unique Identifier"
        }
      }
    },
    "CMCreateRecordContainer": {
      "required": [
        "RecordRecordType",
        "RecordTypedTitle"
      ],
      "type": "object",
      "properties": {
        "RecordRecordType": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Record Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupRecordTypes",
            "value-collection": "Results",
            "value-path": "Uri",
            "value-title": "NameString",
            "parameters": {
              "queryString": "behaviour:folder and active"
            }
          }
        },
        "RecordTypedTitle": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title (Free Text Part)"
        },
        "RecordClassification": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Classification",
          "description": "Provide the Unique Identifier of the Classification"
        },
        "RecordContainer": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Container"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        },
        "RecordAuthor": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Author"
        },
        "RecordAddressee": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Addressee"
        },
        "RecordAlternativeContainer": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Alternative Container"
        },
        "RecordAssignee": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Assignee"
        },
        "RecordBypassRecordTypeAccessControls": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Bypass Record Type Access Controls"
        },
        "RecordClient": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Client"
        },
        "RecordCreator": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Creator"
        },
        "RecordDateCreated": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Created"
        },
        "RecordDateDue": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Due"
        },
        "RecordDatePublished": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Published"
        },
        "RecordExternalReference": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "External Reference"
        },
        "FailOnWarnings": {
          "description": "True to not create/save an object if there are any warnings.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Fail On Warnings?"
        },
        "RecordFilePath": {
          "description": "The filename as it appears in the Uploads folder.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "File Name in Uploads folder"
        },
        "RecordForeignBarcode": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Foreign Barcode"
        },
        "RecordGpsLocation": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "GPS Location"
        },
        "RecordHomeLocation": {
          "description": "Unique ID of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Location"
        },
        "RecordHomeSpace": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Space"
        },
        "RecordIsEnclosed": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Is Enclosed"
        },
        "RecordJurisdictions": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Jurisdiction"
        },
        "RecordLastActionDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Last Action Date"
        },
        "RecordLongNumber": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Long Number"
        },
        "RecordNotes": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes"
        },
        "NotesUpdateType": {
          "type": "string",
          "enum": [
            "Overwrite",
            "AppendOnly",
            "AppendWithNewLine",
            "AppendWithUserStamp",
            "PrependOnly",
            "PrependWithNewLine",
            "PrependWithUserStamp"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes Update Type",
          "x-ms-enum-values": [
            {
              "value": "Overwrite",
              "displayName": "Overwrite"
            },
            {
              "value": "AppendOnly",
              "displayName": "Append Only"
            },
            {
              "value": "AppendWithNewLine",
              "displayName": "Append With New Line"
            },
            {
              "value": "AppendWithUserStamp",
              "displayName": "Append With User Stamp"
            },
            {
              "value": "PrependOnly",
              "displayName": "Prepend Only"
            },
            {
              "value": "PrependWithNewLine",
              "displayName": "Prepend With New Line"
            },
            {
              "value": "PrependWithUserStamp",
              "displayName": "Prepend With User Stamp"
            }
          ],
          "default": "PrependWithUserStamp"
        },
        "RecordOtherContact": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Other Contact"
        },
        "RecordOwnerLocation": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Owner Location"
        },
        "RecordRelatedRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Related Record"
        },
        "RecordRepresentative": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Representative"
        },
        "RecordReviewDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review Date"
        },
        "RecordReviewDueDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review Due Date"
        },
        "RecordReviewState": {
          "type": "string",
          "enum": [
            "None",
            "Editing",
            "Reviewing",
            "Authorizing",
            "Finalizing",
            "Complete"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review State"
        },
        "RecordSecurity": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Security"
        }
      }
    },
    "CMCreateRecordDocument": {
      "required": [
        "RecordRecordType",
        "RecordTypedTitle"
      ],
      "type": "object",
      "properties": {
        "RecordRecordType": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Record Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupRecordTypes",
            "value-collection": "Results",
            "value-path": "Uri",
            "value-title": "NameString",
            "parameters": {
              "queryString": "behaviour:document and active"
            }
          }
        },
        "RecordTypedTitle": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title (Free Text Part)"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        },
        "RecordAuthor": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Author"
        },
        "RecordAddressee": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Addressee"
        },
        "RecordAlternativeContainer": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Alternative Container"
        },
        "RecordAssignee": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Assignee"
        },
        "RecordAutoRenderToPDFOnSave": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto Render to PDF On Save"
        },
        "RecordBypassRecordTypeAccessControls": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Bypass Record Type Access Controls"
        },
        "CheckinAs": {
          "description": "Set the Source property of the electronic document.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Check In As"
        },
        "RecordClassification": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Classification",
          "description": "Provide the Unique Identifier of the Classification"
        },
        "RecordClient": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Client"
        },
        "RecordClientRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Client Record"
        },
        "RecordContainer": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Container"
        },
        "CopyDocumentFromRecord": {
          "description": "Specify a Unique ID for the Record from which to copy the electronic document for this Record.,",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Copy Document From Record"
        },
        "RecordCreator": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Creator"
        },
        "RecordDateCreated": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Created"
        },
        "RecordDateDue": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Due"
        },
        "RecordDatePublished": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Published"
        },
        "RecordDateReceived": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Received"
        },
        "RecordExternalReference": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "External Reference"
        },
        "FailOnWarnings": {
          "description": "True to not create/save an object if there are any warnings.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Fail On Warnings?"
        },
        "RecordFilePath": {
          "description": "The filename as it appears in the Uploads folder.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "File Name in Uploads folder"
        },
        "RecordFinalizeOnSave": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Finalize on Save"
        },
        "RecordForeignBarcode": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Foreign Barcode"
        },
        "RecordGpsLocation": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "GPS Location"
        },
        "RecordHomeLocation": {
          "description": "Unique ID of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Location"
        },
        "RecordHomeSpace": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Space"
        },
        "RecordIsEnclosed": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Is Enclosed"
        },
        "RecordJurisdictions": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Jurisdiction"
        },
        "keepBookedOut": {
          "description": "True to leave the Record checked out after the electronic document is uploaded.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Keep Checked Out"
        },
        "RecordLastActionDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Last Action Date"
        },
        "RecordLongNumber": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Long Number"
        },
        "RecordMediaType": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Media Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupEnumMediaTypes",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          }
        },
        "RecordNotes": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes"
        },
        "NotesUpdateType": {
          "type": "string",
          "enum": [
            "Overwrite",
            "AppendOnly",
            "AppendWithNewLine",
            "AppendWithUserStamp",
            "PrependOnly",
            "PrependWithNewLine",
            "PrependWithUserStamp"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes Update Type",
          "x-ms-enum-values": [
            {
              "value": "Overwrite",
              "displayName": "Overwrite"
            },
            {
              "value": "AppendOnly",
              "displayName": "Append Only"
            },
            {
              "value": "AppendWithNewLine",
              "displayName": "Append With New Line"
            },
            {
              "value": "AppendWithUserStamp",
              "displayName": "Append With User Stamp"
            },
            {
              "value": "PrependOnly",
              "displayName": "Prepend Only"
            },
            {
              "value": "PrependWithNewLine",
              "displayName": "Prepend With New Line"
            },
            {
              "value": "PrependWithUserStamp",
              "displayName": "Prepend With User Stamp"
            }
          ],
          "default": "PrependWithUserStamp"
        },
        "RecordOtherContact": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Other Contact"
        },
        "RecordOwnerLocation": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Owner Location"
        },
        "RecordRelatedRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Related Record"
        },
        "RecordRepresentative": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Representative"
        },
        "RecordReviewDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review Date"
        },
        "RecordReviewDueDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review Due Date"
        },
        "RecordReviewState": {
          "type": "string",
          "enum": [
            "None",
            "Editing",
            "Reviewing",
            "Authorizing",
            "Finalizing",
            "Complete"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review State"
        },
        "RecordSecurity": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Security"
        }
      }
    },
    "CMCreateRecordAdvanced": {
      "required": [
        "RecordRecordType",
        "RecordTypedTitle"
      ],
      "type": "object",
      "properties": {
        "RecordRecordType": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Record Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupRecordTypes",
            "value-collection": "Results",
            "value-path": "Uri",
            "value-title": "NameString"
          }
        },
        "RecordTypedTitle": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title (Free Text Part)"
        },
        "RecordClassification": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Classification",
          "description": "Provide the Unique Identifier of the Classification"
        },
        "RecordAuthor": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Author"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        },
        "RecordAccessionNumber": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Accession Number"
        },
        "RecordAddressee": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Addressee"
        },
        "RecordAlternativeContainer": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Alternative Container"
        },
        "RecordAssignee": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Assignee"
        },
        "RecordAutoClassificationConfidenceLevel": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto Classification Confidence Level"
        },
        "RecordAutoRenderToPDFOnSave": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto Render to PDF On Save"
        },
        "RecordBypassRecordTypeAccessControls": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Bypass Record Type Access Controls"
        },
        "ByPassSave": {
          "description": "True to not save the object.  One use of this is to set one or more properties on a Record post and return the data entry form.  The data entry form will then reflect the various properties set on the original Record.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Bypass Save?"
        },
        "ChangePositionWithinFavorites": {
          "description": "When search for favorites they will be returned in this order unless another sort is used.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Change Position Within Favourites"
        },
        "ChangePositionWithinUserLabel": {
          "description": "When searching by UserLabel they wil be returned in this order unless another sort is used.,",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Change Position Within User Label"
        },
        "CheckinAs": {
          "description": "Set the Source property of the electronic document.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Check In As"
        },
        "RecordClassOfRecord": {
          "type": "string",
          "enum": [
            "Vital",
            "Corporate",
            "WorkGroup",
            "Personal",
            "Reference",
            "Temporary"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Class of Record"
        },
        "RecordClient": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Client"
        },
        "RecordClientRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Client Record"
        },
        "comments": {
          "description": "Comments to go in the Record Notes when the document is uploaded.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Comments"
        },
        "RecordConsignment": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Consignment"
        },
        "RecordConsignmentObject": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Consignment Object"
        },
        "RecordContainer": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Container"
        },
        "CopyDocumentFromRecord": {
          "description": "Specify a Unique ID for the Record from which to copy the electronic document for this Record.,",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Copy Document From Record"
        },
        "RecordCreator": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Creator"
        },
        "RecordDateCreated": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Created"
        },
        "RecordDateDue": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Due"
        },
        "RecordDatePublished": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Published"
        },
        "RecordDateReceived": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date Received"
        },
        "RecordEditor": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Editor"
        },
        "RecordExternalReference": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "External Reference"
        },
        "FailOnWarnings": {
          "description": "True to not create/save an object if there are any warnings.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Fail On Warnings?"
        },
        "RecordFilePath": {
          "description": "The filename as it appears in the Uploads folder.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "File Name in Uploads folder"
        },
        "RecordFinalizeOnSave": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Finalize on Save"
        },
        "RecordForeignBarcode": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Foreign Barcode"
        },
        "RecordGpsLocation": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "GPS Location"
        },
        "RecordHomeLocation": {
          "description": "Unique ID of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Location"
        },
        "RecordHomeSpace": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Space"
        },
        "RecordInitiateTemplate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Initiate Template"
        },
        "RecordIsEnclosed": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Is Enclosed"
        },
        "RecordJurisdictions": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Jurisdiction"
        },
        "keepBookedOut": {
          "description": "True to leave the Record checked out after the electronic document is uploaded.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Keep Checked Out"
        },
        "RecordLastActionDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Last Action Date"
        },
        "RecordLongNumber": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Long Number"
        },
        "MakeActive": {
          "description": "Reverts the state of the record (and any of its contents) so that it is no longer inactive. When processing contents you can specify whether the task should halt if any failures occur.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Make Active"
        },
        "MakeInactive": {
          "description": "Sets the dateInactive for this record and any of its contents. When processing contents you can specify whether the task should halt if any failures occur.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Make Inactive"
        },
        "makeNewRevision": {
          "description": "True to create a new Revision with this Electronic document false to replace the current Revision.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Make New Revision"
        },
        "RecordManualDestructionDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Manual Destruction Date"
        },
        "RecordMatterRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Matter Record"
        },
        "RecordMediaType": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Media Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupEnumMediaTypes",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          }
        },
        "RecordMyAuthorizationComments": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "My Authorization Comments"
        },
        "RecordMyAuthorizationComplete": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "My Authorization Complete"
        },
        "RecordMyReviewComments": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "My Review Comments"
        },
        "RecordMyReviewComplete": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "My Review Complete"
        },
        "RecordNeedsAuthorization": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Needs Authorization?"
        },
        "RecordNeedsReview": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Needs Review?"
        },
        "RecordNewPartCreationRule": {
          "description": "Unique ID of Auto Part Creation Rule",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "New Part Creation Rule"
        },
        "RecordNotes": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes"
        },
        "NotesUpdateType": {
          "type": "string",
          "enum": [
            "Overwrite",
            "AppendOnly",
            "AppendWithNewLine",
            "AppendWithUserStamp",
            "PrependOnly",
            "PrependWithNewLine",
            "PrependWithUserStamp"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes Update Type",
          "x-ms-enum-values": [
            {
              "value": "Overwrite",
              "displayName": "Overwrite"
            },
            {
              "value": "AppendOnly",
              "displayName": "Append Only"
            },
            {
              "value": "AppendWithNewLine",
              "displayName": "Append With New Line"
            },
            {
              "value": "AppendWithUserStamp",
              "displayName": "Append With User Stamp"
            },
            {
              "value": "PrependOnly",
              "displayName": "Prepend Only"
            },
            {
              "value": "PrependWithNewLine",
              "displayName": "Prepend With New Line"
            },
            {
              "value": "PrependWithUserStamp",
              "displayName": "Prepend With User Stamp"
            }
          ],
          "default": "PrependWithUserStamp"
        },
        "RecordOtherContact": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Other Contact"
        },
        "RecordOwnerLocation": {
          "description": "Unique ID or email address of Location",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Owner Location"
        },
        "RecordPreserveHierarchyOnDataEntry": {
          "description": "",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Preserver Hierarchy On Data Entry?"
        },
        "RecordPrevPartRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Previous Part Record"
        },
        "RecordPriority": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Priority"
        },
        "RecordNewType": {
          "description": "Leave as Default unless creating a New Part Version or Copy.",
          "type": "string",
          "enum": [
            "Default",
            "Copy",
            "Part",
            "Version"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Record New Type"
        },
        "RecordRelatedRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Related Record"
        },
        "RecordRepresentative": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Representative"
        },
        "RecordRetentionSchedule": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Retention Schedule"
        },
        "RecordReviewDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review Date"
        },
        "RecordReviewDueDate": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review Due Date"
        },
        "RecordReviewState": {
          "type": "string",
          "enum": [
            "None",
            "Editing",
            "Reviewing",
            "Authorizing",
            "Finalizing",
            "Complete"
          ],
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Review State"
        },
        "RecordSecurity": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Security"
        },
        "RecordSeriesRecord": {
          "description": "",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Series Record"
        },
        "propertySets": {
          "description": "Specify Property Sets in addition to those posted to be returned by the request.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Property Sets"
        },
        "q": {
          "description": "Specify a query here to apply the update to a set of Records rather than only one (as specified by the Unique ID).",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Query String"
        }
      }
    },
    "CMSearch": {
      "type": "object",
      "description": "Content Manager Search Fields",
      "required": [
        "TrimType",
        "q"
      ],
      "properties": {
        "TrimType": {
          "$ref": "#/definitions/CMTrimType"
        },
        "q": {
          "type": "string",
          "description": "Enter a search query, e.g. 'all' to get all objects.",
          "x-ms-summary": "Query String"
        },
        "ApplyDefaults": {
          "type": "boolean",
          "description": "True to apply the user's default filter and sort to this search.",
          "x-ms-summary": "Apply Defaults",
          "x-ms-visibility": "advanced"
        },
        "CountResults": {
          "type": "boolean",
          "description": "CountResults returns the most reliable and the slowest count of the total search results. The resulting count is in the response Count property.",
          "x-ms-summary": "Count Results",
          "x-ms-visibility": "advanced"
        },
        "DescendantProperties": {
          "type": "string",
          "description": "A comma separated list of object properties, applies only to object properties of this and lower level properties e.g. RecordNumber,RecordTitle.",
          "x-ms-summary": "Descendant Properties",
          "x-ms-visibility": "advanced"
        },
        "ExcludeCount": {
          "type": "boolean",
          "description": "Returning the TotalResults and SearchTitle can degrade performance. Set to true if TotalResults and SearchTitle are not required.",
          "x-ms-summary": "Exclude Count",
          "x-ms-visibility": "advanced"
        },
        "Filter": {
          "type": "string",
          "description": "A space separated list of search clauses to apply as a filter.",
          "x-ms-visibility": "advanced"
        },
        "FromSearch": {
          "type": "integer",
          "format": "int64",
          "description": "The Unique ID of a Saved Search from which to construct this search.",
          "x-ms-summary": "From Search",
          "x-ms-visibility": "advanced"
        },
        "IncludePropertyDefs": {
          "type": "boolean",
          "description": "True to return an array of the Property Definitions used by properties in this response.",
          "x-ms-summary": "Include Property Defs",
          "x-ms-visibility": "advanced"
        },
        "Options": {
          "type": "string",
          "description": "Set one or more of the options typically set in User Options for this search only.  Use ids from the /PropertyDef?Get=SearchOptions service, append a minus sign to set to false, otherwise true is assumed.",
          "x-ms-visibility": "advanced"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64",
          "description": "The number of items to return in each page of results. If empty, defaults to default value set in configuration.",
          "x-ms-summary": "Page Size",
          "x-ms-visibility": "advanced"
        },
        "PropertyValue": {
          "type": "string",
          "enum": [
            "Raw",
            "String",
            "Both"
          ],
          "description": "Include the raw value, the string value, or both in the results.",
          "x-ms-summary": "Property Value",
          "x-ms-visibility": "advanced"
        },
        "PropertySets": {
          "type": "string",
          "description": "One or more pre-defined property sets, select from DataGridVisible, Detailed, FromSearch, All or a custom property set as defined in your service configuration.",
          "x-ms-summary": "Property Sets",
          "x-ms-visibility": "advanced"
        },
        "purpose": {
          "type": "integer",
          "format": "int64",
          "description": "A special property to filter search results based on object Purpose enum values.",
          "x-ms-summary": "Purpose",
          "x-ms-visibility": "advanced"
        },
        "purposeExtra": {
          "type": "integer",
          "format": "int64",
          "description": "Necessary as a supplement to some purposes.  The ObjectDef service provides information on the enum or TrimMainObject type to specify, in particular ObjectDef.ExtraPurposeEnums, ObjectDef.ExtraPurposeObjectTypes and HaveExtraPurposeParameter.",
          "x-ms-summary": "Purpose Extra",
          "x-ms-visibility": "advanced"
        },
        "sortBy": {
          "type": "string",
          "description": "A comma separated list of search clause Ids.  Use - to specify descending.  E.g. `Number-` to sort Records by number descending.",
          "x-ms-summary": "Sort By",
          "x-ms-visibility": "advanced"
        },
        "start": {
          "type": "integer",
          "format": "int64",
          "description": "The position in the result set to start, empty (or 1) to start at the beginning, 2 to start at the second object, 3 at the third, etc.",
          "x-ms-summary": "Start",
          "x-ms-visibility": "advanced"
        },
        "StringDisplayType": {
          "type": "string",
          "enum": [
            "Default",
            "ViewPane",
            "TreeColumn",
            "Reporter",
            "DataEntry",
            "ErrorMessage",
            "Export",
            "Merge",
            "WebService",
            "WebPublish"
          ],
          "title": "StringDisplayType",
          "description": "If returning the string value which format to use.",
          "x-ms-summary": "String Display Type",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "CMFields": {
      "type": "object",
      "description": "Set Additional Fields",
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "Field": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMFieldDictionary"
          }
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMFieldDictionary": {
      "description": "FieldDictionary",
      "type": "object",
      "properties": {
        "SearchClause": {
          "type": "string",
          "x-ms-summary": "Name",
          "x-ms-dynamic-values": {
            "operationId": "LookupRecordAdditionalFields",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          }
        },
        "Value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      }
    },
    "CMFieldsLocation": {
      "type": "object",
      "description": "Set Additional Fields",
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "Field": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMFieldDictionaryLocation"
          }
        }
      }
    },
    "CMFieldDictionaryLocation": {
      "description": "FieldDictionary",
      "type": "object",
      "properties": {
        "SearchClause": {
          "type": "string",
          "x-ms-summary": "Name",
          "x-ms-dynamic-values": {
            "operationId": "LookupLocationAdditionalFields",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          }
        },
        "Value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      }
    },
    "CMAttachAction": {
      "type": "object",
      "required": [
        "Uri",
        "ActionToAttach"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "ActionToAttach": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Action To Attach",
          "x-ms-dynamic-values": {
            "operationId": "LookupActionDefsAssignable",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          }
        },
        "NewAssignee": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Assignee Unique ID"
        },
        "AssigneeOption": {
          "type": "string",
          "enum": [
            "OverrideExisting",
            "OnlyIfNoneSpecified"
          ],
          "x-ms-enum-values": [
            {
              "value": "OverrideExisting",
              "displayName": "Override existing"
            },
            {
              "value": "OnlyIfNoneSpecified",
              "displayName": "Only if none specified"
            }
          ],
          "x-ms-summary": "Assignee Option",
          "default": "OverrideExisting"
        },
        "ScheduleStartDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Schedule Start Date"
        },
        "RecordAction": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Existing Action"
        },
        "InsertPos": {
          "type": "string",
          "enum": [
            "Before",
            "After"
          ],
          "x-ms-enum-values": [
            {
              "value": "Before",
              "displayName": "Before"
            },
            {
              "value": "After",
              "displayName": "After"
            }
          ],
          "x-ms-summary": "Insert Position",
          "default": "After"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMCompleteActions": {
      "type": "object",
      "required": [
        "Uri",
        "Complete"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "Complete": {
          "type": "string",
          "x-ms-summary": "Complete",
          "description": "Specify which Record Actions to complete",
          "enum": [
            "Current",
            "All",
            "ForUri"
          ],
          "x-ms-enum-values": [
            {
              "value": "Current",
              "displayName": "Current"
            },
            {
              "value": "All",
              "displayName": "All"
            },
            {
              "value": "ForUri",
              "displayName": "For Unique Identifier"
            }
          ]
        },
        "CompletePrevious": {
          "type": "boolean",
          "x-ms-summary": "Complete Previous Actions",
          "description": "Complete all Record Actions prior to the one specified",
          "default": false
        },
        "CompletionDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Completion Date",
          "description": "The date to set as the completion date"
        },
        "RecordActionUri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Record Action Unique ID",
          "description": "The Unique ID of the Record Action to complete if 'For Unique Identifier' is selected"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMRemoveAllActions": {
      "type": "object",
      "required": [
        "Uri"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMDispose": {
      "type": "object",
      "required": [
        "Uri"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "ContinueOnError": {
          "type": "boolean",
          "x-ms-summary": "Continue on error?",
          "default": false
        },
        "MethodOfDisposal": {
          "type": "string",
          "x-ms-summary": "Method of disposal",
          "enum": [
            "None",
            "Archived",
            "Transferred",
            "Destroyed"
          ]
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMUndispose": {
      "type": "object",
      "required": [
        "Uri"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "ContinueOnError": {
          "type": "boolean",
          "x-ms-summary": "Continue on error?",
          "default": false
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMCheckout": {
      "type": "object",
      "required": [
        "Uri"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "Comments": {
          "type": "string",
          "x-ms-summary": "Comments"
        },
        "SaveCheckoutPathAs": {
          "type": "string",
          "x-ms-summary": "Save Checkout Path As"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMUndoCheckout": {
      "type": "object",
      "required": [
        "Uri"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "Comments": {
          "type": "string",
          "x-ms-summary": "Comments"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMRequestRendition": {
      "type": "object",
      "required": [
        "Uri",
        "RenditionType"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "RenditionType": {
          "type": "string",
          "x-ms-summary": "Rendition Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupEnumRenditionType",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          }
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMRescheduleActions": {
      "type": "object",
      "required": [
        "Uri"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "FromBaseDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "From Base Date"
        },
        "UseActualDurations": {
          "type": "boolean",
          "x-ms-summary": "Use Actual Durations",
          "default": true
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMAttachContact": {
      "type": "object",
      "required": [
        "Uri",
        "ContactType",
        "ContactLocation",
        "IsPrimary"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "ContactType": {
          "type": "string",
          "x-ms-summary": "Contact Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupEnumContactType",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          }
        },
        "ContactLocation": {
          "type": "string",
          "x-ms-summary": "Contact Location",
          "description": "Unique ID or email address of Location"
        },
        "IsPrimary": {
          "type": "boolean",
          "x-ms-summary": "Set as primary contact?",
          "default": false
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMAttachKeyword": {
      "type": "object",
      "required": [
        "Uri",
        "Keyword"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Record",
          "description": "The Unique ID of the Record to attach the Thesaurus Term to"
        },
        "Keyword": {
          "type": "string",
          "x-ms-summary": "Thesaurus Term",
          "description": "The Unique ID or Name of the Thesaurus Term to attach"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMDeleteRecordDetails": {
      "type": "object",
      "required": [
        "DeleteContents"
      ],
      "properties": {
        "DeleteContents": {
          "type": "boolean",
          "x-ms-summary": "Delete Contents?",
          "default": false
        },
        "NewHomeForContents": {
          "type": "string",
          "x-ms-summary": "New Home for Contents",
          "description": "The Unique ID or email address of new Home Location for the contents"
        }
      }
    },
    "CMSetUserLabel": {
      "type": "object",
      "required": [
        "Uri",
        "UserLabel"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Record",
          "description": "The Unique ID of the Record to attach the User Label to"
        },
        "UserLabel": {
          "type": "string",
          "x-ms-summary": "User Label",
          "description": "The Unique ID or Name of the User Label to apply"
        },
        "FavouriteType": {
          "type": "string",
          "x-ms-summary": "Favourite Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupEnumFavoriteType",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          }
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMTest": {
      "type": "object",
      "properties": {
        "AssigneeType": {
          "type": "string",
          "enum": [
            "AtLocation",
            "AtHome",
            "Missing",
            "EarliestRequestor"
          ],
          "x-ms-enum-values": [
            {
              "value": "AtLocation",
              "displayName": "At Location"
            },
            {
              "value": "AtHome",
              "displayName": "At Home"
            },
            {
              "value": "Missing",
              "displayName": "Missing"
            },
            {
              "value": "EarliestRequestor",
              "displayName": "Earliest Requestor"
            }
          ],
          "x-ms-summary": "Assignee Type",
          "default": "AtLocation"
        }
      }
    },
    "CMSetAssignee": {
      "type": "object",
      "required": [
        "Uri"
      ],
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "NewAssignee": {
          "type": "string",
          "x-ms-summary": "New Assignee",
          "description": "Unique ID or email address of new Assignee"
        },
        "AssigneeType": {
          "type": "string",
          "enum": [
            "AtLocation",
            "AtHome",
            "Missing",
            "EarliestRequestor"
          ],
          "x-ms-enum-values": [
            {
              "value": "AtLocation",
              "displayName": "At Location"
            },
            {
              "value": "AtHome",
              "displayName": "At Home"
            },
            {
              "value": "Missing",
              "displayName": "Missing"
            },
            {
              "value": "EarliestRequestor",
              "displayName": "Earliest Requestor"
            }
          ],
          "x-ms-summary": "Assignee Type",
          "default": "AtLocation"
        },
        "DueForReturnByDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Due for Return by Date"
        },
        "ActualTimeChangeOccurred": {
          "type": "string",
          "format": "date-time",
          "x-ms-summary": "Actual Time Change Occurred"
        },
        "Properties": {
          "description": "A comma delimited list of properties to return",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Properties",
          "default": "RecordTitle, RecordNumber"
        }
      }
    },
    "CMRecordsResponse": {
      "type": "object",
      "properties": {
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMRecord"
          }
        },
        "UpdateErrorResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMUpdateErrorResponse"
          }
        },
        "TotalResults": {
          "type": "integer",
          "format": "int32",
          "x-ms-summary": "Total Results"
        },
        "CountStringEx": {
          "type": "string",
          "x-ms-summary": "Count String Ex"
        },
        "MinimumCount": {
          "type": "integer",
          "format": "int32",
          "x-ms-summary": "Minimum Count"
        },
        "Count": {
          "type": "integer",
          "format": "int32",
          "x-ms-summary": "Count"
        },
        "HasMoreItems": {
          "type": "boolean",
          "x-ms-summary": "Has More Items"
        },
        "SearchTitle": {
          "type": "string",
          "x-ms-summary": "Search Title"
        },
        "HitHighlightString": {
          "type": "string",
          "x-ms-summary": "Hit Highlight String"
        },
        "TrimType": {
          "$ref": "#/definitions/CMTrimType"
        },
        "ResponseStatus": {
          "$ref": "#/definitions/CMResponseStatus"
        }
      },
      "required": [
        "TotalResults",
        "MinimumCount",
        "Count",
        "HasMoreItems",
        "TrimType"
      ]
    },
    "CMLogResponse": {
      "type": "object",
      "properties": {
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMLogMessage"
          }
        },
        "UpdateErrorResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMUpdateErrorResponse"
          }
        },
        "TotalResults": {
          "type": "integer",
          "format": "int32",
          "x-ms-summary": "Total Results"
        },
        "CountStringEx": {
          "type": "string",
          "x-ms-summary": "Count String Ex"
        },
        "MinimumCount": {
          "type": "integer",
          "format": "int32",
          "x-ms-summary": "Minimum Count"
        },
        "Count": {
          "type": "integer",
          "format": "int32",
          "x-ms-summary": "Count"
        },
        "HasMoreItems": {
          "type": "boolean",
          "x-ms-summary": "Has More Items"
        },
        "SearchTitle": {
          "type": "string",
          "x-ms-summary": "Search Title"
        },
        "HitHighlightString": {
          "type": "string",
          "x-ms-summary": "Hit Highlight String"
        },
        "TrimType": {
          "$ref": "#/definitions/CMTrimType"
        },
        "ResponseStatus": {
          "$ref": "#/definitions/CMResponseStatus"
        }
      },
      "required": [
        "TotalResults",
        "MinimumCount",
        "Count",
        "HasMoreItems",
        "TrimType"
      ]
    },
    "CMUpdateErrorResponse": {
      "title": "Update Error Response",
      "description": "Update Error Response",
      "type": "object",
      "properties": {
        "ErrorCode": {
          "type": "string",
          "x-ms-summary": "Error Code"
        },
        "Uri": {
          "type": "integer",
          "x-ms-summary": "Unique Identifier"
        },
        "Message": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "NameExtra": {
          "type": "string",
          "x-ms-summary": "Name (Extra)"
        }
      },
      "required": [
        "Uri"
      ]
    },
    "CMResponseStatus": {
      "title": "Response Status",
      "description": "Response Status",
      "type": "object",
      "properties": {
        "ErrorCode": {
          "type": "string",
          "x-ms-summary": "Error Code"
        },
        "Message": {
          "type": "string"
        },
        "StackTrace": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMResponseError"
          }
        },
        "Meta": {
          "type": "object",
          "description": "Dictionary<String,String>"
        }
      }
    },
    "CMResponseError": {
      "title": "Response Error",
      "description": "Response Error",
      "type": "object",
      "properties": {
        "ErrorCode": {
          "type": "string",
          "x-ms-summary": "Error Code"
        },
        "FieldName": {
          "type": "string",
          "x-ms-summary": "Field Name"
        },
        "Message": {
          "type": "string"
        },
        "Meta": {
          "type": "object",
          "description": "Dictionary<String,String>"
        }
      }
    },
    "CMTrimType": {
      "title": "Search for",
      "type": "string",
      "enum": [
        "Record",
        "Location",
        "Classification",
        "ActionDef",
        "ActionDefStep",
        "Activity",
        "ActivityAuthorization",
        "ActivityDocument",
        "ActivityEmailRecipient",
        "ActivityEscalation",
        "ActivityResult",
        "ActivityStartCondition",
        "AgendaItem",
        "AgendaItemAttachment",
        "AgendaItemType",
        "AgendaItemTypeAttachment",
        "Alert",
        "AlertSubscriber",
        "ArchiveEvent",
        "ArchiveEventOccurrence",
        "AutoPartRule",
        "Census",
        "CheckinPlace",
        "CheckinStyle",
        "ClassificationOnlyRecordType",
        "ClassificationSapBusinessObject",
        "Communication",
        "CommunicationDetail",
        "Consignment",
        "ConsignmentApprover",
        "ConsignmentIssue",
        "ConsignmentRejection",
        "Database",
        "DocumentQueue",
        "ElectronicStore",
        "FieldDefinition",
        "History",
        "Hold",
        "HtmlLayout",
        "Jurisdiction",
        "JurisdictionMember",
        "Keyword",
        "LocationAddress",
        "LocationEAddress",
        "LookupItem",
        "LookupSet",
        "MailTemplate",
        "Meeting",
        "MeetingDocument",
        "MeetingInvitation",
        "MeetingType",
        "MeetingTypeUsualParticipant",
        "MetadataRule",
        "MinuteItem",
        "MinuteItemActionArising",
        "MinuteItemType",
        "Notification",
        "OfflineRecord",
        "Origin",
        "OriginHistory",
        "RecordAction",
        "RecordClientMatterParty",
        "RecordClientMatterRole",
        "RecordHold",
        "RecordJurisdiction",
        "RecordKeyword",
        "RecordLinkedDocument",
        "RecordLocation",
        "RecordRelationship",
        "RecordRendition",
        "RecordRevision",
        "RecordSapComponent",
        "RecordType",
        "RecordTypeAutoSubFolder",
        "Report",
        "ReportBitmap",
        "Request",
        "SavedSearch",
        "Schedule",
        "ScheduledTask",
        "ScheduledTaskHistory",
        "ScheduleTrigger",
        "SearchForm",
        "SecurityCaveat",
        "SecurityGuide",
        "SecurityLevel",
        "SharePointItem",
        "Space",
        "StopWord",
        "TodoItem",
        "TodoItemItemReference",
        "Unknown",
        "UserLabel",
        "Word",
        "Workflow",
        "WorkflowDocument",
        "WorkflowTemplate",
        "WorkflowTemplateDocument",
        "WorkingCopy",
        "ZipCode"
      ],
      "x-ms-enum-values": [
        {
          "value": "Record",
          "displayName": "Record"
        },
        {
          "value": "Location",
          "displayName": "Location"
        },
        {
          "value": "Classification",
          "displayName": "Classification"
        },
        {
          "value": "ActionDef",
          "displayName": "Action Def"
        },
        {
          "value": "ActionDefStep",
          "displayName": "Action Def Step"
        },
        {
          "value": "Activity",
          "displayName": "Activity"
        },
        {
          "value": "ActivityAuthorization",
          "displayName": "Activity Authorization"
        },
        {
          "value": "ActivityDocument",
          "displayName": "Activity Document"
        },
        {
          "value": "ActivityEmailRecipient",
          "displayName": "Activity Email Recipient"
        },
        {
          "value": "ActivityEscalation",
          "displayName": "Activity Escalation"
        },
        {
          "value": "ActivityResult",
          "displayName": "Activity Result"
        },
        {
          "value": "ActivityStartCondition",
          "displayName": "Activity Start Condition"
        },
        {
          "value": "AgendaItem",
          "displayName": "Agenda Item"
        },
        {
          "value": "AgendaItemAttachment",
          "displayName": "Agenda Item Attachment"
        },
        {
          "value": "AgendaItemType",
          "displayName": "Agenda Item Type"
        },
        {
          "value": "AgendaItemTypeAttachment",
          "displayName": "Agenda Item Type Attachment"
        },
        {
          "value": "Alert",
          "displayName": "Alert"
        },
        {
          "value": "AlertSubscriber",
          "displayName": "Alert Subscriber"
        },
        {
          "value": "ArchiveEvent",
          "displayName": "Archive Event"
        },
        {
          "value": "ArchiveEventOccurrence",
          "displayName": "Archive Event Occurrence"
        },
        {
          "value": "AutoPartRule",
          "displayName": "Auto Part Rule"
        },
        {
          "value": "Census",
          "displayName": "Census"
        },
        {
          "value": "CheckinPlace",
          "displayName": "Checkin Place"
        },
        {
          "value": "CheckinStyle",
          "displayName": "Checkin Style"
        },
        {
          "value": "ClassificationOnlyRecordType",
          "displayName": "Classification Only Record Type"
        },
        {
          "value": "ClassificationSapBusinessObject",
          "displayName": "Classification SAP Business Object"
        },
        {
          "value": "Communication",
          "displayName": "Communication"
        },
        {
          "value": "CommunicationDetail",
          "displayName": "Communication Detail"
        },
        {
          "value": "Consignment",
          "displayName": "Consignment"
        },
        {
          "value": "ConsignmentApprover",
          "displayName": "Consignment Approver"
        },
        {
          "value": "ConsignmentIssue",
          "displayName": "Consignment Issue"
        },
        {
          "value": "ConsignmentRejection",
          "displayName": "Consignment Rejection"
        },
        {
          "value": "Database",
          "displayName": "Database"
        },
        {
          "value": "DocumentQueue",
          "displayName": "Document Queue"
        },
        {
          "value": "ElectronicStore",
          "displayName": "Electronic Store"
        },
        {
          "value": "FieldDefinition",
          "displayName": "Field Definition"
        },
        {
          "value": "History",
          "displayName": "History"
        },
        {
          "value": "Hold",
          "displayName": "Hold"
        },
        {
          "value": "HtmlLayout",
          "displayName": "Html Layout"
        },
        {
          "value": "Jurisdiction",
          "displayName": "Jurisdiction"
        },
        {
          "value": "JurisdictionMember",
          "displayName": "Jurisdiction Member"
        },
        {
          "value": "Keyword",
          "displayName": "Thesaurus Term"
        },
        {
          "value": "LocationAddress",
          "displayName": "Location Address"
        },
        {
          "value": "LocationEAddress",
          "displayName": "Location EAddress"
        },
        {
          "value": "LookupItem",
          "displayName": "Lookup Item"
        },
        {
          "value": "LookupSet",
          "displayName": "Lookup Set"
        },
        {
          "value": "MailTemplate",
          "displayName": "Mail Template"
        },
        {
          "value": "Meeting",
          "displayName": "Meeting"
        },
        {
          "value": "MeetingDocument",
          "displayName": "Meeting Document"
        },
        {
          "value": "MeetingInvitation",
          "displayName": "Meeting Invitation"
        },
        {
          "value": "MeetingType",
          "displayName": "Meeting Type"
        },
        {
          "value": "MeetingTypeUsualParticipant",
          "displayName": "Meeting Type Usual Participant"
        },
        {
          "value": "MetadataRule",
          "displayName": "Metadata Rule"
        },
        {
          "value": "MinuteItem",
          "displayName": "Minute Item"
        },
        {
          "value": "MinuteItemActionArising",
          "displayName": "Minute Item Action Arising"
        },
        {
          "value": "MinuteItemType",
          "displayName": "Minute Item Type"
        },
        {
          "value": "Notification",
          "displayName": "Notification"
        },
        {
          "value": "OfflineRecord",
          "displayName": "Offline Record"
        },
        {
          "value": "Origin",
          "displayName": "Origin"
        },
        {
          "value": "OriginHistory",
          "displayName": "Origin History"
        },
        {
          "value": "RecordAction",
          "displayName": "Record Action"
        },
        {
          "value": "RecordClientMatterParty",
          "displayName": "Record Client Matter Party"
        },
        {
          "value": "RecordClientMatterRole",
          "displayName": "Record Client Matter Role"
        },
        {
          "value": "RecordHold",
          "displayName": "Record Hold"
        },
        {
          "value": "RecordJurisdiction",
          "displayName": "Record Jurisdiction"
        },
        {
          "value": "RecordKeyword",
          "displayName": "Record Thesaurus Term"
        },
        {
          "value": "RecordLinkedDocument",
          "displayName": "Record Linked Document"
        },
        {
          "value": "RecordLocation",
          "displayName": "Record Location"
        },
        {
          "value": "RecordRelationship",
          "displayName": "Record Relationship"
        },
        {
          "value": "RecordRendition",
          "displayName": "Record Rendition"
        },
        {
          "value": "RecordRevision",
          "displayName": "Record Revision"
        },
        {
          "value": "RecordSapComponent",
          "displayName": "Record SAP Component"
        },
        {
          "value": "RecordType",
          "displayName": "Record Type"
        },
        {
          "value": "RecordTypeAutoSubFolder",
          "displayName": "Record Type Auto SubFolder"
        },
        {
          "value": "Report",
          "displayName": "Report"
        },
        {
          "value": "ReportBitmap",
          "displayName": "Report Bitmap"
        },
        {
          "value": "Request",
          "displayName": "Request"
        },
        {
          "value": "SavedSearch",
          "displayName": "Saved Search"
        },
        {
          "value": "Schedule",
          "displayName": "Schedule"
        },
        {
          "value": "ScheduledTask",
          "displayName": "Scheduled Task"
        },
        {
          "value": "ScheduledTaskHistory",
          "displayName": "Scheduled Task History"
        },
        {
          "value": "ScheduleTrigger",
          "displayName": "Schedule Trigger"
        },
        {
          "value": "SearchForm",
          "displayName": "Search Form"
        },
        {
          "value": "SecurityCaveat",
          "displayName": "Security Caveat"
        },
        {
          "value": "SecurityGuide",
          "displayName": "Security Guide"
        },
        {
          "value": "SecurityLevel",
          "displayName": "Security Level"
        },
        {
          "value": "SharePointItem",
          "displayName": "SharePoint Item"
        },
        {
          "value": "Space",
          "displayName": "Space"
        },
        {
          "value": "StopWord",
          "displayName": "Stop Word"
        },
        {
          "value": "TodoItem",
          "displayName": "Todo Item"
        },
        {
          "value": "TodoItemItemReference",
          "displayName": "Todo Item Item Reference"
        },
        {
          "value": "Unknown",
          "displayName": "Unknown"
        },
        {
          "value": "UserLabel",
          "displayName": "User Label"
        },
        {
          "value": "Word",
          "displayName": "Word"
        },
        {
          "value": "Workflow",
          "displayName": "Workflow"
        },
        {
          "value": "WorkflowDocument",
          "displayName": "Workflow Document"
        },
        {
          "value": "WorkflowTemplate",
          "displayName": "Workflow Template"
        },
        {
          "value": "WorkflowTemplateDocument",
          "displayName": "Workflow Template Document"
        },
        {
          "value": "WorkingCopy",
          "displayName": "Working Copy"
        },
        {
          "value": "ZipCode",
          "displayName": "Zip Code"
        }
      ]
    },
    "CMLocation": {
      "type": "object",
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "NameString": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "LocationFullFormattedName": {
          "type": "string",
          "x-ms-summary": "Location Full Formatted Name"
        },
        "LocationSortName": {
          "type": "string",
          "x-ms-summary": "Location Sort Name"
        }
      }
    },
    "CMBob": {
      "type": "object",
      "properties": {
        "Uri": {
          "type": "integer",
          "format": "int64",
          "x-ms-summary": "Unique Identifier"
        },
        "NameString": {
          "type": "string",
          "x-ms-summary": "Name"
        }
      }
    },
    "CMUpdateLocation": {
      "type": "object",
      "properties": {
        "Uri": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Unique Identifier",
          "type": "integer",
          "description": ""
        },
        "q": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Query String",
          "type": "string",
          "description": "Specify a query here to apply the update to a set of Locations rather than only one (as specified by the Unique ID)."
        },
        "LocationSortName": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Name",
          "type": "string",
          "description": ""
        },
        "LocationNickName": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Unique Name",
          "type": "string",
          "description": ""
        },
        "LocationIdNumber": {
          "x-ms-visibility": "important",
          "x-ms-summary": "ID Number",
          "type": "string",
          "description": ""
        },
        "LocationPhoneNumber": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Business Phone",
          "type": "string",
          "description": ""
        },
        "LocationMobileNumber": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Mobile Phone",
          "type": "string",
          "description": ""
        },
        "LocationFaxNumber": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Fax",
          "type": "string",
          "description": ""
        },
        "LocationAfterHoursPhoneNumber": {
          "type": "string",
          "description": "",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Phone"
        },
        "LocationUseAddressOf": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Same As Address",
          "type": "integer",
          "description": "Unique ID of Location"
        },
        "AddRelationship": {
          "$ref": "#/definitions/CMLocationRelationship"
        },
        "LocationEmailAddress": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Email Address",
          "type": "string",
          "description": ""
        },
        "SetActiveDateRange": {
          "$ref": "#/definitions/CMSetActiveDateRange"
        },
        "LocationNotes": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes",
          "type": "string",
          "description": ""
        },
        "NotesUpdateType": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes Update Type",
          "enum": [
            "Overwrite",
            "AppendOnly",
            "AppendWithNewLine",
            "AppendWithUserStamp",
            "PrependOnly",
            "PrependWithNewLine",
            "PrependWithUserStamp"
          ],
          "type": "string",
          "x-ms-enum-values": [
            {
              "value": "Overwrite",
              "displayName": "Overwrite"
            },
            {
              "value": "AppendOnly",
              "displayName": "Append Only"
            },
            {
              "value": "AppendWithNewLine",
              "displayName": "Append With New Line"
            },
            {
              "value": "AppendWithUserStamp",
              "displayName": "Append With User Stamp"
            },
            {
              "value": "PrependOnly",
              "displayName": "Prepend Only"
            },
            {
              "value": "PrependWithNewLine",
              "displayName": "Prepend With New Line"
            },
            {
              "value": "PrependWithUserStamp",
              "displayName": "Prepend With User Stamp"
            }
          ],
          "default": "PrependWithUserStamp"
        },
        "RemoveRelationship": {
          "$ref": "#/definitions/CMLocationRemoveRelationship"
        }
      }
    },
    "CMCreateLocation": {
      "required": [
        "LocationSortName"
      ],
      "type": "object",
      "properties": {
        "LocationTypeOfLocation": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Location Type",
          "enum": [
            "Unknown",
            "Organization",
            "Group",
            "Position",
            "ProjectTeam",
            "Committee",
            "Venue",
            "Workgroup",
            "StorageProvider"
          ],
          "type": "string",
          "x-ms-enum-values": [
            {
              "value": "Committee",
              "displayName": "Committee"
            },
            {
              "value": "Group",
              "displayName": "Group"
            },
            {
              "value": "Organization",
              "displayName": "Organization"
            },
            {
              "value": "Position",
              "displayName": "Position"
            },
            {
              "value": "ProjectTeam",
              "displayName": "Project Team"
            },
            {
              "value": "StorageProvider",
              "displayName": "Storage Provider"
            },
            {
              "value": "Unknown",
              "displayName": "Unknown"
            },
            {
              "value": "Venue",
              "displayName": "Venue"
            },
            {
              "value": "Workgroup",
              "displayName": "Workgroup"
            }
          ]
        },
        "LocationSortName": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Name",
          "type": "string",
          "description": ""
        },
        "LocationNickName": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Unique Name",
          "type": "string",
          "description": ""
        },
        "LocationIdNumber": {
          "x-ms-visibility": "important",
          "x-ms-summary": "ID Number",
          "type": "string",
          "description": ""
        },
        "LocationIsWithin": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Internal",
          "type": "boolean",
          "description": ""
        },
        "LocationPhoneNumber": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Business Phone",
          "type": "string",
          "description": ""
        },
        "LocationMobileNumber": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Mobile Phone",
          "type": "string",
          "description": ""
        },
        "LocationFaxNumber": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Fax",
          "type": "string",
          "description": ""
        },
        "LocationAfterHoursPhoneNumber": {
          "type": "string",
          "description": "",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Phone"
        },
        "LocationUseAddressOf": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Same As Address",
          "type": "integer",
          "description": "Unique ID of Location"
        },
        "ChildAddresses": {
          "x-ms-summary": " ",
          "x-ms-visibility": "advanced",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMLocationAddress"
          },
          "maxItems": 2
        },
        "AddRelationship": {
          "$ref": "#/definitions/CMLocationRelationship"
        },
        "LocationEmailAddress": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Email Address",
          "type": "string",
          "description": ""
        },
        "SetActiveDateRange": {
          "$ref": "#/definitions/CMSetActiveDateRange"
        },
        "LocationNotes": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes",
          "type": "string",
          "description": ""
        },
        "NotesUpdateType": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes Update Type",
          "enum": [
            "Overwrite",
            "AppendOnly",
            "AppendWithNewLine",
            "AppendWithUserStamp",
            "PrependOnly",
            "PrependWithNewLine",
            "PrependWithUserStamp"
          ],
          "type": "string",
          "x-ms-enum-values": [
            {
              "value": "Overwrite",
              "displayName": "Overwrite"
            },
            {
              "value": "AppendOnly",
              "displayName": "Append Only"
            },
            {
              "value": "AppendWithNewLine",
              "displayName": "Append With New Line"
            },
            {
              "value": "AppendWithUserStamp",
              "displayName": "Append With User Stamp"
            },
            {
              "value": "PrependOnly",
              "displayName": "Prepend Only"
            },
            {
              "value": "PrependWithNewLine",
              "displayName": "Prepend With New Line"
            },
            {
              "value": "PrependWithUserStamp",
              "displayName": "Prepend With User Stamp"
            }
          ],
          "default": "PrependWithUserStamp"
        }
      }
    },
    "CMCreatePersonLocation": {
      "required": [
        "LocationTypeOfLocation"
      ],
      "type": "object",
      "properties": {
        "LocationTypeOfLocation": {
          "x-ms-visibility": "internal",
          "x-ms-summary": "Location Type",
          "type": "string",
          "default": "Person"
        },
        "LocationHonorific": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "type": "string",
          "enum": [
            "Mr",
            "Mr.",
            "Mrs",
            "Mrs.",
            "Miss",
            "Miss.",
            "Ms",
            "Ms.",
            "Dr",
            "Dr.",
            "Mx",
            "Mx.",
            "Prof",
            "Prof.",
            "Sir",
            "Sir."
          ],
          "description": ""
        },
        "LocationSurname": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Last Name",
          "type": "string",
          "description": ""
        },
        "LocationGivenNames": {
          "x-ms-visibility": "important",
          "x-ms-summary": "First Name",
          "type": "string",
          "description": ""
        },
        "LocationIsWithin": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Internal",
          "type": "boolean",
          "description": ""
        },
        "LocationJobDescription": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Job Title",
          "type": "string",
          "description": ""
        },
        "LocationDateOfBirth": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date of Birth",
          "type": "string",
          "description": ""
        },
        "LocationSalutation": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Salutation",
          "type": "string",
          "description": ""
        },
        "LocationNickName": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Unique Name",
          "type": "string",
          "description": ""
        },
        "LocationIdNumber": {
          "x-ms-visibility": "important",
          "x-ms-summary": "ID Number",
          "type": "string",
          "description": ""
        },
        "LocationPhoneNumber": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Business Phone",
          "type": "string",
          "description": ""
        },
        "LocationMobileNumber": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Mobile Phone",
          "type": "string",
          "description": ""
        },
        "LocationFaxNumber": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Fax",
          "type": "string",
          "description": ""
        },
        "LocationAfterHoursPhoneNumber": {
          "type": "string",
          "description": "",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Phone"
        },
        "LocationUseAddressOf": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Same As Address",
          "type": "integer",
          "description": "Unique ID of Location"
        },
        "ChildAddresses": {
          "x-ms-summary": " ",
          "type": "array",
          "x-ms-visibility": "advanced",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/CMLocationAddress"
          }
        },
        "AddRelationship": {
          "$ref": "#/definitions/CMLocationRelationship"
        },
        "LocationEmailAddress": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Email Address",
          "type": "string",
          "description": ""
        },
        "LocationGenderValue": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Gender",
          "x-ms-dynamic-values": {
            "operationId": "LookupEnumGender",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          },
          "type": "string"
        },
        "LocationCanLogin": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Accepting Logins",
          "type": "boolean",
          "description": ""
        },
        "LocationLogsInAs": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Network Login",
          "type": "string",
          "description": ""
        },
        "LocationAdditionalLogin": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Additional Network Login",
          "type": "string",
          "description": ""
        },
        "LocationLoginExpires": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Login Expires On",
          "type": "string",
          "description": ""
        },
        "LocationUseProfileOf": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "User Profile Of",
          "type": "integer",
          "description": "Unique ID of Location"
        },
        "LocationUserType": {
          "type": "string",
          "x-ms-summary": "User Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupEnumUserTypes",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          }
        },
        "LocationSecurityString": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Security String",
          "type": "string",
          "description": ""
        },
        "SetActiveDateRange": {
          "$ref": "#/definitions/CMSetActiveDateRange"
        },
        "LocationNotes": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes",
          "type": "string",
          "description": ""
        },
        "NotesUpdateType": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes Update Type",
          "enum": [
            "Overwrite",
            "AppendOnly",
            "AppendWithNewLine",
            "AppendWithUserStamp",
            "PrependOnly",
            "PrependWithNewLine",
            "PrependWithUserStamp"
          ],
          "type": "string",
          "x-ms-enum-values": [
            {
              "value": "Overwrite",
              "displayName": "Overwrite"
            },
            {
              "value": "AppendOnly",
              "displayName": "Append Only"
            },
            {
              "value": "AppendWithNewLine",
              "displayName": "Append With New Line"
            },
            {
              "value": "AppendWithUserStamp",
              "displayName": "Append With User Stamp"
            },
            {
              "value": "PrependOnly",
              "displayName": "Prepend Only"
            },
            {
              "value": "PrependWithNewLine",
              "displayName": "Prepend With New Line"
            },
            {
              "value": "PrependWithUserStamp",
              "displayName": "Prepend With User Stamp"
            }
          ],
          "default": "PrependWithUserStamp"
        }
      }
    },
    "CMUpdatePersonLocation": {
      "type": "object",
      "properties": {
        "Uri": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Unique Identifier",
          "type": "integer",
          "description": ""
        },
        "q": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Query String",
          "type": "string",
          "description": "Specify a query here to apply the update to a set of Locations rather than only one (as specified by the Unique ID)."
        },
        "LocationHonorific": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "type": "string",
          "enum": [
            "Mr",
            "Mr.",
            "Mrs",
            "Mrs.",
            "Miss",
            "Miss.",
            "Ms",
            "Ms.",
            "Dr",
            "Dr.",
            "Mx",
            "Mx.",
            "Prof",
            "Prof.",
            "Sir",
            "Sir."
          ],
          "description": ""
        },
        "LocationSurname": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Last Name",
          "type": "string",
          "description": ""
        },
        "LocationGivenNames": {
          "x-ms-visibility": "important",
          "x-ms-summary": "First Name",
          "type": "string",
          "description": ""
        },
        "LocationIsWithin": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Internal",
          "type": "boolean",
          "description": ""
        },
        "LocationJobDescription": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Job Title",
          "type": "string",
          "description": ""
        },
        "LocationDateOfBirth": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Date of Birth",
          "type": "string",
          "description": ""
        },
        "LocationSalutation": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Salutation",
          "type": "string",
          "description": ""
        },
        "LocationNickName": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Unique Name",
          "type": "string",
          "description": ""
        },
        "LocationIdNumber": {
          "x-ms-visibility": "important",
          "x-ms-summary": "ID Number",
          "type": "string",
          "description": ""
        },
        "LocationPhoneNumber": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Business Phone",
          "type": "string",
          "description": ""
        },
        "LocationMobileNumber": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Mobile Phone",
          "type": "string",
          "description": ""
        },
        "LocationFaxNumber": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Fax",
          "type": "string",
          "description": ""
        },
        "LocationAfterHoursPhoneNumber": {
          "type": "string",
          "description": "",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Home Phone"
        },
        "LocationUseAddressOf": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Same As Address",
          "type": "integer",
          "description": "Unique ID of Location"
        },
        "AddRelationship": {
          "$ref": "#/definitions/CMLocationRelationship"
        },
        "LocationEmailAddress": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Email Address",
          "type": "string",
          "description": ""
        },
        "LocationGenderValue": {
          "x-ms-visibility": "important",
          "x-ms-summary": "Gender",
          "x-ms-dynamic-values": {
            "operationId": "LookupEnumGender",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          },
          "type": "string"
        },
        "LocationCanLogin": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Accepting Logins",
          "type": "boolean",
          "description": ""
        },
        "LocationLogsInAs": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Network Login",
          "type": "string",
          "description": ""
        },
        "LocationAdditionalLogin": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Additional Network Login",
          "type": "string",
          "description": ""
        },
        "LocationLoginExpires": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Login Expires On",
          "type": "string",
          "description": ""
        },
        "LocationUseProfileOf": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "User Profile Of",
          "type": "integer",
          "description": "Unique ID of Location"
        },
        "LocationUserType": {
          "type": "string",
          "x-ms-summary": "User Type",
          "x-ms-dynamic-values": {
            "operationId": "LookupEnumUserTypes",
            "value-collection": "Items",
            "value-path": "Value",
            "value-title": "Caption"
          }
        },
        "LocationSecurityString": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Security String",
          "type": "string",
          "description": ""
        },
        "SetActiveDateRange": {
          "$ref": "#/definitions/CMSetActiveDateRange"
        },
        "LocationNotes": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes",
          "type": "string",
          "description": ""
        },
        "NotesUpdateType": {
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes Update Type",
          "enum": [
            "Overwrite",
            "AppendOnly",
            "AppendWithNewLine",
            "AppendWithUserStamp",
            "PrependOnly",
            "PrependWithNewLine",
            "PrependWithUserStamp"
          ],
          "type": "string",
          "x-ms-enum-values": [
            {
              "value": "Overwrite",
              "displayName": "Overwrite"
            },
            {
              "value": "AppendOnly",
              "displayName": "Append Only"
            },
            {
              "value": "AppendWithNewLine",
              "displayName": "Append With New Line"
            },
            {
              "value": "AppendWithUserStamp",
              "displayName": "Append With User Stamp"
            },
            {
              "value": "PrependOnly",
              "displayName": "Prepend Only"
            },
            {
              "value": "PrependWithNewLine",
              "displayName": "Prepend With New Line"
            },
            {
              "value": "PrependWithUserStamp",
              "displayName": "Prepend With User Stamp"
            }
          ],
          "default": "PrependWithUserStamp"
        },
        "RemoveRelationship": {
          "$ref": "#/definitions/CMLocationRemoveRelationship"
        }
      }
    },
    "CMUpdateLocationAddress": {
      "title": "Update Location Address",
      "required": [
        "Uri"
      ],
      "type": "object",
      "properties": {
        "Uri": {
          "type": "integer",
          "x-ms-summary": "Unique Identifier",
          "description": "The uri of the existing location to be updated"
        },
        "ChildAddresses": {
          "title": " ",
          "x-ms-summary": " ",
          "type": "array",
          "x-ms-visibility": "important",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/CMUpdatableLocationAddress"
          }
        }
      }
    },
    "CMLocationsResponse": {
      "type": "object",
      "properties": {
        "Results": {
          "description": "Results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMLocation"
          }
        },
        "UpdateErrorResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMUpdateErrorResponse"
          }
        },
        "TotalResults": {
          "type": "integer",
          "x-ms-summary": "Total Results"
        },
        "CountStringEx": {
          "type": "string",
          "x-ms-summary": "Count String Ex"
        },
        "MinimumCount": {
          "type": "integer",
          "x-ms-summary": "Minimum Count"
        },
        "Count": {
          "type": "integer"
        },
        "HasMoreItems": {
          "type": "boolean",
          "x-ms-summary": "Has More Items"
        },
        "SearchTitle": {
          "type": "string",
          "x-ms-summary": "Search Title"
        },
        "HitHighlightString": {
          "type": "string",
          "x-ms-summary": "Hit Highlight String"
        },
        "TrimType": {
          "$ref": "#/definitions/CMTrimType"
        },
        "ResponseStatus": {
          "$ref": "#/definitions/CMResponseStatus"
        }
      }
    },
    "CMBobResponse": {
      "type": "object",
      "properties": {
        "Results": {
          "description": "Results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMBob"
          }
        },
        "UpdateErrorResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMUpdateErrorResponse"
          }
        },
        "TotalResults": {
          "type": "integer",
          "x-ms-summary": "Total Results"
        },
        "CountStringEx": {
          "type": "string",
          "x-ms-summary": "Count String Ex"
        },
        "MinimumCount": {
          "type": "integer",
          "x-ms-summary": "Minimum Count"
        },
        "Count": {
          "type": "integer"
        },
        "HasMoreItems": {
          "type": "boolean",
          "x-ms-summary": "Has More Items"
        },
        "SearchTitle": {
          "type": "string",
          "x-ms-summary": "Search Title"
        },
        "HitHighlightString": {
          "type": "string",
          "x-ms-summary": "Hit Highlight String"
        },
        "TrimType": {
          "$ref": "#/definitions/CMTrimType"
        },
        "ResponseStatus": {
          "$ref": "#/definitions/CMResponseStatus"
        }
      }
    },
    "CaptionValuePairsResponse": {
      "title": "Caption Value Pair",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaptionValuePair"
          }
        }
      }
    },
    "CMRecordTypesResponse": {
      "title": "Record Type",
      "type": "object",
      "properties": {
        "Results": {
          "description": "Results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMRecordType"
          }
        },
        "UpdateErrorResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CMUpdateErrorResponse"
          }
        },
        "TotalResults": {
          "type": "integer",
          "x-ms-summary": "Total Results"
        },
        "CountStringEx": {
          "type": "string",
          "x-ms-summary": "Count String Ex"
        },
        "MinimumCount": {
          "type": "integer",
          "x-ms-summary": "Minimum Count"
        },
        "Count": {
          "type": "integer"
        },
        "HasMoreItems": {
          "type": "boolean",
          "x-ms-summary": "Has More Items"
        },
        "SearchTitle": {
          "type": "string",
          "x-ms-summary": "Search Title"
        },
        "HitHighlightString": {
          "type": "string",
          "x-ms-summary": "Hit Highlight String"
        },
        "TrimType": {
          "$ref": "#/definitions/CMTrimType"
        },
        "ResponseStatus": {
          "$ref": "#/definitions/CMResponseStatus"
        }
      }
    },
    "CMBaseSearchResponse": {
      "type": "object",
      "properties": {
        "ResponseStatus": {
          "$ref": "#/definitions/CMResponseStatus"
        },
        "TotalResults": {
          "description": "TotalResults",
          "type": "integer",
          "format": "int32"
        },
        "Count": {
          "description": "Count",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetFileFromUrlResponse": {
      "title": "File",
      "description": "Response from the 'GetFileFromUrl' CM Service API plugin.",
      "type": "object",
      "properties": {
        "Filepath": {
          "type": "string",
          "description": "Local file path to the file downloaded from the URL."
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "CMLocationAddress": {
      "title": " ",
      "type": "object",
      "properties": {
        "LocationAddressAddressType": {
          "enum": [
            "Street",
            "Postal"
          ],
          "x-ms-enum-values": [
            {
              "value": "Street",
              "displayName": "Street"
            },
            {
              "value": "Postal",
              "displayName": "Mailing"
            }
          ],
          "type": "string",
          "description": "Select address type. Limit of one per type.",
          "x-ms-summary": "Address Type"
        },
        "LocationAddressAddressLines": {
          "type": "string",
          "x-ms-summary": "Street"
        },
        "LocationAddressCity": {
          "type": "string",
          "x-ms-summary": "Suburb / City"
        },
        "LocationAddressState": {
          "type": "string",
          "x-ms-summary": "State"
        },
        "LocationAddressPostcode": {
          "type": "string",
          "x-ms-summary": "Postcode"
        },
        "LocationAddressCountry": {
          "type": "string",
          "x-ms-summary": "Country"
        }
      }
    },
    "CMUpdatableLocationAddress": {
      "type": "object",
      "properties": {
        "Uri": {
          "type": "integer",
          "x-ms-summary": "Unique ID",
          "description": "The uri of the existing street or mailing address to be updated"
        },
        "LocationAddressAddressType": {
          "enum": [
            "Street",
            "Postal"
          ],
          "x-ms-enum-values": [
            {
              "value": "Street",
              "displayName": "Street"
            },
            {
              "value": "Postal",
              "displayName": "Mailing"
            }
          ],
          "type": "string",
          "description": "Select address type. Limit of one per type.",
          "x-ms-summary": "Type"
        },
        "LocationAddressAddressLines": {
          "type": "string",
          "x-ms-summary": "Street"
        },
        "LocationAddressCity": {
          "type": "string",
          "x-ms-summary": "Suburb / City"
        },
        "LocationAddressState": {
          "type": "string",
          "x-ms-summary": "State"
        },
        "LocationAddressPostcode": {
          "type": "string",
          "x-ms-summary": "Postcode"
        },
        "LocationAddressCountry": {
          "type": "string",
          "x-ms-summary": "Country"
        }
      }
    },
    "CMLocationAddressUri": {
      "title": "Child Address",
      "type": "object",
      "properties": {
        "Uri": {
          "type": "integer",
          "x-ms-summary": "Unique ID"
        }
      }
    },
    "CMSetActiveDateRange": {
      "title": "Active",
      "type": "object",
      "x-ms-visibility": "advanced",
      "properties": {
        "SetActiveDateRangeValidFromDate": {
          "type": "string",
          "x-ms-summary": "From",
          "description": "dd/mm/yyyy"
        },
        "SetActiveDateRangeValidToDate": {
          "type": "string",
          "x-ms-summary": "To",
          "description": "dd/mm/yyyy"
        }
      }
    },
    "CMLocationRemoveRelationship": {
      "x-ms-visibility": "advanced",
      "type": "object",
      "title": "Remove Relationship - ",
      "x-ms-summary": "Remove Relationship",
      "properties": {
        "RemoveRelationshipRelatedLocation": {
          "type": "integer",
          "x-ms-summary": "Related Unique ID"
        }
      }
    },
    "CMLocationRelationship": {
      "x-ms-visibility": "advanced",
      "type": "object",
      "title": "Add Relationship - ",
      "x-ms-summary": "Add Relationship",
      "properties": {
        "AddRelationshipMakeThisTheDefaultRelationship": {
          "type": "boolean",
          "x-ms-summary": "Make Default"
        },
        "AddRelationshipRelatedLocation": {
          "type": "integer",
          "x-ms-summary": "Related Unique ID"
        },
        "AddRelationshipRelationshipType": {
          "type": "string",
          "x-ms-summary": "Type",
          "enum": [
            "MemberOf",
            "BossedBy",
            "OtherOf",
            "HasMembers",
            "BossOf",
            "HasOthers",
            "DelegateOf",
            "HasDelegates",
            "AdministratorOf",
            "AdministeredBy"
          ],
          "x-ms-enum-values": [
            {
              "value": "MemberOf",
              "displayName": "Member Of"
            },
            {
              "value": "BossedBy",
              "displayName": "Bossed By"
            },
            {
              "value": "OtherOf",
              "displayName": "Other Of"
            },
            {
              "value": "HasMembers",
              "displayName": "Has Members"
            },
            {
              "value": "BossOf",
              "displayName": "Boss Of"
            },
            {
              "value": "HasOthers",
              "displayName": "Has Others"
            },
            {
              "value": "DelegateOf",
              "displayName": "Delegate Of"
            },
            {
              "value": "HasDelegates",
              "displayName": "Has Delegates"
            },
            {
              "value": "AdministratorOf",
              "displayName": "Administrator Of"
            },
            {
              "value": "AdministeredBy",
              "displayName": "Administered By"
            }
          ]
        }
      }
    },
    "CMUploadElectronicFile": {
      "required": [
        "Uri",
        "RecordFilePath"
      ],
      "type": "object",
      "properties": {
        "RecordFilePath": {
          "type": "string",
          "x-ms-summary": "File Name"
        },
        "Uri": {
          "type": "string",
          "x-ms-summary": "Unique Identifier"
        }
      }
    }
  },
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://kapish.com.au/products/power_connect/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://kapish.com.au/products/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data;Content and Files"
    }
  ],
  "security": [
    {
      "API Key": []
    }
  ],
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "KPCSubscriptionKey"
    }
  }
}