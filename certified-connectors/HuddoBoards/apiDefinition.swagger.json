{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Huddo Boards",
    "description": "Huddo Boards - Collaboration done right. A task management tool with multiple ways to enter and view the data, including textual, kanban, mindmap and timeline.",
    "contact": {
      "name": "Huddo Support",
      "url": "https://www.huddo.com",
      "email": "support@huddo.com"
    }
  },
  "host": "boards.api.huddo.com",
  "schemes": ["https"],
  "securityDefinitions": {
    "oauth2_oauth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://boards.huddo.com/oauth/authorize",
      "tokenUrl": "https://boards.api.huddo.com/oauth/token",
      "scopes": {
        "default": "default"
      }
    },
    "token": {
      "type": "apiKey",
      "name": "Authorization",
      "description": "API key is available from the User Menu when logged in. Must be provided in the Authorisation header with format 'Bearer -token-'.",
      "in": "header"
    }
  },
  "security": [
    {
      "oauth2_oauth": ["default"]
    },
    {
      "token": []
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.huddo.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://huddo.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Productivity"
    }
  ],
  "consumes": ["application/json"],
  "produces": [],
  "paths": {
    "/board": {
      "get": {
        "summary": "Search for a Board",
        "description": "Search for a Board",
        "operationId": "BoardSearch",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Search",
            "description": "Search for a Board by name"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/node"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      },
      "post": {
        "summary": "Create a Board",
        "description": "Create a Board",
        "operationId": "BoardCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Board Name",
                  "x-ms-summary": "Name"
                },
                "description": {
                  "type": "string",
                  "description": "Board Description",
                  "x-ms-summary": "Description"
                },
                "sourceId": {
                  "type": "string",
                  "description": "Template ID to create a Board from",
                  "x-ms-summary": "Template id"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/board/{boardId}": {
      "get": {
        "summary": "Get board by id",
        "description": "Get Board by ID (includes all Nodes of the Board)",
        "operationId": "Board",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "x-ms-summary": "Board",
            "x-ms-url-encoding": "single",
            "description": "Board ID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/board"
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/board/{boardId}/cards": {
      "get": {
        "summary": "Get cards in board",
        "description": "Get all Cards in a Board",
        "operationId": "Cards",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Board",
            "x-ms-url-encoding": "single",
            "description": "Board ID"
          },
          {
            "name": "type",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Type",
            "description": "Card Type",
            "enum": ["task", "entry", "list"]
          },
          {
            "name": "q",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Search",
            "description": "Search for a Card by name"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/nodeSummary"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/board/{boardId}/members": {
      "get": {
        "summary": "Get Board members",
        "description": "Get Members of the Board",
        "operationId": "BoardMembers",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "type": "boolean",
            "x-ms-summary": "Expand Groups",
            "description": "Expand Groups to Users"
          },
          {
            "name": "q",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Search",
            "description": "Search for a Member by name"
          },
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "x-ms-summary": "Board",
            "x-ms-url-encoding": "single",
            "description": "Board ID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/member"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/board/my": {
      "get": {
        "summary": "My Boards",
        "description": "Get Boards that I am a Member of",
        "operationId": "BoardMy",
        "parameters": [
          {
            "name": "template",
            "in": "query",
            "type": "boolean",
            "required": false,
            "x-ms-summary": "Show templates",
            "description": "Show my templates instead of my Boards"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/board"
              }
            }
          }
        }
      }
    },
    "/node": {
      "post": {
        "summary": "Create a card or list",
        "description": "Create a Node",
        "operationId": "NodeCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Card Name"
                },
                "boardId": {
                  "type": "string",
                  "x-ms-summary": "Board",
                  "description": "Board ID",
                  "title": "",
                  "x-ms-dynamic-values": {
                    "operationId": "BoardMy",
                    "value-path": "_id",
                    "value-title": "name"
                  }
                },
                "parentId": {
                  "type": "string",
                  "description": "Parent Card / List ID",
                  "x-ms-summary": "Parent"
                },
                "type": {
                  "type": "string",
                  "x-ms-summary": "Type",
                  "description": "Type of Card / List to create",
                  "enum": ["task", "entry", "list"]
                },
                "description": {
                  "type": "string",
                  "x-ms-summary": "Description",
                  "description": "Description"
                }
              },
              "default": {
                "name": "New Task",
                "type": "task",
                "description": "Task created from the API"
              },
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/node/{nodeId}": {
      "get": {
        "summary": "Get Card details",
        "description": "Get a single Node",
        "operationId": "Node",
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Card / List / Board ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/node"
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/node/{nodeId}/assign": {
      "post": {
        "summary": "Assign a task",
        "description": "Assign a Member to a Task (Task Nodes only)",
        "operationId": "Assign",
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "description": "The Task ID you want to assign a Member to",
            "required": true,
            "type": "string",
            "x-ms-summary": "Task Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "User ID",
                  "x-ms-summary": "User id"
                }
              },
              "default": {
                "id": "example-id-1234"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/node/{nodeId}/children": {
      "get": {
        "summary": "Get child cards or lists",
        "description": "Get Children of a Board / List / Card",
        "operationId": "Children",
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Card / List / Board ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/node"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/node/{nodeId}/comments": {
      "get": {
        "summary": "Get comments",
        "description": "Get comments from a Board / List / Card",
        "operationId": "Comments",
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Card / List / Board ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/node"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      },
      "post": {
        "summary": "Create a comment",
        "description": "Create a comment",
        "operationId": "CreateAComment",
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Card / Board ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "format": "html",
                  "description": "Rich text for comment"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/node/{nodeId}/complete": {
      "delete": {
        "summary": "Incomplete a task",
        "description": "Mark a Task as Incomplete",
        "operationId": "IncompleteTask",
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Card / List / Board ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "x-ms-visibility": "important"
      },
      "put": {
        "summary": "Complete a task",
        "description": "Mark a Task as Complete",
        "operationId": "CompleteTask",
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Card / List / Board ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/node/{nodeId}/dates": {
      "put": {
        "summary": "Change card or board dates",
        "description": "Change Start, End or Due dates on a Card / Board",
        "operationId": "NodeDate",
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Card / Board ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "start": {
                  "type": "string",
                  "format": "date",
                  "description": "Start date"
                },
                "due": {
                  "type": "string",
                  "format": "date",
                  "description": "Due date"
                },
                "end": {
                  "type": "string",
                  "format": "date",
                  "description": "End date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/todo/assigned": {
      "get": {
        "summary": "Find a task",
        "description": "Finds a Task assigned to you by its name",
        "operationId": "FindTask",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Search",
            "description": "Search for a Task by name"
          },
          {
            "name": "completed",
            "in": "query",
            "type": "boolean",
            "x-ms-summary": "completed",
            "description": "Mark a Task as Complete / Incomplete"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/node"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/user": {
      "get": {
        "summary": "Find a user",
        "description": "Search for Users",
        "operationId": "User",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Search",
            "description": "Search for a User by name"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/user/me": {
      "get": {
        "summary": "My Profile",
        "description": "Returns logged in User",
        "operationId": "UserMe",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/webhook/added-to-board": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Board ID"
                },
                "name": {
                  "type": "string",
                  "description": "Board Name"
                }
              },
              "description": "Payload"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Example callback body",
            "schema": {
              "$ref": "#/definitions/nodeSummary"
            }
          }
        },
        "summary": "Board Added",
        "operationId": "AddedToBoard",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "callback": {
                  "type": "string",
                  "description": "This URL will be called with a POST and passed a JSON body as per the example below.",
                  "x-ms-visibility": "internal",
                  "title": "Callback URL",
                  "x-ms-notification-url": true
                }
              },
              "required": ["callback"]
            }
          }
        ],
        "description": "Triggers when you get added to a Board"
      }
    },
    "/webhook/assigned-task": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Assignment ID"
                },
                "name": {
                  "type": "string",
                  "description": "Task Name"
                },
                "listId": {
                  "type": "string",
                  "description": "List ID"
                },
                "list": {
                  "type": "string",
                  "description": "List Name"
                },
                "nodeId": {
                  "type": "string",
                  "description": "Task ID"
                },
                "board": {
                  "type": "string",
                  "description": "Board"
                },
                "boardId": {
                  "type": "string",
                  "description": "Board ID"
                }
              },
              "description": "Payload"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Example callback body",
            "schema": {
              "$ref": "#/definitions/nodeSummary"
            }
          }
        },
        "summary": "Assigned Task",
        "description": "Triggers when you get assigned a Task",
        "operationId": "AssignedTask",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "callback": {
                  "type": "string",
                  "description": "This URL will be called with a POST and passed a JSON body as per the example below.",
                  "x-ms-visibility": "internal",
                  "title": "Callback URL",
                  "x-ms-notification-url": true
                }
              },
              "required": ["callback"]
            }
          }
        ]
      }
    },
    "/webhook/board-task-completed/{boardId}": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Task ID"
                },
                "name": {
                  "type": "string",
                  "description": "Task Name"
                },
                "listId": {
                  "type": "string",
                  "description": "List ID"
                },
                "list": {
                  "type": "string",
                  "description": "List Name"
                },
                "board": {
                  "type": "string",
                  "description": "Board"
                },
                "boardId": {
                  "type": "string",
                  "description": "Board ID"
                }
              },
              "description": "Payload"
            }
          }
        },
        "description": "Data sent with the hook"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Example callback body",
            "schema": {
              "$ref": "#/definitions/nodeSummary"
            }
          }
        },
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Board",
            "x-ms-url-encoding": "single",
            "description": "Board ID",
            "x-ms-dynamic-values": {
              "operationId": "BoardMy",
              "value-path": "_id",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "callback": {
                  "type": "string",
                  "description": "This URL will be called with a POST and passed a JSON body as per the example below.",
                  "x-ms-visibility": "internal",
                  "title": "Callback URL",
                  "x-ms-notification-url": true
                }
              },
              "required": ["callback"]
            }
          }
        ],
        "operationId": "BoardTaskCompleted",
        "x-ms-visibility": "important",
        "summary": "Task completed in board",
        "description": "Watch a specific Board for Completed Tasks"
      }
    },
    "/webhook/created-node/{boardId}": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Card ID"
                },
                "name": {
                  "type": "string",
                  "description": "Card Name"
                },
                "listId": {
                  "type": "string",
                  "description": "List ID"
                },
                "list": {
                  "type": "string",
                  "description": "List Name"
                },
                "type": {
                  "type": "string",
                  "description": "Type"
                },
                "board": {
                  "type": "string",
                  "description": "Board"
                },
                "boardId": {
                  "type": "string",
                  "description": "Board ID"
                }
              },
              "description": "Payload"
            }
          }
        },
        "description": "Data sent with the hook"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Example callback body",
            "schema": {
              "$ref": "#/definitions/nodeSummary"
            }
          }
        },
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Board ID",
            "x-ms-visibility": "important",
            "x-ms-summary": "Board",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "BoardMy",
              "value-path": "_id",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "callback": {
                  "type": "string",
                  "description": "This URL will be called with a POST and passed a JSON body as per the example below.",
                  "x-ms-visibility": "internal",
                  "title": "Callback URL",
                  "x-ms-notification-url": true
                }
              },
              "required": ["callback"]
            }
          }
        ],
        "operationId": "CreatedNode",
        "x-ms-visibility": "important",
        "summary": "Card added to board",
        "description": "Watch a specific Board for new Cards"
      }
    },
    "/webhook/my-task-completed": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Task ID"
                },
                "name": {
                  "type": "string",
                  "description": "Task Name"
                },
                "listId": {
                  "type": "string",
                  "description": "List ID"
                },
                "list": {
                  "type": "string",
                  "description": "List Name"
                },
                "board": {
                  "type": "string",
                  "description": "Board"
                },
                "boardId": {
                  "type": "string",
                  "description": "Board ID"
                }
              },
              "description": "Payload"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Example callback body",
            "schema": {
              "$ref": "#/definitions/nodeSummary"
            }
          }
        },
        "summary": "Completed Task",
        "description": "Triggers when you Complete a Task",
        "operationId": "MyTaskCompleted",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "callback": {
                  "type": "string",
                  "description": "This URL will be called with a POST and passed a JSON body as per the example below.",
                  "x-ms-visibility": "internal",
                  "title": "Callback URL",
                  "x-ms-notification-url": true
                }
              },
              "required": ["callback"]
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "node": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Card / List Name"
        },
        "_id": {
          "type": "string",
          "description": "Card / List ID"
        },
        "boardId": {
          "type": "string",
          "description": "Board ID"
        },
        "parentId": {
          "type": "string",
          "description": "Parent Card / List ID"
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "Position"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "completed": {
          "type": "boolean",
          "description": "Completed"
        }
      }
    },
    "board": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Board Name"
        },
        "_id": {
          "type": "string",
          "description": "Board ID"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "completed": {
          "type": "boolean",
          "description": "Completed"
        },
        "childNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nodeWithChildren"
          }
        }
      }
    },
    "field": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Field Type",
          "default": "text",
          "enum": ["text", "date"]
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "Text to show (Required if Date Type is selected)"
        },
        "label": {
          "type": "string",
          "description": "Label to show"
        },
        "text": {
          "type": "string",
          "description": "Text to show (Required if Text Type is selected)"
        }
      },
      "required": ["label", "type"]
    },
    "nodeWithChildren": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Card / List Name"
        },
        "_id": {
          "type": "string",
          "description": "Card / List ID"
        },
        "boardId": {
          "type": "string",
          "description": "Board ID"
        },
        "parentId": {
          "type": "string",
          "description": "Parent Card / List ID"
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "Position"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "completed": {
          "type": "boolean",
          "description": "Completed"
        },
        "childNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/node"
          }
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "User ID"
        },
        "provider": {
          "type": "string",
          "description": "Primary login provider"
        },
        "organisation": {
          "type": "string",
          "description": "Organisation"
        },
        "aliases": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Alias ID"
              },
              "provider": {
                "type": "string",
                "description": "Login provider"
              },
              "organisation": {
                "type": "string",
                "description": "Organisation"
              },
              "providerURL": {
                "type": "string",
                "description": "Login provider link"
              }
            }
          },
          "description": "Aliases"
        }
      }
    },
    "member": {
      "type": "object",
      "properties": {
        "board": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "entity": {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "source": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "nodeSummary": {
      "type": "object",
      "properties": {
        "payload": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The Card / List / Board ID from the webhook event"
            },
            "name": {
              "type": "string",
              "description": "The Card / List / Board Name"
            },
            "listId": {
              "type": "string",
              "description": "The List ID"
            },
            "type": {
              "type": "string",
              "description": "Node Type (Task, Entry, List, Board or Comment)"
            },
            "boardId": {
              "type": "string",
              "description": "The Board ID from the webhook event"
            },
            "board": {
              "type": "string",
              "description": "The Board Name"
            }
          }
        }
      }
    }
  }
}
