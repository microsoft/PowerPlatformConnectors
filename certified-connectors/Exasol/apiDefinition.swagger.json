{
  "swagger": "2.0",
  "info": {
    "description": "Exasol is an analytics-focused parallelized relational database management system (RDBMS). Connect to an Exasol database to create,read, update and delete data.",
    "title": "Exasol",
    "contact": {
      "name": "Exasol",
      "url": "https://github.com/exasol/power-apps-connector/issues",
      "email": "integrationteam@exasol.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/exasol/power-apps-connector/blob/main/LICENSE"
    },
    "version": "0.1.0"
  },
  "host": "exasol.com",
  "basePath": "/api/v1",
    "x-ms-connector-metadata": [
      {
        "propertyName": "Website",
        "propertyValue": "https://www.exasol.com/"
      },
      {
        "propertyName": "Privacy policy",
        "propertyValue": "https://www.exasol.com/privacy-policy"
      },
      {
        "propertyName": "Categories",
        "propertyValue": "Data;Business Intelligence"
      }
    ],
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/query/{query}": {
      "get": {
        "description": "Provide a query and get a result set",
        "produces": [
          "application/json"
        ],
        "summary": "Query the Exasol database",
        "parameters": [
          {
            "type": "string",
            "description": "SELECT query",
            "name": "query",
            "in": "path",
            "required": true,
            "x-ms-summary": "SELECT query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          }
        },
        "operationId": "ExecuteQuery"
      }
    },
    "/row": {
      "post": {
        "description": "Insert a single row into an Exasol table",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Insert row to a table",
        "parameters": [
          {
            "description": "Request body",
            "name": "request-body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.InsertRowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          }
        },
        "operationId": "InsertRow"
      }
    },
    "/rows": {
      "get": {
        "description": "Get zero or more rows from a table providing a WHERE condition",
        "produces": [
          "application/json"
        ],
        "summary": "Get rows from a table based on a condition",
        "parameters": [
          {
            "type": "string",
            "description": "Exasol schema name",
            "name": "schemaName",
            "in": "query",
            "required": true,
            "x-ms-summary": "Exasol schema name"
          },
          {
            "type": "string",
            "description": "Exasol table name",
            "name": "tableName",
            "in": "query",
            "required": true,
            "x-ms-summary": "Exasol table name"
          },
          {
            "type": "string",
            "description": "Exasol column name for WHERE clause",
            "name": "columnName",
            "in": "query",
            "x-ms-summary": "Exasol column name for WHERE clause"
          },
          {
            "type": "string",
            "description": "Comparison predicate for WHERE clause",
            "name": "comparisonPredicate",
            "in": "query",
            "x-ms-summary": "Comparison predicate for WHERE clause"
          },
          {
            "type": "string",
            "description": "Value of the specified Exasol column",
            "name": "value",
            "in": "query",
            "x-ms-summary": "Value of the specified Exasol column"
          },
          {
            "type": "string",
            "description": "Type of the value: string, bool, int or float",
            "name": "valueType",
            "in": "query",
            "x-ms-summary": "Type of the value: string, bool, int or float"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          }
        },
        "operationId": "GetRows"
      },
      "delete": {
        "description": "Delete zero or more rows from a table providing a WHERE condition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete rows from a table based on a condition",
        "parameters": [
          {
            "description": "Request body",
            "name": "request-body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.RowsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          }
        },
        "operationId": "DeleteRows"
      },
      "put": {
        "description": "Update zero or more row in a table based on a condition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update rows in a table based on a condition",
        "parameters": [
          {
            "description": "Request body",
            "name": "request-body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.UpdateRowsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          }
        },
        "operationId": "UpdateRows"
      }
    },
    "/statement": {
      "post": {
        "description": "Execute a statement without a result set",
        "produces": [
          "application/json"
        ],
        "summary": "Execute a statement on the Exasol database",
        "parameters": [
          {
            "description": "Request body",
            "name": "request-body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.ExecuteStatementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          }
        },
        "operationId": "ExecuteNonQuery"
      }
    },
    "/tables": {
      "get": {
        "description": "Get a list of all available tables",
        "produces": [
          "application/json"
        ],
        "summary": "Get tables that are available for the user",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.GetTablesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/exasol_rest_api.APIBaseResponse"
            }
          }
        },
        "operationId": "GetTables"
      }
    }
  },
  "definitions": {
    "exasol_rest_api.APIBaseResponse": {
      "type": "object",
      "properties": {
        "exception": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "exasol_rest_api.Condition": {
      "type": "object",
      "properties": {
        "comparisonPredicate": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/exasol_rest_api.Value"
        }
      }
    },
    "exasol_rest_api.ExecuteStatementRequest": {
      "type": "object",
      "properties": {
        "sqlStatement": {
          "type": "string"
        }
      }
    },
    "exasol_rest_api.GetTablesResponse": {
      "type": "object",
      "properties": {
        "exception": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "tablesList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/exasol_rest_api.Table"
          }
        }
      }
    },
    "exasol_rest_api.InsertRowRequest": {
      "type": "object",
      "properties": {
        "row": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/exasol_rest_api.Value"
          }
        },
        "schemaName": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        }
      }
    },
    "exasol_rest_api.RowsRequest": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/exasol_rest_api.Condition"
        },
        "schemaName": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        }
      }
    },
    "exasol_rest_api.Table": {
      "type": "object",
      "properties": {
        "schemaName": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        }
      }
    },
    "exasol_rest_api.UpdateRowsRequest": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/exasol_rest_api.Condition"
        },
        "row": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/exasol_rest_api.Value"
          }
        },
        "schemaName": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        }
      }
    },
    "exasol_rest_api.Value": {
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "value": {}
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}