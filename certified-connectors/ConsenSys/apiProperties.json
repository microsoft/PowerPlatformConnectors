{
  "properties": {
    "iconBrandColor": "#2c56dd",
    "publisher": "ConsenSys",
    "stackOwner": "ConsenSys",
    "capabilities": [],
    "connectionParameters": {
      "rpc_endpoint": {
        "type": "securestring",
        "uiDefinition": {
          "displayName": "RPC Endpoint",
          "description": "Enter the Ethereum RPC Endpoint",
          "tooltip": "Enter the Ethereum RPC Endpoint (never stored)",
          "constraints": {
            "tabIndex": 2,
            "clearText": false,
            "required": "true"
          }
        }
      },
      "private_key": {
        "type": "securestring",
        "uiDefinition": {
          "displayName": "Private key",
          "description": "Enter the Ethereum Private key",
          "tooltip": "Enter the Ethereum Private key (never stored)",
          "constraints": {
            "tabIndex": 3,
            "clearText": false,
            "required": "true"
          }
        }
      },
      "chain_id": {
        "type": "securestring",
        "uiDefinition": {
          "displayName": "Chain Id",
          "description": "Enter the Ethereum Chain Id",
          "tooltip": "Enter the Ethereum Chain Id (never stored)",
          "constraints": {
            "tabIndex": 4,
            "clearText": false,
            "required": "true"
          }
        }
      },
      "api_key": {
        "type": "securestring",
        "uiDefinition": {
          "displayName": "API Key",
          "description": "Enter the API Key for the connector",
          "tooltip": "Enter the API Key for the connector (never stored)",
          "constraints": {
            "tabIndex": 5,
            "clearText": false,
            "required": "true"
          }
        }
      }
    },
    "policyTemplateInstances": [
      {
        "templateId": "setheader",
        "title": "RPC Endpoint",
        "parameters": {
          "x-ms-apimTemplateParameter.name": "rpcendpoint",
          "x-ms-apimTemplateParameter.value": "@connectionParameters('rpc_endpoint')",
          "x-ms-apimTemplateParameter.existsAction": "override",
          "x-ms-apimTemplate-policySection": "Request",
          "x-ms-apimTemplate-operationName": [
            "TestConnection",
            "GetSmartContractConstructorMetadata",
            "GetSmartContractFunctionMetadata",
            "GetSmartContractPropertiesMetadata",
            "GetConstantSmartContractFunctionNames",
            "GetSmartContractProperties",
            "ExecuteSmartContractFunction",
            "ExecuteContractFunction",
            "DeployContract",
            "GetSmartContractEvents",
            "GetSmartContractEventMetadata",
            "GetSmartContractFunctionResultMetadata",
            "OnNewEvent",
            "GetMutableSmartFunctionNames"
          ]
        }
      },
      {
        "templateId": "setheader",
        "title": "Private key",
        "parameters": {
          "x-ms-apimTemplateParameter.name": "privatekey",
          "x-ms-apimTemplateParameter.value": "@connectionParameters('private_key')",
          "x-ms-apimTemplateParameter.existsAction": "override",
          "x-ms-apimTemplate-policySection": "Request",
          "x-ms-apimTemplate-operationName": [
            "TestConnection",
            "GetConstantSmartContractFunctionNames",
            "ExecuteSmartContractFunction",
            "ExecuteContractFunction",
            "DeployContract",
            "GetSmartContractEvents",
            "OnNewEvent",
            "GetSmartContractProperties"
          ]
        }
      },
      {
        "templateId": "setheader",
        "title": "Chain Id",
        "parameters": {
          "x-ms-apimTemplateParameter.name": "chainId",
          "x-ms-apimTemplateParameter.value": "@connectionParameters('chain_id')",
          "x-ms-apimTemplateParameter.existsAction": "override",
          "x-ms-apimTemplate-policySection": "Request",
          "x-ms-apimTemplate-operationName": [
            "TestConnection",
            "GetConstantSmartContractFunctionNames",
            "ExecuteSmartContractFunction",
            "ExecuteContractFunction",
            "DeployContract",
            "GetSmartContractEvents",
            "OnNewEvent",
            "GetSmartContractProperties"
          ]
        }
      },
      {
        "templateId": "setheader",
        "title": "API Key",
        "parameters": {
          "x-ms-apimTemplateParameter.name": "apikey",
          "x-ms-apimTemplateParameter.value": "@connectionParameters('api_key')",
          "x-ms-apimTemplateParameter.existsAction": "override",
          "x-ms-apimTemplate-policySection": "Request",
          "x-ms-apimTemplate-operationName": [
            "TestConnection",
            "GetSmartContractConstructorMetadata",
            "GetSmartContractFunctionMetadata",
            "GetSmartContractPropertiesMetadata",
            "GetConstantSmartContractFunctionNames",
            "GetSmartContractProperties",
            "ExecuteSmartContractFunction",
            "ExecuteContractFunction",
            "DeployContract",
            "GetSmartContractEvents",
            "GetSmartContractEventMetadata",
            "GetSmartContractFunctionResultMetadata",
            "OnNewEvent",
            "GetMutableSmartFunctionNames"
          ]
        }
      }
    ]
  }
}