{
  "basePath": "/api/v1",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "Document": {
      "properties": {
        "api_used": {
          "description": "Indicates whether document was created using the API",
          "readOnly": true,
          "title": "Document Api Used",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "attachments": {
          "items": {
            "$ref": "#/definitions/DocumentAttachment"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-visibility": "advanced"
        },
        "auto_delete_after": {
          "description": "Date and time calculated using `auto_delete_days` after which a finished document (signed/cancelled/declined) will be automatically deleted",
          "format": "date-time",
          "readOnly": true,
          "title": "Document Auto Delete After",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "auto_delete_days": {
          "description": "Number of days after which a finished document (signed/cancelled/declined) will be automatically deleted",
          "maximum": 730,
          "minimum": 1,
          "title": "Document Auto Delete Days",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "auto_expire_after": {
          "description": "Date and time calculated using `auto_expire_days` after which a non finished document will be automatically expired",
          "format": "date-time",
          "readOnly": true,
          "title": "Document Auto Expire After",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "auto_expire_days": {
          "description": "Number of days after which a non finished document will be automatically expired",
          "maximum": 730,
          "minimum": 1,
          "title": "Document Auto Expire Days",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "events_callback_url": {
          "description": "URL at which to receive [event callbacks](#section/Events/Events-callback) for this document",
          "format": "uri",
          "maxLength": 2100,
          "title": "Document Events Callback Url",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "external_id": {
          "description": "ID used to reference document in external system",
          "maxLength": 255,
          "title": "Document External Id",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "file": {
          "description": "Temporary URL to original file, expires in five minutes",
          "format": "uri",
          "readOnly": true,
          "title": "Document File",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "file_as_pdf": {
          "description": "Temporary URL to original file as PDF, expires in five minutes",
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Document File As Pdf",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "file_from_content": {
          "description": "Base64 encoded document content",
          "title": "Document File From Content",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "file_from_content_name": {
          "description": "Filename, including extension. Required when using `file_from_content`.",
          "title": "Document File From Content Name",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "file_from_sf": {
          "$ref": "#/definitions/FileFromSf"
        },
        "file_from_url": {
          "description": "Publicly accessible URL of document to be downloaded by SignRequest",
          "format": "uri",
          "maxLength": 2100,
          "title": "Document File From Url",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "frontend_id": {
          "description": "Shared secret used in conjunction with <a href=\"#section/Frontend-API/SignRequest-js-client-(beta)\">SignRequest-js client</a> to grant user access to a document that's not a member of the document's team",
          "maxLength": 255,
          "title": "Document Frontend Id",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "name": {
          "description": "Defaults to filename, including extension",
          "maxLength": 255,
          "title": "Document Name",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "pdf": {
          "description": "Temporary URL to signed document as PDF, expires in five minutes",
          "format": "uri",
          "readOnly": true,
          "title": "Document Pdf",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "prefill_tags": {
          "description": "Prefill signer input data, see [prefill tags](#section/Preparing-a-document/Prefill-tags-templates)",
          "items": {
            "$ref": "#/definitions/InlinePrefillTags"
          },
          "type": "array",
          "x-ms-visibility": "advanced"
        },
        "processing": {
          "description": "Indicates whether a change to the document is processing and the PDF may be out of date. It is recommended to wait until processing has finished before downloading the PDF. Webhooks are not sent until processing has been completed.",
          "readOnly": true,
          "title": "Document Processing",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "sandbox": {
          "description": "Indicates whether document was created as part of a sandbox team",
          "readOnly": true,
          "title": "Document Sandbox",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "security_hash": {
          "description": "SHA256 hash of PDF contents",
          "minLength": 1,
          "readOnly": true,
          "title": "Document Security Hash",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "signing_log": {
          "properties": {
            "pdf": {
              "description": "Temporary URL to signing log, expires in five minutes",
              "format": "uri",
              "readOnly": true,
              "title": "Signing Log Pdf",
              "type": "string",
              "x-ms-visibility": "advanced",
              "x-nullable": true
            },
            "security_hash": {
              "description": "SHA256 hash of PDF contents",
              "minLength": 1,
              "readOnly": true,
              "title": "Signing Log Security Hash",
              "type": "string",
              "x-ms-visibility": "advanced"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "signrequest": {
          "properties": {
            "disable_attachments": {
              "description": "Disable uploading/adding of attachments",
              "readOnly": true,
              "title": "Signrequest Disable Attachments",
              "type": "boolean",
              "x-ms-visibility": "advanced"
            },
            "disable_blockchain_proof": {
              "description": "Disables storing timestamp proof hashes in blockchain integrations.",
              "readOnly": true,
              "title": "Signrequest Disable Blockchain Proof",
              "type": "boolean",
              "x-ms-visibility": "advanced",
              "x-nullable": true
            },
            "disable_date": {
              "description": "Disable adding of dates",
              "readOnly": true,
              "title": "Signrequest Disable Date",
              "type": "boolean",
              "x-ms-visibility": "advanced"
            },
            "disable_emails": {
              "description": "Disable all SignRequest status emails as well as the email that contains the signed documents",
              "readOnly": true,
              "title": "Signrequest Disable Emails",
              "type": "boolean",
              "x-ms-visibility": "advanced"
            },
            "disable_text": {
              "description": "Disable adding of text",
              "readOnly": true,
              "title": "Signrequest Disable Text",
              "type": "boolean",
              "x-ms-visibility": "advanced"
            },
            "disable_text_signatures": {
              "description": "Disable usage of signatures generated by typing (text)",
              "readOnly": true,
              "title": "Signrequest Disable Text Signatures",
              "type": "boolean",
              "x-ms-visibility": "advanced"
            },
            "disable_upload_signatures": {
              "description": "Disable usage of uploaded signatures (images)",
              "readOnly": true,
              "title": "Signrequest Disable Upload Signatures",
              "type": "boolean",
              "x-ms-visibility": "advanced"
            },
            "from_email": {
              "description": "Email of user sending the SignRequest (must be a validated email)",
              "format": "email",
              "readOnly": true,
              "title": "Signrequest From Email",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "from_email_name": {
              "description": "Name to be used in the `From` email header, e.g. `{from_email_name} <no-reply@signrequest.com>`",
              "minLength": 1,
              "readOnly": true,
              "title": "Signrequest From Email Name",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "is_being_prepared": {
              "description": "Have the sender of a SignRequest prepare the document before sending the request out, see: [prepare using the web interface](#section/Preparing-a-document/Prepare-using-the-web-interface)",
              "readOnly": true,
              "title": "Signrequest Is Being Prepared",
              "type": "boolean",
              "x-ms-visibility": "advanced",
              "x-nullable": true
            },
            "message": {
              "description": "Message to include in SignRequest email, may contain the following html tags: `a`, `abbr`, `acronym`, `b`, `blockquote`, `code`, `em`, `i`, `ul`, `li`, `ol`, and `strong`",
              "minLength": 1,
              "readOnly": true,
              "title": "Signrequest Message",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "prepare_url": {
              "format": "uri",
              "minLength": 1,
              "readOnly": true,
              "title": "Signrequest Prepare Url",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "redirect_url": {
              "description": "URL at which SignRequest will redirect to when a document is signed",
              "format": "uri",
              "minLength": 1,
              "readOnly": true,
              "title": "Signrequest Redirect Url",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "redirect_url_declined": {
              "description": "URL at which SignRequest will redirect to when a document is declined",
              "format": "uri",
              "minLength": 1,
              "readOnly": true,
              "title": "Signrequest Redirect Url Declined",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "required_attachments": {
              "items": {
                "$ref": "#/definitions/RequiredAttachment"
              },
              "readOnly": true,
              "type": "array",
              "x-ms-visibility": "advanced"
            },
            "send_reminders": {
              "description": "Automatically remind signers to sign a document, see: [automatic reminders](#section/Working-with-a-SignRequest/Automatic-reminders)",
              "readOnly": true,
              "title": "Signrequest Send Reminders",
              "type": "boolean",
              "x-ms-visibility": "advanced"
            },
            "signers": {
              "items": {
                "$ref": "#/definitions/Signer"
              },
              "readOnly": true,
              "type": "array",
              "x-ms-visibility": "advanced"
            },
            "subject": {
              "description": "Subject of SignRequest email",
              "minLength": 1,
              "readOnly": true,
              "title": "Signrequest Subject",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "text_message_verification_locked": {
              "description": "When true a text message verification is needed before the signer can see the document",
              "readOnly": true,
              "title": "Signrequest Text Message Verification Locked",
              "type": "boolean",
              "x-ms-visibility": "advanced",
              "x-nullable": true
            },
            "uuid": {
              "minLength": 1,
              "readOnly": true,
              "title": "Signrequest Uuid",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "who": {
              "description": "`m`: only me, `mo`: me and others, `o`: only others",
              "enum": [
                "m",
                "mo",
                "o"
              ],
              "readOnly": true,
              "title": "Signrequest Who",
              "type": "string",
              "x-ms-visibility": "advanced"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "`co`: converting, `ne`: new, `se`: sent, `vi`: viewed, `si`: signed, `do`: downloaded, `sd`: signed and downloaded, `ca`: cancelled, `de`: declined, `ec`: error converting, `es`: error sending, `xp`: expired",
          "enum": [
            "co",
            "ne",
            "se",
            "vi",
            "si",
            "do",
            "sd",
            "ca",
            "de",
            "ec",
            "es",
            "xp"
          ],
          "readOnly": true,
          "title": "Document Status",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "team": {
          "properties": {
            "name": {
              "minLength": 1,
              "readOnly": true,
              "title": "Team Name",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "subdomain": {
              "format": "uri",
              "minLength": 1,
              "pattern": "^[-a-zA-Z0-9_]+$",
              "readOnly": true,
              "title": "Team Subdomain",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "url": {
              "format": "uri",
              "readOnly": true,
              "title": "Team Url",
              "type": "string",
              "x-ms-visibility": "advanced"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "template": {
          "format": "uri",
          "title": "Document Template",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "url": {
          "format": "uri",
          "readOnly": true,
          "title": "Document Url",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "uuid": {
          "minLength": 1,
          "readOnly": true,
          "title": "Document Uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "type": "object"
    },
    "DocumentAttachment": {
      "properties": {
        "document": {
          "format": "uri",
          "title": "Document Attachment Document",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "file": {
          "description": "Temporary URL to document attachment, expires in five minutes",
          "format": "uri",
          "readOnly": true,
          "title": "Document Attachment File",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "file_from_content": {
          "description": "Base64 encoded document content",
          "title": "Document Attachment File From Content",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "file_from_content_name": {
          "description": "Filename, including extension. Required when using `file_from_content`.",
          "title": "Document Attachment File From Content Name",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "file_from_url": {
          "description": "Publicly accessible URL of document to be downloaded by SignRequest",
          "format": "uri",
          "maxLength": 2100,
          "title": "Document Attachment File From Url",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "name": {
          "description": "Defaults to filename, including extension",
          "maxLength": 255,
          "title": "Document Attachment Name",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "url": {
          "format": "uri",
          "readOnly": true,
          "title": "Document Attachment Url",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "uuid": {
          "minLength": 1,
          "readOnly": true,
          "title": "Document Attachment Uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "document"
      ],
      "type": "object"
    },
    "DocumentSignerTemplateConf": {
      "properties": {
        "approve_only": {
          "description": "Require user to approve the document (without adding a signature), see: [Approve only](#section/Additional-signing-methods/Approve-only)",
          "title": "Approve only",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "in_person": {
          "description": "When used in combination with an embed url on the sender, after sender has signed, they will be redirected to the next `in_person` signer, see: [In person signing](#section/Additional-signing-methods/In-person-signing)",
          "title": "In person",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "needs_to_sign": {
          "description": "When `false` user does not need to sign, but will receive a copy of the signed document and signing log, see: [Copy only](#section/Additional-signing-methods/Copy-only)",
          "title": "Needs to sign",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "notify_only": {
          "description": "Send notifications about the document and a copy of the signed document and signing log, but don't require them to take any action, see: [Notify only](#section/Additional-signing-methods/Notify-only)",
          "title": "Notify only",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "order": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Order",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "placeholders": {
          "items": {
            "$ref": "#/definitions/Placeholder"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-visibility": "advanced"
        },
        "signer_index": {
          "maximum": 2147483647,
          "minimum": -2147483648,
          "title": "Signer index",
          "type": "integer",
          "x-ms-visibility": "advanced"
        }
      },
      "type": "object"
    },
    "FileFromSf": {
      "properties": {
        "object_id": {
          "minLength": 1,
          "title": "Object id",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "object_type": {
          "minLength": 1,
          "title": "Object type",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "uid": {
          "minLength": 1,
          "title": "Uid",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "object_type",
        "object_id"
      ],
      "title": "File from sf",
      "type": "object"
    },
    "InlinePrefillTags": {
      "description": "Prefill signer input data, see [prefill tags](#section/Preparing-a-document/Prefill-tags-templates)",
      "properties": {
        "checkbox_value": {
          "title": "Prefill Tags Checkbox Value",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "date_value": {
          "format": "date",
          "title": "Prefill Tags Date Value",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "external_id": {
          "maxLength": 255,
          "title": "Prefill Tags External Id",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "text": {
          "title": "Prefill Tags Text",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "InlineSignRequest": {
      "properties": {
        "disable_attachments": {
          "description": "Disable uploading/adding of attachments",
          "readOnly": true,
          "title": "Signrequest Disable Attachments",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "disable_blockchain_proof": {
          "description": "Disables storing timestamp proof hashes in blockchain integrations.",
          "readOnly": true,
          "title": "Signrequest Disable Blockchain Proof",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "disable_date": {
          "description": "Disable adding of dates",
          "readOnly": true,
          "title": "Signrequest Disable Date",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "disable_emails": {
          "description": "Disable all SignRequest status emails as well as the email that contains the signed documents",
          "readOnly": true,
          "title": "Signrequest Disable Emails",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "disable_text": {
          "description": "Disable adding of text",
          "readOnly": true,
          "title": "Signrequest Disable Text",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "disable_text_signatures": {
          "description": "Disable usage of signatures generated by typing (text)",
          "readOnly": true,
          "title": "Signrequest Disable Text Signatures",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "disable_upload_signatures": {
          "description": "Disable usage of uploaded signatures (images)",
          "readOnly": true,
          "title": "Signrequest Disable Upload Signatures",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "from_email": {
          "description": "Email of user sending the SignRequest (must be a validated email)",
          "format": "email",
          "readOnly": true,
          "title": "Signrequest From Email",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "from_email_name": {
          "description": "Name to be used in the `From` email header, e.g. `{from_email_name} <no-reply@signrequest.com>`",
          "minLength": 1,
          "readOnly": true,
          "title": "Signrequest From Email Name",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "is_being_prepared": {
          "description": "Have the sender of a SignRequest prepare the document before sending the request out, see: [prepare using the web interface](#section/Preparing-a-document/Prepare-using-the-web-interface)",
          "readOnly": true,
          "title": "Signrequest Is Being Prepared",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "message": {
          "description": "Message to include in SignRequest email, may contain the following html tags: `a`, `abbr`, `acronym`, `b`, `blockquote`, `code`, `em`, `i`, `ul`, `li`, `ol`, and `strong`",
          "minLength": 1,
          "readOnly": true,
          "title": "Signrequest Message",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "prepare_url": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Signrequest Prepare Url",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "redirect_url": {
          "description": "URL at which SignRequest will redirect to when a document is signed",
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Signrequest Redirect Url",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "redirect_url_declined": {
          "description": "URL at which SignRequest will redirect to when a document is declined",
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Signrequest Redirect Url Declined",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "required_attachments": {
          "items": {
            "$ref": "#/definitions/RequiredAttachment"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-visibility": "advanced"
        },
        "send_reminders": {
          "description": "Automatically remind signers to sign a document, see: [automatic reminders](#section/Working-with-a-SignRequest/Automatic-reminders)",
          "readOnly": true,
          "title": "Signrequest Send Reminders",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "signers": {
          "items": {
            "$ref": "#/definitions/Signer"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-visibility": "advanced"
        },
        "subject": {
          "description": "Subject of SignRequest email",
          "minLength": 1,
          "readOnly": true,
          "title": "Signrequest Subject",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "text_message_verification_locked": {
          "description": "When true a text message verification is needed before the signer can see the document",
          "readOnly": true,
          "title": "Signrequest Text Message Verification Locked",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "uuid": {
          "minLength": 1,
          "readOnly": true,
          "title": "Signrequest Uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "who": {
          "description": "`m`: only me, `mo`: me and others, `o`: only others",
          "enum": [
            "m",
            "mo",
            "o"
          ],
          "readOnly": true,
          "title": "Signrequest Who",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "readOnly": true,
      "type": "object"
    },
    "InlineTeam": {
      "properties": {
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Team Name",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "subdomain": {
          "format": "uri",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Team Subdomain",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "url": {
          "format": "uri",
          "readOnly": true,
          "title": "Team Url",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "readOnly": true,
      "type": "object"
    },
    "InlineTeamMember": {
      "properties": {
        "is_active": {
          "title": "Active",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "is_admin": {
          "title": "Is admin",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "is_owner": {
          "title": "Is owner",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "url": {
          "format": "uri",
          "readOnly": true,
          "title": "Url",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "uuid": {
          "minLength": 1,
          "readOnly": true,
          "title": "Uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "type": "object"
    },
    "Placeholder": {
      "properties": {
        "checkbox_value": {
          "title": "Checkbox value",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "date_value": {
          "format": "date",
          "title": "Date value",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "external_id": {
          "maxLength": 255,
          "title": "External id",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "page_index": {
          "title": "Page index",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "prefill": {
          "title": "Prefill",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "text": {
          "title": "Text",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "type": {
          "enum": [
            "s",
            "i",
            "n",
            "d",
            "t",
            "c"
          ],
          "title": "Type",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "uuid": {
          "minLength": 1,
          "readOnly": true,
          "title": "Uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "page_index",
        "prefill"
      ],
      "type": "object"
    },
    "RequiredAttachment": {
      "properties": {
        "name": {
          "maxLength": 255,
          "minLength": 1,
          "title": "Required Attachment Name",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "uuid": {
          "minLength": 1,
          "readOnly": true,
          "title": "Required Attachment Uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "SignRequestQuickCreate": {
      "properties": {
        "auto_delete_days": {
          "description": "Number of days after which a finished document (signed/cancelled/declined) will be automatically deleted",
          "maximum": 730,
          "minimum": 1,
          "title": "Auto delete days",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "auto_expire_days": {
          "description": "Number of days after which a non finished document will be automatically expired",
          "maximum": 730,
          "minimum": 1,
          "title": "Auto expire days",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "disable_attachments": {
          "description": "Disable uploading/adding of attachments",
          "title": "Disable attachments",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "disable_blockchain_proof": {
          "description": "Disables storing timestamp proof hashes in blockchain integrations.",
          "title": "Disable blockchain proof",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "disable_date": {
          "description": "Disable adding of dates",
          "title": "Disable date",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "disable_emails": {
          "description": "Disable all SignRequest status emails as well as the email that contains the signed documents",
          "title": "Disable emails",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "disable_text": {
          "description": "Disable adding of text",
          "title": "Disable text",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "disable_text_signatures": {
          "description": "Disable usage of signatures generated by typing (text)",
          "title": "Disable text signatures",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "disable_upload_signatures": {
          "description": "Disable usage of uploaded signatures (images)",
          "title": "Disable upload signatures",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "document": {
          "format": "uri",
          "readOnly": true,
          "title": "Document",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "events_callback_url": {
          "description": "URL at which to receive [event callbacks](#section/Events/Events-callback) for this document",
          "format": "uri",
          "maxLength": 2100,
          "title": "Events callback url",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "external_id": {
          "description": "ID used to reference document in external system",
          "maxLength": 255,
          "title": "External id",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "file": {
          "description": "Temporary URL to original file, expires in five minutes",
          "format": "uri",
          "readOnly": true,
          "title": "File",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "file_from_content": {
          "description": "Base64 encoded document content",
          "format": "byte",
          "title": "File from content",
          "type": "string",
          "x-ms-visibility": "important",
          "x-nullable": true
        },
        "file_from_content_name": {
          "description": "Filename, including extension. Required when using `file_from_content`.",
          "title": "File from content name",
          "type": "string",
          "x-ms-visibility": "important",
          "x-nullable": true
        },
        "file_from_url": {
          "description": "Publicly accessible URL of document to be downloaded by SignRequest",
          "format": "uri",
          "maxLength": 2100,
          "title": "File from url",
          "type": "string",
          "x-ms-visibility": "important",
          "x-nullable": true
        },
        "from_email": {
          "description": "Email of user sending the SignRequest (must be a validated email)",
          "format": "email",
          "maxLength": 255,
          "minLength": 1,
          "title": "From email",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "from_email_name": {
          "description": "Name to be used in the `From` email header, e.g. `{from_email_name} <no-reply@signrequest.com>`",
          "maxLength": 255,
          "title": "From email name",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "frontend_id": {
          "description": "Shared secret used in conjunction with <a href=\"#section/Frontend-API/SignRequest-js-client-(beta)\">SignRequest-js client</a> to grant user access to a document that's not a member of the document's team",
          "maxLength": 255,
          "title": "Frontend id",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "is_being_prepared": {
          "description": "Have the sender of a SignRequest prepare the document before sending the request out, see: [prepare using the web interface](#section/Preparing-a-document/Prepare-using-the-web-interface)",
          "title": "Is being prepared",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "message": {
          "description": "Message to include in SignRequest email, may contain the following html tags: `a`, `abbr`, `acronym`, `b`, `blockquote`, `code`, `em`, `i`, `ul`, `li`, `ol`, and `strong`",
          "title": "Message",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "name": {
          "description": "Defaults to filename, including extension",
          "maxLength": 255,
          "title": "Name",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "prefill_tags": {
          "description": "Prefill signer input data, see [prefill tags](#section/Preparing-a-document/Prefill-tags-templates)",
          "items": {
            "$ref": "#/definitions/InlinePrefillTags"
          },
          "type": "array",
          "x-ms-visibility": "advanced"
        },
        "prepare_url": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Prepare url",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "redirect_url": {
          "description": "URL at which SignRequest will redirect to when a document is signed",
          "format": "uri",
          "maxLength": 2100,
          "title": "Redirect url",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "redirect_url_declined": {
          "description": "URL at which SignRequest will redirect to when a document is declined",
          "format": "uri",
          "maxLength": 2100,
          "title": "Redirect url declined",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "required_attachments": {
          "description": "Attachments that signers are required to upload",
          "items": {
            "$ref": "#/definitions/RequiredAttachment"
          },
          "type": "array",
          "x-ms-visibility": "advanced"
        },
        "send_reminders": {
          "description": "Automatically remind signers to sign a document, see: [automatic reminders](#section/Working-with-a-SignRequest/Automatic-reminders)",
          "title": "Send reminders",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "signers": {
          "items": {
            "$ref": "#/definitions/Signer"
          },
          "type": "array",
          "x-ms-visibility": "important"
        },
        "subdomain": {
          "title": "Team",
          "type": "string",
          "x-ms-dynamic-list": {
            "itemTitlePath": "name",
            "itemValuePath": "subdomain",
            "itemsPath": "results",
            "operationId": "TeamsList",
            "parameters": {
              "include_personal": {
                "value": "true"
              }
            }
          },
          "x-ms-dynamic-values": {
            "operationId": "TeamsList",
            "parameters": {
              "include_personal": "true"
            },
            "value-collection": "results",
            "value-path": "subdomain",
            "value-title": "name"
          },
          "x-ms-visibility": "important"
        },
        "subject": {
          "description": "Subject of SignRequest email",
          "maxLength": 512,
          "title": "Subject",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "template": {
          "format": "uri",
          "title": "Template",
          "type": "string",
          "x-ms-dynamic-list": {
            "itemTitlePath": "name",
            "itemValuePath": "url",
            "itemsPath": "results",
            "operationId": "TemplatesList",
            "parameters": {
              "subdomain": {
                "parameterReference": "data/subdomain"
              }
            }
          },
          "x-ms-dynamic-values": {
            "operationId": "TemplatesList",
            "parameters": {
              "subdomain": {
                "parameter": "subdomain"
              }
            },
            "value-collection": "results",
            "value-path": "url",
            "value-title": "name"
          },
          "x-ms-visibility": "important",
          "x-nullable": true
        },
        "text_message_verification_locked": {
          "description": "When true a text message verification is needed before the signer can see the document",
          "title": "Text message verification locked",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "url": {
          "format": "uri",
          "readOnly": true,
          "title": "Url",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "uuid": {
          "minLength": 1,
          "readOnly": true,
          "title": "Uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "who": {
          "default": "o",
          "description": "`m`: only me, `mo`: me and others, `o`: only others",
          "enum": [
            "m",
            "mo",
            "o"
          ],
          "title": "Who",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        }
      },
      "required": [
        "signers"
      ],
      "type": "object"
    },
    "Signer": {
      "properties": {
        "after_document": {
          "format": "uri",
          "title": "Signer After Document",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "approve_only": {
          "description": "Require user to approve the document (without adding a signature), see: [Approve only](#section/Additional-signing-methods/Approve-only)",
          "title": "Signer Approve Only",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "attachments": {
          "items": {
            "$ref": "#/definitions/SignerAttachment"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-visibility": "advanced"
        },
        "declined": {
          "readOnly": true,
          "title": "Signer Declined",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "declined_on": {
          "format": "date-time",
          "readOnly": true,
          "title": "Signer Declined On",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "display_name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Signer Display Name",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "downloaded": {
          "readOnly": true,
          "title": "Signer Downloaded",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "email": {
          "format": "email",
          "maxLength": 255,
          "minLength": 1,
          "title": "Signer Email",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "email_viewed": {
          "readOnly": true,
          "title": "Signer Email Viewed",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "emailed": {
          "readOnly": true,
          "title": "Signer Emailed",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "embed_url": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Signer Embed Url",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "embed_url_user_id": {
          "maxLength": 255,
          "title": "Signer Embed Url User Id",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "first_name": {
          "maxLength": 255,
          "title": "Signer First Name",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "force_language": {
          "title": "Signer Force Language",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "forwarded": {
          "readOnly": true,
          "title": "Signer Forwarded",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "forwarded_on": {
          "format": "date-time",
          "readOnly": true,
          "title": "Signer Forwarded On",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "forwarded_reason": {
          "minLength": 1,
          "readOnly": true,
          "title": "Signer Forwarded Reason",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "forwarded_to_email": {
          "format": "email",
          "minLength": 1,
          "readOnly": true,
          "title": "Signer Forwarded To Email",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "in_person": {
          "description": "When used in combination with an embed url on the sender, after sender has signed, they will be redirected to the next `in_person` signer, see: [In person signing](#section/Additional-signing-methods/In-person-signing)",
          "title": "Signer In Person",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "inputs": {
          "items": {
            "$ref": "#/definitions/SignerInputs"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-visibility": "advanced"
        },
        "language": {
          "enum": [
            "en",
            "en-gb",
            "nl",
            "fr",
            "de",
            "he",
            "da",
            "fi",
            "hu",
            "it",
            "no",
            "pl",
            "pt",
            "es",
            "sv",
            "ru"
          ],
          "title": "Signer Language",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "last_name": {
          "maxLength": 255,
          "title": "Signer Last Name",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "message": {
          "minLength": 1,
          "readOnly": true,
          "title": "Signer Message",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "needs_to_sign": {
          "default": true,
          "description": "When `false` user does not need to sign, but will receive a copy of the signed document and signing log, see: [Copy only](#section/Additional-signing-methods/Copy-only)",
          "title": "Signer Needs To Sign",
          "type": "boolean",
          "x-ms-visibility": "important"
        },
        "notify_only": {
          "description": "Send notifications about the document and a copy of the signed document and signing log, but don't require them to take any action, see: [Notify only](#section/Additional-signing-methods/Notify-only)",
          "title": "Signer Notify Only",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "order": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Signer Order",
          "type": "integer",
          "x-ms-visibility": "important"
        },
        "password": {
          "description": "Require the signer to enter this password before signing a document. This field is write only.",
          "minLength": 1,
          "title": "Signer Password",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "redirect_url": {
          "format": "uri",
          "maxLength": 2100,
          "title": "Signer Redirect Url",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "redirect_url_declined": {
          "format": "uri",
          "maxLength": 2100,
          "title": "Signer Redirect Url Declined",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "signed": {
          "readOnly": true,
          "title": "Signer Signed",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "signed_on": {
          "format": "date-time",
          "readOnly": true,
          "title": "Signer Signed On",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "use_stamp_for_approve_only": {
          "description": "Place an approval stamp on a document when a signer approves a document",
          "title": "Signer Use Stamp For Approve Only",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "verify_bank_account": {
          "maxLength": 255,
          "title": "Signer Verify Bank Account",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "verify_phone_number": {
          "maxLength": 255,
          "title": "Signer Verify Phone Number",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "viewed": {
          "readOnly": true,
          "title": "Signer Viewed",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "email"
      ],
      "type": "object"
    },
    "SignerAttachment": {
      "properties": {
        "file": {
          "format": "uri",
          "readOnly": true,
          "title": "File",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "for_attachment": {
          "$ref": "#/definitions/RequiredAttachment"
        },
        "name": {
          "description": "Defaults to filename",
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "uuid": {
          "minLength": 1,
          "readOnly": true,
          "title": "Uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "type": "object"
    },
    "SignerInputs": {
      "properties": {
        "checkbox_value": {
          "title": "Checkbox value",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "date_value": {
          "format": "date",
          "title": "Date value",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "external_id": {
          "maxLength": 255,
          "title": "External id",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "page_index": {
          "title": "Page index",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "placeholder_uuid": {
          "maxLength": 36,
          "title": "Placeholder uuid",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "text": {
          "title": "Text",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "type": {
          "enum": [
            "s",
            "i",
            "n",
            "d",
            "t",
            "c"
          ],
          "title": "Type",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        }
      },
      "required": [
        "page_index"
      ],
      "type": "object"
    },
    "SigningLog": {
      "properties": {
        "pdf": {
          "description": "Temporary URL to signing log, expires in five minutes",
          "format": "uri",
          "readOnly": true,
          "title": "Signing Log Pdf",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "security_hash": {
          "description": "SHA256 hash of PDF contents",
          "minLength": 1,
          "readOnly": true,
          "title": "Signing Log Security Hash",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "readOnly": true,
      "type": "object"
    },
    "Team": {
      "properties": {
        "delete_after": {
          "description": "When filled this team will be deleted after this date",
          "format": "date-time",
          "readOnly": true,
          "title": "Delete after",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "events_callback_url": {
          "format": "uri",
          "maxLength": 2100,
          "title": "Events callback url",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "logo": {
          "format": "uri",
          "readOnly": true,
          "title": "Logo",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-nullable": true
        },
        "members": {
          "items": {
            "$ref": "#/definitions/InlineTeamMember"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-visibility": "advanced"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "phone": {
          "maxLength": 100,
          "title": "Phone",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "primary_color": {
          "maxLength": 100,
          "pattern": "^[#a-zA-Z0-9]+$",
          "title": "Primary_color",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sandbox": {
          "description": "Indicates whether team is in Sandbox mode",
          "readOnly": true,
          "title": "Sandbox",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "subdomain": {
          "format": "uri",
          "maxLength": 100,
          "minLength": 1,
          "title": "Subdomain",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "url": {
          "format": "uri",
          "readOnly": true,
          "title": "Url",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "name",
        "subdomain"
      ],
      "type": "object"
    },
    "Template": {
      "properties": {
        "name": {
          "description": "Defaults to filename",
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "signers": {
          "items": {
            "$ref": "#/definitions/DocumentSignerTemplateConf"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-visibility": "advanced"
        },
        "team": {
          "properties": {
            "name": {
              "minLength": 1,
              "readOnly": true,
              "title": "Team Name",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "subdomain": {
              "format": "uri",
              "minLength": 1,
              "pattern": "^[-a-zA-Z0-9_]+$",
              "readOnly": true,
              "title": "Team Subdomain",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "url": {
              "format": "uri",
              "readOnly": true,
              "title": "Team Url",
              "type": "string",
              "x-ms-visibility": "advanced"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "url": {
          "format": "uri",
          "readOnly": true,
          "title": "Url",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "uuid": {
          "minLength": 1,
          "readOnly": true,
          "title": "Uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "who": {
          "description": "`m`: only me, `mo`: me and others, `o`: only others",
          "enum": [
            "m",
            "mo",
            "o"
          ],
          "title": "Who",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "display_name": {
          "minLength": 1,
          "readOnly": true,
          "title": "User Display Name",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "email": {
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "title": "User Email Address",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "first_name": {
          "maxLength": 255,
          "title": "User First Name",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "last_name": {
          "maxLength": 255,
          "title": "User Last Name",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "email"
      ],
      "title": "User",
      "type": "object"
    },
    "WebhookSubscription": {
      "properties": {
        "callback_url": {
          "format": "uri",
          "maxLength": 2100,
          "minLength": 1,
          "title": "Callback url",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "event_type": {
          "enum": [
            "convert_error",
            "converted",
            "sending_error",
            "sent",
            "declined",
            "cancelled",
            "expired",
            "signed",
            "viewed",
            "downloaded",
            "signer_signed",
            "signer_email_bounced",
            "signer_viewed_email",
            "signer_viewed",
            "signer_forwarded",
            "signer_downloaded",
            "signrequest_received"
          ],
          "title": "Event type",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "Optional name to easily identify what webhook is used for",
          "maxLength": 255,
          "title": "Name",
          "type": "string",
          "x-ms-visibility": "important",
          "x-nullable": true
        },
        "subdomain": {
          "title": "Team",
          "type": "string",
          "x-ms-dynamic-list": {
            "itemTitlePath": "name",
            "itemValuePath": "subdomain",
            "itemsPath": "results",
            "operationId": "TeamsList",
            "parameters": {
              "include_personal": {
                "value": "true"
              }
            }
          },
          "x-ms-dynamic-values": {
            "operationId": "TeamsList",
            "parameters": {
              "include_personal": "true"
            },
            "value-collection": "results",
            "value-path": "subdomain",
            "value-title": "name"
          },
          "x-ms-visibility": "important"
        },
        "team": {
          "properties": {
            "name": {
              "minLength": 1,
              "readOnly": true,
              "title": "Team Name",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "subdomain": {
              "format": "uri",
              "minLength": 1,
              "pattern": "^[-a-zA-Z0-9_]+$",
              "readOnly": true,
              "title": "Team Subdomain",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "url": {
              "format": "uri",
              "readOnly": true,
              "title": "Team Url",
              "type": "string",
              "x-ms-visibility": "advanced"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "url": {
          "format": "uri",
          "readOnly": true,
          "title": "Url",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "uuid": {
          "minLength": 1,
          "readOnly": true,
          "title": "Uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "event_type",
        "callback_url"
      ],
      "type": "object"
    }
  },
  "host": "signrequest.com",
  "info": {
    "contact": {
      "email": "tech-support@signrequest.com"
    },
    "description": "SignRequest is a secure and legally binding e-signature tool that enables you and your partners to sign contracts and other documents fast and without the hassle of having to print, sign and scan. ",
    "termsOfService": "https://signrequest.com/r/terms",
    "title": "SignRequest",
    "version": "v1",
    "x-logo": {
      "altText": "SignRequest",
      "url": "https://signrequest.com/images/logo-padded.png"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "paths": {
    "/signrequest-quick-create/": {
      "post": {
        "description": "Creates and sends a new SignRequest.",
        "operationId": "SignrequestQuickCreateCreate",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignRequestQuickCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SignRequestQuickCreate"
            }
          }
        },
        "summary": "Send SignRequest",
        "tags": [
          "signrequest-quick-create"
        ],
        "x-ms-visibility": "important"
      }
    },
    "/teams/": {
      "get": {
        "description": "Retrieves a list of teams.",
        "operationId": "TeamsList",
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "include_personal",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Team"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "summary": "Retrieve a list of Teams",
        "tags": [
          "teams"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/templates/": {
      "get": {
        "description": "Retrieves a list of templates.",
        "operationId": "TemplatesList",
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "subdomain",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Template"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "summary": "Retrieve a list of Templates",
        "tags": [
          "templates"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/webhooks/": {
      "post": {
        "description": "Triggers when the document status of a SignRequest changes.",
        "operationId": "WebhooksCreate",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookSubscription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WebhookSubscription"
            }
          }
        },
        "summary": "When a document status changes",
        "tags": [
          "webhooks"
        ],
        "x-ms-trigger": "single",
        "x-ms-visibility": "important"
      },
      "x-ms-notification-content": {
        "schema": {
          "properties": {
            "document": {
              "$ref": "#/definitions/Document"
            }
          },
          "type": "object"
        }
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "security": [
    {
      "Token": []
    }
  ],
  "securityDefinitions": {
    "oauth2_auth": {
      "authorizationUrl": "https://signrequest.com/api/v1/oauth2/authorize/",
      "flow": "accessCode",
      "scopes": {
        "write": "write"
      },
      "tokenUrl": "https://signrequest.com/api/v1/oauth2/token/",
      "type": "oauth2"
    }
  },
  "swagger": "2.0"
}