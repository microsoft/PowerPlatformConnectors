{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Iterable",
    "description": "Enable integrations with your Iterable.",
    "x-ms-api-annotation": {
      "status": "Preview"
    },
    "contact": {
        "name": "Microsoft"
    }
  },
  "host": "api.iterable.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/lists": {
      "get": {
        "summary": "Get lists",
        "description": "Get all lists within an Iterable project.",
        "operationId": "GetLists",
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "lists": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The ID of the list.",
                        "x-ms-summary": "List ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the list.",
                        "x-ms-summary": "List name"
                      },
                      "createdAt": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The time the list was created.",
                        "x-ms-summary": "List creation time"
                      },
                      "listType": {
                        "type": "string",
                        "description": "The type of list.",
                        "x-ms-summary": "List type"
                      }
                    }
                  },
                  "description": "The fetched lists."
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a static list",
        "description": "Create a new static list.",
        "operationId": "CreateStaticList",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the list."
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "listId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The Id of newly created list."
                }
              }
            }
          }
        }
      }
    },
    "/api/lists/subscribe": {
      "post": {
        "summary": "Add subscribers to list",
        "description": "Add specific subscribers to a list.",
        "operationId": "AddUsersToList",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "listId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The listId to subscribe users to.",
                  "x-ms-visibility": "advanced"
                },
                "subscribers": {
                  "type": "array",
                  "description": "The list of subscribers to be added.",
                  "x-ms-visibility": "advanced",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The email of a subscriber."
                      },
                      "dataFields": {
                        "type": "object",
                        "description": "The dataFields of a subscriber."
                      },
                      "userId": {
                        "type": "string",
                        "description": "The userId of a subscriber."
                      },
                      "preferUserId": {
                        "type": "boolean",
                        "description": "The flag to indicate if user is anonymous."
                      },
                      "mergeNestedObjects": {
                        "type": "boolean",
                        "description": "The flag to indicate if nested objects should be merged."
                      }
                    }
                  }
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "successCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of users who were successfully subscribed."
                },
                "failCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of users who could not be subscribed."
                },
                "invalidEmails": {
                  "type": "array",
                  "items": {},
                  "description": "The list of invalid emails."
                },
                "invalidUserIds": {
                  "type": "array",
                  "items": {},
                  "description": "The list of invalid user Ids."
                }
              }
            }
          }
        }
      }
    },
    "/api/lists/getUsers": {
      "get": {
        "summary": "Get users in a list",
        "description": "Get all users within a list. Rate limit: 5 requests/minute, per project.",
        "operationId": "GetUsersInList",
        "parameters": [
          {
            "name": "listId",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "The list Id to fetch users from."
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/lists/unsubscribe": {
      "post": {
        "summary": "Remove users from a list",
        "description": "Remove specific users from a list.",
        "operationId": "RemoveUsers",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "listId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The listId to unsubscribe from."
                },
                "subscribers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The email of user to unsubscribe.",
                        "x-ms-visibility": "advanced"
                      },
                      "userId": {
                        "type": "string",
                        "description": "The userId of user to unsubscribe.",
                        "x-ms-visibility": "advanced"
                      }
                    }
                  },
                  "description": "The list of users to unsubscribe."
                },
                "campaignId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The campaignId."
                },
                "channelUnsubscribe": {
                  "type": "boolean",
                  "description": "The channel to unsubscribe."
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "successCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of users who were successfully unsubscribed."
                },
                "failCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of users who could not be unsubscribed."
                },
                "invalidEmails": {
                  "type": "array",
                  "items": {},
                  "description": "The list of invalid emails."
                },
                "invalidUserIds": {
                  "type": "array",
                  "items": {},
                  "description": "The list of invalid user Ids."
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Api-Key"
    }
  },
  "security": [],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://iterable.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://iterable.com/en-GB/trust/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Marketing"
    }
  ]
}
