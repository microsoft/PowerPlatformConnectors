{
  "swagger": "2.0",
  "info": {
    "title": "BuildingMinds DigitalTwin Core",
    "version": "1.0",
    "description": "The BuildingMinds Core Platform provides REST APIs. With the BuildingMinds DigitalTwin Core API you can read and list the Digital Building Twin masterdata such as buildings, floors and spaces and their properties.",
    "contact": {
      "name": "BuildingMinds Support",
      "url": "https://buildingminds.com/services/customer-support",
      "email": "support@buildingminds.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://buildingminds.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://buildingminds.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data"
    }
  ],
  "host": "api.onbuildingminds.com",
  "basePath": "/api/masterdata",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/premises/portfolios": {
      "get": {
        "description": "Get all portfolios for the currently logged in user's tenants",
        "operationId": "GetPortfolios",
        "summary": "Get all portfolios",
        "tags": [
          "Portfolios"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of portfolio objects",
            "schema": {
              "$ref": "#/definitions/PortfolioTypeWithPagination"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/sites": {
      "get": {
        "description": "Get all sites for the currently logged in user's tenants",
        "operationId": "GetSites",
        "summary": "Get all sites",
        "tags": [
          "Sites"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of site objects",
            "schema": {
              "$ref": "#/definitions/SiteTypeWithPagination"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/buildings": {
      "get": {
        "description": "Get all buildings for the currently logged in user's tenants",
        "operationId": "GetBuildings",
        "summary": "Get all buildings",
        "tags": [
          "Buildings"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of building objects",
            "schema": {
              "$ref": "#/definitions/BuildingTypeWithPagination"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/floors": {
      "get": {
        "description": "Get all floors for the currently logged in user's tenants",
        "operationId": "GetFloors",
        "summary": "Get all floors",
        "tags": [
          "Floors"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of floor objects",
            "schema": {
              "$ref": "#/definitions/FloorTypeWithPagination"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/roofs": {
      "get": {
        "description": "Get all roofs for the currently logged in user's tenants",
        "operationId": "GetRoofs",
        "summary": "Get all roofs",
        "tags": [
          "Roofs"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of roof objects",
            "schema": {
              "$ref": "#/definitions/RoofsTypeWithPagination"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/facades": {
      "get": {
        "description": "Get all Facades for the currently logged in user's tenants",
        "operationId": "GetFacades",
        "summary": "Get all facades",
        "tags": [
          "Facades"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of facade objects",
            "schema": {
              "$ref": "#/definitions/FacadesTypeWithPagination"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/outsideareas": {
      "get": {
        "description": "Get all outsideareas for the currently logged in user's tenants",
        "operationId": "GetOutsideareas",
        "summary": "Get all outsideareas",
        "tags": [
          "Outsideareas"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of outsidearea objects",
            "schema": {
              "$ref": "#/definitions/OutsideareasTypeWithPagination"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/subareas": {
      "get": {
        "description": "Get all subareas for the currently logged in user's tenants",
        "operationId": "GetSubareas",
        "summary": "Get all subareas",
        "tags": [
          "Subareas"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of subareas objects",
            "schema": {
              "$ref": "#/definitions/SubareasTypeWithPagination"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/lands": {
      "get": {
        "description": "Get all lands for the currently logged in user's tenants",
        "operationId": "GetLands",
        "summary": "Get all lands",
        "tags": [
          "Lands"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of land objects",
            "schema": {
              "$ref": "#/definitions/LandsTypeWithPagination"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/spaces": {
      "get": {
        "description": "Get all spaces for the currently logged in user's tenants",
        "operationId": "GetSpaces",
        "summary": "Get all spaces",
        "tags": [
          "Spaces"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of spaces for the given spaceType",
            "schema": {
              "$ref": "#/definitions/SpacesTypeWithPagination"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/portfolios/{id}": {
      "get": {
        "description": "Gets a portfolio with the given ID",
        "operationId": "GetPortfolioById",
        "summary": "Gets a portfolio with the given ID",
        "tags": [
          "Portfolios"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Portfolio"
            }
          }
        }
      }
    },
    "/premises/sites/{id}": {
      "get": {
        "description": "Gets a site with the given ID",
        "operationId": "GetSiteById",
        "summary": "Gets a site with the given ID",
        "tags": [
          "Sites"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        }
      }
    },
    "/premises/buildings/{id}": {
      "get": {
        "description": "Gets a building with the given ID",
        "operationId": "GetBuildingById",
        "summary": "Gets a buidling with the given ID",
        "tags": [
          "Buildings"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Building"
            }
          }
        }
      }
    },
    "/premises/floors/{id}": {
      "get": {
        "description": "Gets a floor with the given ID",
        "operationId": "GetFloorById",
        "summary": "Gets a floor with the given ID",
        "tags": [
          "Floors"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Floor"
            }
          }
        }
      }
    },
    "/premises/roofs/{id}": {
      "get": {
        "description": "Gets a roof with the given ID",
        "operationId": "GetRoofById",
        "summary": "Gets a roof with the given ID",
        "tags": [
          "Roofs"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Roof"
            }
          }
        }
      }
    },
    "/premises/facades/{id}": {
      "get": {
        "description": "Gets a facade with the given ID",
        "operationId": "GetFacadeById",
        "summary": "Gets a facade with the given ID",
        "tags": [
          "Facades"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Facade"
            }
          }
        }
      }
    },
    "/premises/outsideareas/{id}": {
      "get": {
        "description": "Gets a outsidearea with the given ID",
        "operationId": "GetOutsideareaById",
        "summary": "Gets a outsidearea with the given ID",
        "tags": [
          "Outsideareas"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Outsidearea"
            }
          }
        }
      }
    },
    "/premises/subareas/{id}": {
      "get": {
        "description": "Gets a subarea with the given ID",
        "operationId": "GetSubareaById",
        "summary": "Gets a subarea with the given ID",
        "tags": [
          "Subareas"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Subarea"
            }
          }
        }
      }
    },
    "/premises/lands/{id}": {
      "get": {
        "description": "Gets a land with the given ID",
        "operationId": "GetLandById",
        "summary": "Gets a land with the given ID",
        "tags": [
          "Lands"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Land"
            }
          }
        }
      }
    },
    "/premises/spaces/{id}": {
      "get": {
        "description": "Gets a space with the given ID",
        "operationId": "GetSpaceById",
        "summary": "Gets a space with the given ID",
        "tags": [
          "Spaces"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          }
        }
      }
    },
    "/premises/portfolios/{id}/children/exist": {
      "get": {
        "description": "Gets the information about the existence of children on a portfolios",
        "operationId": "CheckForChildrenOnPortfolio",
        "summary": "Gets the information about the existence of children on a portfolios",
        "tags": [
          "Portfolios"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseChildrenCheck"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/sites/{id}/children/exist": {
      "get": {
        "description": "Gets the information about the existence of children on a site",
        "operationId": "CheckForChildrenOnSite",
        "summary": "Gets the information about the existence of children on a site",
        "tags": [
          "Sites"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseChildrenCheck"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/buildings/{id}/children/exist": {
      "get": {
        "description": "Gets the information about the existence of children on a building",
        "operationId": "CheckForChildrenOnBuilding",
        "summary": "Gets the information about the existence of children on a building",
        "tags": [
          "Buildings"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseChildrenCheck"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/floors/{id}/children/exist": {
      "get": {
        "description": "Gets the information about the existence of children on a floor",
        "operationId": "CheckForChildrenOnFloor",
        "summary": "Gets the information about the existence of children on a floor",
        "tags": [
          "Floors"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseChildrenCheck"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/roofs/{id}/children/exist": {
      "get": {
        "description": "Gets the information about the existence of children on a roof",
        "operationId": "CheckForChildrenOnRoof",
        "summary": "Gets the information about the existence of children on a roof",
        "tags": [
          "Roofs"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseChildrenCheck"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/facades/{id}/children/exist": {
      "get": {
        "description": "Gets the information about the existence of children on a facade",
        "operationId": "CheckForChildrenOnFacade",
        "summary": "Gets the information about the existence of children on a facade",
        "tags": [
          "Facades"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseChildrenCheck"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/outsideareas/{id}/children/exist": {
      "get": {
        "description": "Gets the information about the existence of children on a outsidearea",
        "operationId": "CheckForChildrenOnOutsidearea",
        "summary": "Gets the information about the existence of children on a outsidearea",
        "tags": [
          "Outsideareas"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseChildrenCheck"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/subareas/{id}/children/exist": {
      "get": {
        "description": "Gets the information about the existence of children on a subarea",
        "operationId": "CheckForChildrenOnSubarea",
        "summary": "Gets the information about the existence of children on a subarea",
        "tags": [
          "Subareas"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseChildrenCheck"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/lands/{id}/children/exist": {
      "get": {
        "description": "Gets the information about the existence of children on a land",
        "operationId": "CheckForChildrenOnLand",
        "summary": "Gets the information about the existence of children on a land",
        "tags": [
          "Lands"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseChildrenCheck"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/spaces/{id}/children/exist": {
      "get": {
        "description": "Gets the information about the existence of children on a space",
        "operationId": "CheckForChildrenOnSpace",
        "summary": "Gets the information about the existence of children on a space",
        "tags": [
          "Spaces"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ResponseChildrenCheck"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/{spaceType}/{id}/associated/{associatedType}": {
      "get": {
        "description": "Get the list of spaces of certain type associated with the provided space entity",
        "operationId": "GetAssociatedSpacesForSpace",
        "summary": "Get the list of associated entities",
        "tags": [
          "Premises"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceType"
          },
          {
            "$ref": "#/parameters/spaceId"
          },
          {
            "$ref": "#/parameters/associatedType"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/top"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of spaces that are connected to the source space",
            "schema": {
              "$ref": "#/definitions/AssociatedSpacesTypeWithPagination"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/premises/{spaceType}/notassociated/{associatedType}": {
      "get": {
        "description": "Get the list of spaces of certain type which are not associated with the space of another provided type",
        "operationId": "GetUnassociatedSpaces",
        "summary": "Get the list of not associated entities",
        "tags": [
          "Premises"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/spaceType"
          },
          {
            "$ref": "#/parameters/associatedType"
          },
          {
            "$ref": "#/parameters/spaceIdQuery"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of spaces that are connected to the source space"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "definitions": {
    "CurrencyValueType": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number"
        },
        "unit": {
          "type": "string"
        }
      }
    },
    "AreaValueType": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number"
        },
        "unit": {
          "enum": [
            "m2",
            "ft2"
          ],
          "type": "string"
        },
        "metricValue": {
          "type": "number"
        }
      }
    },
    "LocationPathType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "LocationPathArrayType": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LocationPathType"
      }
    },
    "SpaceTypeOfUseEnum": {
      "enum": [
        "office",
        "apartment",
        "meeting",
        "technical",
        "parking",
        "production",
        "logistics",
        "traffic",
        "passageway",
        "storage",
        "bathroom",
        "canteen",
        "kitchen",
        "sales",
        "technicalShaft",
        "otherShaft"
      ],
      "type": "string"
    },
    "OutsideAreaType": {
      "enum": [
        "pavedArea",
        "greenArea"
      ],
      "type": "string"
    },
    "EntityType": {
      "enum": [
        "portfolio",
        "land",
        "site",
        "outsidearea",
        "subarea",
        "building",
        "floor",
        "roof",
        "facade",
        "space",
        "address"
      ],
      "type": "string"
    },
    "SpaceTypeOfOwnership": {
      "enum": [
        "Leased",
        "Freehold",
        "Part-Ownership",
        "Owned"
      ],
      "type": "string"
    },
    "LengthValueType": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number"
        },
        "unit": {
          "enum": [
            "m",
            "ft"
          ],
          "type": "string"
        }
      }
    },
    "AddressType": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "should be defined in POST/PUT requests for existing addresses only in the cases when existing address was added here instead of ids array",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "changedOn": {
          "format": "date",
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "changedBy": {
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "street": {
          "type": "string"
        },
        "houseNumber": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "description": "ISO 3166-1 alpha-3 Country Codes, e.g. CAN, USA, DEU",
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        },
        "postBox": {
          "type": "string"
        },
        "postBoxPostCode": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "externalId": {
          "format": "uuid",
          "description": "External id of address, should be generated on a client side when creating new address",
          "type": "string"
        },
        "latitude": {
          "format": "float",
          "description": "Laditiude coordinate for address",
          "type": "number"
        },
        "longitude": {
          "format": "float",
          "description": "longitude coordinate for address",
          "type": "number"
        }
      }
    },
    "Portfolio": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "changedOn": {
          "format": "date",
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "changedBy": {
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "locationPath": {
          "$ref": "#/definitions/LocationPathArrayType"
        },
        "tid": {
          "format": "uuid",
          "description": "tenant identifier",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "validFrom": {
          "format": "date",
          "type": "string"
        },
        "validTo": {
          "format": "date",
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "buildingGrossArea": {
          "$ref": "#/definitions/AreaValueType"
        },
        "landGrossArea": {
          "$ref": "#/definitions/AreaValueType"
        },
        "associatedLandIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "associatedBuildingIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "Site": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "changedOn": {
          "format": "date",
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "changedBy": {
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "locationPath": {
          "$ref": "#/definitions/LocationPathArrayType"
        },
        "tid": {
          "format": "uuid",
          "description": "tenant identifier",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "validFrom": {
          "format": "date",
          "type": "string"
        },
        "validTo": {
          "format": "date",
          "type": "string"
        },
        "buildingGrossArea": {
          "$ref": "#/definitions/AreaValueType"
        },
        "outsideareaGrossArea": {
          "$ref": "#/definitions/AreaValueType"
        },
        "mainAddressExternalId": {
          "format": "uuid",
          "description": "externalId of one of the addresses from the linkedAddresses collection should be put here to make address main",
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressType"
          }
        },
        "typeOfSite": {
          "$ref": "#/definitions/SpaceTypeOfUseEnum"
        },
        "imageIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "internalId": {
          "format": "uuid",
          "type": "string"
        },
        "furtherInformation": {
          "type": "string"
        }
      }
    },
    "Building": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "changedOn": {
          "format": "date",
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "changedBy": {
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "locationPath": {
          "$ref": "#/definitions/LocationPathArrayType"
        },
        "tid": {
          "format": "uuid",
          "description": "tenant identifier",
          "type": "string"
        },
        "associatedPortfolioId": {
          "format": "uuid",
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "type": "string"
        },
        "associatedLandIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        },
        "internalId": {
          "format": "uuid",
          "type": "string"
        },
        "validFrom": {
          "format": "date",
          "type": "string"
        },
        "validTo": {
          "format": "date",
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressType"
          }
        },
        "responsiblePeopleFullName": {
          "type": "string"
        },
        "typeOfOwnership": {
          "$ref": "#/definitions/SpaceTypeOfOwnership"
        },
        "typeOfBuilding": {
          "type": "string"
        },
        "imageIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "furtherInformation": {
          "type": "string"
        },
        "constructionYear": {
          "format": "date",
          "type": "string"
        },
        "yearOfLastRefurbishment": {
          "format": "date",
          "type": "string"
        },
        "grossArea": {
          "$ref": "#/definitions/AreaValueType"
        },
        "buildingPurchaseCost": {
          "$ref": "#/definitions/CurrencyValueType"
        },
        "hasMonumentProtection": {
          "type": "boolean"
        },
        "numberOfFloors": {
          "format": "int32",
          "type": "integer"
        },
        "numberOf BasementFloors": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Floor": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "changedOn": {
          "format": "date",
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "changedBy": {
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "locationPath": {
          "$ref": "#/definitions/LocationPathArrayType"
        },
        "tid": {
          "format": "uuid",
          "description": "tenant identifier",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "type": "string"
        },
        "internalId": {
          "format": "uuid",
          "type": "string"
        },
        "validFrom": {
          "format": "date",
          "type": "string"
        },
        "validTo": {
          "format": "date",
          "type": "string"
        },
        "furtherInformation": {
          "type": "string"
        },
        "grossArea": {
          "$ref": "#/definitions/AreaValueType"
        },
        "typeOfFloor": {
          "type": "string",
          "enum": [
            "basement",
            "above",
            "ground"
          ]
        },
        "imageIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "Space": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "changedOn": {
          "format": "date",
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "changedBy": {
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "locationPath": {
          "$ref": "#/definitions/LocationPathArrayType"
        },
        "tid": {
          "format": "uuid",
          "description": "tenant identifier",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "type": "string"
        },
        "internalId": {
          "format": "uuid",
          "type": "string"
        },
        "validFrom": {
          "format": "date",
          "type": "string"
        },
        "validTo": {
          "format": "date",
          "type": "string"
        },
        "furtherInformation": {
          "type": "string"
        },
        "imageIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "grossArea": {
          "$ref": "#/definitions/AreaValueType"
        },
        "typeOfSpace": {
          "type": "string",
          "enum": [
            "residential",
            "office",
            "industrial",
            "retail",
            "storage",
            "parking space",
            "shaft",
            "staircase",
            "other"
          ]
        }
      }
    },
    "Roof": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "changedOn": {
          "format": "date",
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "changedBy": {
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "locationPath": {
          "$ref": "#/definitions/LocationPathArrayType"
        },
        "tid": {
          "format": "uuid",
          "description": "tenant identifier",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "type": "string"
        },
        "internalId": {
          "format": "uuid",
          "type": "string"
        },
        "validFrom": {
          "format": "date",
          "type": "string"
        },
        "validTo": {
          "format": "date",
          "type": "string"
        },
        "furtherInformation": {
          "type": "string"
        },
        "material": {
          "type": "string"
        },
        "grossArea": {
          "$ref": "#/definitions/AreaValueType"
        },
        "imageIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "Facade": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "changedOn": {
          "format": "date",
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "changedBy": {
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "locationPath": {
          "$ref": "#/definitions/LocationPathArrayType"
        },
        "tid": {
          "format": "uuid",
          "description": "tenant identifier",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "type": "string"
        },
        "internalId": {
          "format": "uuid",
          "type": "string"
        },
        "validFrom": {
          "format": "date",
          "type": "string"
        },
        "validTo": {
          "format": "date",
          "type": "string"
        },
        "furtherInformation": {
          "type": "string"
        },
        "material": {
          "type": "string"
        },
        "grossArea": {
          "$ref": "#/definitions/AreaValueType"
        },
        "imageIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "Outsidearea": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "changedOn": {
          "format": "date",
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "changedBy": {
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "locationPath": {
          "$ref": "#/definitions/LocationPathArrayType"
        },
        "tid": {
          "format": "uuid",
          "description": "tenant identifier",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "type": "string"
        },
        "internalId": {
          "format": "uuid",
          "type": "string"
        },
        "validFrom": {
          "format": "date",
          "type": "string"
        },
        "validTo": {
          "format": "date",
          "type": "string"
        },
        "furtherInformation": {
          "type": "string"
        },
        "typeOfOutsideArea": {
          "$ref": "#/definitions/OutsideAreaType"
        },
        "grossArea": {
          "$ref": "#/definitions/AreaValueType"
        }
      }
    },
    "Land": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "changedOn": {
          "format": "date",
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "changedBy": {
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "locationPath": {
          "$ref": "#/definitions/LocationPathArrayType"
        },
        "tid": {
          "format": "uuid",
          "description": "tenant identifier",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "type": "string"
        },
        "internalId": {
          "format": "uuid",
          "type": "string"
        },
        "validFrom": {
          "format": "date",
          "type": "string"
        },
        "validTo": {
          "format": "date",
          "type": "string"
        },
        "furtherInformation": {
          "type": "string"
        },
        "grossArea": {
          "$ref": "#/definitions/AreaValueType"
        },
        "registrationNumberOfDeed": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plotNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subPlotNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "easementBelongingToDeed": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "admissableSiteOccupancyIndex": {
          "type": "number"
        },
        "admissableCubicIndex": {
          "type": "number"
        },
        "actualFloorSpaceIndex": {
          "type": "number"
        },
        "actualSiteOccupancyIndex": {
          "type": "number"
        },
        "actualCubicIndex": {
          "type": "number"
        },
        "associatedPortfolioId": {
          "format": "uuid",
          "type": "string"
        },
        "associatedBuildingIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "Subarea": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "changedOn": {
          "format": "date",
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "changedBy": {
          "description": "Read only",
          "type": "string",
          "readOnly": true
        },
        "locationPath": {
          "$ref": "#/definitions/LocationPathArrayType"
        },
        "tid": {
          "format": "uuid",
          "description": "tenant identifier",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "type": "string"
        },
        "internalId": {
          "format": "uuid",
          "type": "string"
        },
        "validFrom": {
          "format": "date",
          "type": "string"
        },
        "validTo": {
          "format": "date",
          "type": "string"
        },
        "furtherInformation": {
          "type": "string"
        }
      }
    },
    "AssociatedSpacesType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "countOfChildren": {
          "type": "integer"
        }
      }
    },
    "ChildrenCheckType": {
      "type": "object",
      "properties": {
        "hasChildren": {
          "type": "boolean"
        }
      }
    },
    "PortfolioTypeWithPagination": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Portfolio"
          }
        }
      }
    },
    "SiteTypeWithPagination": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Site"
          }
        }
      }
    },
    "BuildingTypeWithPagination": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Building"
          }
        }
      }
    },
    "FloorTypeWithPagination": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Floor"
          }
        }
      }
    },
    "RoofsTypeWithPagination": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roof"
          }
        }
      }
    },
    "FacadesTypeWithPagination": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Facade"
          }
        }
      }
    },
    "OutsideareasTypeWithPagination": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Outsidearea"
          }
        }
      }
    },
    "SubareasTypeWithPagination": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subarea"
          }
        }
      }
    },
    "LandsTypeWithPagination": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Land"
          }
        }
      }
    },
    "SpacesTypeWithPagination": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Space"
          }
        }
      }
    },
    "AssociatedSpacesTypeWithPagination": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Space"
          }
        }
      }
    }
  },
  "parameters": {
    "spaceType": {
      "name": "spaceType",
      "in": "path",
      "description": "Describes the kind of space",
      "required": true,
      "type": "string",
      "x-ms-summary": "Space Type",
      "enum": [
        "portfolios",
        "sites",
        "buildings",
        "floors",
        "roofs",
        "facades",
        "outsideareas",
        "subareas",
        "lands",
        "spaces"
      ]
    },
    "spaceId": {
      "name": "id",
      "in": "path",
      "description": "Format - uuid. Space unique identifier",
      "required": true,
      "x-ms-summary": "Space ID",
      "type": "string"
    },
    "spaceIdQuery": {
      "name": "spaceid",
      "in": "query",
      "description": "Format - uuid. Optional identifier of associated space to include in the results",
      "x-ms-summary": "Space ID Query",
      "type": "string"
    },
    "parentId": {
      "name": "parentid",
      "in": "query",
      "description": "Format - uuid. Parent id, required for all space types, but not for Portfolio",
      "x-ms-summary": "Parent ID",
      "type": "string"
    },
    "basePropertiesType": {
      "name": "basePropertiesType",
      "in": "body",
      "schema": {},
      "x-ms-summary": "Base Property Type",
      "description": "Space object to be added. Type of actual object must match query parameter 'spacetype'"
    },
    "associatedType": {
      "name": "associatedType",
      "in": "path",
      "description": "Describes the kind of associated space",
      "required": true,
      "type": "string",
      "x-ms-summary": "Associated Type",
      "enum": [
        "portfolios",
        "sites",
        "buildings",
        "floors",
        "roofs",
        "facades",
        "outsideareas",
        "subareas",
        "lands",
        "spaces"
      ]
    },
    "skip": {
      "name": "$skip",
      "in": "query",
      "description": "This parameter is used for pagination and marks the starting point of taking the items. Default is 0 ",
      "x-ms-summary": "Skip",
      "type": "string"
    },
    "top": {
      "name": "$top",
      "in": "query",
      "description": "This parameter is used for pagination and determines the maximum number of items which must be returned from the backend. Default is 20.",
      "x-ms-summary": "Stop",
      "type": "string"
    }
  },
  "responses": {
    "ResponseChildrenCheck": {
      "description": "Returns truthful hasChildren property if premises has children premises or equipment.",
      "schema": {
        "$ref": "#/definitions/ChildrenCheckType"
      }
    }
  },
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://buildingminds.b2clogin.com/buildingminds.onmicrosoft.com/B2C_1A_SignInUnified/oauth2/v2.0/authorize",
      "tokenUrl": "https://buildingminds.b2clogin.com/buildingminds.onmicrosoft.com/B2C_1A_SignInUnified/oauth2/v2.0/token",
      "scopes": {
        "https://buildingminds.onmicrosoft.com/cd1b0fa3-bc0f-4cd7-a09c-dbaf6c19db40/user_impersonation openid offline_access": "https://buildingminds.onmicrosoft.com/cd1b0fa3-bc0f-4cd7-a09c-dbaf6c19db40/user_impersonation openid offline_access"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "https://buildingminds.onmicrosoft.com/cd1b0fa3-bc0f-4cd7-a09c-dbaf6c19db40/user_impersonation openid offline_access"
      ]
    }
  ],
  "tags": []
}