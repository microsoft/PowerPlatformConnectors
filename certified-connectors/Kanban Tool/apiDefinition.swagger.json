{
  "swagger": "2.0",
  "info": {
    "description": "Kanban Tool is an intuitive project management service for real-time collaboration. By splitting work into stages, e.g. To do - Doing - Done, teams get a visual representation of the process and status of all tasks.\n- Unlimited boards with swimlanes and WIP limits\n- In-depth customization of the layout, card template, and process automation\n- Task assignments and comments\n- Seamless time tracking & reporting\n- iOS and Android apps,\nand much more!",
    "title": "Kanban Tool",
    "version": "1.0",
    "contact": {
      "name": "Kanban Tool Support",
      "url": "https://kanbantool.com/support/introduction",
      "email": "support@kanbantool.com"
    }
  },
  "host": "kanbantool.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [ "application/json" ],
  "produces": [],
  "paths": {
    "/api/v1/boards.json": {
      "get": {
        "description": "This operation gets boards.",
        "summary": "Get boards",
        "operationId": "GetBoards",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetBoardsResponse"
            }
          }
        }
      }
    },
    "/api/v1/boards/{board_id}.json": {
      "get": {
        "description": "This operation gets board's details.",
        "summary": "Get board",
        "operationId": "GetBoard",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetBoardResponse"
            }
          }
        }
      }
    },
    "/api/v1/boards/{board_id}/tasks.json": {
      "get": {
        "description": "This operation gets tasks.",
        "summary": "Get tasks",
        "operationId": "GetTasks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetTasksResponse"
            }
          }
        },
        "x-ms-visibility": "important"
      },
      "post": {
        "description": "This operation create a task.",
        "summary": "Create a task",
        "operationId": "CreateTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          },
          {
            "name": "task",
            "in": "body",
            "required": true,
            "description": "Task details.",
            "x-ms-summary": "Task details",
            "schema": {
              "$ref": "#/definitions/TaskCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetTaskResponse"
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/boards/{board_id}/tasks/{task_id}.json": {
      "get": {
        "description": "This operation gets a task.",
        "summary": "Get task",
        "operationId": "GetTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          },
          {
            "$ref": "#/parameters/task_id"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetTaskResponse"
            }
          }
        }
      },
      "delete": {
        "description": "This operation deletes a task.",
        "summary": "Delete task",
        "operationId": "DeleteTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          },
          {
            "$ref": "#/parameters/task_id"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetTaskResponse"
            }
          }
        }
      },
      "patch": {
        "description": "This operation update a task.",
        "summary": "Update a task",
        "operationId": "UpdateTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          },
          {
            "$ref": "#/parameters/task_id"
          },
          {
            "name": "task",
            "in": "body",
            "required": true,
            "description": "Task details.",
            "x-ms-summary": "Task details",
            "schema": {
              "$ref": "#/definitions/TaskUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetTaskResponse"
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/boards/{board_id}/tasks/{task_id}/move.json": {
      "put": {
        "description": "This operation moves a task.",
        "summary": "Move a task",
        "operationId": "MoveTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          },
          {
            "$ref": "#/parameters/task_id"
          },
          {
            "name": "task",
            "in": "body",
            "required": true,
            "description": "Task details.",
            "x-ms-summary": "Task details",
            "schema": {
              "$ref": "#/definitions/TaskMoveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetTaskResponse"
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/boards/{board_id}/tasks/{task_id}/archive.json": {
      "put": {
        "description": "This operation archives a task.",
        "summary": "Archive a task",
        "operationId": "ArchiveTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          },
          {
            "$ref": "#/parameters/task_id"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetTaskResponse"
            }
          }
        }
      }
    },
    "/api/v1/boards/{board_id}/changelog.json": {
      "get": {
        "description": "This operation get a board activities.",
        "summary": "Board activities",
        "operationId": "BoardActivities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetActivitiesResponse"
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/boards/{board_id}/tasks/{task_id}/comments.json": {
      "get": {
        "description": "This operation get a task comments.",
        "summary": "Get comments",
        "operationId": "GetComments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          },
          {
            "$ref": "#/parameters/task_id"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetCommentsResponse"
            }
          }
        }
      },
      "post": {
        "description": "This operation creates a comment.",
        "summary": "Create a comment",
        "operationId": "CreateComment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          },
          {
            "$ref": "#/parameters/task_id"
          },
          {
            "name": "comment",
            "in": "body",
            "description": "Comment",
            "required": true,
            "schema": {
              "required": [
                "content"
              ],
              "type": "object",
              "properties": {
                "content": {
                  "description": "Content of a comment.",
                  "type": "string",
                  "title": "Comment content"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetCommentResponse"
            }
          }
        }
      }
    },
    "/api/v1/boards/{board_id}/tasks/{task_id}/subtasks.json": {
      "get": {
        "description": "This operation listing subtasks.",
        "summary": "Get subtasks",
        "operationId": "GetSubtasks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          },
          {
            "$ref": "#/parameters/task_id"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetSubtasksResponse"
            }
          }
        }
      },
      "post": {
        "description": "This operation creates a subtask.",
        "summary": "Create a subtask",
        "operationId": "CreateSubtask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          },
          {
            "$ref": "#/parameters/task_id"
          },
          {
            "name": "subtask",
            "in": "body",
            "description": "Comment",
            "required": true,
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of a subtask.",
                  "type": "string",
                  "title": "Subtask name"
                },
                "assigned_user_id": {
                  "description": "ID of assigned user.",
                  "type": "string",
                  "title": "Assigned user",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoardV3",
                    "parameters": {
                      "board_id": {
                        "parameter": "board_id"
                      }
                    },
                    "value-collection": "collaborators",
                    "value-path": "id",
                    "value-title": "name"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetSubtaskResponse"
            }
          }
        }
      }
    },
    "/api/v1/boards/{board_id}/tasks/{task_id}/subtasks/{subtask_id}.json": {
      "delete": {
        "description": "This operation deletes a subtask.",
        "summary": "Deletes a subtask",
        "operationId": "DeleteSubtask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          },
          {
            "$ref": "#/parameters/task_id"
          },
          {
            "$ref": "#/parameters/subtask_id"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetSubtaskResponse"
            }
          }
        }
      },
      "put": {
        "description": "This operation updates a subtask.",
        "summary": "Update a subtask",
        "operationId": "UpdateSubtask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          },
          {
            "$ref": "#/parameters/task_id"
          },
          {
            "$ref": "#/parameters/subtask_id"
          },
          {
            "name": "subtask",
            "in": "body",
            "description": "Comment",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of a subtask.",
                  "type": "string",
                  "title": "Subtask name"
                },
                "is_completed": {
                  "description": "Is completed",
                  "type": "boolean",
                  "title": "Is completed"
                },
                "assigned_user_id": {
                  "description": "ID of assigned user.",
                  "type": "string",
                  "title": "Assigned user",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoardV3",
                    "parameters": {
                      "board_id": {
                        "parameter": "board_id"
                      }
                    },
                    "value-collection": "collaborators",
                    "value-path": "id",
                    "value-title": "name"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetSubtaskResponse"
            }
          }
        }
      }
    },
    "/api/v3/boards/{board_id}.json": {
      "get": {
        "description": "This operation get a board details.",
        "summary": "Get board v3",
        "operationId": "GetBoardV3",
        "consumes": [
          "application/json"
        ],
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/board_id"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/GetBoardResponseV3"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GetBoardsResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GetBoardResponse"
      }
    },
    "GetBoardResponse": {
      "type": "object",
      "properties": {
        "board": {
          "type": "object",
          "properties": {
            "id": {
              "description": "Board's ID",
              "title": "ID",
              "type": "integer"
            },
            "name": {
              "description": "Board's name",
              "title": "Name",
              "type": "string"
            },
            "description": {
              "description": "Board's description",
              "title": "Description",
              "type": "string"
            },
            "position": {
              "description": "Board's position",
              "title": "Position",
              "type": "integer"
            },
            "version": {
              "description": "Board's version",
              "title": "Version",
              "type": "integer"
            },
            "created_at": {
              "description": "Board's creation date",
              "title": "Created at",
              "type": "string"
            },
            "updated_at": {
              "description": "Board's update date",
              "title": "Updated at",
              "type": "string"
            },
            "settings_updated_at": {
              "description": "Board's settings update date",
              "title": "Settings updated at",
              "type": "string"
            },
            "account_id": {
              "description": "Board's account id",
              "title": "Account id",
              "type": "integer"
            },
            "folder_id": {
              "description": "Board's folder id",
              "title": "Folder id",
              "type": "integer"
            },
            "last_activity_on": {
              "description": "Board's last activity date",
              "title": "Last activity on",
              "type": "string"
            },
            "deleted_at": {
              "description": "Board's delete date",
              "title": "Deleted at",
              "type": "string"
            },
            "external_id_sequence": {
              "description": "External id board's sequence",
              "title": "External id sequence",
              "type": "integer"
            },
            "board_template_id": {
              "description": "Board's template id",
              "title": "Template id",
              "type": "string"
            },
            "cumulative_flow_updated_at": {
              "description": "Cumulative flow updated at",
              "title": "Cumulative flow updated at",
              "type": "string"
            },
            "owner_id": {
              "description": "Board's owner id",
              "title": "Owner id",
              "type": "integer"
            },
            "workflow_stages": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Workflow stage ID",
                    "title": "ID",
                    "type": "integer"
                  },
                  "board_id": {
                    "description": "Board ID",
                    "title": "Board ID",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "title": "Name",
                    "type": "string"
                  },
                  "full_name": {
                    "description": "Full name",
                    "title": "Full name",
                    "type": "string"
                  }
                }
              }
            },
            "swimlanes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Swimlane ID",
                    "title": "ID",
                    "type": "integer"
                  },
                  "board_id": {
                    "description": "Board ID",
                    "title": "Board ID",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "title": "Name",
                    "type": "string"
                  }
                }
              }
            },
            "card_types": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Card type ID",
                    "title": "ID",
                    "type": "integer"
                  },
                  "board_id": {
                    "description": "Board ID",
                    "title": "Board ID",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "title": "Name",
                    "type": "string"
                  }
                }
              }
            }

          }
        }
      }
    },
    "GetBoardResponseV3": {
      "type": "object",
      "properties": {
        "collaborators": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "User's ID",
                "title": "ID",
                "type": "integer"
              },
              "name": {
                "description": "Name",
                "title": "Name",
                "type": "string"
              },
              "initials": {
                "description": "Initials",
                "title": "Initials",
                "type": "string"
              },
              "active": {
                "description": "Active",
                "title": "Active",
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "GetTasksResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GetTaskResponse"
      }
    },
    "GetTaskResponse": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Task id",
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "description": "Task name",
          "title": "Name",
          "type": "string"
        },
        "board_id": {
          "description": "Board id",
          "title": "Board ID",
          "type": "integer"
        },
        "workflow_stage_id": {
          "description": "Workflow stage id",
          "title": "Workflow stage id",
          "type": "integer"
        },
        "swimlane_id": {
          "description": "Swimlane id",
          "title": "Swimlane id",
          "type": "integer"
        },
        "deleted_at": {
          "description": "Task delete date",
          "title": "Deleted at",
          "type": "string"
        },
        "recurring_schedule": {
          "description": "Tasks's recurring schedule",
          "title": "Recurring schedule",
          "type": "string"
        },
        "description": {
          "description": "Tasks's description",
          "title": "Description",
          "type": "string"
        },
        "position": {
          "description": "Task's position",
          "title": "Position",
          "type": "integer"
        },
        "priority": {
          "description": "Task's priority",
          "title": "Priority",
          "type": "integer"
        },
        "tags": {
          "description": "Tasks's tags",
          "title": "Tags",
          "type": "string"
        },
        "created_at": {
          "description": "Task's creation date",
          "title": "Created at",
          "type": "string"
        },
        "updated_at": {
          "description": "Task's update date",
          "title": "Updated at",
          "type": "string"
        },
        "board_version": {
          "description": "Board's version",
          "title": "Board version",
          "type": "integer"
        },
        "archived_at": {
          "description": "Archived at",
          "title": "Archived at",
          "type": "string"
        },
        "assigned_user_id": {
          "description": "Assigned user id",
          "title": "Assigned user id",
          "type": "integer"
        },
        "comments_count": {
          "description": "Comments count",
          "title": "Comments count",
          "type": "integer"
        },
        "size_estimate": {
          "description": "Task's size estimate",
          "title": "Size estimate",
          "type": "string"
        },
        "card_type_id": {
          "description": "Card type id",
          "title": "Card type id",
          "type": "integer"
        },
        "subtasks_count": {
          "description": "Subtasks count",
          "title": "Subtasks count",
          "type": "integer"
        },
        "subtasks_completed_count": {
          "description": "Subtasks completed count",
          "title": "Subtasks completed count",
          "type": "integer"
        },
        "attachments_count": {
          "description": "Attachments count",
          "title": "Attachments count",
          "type": "integer"
        },
        "custom_field_1": {
          "description": "Custom field 1",
          "title": "Custom field 1",
          "type": "string"
        },
        "custom_field_2": {
          "description": "Custom field 2",
          "title": "Custom field 2",
          "type": "string"
        },
        "custom_field_3": {
          "description": "Custom field 3",
          "title": "Custom field 3",
          "type": "string"
        },
        "custom_field_4": {
          "description": "Custom field 4",
          "title": "Custom field 4",
          "type": "string"
        },
        "custom_field_5": {
          "description": "Custom field 5",
          "title": "Custom field 5",
          "type": "string"
        },
        "custom_field_6": {
          "description": "Custom field 6",
          "title": "Custom field 6",
          "type": "string"
        },
        "custom_field_7": {
          "description": "Custom field 7",
          "title": "Custom field 7",
          "type": "string"
        },
        "custom_field_8": {
          "description": "Custom field 8",
          "title": "Custom field 8",
          "type": "string"
        },
        "custom_field_9": {
          "description": "Custom field 9",
          "title": "Custom field 9",
          "type": "string"
        },
        "custom_field_10": {
          "description": "Custom field 10",
          "title": "Custom field 10",
          "type": "string"
        },
        "custom_field_11": {
          "description": "Custom field 11",
          "title": "Custom field 11",
          "type": "string"
        },
        "custom_field_12": {
          "description": "Custom field 12",
          "title": "Custom field 12",
          "type": "string"
        },
        "custom_field_13": {
          "description": "Custom field 13",
          "title": "Custom field 13",
          "type": "string"
        },
        "custom_field_14": {
          "description": "Custom field 14",
          "title": "Custom field 14",
          "type": "string"
        },
        "custom_field_15": {
          "description": "Custom field 15",
          "title": "Custom field 15",
          "type": "string"
        },
        "external_link": {
          "description": "External link",
          "title": "External link",
          "type": "string"
        },
        "due_date": {
          "description": "Due date",
          "title": "Due date",
          "type": "string"
        },
        "postponed_until": {
          "description": "Postponed until",
          "title": "Postponed until",
          "type": "string"
        },
        "external_id": {
          "description": "External id",
          "title": "External id",
          "type": "string"
        },
        "subtask_search_tags": {
          "description": "Subtask search tags",
          "title": "Subtask search tags",
          "type": "string"
        },
        "block_reason": {
          "description": "Block reason",
          "title": "Block reason",
          "type": "string"
        },
        "created_by_id": {
          "description": "Created by id",
          "title": "Created by id",
          "type": "integer"
        },
        "time_estimate": {
          "description": "Time estimate",
          "title": "Time estimate",
          "type": "integer"
        },
        "timers_total": {
          "description": "Timers total",
          "title": "Timers total",
          "type": "string"
        },
        "timers_total_updated_at": {
          "description": "Timers total updated at",
          "title": "Timers total updated at",
          "type": "string"
        },
        "timers_active_count": {
          "description": "Timers active count",
          "title": "Timers active count",
          "type": "integer"
        },
        "timers_listed_count": {
          "description": "Timers listed count",
          "title": "Timers listed count",
          "type": "integer"
        },
        "timers_postponed_count": {
          "description": "Timers postponed count",
          "title": "Timers postponed count",
          "type": "integer"
        },
        "linked_tasks": {
          "description": "Linked tasks",
          "title": "Linked tasks",
          "type": "string"
        },
        "linked_tasks_status": {
          "description": "Linked tasks status",
          "title": "Linked tasks status",
          "type": "string"
        },
        "linked_from": {
          "description": "Linked from",
          "title": "Linked from",
          "type": "string"
        }
      }
    },
    "TaskCreateRequest": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of a task.",
          "type": "string",
          "title": "Task name"
        },
        "description": {
          "description": "Description of a task.",
          "type": "string",
          "title": "Task description"
        },
        "swimlane_id": {
          "description": "Swimlane id",
          "type": "string",
          "title": "Swimlane",
          "x-ms-dynamic-values": {
            "operationId": "GetBoard",
            "parameters": {
              "board_id": {
                "parameter": "board_id"
              }
            },
            "value-collection": "board/swimlanes",
            "value-path": "id",
            "value-title": "name"
          }
        },
        "workflow_stage_id": {
          "description": "Workflow stage id",
          "type": "string",
          "title": "Workflow stage",
          "x-ms-dynamic-values": {
            "operationId": "GetBoard",
            "parameters": {
              "board_id": {
                "parameter": "board_id"
              }
            },
            "value-collection": "board/workflow_stages",
            "value-path": "id",
            "value-title": "full_name"
          }
        },
        "card_type_id": {
          "description": "Card type id",
          "type": "string",
          "title": "Card type",
          "x-ms-dynamic-values": {
            "operationId": "GetBoard",
            "parameters": {
              "board_id": {
                "parameter": "board_id"
              }
            },
            "value-collection": "board/card_types",
            "value-path": "id",
            "value-title": "name"
          }
        },
        "assigned_user_id": {
          "description": "ID of assigned user.",
          "type": "string",
          "title": "Assigned user",
          "x-ms-dynamic-values": {
            "operationId": "GetBoardV3",
            "parameters": {
              "board_id": {
                "parameter": "board_id"
              }
            },
            "value-collection": "collaborators",
            "value-path": "id",
            "value-title": "name"
          }
        }
      }
    },
    "TaskUpdateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of a task.",
          "type": "string",
          "title": "Task name"
        },
        "description": {
          "description": "Description of a task.",
          "type": "string",
          "title": "Task description"
        },
        "card_type_id": {
          "description": "Card type id",
          "type": "string",
          "title": "Card type",
          "x-ms-dynamic-values": {
            "operationId": "GetBoard",
            "parameters": {
              "board_id": {
                "parameter": "board_id"
              }
            },
            "value-collection": "board/card_types",
            "value-path": "id",
            "value-title": "name"
          }
        },
        "assigned_user_id": {
          "description": "ID of assigned user.",
          "type": "string",
          "title": "Assigned user",
          "x-ms-dynamic-values": {
            "operationId": "GetBoardV3",
            "parameters": {
              "board_id": {
                "parameter": "board_id"
              }
            },
            "value-collection": "collaborators",
            "value-path": "id",
            "value-title": "name"
          }
        }
      }
    },
    "TaskMoveRequest": {
      "type": "object",
      "properties": {
        "direction": {
          "description": "Direction to move.",
          "type": "string",
          "title": "Direction",
          "enum": [
            "up",
            "down",
            "prev_stage",
            "next_stage",
            "prev_swimlane",
            "next_swimlane"
          ]
        },
        "swimlane_id": {
          "description": "Swimlane id",
          "type": "string",
          "title": "Swimlane",
          "x-ms-dynamic-values": {
            "operationId": "GetBoard",
            "parameters": {
              "board_id": {
                "parameter": "board_id"
              }
            },
            "value-collection": "board/swimlanes",
            "value-path": "id",
            "value-title": "name"
          }
        },
        "workflow_stage_id": {
          "description": "Workflow stage id",
          "type": "string",
          "title": "Workflow stage",
          "x-ms-dynamic-values": {
            "operationId": "GetBoard",
            "parameters": {
              "board_id": {
                "parameter": "board_id"
              }
            },
            "value-collection": "board/workflow_stages",
            "value-path": "id",
            "value-title": "full_name"
          }
        }
      }
    },
    "GetActivitiesResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "changelog": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Changelog's ID",
                "title": "ID",
                "type": "integer"
              },
              "board_id": {
                "description": "Board's ID",
                "title": "Board ID",
                "type": "integer"
              },
              "what": {
                "description": "Type of changelog",
                "title": "What",
                "type": "string"
              },
              "changed_object_id": {
                "description": "Changed object id",
                "title": "Changed object id",
                "type": "integer"
              },
              "changed_object_type": {
                "description": "Changed object type",
                "title": "Changed object type",
                "type": "string"
              },
              "changed_object_version": {
                "description": "Changed object version",
                "title": "Changed object version",
                "type": "integer"
              },
              "created_at": {
                "description": "Created date of changelog",
                "title": "Created at",
                "type": "string"
              },
              "user_id": {
                "description": "User ID",
                "title": "User ID",
                "type": "integer"
              },
              "workflow_stage_id": {
                "description": "Workflow stage ID",
                "title": "Workflow stage ID",
                "type": "integer"
              },
              "swimlane_id": {
                "description": "Swimlane id",
                "title": "Swimlane id",
                "type": "integer"
              },
              "description": {
                "description": "Changelog's description",
                "title": "Description",
                "type": "string"
              },
              "data": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "description": "User ID",
                    "title": "User ID",
                    "type": "integer"
                  },
                  "user_initials": {
                    "description": "User initials",
                    "title": "User initials",
                    "type": "string"
                  },
                  "workflow_stage_id": {
                    "description": "Workflow stage ID",
                    "title": "Workflow stage ID",
                    "type": "integer"
                  },
                  "workflow_stage_name": {
                    "description": "Workflow stage name",
                    "title": "Workflow stage name",
                    "type": "string"
                  },
                  "swimlane_id": {
                    "description": "Swimlane id",
                    "title": "Swimlane id",
                    "type": "integer"
                  },
                  "swimlane_name": {
                    "description": "Swimlane name",
                    "title": "Swimlane name",
                    "type": "string"
                  },
                  "task_id": {
                    "description": "Task id",
                    "title": "Task id",
                    "type": "integer"
                  },
                  "task_name": {
                    "description": "Task name",
                    "title": "Task name",
                    "type": "string"
                  },
                  "task_external_id": {
                    "description": "Task external id",
                    "title": "Task external id",
                    "type": "string"
                  },
                  "dependent_task_id": {
                    "description": "Dependent task ID",
                    "title": "Dependent task ID",
                    "type": "integer"
                  },
                  "dependent_task_name": {
                    "description": "Dependent task name",
                    "title": "Dependent task name",
                    "type": "string"
                  },
                  "from_workflow_stage_id": {
                    "description": "From workflow stage ID",
                    "title": "From workflow stage ID",
                    "type": "integer"
                  },
                  "from_workflow_stage_name": {
                    "description": "From workflow stage name",
                    "title": "From workflow stage name",
                    "type": "string"
                  },
                  "from_swimlane_id": {
                    "description": "From swimlane ID",
                    "title": "From swimlane ID",
                    "type": "integer"
                  },
                  "from_swimlane_name": {
                    "description": "From swimlane name",
                    "title": "From swimlane name",
                    "type": "string"
                  },
                  "to_workflow_stage_id": {
                    "description": "To workflow stage ID",
                    "title": "To workflow stage ID",
                    "type": "integer"
                  },
                  "to_workflow_stage_name": {
                    "description": "To workflow stage name",
                    "title": "To workflow stage name",
                    "type": "string"
                  },
                  "to_swimlane_id": {
                    "description": "To swimlane ID",
                    "title": "To swimlane ID",
                    "type": "integer"
                  },
                  "to_swimlane_name": {
                    "description": "To swimlane name",
                    "title": "To swimlane name",
                    "type": "string"
                  },
                  "comment_id": {
                    "description": "Comment ID",
                    "title": "Comment ID",
                    "type": "integer"
                  },
                  "comment_content": {
                    "description": "Comment content",
                    "title": "Comment content",
                    "type": "string"
                  },
                  "subtask_id": {
                    "description": "Subtask ID",
                    "title": "Subtask ID",
                    "type": "integer"
                  },
                  "subtask_name": {
                    "description": "Subtask name",
                    "title": "Subtask name",
                    "type": "string"
                  },
                  "changes": {
                    "description": "Changes",
                    "title": "Changes",
                    "type": "string"
                  },
                  "values": {
                    "description": "Values",
                    "title": "Values",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "GetCommentsResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GetCommentResponse"
      }
    },
    "GetCommentResponse": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "object",
          "properties": {
            "id": {
              "description": "Comment's ID",
              "title": "ID",
              "type": "integer"
            },
            "user_id": {
              "description": "User ID",
              "title": "User ID",
              "type": "integer"
            },
            "commentable_version": {
              "description": "Commentable version",
              "title": "Commentable version",
              "type": "integer"
            },
            "content": {
              "description": "Comment content",
              "title": "Content",
              "type": "string"
            },
            "created_at": {
              "description": "Comment's created at",
              "title": "Created at",
              "type": "string"
            },
            "updated_at": {
              "description": "Updated at",
              "title": "Updated at",
              "type": "string"
            },
            "deleted_at": {
              "description": "Deleted at",
              "title": "Deleted at",
              "type": "string"
            },
            "recipients": {
              "description": "Comment's recipients",
              "title": "Recipients",
              "type": "string"
            },
            "attachments": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Attachment's ID",
                    "title": "ID",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Attachment's name",
                    "title": "Name",
                    "type": "string"
                  },
                  "content_type": {
                    "description": "Content type",
                    "title": "Content type",
                    "type": "string"
                  },
                  "size": {
                    "description": "Size",
                    "title": "Size",
                    "type": "integer"
                  },
                  "data": {
                    "description": "Data",
                    "title": "Data",
                    "type": "string"
                  },
                  "created_at": {
                    "description": "Created at",
                    "title": "Created at",
                    "type": "string"
                  },
                  "url": {
                    "description": "Url",
                    "title": "Url",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "GetSubtasksResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GetSubtaskResponse"
      }
    },
    "GetSubtaskResponse": {
      "type": "object",
      "properties": {
        "subtask": {
          "type": "object",
          "properties": {
            "id": {
              "description": "Subtask's ID",
              "title": "ID",
              "type": "integer"
            },
            "task_version": {
              "description": "Task version",
              "title": "Task version",
              "type": "integer"
            },
            "task_id": {
              "description": "Task id",
              "title": "Task id",
              "type": "integer"
            },
            "created_by_id": {
              "description": "Created by id",
              "title": "Created by id",
              "type": "integer"
            },
            "name": {
              "description": "Subtask's name",
              "title": "Name",
              "type": "string"
            },
            "position": {
              "description": "Position",
              "title": "Position",
              "type": "integer"
            },
            "assigned_user_id": {
              "description": "Assigned user id",
              "title": "Assigned user id",
              "type": "integer"
            },
            "is_completed": {
              "description": "Is completed",
              "title": "Is completed",
              "type": "boolean"
            },
            "created_at": {
              "description": "Created at",
              "title": "Created at",
              "type": "string"
            },
            "updated_at": {
              "description": "Updated at",
              "title": "Updated at",
              "type": "string"
            },
            "deleted_at": {
              "description": "Deleted at",
              "title": "Deleted at",
              "type": "string"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "board_id": {
      "name": "board_id",
      "in": "path",
      "description": "Unique ID of the board.",
      "required": true,
      "type": "string",
      "x-ms-dynamic-values": {
        "operationId": "GetBoards",
        "value-path": "board/id",
        "value-title": "board/name"
      },
      "x-ms-summary": "Board ID",
      "x-ms-url-encoding": "single"
    },
    "task_id": {
      "name": "task_id",
      "in": "path",
      "description": "Unique ID of the task.",
      "required": true,
      "type": "string",
      "x-ms-dynamic-values": {
        "operationId": "GetTasks",
        "parameters": {
          "board_id": {
            "parameter": "board_id"
          }
        },
        "value-path": "id",
        "value-title": "name"
      },
      "x-ms-summary": "Task ID",
      "x-ms-url-encoding": "single"
    },
    "subtask_id": {
      "name": "subtask_id",
      "in": "path",
      "description": "Unique ID of the subtask.",
      "required": true,
      "type": "string",
      "x-ms-dynamic-values": {
        "operationId": "GetSubtasks",
        "parameters": {
          "board_id": {
            "parameter": "board_id"
          },
          "task_id": {
            "parameter": "task_id"
          }
        },
        "value-path": "subtask/id",
        "value-title": "subtask/name"
      },
      "x-ms-summary": "Subtask ID",
      "x-ms-url-encoding": "single"
    }
  },
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "query",
      "name": "api_token"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://kanbantool.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://kanbantool.com/policy/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Collaboration"
    }
  ]
}