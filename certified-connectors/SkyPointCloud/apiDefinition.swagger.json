{
  "swagger": "2.0",
  "info": {
    "title": "SkyPoint Cloud",
    "description": "SkyPoint is a customer data platform that champions privacy and compliance through connected privacy-first customer experiences. SkyPoint Connector provides a set of APIs to work with SkyPoint platform instances and entities.",
    "version": "1.0",
    "contact": {
      "name": "SkyPoint Cloud Support",
      "url": "https://skypointcloud.com/customer-support/",
      "email": "support@skypointcloud.com"
    }
  },
  "host": "gw.skypointcloud.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://skypointcloud.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://privacy.skypointcloud.com/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data;Website"
    }
  ],
  "paths": {
    "/instances/{instanceId}/manage/dataflows/entities": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "description": {
                    "type": "string",
                    "description": "description"
                  },
                  "sourceName": {
                    "type": "string",
                    "description": "sourceName"
                  },
                  "attributes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name"
                        },
                        "datatype": {
                          "type": "string",
                          "description": "datatype"
                        }
                      }
                    },
                    "description": "attributes"
                  },
                  "groupId": {
                    "type": "string",
                    "description": "groupId"
                  },
                  "objectId": {
                    "type": "string",
                    "description": "objectId"
                  },
                  "createdBy": {
                    "type": "string",
                    "description": "createdBy"
                  },
                  "annotations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name"
                        },
                        "value": {
                          "type": "string",
                          "description": "value"
                        }
                      }
                    },
                    "description": "annotations"
                  },
                  "partitions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name"
                        },
                        "refreshtime": {
                          "type": "string",
                          "description": "refreshtime"
                        }
                      }
                    },
                    "description": "partitions"
                  },
                  "schemaDescription": {
                    "type": "string",
                    "description": "schemaDescription"
                  },
                  "modifiedTime": {
                    "type": "string",
                    "description": "modifiedTime"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Entities",
        "description": "This operation gets entities from an instance",
        "operationId": "GetEntities",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "id",
              "value-title": "businessName"
            },
            "description": "Identifier of a tenant",
            "x-ms-summary": "Tenant Id"
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Identifier of an instance",
            "x-ms-summary": "Instance Id",
            "x-ms-dynamic-values": {
              "operationId": "GetInstances",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "tenantId": {
                  "parameter": "tenantId"
                }

              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal",
            "default": "id,name"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"

          }
        ]
      }
    },
    "/instances/{instanceId}/data/{entityName}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "summary": "Get items from an entity",
        "operationId": "GetItems",
        "description": "This operation gets items from an entity",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "id",

              "value-title": "businessName"

            },
            "description": "Identifier of a tenant",
            "x-ms-summary": "Tenant Id"
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetInstances",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "tenantId": {
                  "parameter": "tenantId"
                }
              }
            },
            "description": "Identifier of an instance",
            "x-ms-summary": "Instance Id"
          },
          {
            "name": "entityName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of an entity",
            "x-ms-summary": "Entity name",
            "x-ms-dynamic-values": {
              "operationId": "GetEntities",
              "value-path": "name",
              "value-title": "name",
              "parameters": {
                "tenantId": {
                  "parameter": "tenantId"
                },
                "instanceId": {
                  "parameter": "instanceId"
                },
                "$filter": "entityType eq 'Profile' or entityType eq 'Audience' or entityType eq 'Timeline'"

              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "description": "Specific fields to retrieve from entries (default = all)",
            "x-ms-summary": "Select Query"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "description": "An ODATA filter query to restrict the entries returned (e.g. stringColumn eq 'string' OR numberColumn lt 123).",
            "x-ms-summary": "Filter Query"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "default": "100",
            "description": "Total number of entries to retrieve (default = 100).",
            "x-ms-summary": "Top Count"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "default": "0",
            "description": "The number of entries to skip (default = 0).",
            "x-ms-summary": "Skip Count"

          }
        ]
      }
    },
    "/instances/{instanceId}/data/{entityName}/{itemId}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },

        "summary": "Get item of an entitiy",

        "operationId": "GetItem",
        "description": "This operation gets an item from an entity",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "id",

              "value-title": "businessName"

            },
            "description": "Identifier of a tenant",
            "x-ms-summary": "Tenant Id"
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Identifier of an instance",
            "x-ms-summary": "Instance Id",
            "x-ms-dynamic-values": {
              "operationId": "GetInstances",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "tenantId": {
                  "parameter": "tenantId"
                }
              }
            }
          },
          {
            "name": "entityName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of an entity",
            "x-ms-summary": "Entity name",
            "x-ms-dynamic-values": {
              "operationId": "GetEntities",
              "value-path": "name",
              "value-title": "name",
              "parameters": {
                "tenantId": {
                  "parameter": "tenantId"
                },
                "instanceId": {
                  "parameter": "instanceId"
                },

                "$filter": "entityType eq 'Profile' or entityType eq 'Audience' or entityType eq 'Timeline'"

              }
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Item id",
            "description": "Identifier for the item"

          }
        ]
      }
    },
    "/instances/{instanceId}/manage/hooks/{webhookId}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "summary": "Delete webhook",
        "operationId": "DeleteWebhook",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "webhookId",
            "in": "path",
            "required": true,
            "type": "string"

          }
        ],
        "description": "Deletes a webhook"
      }
    },
    "/instances/{instanceId}/manage/hooks/dataflow_refresh_complete": {
      "x-ms-notification-content": {
        "description": "Dataflow refresh response",
        "schema": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "activityId": {
                "type": "integer",
                "format": "int32",
                "description": "activityId"
              },
              "status": {
                "type": "string",
                "description": "status"
              },
              "runId": {
                "type": "string",
                "description": "runId"
              },
              "name": {
                "type": "string",
                "description": "name"
              },
              "startTime": {
                "type": "string",
                "description": "startTime"
              },
              "endTime": {
                "type": "string",
                "description": "endTime"
              },
              "detail": {
                "type": "string",
                "description": "detail"
              }
            }
          }
        }
      },
      "post": {

        "summary": "When a dataflow refresh is completed",

        "description": "Endpoint for notifications when a dataflow refresh is completed.",
        "operationId": "GetOnDataflowRefreshComplete",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "id",

              "value-title": "businessName"

            },
            "description": "Identifier of a tenant",
            "x-ms-summary": "Tenant Id"
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetInstances",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "tenantId": {
                  "parameter": "tenantId"
                }
              }
            },
            "description": "Identifier of an instance",
            "x-ms-summary": "Instance Id"
          },
          {

            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Events": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "event",
                    "default": "dataflow_refresh_complete"
                  },
                  "description": "Events"
                },
                "Url": {
                  "type": "string",
                  "description": "Url",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true,
                  "title": ""
                }
              },
              "required": [
                "Url",
                "Events"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": false,
        "x-ms-trigger": "single"
      }
    },
    "/instances/{instanceId}/manage/hooks/dataflow_refresh_fail": {
      "x-ms-notification-content": {
        "description": "Dataflow refresh response",
        "schema": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "activityId": {
                "type": "integer",
                "format": "int32",
                "description": "activityId"
              },
              "status": {
                "type": "string",
                "description": "status"
              },
              "runId": {
                "type": "string",
                "description": "runId"
              },
              "name": {
                "type": "string",
                "description": "name"
              },
              "startTime": {
                "type": "string",
                "description": "startTime"
              },
              "endTime": {
                "type": "string",
                "description": "endTime"
              },
              "detail": {
                "type": "string",
                "description": "detail"
              }
            }
          }
        }
      },
      "post": {
        "summary": "When a dataflow refresh is failed",
        "description": "Endpoint for notifications when a dataflow refresh is failed.",
        "operationId": "GetOnDataflowRefreshFail",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "id",

              "value-title": "businessName"

            },
            "description": "Identifier of a tenant",
            "x-ms-summary": "Tenant Id"
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetInstances",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "tenantId": {
                  "parameter": "tenantId"
                }
              }
            },
            "x-ms-summary": "Instance Id",
            "description": "Identifier of an instance"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Events": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "event",
                    "default": "dataflow_refresh_fail"
                  },
                  "description": "Events"
                },
                "Url": {
                  "type": "string",
                  "description": "Url",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true,
                  "title": ""
                }
              },
              "required": [
                "Url",
                "Events"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": false,
        "x-ms-trigger": "single"
      }
    },
    "/tenants": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "businessname": {
                    "type": "string",
                    "description": "businessname"
                  }
                }
              }
            }
          }
        },
        "summary": "Get All Tenants",

        "description": "This operation retrieves all tenants",
        "operationId": "GetTenants",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "id,name,businessName",
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/instances/tenant/{tenantId}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "displayname": {
                    "type": "string",
                    "description": "displayname"
                  }
                }
              }
            }
          }
        },
        "summary": "Get All Instances of the Tenant",

        "x-ms-visibility": "internal",
        "description": "This operation gets available instances of the tenant",
        "operationId": "GetInstances",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "id",
              "value-title": "businessName"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "id,name,displayName",
            "x-ms-visibility": "internal"
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://sicdpstage.b2clogin.com/sicdpstage.onmicrosoft.com/b2c_1a_accountlink_signup_signin/oauth2/v2.0/authorize",
      "tokenUrl": "https://sicdpstage.b2clogin.com/sicdpstage.onmicrosoft.com/b2c_1a_accountlink_signup_signin/oauth2/v2.0/token",
      "scopes": {
        "https://sicdpstage.onmicrosoft.com/api/user_impersonation openid profile offline_access": "https://sicdpstage.onmicrosoft.com/api/user_impersonation openid profile offline_access"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "https://sicdpstage.onmicrosoft.com/api/user_impersonation openid profile offline_access"
      ]
    }
  ],
  "tags": []
}
