{
    "swagger": "2.0",
    "info": {
        "description": "The Blueink connector allows you to add Blueink's eSignature platform into automated workflows. The connector allows you to check bundle status, create new bundles, access signer information, and more.",
        "title": "BlueInk",
        "version": "2.2.3",
        "contact": {
            "name": "Blueink Support",
            "url": "https://help.blueink.com/en/",
            "email": "support@blueink.com"
        }
    },
    "host": "api.blueink.com",
    "basePath": "/api/v2/",
    "schemes": [
        "https"
    ],
    "x-ms-connector-metadata": [
        {
            "propertyName": "Website",
            "propertyValue": "https://blueink.com"
        },
        {
            "propertyName": "Privacy policy",
            "propertyValue": "https://blueink.com/privacy-policy/"
        },
        {
            "propertyName": "Categories",
            "propertyValue": "Business Management;Productivity"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [],
    "paths": {
        "/bundles/": {
            "get": {
                "description": "Returns a paginated list of Bundles in your Account, ordered by created date (from most recent to\nleast recent). Pagination can be controlled via Pagination paramaters (see Overview->Pagination).\nQuerystring filters paramaters can be combined, e.g.\n`/bundles/?search=Gibbons&status__in=se,co&tag=needs-attention`. When combining filters, only Bundles\nmatching ALL the filters are returned.\n",
                "operationId": "listBundles",
                "parameters": [
                    {
                        "x-ms-summary": "Search Query",
                        "description": "A search query. Only bundles matching the search will be returned. The following data in the\nthe Bundle is searched:\n\n- bundle slug\n- bundle label\n- bundle custom_key\n- signer name\n- signer email\n- signer phones\n\nE.g. `/bundles/?search=foobar@example.com`\n",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "x-ms-summary": "Bundle Status",
                        "description": "Limit bundles to those with the specified status.\n\n* dr: Draft - the Bundle has not yet been sent\n* se: Sent - the Bundle has been sent, but not yet started by any Signers\n* st: Started - at least one Signer has started reviewing the document(s)\n* co: Complete - all Signers have completed reviewing / signing\n* ca: Cancelled - the Bundle was cancelled\n* ex: Expired - the Bundle expired before it was Complete\n* fa: Failed - an error occurred and the Bundle could not be created or completed\n\nE.g. `/bundles/?status=co`\n",
                        "enum": [
                            "dr",
                            "se",
                            "st",
                            "co",
                            "ca",
                            "ex",
                            "fa"
                        ],
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "x-ms-summary": "List of Bundle Status",
                        "description": "Limit bundles to those with one of the specified statuses. Statuses should be comma separated.\nE.g. `/bundles/?status=co,se,st`\n",
                        "enum": [
                            "dr",
                            "se",
                            "st",
                            "co",
                            "ca",
                            "ex",
                            "fa"
                        ],
                        "in": "query",
                        "name": "status__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "x-ms-summary": "Bundle Tag",
                        "description": "Return Bundles that have the given tag. E.g. `/bundles/?tag=some-tag`",
                        "in": "query",
                        "name": "tag",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "x-ms-summary": "List of Bundle Tags",
                        "description": "Return Bundles that have at least one of the given tags. Tags should be comma separated.\nE.g. `/bundles/?tag=some-tag,another-tag`\n",
                        "in": "query",
                        "name": "tag__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "x-ms-summary": "Bundle Sort Order",
                        "description": "Control the sort order of Bundles. Prefix with \"-\" to reverse the sort order.\nBy default Bundles are sorted by \"-created\", ie the Bundle creation date from most\nto least recent.\n",
                        "enum": [
                            "created",
                            "sent",
                            "completed_at"
                        ],
                        "in": "query",
                        "name": "ordering",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A paged array of Bundles",
                        "headers": {
                            "x-next": {
                                "description": "A link to the next page of responses",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "items": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "cc_emails": {
                                                "description": "An array of email addresses that should be cc'd when the documents are complete",
                                                "items": {
                                                    "format": "email",
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "custom_key": {
                                                "description": "An optional, unique custom key you can use to identify and retrieve this Bundle (e.g via search)\n",
                                                "maxLength": 200,
                                                "type": "string"
                                            },
                                            "email_message": {
                                                "description": "A custom message that will be included in the email sent to each Signers via email. A message set on the individual PacketRequest takes precedence.\n",
                                                "type": "string"
                                            },
                                            "email_subject": {
                                                "description": "A custom email subject that will be included in the email sent to each Signer.\n",
                                                "type": "string"
                                            },
                                            "in_order": {
                                                "default": false,
                                                "description": "If true, Signers are required to sign in order, and a signing message (email or SMS) is sent to a Signer when previous signers have signed.\n",
                                                "type": "boolean"
                                            },
                                            "is_test": {
                                                "description": "Set to True if this a test bundle. Test Bundles do not count against any account usage limits and cannot be used to create legally binding eSignatures. This should always be set to true while you App or integration is under development.\n",
                                                "type": "boolean"
                                            },
                                            "label": {
                                                "description": "A label to help you identify this Bundle",
                                                "type": "string"
                                            },
                                            "requester_email": {
                                                "description": "The email address of the requester. Defaults to the value configured for the Account (or Team).\n",
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "requester_name": {
                                                "description": "The name of the requester. Defaults to the value configured for the Account (or Team).\n",
                                                "type": "string"
                                            },
                                            "sms_message": {
                                                "description": "A custom message that will be included in the SMS sent to each Signers. A message set on the individual PacketRequest takes precedence.\n",
                                                "type": "string"
                                            },
                                            "team": {
                                                "description": "A team ID, if teams are activated for your Account and you want to assign this Bundle to a particular team.\n",
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "created": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "data": {
                                                "items": {
                                                    "properties": {
                                                        "document_id": {
                                                            "format": "uuid",
                                                            "type": "string"
                                                        },
                                                        "key": {
                                                            "maxLength": 12,
                                                            "minLength": 2,
                                                            "pattern": "^[-\\w]+$",
                                                            "type": "string"
                                                        },
                                                        "kind": {
                                                            "type": "string"
                                                        },
                                                        "label": {
                                                            "type": "string"
                                                        },
                                                        "packet_id": {
                                                            "description": "The Packet (aka signer) that entered this value. Can be blank if the value was a default or an initial value provided at Bundle creation.\n",
                                                            "format": "uuid",
                                                            "type": "string"
                                                        },
                                                        "value": {}
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "docs_ready": {
                                                "description": "True when final documents have been generated on a complete Bundle",
                                                "type": "boolean"
                                            },
                                            "documents": {
                                                "items": {
                                                    "properties": {
                                                        "key": {
                                                            "description": "The name of the document. Defaults to the filename or the document when it was uploaded, but can be set to a human-friendly name.\n",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The generated filename for the this document. If the document was DocumentTemplate, this is the name of the DocumentTemplate. If it was generated from a file_url, this is the name extracted from the file_url (if possible). If it was generated from an uploaded file, this is an automatically generated name\n",
                                                            "type": "string"
                                                        },
                                                        "template_id": {
                                                            "description": "The ID of the DocumentTemplate if this BundleDocument was created from a DocumentTemplate, null otherwise\n",
                                                            "format": "uuid",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "errors": {
                                                "description": "An array of Errors, if any occured during document processing. Null otherwise.",
                                                "items": {
                                                    "properties": {
                                                        "code": {
                                                            "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                                            "enum": [
                                                                "authentication_failed",
                                                                "conflict",
                                                                "error",
                                                                "invalid",
                                                                "method_not_allowed",
                                                                "not_acceptable",
                                                                "not_authenticated",
                                                                "not_found",
                                                                "permission_denied",
                                                                "parse_error",
                                                                "service_unavailable",
                                                                "throttled",
                                                                "unsupported_media_type"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "errors": {
                                                            "description": "An optional array of field-specific errors providing additional details",
                                                            "items": {
                                                                "properties": {
                                                                    "field": {
                                                                        "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                                        "type": "string"
                                                                    },
                                                                    "messsage": {
                                                                        "description": "A human readable string describing the error for this field",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "required": [
                                                                "field",
                                                                "message"
                                                            ],
                                                            "type": "array"
                                                        },
                                                        "message": {
                                                            "description": "A human readable string describing the error",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "code",
                                                        "message"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "packets": {
                                                "items": {
                                                    "allOf": [
                                                        {
                                                            "properties": {
                                                                "auth_id": {
                                                                    "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                                                    "type": "boolean"
                                                                },
                                                                "auth_selfie": {
                                                                    "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                                                    "type": "boolean"
                                                                },
                                                                "auth_sms": {
                                                                    "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                                                    "type": "boolean"
                                                                },
                                                                "email": {
                                                                    "description": "The email address of the signer",
                                                                    "format": "email",
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "The name of the signer",
                                                                    "type": "string"
                                                                },
                                                                "phone": {
                                                                    "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                                                    "format": "phone",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        {
                                                            "properties": {
                                                                "completed_at": {
                                                                    "type": "string"
                                                                },
                                                                "deliver_via": {
                                                                    "enum": [
                                                                        "email",
                                                                        "phone",
                                                                        "embed"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "last_accessed_at": {
                                                                    "type": "string"
                                                                },
                                                                "order": {
                                                                    "type": "integer"
                                                                },
                                                                "person_id": {
                                                                    "format": "uuid",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "enum": [
                                                                        "ne",
                                                                        "re",
                                                                        "se",
                                                                        "st",
                                                                        "co",
                                                                        "ca",
                                                                        "ex",
                                                                        "fa"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    ]
                                                },
                                                "type": "array"
                                            },
                                            "status": {
                                                "enum": [
                                                    "dr",
                                                    "se",
                                                    "st",
                                                    "co",
                                                    "ca",
                                                    "ex",
                                                    "fa"
                                                ],
                                                "type": "string"
                                            },
                                            "tags": {
                                                "description": "An array of tags",
                                                "items": {
                                                    "description": "The tag, as a string. A tag cannot contain a space or comma.",
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List Bundles",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Bundles"
                ]
            },
            "post": {
                "description": "Create and send a bundle out for signature\n",
                "consumes": [
                    "application/json",
                    "multipart/form-data"
                ],
                "operationId": "createBundle",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The JSON body that defines the Bundle to be created",
                        "schema": {
                            "allOf": [
                                {
                                    "properties": {
                                        "cc_emails": {
                                            "description": "An array of email addresses that should be cc'd when the documents are complete",
                                            "items": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "custom_key": {
                                            "description": "An optional, unique custom key you can use to identify and retrieve this Bundle (e.g via search)\n",
                                            "maxLength": 200,
                                            "type": "string"
                                        },
                                        "email_message": {
                                            "description": "A custom message that will be included in the email sent to each Signers via email. A message set on the individual PacketRequest takes precedence.\n",
                                            "type": "string"
                                        },
                                        "email_subject": {
                                            "description": "A custom email subject that will be included in the email sent to each Signer.\n",
                                            "type": "string"
                                        },
                                        "in_order": {
                                            "default": false,
                                            "description": "If true, Signers are required to sign in order, and a signing message (email or SMS) is sent to a Signer when previous signers have signed.\n",
                                            "type": "boolean"
                                        },
                                        "is_test": {
                                            "description": "Set to True if this a test bundle. Test Bundles do not count against any account usage limits and cannot be used to create legally binding eSignatures. This should always be set to true while you App or integration is under development.\n",
                                            "type": "boolean"
                                        },
                                        "label": {
                                            "description": "A label to help you identify this Bundle",
                                            "type": "string"
                                        },
                                        "requester_email": {
                                            "description": "The email address of the requester. Defaults to the value configured for the Account (or Team).\n",
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "requester_name": {
                                            "description": "The name of the requester. Defaults to the value configured for the Account (or Team).\n",
                                            "type": "string"
                                        },
                                        "sms_message": {
                                            "description": "A custom message that will be included in the SMS sent to each Signers. A message set on the individual PacketRequest takes precedence.\n",
                                            "type": "string"
                                        },
                                        "team": {
                                            "description": "A team ID, if teams are activated for your Account and you want to assign this Bundle to a particular team.\n",
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "documents": {
                                            "items": {},
                                            "type": "array"
                                        },
                                        "packets": {
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "properties": {
                                                            "auth_id": {
                                                                "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "auth_selfie": {
                                                                "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "auth_sms": {
                                                                "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "email": {
                                                                "description": "The email address of the signer",
                                                                "format": "email",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The name of the signer",
                                                                "type": "string"
                                                            },
                                                            "phone": {
                                                                "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                                                "format": "phone",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "deliver_via": {
                                                                "default": "email",
                                                                "description": "How the signing link should be delivered to this Signer. If \"email\" (or \"phone\"), then an\nemail address (or phone number, respectively) must be provided in the PacketRequest, or\nsync_person must be true and a default email (or phone number, respectively)\nis set on the Person.\n\nIf \"embed\", then this Signer will be configured for embedded signing. No email or SMS\nmessage will be sent to the Signer. In a subsequent API request, you can use the\nunique Packet ID to for this signer to retrieve an URL you can use for embedded signing.\n",
                                                                "enum": [
                                                                    "email",
                                                                    "phone",
                                                                    "embed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "description": "A string that is unique to this Bundle which is used to identify the signer elsewhere in this request. This key is used when mapping a signer to a role in the 'assignments' field of a TemplateRequest and is used to assign a field to a signer in 'editors' field in a DocumentRequestField.\n",
                                                                "maxLength": 20,
                                                                "minLength": 2,
                                                                "pattern": "^[-\\w]+$",
                                                                "type": "string"
                                                            },
                                                            "order": {
                                                                "type": "integer"
                                                            },
                                                            "person_id": {
                                                                "description": "The ID of an existing Person, used to locate the Person object corresponding to this\nSigner. When person_id is provided, BlueInk does not use the default Person Matching\nAlgorithm, and instead matches a Person based on the ID. If no Person is found, an\nerror is raised.\n\nWhen a matching Person is found, that Person object will be updated with any new or\nchanged data provided in this PacketRequest. If PacketRequest.name does not equal\nPerson.name, Person.name will be updated. If the email or phone included in the\nPacketRequest are unknown, they will be added to the Person object.\n",
                                                                "format": "uuid",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "packets",
                                        "documents"
                                    ],
                                    "type": "object"
                                }
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Returned when the Bundle is successfully created. Note that some Bundle processing (like\nparsing tags in documents, or processing large documents) can be time consuming. Therefore\nthis request return a '201' success message after preliminary data validation has been performed.\nAt this point, not all documents are guaranteed to have been processed, so it is possible\nthat Bundle creation could fail with a document processing error. If that is the case,\nthe error status will be reflected in the Bundle response returned by a subsequent call\nto retrieve a Bundle.\n\nAny errors are also reported via webhooks, so your App or integration\ndoes not need to poll to confirm successful Bunde creation.\n",
                        "schema": {
                            "allOf": [
                                {
                                    "properties": {
                                        "cc_emails": {
                                            "description": "An array of email addresses that should be cc'd when the documents are complete",
                                            "items": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "custom_key": {
                                            "description": "An optional, unique custom key you can use to identify and retrieve this Bundle (e.g via search)\n",
                                            "maxLength": 200,
                                            "type": "string"
                                        },
                                        "email_message": {
                                            "description": "A custom message that will be included in the email sent to each Signers via email. A message set on the individual PacketRequest takes precedence.\n",
                                            "type": "string"
                                        },
                                        "email_subject": {
                                            "description": "A custom email subject that will be included in the email sent to each Signer.\n",
                                            "type": "string"
                                        },
                                        "in_order": {
                                            "default": false,
                                            "description": "If true, Signers are required to sign in order, and a signing message (email or SMS) is sent to a Signer when previous signers have signed.\n",
                                            "type": "boolean"
                                        },
                                        "is_test": {
                                            "description": "Set to True if this a test bundle. Test Bundles do not count against any account usage limits and cannot be used to create legally binding eSignatures. This should always be set to true while you App or integration is under development.\n",
                                            "type": "boolean"
                                        },
                                        "label": {
                                            "description": "A label to help you identify this Bundle",
                                            "type": "string"
                                        },
                                        "requester_email": {
                                            "description": "The email address of the requester. Defaults to the value configured for the Account (or Team).\n",
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "requester_name": {
                                            "description": "The name of the requester. Defaults to the value configured for the Account (or Team).\n",
                                            "type": "string"
                                        },
                                        "sms_message": {
                                            "description": "A custom message that will be included in the SMS sent to each Signers. A message set on the individual PacketRequest takes precedence.\n",
                                            "type": "string"
                                        },
                                        "team": {
                                            "description": "A team ID, if teams are activated for your Account and you want to assign this Bundle to a particular team.\n",
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "data": {
                                            "items": {
                                                "properties": {
                                                    "document_id": {
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "key": {
                                                        "maxLength": 12,
                                                        "minLength": 2,
                                                        "pattern": "^[-\\w]+$",
                                                        "type": "string"
                                                    },
                                                    "kind": {
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    },
                                                    "packet_id": {
                                                        "description": "The Packet (aka signer) that entered this value. Can be blank if the value was a default or an initial value provided at Bundle creation.\n",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "value": {}
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "docs_ready": {
                                            "description": "True when final documents have been generated on a complete Bundle",
                                            "type": "boolean"
                                        },
                                        "documents": {
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "description": "The name of the document. Defaults to the filename or the document when it was uploaded, but can be set to a human-friendly name.\n",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The generated filename for the this document. If the document was DocumentTemplate, this is the name of the DocumentTemplate. If it was generated from a file_url, this is the name extracted from the file_url (if possible). If it was generated from an uploaded file, this is an automatically generated name\n",
                                                        "type": "string"
                                                    },
                                                    "template_id": {
                                                        "description": "The ID of the DocumentTemplate if this BundleDocument was created from a DocumentTemplate, null otherwise\n",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "errors": {
                                            "description": "An array of Errors, if any occured during document processing. Null otherwise.",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                                        "enum": [
                                                            "authentication_failed",
                                                            "conflict",
                                                            "error",
                                                            "invalid",
                                                            "method_not_allowed",
                                                            "not_acceptable",
                                                            "not_authenticated",
                                                            "not_found",
                                                            "permission_denied",
                                                            "parse_error",
                                                            "service_unavailable",
                                                            "throttled",
                                                            "unsupported_media_type"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "errors": {
                                                        "description": "An optional array of field-specific errors providing additional details",
                                                        "items": {
                                                            "properties": {
                                                                "field": {
                                                                    "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                                    "type": "string"
                                                                },
                                                                "messsage": {
                                                                    "description": "A human readable string describing the error for this field",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "required": [
                                                            "field",
                                                            "message"
                                                        ],
                                                        "type": "array"
                                                    },
                                                    "message": {
                                                        "description": "A human readable string describing the error",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "packets": {
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "properties": {
                                                            "auth_id": {
                                                                "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "auth_selfie": {
                                                                "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "auth_sms": {
                                                                "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "email": {
                                                                "description": "The email address of the signer",
                                                                "format": "email",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The name of the signer",
                                                                "type": "string"
                                                            },
                                                            "phone": {
                                                                "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                                                "format": "phone",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "completed_at": {
                                                                "type": "string"
                                                            },
                                                            "deliver_via": {
                                                                "enum": [
                                                                    "email",
                                                                    "phone",
                                                                    "embed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "last_accessed_at": {
                                                                "type": "string"
                                                            },
                                                            "order": {
                                                                "type": "integer"
                                                            },
                                                            "person_id": {
                                                                "format": "uuid",
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "enum": [
                                                                    "ne",
                                                                    "re",
                                                                    "se",
                                                                    "st",
                                                                    "co",
                                                                    "ca",
                                                                    "ex",
                                                                    "fa"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        "status": {
                                            "enum": [
                                                "dr",
                                                "se",
                                                "st",
                                                "co",
                                                "ca",
                                                "ex",
                                                "fa"
                                            ],
                                            "type": "string"
                                        },
                                        "tags": {
                                            "description": "An array of tags",
                                            "items": {
                                                "description": "The tag, as a string. A tag cannot contain a space or comma.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Create a Bundle",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Bundles"
                ]
            }
        },
        "/bundles/{bundleSlug}/": {
            "get": {
                "description": "Retrieve a Bundle by slug\n",
                "operationId": "retrieveBundle",
                "parameters": [
                    {
                        "description": "The slug that uniquely identifies the Bundle",
                        "in": "path",
                        "name": "bundleSlug",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Bundle Slug"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A Bundle object",
                        "schema": {
                            "allOf": [
                                {
                                    "properties": {
                                        "cc_emails": {
                                            "description": "An array of email addresses that should be cc'd when the documents are complete",
                                            "items": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "custom_key": {
                                            "description": "An optional, unique custom key you can use to identify and retrieve this Bundle (e.g via search)\n",
                                            "maxLength": 200,
                                            "type": "string"
                                        },
                                        "email_message": {
                                            "description": "A custom message that will be included in the email sent to each Signers via email. A message set on the individual PacketRequest takes precedence.\n",
                                            "type": "string"
                                        },
                                        "email_subject": {
                                            "description": "A custom email subject that will be included in the email sent to each Signer.\n",
                                            "type": "string"
                                        },
                                        "in_order": {
                                            "default": false,
                                            "description": "If true, Signers are required to sign in order, and a signing message (email or SMS) is sent to a Signer when previous signers have signed.\n",
                                            "type": "boolean"
                                        },
                                        "is_test": {
                                            "description": "Set to True if this a test bundle. Test Bundles do not count against any account usage limits and cannot be used to create legally binding eSignatures. This should always be set to true while you App or integration is under development.\n",
                                            "type": "boolean"
                                        },
                                        "label": {
                                            "description": "A label to help you identify this Bundle",
                                            "type": "string"
                                        },
                                        "requester_email": {
                                            "description": "The email address of the requester. Defaults to the value configured for the Account (or Team).\n",
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "requester_name": {
                                            "description": "The name of the requester. Defaults to the value configured for the Account (or Team).\n",
                                            "type": "string"
                                        },
                                        "sms_message": {
                                            "description": "A custom message that will be included in the SMS sent to each Signers. A message set on the individual PacketRequest takes precedence.\n",
                                            "type": "string"
                                        },
                                        "team": {
                                            "description": "A team ID, if teams are activated for your Account and you want to assign this Bundle to a particular team.\n",
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "data": {
                                            "items": {
                                                "properties": {
                                                    "document_id": {
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "key": {
                                                        "maxLength": 12,
                                                        "minLength": 2,
                                                        "pattern": "^[-\\w]+$",
                                                        "type": "string"
                                                    },
                                                    "kind": {
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    },
                                                    "packet_id": {
                                                        "description": "The Packet (aka signer) that entered this value. Can be blank if the value was a default or an initial value provided at Bundle creation.\n",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "value": {}
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "docs_ready": {
                                            "description": "True when final documents have been generated on a complete Bundle",
                                            "type": "boolean"
                                        },
                                        "documents": {
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "description": "The name of the document. Defaults to the filename or the document when it was uploaded, but can be set to a human-friendly name.\n",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The generated filename for the this document. If the document was DocumentTemplate, this is the name of the DocumentTemplate. If it was generated from a file_url, this is the name extracted from the file_url (if possible). If it was generated from an uploaded file, this is an automatically generated name\n",
                                                        "type": "string"
                                                    },
                                                    "template_id": {
                                                        "description": "The ID of the DocumentTemplate if this BundleDocument was created from a DocumentTemplate, null otherwise\n",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "errors": {
                                            "description": "An array of Errors, if any occured during document processing. Null otherwise.",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                                        "enum": [
                                                            "authentication_failed",
                                                            "conflict",
                                                            "error",
                                                            "invalid",
                                                            "method_not_allowed",
                                                            "not_acceptable",
                                                            "not_authenticated",
                                                            "not_found",
                                                            "permission_denied",
                                                            "parse_error",
                                                            "service_unavailable",
                                                            "throttled",
                                                            "unsupported_media_type"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "errors": {
                                                        "description": "An optional array of field-specific errors providing additional details",
                                                        "items": {
                                                            "properties": {
                                                                "field": {
                                                                    "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                                    "type": "string"
                                                                },
                                                                "messsage": {
                                                                    "description": "A human readable string describing the error for this field",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "required": [
                                                            "field",
                                                            "message"
                                                        ],
                                                        "type": "array"
                                                    },
                                                    "message": {
                                                        "description": "A human readable string describing the error",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "packets": {
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "properties": {
                                                            "auth_id": {
                                                                "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "auth_selfie": {
                                                                "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "auth_sms": {
                                                                "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "email": {
                                                                "description": "The email address of the signer",
                                                                "format": "email",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The name of the signer",
                                                                "type": "string"
                                                            },
                                                            "phone": {
                                                                "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                                                "format": "phone",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "completed_at": {
                                                                "type": "string"
                                                            },
                                                            "deliver_via": {
                                                                "enum": [
                                                                    "email",
                                                                    "phone",
                                                                    "embed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "last_accessed_at": {
                                                                "type": "string"
                                                            },
                                                            "order": {
                                                                "type": "integer"
                                                            },
                                                            "person_id": {
                                                                "format": "uuid",
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "enum": [
                                                                    "ne",
                                                                    "re",
                                                                    "se",
                                                                    "st",
                                                                    "co",
                                                                    "ca",
                                                                    "ex",
                                                                    "fa"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        "status": {
                                            "enum": [
                                                "dr",
                                                "se",
                                                "st",
                                                "co",
                                                "ca",
                                                "ex",
                                                "fa"
                                            ],
                                            "type": "string"
                                        },
                                        "tags": {
                                            "description": "An array of tags",
                                            "items": {
                                                "description": "The tag, as a string. A tag cannot contain a space or comma.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Retrieve a Bundle",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Bundles"
                ]
            }
        },
        "/bundles/{bundleSlug}/add_tags/": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Add additional tags to a Bundle. No existing tags on the Bundle are removed. The result\nof this call is that Bundle.tags is the union of the set of previous tags with the set of new tags.\nDuplicate tags are ignored.\n",
                "operationId": "addBundleTags",
                "parameters": [
                    {
                        "x-ms-summary": "Bundle Slug",
                        "description": "The slug that uniquely identifies the Bundle",
                        "in": "path",
                        "name": "bundleSlug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "tags": {
                                    "description": "An array of tags",
                                    "items": {
                                        "description": "The tag, as a string. A tag cannot contain a space or comma.",
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The modified Bundle",
                        "schema": {
                            "allOf": [
                                {
                                    "properties": {
                                        "cc_emails": {
                                            "description": "An array of email addresses that should be cc'd when the documents are complete",
                                            "items": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "custom_key": {
                                            "description": "An optional, unique custom key you can use to identify and retrieve this Bundle (e.g via search)\n",
                                            "maxLength": 200,
                                            "type": "string"
                                        },
                                        "email_message": {
                                            "description": "A custom message that will be included in the email sent to each Signers via email. A message set on the individual PacketRequest takes precedence.\n",
                                            "type": "string"
                                        },
                                        "email_subject": {
                                            "description": "A custom email subject that will be included in the email sent to each Signer.\n",
                                            "type": "string"
                                        },
                                        "in_order": {
                                            "default": false,
                                            "description": "If true, Signers are required to sign in order, and a signing message (email or SMS) is sent to a Signer when previous signers have signed.\n",
                                            "type": "boolean"
                                        },
                                        "is_test": {
                                            "description": "Set to True if this a test bundle. Test Bundles do not count against any account usage limits and cannot be used to create legally binding eSignatures. This should always be set to true while you App or integration is under development.\n",
                                            "type": "boolean"
                                        },
                                        "label": {
                                            "description": "A label to help you identify this Bundle",
                                            "type": "string"
                                        },
                                        "requester_email": {
                                            "description": "The email address of the requester. Defaults to the value configured for the Account (or Team).\n",
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "requester_name": {
                                            "description": "The name of the requester. Defaults to the value configured for the Account (or Team).\n",
                                            "type": "string"
                                        },
                                        "sms_message": {
                                            "description": "A custom message that will be included in the SMS sent to each Signers. A message set on the individual PacketRequest takes precedence.\n",
                                            "type": "string"
                                        },
                                        "team": {
                                            "description": "A team ID, if teams are activated for your Account and you want to assign this Bundle to a particular team.\n",
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "data": {
                                            "items": {
                                                "properties": {
                                                    "document_id": {
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "key": {
                                                        "maxLength": 12,
                                                        "minLength": 2,
                                                        "pattern": "^[-\\w]+$",
                                                        "type": "string"
                                                    },
                                                    "kind": {
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    },
                                                    "packet_id": {
                                                        "description": "The Packet (aka signer) that entered this value. Can be blank if the value was a default or an initial value provided at Bundle creation.\n",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "value": {}
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "docs_ready": {
                                            "description": "True when final documents have been generated on a complete Bundle",
                                            "type": "boolean"
                                        },
                                        "documents": {
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "description": "The name of the document. Defaults to the filename or the document when it was uploaded, but can be set to a human-friendly name.\n",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The generated filename for the this document. If the document was DocumentTemplate, this is the name of the DocumentTemplate. If it was generated from a file_url, this is the name extracted from the file_url (if possible). If it was generated from an uploaded file, this is an automatically generated name\n",
                                                        "type": "string"
                                                    },
                                                    "template_id": {
                                                        "description": "The ID of the DocumentTemplate if this BundleDocument was created from a DocumentTemplate, null otherwise\n",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "errors": {
                                            "description": "An array of Errors, if any occured during document processing. Null otherwise.",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                                        "enum": [
                                                            "authentication_failed",
                                                            "conflict",
                                                            "error",
                                                            "invalid",
                                                            "method_not_allowed",
                                                            "not_acceptable",
                                                            "not_authenticated",
                                                            "not_found",
                                                            "permission_denied",
                                                            "parse_error",
                                                            "service_unavailable",
                                                            "throttled",
                                                            "unsupported_media_type"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "errors": {
                                                        "description": "An optional array of field-specific errors providing additional details",
                                                        "items": {
                                                            "properties": {
                                                                "field": {
                                                                    "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                                    "type": "string"
                                                                },
                                                                "messsage": {
                                                                    "description": "A human readable string describing the error for this field",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "required": [
                                                            "field",
                                                            "message"
                                                        ],
                                                        "type": "array"
                                                    },
                                                    "message": {
                                                        "description": "A human readable string describing the error",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "packets": {
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "properties": {
                                                            "auth_id": {
                                                                "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "auth_selfie": {
                                                                "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "auth_sms": {
                                                                "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "email": {
                                                                "description": "The email address of the signer",
                                                                "format": "email",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The name of the signer",
                                                                "type": "string"
                                                            },
                                                            "phone": {
                                                                "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                                                "format": "phone",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "completed_at": {
                                                                "type": "string"
                                                            },
                                                            "deliver_via": {
                                                                "enum": [
                                                                    "email",
                                                                    "phone",
                                                                    "embed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "last_accessed_at": {
                                                                "type": "string"
                                                            },
                                                            "order": {
                                                                "type": "integer"
                                                            },
                                                            "person_id": {
                                                                "format": "uuid",
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "enum": [
                                                                    "ne",
                                                                    "re",
                                                                    "se",
                                                                    "st",
                                                                    "co",
                                                                    "ca",
                                                                    "ex",
                                                                    "fa"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        "status": {
                                            "enum": [
                                                "dr",
                                                "se",
                                                "st",
                                                "co",
                                                "ca",
                                                "ex",
                                                "fa"
                                            ],
                                            "type": "string"
                                        },
                                        "tags": {
                                            "description": "An array of tags",
                                            "items": {
                                                "description": "The tag, as a string. A tag cannot contain a space or comma.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Add Tags to a bundle",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Bundles"
                ]
            }
        },
        "/bundles/{bundleSlug}/cancel/": {
            "put": {
                "operationId": "cancelBundle",
                "parameters": [
                    {
                        "x-ms-summary": "Bundle Slug",
                        "description": "The slug that uniquely identifies the Bundle",
                        "in": "path",
                        "name": "bundleSlug",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The cancelled Bundle object",
                        "schema": {
                            "allOf": [
                                {
                                    "properties": {
                                        "cc_emails": {
                                            "description": "An array of email addresses that should be cc'd when the documents are complete",
                                            "items": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "custom_key": {
                                            "description": "An optional, unique custom key you can use to identify and retrieve this Bundle (e.g via search)\n",
                                            "maxLength": 200,
                                            "type": "string"
                                        },
                                        "email_message": {
                                            "description": "A custom message that will be included in the email sent to each Signers via email. A message set on the individual PacketRequest takes precedence.\n",
                                            "type": "string"
                                        },
                                        "email_subject": {
                                            "description": "A custom email subject that will be included in the email sent to each Signer.\n",
                                            "type": "string"
                                        },
                                        "in_order": {
                                            "default": false,
                                            "description": "If true, Signers are required to sign in order, and a signing message (email or SMS) is sent to a Signer when previous signers have signed.\n",
                                            "type": "boolean"
                                        },
                                        "is_test": {
                                            "description": "Set to True if this a test bundle. Test Bundles do not count against any account usage limits and cannot be used to create legally binding eSignatures. This should always be set to true while you App or integration is under development.\n",
                                            "type": "boolean"
                                        },
                                        "label": {
                                            "description": "A label to help you identify this Bundle",
                                            "type": "string"
                                        },
                                        "requester_email": {
                                            "description": "The email address of the requester. Defaults to the value configured for the Account (or Team).\n",
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "requester_name": {
                                            "description": "The name of the requester. Defaults to the value configured for the Account (or Team).\n",
                                            "type": "string"
                                        },
                                        "sms_message": {
                                            "description": "A custom message that will be included in the SMS sent to each Signers. A message set on the individual PacketRequest takes precedence.\n",
                                            "type": "string"
                                        },
                                        "team": {
                                            "description": "A team ID, if teams are activated for your Account and you want to assign this Bundle to a particular team.\n",
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "data": {
                                            "items": {
                                                "properties": {
                                                    "document_id": {
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "key": {
                                                        "maxLength": 12,
                                                        "minLength": 2,
                                                        "pattern": "^[-\\w]+$",
                                                        "type": "string"
                                                    },
                                                    "kind": {
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    },
                                                    "packet_id": {
                                                        "description": "The Packet (aka signer) that entered this value. Can be blank if the value was a default or an initial value provided at Bundle creation.\n",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "value": {}
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "docs_ready": {
                                            "description": "True when final documents have been generated on a complete Bundle",
                                            "type": "boolean"
                                        },
                                        "documents": {
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "description": "The name of the document. Defaults to the filename or the document when it was uploaded, but can be set to a human-friendly name.\n",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The generated filename for the this document. If the document was DocumentTemplate, this is the name of the DocumentTemplate. If it was generated from a file_url, this is the name extracted from the file_url (if possible). If it was generated from an uploaded file, this is an automatically generated name\n",
                                                        "type": "string"
                                                    },
                                                    "template_id": {
                                                        "description": "The ID of the DocumentTemplate if this BundleDocument was created from a DocumentTemplate, null otherwise\n",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "errors": {
                                            "description": "An array of Errors, if any occured during document processing. Null otherwise.",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                                        "enum": [
                                                            "authentication_failed",
                                                            "conflict",
                                                            "error",
                                                            "invalid",
                                                            "method_not_allowed",
                                                            "not_acceptable",
                                                            "not_authenticated",
                                                            "not_found",
                                                            "permission_denied",
                                                            "parse_error",
                                                            "service_unavailable",
                                                            "throttled",
                                                            "unsupported_media_type"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "errors": {
                                                        "description": "An optional array of field-specific errors providing additional details",
                                                        "items": {
                                                            "properties": {
                                                                "field": {
                                                                    "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                                    "type": "string"
                                                                },
                                                                "messsage": {
                                                                    "description": "A human readable string describing the error for this field",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "required": [
                                                            "field",
                                                            "message"
                                                        ],
                                                        "type": "array"
                                                    },
                                                    "message": {
                                                        "description": "A human readable string describing the error",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "packets": {
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "properties": {
                                                            "auth_id": {
                                                                "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "auth_selfie": {
                                                                "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "auth_sms": {
                                                                "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "email": {
                                                                "description": "The email address of the signer",
                                                                "format": "email",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The name of the signer",
                                                                "type": "string"
                                                            },
                                                            "phone": {
                                                                "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                                                "format": "phone",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "completed_at": {
                                                                "type": "string"
                                                            },
                                                            "deliver_via": {
                                                                "enum": [
                                                                    "email",
                                                                    "phone",
                                                                    "embed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "last_accessed_at": {
                                                                "type": "string"
                                                            },
                                                            "order": {
                                                                "type": "integer"
                                                            },
                                                            "person_id": {
                                                                "format": "uuid",
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "enum": [
                                                                    "ne",
                                                                    "re",
                                                                    "se",
                                                                    "st",
                                                                    "co",
                                                                    "ca",
                                                                    "ex",
                                                                    "fa"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        "status": {
                                            "enum": [
                                                "dr",
                                                "se",
                                                "st",
                                                "co",
                                                "ca",
                                                "ex",
                                                "fa"
                                            ],
                                            "type": "string"
                                        },
                                        "tags": {
                                            "description": "An array of tags",
                                            "items": {
                                                "description": "The tag, as a string. A tag cannot contain a space or comma.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "409": {
                        "description": "Cannot cancel the bundle, probably because it is completed",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Cancel a Bundle",
                "description": "Cancel the Bundle specified by the Bundle Slug",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Bundles"
                ]
            }
        },
        "/bundles/{bundleSlug}/data/": {
            "get": {
                "description": "Get data entered into fields for a completed Bundle",
                "operationId": "getBundleData",
                "parameters": [
                    {
                        "x-ms-summary": "Bundle Slug",
                        "description": "The slug that uniquely identifies the Bundle",
                        "in": "path",
                        "name": "bundleSlug",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data response",
                        "schema": {
                            "items": {
                                "properties": {
                                    "attachments": {
                                        "description": "An array of file attachments for an attachment field, or null",
                                        "items": {
                                            "properties": {
                                                "ext": {
                                                    "description": "The file extension",
                                                    "type": "string"
                                                },
                                                "is_image": {
                                                    "description": "true if this attachment file is an image",
                                                    "type": "boolean"
                                                },
                                                "name": {
                                                    "description": "File name of the attachment",
                                                    "type": "string"
                                                },
                                                "num": {
                                                    "description": "The order in which the file was added, if there we're multiple uploads for a single attachment field (for instance, a photo for each page of a document taken with a webcam)\n",
                                                    "type": "integer"
                                                },
                                                "size": {
                                                    "description": "Size of the file, in bytes",
                                                    "type": "integer"
                                                },
                                                "url": {
                                                    "description": "A URL that can be used temporarily to download the attachment file",
                                                    "format": "url",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "doc_key": {
                                        "description": "The key uniquely identifying this document in the Bundle (from the original BundleRequest)\n",
                                        "type": "string"
                                    },
                                    "field_key": {
                                        "description": "The key uniquely identifying the field in the Document (either as specified in the original DocumentRequestField in the DocumentRequest in BundleRequest, or as configured on the DocumentTemplate)\n",
                                        "type": "string"
                                    },
                                    "filled_by": {
                                        "description": "The Packet key of the signer that entered the value for this field. If the field value was an 'initial_value' not edited by a signer, the value is 'initial'. If the field value was the default value configured on a DocumentTemplate, the filler is 'default'.\n",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "The kind of field",
                                        "enum": [
                                            "att",
                                            "cbg",
                                            "chk",
                                            "dat",
                                            "ini",
                                            "inp",
                                            "sdt",
                                            "sel",
                                            "sig",
                                            "snm",
                                            "txt"
                                        ],
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The label of the field (possibly blank)",
                                        "type": "string"
                                    },
                                    "packet_id": {
                                        "description": "The Packet id of the signer that entered the value for this field, or null if the field value was not filled in by a signer (ie, it was an initial_value or defaul value).\n"
                                    },
                                    "value": {
                                        "description": "The value of the field."
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "409": {
                        "description": "Files not ready",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Retrieve Bundle Data",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Bundles"
                ]
            }
        },
        "/bundles/{bundleSlug}/events/": {
            "get": {
                "description": "Get a list of Events that are associated with the Bundle",
                "operationId": "listBundleEvents",
                "parameters": [
                    {
                        "x-ms-summary": "Bundle Slug",
                        "description": "The slug that uniquely identifies the Bundle",
                        "in": "path",
                        "name": "bundleSlug",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A list of events associated with this bundle",
                        "schema": {
                            "items": {
                                "properties": {
                                    "description": {
                                        "description": "A brief desription of the event",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "The kind of the event as a 2 character code",
                                        "type": "string"
                                    },
                                    "packet_id": {
                                        "description": "The UUID of a Packet. Only present if the event is associated with a particular packet.\n",
                                        "format": "uuid",
                                        "type": "string"
                                    },
                                    "timestamp": {
                                        "description": "The time at which the event occured",
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "List Bundle Events",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Bundles"
                ]
            }
        },
        "/bundles/{bundleSlug}/files/": {
            "get": {
                "description": "Get downloadable files for a completed Bundle",
                "operationId": "getBundleFiles",
                "parameters": [
                    {
                        "x-ms-summary": "Bundle Slug",
                        "description": "The slug that uniquely identifies the Bundle",
                        "in": "path",
                        "name": "bundleSlug",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "File response",
                        "schema": {
                            "items": {
                                "properties": {
                                    "expires": {
                                        "description": "The time at which the link expires, as an ISO 8601 formatted time",
                                        "type": "string"
                                    },
                                    "file_url": {
                                        "description": "the URL from where the file can be downloaded",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "409": {
                        "description": "Files not ready",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Retrieve Bundle Files",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Bundles"
                ]
            }
        },
        "/bundles/{bundleSlug}/remove_tags/": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Remove tags from a Bundle. If a tag in the request does not exist on the Bundle, it is ignored.\n",
                "operationId": "removeBundleTags",
                "parameters": [
                    {
                        "x-ms-summary": "Bundle Slug",
                        "description": "The slug that uniquely identifies the Bundle",
                        "in": "path",
                        "name": "bundleSlug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "tags": {
                                    "description": "An array of tags",
                                    "items": {
                                        "description": "The tag, as a string. A tag cannot contain a space or comma.",
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The modified Bundle",
                        "schema": {
                            "allOf": [
                                {
                                    "properties": {
                                        "cc_emails": {
                                            "description": "An array of email addresses that should be cc'd when the documents are complete",
                                            "items": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "custom_key": {
                                            "description": "An optional, unique custom key you can use to identify and retrieve this Bundle (e.g via search)\n",
                                            "maxLength": 200,
                                            "type": "string"
                                        },
                                        "email_message": {
                                            "description": "A custom message that will be included in the email sent to each Signers via email. A message set on the individual PacketRequest takes precedence.\n",
                                            "type": "string"
                                        },
                                        "email_subject": {
                                            "description": "A custom email subject that will be included in the email sent to each Signer.\n",
                                            "type": "string"
                                        },
                                        "in_order": {
                                            "default": false,
                                            "description": "If true, Signers are required to sign in order, and a signing message (email or SMS) is sent to a Signer when previous signers have signed.\n",
                                            "type": "boolean"
                                        },
                                        "is_test": {
                                            "description": "Set to True if this a test bundle. Test Bundles do not count against any account usage limits and cannot be used to create legally binding eSignatures. This should always be set to true while you App or integration is under development.\n",
                                            "type": "boolean"
                                        },
                                        "label": {
                                            "description": "A label to help you identify this Bundle",
                                            "type": "string"
                                        },
                                        "requester_email": {
                                            "description": "The email address of the requester. Defaults to the value configured for the Account (or Team).\n",
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "requester_name": {
                                            "description": "The name of the requester. Defaults to the value configured for the Account (or Team).\n",
                                            "type": "string"
                                        },
                                        "sms_message": {
                                            "description": "A custom message that will be included in the SMS sent to each Signers. A message set on the individual PacketRequest takes precedence.\n",
                                            "type": "string"
                                        },
                                        "team": {
                                            "description": "A team ID, if teams are activated for your Account and you want to assign this Bundle to a particular team.\n",
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "data": {
                                            "items": {
                                                "properties": {
                                                    "document_id": {
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "key": {
                                                        "maxLength": 12,
                                                        "minLength": 2,
                                                        "pattern": "^[-\\w]+$",
                                                        "type": "string"
                                                    },
                                                    "kind": {
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    },
                                                    "packet_id": {
                                                        "description": "The Packet (aka signer) that entered this value. Can be blank if the value was a default or an initial value provided at Bundle creation.\n",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "value": {}
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "docs_ready": {
                                            "description": "True when final documents have been generated on a complete Bundle",
                                            "type": "boolean"
                                        },
                                        "documents": {
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "description": "The name of the document. Defaults to the filename or the document when it was uploaded, but can be set to a human-friendly name.\n",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The generated filename for the this document. If the document was DocumentTemplate, this is the name of the DocumentTemplate. If it was generated from a file_url, this is the name extracted from the file_url (if possible). If it was generated from an uploaded file, this is an automatically generated name\n",
                                                        "type": "string"
                                                    },
                                                    "template_id": {
                                                        "description": "The ID of the DocumentTemplate if this BundleDocument was created from a DocumentTemplate, null otherwise\n",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "errors": {
                                            "description": "An array of Errors, if any occured during document processing. Null otherwise.",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                                        "enum": [
                                                            "authentication_failed",
                                                            "conflict",
                                                            "error",
                                                            "invalid",
                                                            "method_not_allowed",
                                                            "not_acceptable",
                                                            "not_authenticated",
                                                            "not_found",
                                                            "permission_denied",
                                                            "parse_error",
                                                            "service_unavailable",
                                                            "throttled",
                                                            "unsupported_media_type"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "errors": {
                                                        "description": "An optional array of field-specific errors providing additional details",
                                                        "items": {
                                                            "properties": {
                                                                "field": {
                                                                    "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                                    "type": "string"
                                                                },
                                                                "messsage": {
                                                                    "description": "A human readable string describing the error for this field",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "required": [
                                                            "field",
                                                            "message"
                                                        ],
                                                        "type": "array"
                                                    },
                                                    "message": {
                                                        "description": "A human readable string describing the error",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "code",
                                                    "message"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "packets": {
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "properties": {
                                                            "auth_id": {
                                                                "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "auth_selfie": {
                                                                "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "auth_sms": {
                                                                "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                                                "type": "boolean"
                                                            },
                                                            "email": {
                                                                "description": "The email address of the signer",
                                                                "format": "email",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The name of the signer",
                                                                "type": "string"
                                                            },
                                                            "phone": {
                                                                "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                                                "format": "phone",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "completed_at": {
                                                                "type": "string"
                                                            },
                                                            "deliver_via": {
                                                                "enum": [
                                                                    "email",
                                                                    "phone",
                                                                    "embed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "last_accessed_at": {
                                                                "type": "string"
                                                            },
                                                            "order": {
                                                                "type": "integer"
                                                            },
                                                            "person_id": {
                                                                "format": "uuid",
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "enum": [
                                                                    "ne",
                                                                    "re",
                                                                    "se",
                                                                    "st",
                                                                    "co",
                                                                    "ca",
                                                                    "ex",
                                                                    "fa"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        "status": {
                                            "enum": [
                                                "dr",
                                                "se",
                                                "st",
                                                "co",
                                                "ca",
                                                "ex",
                                                "fa"
                                            ],
                                            "type": "string"
                                        },
                                        "tags": {
                                            "description": "An array of tags",
                                            "items": {
                                                "description": "The tag, as a string. A tag cannot contain a space or comma.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Remove Tags from a bundle",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Bundles"
                ]
            }
        },
        "/packets/{packetId}/": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update a Packet (aka signer) with a new email, phone number, name or authentication options\n\nThe updated packet must still be deliverable. For instance, if you specify a `deliver_via`\nvalue of 'phone', but there was no phone number set in the original PacketRequest, then\nthis request must include a `phone` as well, or an error will be returned.\n\nYou can change a Packet that was originally configured for embedded signing (that is, deliver_via was\n'embed') to be delivered via email or SMS. However, no signing notifications or reminders will be\nautomatically sent. You must call /packet/{packetId}/remind/ to send a signing notification email (or SMS).\n\nIf this Signer is associated with a Person, the person will be updated as well - the Person name\nwill be changed (if provided) and any new email or phone number will be added.\n",
                "operationId": "updatePacket",
                "parameters": [
                    {
                        "x-ms-summary": "Packet Slug",
                        "description": "The slug that uniquely identifies the Packet",
                        "in": "path",
                        "name": "packetId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "allOf": [
                                {
                                    "properties": {
                                        "auth_id": {
                                            "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                            "type": "boolean"
                                        },
                                        "auth_selfie": {
                                            "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                            "type": "boolean"
                                        },
                                        "auth_sms": {
                                            "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                            "type": "boolean"
                                        },
                                        "email": {
                                            "description": "The email address of the signer",
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the signer",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                            "format": "phone",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "deliver_via": {
                                            "description": "Note that \"embed\" is not an option",
                                            "enum": [
                                                "email",
                                                "phone"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Ok, the Packet was updated",
                        "schema": {
                            "allOf": [
                                {
                                    "properties": {
                                        "auth_id": {
                                            "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                            "type": "boolean"
                                        },
                                        "auth_selfie": {
                                            "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                            "type": "boolean"
                                        },
                                        "auth_sms": {
                                            "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                            "type": "boolean"
                                        },
                                        "email": {
                                            "description": "The email address of the signer",
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the signer",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                            "format": "phone",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "completed_at": {
                                            "type": "string"
                                        },
                                        "deliver_via": {
                                            "enum": [
                                                "email",
                                                "phone",
                                                "embed"
                                            ],
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "last_accessed_at": {
                                            "type": "string"
                                        },
                                        "order": {
                                            "type": "integer"
                                        },
                                        "person_id": {
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "status": {
                                            "enum": [
                                                "ne",
                                                "re",
                                                "se",
                                                "st",
                                                "co",
                                                "ca",
                                                "ex",
                                                "fa"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Update a Packet",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Packet"
                ]
            }
        },
        "/packets/{packetId}/coe/": {
            "get": {
                "description": "Get a link and checksum of the Certificate of Evidence for this Packet",
                "operationId": "getPacketCOE",
                "parameters": [
                    {
                        "x-ms-summary": "Packet Slug",
                        "description": "The slug that uniquely identifies the Packet",
                        "in": "path",
                        "name": "packetId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "COE response",
                        "schema": {
                            "allOf": [
                                {
                                    "properties": {
                                        "expires": {
                                            "description": "The time at which the link expires, as an ISO 8601 formatted time",
                                            "type": "string"
                                        },
                                        "file_url": {
                                            "description": "the URL from where the file can be downloaded",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "sha256": {
                                            "description": "the sha256 hash of the file",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "409": {
                        "description": "COE not available",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Retrieve Packet Certificate of Evidence",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Packet"
                ]
            }
        },
        "/packets/{packetId}/embed_url/": {
            "post": {
                "description": "Create a URL which can be used for embedded signing",
                "operationId": "createPacketEmbedURL",
                "parameters": [
                    {
                        "x-ms-summary": "Packet Slug",
                        "description": "The slug that uniquely identifies the Packet",
                        "in": "path",
                        "name": "packetId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Created response",
                        "schema": {
                            "properties": {
                                "expires": {
                                    "description": "Timestamp indicating when url expires",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "url": {
                                    "description": "The URL which can be used in for embedded signing",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "409": {
                        "description": "Cannot get an embedded url for this packet",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Create an Embedded Signing URL",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Packet"
                ]
            }
        },
        "/packets/{packetId}/remind/": {
            "put": {
                "description": "Send a Reminder email or SMS to a Signer. A reminder can only be sent once every hour. The reminder will be sent via the delivery method (email or SMS) and to the email address (or phone number) previously designated for this Packet.\n",
                "operationId": "sendPacketReminder",
                "parameters": [
                    {
                        "x-ms-summary": "Packet Slug",
                        "description": "The slug that uniquely identifies the Packet",
                        "in": "path",
                        "name": "packetId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Ok, the reminder was sent",
                        "schema": {
                            "allOf": [
                                {
                                    "properties": {
                                        "auth_id": {
                                            "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                            "type": "boolean"
                                        },
                                        "auth_selfie": {
                                            "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                            "type": "boolean"
                                        },
                                        "auth_sms": {
                                            "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                            "type": "boolean"
                                        },
                                        "email": {
                                            "description": "The email address of the signer",
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the signer",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                            "format": "phone",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "completed_at": {
                                            "type": "string"
                                        },
                                        "deliver_via": {
                                            "enum": [
                                                "email",
                                                "phone",
                                                "embed"
                                            ],
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "last_accessed_at": {
                                            "type": "string"
                                        },
                                        "order": {
                                            "type": "integer"
                                        },
                                        "person_id": {
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "status": {
                                            "enum": [
                                                "ne",
                                                "re",
                                                "se",
                                                "st",
                                                "co",
                                                "ca",
                                                "ex",
                                                "fa"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "409": {
                        "description": "Cannot send a reminder to this packet, probably because the packet is complete (ie, the signer has already finished signing)\n",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Send a Reminder",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Packet"
                ]
            }
        },
        "/persons/": {
            "get": {
                "description": "Get a list of the Persons in your account. You can optionally filter the list by providing a search query. For example, to search for all Persons with the name \"John\", you would use the query `search=John`.\n",
                "operationId": "listPersons",
                "parameters": [
                    {
                        "x-ms-summary": "Search Query",
                        "description": "A search query.",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A response with a list of Persons",
                        "schema": {
                            "items": {
                                "properties": {
                                    "channels": {
                                        "items": {
                                            "properties": {
                                                "email": {
                                                    "format": "email",
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "format": "uuid",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "em for email. mp for phone.",
                                                    "enum": [
                                                        "em",
                                                        "mp"
                                                    ],
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "format": "phone",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "id": {
                                        "format": "uuid",
                                        "readOnly": true,
                                        "type": "string"
                                    },
                                    "is_user": {
                                        "description": "True if this Person is associated with a BlueInk User",
                                        "readOnly": true,
                                        "type": "boolean"
                                    },
                                    "metadata": {
                                        "description": "Metadata to associate with this person. Metadata can be used in SmartFill to automatically populate documents. See SmartFill documentation for details.\n",
                                        "type": "object"
                                    },
                                    "name": {
                                        "description": "The name of the person",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List Persons",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Person"
                ]
            },
            "post": {
                "description": "Create a new person. A person can be associated with a BlueInk User, or can be a standalone person. If you want to create a person that is associated with a BlueInk User, you must provide the `user_id` field. If you want to create a standalone person, you must provide the `name` field.\n",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPerson",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "channels": {
                                    "items": {
                                        "properties": {
                                            "email": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "em for email. mp for phone.",
                                                "enum": [
                                                    "em",
                                                    "mp"
                                                ],
                                                "type": "string"
                                            },
                                            "phone": {
                                                "format": "phone",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "is_user": {
                                    "description": "True if this Person is associated with a BlueInk User",
                                    "readOnly": true,
                                    "type": "boolean"
                                },
                                "metadata": {
                                    "description": "Metadata to associate with this person. Metadata can be used in SmartFill to automatically populate documents. See SmartFill documentation for details.\n",
                                    "type": "object"
                                },
                                "name": {
                                    "description": "The name of the person",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "The created Person",
                        "schema": {
                            "properties": {
                                "channels": {
                                    "items": {
                                        "properties": {
                                            "email": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "em for email. mp for phone.",
                                                "enum": [
                                                    "em",
                                                    "mp"
                                                ],
                                                "type": "string"
                                            },
                                            "phone": {
                                                "format": "phone",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "is_user": {
                                    "description": "True if this Person is associated with a BlueInk User",
                                    "readOnly": true,
                                    "type": "boolean"
                                },
                                "metadata": {
                                    "description": "Metadata to associate with this person. Metadata can be used in SmartFill to automatically populate documents. See SmartFill documentation for details.\n",
                                    "type": "object"
                                },
                                "name": {
                                    "description": "The name of the person",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Create a Person",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Person"
                ]
            }
        },
        "/persons/{personId}/": {
            "get": {
                "description": "Get a Person by ID",
                "operationId": "getPerson",
                "parameters": [
                    {
                        "x-ms-summary": "Person ID",
                        "description": "The ID that uniquely identifies the Person",
                        "format": "uuid",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A response with a Person",
                        "schema": {
                            "properties": {
                                "channels": {
                                    "items": {
                                        "properties": {
                                            "email": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "em for email. mp for phone.",
                                                "enum": [
                                                    "em",
                                                    "mp"
                                                ],
                                                "type": "string"
                                            },
                                            "phone": {
                                                "format": "phone",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "is_user": {
                                    "description": "True if this Person is associated with a BlueInk User",
                                    "readOnly": true,
                                    "type": "boolean"
                                },
                                "metadata": {
                                    "description": "Metadata to associate with this person. Metadata can be used in SmartFill to automatically populate documents. See SmartFill documentation for details.\n",
                                    "type": "object"
                                },
                                "name": {
                                    "description": "The name of the person",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Retrieve a Person",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Person"
                ]
            },
            "delete": {
                "description": "Delete a Person. This will also delete any associated BlueInk User.\n",
                "operationId": "deletePerson",
                "parameters": [
                    {
                        "x-ms-summary": "Person ID",
                        "description": "The ID that uniquely identifies the Person",
                        "format": "uuid",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "The Person was deleted. No content is returned"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "409": {
                        "description": "Cannot delete the Person, probably because it is associated with live Bundles",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Delete a Person",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Person"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update the Person with new data. NOTE that any contact channels that are omitted from this request will be DELETED. If you don't want to replace all data on the Person, you probably want to use PATCH instead.\n",
                "operationId": "updatePerson",
                "parameters": [
                    {
                        "x-ms-summary": "Person ID",
                        "description": "The ID that uniquely identifies the Person",
                        "format": "uuid",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "channels": {
                                    "items": {
                                        "properties": {
                                            "email": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "em for email. mp for phone.",
                                                "enum": [
                                                    "em",
                                                    "mp"
                                                ],
                                                "type": "string"
                                            },
                                            "phone": {
                                                "format": "phone",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "is_user": {
                                    "description": "True if this Person is associated with a BlueInk User",
                                    "readOnly": true,
                                    "type": "boolean"
                                },
                                "metadata": {
                                    "description": "Metadata to associate with this person. Metadata can be used in SmartFill to automatically populate documents. See SmartFill documentation for details.\n",
                                    "type": "object"
                                },
                                "name": {
                                    "description": "The name of the person",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The Person was updated",
                        "schema": {
                            "properties": {
                                "channels": {
                                    "items": {
                                        "properties": {
                                            "email": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "em for email. mp for phone.",
                                                "enum": [
                                                    "em",
                                                    "mp"
                                                ],
                                                "type": "string"
                                            },
                                            "phone": {
                                                "format": "phone",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "is_user": {
                                    "description": "True if this Person is associated with a BlueInk User",
                                    "readOnly": true,
                                    "type": "boolean"
                                },
                                "metadata": {
                                    "description": "Metadata to associate with this person. Metadata can be used in SmartFill to automatically populate documents. See SmartFill documentation for details.\n",
                                    "type": "object"
                                },
                                "name": {
                                    "description": "The name of the person",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Update a Person",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Person"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "Partially update the Person with new data.\n\nTo add a new email or phone to the Person, include a ContactChannel in the 'channels' array\nwithout an 'id'.\n\nTo update an existing ContactChannel associated with the Person, include an 'id'. That existing\nContactChannel will be updated with the new email or phone. This will update any live Bundles\nassociated with the Person that are sending to that email (or phone).\n\nIf a ContactChannel does not include an 'id', but the email (or phone) matches an existing\nContactChannel, then that ContactChannel will not be changed.\n",
                "operationId": "updatePersonPartial",
                "parameters": [
                    {
                        "x-ms-summary": "Person ID",
                        "description": "The ID that uniquely identifies the Person",
                        "format": "uuid",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "channels": {
                                    "items": {
                                        "properties": {
                                            "email": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "em for email. mp for phone.",
                                                "enum": [
                                                    "em",
                                                    "mp"
                                                ],
                                                "type": "string"
                                            },
                                            "phone": {
                                                "format": "phone",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "is_user": {
                                    "description": "True if this Person is associated with a BlueInk User",
                                    "readOnly": true,
                                    "type": "boolean"
                                },
                                "metadata": {
                                    "description": "Metadata to associate with this person. Metadata can be used in SmartFill to automatically populate documents. See SmartFill documentation for details.\n",
                                    "type": "object"
                                },
                                "name": {
                                    "description": "The name of the person",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The Person was updated",
                        "schema": {
                            "properties": {
                                "channels": {
                                    "items": {
                                        "properties": {
                                            "email": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "em for email. mp for phone.",
                                                "enum": [
                                                    "em",
                                                    "mp"
                                                ],
                                                "type": "string"
                                            },
                                            "phone": {
                                                "format": "phone",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "is_user": {
                                    "description": "True if this Person is associated with a BlueInk User",
                                    "readOnly": true,
                                    "type": "boolean"
                                },
                                "metadata": {
                                    "description": "Metadata to associate with this person. Metadata can be used in SmartFill to automatically populate documents. See SmartFill documentation for details.\n",
                                    "type": "object"
                                },
                                "name": {
                                    "description": "The name of the person",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Partially update a Person",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Person"
                ]
            }
        },
        "/templates/": {
            "get": {
                "description": "List all Document Templates",
                "operationId": "listTemplates",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A response with a list or Document Templates",
                        "schema": {
                            "properties": {
                                "fields": {
                                    "description": "An array of fields placed on the document. Note that DocumentTemplate fields are slightly different than DocumentRequest fields, having a `default_value` and `editor_roles` instead of `initial_value` and `editors`.\n",
                                    "items": {
                                        "allOf": [
                                            {
                                                "properties": {
                                                    "h": {
                                                        "description": "The height of the field",
                                                        "type": "number"
                                                    },
                                                    "kind": {
                                                        "description": "The kind of field",
                                                        "enum": [
                                                            "att",
                                                            "cbg",
                                                            "chk",
                                                            "dat",
                                                            "ini",
                                                            "inp",
                                                            "sdt",
                                                            "sel",
                                                            "sig",
                                                            "snm",
                                                            "txt"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "description": "A label for the field which will be shown to the Signer(s)",
                                                        "type": "string"
                                                    },
                                                    "page": {
                                                        "description": "The page number on which to place this field. For attachment fields, page number is ignored and attachments are gathered in a separate step of the review process.\n",
                                                        "type": "integer"
                                                    },
                                                    "required": {
                                                        "default": false,
                                                        "description": "If true, the final editor submitting the document cannot leave the field blank. For example, if `editors` is set to ['-assistant', '-manager'], the final editor must still enter a value if `required` is true\n",
                                                        "type": "boolean"
                                                    },
                                                    "v_attachment_types": {
                                                        "items": {
                                                            "enum": [
                                                                "jpg",
                                                                "jpeg",
                                                                "png",
                                                                "gif",
                                                                "svg",
                                                                "pdf",
                                                                "doc",
                                                                "docx",
                                                                "ppt",
                                                                "pptx",
                                                                "xls",
                                                                "xlsx",
                                                                "rtf",
                                                                "txt"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v_max": {
                                                        "description": "For string fields, the maximum number of characters allowed. For number fields the maximum allowed value. For attachment fields, the minimum required file size in KB.\n",
                                                        "type": "number"
                                                    },
                                                    "v_min": {
                                                        "description": "For string fields, the minimum number of characters allowed. For number fields the minimum allowed value. For attachment fields, the minimum required file size in KB.\n",
                                                        "type": "number"
                                                    },
                                                    "v_pattern": {
                                                        "description": "A known, common pattern to validate a value against",
                                                        "enum": [
                                                            "email",
                                                            "bank_routing",
                                                            "bank_account",
                                                            "letters",
                                                            "numbers",
                                                            "phone",
                                                            "ssn",
                                                            "zip_code"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "w": {
                                                        "description": "The width of the field",
                                                        "type": "number"
                                                    },
                                                    "x": {
                                                        "description": "The x coordinate of the lower left corner of the field",
                                                        "type": "number"
                                                    },
                                                    "y": {
                                                        "description": "The y coordinate of the lower left corner of the field",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "kind",
                                                    "x",
                                                    "y",
                                                    "w",
                                                    "h"
                                                ],
                                                "type": "object"
                                            },
                                            {
                                                "properties": {
                                                    "default_value": {
                                                        "description": "A default value for the field. If editor_roles is empty, then this field\nis a read-only field that cannot be edited by any Signers. Note, validation\n(v_regex, v_min, v_max) is not applied to this value.\n\nAttachment type fields do not support default_value.\n\nFor date fields, the date must be provided as a string in the format\nYYYY-MM-DD, like \"2019-09-20\".\n"
                                                    },
                                                    "editor_roles": {
                                                        "default": [],
                                                        "description": "An array of role keys, as defined in 'roles', indicating which Roles can\nedit this field. By default the field will be required for any Role listed,\nmeaning that when that Signer assigned to that Role is reviewing / signing the document,\nthey cannot leave the field blank.\n\nNote oftentimes you will not want a Checkbox field to be required - because a\nrequired checkbox must be checked in order for a Signer to advance past the field.\n\nIf the field should be editable, but optional for a given Role, prefix the key with a '-'.\n\nFor example: ['role-1', '-role-2'] indicates that the field is required for role-1\nbut optional for role-2.\n",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ]
                                    },
                                    "type": "array"
                                },
                                "file_url": {
                                    "description": "The URL of the original file that serves as the basis for this Template",
                                    "type": "string"
                                },
                                "is_shared": {
                                    "description": "True if the Document Template is shared. False otherwise",
                                    "type": "boolean"
                                },
                                "name": {
                                    "description": "The name of the document. Defaults to the filename or the document when it was uploaded, but can be set to a human-friendly name.\n",
                                    "type": "string"
                                },
                                "roles": {
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "description": "A string that is unique for this document which identifies this role",
                                                "maxLength": 12,
                                                "minLength": 2,
                                                "pattern": "^[-\\w]+$",
                                                "type": "string"
                                            },
                                            "label": {
                                                "description": "A human-friendly label for this role",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "summary": "List Document Templates",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Templates"
                ]
            }
        },
        "/templates/{templateId}/": {
            "get": {
                "description": "Retrieve a Document Template",
                "operationId": "retrieveTemplate",
                "parameters": [
                    {
                        "x-ms-summary": "Template ID",
                        "description": "The ID that uniquely identifies the Template",
                        "format": "uuid",
                        "in": "path",
                        "name": "templateId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A Document Templates",
                        "schema": {
                            "properties": {
                                "fields": {
                                    "description": "An array of fields placed on the document. Note that DocumentTemplate fields are slightly different than DocumentRequest fields, having a `default_value` and `editor_roles` instead of `initial_value` and `editors`.\n",
                                    "items": {
                                        "allOf": [
                                            {
                                                "properties": {
                                                    "h": {
                                                        "description": "The height of the field",
                                                        "type": "number"
                                                    },
                                                    "kind": {
                                                        "description": "The kind of field",
                                                        "enum": [
                                                            "att",
                                                            "cbg",
                                                            "chk",
                                                            "dat",
                                                            "ini",
                                                            "inp",
                                                            "sdt",
                                                            "sel",
                                                            "sig",
                                                            "snm",
                                                            "txt"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "description": "A label for the field which will be shown to the Signer(s)",
                                                        "type": "string"
                                                    },
                                                    "page": {
                                                        "description": "The page number on which to place this field. For attachment fields, page number is ignored and attachments are gathered in a separate step of the review process.\n",
                                                        "type": "integer"
                                                    },
                                                    "required": {
                                                        "default": false,
                                                        "description": "If true, the final editor submitting the document cannot leave the field blank. For example, if `editors` is set to ['-assistant', '-manager'], the final editor must still enter a value if `required` is true\n",
                                                        "type": "boolean"
                                                    },
                                                    "v_attachment_types": {
                                                        "items": {
                                                            "enum": [
                                                                "jpg",
                                                                "jpeg",
                                                                "png",
                                                                "gif",
                                                                "svg",
                                                                "pdf",
                                                                "doc",
                                                                "docx",
                                                                "ppt",
                                                                "pptx",
                                                                "xls",
                                                                "xlsx",
                                                                "rtf",
                                                                "txt"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v_max": {
                                                        "description": "For string fields, the maximum number of characters allowed. For number fields the maximum allowed value. For attachment fields, the minimum required file size in KB.\n",
                                                        "type": "number"
                                                    },
                                                    "v_min": {
                                                        "description": "For string fields, the minimum number of characters allowed. For number fields the minimum allowed value. For attachment fields, the minimum required file size in KB.\n",
                                                        "type": "number"
                                                    },
                                                    "v_pattern": {
                                                        "description": "A known, common pattern to validate a value against",
                                                        "enum": [
                                                            "email",
                                                            "bank_routing",
                                                            "bank_account",
                                                            "letters",
                                                            "numbers",
                                                            "phone",
                                                            "ssn",
                                                            "zip_code"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "w": {
                                                        "description": "The width of the field",
                                                        "type": "number"
                                                    },
                                                    "x": {
                                                        "description": "The x coordinate of the lower left corner of the field",
                                                        "type": "number"
                                                    },
                                                    "y": {
                                                        "description": "The y coordinate of the lower left corner of the field",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "kind",
                                                    "x",
                                                    "y",
                                                    "w",
                                                    "h"
                                                ],
                                                "type": "object"
                                            },
                                            {
                                                "properties": {
                                                    "default_value": {
                                                        "description": "A default value for the field. If editor_roles is empty, then this field\nis a read-only field that cannot be edited by any Signers. Note, validation\n(v_regex, v_min, v_max) is not applied to this value.\n\nAttachment type fields do not support default_value.\n\nFor date fields, the date must be provided as a string in the format\nYYYY-MM-DD, like \"2019-09-20\".\n"
                                                    },
                                                    "editor_roles": {
                                                        "default": [],
                                                        "description": "An array of role keys, as defined in 'roles', indicating which Roles can\nedit this field. By default the field will be required for any Role listed,\nmeaning that when that Signer assigned to that Role is reviewing / signing the document,\nthey cannot leave the field blank.\n\nNote oftentimes you will not want a Checkbox field to be required - because a\nrequired checkbox must be checked in order for a Signer to advance past the field.\n\nIf the field should be editable, but optional for a given Role, prefix the key with a '-'.\n\nFor example: ['role-1', '-role-2'] indicates that the field is required for role-1\nbut optional for role-2.\n",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ]
                                    },
                                    "type": "array"
                                },
                                "file_url": {
                                    "description": "The URL of the original file that serves as the basis for this Template",
                                    "type": "string"
                                },
                                "is_shared": {
                                    "description": "True if the Document Template is shared. False otherwise",
                                    "type": "boolean"
                                },
                                "name": {
                                    "description": "The name of the document. Defaults to the filename or the document when it was uploaded, but can be set to a human-friendly name.\n",
                                    "type": "string"
                                },
                                "roles": {
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "description": "A string that is unique for this document which identifies this role",
                                                "maxLength": 12,
                                                "minLength": 2,
                                                "pattern": "^[-\\w]+$",
                                                "type": "string"
                                            },
                                            "label": {
                                                "description": "A human-friendly label for this role",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Retrieve a Document Template",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Templates"
                ]
            }
        },
        "/webhooks/": {
            "get": {
                "description": "List all Webhooks in your BlueInk account",
                "operationId": "listWebhooks",
                "parameters": [
                    {
                        "x-ms-summary": "Enabled",
                        "description": "Only Webhooks matching the selected 'enabled' state will be returned.\n\nE.g. `/webhooks/?enabled=true`\n",
                        "in": "query",
                        "name": "enabled",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "x-ms-summary": "Event Type",
                        "description": "Only Webhooks matching the selected event_type or event_types will be returned.\n\nE.g. `/webhooks/?event_type=bundle_sent`\nE.g. `/webhooks/?event_type__in=bundle_error,bundle_cancelled`\n",
                        "enum": [
                            "bundle_sent",
                            "bundle_complete",
                            "bundle_docs_ready",
                            "bundle_error",
                            "bundle_cancelled",
                            "packet_viewed",
                            "packet_complete"
                        ],
                        "in": "query",
                        "name": "event_type",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A response with a list of Webhooks",
                        "schema": {
                            "items": {
                                "properties": {
                                    "enabled": {
                                        "default": true,
                                        "type": "boolean"
                                    },
                                    "event_types": {
                                        "description": "types of events that will fire the webhook",
                                        "items": {
                                            "enum": [
                                                "bundle_sent",
                                                "bundle_complete",
                                                "bundle_docs_ready",
                                                "bundle_error",
                                                "bundle_cancelled",
                                                "packet_viewed",
                                                "packet_complete"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "extra_headers": {
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "format": "uuid",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "must adhere to RFC 7230",
                                                    "maxLength": 80,
                                                    "type": "string"
                                                },
                                                "order": {
                                                    "default": 1,
                                                    "type": "integer"
                                                },
                                                "value": {
                                                    "description": "must adhere to RFC 7230",
                                                    "maxLength": 240,
                                                    "type": "string"
                                                },
                                                "webhook": {
                                                    "format": "uuid",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "id": {
                                        "format": "uuid",
                                        "type": "string"
                                    },
                                    "json": {
                                        "default": true,
                                        "type": "boolean"
                                    },
                                    "url": {
                                        "description": "should be the full URL, including http/https",
                                        "format": "url",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List Webhooks",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            },
            "post": {
                "description": "Create a new Webhook",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createWebhook",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "event_types": {
                                    "description": "types of events that will fire the webhook",
                                    "items": {
                                        "enum": [
                                            "bundle_sent",
                                            "bundle_complete",
                                            "bundle_docs_ready",
                                            "bundle_error",
                                            "bundle_cancelled",
                                            "packet_viewed",
                                            "packet_complete"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "extra_headers": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 80,
                                                "type": "string"
                                            },
                                            "order": {
                                                "default": 1,
                                                "type": "integer"
                                            },
                                            "value": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 240,
                                                "type": "string"
                                            },
                                            "webhook": {
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "json": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "url": {
                                    "description": "should be the full URL, including http/https",
                                    "format": "url",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "The created Webhook",
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "event_types": {
                                    "description": "types of events that will fire the webhook",
                                    "items": {
                                        "enum": [
                                            "bundle_sent",
                                            "bundle_complete",
                                            "bundle_docs_ready",
                                            "bundle_error",
                                            "bundle_cancelled",
                                            "packet_viewed",
                                            "packet_complete"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "extra_headers": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 80,
                                                "type": "string"
                                            },
                                            "order": {
                                                "default": 1,
                                                "type": "integer"
                                            },
                                            "value": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 240,
                                                "type": "string"
                                            },
                                            "webhook": {
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "json": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "url": {
                                    "description": "should be the full URL, including http/https",
                                    "format": "url",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Create a Webhook",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            }
        },
        "/webhooks/deliveries/": {
            "get": {
                "description": "List all WebhookDeliveries in your BlueInk account",
                "operationId": "listWebhookDeliveries",
                "parameters": [
                    {
                        "x-ms-summary": "Webhook ID",
                        "description": "Only WebhookDeliveries matching the selected webhook ID will be returned.\n\nE.g. `/webhooks/deliveries/?webhook=a053644f-e371-4883-ac17-534445993346`\n",
                        "format": "uuid",
                        "in": "query",
                        "name": "webhook",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "x-ms-summary": "Webhook Event ID",
                        "description": "Only WebhookDeliveries matching the selected webhook_event ID will be returned.\n\nE.g. `/webhooks/deliveries/?webhook_event=a053644f-e371-4883-ac17-534445993346`\n",
                        "format": "uuid",
                        "in": "query",
                        "name": "webhook_event",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "x-ms-summary": "Event Type",
                        "description": "Only WebhookDeliveries with webhooks matching the selected event_type or event_types will be returned.\n\nE.g. `/webhooks/deliveries/?event_type=bundle_sent`\nE.g. `/webhooks/deliveries/?event_type__in=bundle_error,bundle_cancelled`\n",
                        "enum": [
                            "bundle_sent",
                            "bundle_complete",
                            "bundle_docs_ready",
                            "bundle_error",
                            "bundle_cancelled",
                            "packet_viewed",
                            "packet_complete"
                        ],
                        "in": "query",
                        "name": "event_type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "x-ms-summary": "Status",
                        "description": "Only WebhookDeliveries matching the selected status will be returned.\n\nE.g. `/webhooks/deliveries/?status=1`\nE.g. `/webhooks/deliveries/?status__in=0,1,2`\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "x-ms-summary": "Date Range",
                        "description": "Only WebhookDeliveries occurring between a date range will be returned.\nNote: Dates are expressed as YYYY-MM-DD format.\n\nE.g. `/webhooks/deliveries/?date_after=2022-10-01&date_before=2022-10-31`\n",
                        "format": "date-time",
                        "in": "query",
                        "name": "date",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A response with a list of WebhookEvents",
                        "schema": {
                            "items": {
                                "properties": {
                                    "created": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "deliveries": {
                                        "items": {
                                            "properties": {
                                                "message": {
                                                    "description": "a message describing any issues",
                                                    "type": "string"
                                                },
                                                "pk": {
                                                    "format": "uuid",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "default": 0,
                                                    "description": "status message of the response, or 0 if no status",
                                                    "type": "integer"
                                                },
                                                "timestamp": {
                                                    "description": "when the delivery attempt occurred (the start of the attempt, not when it failed, e.g for a timeout)",
                                                    "format": "date-time",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "event_type": {
                                        "enum": [
                                            "bundle_sent",
                                            "bundle_complete",
                                            "bundle_docs_ready",
                                            "bundle_error",
                                            "bundle_cancelled",
                                            "packet_viewed",
                                            "packet_complete"
                                        ],
                                        "maxLength": 24,
                                        "type": "string"
                                    },
                                    "payload": {
                                        "description": "the payload to send on delivery; json",
                                        "type": "string"
                                    },
                                    "pk": {
                                        "format": "uuid",
                                        "type": "string"
                                    },
                                    "status": {
                                        "default": 0,
                                        "description": "the status code of the last response from webhook endpoint. 0 indicates no response received",
                                        "type": "integer"
                                    },
                                    "success": {
                                        "default": false,
                                        "type": "boolean"
                                    },
                                    "webhook": {
                                        "description": "UUID identifying which webhook the Event belongs to",
                                        "format": "uuid",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List WebhookEvents",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "WebhookEvent"
                ]
            }
        },
        "/webhooks/events/": {
            "get": {
                "description": "List all Webhook Events in your BlueInk account",
                "operationId": "listWebhookEvents",
                "parameters": [
                    {
                        "x-ms-summary": "Webhook ID",
                        "description": "Only WebhookEvents matching the selected webhook ID will be returned.\n\nE.g. `/webhooks/events/?webhook=a053644f-e371-4883-ac17-534445993346`\n",
                        "format": "uuid",
                        "in": "query",
                        "name": "webhook",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "x-ms-summary": "Event Type",
                        "description": "Only WebhookEvents with webhooks matching the selected event_type or event_types will be returned.\n\nE.g. `/webhooks/events/?event_type=bundle_sent`\nE.g. `/webhooks/events/?event_type__in=bundle_error,bundle_cancelled`\n",
                        "enum": [
                            "bundle_sent",
                            "bundle_complete",
                            "bundle_docs_ready",
                            "bundle_error",
                            "bundle_cancelled",
                            "packet_viewed",
                            "packet_complete"
                        ],
                        "in": "query",
                        "name": "event_type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "x-ms-summary": "Status",
                        "description": "Only WebhookEvents matching the selected status will be returned.\n\nE.g. `/webhooks/events/?status=1`\nE.g. `/webhooks/events/?status__in=0,1,2`\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "x-ms-summary": "Success Result",
                        "description": "Only WebhookEvents matching the selected success status will be returned.\n\nE.g. `/webhooks/events/?success=true`\n",
                        "in": "query",
                        "name": "success",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "x-ms-summary": "Date Range",
                        "description": "Only WebhookEvents occurring between a date range will be returned.\nNote: Dates are expressed as YYYY-MM-DD format.\n\nE.g. `/webhooks/events/?date_after=2022-10-01&date_before=2022-10-31`\n",
                        "format": "date-time",
                        "in": "query",
                        "name": "date",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A response with a list of WebhookEvents",
                        "schema": {
                            "items": {
                                "properties": {
                                    "created": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "deliveries": {
                                        "items": {
                                            "properties": {
                                                "message": {
                                                    "description": "a message describing any issues",
                                                    "type": "string"
                                                },
                                                "pk": {
                                                    "format": "uuid",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "default": 0,
                                                    "description": "status message of the response, or 0 if no status",
                                                    "type": "integer"
                                                },
                                                "timestamp": {
                                                    "description": "when the delivery attempt occurred (the start of the attempt, not when it failed, e.g for a timeout)",
                                                    "format": "date-time",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "event_type": {
                                        "enum": [
                                            "bundle_sent",
                                            "bundle_complete",
                                            "bundle_docs_ready",
                                            "bundle_error",
                                            "bundle_cancelled",
                                            "packet_viewed",
                                            "packet_complete"
                                        ],
                                        "maxLength": 24,
                                        "type": "string"
                                    },
                                    "payload": {
                                        "description": "the payload to send on delivery; json",
                                        "type": "string"
                                    },
                                    "pk": {
                                        "format": "uuid",
                                        "type": "string"
                                    },
                                    "status": {
                                        "default": 0,
                                        "description": "the status code of the last response from webhook endpoint. 0 indicates no response received",
                                        "type": "integer"
                                    },
                                    "success": {
                                        "default": false,
                                        "type": "boolean"
                                    },
                                    "webhook": {
                                        "description": "UUID identifying which webhook the Event belongs to",
                                        "format": "uuid",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List WebhookEvents",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "WebhookEvent"
                ]
            }
        },
        "/webhooks/headers/": {
            "get": {
                "description": "List all WebhookExtraHeaders in your BlueInk account",
                "operationId": "listWebhookExtraHeaders",
                "parameters": [
                    {
                        "x-ms-summary": "Webhook ID",
                        "description": "Only WebhookExtraHeaders matching the selected webhook ID will be returned.\n\nE.g. `/webhooks/headers/?webhook=a053644f-e371-4883-ac17-534445993346`\n",
                        "format": "uuid",
                        "in": "query",
                        "name": "webhook",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "x-ms-summary": "Event Type",
                        "description": "Only WebhookExtraHeaders with webhooks matching the selected event_type or event_types will be returned.\n\nE.g. `/webhooks/headers/?event_type=bundle_sent`\nE.g. `/webhooks/headers/?event_type__in=bundle_error,bundle_cancelled`\n",
                        "enum": [
                            "bundle_sent",
                            "bundle_complete",
                            "bundle_docs_ready",
                            "bundle_error",
                            "bundle_cancelled",
                            "packet_viewed",
                            "packet_complete"
                        ],
                        "in": "query",
                        "name": "event_type",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A response with a list of WebhookExtraHeaders",
                        "schema": {
                            "items": {
                                "properties": {
                                    "id": {
                                        "format": "uuid",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "must adhere to RFC 7230",
                                        "maxLength": 80,
                                        "type": "string"
                                    },
                                    "order": {
                                        "default": 1,
                                        "type": "integer"
                                    },
                                    "value": {
                                        "description": "must adhere to RFC 7230",
                                        "maxLength": 240,
                                        "type": "string"
                                    },
                                    "webhook": {
                                        "format": "uuid",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List WebhookExtraHeaders",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "WebhookExtraHeader"
                ]
            },
            "post": {
                "description": "Create a new Webhook Header",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createWebhookExtraHeader",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 80,
                                    "type": "string"
                                },
                                "order": {
                                    "default": 1,
                                    "type": "integer"
                                },
                                "value": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 240,
                                    "type": "string"
                                },
                                "webhook": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "The created WebhookExtraHeader",
                        "schema": {
                            "properties": {
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 80,
                                    "type": "string"
                                },
                                "order": {
                                    "default": 1,
                                    "type": "integer"
                                },
                                "value": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 240,
                                    "type": "string"
                                },
                                "webhook": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Create a WebhookExtraHeader",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "WebhookExtraHeader"
                ]
            }
        },
        "/webhooks/headers/{webhookExtraHeaderId}/": {
            "get": {
                "operationId": "getWebhookExtraHeader",
                "description": "Retrieve the details of a WebhookExtraHeader",
                "parameters": [
                    {
                        "x-ms-summary": "WebhookExtraHeader ID",
                        "description": "The ID that uniquely identifies the WebhookExtraHeader",
                        "format": "uuid",
                        "in": "path",
                        "name": "webhookExtraHeaderId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A response with a WebhookExtraHeader",
                        "schema": {
                            "properties": {
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 80,
                                    "type": "string"
                                },
                                "order": {
                                    "default": 1,
                                    "type": "integer"
                                },
                                "value": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 240,
                                    "type": "string"
                                },
                                "webhook": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Retrieve a WebhookExtraHeader",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            },
            "delete": {
                "description": "Delete a WebhookExtraHeader",
                "operationId": "deleteWebhookExtraHeader",
                "parameters": [
                    {
                        "x-ms-summary": "WebhookExtraHeader ID",
                        "description": "The ID that uniquely identifies the WebhookExtraHeader",
                        "format": "uuid",
                        "in": "path",
                        "name": "webhookExtraHeaderId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "The WebhookExtraHeader was deleted. No content is returned"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "409": {
                        "description": "Cannot delete the WebhookExtraHeader",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Delete a WebhookExtraHeader",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "WebhookExtraHeader"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update the WebhookExtraHeader with new data\n",
                "operationId": "updateWebhookExtraHeader",
                "parameters": [
                    {
                        "x-ms-summary": "WebhookExtraHeader ID",
                        "description": "The ID that uniquely identifies the WebhookExtraHeader",
                        "format": "uuid",
                        "in": "path",
                        "name": "webhookExtraHeaderId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 80,
                                    "type": "string"
                                },
                                "order": {
                                    "default": 1,
                                    "type": "integer"
                                },
                                "value": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 240,
                                    "type": "string"
                                },
                                "webhook": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The WebhookExtraHeader was updated",
                        "schema": {
                            "properties": {
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 80,
                                    "type": "string"
                                },
                                "order": {
                                    "default": 1,
                                    "type": "integer"
                                },
                                "value": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 240,
                                    "type": "string"
                                },
                                "webhook": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Update a WebhookExtraHeader",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "WebhookExtraHeader"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "Partially update the WebhookExtraHeader with new data.\n",
                "operationId": "updateWebhookExtraHeaderPartial",
                "parameters": [
                    {
                        "x-ms-summary": "WebhookExtraHeader ID",
                        "description": "The ID that uniquely identifies the WebhookExtraHeader",
                        "format": "uuid",
                        "in": "path",
                        "name": "webhookExtraHeaderId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 80,
                                    "type": "string"
                                },
                                "order": {
                                    "default": 1,
                                    "type": "integer"
                                },
                                "value": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 240,
                                    "type": "string"
                                },
                                "webhook": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The WebhookExtraHeader was updated",
                        "schema": {
                            "properties": {
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 80,
                                    "type": "string"
                                },
                                "order": {
                                    "default": 1,
                                    "type": "integer"
                                },
                                "value": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 240,
                                    "type": "string"
                                },
                                "webhook": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Partially update a WebhookExtraHeader",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "WebhookExtraHeader"
                ]
            }
        },
        "/webhooks/secret/": {
            "get": {
                "description": "Get the Webhook Shared Secret",
                "operationId": "getWebhookSecret",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A response with the secret contained.",
                        "schema": {
                            "properties": {
                                "create_date": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "secret": {
                                    "format": "b58",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "User is not priviliged to view the shared secret."
                    },
                    "404": {
                        "description": "Shared secret has not been generated yet."
                    }
                },
                "summary": "Get Webhook Shared Secret",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "WebhookSecret"
                ]
            }
        },
        "/webhooks/secret/regenerate/": {
            "get": {
                "description": "Regenerate the Webhook Shared Secret",
                "operationId": "regenerateWebhookSecret",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A response with the new secret contained.",
                        "schema": {
                            "properties": {
                                "create_date": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "secret": {
                                    "format": "b58",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "User is not priviliged to regenerate the secret."
                    }
                },
                "summary": "Regenerate Webhook Shared Secret",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "WebhookSecret"
                ]
            }
        },
        "/webhooks/{webhookId}/": {
            "get": {
                "description": "Get a Webhook by ID",
                "operationId": "getWebhook",
                "parameters": [
                    {
                        "x-ms-summary": "Webhook ID",
                        "description": "The ID that uniquely identifies the Webhook",
                        "format": "uuid",
                        "in": "path",
                        "name": "webhookId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A response with a Webhook",
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "event_types": {
                                    "description": "types of events that will fire the webhook",
                                    "items": {
                                        "enum": [
                                            "bundle_sent",
                                            "bundle_complete",
                                            "bundle_docs_ready",
                                            "bundle_error",
                                            "bundle_cancelled",
                                            "packet_viewed",
                                            "packet_complete"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "extra_headers": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 80,
                                                "type": "string"
                                            },
                                            "order": {
                                                "default": 1,
                                                "type": "integer"
                                            },
                                            "value": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 240,
                                                "type": "string"
                                            },
                                            "webhook": {
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "json": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "url": {
                                    "description": "should be the full URL, including http/https",
                                    "format": "url",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Retrieve a Webhook",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            },
            "delete": {
                "description": "Delete a Webhook by ID",
                "operationId": "deleteWebhook",
                "parameters": [
                    {
                        "x-ms-summary": "Webhook ID",
                        "description": "The ID that uniquely identifies the Webhook",
                        "format": "uuid",
                        "in": "path",
                        "name": "webhookId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "The Webhook was deleted. No content is returned"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "409": {
                        "description": "Cannot delete the Webhook",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Delete a Webhook",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update the Webhook with new data. NOTE that any subscriptions that are omitted from this request will be DELETED. If you don't want to replace all data on the Webhook, you probably want to use PATCH instead.\n",
                "operationId": "updateWebhook",
                "parameters": [
                    {
                        "x-ms-summary": "Webhook ID",
                        "description": "The ID that uniquely identifies the Webhook",
                        "format": "uuid",
                        "in": "path",
                        "name": "webhookId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "event_types": {
                                    "description": "types of events that will fire the webhook",
                                    "items": {
                                        "enum": [
                                            "bundle_sent",
                                            "bundle_complete",
                                            "bundle_docs_ready",
                                            "bundle_error",
                                            "bundle_cancelled",
                                            "packet_viewed",
                                            "packet_complete"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "extra_headers": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 80,
                                                "type": "string"
                                            },
                                            "order": {
                                                "default": 1,
                                                "type": "integer"
                                            },
                                            "value": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 240,
                                                "type": "string"
                                            },
                                            "webhook": {
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "json": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "url": {
                                    "description": "should be the full URL, including http/https",
                                    "format": "url",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The Webhook was updated",
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "event_types": {
                                    "description": "types of events that will fire the webhook",
                                    "items": {
                                        "enum": [
                                            "bundle_sent",
                                            "bundle_complete",
                                            "bundle_docs_ready",
                                            "bundle_error",
                                            "bundle_cancelled",
                                            "packet_viewed",
                                            "packet_complete"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "extra_headers": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 80,
                                                "type": "string"
                                            },
                                            "order": {
                                                "default": 1,
                                                "type": "integer"
                                            },
                                            "value": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 240,
                                                "type": "string"
                                            },
                                            "webhook": {
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "json": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "url": {
                                    "description": "should be the full URL, including http/https",
                                    "format": "url",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Update a Webhook",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "Partially update the Webhook with new data.\n",
                "operationId": "updateWebhookartial",
                "parameters": [
                    {
                        "x-ms-summary": "Webhook ID",
                        "description": "The ID that uniquely identifies the Webhook",
                        "format": "uuid",
                        "in": "path",
                        "name": "webhookId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "event_types": {
                                    "description": "types of events that will fire the webhook",
                                    "items": {
                                        "enum": [
                                            "bundle_sent",
                                            "bundle_complete",
                                            "bundle_docs_ready",
                                            "bundle_error",
                                            "bundle_cancelled",
                                            "packet_viewed",
                                            "packet_complete"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "extra_headers": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 80,
                                                "type": "string"
                                            },
                                            "order": {
                                                "default": 1,
                                                "type": "integer"
                                            },
                                            "value": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 240,
                                                "type": "string"
                                            },
                                            "webhook": {
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "json": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "url": {
                                    "description": "should be the full URL, including http/https",
                                    "format": "url",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The Webhook was updated",
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "event_types": {
                                    "description": "types of events that will fire the webhook",
                                    "items": {
                                        "enum": [
                                            "bundle_sent",
                                            "bundle_complete",
                                            "bundle_docs_ready",
                                            "bundle_error",
                                            "bundle_cancelled",
                                            "packet_viewed",
                                            "packet_complete"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "extra_headers": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 80,
                                                "type": "string"
                                            },
                                            "order": {
                                                "default": 1,
                                                "type": "integer"
                                            },
                                            "value": {
                                                "description": "must adhere to RFC 7230",
                                                "maxLength": 240,
                                                "type": "string"
                                            },
                                            "webhook": {
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "json": {
                                    "default": true,
                                    "type": "boolean"
                                },
                                "url": {
                                    "description": "should be the full URL, including http/https",
                                    "format": "url",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not found response",
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Partially update a Webhook",
                "security": [
                    {
                        "apiAuth_Key": []
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            }
        }
    },
    "definitions": {
        "App": {
            "properties": {
                "name": {
                    "description": "The name of the App",
                    "type": "string"
                },
                "webhooks": {
                    "description": "A list of the webhook callbacks registered for this App",
                    "items": {
                        "properties": {
                            "callback_url": {
                                "description": "The URL to which BlueInk submits requests notifying your App that one of the subscribed to events has occurred\n",
                                "type": "string"
                            },
                            "enabled": {
                                "description": "true if this webhook",
                                "type": "boolean"
                            },
                            "events": {
                                "description": "A list of the events that this callback_url is subscribed to",
                                "items": {
                                    "description": "The name of the event subscribed to",
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "extra_headers": {
                                "description": "A list of any extra headers that are included with each callback",
                                "items": {
                                    "properties": {
                                        "name": {
                                            "description": "The header name, e.g X-My-Special-Header",
                                            "type": "string"
                                        },
                                        "order": {
                                            "description": "The order in which the header will be included in callback requests\n",
                                            "type": "integer"
                                        },
                                        "value": {
                                            "description": "The value of the header",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "json": {
                                "description": "If true, the content of requests to the callback_url will be encoded with a content type of application/json. If false, the content type of application/x-www-form-urlencoded is used instead.\n",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Bundle": {
            "allOf": [
                {
                    "properties": {
                        "cc_emails": {
                            "description": "An array of email addresses that should be cc'd when the documents are complete",
                            "items": {
                                "format": "email",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "custom_key": {
                            "description": "An optional, unique custom key you can use to identify and retrieve this Bundle (e.g via search)\n",
                            "maxLength": 200,
                            "type": "string"
                        },
                        "email_message": {
                            "description": "A custom message that will be included in the email sent to each Signers via email. A message set on the individual PacketRequest takes precedence.\n",
                            "type": "string"
                        },
                        "email_subject": {
                            "description": "A custom email subject that will be included in the email sent to each Signer.\n",
                            "type": "string"
                        },
                        "in_order": {
                            "default": false,
                            "description": "If true, Signers are required to sign in order, and a signing message (email or SMS) is sent to a Signer when previous signers have signed.\n",
                            "type": "boolean"
                        },
                        "is_test": {
                            "description": "Set to True if this a test bundle. Test Bundles do not count against any account usage limits and cannot be used to create legally binding eSignatures. This should always be set to true while you App or integration is under development.\n",
                            "type": "boolean"
                        },
                        "label": {
                            "description": "A label to help you identify this Bundle",
                            "type": "string"
                        },
                        "requester_email": {
                            "description": "The email address of the requester. Defaults to the value configured for the Account (or Team).\n",
                            "format": "email",
                            "type": "string"
                        },
                        "requester_name": {
                            "description": "The name of the requester. Defaults to the value configured for the Account (or Team).\n",
                            "type": "string"
                        },
                        "sms_message": {
                            "description": "A custom message that will be included in the SMS sent to each Signers. A message set on the individual PacketRequest takes precedence.\n",
                            "type": "string"
                        },
                        "team": {
                            "description": "A team ID, if teams are activated for your Account and you want to assign this Bundle to a particular team.\n",
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                {
                    "properties": {
                        "created": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "data": {
                            "items": {
                                "properties": {
                                    "document_id": {
                                        "format": "uuid",
                                        "type": "string"
                                    },
                                    "key": {
                                        "maxLength": 12,
                                        "minLength": 2,
                                        "pattern": "^[-\\w]+$",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "type": "string"
                                    },
                                    "label": {
                                        "type": "string"
                                    },
                                    "packet_id": {
                                        "description": "The Packet (aka signer) that entered this value. Can be blank if the value was a default or an initial value provided at Bundle creation.\n",
                                        "format": "uuid",
                                        "type": "string"
                                    },
                                    "value": {}
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "docs_ready": {
                            "description": "True when final documents have been generated on a complete Bundle",
                            "type": "boolean"
                        },
                        "documents": {
                            "items": {
                                "properties": {
                                    "key": {
                                        "description": "The name of the document. Defaults to the filename or the document when it was uploaded, but can be set to a human-friendly name.\n",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The generated filename for the this document. If the document was DocumentTemplate, this is the name of the DocumentTemplate. If it was generated from a file_url, this is the name extracted from the file_url (if possible). If it was generated from an uploaded file, this is an automatically generated name\n",
                                        "type": "string"
                                    },
                                    "template_id": {
                                        "description": "The ID of the DocumentTemplate if this BundleDocument was created from a DocumentTemplate, null otherwise\n",
                                        "format": "uuid",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "errors": {
                            "description": "An array of Errors, if any occured during document processing. Null otherwise.",
                            "items": {
                                "properties": {
                                    "code": {
                                        "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                        "enum": [
                                            "authentication_failed",
                                            "conflict",
                                            "error",
                                            "invalid",
                                            "method_not_allowed",
                                            "not_acceptable",
                                            "not_authenticated",
                                            "not_found",
                                            "permission_denied",
                                            "parse_error",
                                            "service_unavailable",
                                            "throttled",
                                            "unsupported_media_type"
                                        ],
                                        "type": "string"
                                    },
                                    "errors": {
                                        "description": "An optional array of field-specific errors providing additional details",
                                        "items": {
                                            "properties": {
                                                "field": {
                                                    "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                    "type": "string"
                                                },
                                                "messsage": {
                                                    "description": "A human readable string describing the error for this field",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "required": [
                                            "field",
                                            "message"
                                        ],
                                        "type": "array"
                                    },
                                    "message": {
                                        "description": "A human readable string describing the error",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "code",
                                    "message"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "id": {
                            "type": "string"
                        },
                        "packets": {
                            "items": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "auth_id": {
                                                "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                                "type": "boolean"
                                            },
                                            "auth_selfie": {
                                                "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                                "type": "boolean"
                                            },
                                            "auth_sms": {
                                                "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                                "type": "boolean"
                                            },
                                            "email": {
                                                "description": "The email address of the signer",
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "The name of the signer",
                                                "type": "string"
                                            },
                                            "phone": {
                                                "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                                "format": "phone",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "completed_at": {
                                                "type": "string"
                                            },
                                            "deliver_via": {
                                                "enum": [
                                                    "email",
                                                    "phone",
                                                    "embed"
                                                ],
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "last_accessed_at": {
                                                "type": "string"
                                            },
                                            "order": {
                                                "type": "integer"
                                            },
                                            "person_id": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "status": {
                                                "enum": [
                                                    "ne",
                                                    "re",
                                                    "se",
                                                    "st",
                                                    "co",
                                                    "ca",
                                                    "ex",
                                                    "fa"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "status": {
                            "enum": [
                                "dr",
                                "se",
                                "st",
                                "co",
                                "ca",
                                "ex",
                                "fa"
                            ],
                            "type": "string"
                        },
                        "tags": {
                            "description": "An array of tags",
                            "items": {
                                "description": "The tag, as a string. A tag cannot contain a space or comma.",
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "BundleCommon": {
            "properties": {
                "cc_emails": {
                    "description": "An array of email addresses that should be cc'd when the documents are complete",
                    "items": {
                        "format": "email",
                        "type": "string"
                    },
                    "type": "array"
                },
                "custom_key": {
                    "description": "An optional, unique custom key you can use to identify and retrieve this Bundle (e.g via search)\n",
                    "maxLength": 200,
                    "type": "string"
                },
                "email_message": {
                    "description": "A custom message that will be included in the email sent to each Signers via email. A message set on the individual PacketRequest takes precedence.\n",
                    "type": "string"
                },
                "email_subject": {
                    "description": "A custom email subject that will be included in the email sent to each Signer.\n",
                    "type": "string"
                },
                "in_order": {
                    "default": false,
                    "description": "If true, Signers are required to sign in order, and a signing message (email or SMS) is sent to a Signer when previous signers have signed.\n",
                    "type": "boolean"
                },
                "is_test": {
                    "description": "Set to True if this a test bundle. Test Bundles do not count against any account usage limits and cannot be used to create legally binding eSignatures. This should always be set to true while you App or integration is under development.\n",
                    "type": "boolean"
                },
                "label": {
                    "description": "A label to help you identify this Bundle",
                    "type": "string"
                },
                "requester_email": {
                    "description": "The email address of the requester. Defaults to the value configured for the Account (or Team).\n",
                    "format": "email",
                    "type": "string"
                },
                "requester_name": {
                    "description": "The name of the requester. Defaults to the value configured for the Account (or Team).\n",
                    "type": "string"
                },
                "sms_message": {
                    "description": "A custom message that will be included in the SMS sent to each Signers. A message set on the individual PacketRequest takes precedence.\n",
                    "type": "string"
                },
                "team": {
                    "description": "A team ID, if teams are activated for your Account and you want to assign this Bundle to a particular team.\n",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BundleData": {
            "items": {
                "properties": {
                    "attachments": {
                        "description": "An array of file attachments for an attachment field, or null",
                        "items": {
                            "properties": {
                                "ext": {
                                    "description": "The file extension",
                                    "type": "string"
                                },
                                "is_image": {
                                    "description": "true if this attachment file is an image",
                                    "type": "boolean"
                                },
                                "name": {
                                    "description": "File name of the attachment",
                                    "type": "string"
                                },
                                "num": {
                                    "description": "The order in which the file was added, if there we're multiple uploads for a single attachment field (for instance, a photo for each page of a document taken with a webcam)\n",
                                    "type": "integer"
                                },
                                "size": {
                                    "description": "Size of the file, in bytes",
                                    "type": "integer"
                                },
                                "url": {
                                    "description": "A URL that can be used temporarily to download the attachment file",
                                    "format": "url",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "doc_key": {
                        "description": "The key uniquely identifying this document in the Bundle (from the original BundleRequest)\n",
                        "type": "string"
                    },
                    "field_key": {
                        "description": "The key uniquely identifying the field in the Document (either as specified in the original DocumentRequestField in the DocumentRequest in BundleRequest, or as configured on the DocumentTemplate)\n",
                        "type": "string"
                    },
                    "filled_by": {
                        "description": "The Packet key of the signer that entered the value for this field. If the field value was an 'initial_value' not edited by a signer, the value is 'initial'. If the field value was the default value configured on a DocumentTemplate, the filler is 'default'.\n",
                        "type": "string"
                    },
                    "kind": {
                        "description": "The kind of field",
                        "enum": [
                            "att",
                            "cbg",
                            "chk",
                            "dat",
                            "ini",
                            "inp",
                            "sdt",
                            "sel",
                            "sig",
                            "snm",
                            "txt"
                        ],
                        "type": "string"
                    },
                    "label": {
                        "description": "The label of the field (possibly blank)",
                        "type": "string"
                    },
                    "packet_id": {
                        "description": "The Packet id of the signer that entered the value for this field, or null if the field value was not filled in by a signer (ie, it was an initial_value or defaul value).\n"
                    },
                    "value": {
                        "description": "The value of the field."
                    }
                },
                "type": "object"
            },
            "type": "array"
        },
        "BundleDocument": {
            "properties": {
                "key": {
                    "description": "The name of the document. Defaults to the filename or the document when it was uploaded, but can be set to a human-friendly name.\n",
                    "type": "string"
                },
                "name": {
                    "description": "The generated filename for the this document. If the document was DocumentTemplate, this is the name of the DocumentTemplate. If it was generated from a file_url, this is the name extracted from the file_url (if possible). If it was generated from an uploaded file, this is an automatically generated name\n",
                    "type": "string"
                },
                "template_id": {
                    "description": "The ID of the DocumentTemplate if this BundleDocument was created from a DocumentTemplate, null otherwise\n",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BundleFieldData": {
            "properties": {
                "attachments": {
                    "description": "An array of file attachments for an attachment field, or null",
                    "items": {
                        "properties": {
                            "ext": {
                                "description": "The file extension",
                                "type": "string"
                            },
                            "is_image": {
                                "description": "true if this attachment file is an image",
                                "type": "boolean"
                            },
                            "name": {
                                "description": "File name of the attachment",
                                "type": "string"
                            },
                            "num": {
                                "description": "The order in which the file was added, if there we're multiple uploads for a single attachment field (for instance, a photo for each page of a document taken with a webcam)\n",
                                "type": "integer"
                            },
                            "size": {
                                "description": "Size of the file, in bytes",
                                "type": "integer"
                            },
                            "url": {
                                "description": "A URL that can be used temporarily to download the attachment file",
                                "format": "url",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "doc_key": {
                    "description": "The key uniquely identifying this document in the Bundle (from the original BundleRequest)\n",
                    "type": "string"
                },
                "field_key": {
                    "description": "The key uniquely identifying the field in the Document (either as specified in the original DocumentRequestField in the DocumentRequest in BundleRequest, or as configured on the DocumentTemplate)\n",
                    "type": "string"
                },
                "filled_by": {
                    "description": "The Packet key of the signer that entered the value for this field. If the field value was an 'initial_value' not edited by a signer, the value is 'initial'. If the field value was the default value configured on a DocumentTemplate, the filler is 'default'.\n",
                    "type": "string"
                },
                "kind": {
                    "description": "The kind of field",
                    "enum": [
                        "att",
                        "cbg",
                        "chk",
                        "dat",
                        "ini",
                        "inp",
                        "sdt",
                        "sel",
                        "sig",
                        "snm",
                        "txt"
                    ],
                    "type": "string"
                },
                "label": {
                    "description": "The label of the field (possibly blank)",
                    "type": "string"
                },
                "packet_id": {
                    "description": "The Packet id of the signer that entered the value for this field, or null if the field value was not filled in by a signer (ie, it was an initial_value or defaul value).\n"
                },
                "value": {
                    "description": "The value of the field."
                }
            },
            "type": "object"
        },
        "BundleRequest": {
            "allOf": [
                {
                    "properties": {
                        "cc_emails": {
                            "description": "An array of email addresses that should be cc'd when the documents are complete",
                            "items": {
                                "format": "email",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "custom_key": {
                            "description": "An optional, unique custom key you can use to identify and retrieve this Bundle (e.g via search)\n",
                            "maxLength": 200,
                            "type": "string"
                        },
                        "email_message": {
                            "description": "A custom message that will be included in the email sent to each Signers via email. A message set on the individual PacketRequest takes precedence.\n",
                            "type": "string"
                        },
                        "email_subject": {
                            "description": "A custom email subject that will be included in the email sent to each Signer.\n",
                            "type": "string"
                        },
                        "in_order": {
                            "default": false,
                            "description": "If true, Signers are required to sign in order, and a signing message (email or SMS) is sent to a Signer when previous signers have signed.\n",
                            "type": "boolean"
                        },
                        "is_test": {
                            "description": "Set to True if this a test bundle. Test Bundles do not count against any account usage limits and cannot be used to create legally binding eSignatures. This should always be set to true while you App or integration is under development.\n",
                            "type": "boolean"
                        },
                        "label": {
                            "description": "A label to help you identify this Bundle",
                            "type": "string"
                        },
                        "requester_email": {
                            "description": "The email address of the requester. Defaults to the value configured for the Account (or Team).\n",
                            "format": "email",
                            "type": "string"
                        },
                        "requester_name": {
                            "description": "The name of the requester. Defaults to the value configured for the Account (or Team).\n",
                            "type": "string"
                        },
                        "sms_message": {
                            "description": "A custom message that will be included in the SMS sent to each Signers. A message set on the individual PacketRequest takes precedence.\n",
                            "type": "string"
                        },
                        "team": {
                            "description": "A team ID, if teams are activated for your Account and you want to assign this Bundle to a particular team.\n",
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                {
                    "properties": {
                        "documents": {
                            "items": {},
                            "type": "array"
                        },
                        "packets": {
                            "items": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "auth_id": {
                                                "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                                "type": "boolean"
                                            },
                                            "auth_selfie": {
                                                "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                                "type": "boolean"
                                            },
                                            "auth_sms": {
                                                "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                                "type": "boolean"
                                            },
                                            "email": {
                                                "description": "The email address of the signer",
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "The name of the signer",
                                                "type": "string"
                                            },
                                            "phone": {
                                                "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                                "format": "phone",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "deliver_via": {
                                                "default": "email",
                                                "description": "How the signing link should be delivered to this Signer. If \"email\" (or \"phone\"), then an\nemail address (or phone number, respectively) must be provided in the PacketRequest, or\nsync_person must be true and a default email (or phone number, respectively)\nis set on the Person.\n\nIf \"embed\", then this Signer will be configured for embedded signing. No email or SMS\nmessage will be sent to the Signer. In a subsequent API request, you can use the\nunique Packet ID to for this signer to retrieve an URL you can use for embedded signing.\n",
                                                "enum": [
                                                    "email",
                                                    "phone",
                                                    "embed"
                                                ],
                                                "type": "string"
                                            },
                                            "key": {
                                                "description": "A string that is unique to this Bundle which is used to identify the signer elsewhere in this request. This key is used when mapping a signer to a role in the 'assignments' field of a TemplateRequest and is used to assign a field to a signer in 'editors' field in a DocumentRequestField.\n",
                                                "maxLength": 20,
                                                "minLength": 2,
                                                "pattern": "^[-\\w]+$",
                                                "type": "string"
                                            },
                                            "order": {
                                                "type": "integer"
                                            },
                                            "person_id": {
                                                "description": "The ID of an existing Person, used to locate the Person object corresponding to this\nSigner. When person_id is provided, BlueInk does not use the default Person Matching\nAlgorithm, and instead matches a Person based on the ID. If no Person is found, an\nerror is raised.\n\nWhen a matching Person is found, that Person object will be updated with any new or\nchanged data provided in this PacketRequest. If PacketRequest.name does not equal\nPerson.name, Person.name will be updated. If the email or phone included in the\nPacketRequest are unknown, they will be added to the Person object.\n",
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "key"
                                        ],
                                        "type": "object"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "packets",
                        "documents"
                    ],
                    "type": "object"
                }
            ]
        },
        "Bundles": {
            "items": {
                "allOf": [
                    {
                        "properties": {
                            "cc_emails": {
                                "description": "An array of email addresses that should be cc'd when the documents are complete",
                                "items": {
                                    "format": "email",
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "custom_key": {
                                "description": "An optional, unique custom key you can use to identify and retrieve this Bundle (e.g via search)\n",
                                "maxLength": 200,
                                "type": "string"
                            },
                            "email_message": {
                                "description": "A custom message that will be included in the email sent to each Signers via email. A message set on the individual PacketRequest takes precedence.\n",
                                "type": "string"
                            },
                            "email_subject": {
                                "description": "A custom email subject that will be included in the email sent to each Signer.\n",
                                "type": "string"
                            },
                            "in_order": {
                                "default": false,
                                "description": "If true, Signers are required to sign in order, and a signing message (email or SMS) is sent to a Signer when previous signers have signed.\n",
                                "type": "boolean"
                            },
                            "is_test": {
                                "description": "Set to True if this a test bundle. Test Bundles do not count against any account usage limits and cannot be used to create legally binding eSignatures. This should always be set to true while you App or integration is under development.\n",
                                "type": "boolean"
                            },
                            "label": {
                                "description": "A label to help you identify this Bundle",
                                "type": "string"
                            },
                            "requester_email": {
                                "description": "The email address of the requester. Defaults to the value configured for the Account (or Team).\n",
                                "format": "email",
                                "type": "string"
                            },
                            "requester_name": {
                                "description": "The name of the requester. Defaults to the value configured for the Account (or Team).\n",
                                "type": "string"
                            },
                            "sms_message": {
                                "description": "A custom message that will be included in the SMS sent to each Signers. A message set on the individual PacketRequest takes precedence.\n",
                                "type": "string"
                            },
                            "team": {
                                "description": "A team ID, if teams are activated for your Account and you want to assign this Bundle to a particular team.\n",
                                "format": "uuid",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "created": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "data": {
                                "items": {
                                    "properties": {
                                        "document_id": {
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "key": {
                                            "maxLength": 12,
                                            "minLength": 2,
                                            "pattern": "^[-\\w]+$",
                                            "type": "string"
                                        },
                                        "kind": {
                                            "type": "string"
                                        },
                                        "label": {
                                            "type": "string"
                                        },
                                        "packet_id": {
                                            "description": "The Packet (aka signer) that entered this value. Can be blank if the value was a default or an initial value provided at Bundle creation.\n",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "value": {}
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "docs_ready": {
                                "description": "True when final documents have been generated on a complete Bundle",
                                "type": "boolean"
                            },
                            "documents": {
                                "items": {
                                    "properties": {
                                        "key": {
                                            "description": "The name of the document. Defaults to the filename or the document when it was uploaded, but can be set to a human-friendly name.\n",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The generated filename for the this document. If the document was DocumentTemplate, this is the name of the DocumentTemplate. If it was generated from a file_url, this is the name extracted from the file_url (if possible). If it was generated from an uploaded file, this is an automatically generated name\n",
                                            "type": "string"
                                        },
                                        "template_id": {
                                            "description": "The ID of the DocumentTemplate if this BundleDocument was created from a DocumentTemplate, null otherwise\n",
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "errors": {
                                "description": "An array of Errors, if any occured during document processing. Null otherwise.",
                                "items": {
                                    "properties": {
                                        "code": {
                                            "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                            "enum": [
                                                "authentication_failed",
                                                "conflict",
                                                "error",
                                                "invalid",
                                                "method_not_allowed",
                                                "not_acceptable",
                                                "not_authenticated",
                                                "not_found",
                                                "permission_denied",
                                                "parse_error",
                                                "service_unavailable",
                                                "throttled",
                                                "unsupported_media_type"
                                            ],
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "An optional array of field-specific errors providing additional details",
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                        "type": "string"
                                                    },
                                                    "messsage": {
                                                        "description": "A human readable string describing the error for this field",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "required": [
                                                "field",
                                                "message"
                                            ],
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "A human readable string describing the error",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "id": {
                                "type": "string"
                            },
                            "packets": {
                                "items": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "auth_id": {
                                                    "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                                                    "type": "boolean"
                                                },
                                                "auth_selfie": {
                                                    "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                                                    "type": "boolean"
                                                },
                                                "auth_sms": {
                                                    "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                                                    "type": "boolean"
                                                },
                                                "email": {
                                                    "description": "The email address of the signer",
                                                    "format": "email",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the signer",
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                                                    "format": "phone",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "completed_at": {
                                                    "type": "string"
                                                },
                                                "deliver_via": {
                                                    "enum": [
                                                        "email",
                                                        "phone",
                                                        "embed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string"
                                                },
                                                "last_accessed_at": {
                                                    "type": "string"
                                                },
                                                "order": {
                                                    "type": "integer"
                                                },
                                                "person_id": {
                                                    "format": "uuid",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "enum": [
                                                        "ne",
                                                        "re",
                                                        "se",
                                                        "st",
                                                        "co",
                                                        "ca",
                                                        "ex",
                                                        "fa"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                },
                                "type": "array"
                            },
                            "status": {
                                "enum": [
                                    "dr",
                                    "se",
                                    "st",
                                    "co",
                                    "ca",
                                    "ex",
                                    "fa"
                                ],
                                "type": "string"
                            },
                            "tags": {
                                "description": "An array of tags",
                                "items": {
                                    "description": "The tag, as a string. A tag cannot contain a space or comma.",
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "type": "array"
        },
        "ContactChannel": {
            "properties": {
                "email": {
                    "format": "email",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "kind": {
                    "description": "em for email. mp for phone.",
                    "enum": [
                        "em",
                        "mp"
                    ],
                    "type": "string"
                },
                "phone": {
                    "format": "phone",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DocumentField": {
            "properties": {
                "h": {
                    "description": "The height of the field",
                    "type": "number"
                },
                "kind": {
                    "description": "The kind of field",
                    "enum": [
                        "att",
                        "cbg",
                        "chk",
                        "dat",
                        "ini",
                        "inp",
                        "sdt",
                        "sel",
                        "sig",
                        "snm",
                        "txt"
                    ],
                    "type": "string"
                },
                "label": {
                    "description": "A label for the field which will be shown to the Signer(s)",
                    "type": "string"
                },
                "page": {
                    "description": "The page number on which to place this field. For attachment fields, page number is ignored and attachments are gathered in a separate step of the review process.\n",
                    "type": "integer"
                },
                "required": {
                    "default": false,
                    "description": "If true, the final editor submitting the document cannot leave the field blank. For example, if `editors` is set to ['-assistant', '-manager'], the final editor must still enter a value if `required` is true\n",
                    "type": "boolean"
                },
                "v_attachment_types": {
                    "items": {
                        "enum": [
                            "jpg",
                            "jpeg",
                            "png",
                            "gif",
                            "svg",
                            "pdf",
                            "doc",
                            "docx",
                            "ppt",
                            "pptx",
                            "xls",
                            "xlsx",
                            "rtf",
                            "txt"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "v_max": {
                    "description": "For string fields, the maximum number of characters allowed. For number fields the maximum allowed value. For attachment fields, the minimum required file size in KB.\n",
                    "type": "number"
                },
                "v_min": {
                    "description": "For string fields, the minimum number of characters allowed. For number fields the minimum allowed value. For attachment fields, the minimum required file size in KB.\n",
                    "type": "number"
                },
                "v_pattern": {
                    "description": "A known, common pattern to validate a value against",
                    "enum": [
                        "email",
                        "bank_routing",
                        "bank_account",
                        "letters",
                        "numbers",
                        "phone",
                        "ssn",
                        "zip_code"
                    ],
                    "type": "string"
                },
                "w": {
                    "description": "The width of the field",
                    "type": "number"
                },
                "x": {
                    "description": "The x coordinate of the lower left corner of the field",
                    "type": "number"
                },
                "y": {
                    "description": "The y coordinate of the lower left corner of the field",
                    "type": "number"
                }
            },
            "required": [
                "kind",
                "x",
                "y",
                "w",
                "h"
            ],
            "type": "object"
        },
        "DocumentRequest": {
            "description": "Only one of file_url, file_index, file_b64 can be provided.",
            "properties": {
                "fields": {
                    "description": "An array of fields to place on the document",
                    "items": {
                        "allOf": [
                            {
                                "properties": {
                                    "h": {
                                        "description": "The height of the field",
                                        "type": "number"
                                    },
                                    "kind": {
                                        "description": "The kind of field",
                                        "enum": [
                                            "att",
                                            "cbg",
                                            "chk",
                                            "dat",
                                            "ini",
                                            "inp",
                                            "sdt",
                                            "sel",
                                            "sig",
                                            "snm",
                                            "txt"
                                        ],
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "A label for the field which will be shown to the Signer(s)",
                                        "type": "string"
                                    },
                                    "page": {
                                        "description": "The page number on which to place this field. For attachment fields, page number is ignored and attachments are gathered in a separate step of the review process.\n",
                                        "type": "integer"
                                    },
                                    "required": {
                                        "default": false,
                                        "description": "If true, the final editor submitting the document cannot leave the field blank. For example, if `editors` is set to ['-assistant', '-manager'], the final editor must still enter a value if `required` is true\n",
                                        "type": "boolean"
                                    },
                                    "v_attachment_types": {
                                        "items": {
                                            "enum": [
                                                "jpg",
                                                "jpeg",
                                                "png",
                                                "gif",
                                                "svg",
                                                "pdf",
                                                "doc",
                                                "docx",
                                                "ppt",
                                                "pptx",
                                                "xls",
                                                "xlsx",
                                                "rtf",
                                                "txt"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "v_max": {
                                        "description": "For string fields, the maximum number of characters allowed. For number fields the maximum allowed value. For attachment fields, the minimum required file size in KB.\n",
                                        "type": "number"
                                    },
                                    "v_min": {
                                        "description": "For string fields, the minimum number of characters allowed. For number fields the minimum allowed value. For attachment fields, the minimum required file size in KB.\n",
                                        "type": "number"
                                    },
                                    "v_pattern": {
                                        "description": "A known, common pattern to validate a value against",
                                        "enum": [
                                            "email",
                                            "bank_routing",
                                            "bank_account",
                                            "letters",
                                            "numbers",
                                            "phone",
                                            "ssn",
                                            "zip_code"
                                        ],
                                        "type": "string"
                                    },
                                    "w": {
                                        "description": "The width of the field",
                                        "type": "number"
                                    },
                                    "x": {
                                        "description": "The x coordinate of the lower left corner of the field",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The y coordinate of the lower left corner of the field",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "kind",
                                    "x",
                                    "y",
                                    "w",
                                    "h"
                                ],
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "editors": {
                                        "default": [],
                                        "description": "An array of Signer keys, as defined in the PacketRequest, indicating which Signers can\nedit this field. By default the field will be required for any Signer listed,\nmeaning that when that Signer is reviewing / signing the document, they cannot leave the\nfield blank.\n\nNote oftentimes you will not want a Checkbox field to be required - because a\nrequired checkbox must be checked in order for a Signer to advance past the field.\n\nIf the field should be editable, but optional for a Signer, prefix the key with a '-'.\n\nFor example: ['signer-1', '-signer-2'] indicates that the field is required for signer-1\nbut optional for signer-2.\n",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "initial_value": {
                                        "description": "An initial value for the field. If editors is empty, then this field effectively becomes a read-only field that cannot be edited by any Signers. Note, validation (v_regex, v_min, v_max) is not applied to this value.\nAttachment type fields do not support initial_value.\nFor date fields, the date must be provided as a string in the format YYYY-MM-DD, like \"2019-09-20\".\n"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    },
                    "type": "array"
                },
                "file_b64": {
                    "description": "The base64 representation of a file\n",
                    "type": "string"
                },
                "file_index": {
                    "description": "The index of a file uploaded separately in the 'file' array (when the request body encoding is multipart/form-data)\n",
                    "type": "integer"
                },
                "file_url": {
                    "description": "The URL of a file\n",
                    "type": "string"
                },
                "key": {
                    "description": "A string that uniquely identifies this Document in the Bundle",
                    "maxLength": 12,
                    "minLength": 2,
                    "pattern": "^[-\\w]+$",
                    "type": "string"
                },
                "parse_tags": {
                    "default": false,
                    "description": "If true, then BlueInk will parse the document for any \"Field Tags\" embedded in the document, and will create fields based on those tags. See the Field Tags guide for more information.\n",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DocumentRequestField": {
            "allOf": [
                {
                    "properties": {
                        "h": {
                            "description": "The height of the field",
                            "type": "number"
                        },
                        "kind": {
                            "description": "The kind of field",
                            "enum": [
                                "att",
                                "cbg",
                                "chk",
                                "dat",
                                "ini",
                                "inp",
                                "sdt",
                                "sel",
                                "sig",
                                "snm",
                                "txt"
                            ],
                            "type": "string"
                        },
                        "label": {
                            "description": "A label for the field which will be shown to the Signer(s)",
                            "type": "string"
                        },
                        "page": {
                            "description": "The page number on which to place this field. For attachment fields, page number is ignored and attachments are gathered in a separate step of the review process.\n",
                            "type": "integer"
                        },
                        "required": {
                            "default": false,
                            "description": "If true, the final editor submitting the document cannot leave the field blank. For example, if `editors` is set to ['-assistant', '-manager'], the final editor must still enter a value if `required` is true\n",
                            "type": "boolean"
                        },
                        "v_attachment_types": {
                            "items": {
                                "enum": [
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                    "svg",
                                    "pdf",
                                    "doc",
                                    "docx",
                                    "ppt",
                                    "pptx",
                                    "xls",
                                    "xlsx",
                                    "rtf",
                                    "txt"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "v_max": {
                            "description": "For string fields, the maximum number of characters allowed. For number fields the maximum allowed value. For attachment fields, the minimum required file size in KB.\n",
                            "type": "number"
                        },
                        "v_min": {
                            "description": "For string fields, the minimum number of characters allowed. For number fields the minimum allowed value. For attachment fields, the minimum required file size in KB.\n",
                            "type": "number"
                        },
                        "v_pattern": {
                            "description": "A known, common pattern to validate a value against",
                            "enum": [
                                "email",
                                "bank_routing",
                                "bank_account",
                                "letters",
                                "numbers",
                                "phone",
                                "ssn",
                                "zip_code"
                            ],
                            "type": "string"
                        },
                        "w": {
                            "description": "The width of the field",
                            "type": "number"
                        },
                        "x": {
                            "description": "The x coordinate of the lower left corner of the field",
                            "type": "number"
                        },
                        "y": {
                            "description": "The y coordinate of the lower left corner of the field",
                            "type": "number"
                        }
                    },
                    "required": [
                        "kind",
                        "x",
                        "y",
                        "w",
                        "h"
                    ],
                    "type": "object"
                },
                {
                    "properties": {
                        "editors": {
                            "default": [],
                            "description": "An array of Signer keys, as defined in the PacketRequest, indicating which Signers can\nedit this field. By default the field will be required for any Signer listed,\nmeaning that when that Signer is reviewing / signing the document, they cannot leave the\nfield blank.\n\nNote oftentimes you will not want a Checkbox field to be required - because a\nrequired checkbox must be checked in order for a Signer to advance past the field.\n\nIf the field should be editable, but optional for a Signer, prefix the key with a '-'.\n\nFor example: ['signer-1', '-signer-2'] indicates that the field is required for signer-1\nbut optional for signer-2.\n",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "initial_value": {
                            "description": "An initial value for the field. If editors is empty, then this field effectively becomes a read-only field that cannot be edited by any Signers. Note, validation (v_regex, v_min, v_max) is not applied to this value.\nAttachment type fields do not support initial_value.\nFor date fields, the date must be provided as a string in the format YYYY-MM-DD, like \"2019-09-20\".\n"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "DocumentTemplate": {
            "properties": {
                "fields": {
                    "description": "An array of fields placed on the document. Note that DocumentTemplate fields are slightly different than DocumentRequest fields, having a `default_value` and `editor_roles` instead of `initial_value` and `editors`.\n",
                    "items": {
                        "allOf": [
                            {
                                "properties": {
                                    "h": {
                                        "description": "The height of the field",
                                        "type": "number"
                                    },
                                    "kind": {
                                        "description": "The kind of field",
                                        "enum": [
                                            "att",
                                            "cbg",
                                            "chk",
                                            "dat",
                                            "ini",
                                            "inp",
                                            "sdt",
                                            "sel",
                                            "sig",
                                            "snm",
                                            "txt"
                                        ],
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "A label for the field which will be shown to the Signer(s)",
                                        "type": "string"
                                    },
                                    "page": {
                                        "description": "The page number on which to place this field. For attachment fields, page number is ignored and attachments are gathered in a separate step of the review process.\n",
                                        "type": "integer"
                                    },
                                    "required": {
                                        "default": false,
                                        "description": "If true, the final editor submitting the document cannot leave the field blank. For example, if `editors` is set to ['-assistant', '-manager'], the final editor must still enter a value if `required` is true\n",
                                        "type": "boolean"
                                    },
                                    "v_attachment_types": {
                                        "items": {
                                            "enum": [
                                                "jpg",
                                                "jpeg",
                                                "png",
                                                "gif",
                                                "svg",
                                                "pdf",
                                                "doc",
                                                "docx",
                                                "ppt",
                                                "pptx",
                                                "xls",
                                                "xlsx",
                                                "rtf",
                                                "txt"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "v_max": {
                                        "description": "For string fields, the maximum number of characters allowed. For number fields the maximum allowed value. For attachment fields, the minimum required file size in KB.\n",
                                        "type": "number"
                                    },
                                    "v_min": {
                                        "description": "For string fields, the minimum number of characters allowed. For number fields the minimum allowed value. For attachment fields, the minimum required file size in KB.\n",
                                        "type": "number"
                                    },
                                    "v_pattern": {
                                        "description": "A known, common pattern to validate a value against",
                                        "enum": [
                                            "email",
                                            "bank_routing",
                                            "bank_account",
                                            "letters",
                                            "numbers",
                                            "phone",
                                            "ssn",
                                            "zip_code"
                                        ],
                                        "type": "string"
                                    },
                                    "w": {
                                        "description": "The width of the field",
                                        "type": "number"
                                    },
                                    "x": {
                                        "description": "The x coordinate of the lower left corner of the field",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The y coordinate of the lower left corner of the field",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "kind",
                                    "x",
                                    "y",
                                    "w",
                                    "h"
                                ],
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "default_value": {
                                        "description": "A default value for the field. If editor_roles is empty, then this field\nis a read-only field that cannot be edited by any Signers. Note, validation\n(v_regex, v_min, v_max) is not applied to this value.\n\nAttachment type fields do not support default_value.\n\nFor date fields, the date must be provided as a string in the format\nYYYY-MM-DD, like \"2019-09-20\".\n"
                                    },
                                    "editor_roles": {
                                        "default": [],
                                        "description": "An array of role keys, as defined in 'roles', indicating which Roles can\nedit this field. By default the field will be required for any Role listed,\nmeaning that when that Signer assigned to that Role is reviewing / signing the document,\nthey cannot leave the field blank.\n\nNote oftentimes you will not want a Checkbox field to be required - because a\nrequired checkbox must be checked in order for a Signer to advance past the field.\n\nIf the field should be editable, but optional for a given Role, prefix the key with a '-'.\n\nFor example: ['role-1', '-role-2'] indicates that the field is required for role-1\nbut optional for role-2.\n",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    },
                    "type": "array"
                },
                "file_url": {
                    "description": "The URL of the original file that serves as the basis for this Template",
                    "type": "string"
                },
                "is_shared": {
                    "description": "True if the Document Template is shared. False otherwise",
                    "type": "boolean"
                },
                "name": {
                    "description": "The name of the document. Defaults to the filename or the document when it was uploaded, but can be set to a human-friendly name.\n",
                    "type": "string"
                },
                "roles": {
                    "items": {
                        "properties": {
                            "key": {
                                "description": "A string that is unique for this document which identifies this role",
                                "maxLength": 12,
                                "minLength": 2,
                                "pattern": "^[-\\w]+$",
                                "type": "string"
                            },
                            "label": {
                                "description": "A human-friendly label for this role",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DocumentTemplateField": {
            "allOf": [
                {
                    "properties": {
                        "h": {
                            "description": "The height of the field",
                            "type": "number"
                        },
                        "kind": {
                            "description": "The kind of field",
                            "enum": [
                                "att",
                                "cbg",
                                "chk",
                                "dat",
                                "ini",
                                "inp",
                                "sdt",
                                "sel",
                                "sig",
                                "snm",
                                "txt"
                            ],
                            "type": "string"
                        },
                        "label": {
                            "description": "A label for the field which will be shown to the Signer(s)",
                            "type": "string"
                        },
                        "page": {
                            "description": "The page number on which to place this field. For attachment fields, page number is ignored and attachments are gathered in a separate step of the review process.\n",
                            "type": "integer"
                        },
                        "required": {
                            "default": false,
                            "description": "If true, the final editor submitting the document cannot leave the field blank. For example, if `editors` is set to ['-assistant', '-manager'], the final editor must still enter a value if `required` is true\n",
                            "type": "boolean"
                        },
                        "v_attachment_types": {
                            "items": {
                                "enum": [
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                    "svg",
                                    "pdf",
                                    "doc",
                                    "docx",
                                    "ppt",
                                    "pptx",
                                    "xls",
                                    "xlsx",
                                    "rtf",
                                    "txt"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "v_max": {
                            "description": "For string fields, the maximum number of characters allowed. For number fields the maximum allowed value. For attachment fields, the minimum required file size in KB.\n",
                            "type": "number"
                        },
                        "v_min": {
                            "description": "For string fields, the minimum number of characters allowed. For number fields the minimum allowed value. For attachment fields, the minimum required file size in KB.\n",
                            "type": "number"
                        },
                        "v_pattern": {
                            "description": "A known, common pattern to validate a value against",
                            "enum": [
                                "email",
                                "bank_routing",
                                "bank_account",
                                "letters",
                                "numbers",
                                "phone",
                                "ssn",
                                "zip_code"
                            ],
                            "type": "string"
                        },
                        "w": {
                            "description": "The width of the field",
                            "type": "number"
                        },
                        "x": {
                            "description": "The x coordinate of the lower left corner of the field",
                            "type": "number"
                        },
                        "y": {
                            "description": "The y coordinate of the lower left corner of the field",
                            "type": "number"
                        }
                    },
                    "required": [
                        "kind",
                        "x",
                        "y",
                        "w",
                        "h"
                    ],
                    "type": "object"
                },
                {
                    "properties": {
                        "default_value": {
                            "description": "A default value for the field. If editor_roles is empty, then this field\nis a read-only field that cannot be edited by any Signers. Note, validation\n(v_regex, v_min, v_max) is not applied to this value.\n\nAttachment type fields do not support default_value.\n\nFor date fields, the date must be provided as a string in the format\nYYYY-MM-DD, like \"2019-09-20\".\n"
                        },
                        "editor_roles": {
                            "default": [],
                            "description": "An array of role keys, as defined in 'roles', indicating which Roles can\nedit this field. By default the field will be required for any Role listed,\nmeaning that when that Signer assigned to that Role is reviewing / signing the document,\nthey cannot leave the field blank.\n\nNote oftentimes you will not want a Checkbox field to be required - because a\nrequired checkbox must be checked in order for a Signer to advance past the field.\n\nIf the field should be editable, but optional for a given Role, prefix the key with a '-'.\n\nFor example: ['role-1', '-role-2'] indicates that the field is required for role-1\nbut optional for role-2.\n",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "EmbedURL": {
            "properties": {
                "expires": {
                    "description": "Timestamp indicating when url expires",
                    "format": "date-time",
                    "type": "string"
                },
                "url": {
                    "description": "The URL which can be used in for embedded signing",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Error": {
            "properties": {
                "code": {
                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                    "enum": [
                        "authentication_failed",
                        "conflict",
                        "error",
                        "invalid",
                        "method_not_allowed",
                        "not_acceptable",
                        "not_authenticated",
                        "not_found",
                        "permission_denied",
                        "parse_error",
                        "service_unavailable",
                        "throttled",
                        "unsupported_media_type"
                    ],
                    "type": "string"
                },
                "errors": {
                    "description": "An optional array of field-specific errors providing additional details",
                    "items": {
                        "properties": {
                            "field": {
                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                "type": "string"
                            },
                            "messsage": {
                                "description": "A human readable string describing the error for this field",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "required": [
                        "field",
                        "message"
                    ],
                    "type": "array"
                },
                "message": {
                    "description": "A human readable string describing the error",
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "Event": {
            "properties": {
                "description": {
                    "description": "A brief desription of the event",
                    "type": "string"
                },
                "kind": {
                    "description": "The kind of the event as a 2 character code",
                    "type": "string"
                },
                "packet_id": {
                    "description": "The UUID of a Packet. Only present if the event is associated with a particular packet.\n",
                    "format": "uuid",
                    "type": "string"
                },
                "timestamp": {
                    "description": "The time at which the event occured",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Events": {
            "items": {
                "properties": {
                    "description": {
                        "description": "A brief desription of the event",
                        "type": "string"
                    },
                    "kind": {
                        "description": "The kind of the event as a 2 character code",
                        "type": "string"
                    },
                    "packet_id": {
                        "description": "The UUID of a Packet. Only present if the event is associated with a particular packet.\n",
                        "format": "uuid",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "The time at which the event occured",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "type": "array"
        },
        "File": {
            "properties": {
                "expires": {
                    "description": "The time at which the link expires, as an ISO 8601 formatted time",
                    "type": "string"
                },
                "file_url": {
                    "description": "the URL from where the file can be downloaded",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Files": {
            "items": {
                "properties": {
                    "expires": {
                        "description": "The time at which the link expires, as an ISO 8601 formatted time",
                        "type": "string"
                    },
                    "file_url": {
                        "description": "the URL from where the file can be downloaded",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "type": "array"
        },
        "Packet": {
            "allOf": [
                {
                    "properties": {
                        "auth_id": {
                            "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                            "type": "boolean"
                        },
                        "auth_selfie": {
                            "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                            "type": "boolean"
                        },
                        "auth_sms": {
                            "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                            "type": "boolean"
                        },
                        "email": {
                            "description": "The email address of the signer",
                            "format": "email",
                            "type": "string"
                        },
                        "name": {
                            "description": "The name of the signer",
                            "type": "string"
                        },
                        "phone": {
                            "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                            "format": "phone",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                {
                    "properties": {
                        "completed_at": {
                            "type": "string"
                        },
                        "deliver_via": {
                            "enum": [
                                "email",
                                "phone",
                                "embed"
                            ],
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "last_accessed_at": {
                            "type": "string"
                        },
                        "order": {
                            "type": "integer"
                        },
                        "person_id": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "status": {
                            "enum": [
                                "ne",
                                "re",
                                "se",
                                "st",
                                "co",
                                "ca",
                                "ex",
                                "fa"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "PacketCommon": {
            "properties": {
                "auth_id": {
                    "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                    "type": "boolean"
                },
                "auth_selfie": {
                    "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                    "type": "boolean"
                },
                "auth_sms": {
                    "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                    "type": "boolean"
                },
                "email": {
                    "description": "The email address of the signer",
                    "format": "email",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the signer",
                    "type": "string"
                },
                "phone": {
                    "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                    "format": "phone",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PacketRequest": {
            "allOf": [
                {
                    "properties": {
                        "auth_id": {
                            "description": "True if you would like to require ID authentication before a signer can sign the documents in this Bundle\n",
                            "type": "boolean"
                        },
                        "auth_selfie": {
                            "description": "True if you would like to require Selfie authentication before a signer can sign the documents in this Bundle\n",
                            "type": "boolean"
                        },
                        "auth_sms": {
                            "description": "True if you would like to require SMS pin authentication before a signer can sign the documents in this Bundle\n",
                            "type": "boolean"
                        },
                        "email": {
                            "description": "The email address of the signer",
                            "format": "email",
                            "type": "string"
                        },
                        "name": {
                            "description": "The name of the signer",
                            "type": "string"
                        },
                        "phone": {
                            "description": "The phone number of the signer. Required if SMS Pin authentication is used.",
                            "format": "phone",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                {
                    "properties": {
                        "deliver_via": {
                            "default": "email",
                            "description": "How the signing link should be delivered to this Signer. If \"email\" (or \"phone\"), then an\nemail address (or phone number, respectively) must be provided in the PacketRequest, or\nsync_person must be true and a default email (or phone number, respectively)\nis set on the Person.\n\nIf \"embed\", then this Signer will be configured for embedded signing. No email or SMS\nmessage will be sent to the Signer. In a subsequent API request, you can use the\nunique Packet ID to for this signer to retrieve an URL you can use for embedded signing.\n",
                            "enum": [
                                "email",
                                "phone",
                                "embed"
                            ],
                            "type": "string"
                        },
                        "key": {
                            "description": "A string that is unique to this Bundle which is used to identify the signer elsewhere in this request. This key is used when mapping a signer to a role in the 'assignments' field of a TemplateRequest and is used to assign a field to a signer in 'editors' field in a DocumentRequestField.\n",
                            "maxLength": 20,
                            "minLength": 2,
                            "pattern": "^[-\\w]+$",
                            "type": "string"
                        },
                        "order": {
                            "type": "integer"
                        },
                        "person_id": {
                            "description": "The ID of an existing Person, used to locate the Person object corresponding to this\nSigner. When person_id is provided, BlueInk does not use the default Person Matching\nAlgorithm, and instead matches a Person based on the ID. If no Person is found, an\nerror is raised.\n\nWhen a matching Person is found, that Person object will be updated with any new or\nchanged data provided in this PacketRequest. If PacketRequest.name does not equal\nPerson.name, Person.name will be updated. If the email or phone included in the\nPacketRequest are unknown, they will be added to the Person object.\n",
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "required": [
                        "key"
                    ],
                    "type": "object"
                }
            ]
        },
        "Person": {
            "properties": {
                "channels": {
                    "items": {
                        "properties": {
                            "email": {
                                "format": "email",
                                "type": "string"
                            },
                            "id": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "kind": {
                                "description": "em for email. mp for phone.",
                                "enum": [
                                    "em",
                                    "mp"
                                ],
                                "type": "string"
                            },
                            "phone": {
                                "format": "phone",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "id": {
                    "format": "uuid",
                    "readOnly": true,
                    "type": "string"
                },
                "is_user": {
                    "description": "True if this Person is associated with a BlueInk User",
                    "readOnly": true,
                    "type": "boolean"
                },
                "metadata": {
                    "description": "Metadata to associate with this person. Metadata can be used in SmartFill to automatically populate documents. See SmartFill documentation for details.\n",
                    "type": "object"
                },
                "name": {
                    "description": "The name of the person",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Persons": {
            "items": {
                "properties": {
                    "channels": {
                        "items": {
                            "properties": {
                                "email": {
                                    "format": "email",
                                    "type": "string"
                                },
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "kind": {
                                    "description": "em for email. mp for phone.",
                                    "enum": [
                                        "em",
                                        "mp"
                                    ],
                                    "type": "string"
                                },
                                "phone": {
                                    "format": "phone",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "type": "string"
                    },
                    "is_user": {
                        "description": "True if this Person is associated with a BlueInk User",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "metadata": {
                        "description": "Metadata to associate with this person. Metadata can be used in SmartFill to automatically populate documents. See SmartFill documentation for details.\n",
                        "type": "object"
                    },
                    "name": {
                        "description": "The name of the person",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "type": "array"
        },
        "Tags": {
            "description": "An array of tags",
            "items": {
                "description": "The tag, as a string. A tag cannot contain a space or comma.",
                "type": "string"
            },
            "type": "array"
        },
        "TemplateRequest": {
            "properties": {
                "assignments": {
                    "description": "An array of mappings between Document Template roles and Signers",
                    "items": {
                        "properties": {
                            "role": {
                                "description": "The unique key identifying the unique role in this Document Template",
                                "maxLength": 12,
                                "minLength": 2,
                                "pattern": "^[-\\w]+$",
                                "type": "string"
                            },
                            "signer": {
                                "description": "The signer key, as defined in the PacketRequest",
                                "type": "string"
                            }
                        },
                        "required": [
                            "role",
                            "signer"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "field_values": {
                    "description": "An array of initial values to apply to fields in the document",
                    "items": {
                        "properties": {
                            "initial_value": {
                                "description": "An initial value for the field. If the field in the template allows signers to edit the field, then they can edit this initial value. If no signers are assigned to the field, then this is effectively a read-only value.\nAttachment type fields do not support initial_value.\nFor date fields, the date must be provided as a string in the format YYYY-MM-DD, like \"2019-09-20\".\n"
                            },
                            "key": {
                                "description": "The unique key identifying the field in this Document Template",
                                "maxLength": 12,
                                "minLength": 2,
                                "pattern": "^[-\\w]+$",
                                "type": "string"
                            }
                        },
                        "required": [
                            "key"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "key": {
                    "description": "A string that uniquely identifies this Template in the Bundle",
                    "maxLength": 12,
                    "minLength": 2,
                    "pattern": "^[-\\w]+$",
                    "type": "string"
                },
                "template_id": {
                    "description": "The ID of the Document Template",
                    "type": "integer"
                }
            },
            "required": [
                "template_id",
                "assignments"
            ],
            "type": "object"
        },
        "Webhook": {
            "properties": {
                "enabled": {
                    "default": true,
                    "type": "boolean"
                },
                "event_types": {
                    "description": "types of events that will fire the webhook",
                    "items": {
                        "enum": [
                            "bundle_sent",
                            "bundle_complete",
                            "bundle_docs_ready",
                            "bundle_error",
                            "bundle_cancelled",
                            "packet_viewed",
                            "packet_complete"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "extra_headers": {
                    "items": {
                        "properties": {
                            "id": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "name": {
                                "description": "must adhere to RFC 7230",
                                "maxLength": 80,
                                "type": "string"
                            },
                            "order": {
                                "default": 1,
                                "type": "integer"
                            },
                            "value": {
                                "description": "must adhere to RFC 7230",
                                "maxLength": 240,
                                "type": "string"
                            },
                            "webhook": {
                                "format": "uuid",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "json": {
                    "default": true,
                    "type": "boolean"
                },
                "url": {
                    "description": "should be the full URL, including http/https",
                    "format": "url",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WebhookDeliveries": {
            "items": {
                "properties": {
                    "message": {
                        "description": "a message describing any issues",
                        "type": "string"
                    },
                    "pk": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "status": {
                        "default": 0,
                        "description": "status message of the response, or 0 if no status",
                        "type": "integer"
                    },
                    "timestamp": {
                        "description": "when the delivery attempt occurred (the start of the attempt, not when it failed, e.g for a timeout)",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "type": "array"
        },
        "WebhookDelivery": {
            "properties": {
                "message": {
                    "description": "a message describing any issues",
                    "type": "string"
                },
                "pk": {
                    "format": "uuid",
                    "type": "string"
                },
                "status": {
                    "default": 0,
                    "description": "status message of the response, or 0 if no status",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "when the delivery attempt occurred (the start of the attempt, not when it failed, e.g for a timeout)",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WebhookEvent": {
            "properties": {
                "created": {
                    "format": "date-time",
                    "type": "string"
                },
                "deliveries": {
                    "items": {
                        "properties": {
                            "message": {
                                "description": "a message describing any issues",
                                "type": "string"
                            },
                            "pk": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "status": {
                                "default": 0,
                                "description": "status message of the response, or 0 if no status",
                                "type": "integer"
                            },
                            "timestamp": {
                                "description": "when the delivery attempt occurred (the start of the attempt, not when it failed, e.g for a timeout)",
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "event_type": {
                    "enum": [
                        "bundle_sent",
                        "bundle_complete",
                        "bundle_docs_ready",
                        "bundle_error",
                        "bundle_cancelled",
                        "packet_viewed",
                        "packet_complete"
                    ],
                    "maxLength": 24,
                    "type": "string"
                },
                "payload": {
                    "description": "the payload to send on delivery; json",
                    "type": "string"
                },
                "pk": {
                    "format": "uuid",
                    "type": "string"
                },
                "status": {
                    "default": 0,
                    "description": "the status code of the last response from webhook endpoint. 0 indicates no response received",
                    "type": "integer"
                },
                "success": {
                    "default": false,
                    "type": "boolean"
                },
                "webhook": {
                    "description": "UUID identifying which webhook the Event belongs to",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WebhookEvents": {
            "items": {
                "properties": {
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deliveries": {
                        "items": {
                            "properties": {
                                "message": {
                                    "description": "a message describing any issues",
                                    "type": "string"
                                },
                                "pk": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "status": {
                                    "default": 0,
                                    "description": "status message of the response, or 0 if no status",
                                    "type": "integer"
                                },
                                "timestamp": {
                                    "description": "when the delivery attempt occurred (the start of the attempt, not when it failed, e.g for a timeout)",
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "event_type": {
                        "enum": [
                            "bundle_sent",
                            "bundle_complete",
                            "bundle_docs_ready",
                            "bundle_error",
                            "bundle_cancelled",
                            "packet_viewed",
                            "packet_complete"
                        ],
                        "maxLength": 24,
                        "type": "string"
                    },
                    "payload": {
                        "description": "the payload to send on delivery; json",
                        "type": "string"
                    },
                    "pk": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "status": {
                        "default": 0,
                        "description": "the status code of the last response from webhook endpoint. 0 indicates no response received",
                        "type": "integer"
                    },
                    "success": {
                        "default": false,
                        "type": "boolean"
                    },
                    "webhook": {
                        "description": "UUID identifying which webhook the Event belongs to",
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "type": "array"
        },
        "WebhookExtraHeader": {
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "description": "must adhere to RFC 7230",
                    "maxLength": 80,
                    "type": "string"
                },
                "order": {
                    "default": 1,
                    "type": "integer"
                },
                "value": {
                    "description": "must adhere to RFC 7230",
                    "maxLength": 240,
                    "type": "string"
                },
                "webhook": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WebhookExtraHeaders": {
            "items": {
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "name": {
                        "description": "must adhere to RFC 7230",
                        "maxLength": 80,
                        "type": "string"
                    },
                    "order": {
                        "default": 1,
                        "type": "integer"
                    },
                    "value": {
                        "description": "must adhere to RFC 7230",
                        "maxLength": 240,
                        "type": "string"
                    },
                    "webhook": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "type": "array"
        },
        "WebhookSecret": {
            "properties": {
                "create_date": {
                    "format": "date-time",
                    "type": "string"
                },
                "secret": {
                    "format": "b58",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Webhooks": {
            "items": {
                "properties": {
                    "enabled": {
                        "default": true,
                        "type": "boolean"
                    },
                    "event_types": {
                        "description": "types of events that will fire the webhook",
                        "items": {
                            "enum": [
                                "bundle_sent",
                                "bundle_complete",
                                "bundle_docs_ready",
                                "bundle_error",
                                "bundle_cancelled",
                                "packet_viewed",
                                "packet_complete"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "extra_headers": {
                        "items": {
                            "properties": {
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 80,
                                    "type": "string"
                                },
                                "order": {
                                    "default": 1,
                                    "type": "integer"
                                },
                                "value": {
                                    "description": "must adhere to RFC 7230",
                                    "maxLength": 240,
                                    "type": "string"
                                },
                                "webhook": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "json": {
                        "default": true,
                        "type": "boolean"
                    },
                    "url": {
                        "description": "should be the full URL, including http/https",
                        "format": "url",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "type": "array"
        }
    },
    "parameters": {},
    "responses": {},
    "securityDefinitions": {
        "apiAuth_Key": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "x-ntx-connection-properties": {
                "type": "object",
                "required": [
                    "apiKey"
                ],
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "title": "API Key",
                        "description": "Prepend your API key with 'Token '. \nExample: Token dGVrSXg...",
                        "pattern": "^[Tt][oO][kK][eE][nN]\\s.+$"
                    }
                }
            }
        }
    },
    "security": [],
    "tags": [],
    "x-components": {
        "parameters": {
            "bundleSlug": {
                "description": "The slug that uniquely identifies the Bundle",
                "in": "path",
                "name": "bundleSlug",
                "required": true,
                "type": "string"
            },
            "packetId": {
                "description": "The slug that uniquely identifies the Packet",
                "in": "path",
                "name": "packetId",
                "required": true,
                "type": "string"
            },
            "personId": {
                "description": "The ID that uniquely identifies the Person",
                "format": "uuid",
                "in": "path",
                "name": "personId",
                "required": true,
                "type": "string"
            },
            "templateId": {
                "description": "The ID that uniquely identifies the Template",
                "format": "uuid",
                "in": "path",
                "name": "templateId",
                "required": true,
                "type": "string"
            },
            "webhookExtraHeaderId": {
                "description": "The ID that uniquely identifies the WebhookExtraHeader",
                "format": "uuid",
                "in": "path",
                "name": "webhookExtraHeaderId",
                "required": true,
                "type": "string"
            },
            "webhookId": {
                "description": "The ID that uniquely identifies the Webhook",
                "format": "uuid",
                "in": "path",
                "name": "webhookId",
                "required": true,
                "type": "string"
            }
        },
        "responses": {
            "400BadRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "description": "Bad Request"
            },
            "404NotFound": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "A code that identifies the kind of the error. One of:\n\n- authentication_failed: Incorrect authentication credentials provided.\n- conflict: Server is in a conflicted state and cannot handle the request.\n- error: A general error occured that cannot be described by one of the more specific error\n  codes.\n- invalid: Validation of the incoming data failed. The request contained invalid input.\n- method_not_allowed: The requested method is not allowed on the API URL.\n- not_acceptable: Cannot satisfy the Accept header in the request.\n- not_authenticated: Authentication credentials were not provided.\n- not_found: The requested resource could not be found.\n- permission_denied: You do not have permission to perform the requested action.\n- parse_error: The request payload could not be parsed.\n- service_unavailable: The request failed because some part of the BlueInk service is\n  temporarily unavailable.\n- throttled: The request was throttled\n- unsupported_media_type: The request contained an unsupported media type.\n",
                                    "enum": [
                                        "authentication_failed",
                                        "conflict",
                                        "error",
                                        "invalid",
                                        "method_not_allowed",
                                        "not_acceptable",
                                        "not_authenticated",
                                        "not_found",
                                        "permission_denied",
                                        "parse_error",
                                        "service_unavailable",
                                        "throttled",
                                        "unsupported_media_type"
                                    ],
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "An optional array of field-specific errors providing additional details",
                                    "items": {
                                        "properties": {
                                            "field": {
                                                "description": "The field in the request associated with the error. For nested data, the\nfield might be specified using dot and array notation. For instance, for a\nBundleRequest, the field value might be `documents[0].key` to indicate the error\nis associated with the \"key\" field of the first document passed in the\ndocuments array.\n\nIn some cases, the field value might not identify every component in the path\nto the actual value in error. For example a field value of 'documents.fields'\nindicates that one of the documents has an issue with its 'fields' value, but\ndoes not identify the specific document. The message should provide\nadditional details.\n",
                                                "type": "string"
                                            },
                                            "messsage": {
                                                "description": "A human readable string describing the error for this field",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "required": [
                                        "field",
                                        "message"
                                    ],
                                    "type": "array"
                                },
                                "message": {
                                    "description": "A human readable string describing the error",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "code",
                                "message"
                            ],
                            "type": "object"
                        }
                    }
                },
                "description": "Not found response"
            }
        }
    }
}