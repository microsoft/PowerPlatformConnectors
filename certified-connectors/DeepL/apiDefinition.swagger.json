{
  "swagger": "2.0",
  "info": {
    "title": "DeepL",
    "description": "The DeepL connector provides programmatic access to DeepLâ€™s machine translation technology, making it possible to bring high quality translation capabilities directly to your websites and applications. If you would like to develop a DeepL plugin for your CAT tool, please contact us.",
    "version": "1.0",
    "contact": {
      "name": "Tim Cadenbach",
      "url": "https://github.com/deejaytc",
      "email": "tim.cadenbach@deepl.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.deepl.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.deepl.com/privacy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data"
    }
  ],
  "host": "api-free.deepl.com",
  "basePath": "/v2",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/translate": {
      "post": {
        "tags": [
          "TranslateText"
        ],
        "summary": "Translate text, use this for general text translation",
        "description": "Add one or multiple text entries to translate, if multiple are used they're considered being the same context.",
        "operationId": "TranslateText",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "text",
            "x-ms-summary": "Text to be translated",
            "description": "Text to be translated. Only UTF-8-encoded plain text is supported",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 50
          },
          {
            "in": "formData",
            "name": "source_lang",
            "x-ms-summary": "Source Language",
            "description": "Language of the text to be translated",
            "type": "string",
            "enum": [
              "BG",
              "CS",
              "DA",
              "DE",
              "EL",
              "EN",
              "ES",
              "ET",
              "FI",
              "FR",
              "HU",
              "ID",
              "IT",
              "JA",
              "LT",
              "LV",
              "NL",
              "PL",
              "PT",
              "RO",
              "RU",
              "SK",
              "SL",
              "SV",
              "TR",
              "UK",
              "ZH"
            ]
          },
          {
            "in": "formData",
            "name": "target_lang",
            "x-ms-summary": "Target Language",
            "description": "The language into which the text should be translated",
            "required": true,
            "type": "string",
            "enum": [
              "BG",
              "CS",
              "DA",
              "DE",
              "EL",
              "EN-GB",
              "EN-US",
              "ES",
              "ET",
              "FI",
              "FR",
              "HU",
              "ID",
              "IT",
              "JA",
              "LT",
              "LV",
              "NL",
              "PL",
              "PT-BR",
              "PT-PT",
              "RO",
              "RU",
              "SK",
              "SL",
              "SV",
              "TR",
              "UK",
              "ZH"
            ]
          },
          {
            "in": "formData",
            "name": "split_sentences",
            "x-ms-summary": "Split Sentences",
            "description": "Whether to split the input into sentences",
            "type": "string",
            "default": "1",
            "enum": [
              "0",
              "1",
              "nonewlines"
            ]
          },
          {
            "in": "formData",
            "name": "preserve_formatting",
            "x-ms-summary": "Preserve Formatting",
            "description": "Whether to respect the original formatting",
            "type": "string",
            "default": "0",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "in": "formData",
            "name": "formality",
            "x-ms-summary": "Formality",
            "description": "Whether to lean towards formal or informal language.",
            "type": "string",
            "default": "default",
            "enum": [
              "default",
              "more",
              "less",
              "prefer_more",
              "prefer_less"
            ]
          },
          {
            "in": "formData",
            "name": "glossary_id",
            "x-ms-summary": "Glossary ID",
            "description": "Specify the glossary to use for the translation",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "tag_handling",
            "x-ms-summary": "Tag Handling",
            "description": "Sets which kind of tags should be handled",
            "type": "string",
            "enum": [
              "xml",
              "html"
            ]
          },
          {
            "in": "formData",
            "name": "non_splitting_tags",
            "x-ms-summary": "Non Splitting Tags",
            "description": "Comma-separated list of XML tags which never split sentences",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "outline_detection",
            "x-ms-summary": "Outline Detection",
            "description": "`0` disables automatic detection of XML structure",
            "type": "string",
            "enum": [
              "0"
            ]
          },
          {
            "in": "formData",
            "name": "splitting_tags",
            "x-ms-summary": "Splitting Tags",
            "description": "Comma-separated list of XML tags which always cause splits",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ignore_tags",
            "x-ms-summary": "Ignore Tags",
            "description": "Comma-separated list of XML tags that indicate text not to be translated",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The translate function returns a JSON representation of the translations in the order the text parameters have been specified.",
            "schema": {
              "type": "object",
              "properties": {
                "translations": {
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "detected_source_language": {
                        "description": "The detected source language.",
                        "type": "string"
                      },
                      "text": {
                        "description": "The translated text.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "413": {
            "$ref": "#/responses/PayloadTooLarge"
          },
          "414": {
            "$ref": "#/responses/URITooLong"
          },
          "429": {
            "$ref": "#/responses/TooManyRequests"
          },
          "456": {
            "$ref": "#/responses/QuotaExceeded"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          },
          "504": {
            "$ref": "#/responses/ServiceUnavailable"
          },
          "529": {
            "$ref": "#/responses/TooManyRequests"
          }
        }
      }
    },
    "/document": {
      "post": {
        "tags": [
          "TranslateDocuments"
        ],
        "summary": "Upload and Translate a Document",
        "description": "This call uploads a document and queues it for translation.",
        "operationId": "TranslateDocument",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "source_lang",
            "x-ms-summary": "Source Language",
            "description": "Language of the text to be translated",
            "type": "string",
            "enum": [
              "BG",
              "CS",
              "DA",
              "DE",
              "EL",
              "EN",
              "ES",
              "ET",
              "FI",
              "FR",
              "HU",
              "ID",
              "IT",
              "JA",
              "LT",
              "LV",
              "NL",
              "PL",
              "PT",
              "RO",
              "RU",
              "SK",
              "SL",
              "SV",
              "TR",
              "UK",
              "ZH"
            ]
          },
          {
            "in": "formData",
            "name": "target_lang",
            "x-ms-summary": "Target Language",
            "description": "The language into which the text should be translated",
            "required": true,
            "type": "string",
            "enum": [
              "BG",
              "CS",
              "DA",
              "DE",
              "EL",
              "EN-GB",
              "EN-US",
              "ES",
              "ET",
              "FI",
              "FR",
              "HU",
              "ID",
              "IT",
              "JA",
              "LT",
              "LV",
              "NL",
              "PL",
              "PT-BR",
              "PT-PT",
              "RO",
              "RU",
              "SK",
              "SL",
              "SV",
              "TR",
              "UK",
              "ZH"
            ]
          },
          {
            "in": "formData",
            "name": "file",
            "x-ms-summary": "File",
            "description": "The file to be translated (*.docx,*.pptx,*.pdf,*.htm,*.html,*.txt)",
            "required": true,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "filename",
            "x-ms-summary": "File Name",
            "description": "The name of the uploaded file",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "formality",
            "x-ms-summary": "Formality",
            "description": "Whether to lean towards formal or informal language.",
            "type": "string",
            "default": "default",
            "enum": [
              "default",
              "more",
              "less",
              "prefer_more",
              "prefer_less"
            ]
          },
          {
            "in": "formData",
            "name": "glossary_id",
            "x-ms-summary": "Glossary ID",
            "description": "A unique ID assigned to a glossary",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The document function returns a JSON object containing the ID and encryption key assigned to the uploaded document. Once received by the server, uploaded documents are immediately encrypted using a uniquely generated encryption key. This key is not persistently stored on the server. Therefore, it must be stored by the client and sent back to the server with every subsequent request that refers to this particular document.",
            "schema": {
              "type": "object",
              "properties": {
                "document_id": {
                  "description": "A unique ID assigned to the uploaded document and the translation process.",
                  "type": "string"
                },
                "document_key": {
                  "description": "A unique key that is used to encrypt the uploaded document as well as the resulting translation on the server side.",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "document_id": "04DE5AD98A02647D83285A36021911C6",
                "document_key": "0CB0054F1C132C1625B392EADDA41CB754A742822F6877173029A6C487E7F60A"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "413": {
            "$ref": "#/responses/PayloadTooLarge"
          },
          "429": {
            "$ref": "#/responses/TooManyRequests"
          },
          "456": {
            "$ref": "#/responses/QuotaExceeded"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          },
          "504": {
            "$ref": "#/responses/ServiceUnavailable"
          },
          "529": {
            "$ref": "#/responses/TooManyRequests"
          }
        }
      }
    },
    "/document/{document_id}": {
      "post": {
        "tags": [
          "TranslateDocuments"
        ],
        "summary": "Check Document Status",
        "description": "Retrieve the current status of a document translation process.",
        "operationId": "GetDocumentStatus",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DocumentID"
          },
          {
            "in": "formData",
            "name": "document_key",
            "x-ms-summary": "Document Key",
            "description": "The encryption key was sent to the client when the document was uploaded",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The document status request returns a JSON object containing the document ID that was used in the request as well as string indicating the current status of the translation process. While the translation is running, the estimated number of seconds remaining until the process is done is also included in the response.",
            "schema": {
              "required": [
                "document_id",
                "status"
              ],
              "type": "object",
              "properties": {
                "document_id": {
                  "description": "A unique ID assigned to the uploaded document and the requested translation process. The same ID that was used when requesting the translation status.",
                  "type": "string"
                },
                "status": {
                  "description": "A short description of the state the document translation process is currently in.",
                  "enum": [
                    "queued",
                    "translating",
                    "done",
                    "error"
                  ],
                  "type": "string"
                },
                "seconds_remaining": {
                  "description": "Estimated number of seconds until the translation is done.\nThis parameter is only included while `status` is `\"translating\"`.",
                  "type": "integer"
                },
                "billed_characters": {
                  "description": "The number of characters billed to your account.",
                  "type": "integer"
                },
                "error_message": {
                  "description": "A short description of the error, if available.\nNote that the content is subject to change.\nThis parameter may be included if an error occurred during translation.",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "413": {
            "$ref": "#/responses/PayloadTooLarge"
          },
          "429": {
            "$ref": "#/responses/TooManyRequests"
          },
          "456": {
            "$ref": "#/responses/QuotaExceeded"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          },
          "504": {
            "$ref": "#/responses/ServiceUnavailable"
          },
          "529": {
            "$ref": "#/responses/TooManyRequests"
          }
        }
      }
    },
    "/document/{document_id}/result": {
      "post": {
        "tags": [
          "TranslateDocuments"
        ],
        "summary": "Download Translated Document",
        "description": "Once the status of the document translation process is `done`, the result can be downloaded.",
        "operationId": "DownloadDocument",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DocumentID"
          },
          {
            "in": "formData",
            "name": "document_key",
            "x-ms-summary": "Document Key",
            "description": "The encryption key was sent to the client when the document was uploaded",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The document is provided as a download. There is no other data included in the response besides the document data. The content type used in the response corresponds to the document type.",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound404DocTransDownload"
          },
          "413": {
            "$ref": "#/responses/PayloadTooLarge"
          },
          "429": {
            "$ref": "#/responses/TooManyRequests"
          },
          "456": {
            "$ref": "#/responses/QuotaExceeded"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/responses/ServiceUnavailable503DocTransDownload"
          },
          "504": {
            "$ref": "#/responses/ServiceUnavailable"
          },
          "529": {
            "$ref": "#/responses/TooManyRequests"
          }
        }
      }
    },
    "/glossary-language-pairs": {
      "get": {
        "tags": [
          "ManageGlossaries"
        ],
        "summary": "List Language Pairs Supported by Glossaries",
        "description": "Retrieve the list of language pairs supported by the glossary feature.",
        "operationId": "ListGlossaryLanguages",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the language pairs in its `supported_languages` property.",
            "schema": {
              "type": "object",
              "properties": {
                "supported_languages": {
                  "description": "The list of supported languages",
                  "type": "array",
                  "items": {
                    "required": [
                      "source_lang",
                      "target_lang"
                    ],
                    "type": "object",
                    "properties": {
                      "source_lang": {
                        "description": "The language in which the source texts in the glossary are specified.",
                        "type": "string"
                      },
                      "target_lang": {
                        "description": "The language in which the target texts in the glossary are specified.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "supported_languages": [
                  {
                    "source_lang": "de",
                    "target_lang": "en"
                  },
                  {
                    "source_lang": "en",
                    "target_lang": "de"
                  }
                ]
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequestGlossaries"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/ForbiddenGlossaries"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "413": {
            "$ref": "#/responses/PayloadTooLarge"
          },
          "415": {
            "$ref": "#/responses/UnsupportedMediaTypeGlossaries"
          },
          "429": {
            "$ref": "#/responses/TooManyRequests"
          },
          "456": {
            "$ref": "#/responses/QuotaExceeded"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/responses/ServiceUnavailable"
          },
          "529": {
            "$ref": "#/responses/TooManyRequests"
          }
        }
      }
    },
    "/glossaries": {
      "get": {
        "tags": [
          "ManageGlossaries"
        ],
        "summary": "List all Glossaries",
        "description": "List all glossaries and their meta-information, but not the glossary entries.",
        "operationId": "ListGlossaries",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON object containing a the glossaries.",
            "schema": {
              "type": "object",
              "properties": {
                "glossaries": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Glossary"
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "glossaries": [
                  {
                    "glossary_id": "def3a26b-3e84-45b3-84ae-0c0aaf3525f7",
                    "name": "My Glossary",
                    "ready": true,
                    "source_lang": "EN",
                    "target_lang": "DE",
                    "creation_time": "2021-08-03T14:16:18.3290000+00:00",
                    "entry_count": 1
                  }
                ]
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequestGlossaries"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/ForbiddenGlossaries"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "413": {
            "$ref": "#/responses/PayloadTooLarge"
          },
          "415": {
            "$ref": "#/responses/UnsupportedMediaTypeGlossaries"
          },
          "429": {
            "$ref": "#/responses/TooManyRequests"
          },
          "456": {
            "$ref": "#/responses/QuotaExceeded"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/responses/ServiceUnavailable"
          },
          "529": {
            "$ref": "#/responses/TooManyRequests"
          }
        }
      },
      "post": {
        "tags": [
          "ManageGlossaries"
        ],
        "summary": "Create a Glossary",
        "description": "Create a Glossary",
        "operationId": "CreateGlossary",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "name",
            "x-ms-summary": "Name",
            "description": "Name to be associated with the glossary",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source_lang",
            "x-ms-summary": "Source Language",
            "description": "The language in which the source texts in the glossary are specified",
            "required": true,
            "type": "string",
            "enum": [
              "de",
              "en",
              "es",
              "fr",
              "ja",
              "it",
              "pl"
            ]
          },
          {
            "in": "formData",
            "name": "target_lang",
            "x-ms-summary": "Target Language",
            "description": "The language in which the target texts in the glossary are specified",
            "required": true,
            "type": "string",
            "enum": [
              "de",
              "en",
              "es",
              "fr",
              "ja",
              "it",
              "pl"
            ]
          },
          {
            "in": "formData",
            "name": "entries",
            "x-ms-summary": "Entries",
            "description": "The glossary entries in the format specified in the `Entries Format` parameter",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "entries_format",
            "x-ms-summary": "Entries Format",
            "description": "`tsv` (default) - tab-separated values - `csv` - comma-separated values",
            "required": true,
            "type": "string",
            "default": "tsv",
            "enum": [
              "tsv",
              "csv"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "The function for creating a glossary returns a JSON object containing the ID of the newly created glossary and a boolean flag that indicates if the created glossary can already be used in translate requests.",
            "schema": {
              "$ref": "#/definitions/Glossary"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequestGlossaries"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/ForbiddenGlossaries"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "413": {
            "$ref": "#/responses/PayloadTooLarge"
          },
          "415": {
            "$ref": "#/responses/UnsupportedMediaTypeGlossaries"
          },
          "429": {
            "$ref": "#/responses/TooManyRequests"
          },
          "456": {
            "$ref": "#/responses/QuotaExceeded"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/responses/ServiceUnavailable"
          },
          "529": {
            "$ref": "#/responses/TooManyRequests"
          }
        }
      }
    },
    "/glossaries/{glossary_id}": {
      "get": {
        "tags": [
          "ManageGlossaries"
        ],
        "summary": "Retrieve Glossary Details",
        "description": "Retrieve meta information for a single glossary, omitting the glossary entries.",
        "operationId": "GetGlossary",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/GlossaryID"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON object containing the glossary meta-information.",
            "schema": {
              "$ref": "#/definitions/Glossary"
            },
            "examples": {
              "application/json": {
                "id": "def3a26b-3e84-45b3-84ae-0c0aaf3525f7",
                "name": "My Glossary",
                "ready": true,
                "source_lang": "EN",
                "target_lang": "DE",
                "creation_time": "2021-08-03T14:16:18.3290000+00:00",
                "entry_count": 1
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequestGlossaries"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/ForbiddenGlossaries"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "413": {
            "$ref": "#/responses/PayloadTooLarge"
          },
          "415": {
            "$ref": "#/responses/UnsupportedMediaTypeGlossaries"
          },
          "429": {
            "$ref": "#/responses/TooManyRequests"
          },
          "456": {
            "$ref": "#/responses/QuotaExceeded"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/responses/ServiceUnavailable"
          },
          "529": {
            "$ref": "#/responses/TooManyRequests"
          }
        }
      },
      "delete": {
        "tags": [
          "ManageGlossaries"
        ],
        "summary": "Delete a Glossary",
        "description": "Deletes the specified glossary.",
        "operationId": "DeleteGlossary",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/GlossaryID"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns no content upon success."
          },
          "400": {
            "$ref": "#/responses/BadRequestGlossaries"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/ForbiddenGlossaries"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "413": {
            "$ref": "#/responses/PayloadTooLarge"
          },
          "415": {
            "$ref": "#/responses/UnsupportedMediaTypeGlossaries"
          },
          "429": {
            "$ref": "#/responses/TooManyRequests"
          },
          "456": {
            "$ref": "#/responses/QuotaExceeded"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/responses/ServiceUnavailable"
          },
          "529": {
            "$ref": "#/responses/TooManyRequests"
          }
        }
      }
    },
    "/glossaries/{glossary_id}/entries": {
      "get": {
        "tags": [
          "ManageGlossaries"
        ],
        "summary": "Retrieve Glossary Entries",
        "description": "List the entries of a single glossary in the format specified by the `Accept` header.",
        "operationId": "GetGlossaryEntries",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/GlossaryID"
          },
          {
            "in": "header",
            "name": "Accept",
            "x-ms-summary": "Format",
            "description": "Currently, supports only `text/tab-separated-values`",
            "type": "string",
            "default": "text/tab-separated-values",
            "enum": [
              "text/tab-separated-values"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "The entries in the requested format.",
            "examples": {
              "text/plain": "Hello!\tGuten Tag!"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequestGlossaries"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/ForbiddenGlossaries"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "413": {
            "$ref": "#/responses/PayloadTooLarge"
          },
          "415": {
            "$ref": "#/responses/UnsupportedMediaTypeGlossaries"
          },
          "429": {
            "$ref": "#/responses/TooManyRequests"
          },
          "456": {
            "$ref": "#/responses/QuotaExceeded"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/responses/ServiceUnavailable"
          },
          "529": {
            "$ref": "#/responses/TooManyRequests"
          }
        }
      }
    },
    "/usage": {
      "get": {
        "tags": [
          "MetaInformation"
        ],
        "summary": "Check Usage and Limits",
        "description": "Retrieve usage information within the current billing period together with the corresponding account limits.",
        "operationId": "GetUsage",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The account's usage and limits.",
            "schema": {
              "type": "object",
              "properties": {
                "character_count": {
                  "format": "int64",
                  "description": "Characters translated so far in the current billing period.",
                  "type": "integer"
                },
                "character_limit": {
                  "format": "int64",
                  "description": "Current maximum number of characters that can be translated per billing period.",
                  "type": "integer"
                },
                "document_limit": {
                  "format": "int64",
                  "description": "Documents translated so far in the current billing period.",
                  "type": "integer"
                },
                "document_count": {
                  "format": "int64",
                  "description": "Current maximum number of documents that can be translated per billing period.",
                  "type": "integer"
                },
                "team_document_limit": {
                  "format": "int64",
                  "description": "Documents translated by all users in the team so far in the current billing period.",
                  "type": "integer"
                },
                "team_document_count": {
                  "format": "int64",
                  "description": "Current maximum number of documents that can be translated by the team per billing period.",
                  "type": "integer"
                }
              }
            },
            "examples": {
              "application/json": {
                "character_count": 180118,
                "character_limit": 1250000
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "413": {
            "$ref": "#/responses/PayloadTooLarge"
          },
          "429": {
            "$ref": "#/responses/TooManyRequests"
          },
          "456": {
            "$ref": "#/responses/QuotaExceeded"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          },
          "504": {
            "$ref": "#/responses/ServiceUnavailable"
          },
          "529": {
            "$ref": "#/responses/TooManyRequests"
          }
        }
      }
    },
    "/languages": {
      "get": {
        "tags": [
          "MetaInformation"
        ],
        "summary": "Retrieve Supported Languages",
        "description": "Retrieve the list of languages that are currently supported for translation, either as source or target language, respectively.",
        "operationId": "GetLanguages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "x-ms-summary": "Type",
            "description": "Sets whether source or target languages should be listed",
            "type": "string",
            "default": "source",
            "enum": [
              "source",
              "target"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "JSON array where each item represents a supported language.",
            "schema": {
              "type": "array",
              "items": {
                "required": [
                  "language",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "language": {
                    "description": "The language code of the given language.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the language in English.",
                    "type": "string"
                  },
                  "supports_formality": {
                    "description": "Denotes formality support in case of a target language listing.",
                    "type": "boolean"
                  }
                }
              }
            },
            "examples": {
              "application/json": [
                {
                  "language": "BG",
                  "name": "Bulgarian",
                  "supports_formality": false
                },
                {
                  "language": "CS",
                  "name": "Czech",
                  "supports_formality": false
                },
                {
                  "language": "DA",
                  "name": "Danish",
                  "supports_formality": false
                },
                {
                  "language": "DE",
                  "name": "German",
                  "supports_formality": true
                },
                {
                  "language": "EL",
                  "name": "Greek",
                  "supports_formality": false
                },
                {
                  "language": "EN-GB",
                  "name": "English (British)",
                  "supports_formality": false
                },
                {
                  "language": "EN-US",
                  "name": "English (American)",
                  "supports_formality": false
                },
                {
                  "language": "ES",
                  "name": "Spanish",
                  "supports_formality": true
                },
                {
                  "language": "ET",
                  "name": "Estonian",
                  "supports_formality": false
                },
                {
                  "language": "FI",
                  "name": "Finnish",
                  "supports_formality": false
                },
                {
                  "language": "FR",
                  "name": "French",
                  "supports_formality": true
                },
                {
                  "language": "HU",
                  "name": "Hungarian",
                  "supports_formality": false
                },
                {
                  "language": "ID",
                  "name": "Indonesian",
                  "supports_formality": false
                },
                {
                  "language": "IT",
                  "name": "Italian",
                  "supports_formality": true
                },
                {
                  "language": "JA",
                  "name": "Japanese",
                  "supports_formality": false
                },
                {
                  "language": "LT",
                  "name": "Lithuanian",
                  "supports_formality": false
                },
                {
                  "language": "LV",
                  "name": "Latvian",
                  "supports_formality": false
                },
                {
                  "language": "NL",
                  "name": "Dutch",
                  "supports_formality": true
                },
                {
                  "language": "PL",
                  "name": "Polish",
                  "supports_formality": true
                },
                {
                  "language": "PT-BR",
                  "name": "Portuguese (Brazilian)",
                  "supports_formality": true
                },
                {
                  "language": "PT-PT",
                  "name": "Portuguese (European)",
                  "supports_formality": true
                },
                {
                  "language": "RO",
                  "name": "Romanian",
                  "supports_formality": false
                },
                {
                  "language": "RU",
                  "name": "Russian",
                  "supports_formality": true
                },
                {
                  "language": "SK",
                  "name": "Slovak",
                  "supports_formality": false
                },
                {
                  "language": "SL",
                  "name": "Slovenian",
                  "supports_formality": false
                },
                {
                  "language": "SV",
                  "name": "Swedish",
                  "supports_formality": false
                },
                {
                  "language": "TR",
                  "name": "Turkish",
                  "supports_formality": false
                },
                {
                  "language": "UK",
                  "name": "Ukrainian",
                  "supports_formality": false
                },
                {
                  "language": "ZH",
                  "name": "Chinese (simplified)",
                  "supports_formality": false
                }
              ]
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "413": {
            "$ref": "#/responses/PayloadTooLarge"
          },
          "429": {
            "$ref": "#/responses/TooManyRequests"
          },
          "456": {
            "$ref": "#/responses/QuotaExceeded"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          },
          "504": {
            "$ref": "#/responses/ServiceUnavailable"
          },
          "529": {
            "$ref": "#/responses/TooManyRequests"
          }
        }
      }
    }
  },
  "definitions": {
    "DocumentTranslationError": {
      "type": "object",
      "properties": {
        "message": {
          "description": "detailed error message",
          "type": "string"
        }
      }
    },
    "Formality": {
      "description": "Whether the translation should lean towards formal or informal language.",
      "default": "default",
      "enum": [
        "default",
        "more",
        "less",
        "prefer_more",
        "prefer_less"
      ],
      "type": "string"
    },
    "GlossaryId": {
      "description": "A unique ID assigned to a glossary.",
      "type": "string",
      "example": "def3a26b-3e84-45b3-84ae-0c0aaf3525f7"
    },
    "Glossary": {
      "type": "object",
      "properties": {
        "glossary_id": {
          "$ref": "#/definitions/GlossaryId"
        },
        "name": {
          "description": "Name associated with the glossary.",
          "type": "string"
        },
        "ready": {
          "description": "Indicates if the newly created glossary can already be used in `translate` requests.\nIf the created glossary is not yet ready, you have to wait and check the `ready` status\nof the glossary before using it in a `translate` request.",
          "type": "boolean"
        },
        "source_lang": {
          "$ref": "#/definitions/GlossarySourceLanguage"
        },
        "target_lang": {
          "$ref": "#/definitions/GlossaryTargetLanguage"
        },
        "creation_time": {
          "format": "date-time",
          "description": "The creation time of the glossary in the ISO 8601-1:2019 format (e.g.: `2021-08-03T14:16:18.329Z`).",
          "type": "string"
        },
        "entry_count": {
          "description": "The number of entries in the glossary.",
          "type": "integer"
        }
      },
      "example": {
        "glossary_id": "def3a26b-3e84-45b3-84ae-0c0aaf3525f7",
        "ready": true,
        "name": "My Glossary",
        "source_lang": "en",
        "target_lang": "de",
        "creation_time": "2021-08-03T14:16:18.3290000+00:00",
        "entry_count": 1
      }
    },
    "GlossarySourceLanguage": {
      "description": "The language in which the source texts in the glossary are specified.",
      "enum": [
        "de",
        "en",
        "es",
        "fr",
        "ja",
        "it",
        "pl"
      ],
      "type": "string",
      "example": "en"
    },
    "GlossaryTargetLanguage": {
      "description": "The language in which the target texts in the glossary are specified.",
      "enum": [
        "de",
        "en",
        "es",
        "fr",
        "ja",
        "it",
        "pl"
      ],
      "type": "string",
      "example": "de"
    },
    "SourceLanguage": {
      "description": "Language of the text to be translated. If this parameter is omitted, the API will attempt to detect the language of the text and translate it.",
      "enum": [
        "BG",
        "CS",
        "DA",
        "DE",
        "EL",
        "EN",
        "ES",
        "ET",
        "FI",
        "FR",
        "HU",
        "ID",
        "IT",
        "JA",
        "LT",
        "LV",
        "NL",
        "PL",
        "PT",
        "RO",
        "RU",
        "SK",
        "SL",
        "SV",
        "TR",
        "UK",
        "ZH"
      ],
      "type": "string"
    },
    "TargetLanguage": {
      "description": "The language into which the text should be translated.",
      "enum": [
        "BG",
        "CS",
        "DA",
        "DE",
        "EL",
        "EN-GB",
        "EN-US",
        "ES",
        "ET",
        "FI",
        "FR",
        "HU",
        "ID",
        "IT",
        "JA",
        "LT",
        "LV",
        "NL",
        "PL",
        "PT-BR",
        "PT-PT",
        "RO",
        "RU",
        "SK",
        "SL",
        "SV",
        "TR",
        "UK",
        "ZH"
      ],
      "type": "string"
    }
  },
  "parameters": {
    "DocumentID": {
      "in": "path",
      "name": "document_id",
      "description": "The document ID was sent to the client when the document was uploaded",
      "required": true,
      "type": "string",
      "x-ms-summary": "Document ID",
      "x-ms-url-encoding": "single"
    },
    "GlossaryID": {
      "in": "path",
      "name": "glossary_id",
      "description": "A unique ID assigned to the glossary",
      "required": true,
      "type": "string",
      "x-ms-summary": "Glossary ID",
      "x-ms-url-encoding": "single"
    },
    "SourceLanguage": {
      "in": "query",
      "name": "source_lang",
      "description": "Source Language",
      "type": "string",
      "x-ms-summary": "Source Language",
      "enum": [
        "BG",
        "CS",
        "DA",
        "DE",
        "EL",
        "EN",
        "ES",
        "ET",
        "FI",
        "FR",
        "HU",
        "ID",
        "IT",
        "JA",
        "LT",
        "LV",
        "NL",
        "PL",
        "PT",
        "RO",
        "RU",
        "SK",
        "SL",
        "SV",
        "TR",
        "UK",
        "ZH"
      ]
    },
    "TargetLanguage": {
      "in": "query",
      "name": "target_lang",
      "description": "Target Language",
      "required": true,
      "type": "string",
      "x-ms-summary": "Target Language",
      "enum": [
        "BG",
        "CS",
        "DA",
        "DE",
        "EL",
        "EN-GB",
        "EN-US",
        "ES",
        "ET",
        "FI",
        "FR",
        "HU",
        "ID",
        "IT",
        "JA",
        "LT",
        "LV",
        "NL",
        "PL",
        "PT-BR",
        "PT-PT",
        "RO",
        "RU",
        "SK",
        "SL",
        "SV",
        "TR",
        "UK",
        "ZH"
      ]
    }
  },
  "responses": {
    "BadRequest": {
      "description": "Bad request. Please check error message and your parameters."
    },
    "BadRequestGlossaries": {
      "description": "Bad request. Please check error message and your parameters.",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Generic description of the error.",
            "type": "string"
          },
          "detail": {
            "description": "More specific description of the error.",
            "type": "string"
          }
        }
      },
      "examples": {
        "application/json": {
          "message": "Invalid glossary entries provided",
          "detail": "Key with the index 1 (starting at position 13) duplicates key with the index 0 (starting at position 0)"
        }
      }
    },
    "Unauthorized": {
      "description": "Authorization failed. Please supply a valid `DeepL-Auth-Key` via the `Authorization` header."
    },
    "Forbidden": {
      "description": "Authorization failed. Please supply a valid `DeepL-Auth-Key` via the `Authorization` header."
    },
    "ForbiddenGlossaries": {
      "description": "Forbidden. The access to the requested resource is denied, because of insufficient access rights."
    },
    "NotFound": {
      "description": "The requested resource could not be found."
    },
    "NotFound404DocTransDownload": {
      "description": "Trying to download a document using a non-existing document ID or the wrong document key will result in a 404 error. As stated above, documents can only be downloaded once before they are deleted from the server and their document ID is invalidated.",
      "schema": {
        "$ref": "#/definitions/DocumentTranslationError"
      }
    },
    "PayloadTooLarge": {
      "description": "The request size exceeds the limit."
    },
    "URITooLong": {
      "description": "The request URL is too long. You can avoid this error by using a POST request instead of a GET request, and sending the parameters in the HTTP body."
    },
    "UnsupportedMediaTypeGlossaries": {
      "description": "The requested entries format specified in the `Accept` header is not supported."
    },
    "TooManyRequests": {
      "description": "Too many requests. Please wait and resend your request."
    },
    "QuotaExceeded": {
      "description": "Quota exceeded. The character limit has been reached."
    },
    "InternalServerError": {
      "description": "Internal error."
    },
    "ServiceUnavailable": {
      "description": "Resource currently unavailable. Try again later."
    },
    "ServiceUnavailable503DocTransDownload": {
      "description": "A 503 result will be returned if the user tries to download a translated document that is currently being processed and is not yet ready for download. Please make sure to check that the document status is 'done' before trying to send a download request.",
      "schema": {
        "$ref": "#/definitions/DocumentTranslationError"
      }
    }
  },
  "securityDefinitions": {
    "API-SchlÃ¼ssel": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API-SchlÃ¼ssel": []
    }
  ],
  "tags": [
    {
      "name": "TranslateText",
      "description": "The text-translation API currently consists of a single endpoint, `translate`, which is described below."
    },
    {
      "name": "TranslateDocuments",
      "description": "The document translation API allows you to translate whole documents.\nTranslating a document usually involves three types of HTTP requests:\n- [upload](https://www.deepl.com/docs-api/documents/translate-document) the document to be translated,\n- periodically [check the status](https://www.deepl.com/docs-api/documents/get-document-status) of the document translation,\n- once the status call reports `done`, [download](https://www.deepl.com/docs-api/documents/download-document) the translated document.\n\nPlease note that with every submitted document of type .pptx, .docx, or .pdf,\nyou are billed a minimum of 50,000 characters with the DeepL API plan,\nno matter how many characters are included in the document."
    },
    {
      "name": "ManageGlossaries",
      "description": "The *glossary* functions allow you to create, inspect, and delete glossaries. Glossaries created with the glossary function can be used in translate requests by specifying the `glossary_id` parameter. If you encounter issues, please let us know at support@DeepL.com. Currently, glossaries for the following language combinations are supported: - EN (English) â†’ DE (German) - DE (German) â†’ EN (English) - EN (English) â†’ FR (French) - FR (French) â†’ EN (English) - EN (English) â†’ ES (Spanish) - ES (Spanish) â†’ EN (English) - EN (English) â†’ JA (Japanese) - JA (Japanese) â†’ EN (English) - EN (English) â†’ IT (Italian) - IT (Italian) â†’ EN (English) - EN (English) â†’ PL (Polish) - PL (Polish) â†’ EN (English) - DE (German) â†’ FR (French) - FR (French) â†’ DE (German) The maximum size limit for a glossary is 10 MiB = 10485760 bytes and each source/target text, as well as the name of the glossary, is limited to 1024 UTF-8 bytes. A total of 1000 glossaries are allowed per account. Glossaries created via the DeepL API are distinct from glossaries created via the DeepL website and DeepL apps. This means API glossaries cannot be used on the website and vice versa. Note that glossaries are immutable: once created, the glossary entries for a given glossary ID cannot be modified. As a workaround for effectively editable glossaries, we suggest to identify glossaries by name instead of ID in your application and then use the following procedure for modifications: - [download](https://www.deepl.com/docs-api/glossaries/get-glossary-entries) and store the current glossary's entries, - locally modify the glossary entries, - [delete](https://www.deepl.com/docs-api/glossaries/delete-glossary) the existing glossary, - [create a new glossary](https://www.deepl.com/docs-api/glossaries/create-glossary) with the same name."
    },
    {
      "name": "MetaInformation",
      "description": "Information about API usage and value ranges"
    }
  ]
}
