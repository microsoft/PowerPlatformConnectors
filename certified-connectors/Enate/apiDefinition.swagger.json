{
  "swagger": "2.0",
  "info": {
    "title": "Enate",
    "description":"Enate Connector allows seamless integration with Enateâ€™s enterprise workflow engine. It allows to get work from the Enate platform, edit the data and add/download files.  We can also create new work items on the Enate platform using these actions of the Enate connector.",
    "version": "1.0",
    "contact": {
      "name": "Enate Support",
      "url": "https://helpdesk.enate.net/Enate",
      "email": "enate-support@enate.net"
    }
  },
  "host": "yourhost.yourdomain.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.enate.net/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.enate.net/privacypolicy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Communication"
    }
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/webapi/Authentication/Login": {
      "post": {
        "responses": {
          "200": {
            "description": "User successfully authenticated and {useCookie} was false.",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "User successfully authenticated and {useCookie} was true."
          },
          "401": {
            "description": "Username or Password incorrect, password has expired or account is locked out/disabled. If password has expired the response body will indicate so for all other errors the response body is blank for security reasons."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) Operational, EmployeeSelfService, Robot."
          }
        },
        "summary": "Authenticate",
        "description": "Action which will authenticate to the Enate Platform and returns back the token.",
        "operationId": "Authenticate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the Hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "useCookie",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": "If false, gets the token",
            "x-ms-summary": "useCookie"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Username": {
                  "type": "string",
                  "description": "Username of the Instance",
                  "title": "Username",
                  "default": "Username"
                },
                "Password": {
                  "type": "string",
                  "description": "Password of the Instance",
                  "title": "Password",
                  "default": "Password"
                }
              },
              "required": [
                "Password",
                "Username"
              ]
            }
          }
        ]
      }
    },
    "/webapi/Case/Get": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the Case requested in the {caseGUID} parameter.",
            "schema": {
              "$ref": "#/definitions/FullCasePacket"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {caseGUID} or the Packet is \r\n not an Case."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Case."
          }
        },
        "summary": "GetCase",
        "description": "Action which will get the Case details from the Enate Platform.",
        "operationId": "GetCase",
        "consumes": [],
        "produces": ["application/json","text/json","application/xml","text/xml"],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "CaseGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Unique Identifier of the case to be fetched",
            "x-ms-summary": "CaseGUID"
          }
        ]
      }
    },
    "/webapi/FileTagConfiguration/GetAll": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns a list of the File Tags requested.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BasicFileTag"
              }
            }
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) Operational, Robot."
          }
        },
        "summary": "GetFileTags",
        "description": "Action which will get the details related to the file tags from the Enate Platform.",
        "operationId": "GetFileTags",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          }
        ]
      }
    },
    "/webapi/FileTagConfiguration/Get": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the File Tag requested in the {fileTagGuid} parameter.",
            "schema": {
              "$ref": "#/definitions/ApiResponse[FullFileTag,ConfigurationValidationMessage]"
            }
          },
          "404": {
            "description": "No File Tag can be found with the supplied {fileTagGuid}."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) Operational, Robot."
          }
        },
        "summary": "GetFileTag",
        "operationId": "GetFileTag",
        "description": "Action which will get the details related to the particular file tag from the Enate Platform.",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "FileTagGuid",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Unique identifier of the file tag to fetch the details",
            "x-ms-summary": "FileTagGuid"
          }
        ]
      }
    },
    "/webapi/ContactTagConfiguration/GetAll": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns a list of the Contact Tags requested.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BasicContactTag"
              }
            }
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) Operational, EmployeeSelfService, Robot."
          }
        },
        "summary": "GetContactTags",
        "operationId": "GetContactTags",
        "description": "Action which will get the details related to the contact tags from the Enate Platform.",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          }
        ]
      }
    },
    "/webapi/ContactTagConfiguration/Get": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the Contact Tag requested in the {contactTagGuid} parameter.",
            "schema": {
              "$ref": "#/definitions/ApiResponse[FullContactTag,ConfigurationValidationMessage]"
            }
          },
          "404": {
            "description": "No Contact Tag can be found with the supplied {contactTagGuid}."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) Operational, EmployeeSelfService, Robot."
          }
        },
        "summary": "GetContactTag",
        "operationId": "GetContactTag",
        "description": "Action which will get the details related to the particular contact tag from the Enate Platform.",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "ContactTagGuid",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Unique identifier of the contact tag to fetch the details",
            "x-ms-summary": "ContactTagGuid"
          }
        ]
      }
    },
    "/webapi/Action/Get": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the Action requested in the {actionGUID} parameter.",
            "schema": {
              "$ref": "#/definitions/FullActionPacket"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {actionGUID} or the Packet is \r\n not an Action."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Action."
          }
        },
        "summary": "GetAction",
        "operationId": "GetAction",
        "description": "Action which will get the Action details from the Enate Platform.",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "ActionGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Unique Identifier of the action to be fetched",
            "x-ms-summary": "ActionGUID"
          }
        ]
      }
    },
    "/webapi/Ticket/Get": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the Ticket requested in the {ticketGUID} parameter.",
            "schema": {
              "$ref": "#/definitions/FullTicketPacket"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {ticketGUID} or the Packet is \r\n not an Ticket."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Ticket."
          }
        },
        "summary": "GetTicket",
        "operationId": "GetTicket",
        "description": "Action which will get the Ticket details from the Enate Platform.",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "TicketGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Unique Identifier of the action to be fetched",
            "x-ms-summary": "TicketGUID"
          }
        ]
      }
    },
    "/webapi/Case/GetLaunchableActions": {
      "get": {
        "responses": {
          "200": {
            "description": "New Action successfully launched.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionAttributeForLaunch"
              }
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied packetGUID or the Packet is not an Case."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "400": {
            "description": "Data validation error. Details can be found in Reason header field and response body."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) Operational, Robot."
          }
        },
        "summary": "GetLaunchableActions",
        "operationId": "GetLaunchableActions",
        "description": "Action which will get the details related to the launchable actions available in the case from the Enate Platform.",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "CaseGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "CaseGUID",
            "description": "Unique identifier of the case to fetch the launchable actions"
          }
        ]
      }
    },
    "/webapi/Case/LaunchChildCase": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse[BasicPacket,PacketValidationMessage]"
            }
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "400": {
            "description": "Data validation error. Details can be found in Reason header field and response body."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Case."
          }
        },
        "summary": "CreateSubCase",
        "description": "Action which will create a sub case in the Enate Platform.",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "operationId": "CreateSubCase",
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "CaseGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A unique identifier of the case",
            "x-ms-summary": "CaseGUID"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "CaseAttributeGUID": {
                  "type": "string",
                  "description": "A unique identifier of the Case Attribute",
                  "title": "CaseAttributeGUID"
                },
                "CaseTitle": {
                  "type": "string",
                  "description": "Title of the Sub Case",
                  "title": "CaseTitle"
                },
                "IndependentCase": {
                  "type": "string",
                  "description": "True if case is Independent",
                  "title": "IndependentCase"
                }
              },
              "required": [
                "CaseAttributeGUID",
                "CaseTitle"
              ]
            }
          }
        ]
      }
    },
    "/webapi/PacketCommunication/GetCommunications": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the communications of the Packet specified in the {packetGUID} parameter.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PacketCommunicationForList"
              }
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {packetGUID}."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Packet."
          }
        },
        "summary": "GetCommunications",
        "operationId": "GetCommunications",
        "description": "Action which will get the details of all the communications in the packet from the Enate Platform.",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "PacketGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A unique identifier of the packet to fetch the communications details",
            "x-ms-summary": "PacketGUID"
          }
        ]
      }
    },
    "/webapi/PacketCommunication/GetCommunication": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the Communication specified in the {communicationGUID} parameter.",
            "schema": {
              "$ref": "#/definitions/PacketCommunication"
            }
          },
          "404": {
            "description": "No Communication can be found with the supplied {communicationGUID}."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Communication."
          }
        },
        "summary": "GetCommunication",
        "operationId": "GetCommunication",
        "description": "Action which will get the details of the particular communication from the Enate Platform.",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "CommunicationGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A unique identifier of the communication",
            "x-ms-summary": "CommunicationGUID"
          },
          {
            "name": "SanitizeHTMLBody",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "description": "When true the HTML body will be parsed to remove potentially dangerous content.",
            "x-ms-summary": "SanitizeHTMLBody"
          }
        ]
      }
    },
    "/webapi/Work/GetMoreWork": {
      "get": {
        "responses": {
          "200": {
            "description": "The most important Packet for the User to work on returned.",
            "schema": {
              "$ref": "#/definitions/PacketForGetMoreWork"
            }
          },
          "204": {
            "description": "No more work is available for the User/Robot to work on. Please try again later."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) Operational, Robot."
          }
        },
        "summary": "GetMoreWork",
        "operationId": "GetMoreWork",
        "description": "Action which will get the work available in the Enate Platform.",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          }
        ]
      }
    },
    "/webapi/Work/IsWorkAvailable": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns true if there is more work for the User/Robot otherwise returns false.",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) Operational, Robot."
          }
        },
        "summary": "IsWorkAvailable",
        "operationId": "IsWorkAvailable",
        "description": "Action which will check if work is available in the Enate Platform.",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          }
        ]
      }
    },
    "/webapi/Work/RejectWork": {
      "post": {
        "responses": {
          "200": {
            "description": "The work has been unassigned from the Robot and will not be given to any Robot resource."
          },
          "404": {
            "description": "No Packet can be found with the supplied {packetGUID}."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Packet or it is not currently assigned to them."
          }
        },
        "summary": "RejectWork",
        "operationId": "RejectWork",
        "description": "Action which will allows a Robot to reject a piece of work so that it can be retrieved by a Human user",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "PacketGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A unique identifier of the packet to be rejected",
            "x-ms-summary": "PacketGUID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "RejectReason": {
                  "type": "string",
                  "description": "Reason for rejecting the work",
                  "title": "RejectReason"
                }
              },
              "required": [
                "RejectReason"
              ]
            }
          }
        ]
      }
    },
    "/webapi/Schedule/GetScheduleFromCaseAttributeVersion": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the specific Schedule.",
            "schema": {
              "$ref": "#/definitions/ApiResponse[FullSchedule,ConfigurationValidationMessage]"
            }
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) Operational, EmployeeSelfService, Robot."
          }
        },
        "summary": "GetScheduleDetailsOfCase",
        "operationId": "GetScheduleDetailsOfCase",
        "description": "Action which will get the schedule details associated with the case attribute from the Enate platform",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "CaseAttributeVersionGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A unique identifier of the Case Attribute Version to which Schedule is attached",
            "x-ms-summary": "CaseAttributeVersionGUID"
          }
        ]
      }
    },
    "/webapi/Case/LaunchAdhocAction": {
      "post": {
        "responses": {
          "200": {
            "description": "Action(s) sucessfully launched and a list of guids in response.",
            "schema": {
              "$ref": "#/definitions/ApiResponse[List[LaunchAdHocActionResult],PacketValidationMessage]"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {casePacket}.GUID or the Packet \r\n is not a CASE."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Action."
          }
        },
        "summary": "LaunchAdhocAction",
        "operationId": "LaunchAdhocAction",
        "description": "Action which will launch an adhoc action in the Enate platform",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "GUID": {
                  "type": "string",
                  "description": "A unique identifier of the case",
                  "title": "CaseGUID"
                },
                "ActionAttributeGUID": {
                  "type": "string",
                  "description": "A unique identifier of the Action Attribute",
                  "title": "ActionAttributeGUID"
                },
                "ActionOverrideInstruction": {
                  "type": "string",
                  "description": "Instruction for the action",
                  "title": "ActionOverrideInstruction"
                },
                "ActionOverrideDueDate": {
                  "type": "string",
                  "description": "Override Due Date of the action",
                  "title": "ActionOverrideDueDate"
                },
                "NumberOfTimesToLaunch": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of times the actions to be launched",
                  "title": "NumberOfTimesToLaunch"
                }
              },
              "required": [
                "GUID",
                "ActionOverrideDueDate",
                "ActionAttributeGUID",
                "ActionOverrideInstruction",
                "NumberOfTimesToLaunch"
              ]
            }
          }
        ]
      }
    },
    "/webapi/Contact/SearchForContact": {
      "post": {
        "responses": {
          "200": {
            "description": "Search successful. List of Employees and External Contacts returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CaseFlowContact"
              }
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {packetGUID}."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "400": {
            "description": "Data validation error. Details can be found in Reason header field and response body."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Packet."
          }
        },
        "summary": "SearchForContact",
        "operationId": "SearchForContact",
        "description": "Action which searches for an Employee or External contact with the supplied search criteria.",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "PacketGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A unique identifier of the Packet",
            "x-ms-summary": "PacketGUID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Search": {
                  "type": "string",
                  "description": "The email address, words or phrase that should be searched for.",
                  "title": "Search"
                },
                "MaximumResults": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of Maximum Results",
                  "title": "MaximumResults"
                }
              },
              "required": [
                "MaximumResults",
                "Search"
              ]
            }
          }
        ]
      }
    },
    "/webapi/Packet/CreatePacket": {
      "post": {
        "responses": {
          "200": {
            "description": "Packet successfully created. Basic details returned in message body.",
            "schema": {
              "$ref": "#/definitions/NewPacketResult"
            }
          },
          "403": {
            "description": "The authenticated user does not have permission to create Packets in this Process."
          },
          "404": {
            "description": "No Process Version Instance can be found with the supplied {request}."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "400": {
            "description": "Data validation error. Details can be found in Reason header field and response body."
          }
        },
        "summary": "CreatePacket",
        "operationId": "CreatePacket",
        "description": "Action which will create a new packet but does not start the process",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ProcessVersionInstanceGUID": {
                  "type": "string",
                  "description": "A unique identifier of the Process Version Instance",
                  "title": "ProcessVersionInstanceGUID"
                }
              },
              "required": [
                "ProcessVersionInstanceGUID"
              ]
            }
          }
        ]
      }
    },
    "/webapi/Packet/SetAssignee": {
      "post": {
        "responses": {
          "204": {
            "description": "Packet successfully reassigned."
          },
          "403": {
            "description": "The authenticated user does not have permission to reassign packets or does not have access to the Packet in {packetGUID}."
          },
          "404": {
            "description": "No User can be found with the supplied {assignmentRequest}.UserGUID, or no Packet can be found with the supplied {packetGUID} or the Packet is not a CaseFlow Packet."
          },
          "409": {
            "description": "{forceAssign} is false and packet is already assigned to another user"
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "400": {
            "description": "Data validation error. Details can be found in Reason header field and response body."
          }
        },
        "summary": "SetAssignee",
        "operationId": "SetAssignee",
        "description": "Action which will set the assignee user for the packet",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "PacketGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A unique identifier of the packet",
            "x-ms-summary": "PacketGUID"
          },
          {
            "name": "ForceAssign",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": "Forces the assignment to user if already assigned to another user.",
            "x-ms-summary": "ForceAssign",
            "default": false
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserGUID": {
                  "type": "string",
                  "description": "A unique identifier of the User",
                  "title": "UserGUID"
                },
                "Note": {
                  "type": "string",
                  "description": "Note for the packet",
                  "title": "Note"
                }
              },
              "required": [
                "Note",
                "UserGUID"
              ]
            }
          }
        ]
      }
    },
    "/webapi/WebHookSubscription/GetAllWebhookSubscriptions": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns a list of WebHook subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WebHookSubscription"
              }
            }
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) ProcessBuilder."
          }
        },
        "summary": "GetWebhookSubscriptions",
        "operationId": "GetWebhookSubscriptions",
        "description": "Action which will get a list of all current WebHook subscriptions in the Enate platform",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          }
        ]
      }
    },
    "/webapi/WebHookSubscription/GetWebhookSubscription": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns details of a WebHook subscription",
            "schema": {
              "$ref": "#/definitions/WebHookSubscription"
            }
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) ProcessBuilder."
          }
        },
        "summary": "GetWebhookSubscription",
        "operationId": "GetWebhookSubscription",
        "description": "Action which will get a specific WebHook subscription by GUID",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "WebhookSubscriptionGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A unique identifier of the WebHook Subscription",
            "x-ms-summary": "WebhookSubscriptionGUID"
          }
        ]
      }
    },
    "/webapi/WebHookSubscription/Unsubscribe": {
      "post": {
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "schema": {
              "$ref": "#/definitions/ApiResponse[Boolean,ConfigurationValidationMessage]"
            }
          },
          "404": {
            "description": "WebHook subscription not found"
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) ProcessBuilder."
          }
        },
        "summary": "UnsubscribeWebHookSubscription",
        "operationId": "UnsubscribeWebHookSubscription",
        "description": "Action which will permanently deletes a WebHook subscription",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "AuthToken",
            "description": "Token obtained from authentication"
          },
          {
            "name": "webHookSubscriptionGUID",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "webHookSubscriptionGUID",
            "description": "A unique identifier of the WebHook Subscription"
          }
        ]
      }
    },
    "/webapi/WebHookSubscription/UpdateWebhookSubscription": {
      "post": {
        "responses": {
          "200": {
            "description": "Returns the updated WebHook subscription",
            "schema": {
              "$ref": "#/definitions/ApiResponse[WebHookSubscription,ConfigurationValidationMessage]"
            }
          },
          "404": {
            "description": "WebHook subscription not found"
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) ProcessBuilder."
          }
        },
        "summary": "UpdateWebhookSubscription",
        "operationId": "UpdateWebhookSubscription",
        "description": "Action which updates an existing webhook subscription",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "GUID": {
                  "type": "string",
                  "description": "A unique identifier of the webhook",
                  "title": "GUID"
                },
                "Webhook": {
                  "type": "string",
                  "description": "Webhook",
                  "title": "Webhook"
                },
                "FilterObjectGUID": {
                  "type": "string",
                  "description": "FilterObjectGUID of the webhook",
                  "title": "FilterObjectGUID"
                },
                "FilterObjectType": {
                  "type": "string",
                  "description": "FilterObjectType of the webhook",
                  "title": "FilterObjectType"
                },
                "SubscriberURL": {
                  "type": "string",
                  "description": "SubscriberURL",
                  "title": "SubscriberURL"
                }
              }
            }
          }
        ]
      }
    },
    "/webapi/ServiceLine/GetAll": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns a list of the Service Lines requested.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BasicServiceLine"
              }
            }
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) ProcessBuilder."
          }
        },
        "summary": "GetServiceLines",
        "operationId": "GetServiceLines",
        "description": "Action which gets a list of service lined available in the Enate platform",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          }
        ]
      }
    },
    "/webapi/Case/Create": {
      "post": {
        "responses": {
          "200": {
            "description": "New Case successfully created. Returns the new Case.",
            "schema": {
              "$ref": "#/definitions/ApiResponse[FullCasePacket,PacketValidationMessage]"
            }
          },
          "403": {
            "description": "User is not allowed to Create Packets or User is a self service user and Category is\r\n not valid for Self Service."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "400": {
            "description": "Data validation error. Details can be found in Reason header field and response body."
          }
        },
        "summary": "CreateCase",
        "operationId": "CreateCase",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "CaseAttributeVersionGUID": {
                  "type": "string",
                  "description": "A unique identifer of the CaseAttributeVersion",
                  "title": "CaseAttributeVersionGUID"
                },
                "Title": {
                  "type": "string",
                  "description": "Title of the case",
                  "title": "Title"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the case",
                  "title": "Description"
                },
                "DataFields": {
                  "type": "object",
                  "properties": {},
                  "description": "DataFields"
                },
                "SchedulePeriodGUID": {
                  "type": "string",
                  "description": "A unique identifier of the SchedulePeriod",
                  "title": "SchedulePeriodGUID"
                },
                "Files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "FileName": {
                        "type": "string",
                        "description": "FileName",
                        "title": "FileName"
                      },
                      "Data": {
                        "type": "string",
                        "description": "File Data of the attachment",
                        "title": "Data"
                      },
                      "Note": {
                        "type": "string",
                        "description": "Note for the file",
                        "title": "Note"
                      },
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Source": {
                        "type": "string",
                        "description": "Source of the file",
                        "title": "Source",
                        "default": "AttachedToPacket"
                      }
                    }
                  },
                  "description": "Files"
                },
                "Contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Retired": {
                        "type": "string",
                        "description": "Boolean value to check the status of the tags",
                        "title": "Retired"
                      },
                      "GUID": {
                        "type": "string",
                        "description": "A unique identifier of the case",
                        "title": "GUID"
                      }
                    }
                  },
                  "description": "Contacts"
                }
              },
              "required": [
                "Title",
                "Description"
              ]
            }
          }
        ],
        "description": "Action which creates a case in the Enate platform"
      }
    },
    "/webapi/Case/Update": {
      "post": {
        "responses": {
          "200": {
            "description": "case successfully updated and an updated copy of the case is in the response body.",
            "schema": {
              "$ref": "#/definitions/ApiResponse[FullCasePacket,PacketValidationMessage]"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {casePacket}.GUID or the Packet \r\n is not a case."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Case."
          }
        },
        "summary": "UpdateCase",
        "operationId": "UpdateCase",
        "description": "Action which will update the case and all its data supplied",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "GUID": {
                  "type": "string",
                  "description": "A unique identifier",
                  "title": "GUID"
                },
                "Title": {
                  "type": "string",
                  "description": "Title of the case",
                  "title": "Title"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the case",
                  "title": "Description"
                },
                "DataFields": {
                  "type": "object",
                  "properties": {},
                  "description": "DataFields"
                },
                "AffectedRecordCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records affected",
                  "title": "AffectedRecordCount",
                  "default": 1
                },
                "Files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "FileName": {
                        "type": "string",
                        "description": "FileName of the attachemnt",
                        "title": "FileName"
                      },
                      "Data": {
                        "type": "string",
                        "description": "File data of the attachment",
                        "title": "Data"
                      },
                      "Note": {
                        "type": "string",
                        "description": "Note for the file",
                        "title": "Note"
                      },
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Source": {
                        "type": "string",
                        "description": "Source of the file",
                        "title": "Source",
                        "default": "AttachedToPacket"
                      }
                    }
                  },
                  "description": "Files"
                },
                "Contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Retired": {
                        "type": "string",
                        "description": "Boolean to check status of tags",
                        "title": "Retired"
                      },
                      "GUID": {
                        "type": "string",
                        "description": "A unique identifier",
                        "title": "GUID"
                      }
                    }
                  },
                  "description": "Contacts"
                }
              },
              "required": [
                "Description",
                "Title"
              ]
            }
          }
        ]
      }
    },
    "/webapi/Ticket/Create": {
      "post": {
        "responses": {
          "200": {
            "description": "New Ticket successfully created. Returns the new Ticket.",
            "schema": {
              "$ref": "#/definitions/TicketPacket"
            }
          },
          "403": {
            "description": "User is not allowed to Create Packets or User is a self service user and Category is not \r\n valid for Self Service."
          },
          "404": {
            "description": "No Ticket Category can be found with the supplied {ticket}.CategoryGUID."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "400": {
            "description": "Data validation error. Details can be found in Reason header field and response body."
          }
        },
        "summary": "CreateTicket",
        "operationId": "CreateTicket",
        "description": "Action which will create a ticket in the Enate platform",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "TicketAttributeVersionGUID": {
                  "type": "string",
                  "description": "A unique identifier of the TicketAttributeVersion",
                  "title": "TicketAttributeVersionGUID"
                },
                "Title": {
                  "type": "string",
                  "description": "Title of the ticket",
                  "title": "Title"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the ticket",
                  "title": "Description"
                },
                "DataFields": {
                  "type": "object",
                  "properties": {},
                  "description": "DataFields"
                },
                "Files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "FileName": {
                        "type": "string",
                        "description": "FileName",
                        "title": "FileName"
                      },
                      "Data": {
                        "type": "string",
                        "description": "File Data of the attachment",
                        "title": "Data"
                      },
                      "Note": {
                        "type": "string",
                        "description": "Note for the file",
                        "title": "Note"
                      },
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Source": {
                        "type": "string",
                        "description": "Source of the file",
                        "title": "Source",
                        "default": "AttachedToPacket"
                      }
                    }
                  },
                  "description": "Files"
                },
                "Contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Retired": {
                        "type": "string",
                        "description": "Boolean value to check the status of the tags",
                        "title": "Retired"
                      },
                      "GUID": {
                        "type": "string",
                        "description": "A unique identifier",
                        "title": "GUID"
                      }
                    }
                  },
                  "description": "Contacts"
                }
              },
              "required": [
                "Title",
                "Description"
              ]
            }
          }
        ]
      }
    },
    "/webapi/Packet/GetContexts": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns a list of Contexts for a Case or Ticket.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContextCustomerLevel"
              }
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {caseflowPacketGUID} or thePacket is not a Case or Ticket."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) Operational, EmployeeSelfService, Robot."
          }
        },
        "summary": "GetContexts",
        "operationId": "GetContexts",
        "description": "Action which returns a list of Contexts for a Case or Ticket",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "ProcessType",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "What type of Process should the context information be returned for (Case/Ticket)",
            "x-ms-summary": "ProcessType"
          }
        ]
      }
    },
    "/webapi/ServiceMatrix/GetServiceMatrix": {
      "post": {
        "responses": {
          "200": {
            "description": "Returns Service Matrix Details.",
            "schema": {
              "$ref": "#/definitions/ServiceMatrixResults"
            }
          },
          "400": {
            "description": "ServiceLineGUID cannot be an Empty Guid."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have 1 or more of the role(s) ProcessBuilder."
          }
        },
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "ServiceLineGUID": {
                  "type": "string",
                  "description": "A unique identifier of the Service Line",
                  "title": "ServiceLineGUID"
                },
                "ContractNamesFilter": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Name of the Contract to be filtered",
                    "title": ""
                  },
                  "description": "ContractNamesFilter"
                },
                "CustomerNamesFilter": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Name of the Customer to be filtered",
                    "title": ""
                  },
                  "description": "CustomerNamesFilter"
                },
                "ServiceNamesFilter": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Name of the Service to be filtered",
                    "title": ""
                  },
                  "description": "ServiceNamesFilter"
                }
              },
              "required": [
                "ServiceLineGUID"
              ]
            }
          }
        ],
        "summary": "GetServiceMatrix",
        "operationId": "GetServiceMatrix",
        "description": "Action which returns the service matrix details"
      }
    },
    "/webapi/Ticket/Update": {
      "post": {
        "responses": {
          "200": {
            "description": "Ticket successfully updated and an updated copy of the Ticket is in the response body.",
            "schema": {
              "$ref": "#/definitions/TicketPacketUpdated"
            }
          },
          "204": {
            "description": "Ticket successfully updated."
          },
          "404": {
            "description": "No Packet can be found with the supplied {ticket}.GUID or the Packet is \r\n not a Ticket."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "400": {
            "description": "Data validation error. Details can be found in Reason header field and response body."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Ticket or it is not currently assigned to them."
          }
        },
        "summary": "UpdateTicket",
        "operationId": "UpdateTicket",
        "description": "Action which will update all its ticket details supplied",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "GUID": {
                  "type": "string",
                  "description": "A unique identifier",
                  "title": "GUID"
                },
                "Title": {
                  "type": "string",
                  "description": "Title of the ticket",
                  "title": "Title"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the ticket",
                  "title": "Description"
                },
                "DataFields": {
                  "type": "object",
                  "properties": {},
                  "description": "DataFields"
                },
                "Files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "FileName": {
                        "type": "string",
                        "description": "FileName of the attachment",
                        "title": "FileName"
                      },
                      "Data": {
                        "type": "string",
                        "description": "File Data of the attachment",
                        "title": "Data"
                      },
                      "Note": {
                        "type": "string",
                        "description": "Note for the file",
                        "title": "Note"
                      },
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Source": {
                        "type": "string",
                        "description": "Source of the attachment",
                        "title": "Source",
                        "default": "AttachedToPacket"
                      }
                    }
                  },
                  "description": "Files"
                },
                "Contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Retired": {
                        "type": "string",
                        "description": "Boolean value to check the status of the tags",
                        "title": "Retired"
                      },
                      "GUID": {
                        "type": "string",
                        "description": "A unique identifier",
                        "title": "GUID"
                      }
                    }
                  },
                  "description": "Contacts"
                }
              },
              "required": [
                "Description"
              ]
            }
          }
        ]
      }
    },
    "/webapi/Action/Update": {
      "post": {
        "responses": {
          "200": {
            "description": "action successfully updated and an updated copy of the action is in the response body.",
            "schema": {
              "$ref": "#/definitions/ApiResponse[FullActionPacket,PacketValidationMessage]"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {action}.GUID or the Packet \r\n is not an action."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Action."
          }
        },
        "summary": "UpdateAction",
        "operationId": "UpdateAction",
        "description": "Action which will update all the data supplied",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "GUID": {
                  "type": "string",
                  "description": "A unique identifier",
                  "title": "GUID"
                },
                "Title": {
                  "type": "string",
                  "description": "Title of the action",
                  "title": "Title"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the action",
                  "title": "Description"
                },
                "OverrideDueDate": {
                  "type": "string",
                  "description": "Override Due Date of the action",
                  "title": "OverrideDueDate"
                },
                "DataFields": {
                  "type": "object",
                  "properties": {},
                  "description": "DataFields"
                },
                "Files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "TemporaryFileGUID": {
                        "type": "string",
                        "description": "A unique identifier of File",
                        "title": "TemporaryFileGUID"
                      },
                      "FileName": {
                        "type": "string",
                        "description": "FileName of the attachment",
                        "title": "FileName"
                      },
                      "Data": {
                        "type": "string",
                        "description": "File Data of the attachment",
                        "title": "Data"
                      },
                      "Note": {
                        "type": "string",
                        "description": "Note for the file",
                        "title": "Note"
                      },
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Source": {
                        "type": "string",
                        "description": "Source of the file",
                        "title": "Source",
                        "default": "AttachedToPacket"
                      }
                    }
                  },
                  "description": "Files"
                },
                "Contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Retired": {
                        "type": "string",
                        "description": "Boolean value that checks the status of tags",
                        "title": "Retired"
                      },
                      "GUID": {
                        "type": "string",
                        "description": "A unique identifier",
                        "title": "GUID"
                      }
                    }
                  },
                  "description": "Contacts"
                }
              },
              "required": [
                "Title",
                "Description"
              ]
            }
          }
        ]
      }
    },
    "/webapi/PacketCommunication/SendEmailCommunication": {
      "post": {
        "responses": {
          "200": {
            "description": "Email successfully sent and new Packet Communication GUID returned.",
            "schema": {
              "format": "uuid",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {packetGUID}."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Packet."
          }
        },
        "summary": "SendEmailCommunication",
        "operationId": "SendEmailCommunication",
        "description": "Action which sends an email from a packet",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "PacketGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A unique identifier of the packet",
            "x-ms-summary": "PacketGUID"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "Important": {
                  "type": "string",
                  "description": "Boolean to set the importance of mail",
                  "title": "Important"
                },
                "Subject": {
                  "type": "string",
                  "description": "Subject of the mail",
                  "title": "Subject"
                },
                "Body": {
                  "type": "string",
                  "description": "Body of the email",
                  "title": "Body"
                },
                "CommunicationType": {
                  "type": "string",
                  "description": "Type of communication",
                  "title": "CommunicationType",
                  "default": "EmailOutgoing"
                },
                "Attachments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Filename": {
                        "type": "string",
                        "description": "Filename of the attachment",
                        "title": "Filename"
                      },
                      "Data": {
                        "type": "string",
                        "description": "File Data of the attachment",
                        "title": "Data"
                      },
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            },
                            "Name": {
                              "type": "string",
                              "description": "Name"
                            }
                          }
                        },
                        "description": "Tags"
                      }
                    }
                  },
                  "description": "Attachments"
                },
                "From": {
                  "type": "object",
                  "properties": {
                    "EmailAddress": {
                      "type": "string",
                      "description": "EmailAddress",
                      "title": "EmailAddress"
                    }
                  },
                  "description": "From"
                },
                "To": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "EmailAddress": {
                        "type": "string",
                        "description": "EmailAddress",
                        "title": "EmailAddress"
                      }
                    }
                  },
                  "description": "To"
                },
                "Cc": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "EmailAddress": {
                        "type": "string",
                        "description": "EmailAddress",
                        "title": "EmailAddress"
                      }
                    }
                  },
                  "description": "Cc"
                },
                "Bcc": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "EmailAddress": {
                        "type": "string",
                        "description": "EmailAddress",
                        "title": "EmailAddress"
                      }
                    }
                  },
                  "description": "Bcc"
                },
                "IsResolutionCommunication": {
                  "type": "string",
                  "description": "Boolean to set the Communication Resolution",
                  "title": "IsResolutionCommunication"
                },
                "IsSystemGenerated": {
                  "type": "string",
                  "description": "Boolean to check if mail is system generated",
                  "title": "IsSystemGenerated"
                }
              }
            }
          }
        ]
      }
    },
    "/webapi/PacketCommunication/AddPacketCommunication": {
      "post": {
        "responses": {
          "200": {
            "description": "New communication successfully added to Packet. Returns the new communication.",
            "schema": {
              "$ref": "#/definitions/PacketCommunication"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {packetGUID}."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "400": {
            "description": "Data validation error. Details can be found in Reason header field and response body."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Packet."
          }
        },
        "summary": "AddPacketCommunication",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "PacketGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A unique identifier of the packet",
            "x-ms-summary": "PacketGUID"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "Body": {
                  "type": "string",
                  "description": "Body of the mail",
                  "title": "Body"
                },
                "CommunicationType": {
                  "type": "string",
                  "description": "Type of communication",
                  "title": "CommunicationType"
                },
                "IsResolutionCommunication": {
                  "type": "string",
                  "description": "Boolean to check Communication Resolution",
                  "title": "IsResolutionCommunication"
                },
                "IsSystemGenerated": {
                  "type": "string",
                  "description": "Boolean to check if comunication is SystemGenerated",
                  "title": "IsSystemGenerated"
                }
              }
            }
          }
        ],
        "operationId": "AddPacketCommunication",
        "description": "Action which Writes a new Packet Communication of type note or Self Service comment to the Packet based on the authenticated user type"
      }
    },
    "/webapi/Case/SetToDo": {
      "post": {
        "responses": {
          "200": {
            "description": "Case successfully updated and an updated copy of the Case is in the response body.",
            "schema": {
              "$ref": "#/definitions/ApiResponse[FullCasePacket,PacketValidationMessage]"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {casePacket}.GUID or the Packet \r\n is not a Case."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Case."
          }
        },
        "summary": "SetToDoCase",
        "operationId": "SetToDoCase",
        "description": "Action which will set the status of the case to ToDo",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "GUID": {
                  "type": "string",
                  "description": "A unique identifier",
                  "title": "GUID"
                },
                "Title": {
                  "type": "string",
                  "description": "Title of the case",
                  "title": "Title"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the case",
                  "title": "Description"
                },
                "DataFields": {
                  "type": "object",
                  "properties": {},
                  "description": "DataFields"
                },
                "AffectedRecordCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records affected",
                  "title": "AffectedRecordCount"
                },
                "Files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "FileName": {
                        "type": "string",
                        "description": "FileName of the attachment",
                        "title": "FileName"
                      },
                      "Data": {
                        "type": "string",
                        "description": "File Data of the attachment",
                        "title": "Data"
                      },
                      "Note": {
                        "type": "string",
                        "description": "Note for the file",
                        "title": "Note"
                      },
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Source": {
                        "type": "string",
                        "description": "Source of the file",
                        "title": "Source",
                        "default": "AttachedToPacket"
                      }
                    }
                  },
                  "description": "Files"
                },
                "Contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Retired": {
                        "type": "string",
                        "description": "Boolean to check the status of the tags",
                        "title": "Retired"
                      },
                      "GUID": {
                        "type": "string",
                        "description": "A unique identifier",
                        "title": "GUID"
                      }
                    }
                  },
                  "description": "Contacts"
                }
              },
              "required": [
                "Description",
                "Title"
              ]
            }
          }
        ]
      }
    },
    "/webapi/Action/UpdateChecklist": {
      "post": {
        "responses": {
          "204": {
            "description": "Checklist successfully updated."
          },
          "404": {
            "description": "No Packet can be found with the supplied actionGUID or the Packet is not an Action."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "400": {
            "description": "Data validation error. Details can be found in Reason header field and response body."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Action or it is not currently assigned to them."
          }
        },
        "summary": "UpdateChecklist",
        "operationId": "UpdateChecklist",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [

        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "InstanceName",
            "description": "Instance name of the site"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "AuthToken",
            "description": "Token obtained from authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "GUID": {
                  "type": "string",
                  "description": "A unique identifier to update checklist",
                  "title": "GUID"
                },
                "Decision": {
                  "type": "string",
                  "description": "Decision of the checklist",
                  "title": "Decision",
                  "default": "None"
                },
                "DecisionDescription": {
                  "type": "string",
                  "description": "Decision Description of the checklist",
                  "title": "DecisionDescription"
                },
                "Note": {
                  "type": "string",
                  "description": "Note for the checklist",
                  "title": "Note"
                },
                "PeerReviewNote": {
                  "type": "string",
                  "description": "Peer Review Note for the checklist",
                  "title": "PeerReviewNote"
                }
              },
              "required": [
                "GUID"
              ]
            }
          }
        ],
        "description": "Action which will update an individual checklist item on an Action"
      }
    },
    "/webapi/Packet/AttachFile": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "uuid",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Packet."
          }
        },
        "summary": "AttachFile",
        "operationId": "AttachFile",
        "description": "Action which will attach a file to the packet in the Enate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "PacketGUID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A unique identifier of the packet",
            "x-ms-summary": "PacketGUID"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "string",
                  "description": "File Data of the attachment",
                  "title": "Data"
                },
                "FileName": {
                  "type": "string",
                  "description": "FileName of the attachment",
                  "title": "FileName"
                },
                "Note": {
                  "type": "string",
                  "description": "Note for the file",
                  "title": "Note"
                },
                "Tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "FileTagGUID": {
                        "type": "string",
                        "description": "A unique identifier of the FileTa",
                        "title": "FileTagGUID"
                      }
                    }
                  },
                  "description": "Tags"
                }
              }
            }
          }
        ]
      }
    },
    "/webapi/Ticket/SetToDo": {
      "post": {
        "responses": {
          "200": {
            "description": "Ticket successfully updated and an updated copy of the Ticket is in the response body.",
            "schema": {
              "$ref": "#/definitions/ApiResponse[FullTicketPacket,PacketValidationMessage]"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {ticket}.GUID or the Packet \r\n is not a Ticket."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Ticket."
          }
        },
        "summary": "SetToDoTicket",
        "operationId": "SetToDoTicket",
        "description": "Action which will set the status of the ticket to ToDo",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "GUID": {
                  "type": "string",
                  "description": "A unique identifier",
                  "title": "GUID"
                },
                "Title": {
                  "type": "string",
                  "description": "Title of the ticket",
                  "title": "Title"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the ticket",
                  "title": "Description"
                },
                "DataFields": {
                  "type": "object",
                  "properties": {},
                  "description": "DataFields"
                },
                "SchedulePeriodGUID": {
                  "type": "string",
                  "description": "A unique identifier of SchedulePeriod",
                  "title": "SchedulePeriodGUID"
                },
                "Files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "FileName": {
                        "type": "string",
                        "description": "FileName of the attachment",
                        "title": "FileName"
                      },
                      "Data": {
                        "type": "string",
                        "description": "File Data of the attachment",
                        "title": "Data"
                      },
                      "Note": {
                        "type": "string",
                        "description": "Note for the file",
                        "title": "Note"
                      },
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Source": {
                        "type": "string",
                        "description": "Source of the file",
                        "title": "Source",
                        "default": "AttachedToPacket"
                      }
                    }
                  },
                  "description": "Files"
                },
                "Contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Retired": {
                        "type": "string",
                        "description": "Boolean value to check status of tags",
                        "title": "Retired"
                      },
                      "GUID": {
                        "type": "string",
                        "description": "A unique identifier",
                        "title": "GUID"
                      }
                    }
                  },
                  "description": "Contacts"
                }
              },
              "required": [
                "Description",
                "Title"
              ]
            }
          }
        ]
      }
    },
    "/webapi/Case/SetResolved": {
      "post": {
        "responses": {
          "200": {
            "description": "Case successfully updated and an updated copy of the Case is in the response body.",
            "schema": {
              "$ref": "#/definitions/ApiResponse[FullCasePacket,PacketValidationMessage]"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {casePacket}.GUID or the Packet \r\n is not a Case."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Case."
          }
        },
        "summary": "SetToResolvedCase",
        "operationId": "SetToResolvedCase",
        "description": "Action which resolves a Case where all the Actions and Sub Cases have already completed, but the Case requires manually resolving.",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "GUID": {
                  "type": "string",
                  "description": "A unique identifier",
                  "title": "GUID"
                },
                "Title": {
                  "type": "string",
                  "description": "Title of the case",
                  "title": "Title"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the case",
                  "title": "Description"
                },
                "DataFields": {
                  "type": "object",
                  "properties": {},
                  "description": "DataFields"
                },
                "AffectedRecordCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records affected",
                  "title": "AffectedRecordCount",
                  "default": 1
                },
                "Files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "FileName": {
                        "type": "string",
                        "description": "FileName of the attachment",
                        "title": "FileName"
                      },
                      "Data": {
                        "type": "string",
                        "description": "File Data of the attachment",
                        "title": "Data"
                      },
                      "Note": {
                        "type": "string",
                        "description": "Note for the file",
                        "title": "Note"
                      },
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Source": {
                        "type": "string",
                        "description": "Source of the file",
                        "title": "Source"
                      }
                    }
                  },
                  "description": "Files"
                },
                "Contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Retired": {
                        "type": "string",
                        "description": "Boolean to check the status of tags",
                        "title": "Retired"
                      },
                      "GUID": {
                        "type": "string",
                        "description": "A unique identifier",
                        "title": "GUID"
                      }
                    }
                  },
                  "description": "Contacts"
                }
              },
              "required": [
                "Description",
                "Title"
              ]
            }
          }
        ]
      }
    },
    "/webapi/Ticket/Resolve": {
      "post": {
        "responses": {
          "200": {
            "description": "Ticket successfully updated and an updated copy of the Ticket is in the response body.",
            "schema": {
              "$ref": "#/definitions/ApiResponse[FullTicketPacket,PacketValidationMessage]"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {ticket}.GUID or the Packet \r\n is not a Ticket."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Ticket."
          }
        },
        "summary": "SetToResolvedTicket",
        "operationId": "SetToResolvedTicket",
        "description": "Action which will set the ticket status to resolved",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "TicketCategoryAttribute": {
                  "type": "object",
                  "properties": {
                    "GUID": {
                      "type": "string",
                      "description": "A unique identifier",
                      "title": "GUID"
                    }
                  },
                  "description": "TicketCategoryAttribute"
                },
                "Title": {
                  "type": "string",
                  "description": "Title for the ticket",
                  "title": "Title"
                },
                "Description": {
                  "type": "string",
                  "description": "Description for the ticket",
                  "title": "Description"
                },
                "AffectedRecordCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records affected",
                  "title": "AffectedRecordCount",
                  "default": 1
                },
                "DataFields": {
                  "type": "object",
                  "properties": {},
                  "description": "DataFields"
                },
                "Files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "FileName": {
                        "type": "string",
                        "description": "FileName of the attachment",
                        "title": "FileName"
                      },
                      "Data": {
                        "type": "string",
                        "description": "File Data of the attachment",
                        "title": "Data"
                      },
                      "Note": {
                        "type": "string",
                        "description": "Note for the file",
                        "title": "Note"
                      },
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Source": {
                        "type": "string",
                        "description": "Source of the file",
                        "title": "Source"
                      }
                    }
                  },
                  "description": "Files"
                },
                "Contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Retired": {
                        "type": "string",
                        "description": "Boolean to check the status of the tags",
                        "title": "Retired"
                      },
                      "GUID": {
                        "type": "string",
                        "description": "A unique identifier",
                        "title": "GUID"
                      }
                    }
                  },
                  "description": "Contacts"
                },
                "GUID": {
                  "type": "string",
                  "description": "A unique identifier",
                  "title": "GUID"
                }
              },
              "required": [
                "Description",
                "Title"
              ]
            }
          }
        ]
      }
    },
    "/webapi/Action/ResolveSuccessfully": {
      "post": {
        "responses": {
          "200": {
            "description": "Action successfully updated and an updated copy of the Action is in the response body.",
            "schema": {
              "$ref": "#/definitions/ApiResponse[FullActionPacket,PacketValidationMessage]"
            }
          },
          "404": {
            "description": "No Packet can be found with the supplied {action}.GUID or the Packet \r\n is not a Action."
          },
          "401": {
            "description": "No authentication token supplied. Authentication can be provided in the 'authToken' Query String, 'apikey' HTTP Header or by returning the cookie supplied in the response to the Login method of the Authentication controller."
          },
          "403": {
            "description": "The authenticated user does not have permission to access this Action."
          }
        },
        "summary": "ActionResolveSuccessfully",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "HostUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of the hosted site",
            "x-ms-summary": "HostUrl"
          },
          {
            "name": "InstanceName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Instance name of the site",
            "x-ms-summary": "InstanceName"
          },
          {
            "name": "AuthToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Token obtained from authentication",
            "x-ms-summary": "AuthToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "GUID": {
                  "type": "string",
                  "description": "A unique identifier",
                  "title": "GUID"
                },
                "RobotRejectedReason": {
                  "type": "string",
                  "description": "Reason for rejecting",
                  "title": "RobotRejectedReason"
                },
                "Title": {
                  "type": "string",
                  "description": "Title of the action",
                  "title": "Title"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the action",
                  "title": "Description"
                },
                "AffectedRecordCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records affected",
                  "title": "AffectedRecordCount",
                  "default": 1
                },
                "DataFields": {
                  "type": "object",
                  "properties": {},
                  "description": "DataFields"
                },
                "Files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "FileName": {
                        "type": "string",
                        "description": "FileName of the attachment",
                        "title": "FileName"
                      },
                      "Data": {
                        "type": "string",
                        "description": "File Data of the attachment",
                        "title": "Data"
                      },
                      "Note": {
                        "type": "string",
                        "description": "Note for the file",
                        "title": "Note"
                      },
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Source": {
                        "type": "string",
                        "description": "Source of the file",
                        "title": "Source"
                      }
                    }
                  },
                  "description": "Files"
                },
                "Contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Retired": {
                              "type": "boolean",
                              "description": "Retired"
                            },
                            "GUID": {
                              "type": "string",
                              "description": "GUID"
                            }
                          }
                        },
                        "description": "Tags"
                      },
                      "Retired": {
                        "type": "string",
                        "description": "Boolean values which check the status of tags",
                        "title": "Retired"
                      },
                      "GUID": {
                        "type": "string",
                        "description": "A unique identifier",
                        "title": "GUID"
                      }
                    }
                  },
                  "description": "Contacts"
                }
              },
              "required": [
                "Description",
                "Title"
              ]
            }
          }
        ],
        "operationId": "ActionResolveSuccessfully",
        "description": "Action which resolves an Action after it has been successfully completed."
      }
    }
  },
  "definitions": {
    "FullCasePacket": {
      "description": "All data about a Case Packet.",
      "type": "object",
      "properties": {
        "SchedulePeriodGUID": {
          "format": "uuid",
          "description": "The Schedule Period Unique Identifier.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "EndDate": {
          "format": "date-time",
          "description": "The date/time that the Packet was Closed.",
          "type": "string"
        },
        "CustomerGUID": {
          "format": "uuid",
          "description": "The unique identifier of the Customer that the Packet is for.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ContractGUID": {
          "format": "uuid",
          "description": "The unique identifier of the Contract between the Customer and Supplier that this Packet is transacting under.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ServiceGUID": {
          "format": "uuid",
          "description": "The unique identifier of the Service under the Contract that this Packet is for.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ServiceLineGUID": {
          "format": "uuid",
          "description": "The unique identifier of the Service Line that this Packet is for.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ResolutionMethod": {
          "$ref": "#/definitions/PacketResolutionMethod"
        },
        "ResolvedByUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that resolved the Packet."
        },
        "Files": {
          "description": "The list of Files associated with this group of Packets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExistingPacketFile"
          }
        },
        "Contacts": {
          "description": "The list of Contacts associated with this group of Packets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExistingPacketContact"
          }
        },
        "Defects": {
          "description": "The list of Defects associated with this group of Packets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExistingPacketDefect"
          }
        },
        "StartDate": {
          "format": "date-time",
          "description": "The date/time that the Packet was created.",
          "type": "string"
        },
        "CustomerName": {
          "description": "The name of the Customer that the Packet is for.",
          "type": "string"
        },
        "ContractName": {
          "description": "The name of the Contract between the Customer and Supplier that this Packet is transacting under.",
          "type": "string"
        },
        "ServiceName": {
          "description": "The name of the Service under the Contract that this Packet is for.",
          "type": "string"
        },
        "ServiceLineName": {
          "description": "The name of the Service Line that this Packet is for.",
          "type": "string"
        },
        "ProcessTypeName": {
          "description": "The name of the Process Type within the Service Line that this Packet is for.",
          "type": "string"
        },
        "Reference": {
          "description": "The unique and human-readable reference of the Packet.",
          "type": "string"
        },
        "Title": {
          "description": "The Title of the Packet.",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PacketStatus"
        },
        "LastUpdatedByUserOn": {
          "format": "date-time",
          "description": "The date/time that the Packet was updated by the User identified in <seealso cref=\"P:Enate.Core.Contracts.DTOs.BaseFullPacket.LastUpdatedByUser\" />.",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "The date/time that the Packet is currently due to be Resolved to meet SLA.",
          "type": "string"
        },
        "ResolvedOn": {
          "format": "date-time",
          "description": "The date/time that the Packet was Resolved.",
          "type": "string"
        },
        "StartedByMethod": {
          "$ref": "#/definitions/PacketStartedByMethod"
        },
        "OwnerUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that is currently responsible for the Packet even if it is not currently assigned to them to work on."
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "PacketResolutionMethod": {
      "enum": [
        "CommunicationWithServiceRecipient",
        "CaseLaunched",
        "NoCustomerResponse",
        "SplitIntoMultipleTickets",
        "Merged",
        "AllChildWorkItemsClosed",
        "Cancelled",
        "DoneSuccessfully",
        "NotDoneSuccessfully",
        "CaseCompleted",
        "Rework",
        "Rejected",
        "RejectedAsSpam",
        "RejectedUnconfiguredEmailAddress"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "CommunicationWithServiceRecipient",
          "Value": 0,
          "Description": "Communication with Service Recipient"
        },
        {
          "Name": "CaseLaunched",
          "Value": 1,
          "Description": "New Case launched"
        },
        {
          "Name": "NoCustomerResponse",
          "Value": 2,
          "Description": "No customer response"
        },
        {
          "Name": "SplitIntoMultipleTickets",
          "Value": 3,
          "Description": "Split into multiple Tickets"
        },
        {
          "Name": "Merged",
          "Value": 4,
          "Description": "Merged into another Work Item"
        },
        {
          "Name": "AllChildWorkItemsClosed",
          "Value": 5,
          "Description": "All Child Work Items Closed"
        },
        {
          "Name": "Cancelled",
          "Value": 6,
          "Description": "Cancelled"
        },
        {
          "Name": "DoneSuccessfully",
          "Value": 7,
          "Description": "Done successfully"
        },
        {
          "Name": "NotDoneSuccessfully",
          "Value": 9,
          "Description": "Not done successfully"
        },
        {
          "Name": "CaseCompleted",
          "Value": 11,
          "Description": "Case completed"
        },
        {
          "Name": "Rework",
          "Value": 12,
          "Description": "Rework"
        },
        {
          "Name": "Rejected",
          "Value": 100,
          "Description": "Rejected"
        },
        {
          "Name": "RejectedAsSpam",
          "Value": 101,
          "Description": "Rejected as SPAM"
        },
        {
          "Name": "RejectedUnconfiguredEmailAddress",
          "Value": 102,
          "Description": "Rejected due to no configured email address matching recipient address"
        }
      ]
    },
    "UserForList": {
      "description": "Basic details of a user as shown in Enate GUI.",
      "required": [
        "HasProfilePicture",
        "UserType",
        "IsMe",
        "Retired"
      ],
      "type": "object",
      "properties": {
        "FullName": {
          "description": "Full name of the user.",
          "type": "string"
        },
        "EmailAddress": {
          "description": "Email address of the user.",
          "type": "string"
        },
        "HasProfilePicture": {
          "description": "Does the user have a profile picture available.",
          "type": "boolean"
        },
        "UserType": {
          "$ref": "#/definitions/UserTypes"
        },
        "IsMe": {
          "description": "Identifies if the User represents the currently authenticated User.",
          "type": "boolean",
          "readOnly": true
        },
        "Retired": {
          "description": "Is the object logically deleted.",
          "type": "boolean"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ExistingPacketFile": {
      "description": "Details of a file attached to a Packet either directly or via Email.",
      "required": [
        "Source",
        "FileSize"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseObject"
        }
      ],
      "properties": {
        "Source": {
          "$ref": "#/definitions/PacketFileSource"
        },
        "FileName": {
          "description": "The name of the File.",
          "maxLength": 1024,
          "minLength": 0,
          "type": "string"
        },
        "Note": {
          "description": "A note to describe the File.",
          "type": "string"
        },
        "Tags": {
          "description": "A collection of Tags to attribute to the new File.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExistingPacketFileTag"
          }
        },
        "LastUpdatedOn": {
          "format": "date-time",
          "description": "The date/time that the File was added or had it's metadata updated by the User identified in <seealso cref=\"P:Enate.Core.Contracts.DTOs.ExistingPacketFile.LastUpdatedByUser\" />.",
          "type": "string"
        },
        "LastUpdatedByUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that added the file or most recently updated it's metadata."
        },
        "FileSize": {
          "format": "int32",
          "description": "The size of the file.",
          "type": "integer"
        },
        "Packet": {
          "$ref": "#/definitions/BasicPacket",
          "description": "The Packet that the Email is associated with when {Enate.Core.Contracts.DTOs.ExistingPacketFile.Source} is {Enate.Core.Contracts.Enumerations.PacketFileSource.EmailAttachment}."
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "PacketFileSource": {
      "enum": [
        "AttachedToPacket",
        "EmailAttachment"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "AttachedToPacket",
          "Value": 0,
          "Description": "Attached to Packet"
        },
        {
          "Name": "EmailAttachment",
          "Value": 1,
          "Description": "Attached to an Email"
        }
      ]
    },
    "ExistingPacketContact": {
      "description": "Details of a contact attached to a Packet.",
      "required": [
        "UserRetired",
        "Retired"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/UserForList"
        }
      ],
      "properties": {
        "AddedOn": {
          "format": "date-time",
          "description": "The date/time that the Contact was added by the User identified in <seealso cref=\"P:Enate.Core.Contracts.DTOs.ExistingPacketContact.AddedByUser\" />.",
          "type": "string"
        },
        "AddedByUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that added the Contact."
        },
        "UserRetired": {
          "description": "Is the User logically deleted.",
          "type": "boolean",
          "readOnly": true
        },
        "Retired": {
          "type": "boolean"
        },
        "FullName": {
          "description": "Full name of the user.",
          "type": "string"
        },
        "EmailAddress": {
          "description": "Email address of the user.",
          "type": "string"
        },
        "HasProfilePicture": {
          "description": "Does the user have a profile picture available.",
          "type": "boolean"
        },
        "UserType": {
          "$ref": "#/definitions/UserTypes"
        },
        "IsMe": {
          "description": "Identifies if the User represents the currently authenticated User.",
          "type": "boolean",
          "readOnly": true
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ExistingPacketDefect": {
      "description": "Details of a defect attached to a Packet.",
      "required": [
        "Resolved"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseObject"
        }
      ],
      "properties": {
        "Packet": {
          "$ref": "#/definitions/BasicPacket",
          "description": "The Packet that the Defect is associated with."
        },
        "AddedOn": {
          "format": "date-time",
          "description": "The date/time that the Defect was added by the User identified in <seealso cref=\"P:Enate.Core.Contracts.DTOs.ExistingPacketDefect.AddedByUser\" />.",
          "type": "string"
        },
        "AddedByUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that added the Defect."
        },
        "Description": {
          "description": "A description of the Defect.",
          "type": "string"
        },
        "AffectedRecordCount": {
          "format": "int32",
          "description": "The number of records affected by the Defect.",
          "type": "integer"
        },
        "Resolved": {
          "description": "Indicates if the Defect has been resolved or not.",
          "type": "boolean"
        },
        "LoggedOnStep": {
          "format": "int32",
          "description": "The Step Number the Case was on when the Defect was logged.",
          "type": "integer"
        },
        "DefectPartyAtFaultOption": {
          "$ref": "#/definitions/BasicLocalisedName",
          "description": "The Party that caused the Defect."
        },
        "DefectCategory": {
          "$ref": "#/definitions/DefectCategoryForPacket",
          "description": "The Category of Defect."
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "BasicLocalisedName": {
      "description": "Generic object to return the Name and Description of a related object.",
      "required": [
        "Name"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseObject"
        }
      ],
      "properties": {
        "Name": {
          "description": "Name of the Object.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "DefectCategoryForPacket": {
      "description": "Basic GUID, Name, Description information for a ServiceLine.",
      "required": [
        "Name"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicLocalisedName"
        }
      ],
      "properties": {
        "ParentDefectCategory": {
          "$ref": "#/definitions/DefectCategoryForPacket",
          "description": "The Parent of this Defect Category."
        },
        "Name": {
          "description": "Name of the Object.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "PacketStatus": {
      "enum": [
        "Draft",
        "ToDo",
        "InProgress",
        "Waiting",
        "Resolved",
        "Closed"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "Draft",
          "Value": 0,
          "Description": "Draft"
        },
        {
          "Name": "ToDo",
          "Value": 1,
          "Description": "To do"
        },
        {
          "Name": "InProgress",
          "Value": 2,
          "Description": "In progress"
        },
        {
          "Name": "Waiting",
          "Value": 3,
          "Description": "Waiting"
        },
        {
          "Name": "Resolved",
          "Value": 4,
          "Description": "Resolved"
        },
        {
          "Name": "Closed",
          "Value": 5,
          "Description": "Closed"
        }
      ]
    },
    "PacketStartedByMethod": {
      "enum": [
        "ByWorkflow",
        "ByOperationalUser",
        "BySelfServiceUser",
        "ByRobotUser",
        "ByEmail",
        "FromTicket",
        "ByOperationalUserInBulk",
        "ByRobotUserInBulk",
        "BySchedule"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "ByWorkflow",
          "Value": 0,
          "Description": "An Action or Case started by a Case"
        },
        {
          "Name": "ByOperationalUser",
          "Value": 1,
          "Description": "A Case, Ticket, Sub-Case or Ad-hoc Action started by a User"
        },
        {
          "Name": "BySelfServiceUser",
          "Value": 2,
          "Description": "A Ticket started by a self service user"
        },
        {
          "Name": "ByRobotUser",
          "Value": 3,
          "Description": "A Case, Ticket, Sub-Case or Ad-hoc Action started by a Robot"
        },
        {
          "Name": "ByEmail",
          "Value": 4,
          "Description": "A Case or Ticket started by an email"
        },
        {
          "Name": "FromTicket",
          "Value": 5,
          "Description": "A Case or (split) Ticket started by a User or Robot"
        },
        {
          "Name": "ByOperationalUserInBulk",
          "Value": 6,
          "Description": "A Case or Ticket started in bulk by a User"
        },
        {
          "Name": "ByRobotUserInBulk",
          "Value": 7,
          "Description": "A Case or Ticket started in bulk by a Robot"
        },
        {
          "Name": "BySchedule",
          "Value": 8,
          "Description": "A Case or Ticket started by a Schedule"
        }
      ]
    },
    "UserTypes": {
      "enum": [
        "None",
        "Operational",
        "EmployeeSelfService",
        "Robot"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "None",
          "Value": 0,
          "Description": "None"
        },
        {
          "Name": "Operational",
          "Value": 1,
          "Description": "Operational"
        },
        {
          "Name": "EmployeeSelfService",
          "Value": 2,
          "Description": "Employee Self Service"
        },
        {
          "Name": "Robot",
          "Value": 8,
          "Description": "Robot"
        }
      ]
    },
    "BaseObject": {
      "description": "Base for all Enate DTOs.",
      "required": [
        "GUID"
      ],
      "type": "object",
      "properties": {
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "BasicFileTag": {
      "description": "Abridged version of FullFileTag DTO for use in lists.",
      "required": [
        "Name",
        "IsHidden",
        "Retired"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicLocalisedNameAndDescription"
        }
      ],
      "properties": {
        "IsHidden": {
          "description": "Whether the Files with this tag are hidden from Users. Hidden files are used for integration between systems only.",
          "type": "boolean"
        },
        "Retired": {
          "description": "Is the object logically deleted.",
          "type": "boolean"
        },
        "Description": {
          "description": "Description of the Object.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the Object.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "BasicLocalisedNameAndDescription": {
      "description": "Generic object to return the Name and Description of a related object.",
      "required": [
        "Name"
      ],
      "type": "object",
      "properties": {
        "Description": {
          "description": "Description of the Object.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the Object.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "FullFileTag": {
      "description": "Abridged version of FullFileTag DTO for use in lists.",
      "required": [
        "Name",
        "IsHidden",
        "Retired"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicLocalisedNameAndDescription"
        }
      ],
      "properties": {
        "IsHidden": {
          "description": "Whether the Files with this tag are hidden from Users. Hidden files are used for integration between systems only.",
          "type": "boolean"
        },
        "Retired": {
          "description": "Is the object logically deleted.",
          "type": "boolean"
        },
        "Description": {
          "description": "Description of the Object.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the Object.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ApiResponse[FullFileTag,ConfigurationValidationMessage]": {
      "description": "Used to enable the return of a created/updated object and a list of validation warnings/errors.",
      "type": "object",
      "properties": {
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationValidationMessage"
          }
        },
        "Result": {
          "$ref": "#/definitions/FullFileTag",
          "description": "The created/updated object."
        }
      }
    },
    "ConfigurationValidationMessage": {
      "description": "A validation message that relates to Configuration objects.",
      "required": [
        "RelatedObjectGUID",
        "RelatedObjectType",
        "MessageID"
      ],
      "type": "object",
      "properties": {
        "RelatedObjectGUID": {
          "format": "uuid",
          "description": "The unique identifier of the object that this validation message relates to.",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IsError": {
          "description": "Indicates the severity of this message.",
          "type": "boolean",
          "readOnly": true
        },
        "RelatedObjectType": {
          "$ref": "#/definitions/EnateObjects"
        },
        "MessageID": {
          "$ref": "#/definitions/ConfigurationValidatorMessage"
        },
        "MessageDescription": {
          "description": "Default (en-gb) translation lookup (without parameter replacement).",
          "type": "string",
          "readOnly": true
        },
        "Parameters": {
          "description": "A zero based, integer indexed collection of objects to insert into the MessageDescription.",
          "type": "array",
          "items": {
            "type": "object"
          },
          "readOnly": true
        }
      }
    },
    "ConfigurationValidatorMessage": {
      "enum": [
        "General_UnexpectedFailure",
        "General_NoData",
        "General_GuidMustBeEmpty",
        "General_IsNotInEditableVersionState",
        "General_PacketsExist",
        "General_ObjectUpdatedTimeConflict",
        "General_GlobalUsersFound",
        "General_UserDoesNotHavePermission",
        "General_CannotCreateRetiredObjects",
        "Company_NameIsRequired",
        "Company_NameIsDuplicated",
        "Company_DefaultLanguageIsRequired",
        "Company_DefaultLanguageIsNotValid",
        "Company_CalendarDoesNotExist",
        "Company_CalendarIsRetired",
        "Company_EmployeeSelfServicePortalDoesNotExist",
        "Company_EmployeeSelfServicePortalIsRetired",
        "Company_ParentCompanyDoesNotExist",
        "Company_ParentCompanyIsRetired",
        "Company_ParentCompanyIsAlreadyAChild",
        "Company_SupplierCompanyCanNotBeParent",
        "Company_SupplierCompanyCanNotBeChild",
        "Company_ParentCompanyMustBeCustomer",
        "Company_ParentCompanyCanNotChange",
        "ScheduleStructure_NameIsDuplicated",
        "EmailConnector_NameIsRequired",
        "EmailConnector_UsernameIsRequired",
        "EmailConnector_IncomingServerNameIsRequired",
        "EmailConnector_IncomingServerPortIsRequired",
        "EmailConnector_PrimaryEmailAddressRequired",
        "EmailConnector_OutgoingServerNameIsRequired",
        "EmailConnector_OutgoingServerPortIsRequired",
        "EmailConnector_PrimaryEmailAddressInvalid",
        "EmailConnector_SuccessfulTestRequired",
        "EmailConnector_PrimaryEmailAddressAlreadyInUse",
        "EmailRoute_NameIsRequired",
        "EmailRoute_OrderIsDuplicated",
        "EmailRoute_EmailAddressRequired",
        "EmailRoute_EmailAddressInvalid",
        "EmailRoute_RecipientEmailAddressInvalid",
        "EmailRoute_SenderEmailAddressInvalid",
        "EmailRoute_EmailConnectorDoesNotExist",
        "EmailRoute_EmailConnectorIsRetired",
        "EmailRoute_TicketCategoryAttributeMustHaveLiveOrTestVersion",
        "EmailRoute_TicketCategoryAttributeMustHaveLiveVersion",
        "EmailRoute_CaseAttributeMustHaveLiveOrTestVersion",
        "EmailRoute_CaseAttributeMustHaveLiveVersion",
        "EmailRoute_TicketCategoryAttributeDoesNotExist",
        "EmailRoute_CaseAttributeDoesNotExist",
        "EmailRoute_TicketCategoryIsRequired",
        "EmailRoute_OrderIsRequired",
        "EmailRoute_CannotChangePrimaryEmailAddress",
        "ServiceLine_DoesNotExist",
        "ServiceLine_NameIsRequired",
        "ServiceLine_NameIsDuplicated",
        "ServiceLine_NameIsTooLong",
        "GlobalChecklist_DescriptionIsRequired",
        "GlobalChecklist_OrderInvalid",
        "GlobalChecklist_OrderIsDuplicated",
        "Contract_DoesNotExist",
        "Contract_NameIsDuplicated",
        "Contract_CustomerCompanyDoesNotExist",
        "Contract_CustomerCompanyIsRetired",
        "Contract_CustomerCompanyIsNotOfTypeCustomer",
        "Contract_CustomerCompanyCannotChange",
        "Contract_SupplierCompanyDoesNotExist",
        "Contract_SupplierCompanyIsRetired",
        "Contract_SupplierCompanyIsNotOfTypeSupplier",
        "ContractVersion_ContractDoesNotExist",
        "ContractVersion_ContractIsRetired",
        "Contract_CustomerCompanyCompanyTypeInvalid",
        "Contract_SupplierCompanyCompanyTypeInvalid",
        "LocalChecklist_GlobalChecklistDoesNotExist",
        "LocalChecklist_GlobalChecklistIsRetired",
        "LocalChecklist_GlobalChecklistIsRequired",
        "LocalChecklist_GlobalChecklistMustBeBlank",
        "LocalChecklist_GlobalChecklistMustBeSimilarType",
        "Service_NameIsRequired",
        "Service_NameIsDuplicated",
        "Service_ServiceLineDoesNotExist",
        "Service_ServiceLineIsRetired",
        "Service_NameIsTooLong",
        "Service_ContractDoesNotExist",
        "Service_ContractIsRetired",
        "ContractVersion_DoesNotExist",
        "ContractVersion_CustomerCalendarDoesNotExist",
        "ContractVersion_CustomerCalendarIsRetired",
        "ContractVersion_SupplierCalendarDoesNotExist",
        "ContractVersion_SupplierCalendarIsRetired",
        "ContractVersion_DefaultLanguageIsRequired",
        "ContractVersion_DefaultLanguageIsNotValid",
        "ContractVersion_TeamIsTooLong",
        "ContractVersion_TimeZoneIsRequired",
        "ContractVersion_TimeZoneIsNotValid",
        "ContractVersion_WorkingHoursInADayIsRequired",
        "ContractVersion_MultipleVersionsExist",
        "ContractVersion_TooManyWorkingHoursInADay",
        "ContractVersion_ContractInUse",
        "FixedFrequencySchedule_NameIsDuplicated",
        "FixedFrequencySchedule_DaysOrLastDayOfMonthRequired",
        "FixedFrequencySchedule_FrequencyOutOfRange",
        "FixedFrequencySchedule_ScheduleOutOfRange",
        "FixedFrequencySchedule_HourFilterInvalidForDailySchedule",
        "FixedFrequencySchedule_DayFilterInvalidForWeeklySchedule",
        "FixedFrequencySchedule_HourFilterInvalidForWeeklySchedule",
        "FixedFrequencySchedule_DayFilterInvalidForMonthlySchedule",
        "FixedFrequencySchedule_HourFilterInvalidFoMonthlySchedule",
        "FixedFrequencySchedule_DayFilterInvalidForDaysOfMonthSchedule",
        "FixedFrequencySchedule_HourFilterInvalidForDaysOfMonthSchedule",
        "FixedFrequencySchedule_NoCasesToStart",
        "Schedule_NameIsDuplicated",
        "Schedule_PeriodNameIsRequired",
        "Schedule_PeriodStartDateIsRequired",
        "User_EmailAddressRequired",
        "User_EmailAddressInvalid",
        "User_CompanyIsRequired",
        "User_UserHasMultipleCompanies",
        "User_UserHasAnotherCompany",
        "User_UserCannotBeMappedToACompany",
        "User_UserAlreadyExists",
        "User_CompanyChangeNotSupported",
        "UserGroup_DoesNotExist",
        "UserGroup_NameIsRequired",
        "UserGroup_NameIsDuplicated",
        "UserGroup_NameIsTooLong",
        "DataDictionaryTable_SafeNamesIsDuplicated",
        "DataDictionaryTable_SafeNameCannotChange",
        "DataDictionary_SafeNamesIsDuplicated",
        "DataDictionary_SafeNameCannotChange",
        "DataDictionary_DataTypeCannotChange",
        "DataDictionary_ShortCodeIsTooLong",
        "DataDictionary_ShortCodeIsInvalid",
        "DataDictionary_ShortCodeIsReserved",
        "DataDictionary_ShortCodeIsDuplicated",
        "ContactTag_DoesNotExist",
        "ContactTag_NameIsRequired",
        "ContactTag_NameIsDuplicated",
        "ContactTag_SupplierCompanyDoesNotExist",
        "ContactTag_SupplierCompanyIsRetired",
        "ContactTag_SupplierCompanyIsNotOfTypeSupplier",
        "ContactTag_SupplierCompanyCannotChange",
        "ContactTag_NameIsTooLong",
        "ContactTag_CannotModifySystemDefault",
        "CaseAttribute_DoesNotExist",
        "CaseAttribute_ServiceDoesNotExist",
        "CaseAttribute_ServiceCannotChange",
        "CaseAttribute_CaseTypeDoesNotExist",
        "CaseAttribute_CaseTypeIsRetired",
        "CaseAttribute_CaseTypeAlreadyExistsInService",
        "CaseAttribute_CaseTypeInDifferentServiceLineToService",
        "CaseAttribute_CaseTypeCannotChange",
        "CaseType_DoesNotExist",
        "CaseType_NameIsRequired",
        "CaseType_NameIsDuplicated",
        "CaseType_ServiceLineDoesNotExist",
        "CaseType_ServiceLineIsRetired",
        "CaseType_ServiceLineCannotChange",
        "CaseAttribute_ServiceIsRetired",
        "CaseType_NameIsTooLong",
        "CaseType_ProcessGroupIsTooLong",
        "ActionType_DoesNotExist",
        "ActionType_NameIsRequired",
        "ActionType_NameIsDuplicated",
        "ActionType_ServiceLineDoesNotExist",
        "ActionType_ServiceLineIsRetired",
        "ActionType_ServiceLineCannotChange",
        "ActionType_NameIsTooLong",
        "TicketType_DoesNotExist",
        "TicketType_NameIsRequired",
        "TicketType_NameIsDuplicated",
        "TicketType_ServiceLineDoesNotExist",
        "TicketType_ServiceLineIsRetired",
        "TicketType_ServiceLineCannotChange",
        "TicketAttribute_ServiceIsRetired",
        "TicketAttribute_TicketTypeIsRetired",
        "TicketType_NameIsTooLong",
        "TicketType_ProcessGroupIsTooLong",
        "TicketAttribute_DoesNotExist",
        "TicketAttribute_ServiceDoesNotExist",
        "TicketAttribute_ServiceCannotChange",
        "TicketAttribute_TicketTypeDoesNotExist",
        "TicketAttribute_TicketTypeAlreadyExistsInService",
        "TicketAttribute_TicketTypeInDifferentServiceLineToService",
        "TicketAttribute_TicketTypeCannotChange",
        "Calendar_NameIsRequired",
        "Calendar_NameIsDuplicated",
        "Calendar_TimeZoneIsRequired",
        "CalendarException_DateIsRequired",
        "CaseStep_NameIsRequired",
        "CaseStep_NameIsDuplicated",
        "CaseStep_NameIsTooLong",
        "CaseStep_MilestoneInvalid",
        "CaseStep_StepNumberInvalid",
        "CaseStep_StepNumberIsDuplicated",
        "TicketCategoryAttribute_FeedbackWindowDaysMustBeZeroOrPositiveNumber",
        "TicketCategoryAttribute_OutboundEmailAddressIsRequired",
        "TicketCategoryAttribute_OutboundEmailAddressIsTooLong",
        "TicketCategoryAttribute_EstimatedDurationMustBePositiveNumber",
        "TicketCategoryAttribute_TicketCategoryDoesNotExist",
        "TicketCategoryAttribute_TicketCategoryIsRetired",
        "TicketCategoryAttribute_TicketCategoryCannotChange",
        "TicketCategoryAttribute_TicketCategoryHasChildLevels",
        "TicketCategoryAttribute_TicketCategoryDuplicated",
        "TicketCategoryAttribute_TicketCategoryInDifferentServiceLine",
        "TicketCategoryAttribute_DueDateAttributeIsRequired",
        "TicketCategoryAttribute_DueDateAttributeDoesNotExist",
        "TicketCategoryAttribute_DueDateAttributeIsNotValid",
        "TicketCategoryAttribute_DueDateAttributeRequiresContractWithCustomerCalendar",
        "TicketCategoryAttribute_DueDateAttributeRequiresContractWithSupplierCalendar",
        "TicketCategoryAttribute_DueDateAttributeNotValidForProcessType",
        "TicketCategoryAttribute_DueDateAttributeRequiresDataDictionaryOnCard",
        "TicketCategoryAttribute_AllocationAttributeIsRequired",
        "TicketCategoryAttribute_AllocationAttributeDoesNotExist",
        "TicketCategoryAttribute_AllocationAttributeIsNotValid",
        "TicketCategoryAttribute_AllocationAttributeRequiresDataDictionaryOnCard",
        "TicketCategoryAttribute_AllocationAttributeRequiresContractWithTeam",
        "TicketCategoryAttribute_ContactTagDoesNotExist",
        "TicketCategoryAttribute_ContactTagIsRetired",
        "TicketCategoryAttribute_CannotUseSameAddressForFromAndBCC",
        "TicketCategoryAttribute_AllocationAttributeNotValidForProcessType",
        "DueDateAttribute_DoesNotExist",
        "DueDateAttribute_NameIsRequired",
        "DueDateAttribute_NameIsDuplicated",
        "DueDateAttribute_NextWorkingMomentAndUseEndOfDayForCalculationMutuallyExclusive",
        "DueDateAttribute_InUseByLiveConfiguration",
        "DueDateAttribute_NameIsTooLong",
        "DueDateAttribute_CalendarIsRequired",
        "DueDateAttribute_CalendarDoesNotExist",
        "DueDateAttribute_CalendarIsRetired",
        "DueDateAttribute_DataDictionaryIsRequired",
        "DueDateAttribute_DataDictionaryDoesNotExist",
        "DueDateAttribute_DataDictionaryIsRetired",
        "DueDateAttribute_DataDictionaryIsWrongDataType",
        "DueDateAttribute_TargetDurationDataDictionaryDoesNotExist",
        "DueDateAttribute_TargetDurationDataDictionaryIsRetired",
        "DueDateAttribute_TargetDurationDataDictionaryIsWrongDataType",
        "DueDateAttribute_ScheduleStructureDateIsRequired",
        "DueDateAttribute_ScheduleStructureDateDoesNotExist",
        "DueDateAttribute_ScheduleStructureDateIsRetired",
        "DueDateAttribute_DayOfMonthIsRequired",
        "DueDateAttribute_DayOfMonthInvalid",
        "DueDateAttribute_MonthOfYearIsRequired",
        "DueDateAttribute_MonthOfYearInvalid",
        "DueDateAttribute_CalendarTypeIsRequired",
        "DueDateAttribute_CalendarMustBeBlank",
        "DueDateAttribute_TargetDurationUnitInvalid",
        "DueDateAttribute_CannotChangeFieldWhenInLiveUse",
        "DueDateAttribute_DueDateCalculationMethodInvalid",
        "AllocationAttribute_DoesNotExist",
        "AllocationAttribute_NameIsRequired",
        "AllocationAttribute_NameIsDuplicated",
        "AllocationAttribute_InUseByLiveConfiguration",
        "AllocationAttribute_NameIsTooLong",
        "AllocationAttribute_QueueIsRequired",
        "AllocationAttribute_QueueDoesNotExist",
        "AllocationAttribute_QueueIsRetired",
        "AllocationAttribute_PrimaryAllocationActionTypeIsRequired",
        "AllocationAttribute_PrimaryAllocationActionTypeDoesNotExist",
        "AllocationAttribute_PrimaryAllocationActionTypeIsRetired",
        "AllocationAttribute_PrimaryAllocationPositionIsRequired",
        "AllocationAttribute_PrimaryAllocationPositionDoesNotExist",
        "AllocationAttribute_PrimaryAllocationPositionIsRetired",
        "AllocationAttribute_PrimaryAllocationDataDictionaryIsRequired",
        "AllocationAttribute_PrimaryAllocationDataDictionaryDoesNotExist",
        "AllocationAttribute_PrimaryAllocationDataDictionaryIsRetired",
        "AllocationAttribute_PrimaryAllocationDataDictionaryIsWrongDataType",
        "AllocationAttribute_SecondaryAllocationActionTypeIsRequired",
        "AllocationAttribute_SecondaryAllocationActionTypeDoesNotExist",
        "AllocationAttribute_SecondaryAllocationActionTypeIsRetired",
        "AllocationAttribute_SecondaryAllocationPositionIsRequired",
        "AllocationAttribute_SecondaryAllocationPositionDoesNotExist",
        "AllocationAttribute_SecondaryAllocationPositionIsRetired",
        "AllocationAttribute_SecondaryAllocationDataDictionaryIsRequired",
        "AllocationAttribute_SecondaryAllocationDataDictionaryDoesNotExist",
        "AllocationAttribute_SecondaryAllocationDataDictionaryIsRetired",
        "AllocationAttribute_SecondaryAllocationDataDictionaryIsWrongDataType",
        "AllocationAttribute_CannotChangeFieldWhenInLiveUse",
        "TicketCategory_NameIsDuplicated",
        "TicketCategory_ServiceLineDoesNotExist",
        "TicketCategory_ServiceLineIsRetired",
        "TicketCategory_ServiceLineCannotChange",
        "TicketCategory_ParentCannotChange",
        "TicketCategory_TooManyLevels",
        "TicketCategory_ParentDoesNotExist",
        "TicketCategory_ParentIsRetired",
        "CaseAttributeVersion_MainCardDoesNotExist",
        "CaseAttributeVersion_MainCardIsRetired",
        "CaseAttributeVersion_MainCardIsOfTypeSelfService",
        "CaseAttributeVersion_SideCardDoesNotExist",
        "CaseAttributeVersion_SideCardIsRetired",
        "CaseAttributeVersion_SideCardIsOfTypeSelfService",
        "CaseAttributeVersion_OutboundEmailAddressIsRequired",
        "CaseAttributeVersion_OutboundEmailAddressIsTooLong",
        "CaseAttributeVersion_DueDateAttributeIsRequired",
        "CaseAttributeVersion_DueDateAttributeDoesNotExist",
        "CaseAttributeVersion_DueDateAttributeIsNotValid",
        "CaseAttributeVersion_DueDateAttributeRequiresContractWithCustomerCalendar",
        "CaseAttributeVersion_DueDateAttributeRequiresContractWithSupplierCalendar",
        "CaseAttributeVersion_DueDateAttributeNotValidForProcessType",
        "CaseAttributeVersion_DueDateAttributeRequiresDataDictionaryOnCard",
        "CaseAttributeVersion_DueDateAttributeMustLinkToSpecificScheduleStructure",
        "CaseAttributeVersion_AllocationAttributeIsRequired",
        "CaseAttributeVersion_AllocationAttributeDoesNotExist",
        "CaseAttributeVersion_AllocationAttributeIsNotValid",
        "CaseAttributeVersion_AllocationAttributeRequiresDataDictionaryOnCard",
        "CaseAttributeVersion_AllocationAttributeRequiresContractWithTeam",
        "CaseAttributeVersion_RecordCountMustBePositiveInteger",
        "CaseAttributeVersion_ScheduleIsRequired",
        "CaseAttributeVersion_ScheduleDoesNotExist",
        "CaseAttributeVersion_ScheduleIsRetired",
        "CaseAttributeVersion_SOPURLTooLong",
        "CaseAttributeVersion_DaysToKeepOpenAfterCompletedMustBePositiveNumberOrZero",
        "CaseAttributeVersion_DueDateAttributeMustLinkToScheduleDate",
        "CaseAttributeVersion_ActionAttributeInDifferentServiceLineToCase",
        "CaseAttributeVersion_DueDateAttributeAllStepsMustLinkToScheduleDate",
        "CaseAttributeVersion_EmailTemplateDoesNotExist",
        "CaseAttributeVersion_EmailTemplateIsRetired",
        "CaseAttributeVersion_EmailTemplatePurposeIsNotGeneral",
        "CaseAttributeVersion_InvalidCaseCondition",
        "CaseAttributeVersion_CaseStepScheduleStructureDateDoesNotExist",
        "CaseAttributeVersion_CaseStepScheduleStructureDateIsRetired",
        "CaseAttributeVersion_SideCardMustBeDifferentToMainCard",
        "CaseAttributeVersion_CaseStepDoesNotExist",
        "CaseAttributeVersion_CaseStepScheduleStructureDateAlreadyExists",
        "CaseAttributeVersion_CaseStepScheduleStructureStepCannotChange",
        "CaseAttributeVersion_CaseStepIsRetired",
        "CaseAttributeVersion_ContactTagDoesNotExist",
        "CaseAttributeVersion_ContactTagIsRetired",
        "CaseAttributeVersion_CannotUseSameAddressForFromAndTo",
        "CaseAttributeVersion_CannotUseSameAddressForFromAndCC",
        "CaseAttributeVersion_CannotUseSameAddressForFromAndBCC",
        "CaseAttributeVersion_AllocationAttributeNotValidForProcessType",
        "ActionAttribute_MainCardDoesNotExist",
        "ActionAttribute_MainCardIsRetired",
        "ActionAttribute_MainCardIsOfTypeSelfService",
        "ActionAttribute_SideCardDoesNotExist",
        "ActionAttribute_SideCardIsRetired",
        "ActionAttribute_SideCardIsOfTypeSelfService",
        "ActionAttribute_DueDateAttributeIsRequired",
        "ActionAttribute_DueDateAttributeDoesNotExist",
        "ActionAttribute_DueDateAttributeIsNotValid",
        "ActionAttribute_DueDateAttributeRequiresContractWithCustomerCalendar",
        "ActionAttribute_DueDateAttributeRequiresContractWithSupplierCalendar",
        "ActionAttribute_DueDateAttributeNotValidForProcessType",
        "ActionAttribute_DueDateAttributeRequiresDataDictionaryOnCard",
        "ActionAttribute_DueDateAttributeMustLinkToSpecificScheduleStructure",
        "ActionAttribute_AllocationAttributeIsRequired",
        "ActionAttribute_AllocationAttributeDoesNotExist",
        "ActionAttribute_AllocationAttributeIsNotValid",
        "ActionAttribute_AllocationAttributeRequiresDataDictionaryOnCard",
        "ActionAttribute_AllocationAttributeRequiresContractWithTeam",
        "ActionAttribute_DueDateAttributeStepMustLinkToScheduleDate",
        "ActionAttribute_StepNumberIsRequired",
        "ActionAttribute_PreviousActionAttributeDoesNotExist",
        "ActionAttribute_PreviousActionAttributeIsRetired",
        "ActionAttribute_ResponseEmailFromIsRequired",
        "ActionAttribute_ResponseEmailFromTooLong",
        "ActionAttribute_EmailToIsRequired",
        "ActionAttribute_ActionGeneralAttributeIsRequired",
        "ActionAttribute_ActionGeneralAttributeIsRetired",
        "ActionAttribute_ActionGeneralAttributeDoesNotExist",
        "ActionAttribute_DueDateAttributeAllStepsMustLinkToScheduleDate",
        "ActionAttribute_PeerReviewDueDateAttributeMustBeEmpty",
        "ActionAttribute_PeerReviewAllocationAttributeMustBeEmpty",
        "ActionAttribute_PeerReviewDueDateAttributeIsRequired",
        "ActionAttribute_PeerReviewDueDateAttributeDoesNotExist",
        "ActionAttribute_PeerReviewDueDateAttributeIsNotValid",
        "ActionAttribute_PeerReviewDueDateAttributeRequiresContractWithCustomerCalendar",
        "ActionAttribute_PeerReviewDueDateAttributeRequiresContractWithSupplierCalendar",
        "ActionAttribute_PeerReviewDueDateAttributeNotValidForProcessType",
        "ActionAttribute_PeerReviewDueDateAttributeRequiresDataDictionaryOnCard",
        "ActionAttribute_PeerReviewDueDateAttributeMustLinkToSpecificScheduleStructure",
        "ActionAttribute_PeerReviewDueDateAttributeStepMustLinkToScheduleDate",
        "ActionAttribute_PeerReviewDueDateAttributeAllStepsMustLinkToScheduleDate",
        "ActionAttribute_PeerReviewAllocationAttributeIsRequired",
        "ActionAttribute_PeerReviewAllocationAttributeDoesNotExist",
        "ActionAttribute_PeerReviewAllocationAttributeIsNotValid",
        "ActionAttribute_PeerReviewAllocationAttributeRequiresDataDictionaryOnCard",
        "ActionAttribute_PeerReviewAllocationAttributeRequiresContractWithTeam",
        "ActionAttribute_AbbyyPlatformIsRequired",
        "ActionAttribute_AbbyyProjectIsRequired",
        "ActionAttribute_AbbyyPlatformMustBeEmpty",
        "ActionAttribute_AbbyyProjectMustBeEmpty",
        "ActionAttribute_AbbyyFileTagMustBeEmpty",
        "ActionAttribute_AbbyyOutputFileTagMustBeEmpty",
        "ActionAttribute_PreviousCaseConditionOutputAttributeDoesNotExist",
        "ActionAttribute_PreviousCaseConditionOutputAttributeIsRetired",
        "ActionAttribute_EmailTemplateDoesNotExist",
        "ActionAttribute_EmailTemplateIsRetired",
        "ActionAttribute_EmailTemplatePurposeNotGeneral",
        "ActionAttribute_WebApiIntegrationUrlIsRequired",
        "ActionAttribute_WebApiIntegrationUrlMustBeBlank",
        "ActionAttribute_WebApiIntegrationUrlIsNotValid",
        "ActionAttribute_DuplicateOrderWithinStep",
        "ActionAttribute_StartOrWaitCaseMustHaveLiveVersion",
        "ActionAttribute_StartOrWaitCaseMustHaveLiveOrTestVersion",
        "ActionAttribute_StartOrWaitCaseAttributeDoesNotExist",
        "ActionAttribute_StartOrWaitCaseAttributeIsRetired",
        "ActionAttribute_SideCardMustBeDifferentToMainCard",
        "ActionAttribute_ActionGeneralAttributeActionTypeMismatch",
        "ActionAttribute_StepNumberDoesNotExistInCaseType",
        "ActionAttribute_CaseStepMismatch",
        "ActionAttribute_StartOrWaitCaseIsRequired",
        "ActionAttribute_StartOrWaitCaseAttributeMustNotBeSelf",
        "ActionAttribute_ContactTagDoesNotExist",
        "ActionAttribute_ContactTagIsRetired",
        "ActionAttribute_PeerReviewLocalChecklistMustBeEmpty",
        "ActionAttribute_AbbyyPlatformDoesNotExist",
        "ActionAttribute_AbbyyPlatformIsRetired",
        "ActionAttribute_AbbyyProjectDoesNotExist",
        "ActionAttribute_AbbyyProjectIsRetired",
        "ActionAttribute_AbbyyFileTagDoesNotExist",
        "ActionAttribute_AbbyyFileTagIsRetired",
        "ActionAttribute_AbbyyOutputFileTagDoesNotExist",
        "ActionAttribute_AbbyyOutputFileTagIsRetired",
        "ActionAttribute_StartOrWaitCaseAttributeUsesDifferentSchedule",
        "ActionAttribute_CannotUseSameAddressForFromAndTo",
        "ActionAttribute_CannotUseSameAddressForFromAndCC",
        "ActionAttribute_CannotUseSameAddressForFromAndBCC",
        "ActionAttribute_WebApiIntegrationResponseWindowMustBePositiveInteger",
        "ActionAttribute_WebApiIntegrationResponseWindowMustBlank",
        "ActionAttribute_AllocationAttributeNotValidForProcessType",
        "ActionAttribute_PeerReviewAllocationAttributeNotValidForProcessType",
        "ActionGeneralAttribute_DoesNotExist",
        "ActionGeneralAttribute_NameIsRequired",
        "ActionGeneralAttribute_NameIsDuplicated",
        "ActionGeneralAttribute_InUseByLiveConfiguration",
        "ActionGeneralAttribute_NameIsTooLong",
        "ActionGeneralAttribute_SOPURLIsTooLong",
        "ActionGeneralAttribute_ActionTypeCannotChange",
        "ActionGeneralAttribute_CannotChangeFieldWhenInLiveUse",
        "TicketAttributeVersion_MainCardDoesNotExist",
        "TicketAttributeVersion_MainCardIsRetired",
        "TicketAttributeVersion_MainCardIsOfTypeSelfService",
        "TicketAttributeVersion_SideCardDoesNotExist",
        "TicketAttributeVersion_SideCardIsRetired",
        "TicketAttributeVersion_SideCardIsOfTypeSelfService",
        "TicketAttributeVersion_SelfServiceCardDoesNotExist",
        "TicketAttributeVersion_SelfServiceCardIsRetired",
        "TicketAttributeVersion_SelfServiceCardIsNotOfTypeSelfService",
        "TicketAttributeVersion_TicketLoggedEmailTemplateDoesNotExist",
        "TicketAttributeVersion_TicketLoggedEmailTemplateIsRetired",
        "TicketAttributeVersion_TicketLoggedEmailTemplateNotOfTypeTicketLogged",
        "TicketAttributeVersion_TicketSplitEmailTemplateDoesNotExist",
        "TicketAttributeVersion_TicketSplitEmailTemplateIsRetired",
        "TicketAttributeVersion_TicketSplitEmailTemplateNotOfTypeTicketSplit",
        "TicketAttributeVersion_TicketRejectedEmailTemplateDoesNotExist",
        "TicketAttributeVersion_TicketRejectedEmailTemplateIsRetired",
        "TicketAttributeVersion_TicketRejectedEmailTemplateNotOfTypeTicketRejected",
        "TicketAttributeVersion_TicketLaunchedCaseEmailTemplateDoesNotExist",
        "TicketAttributeVersion_TicketLaunchedCaseEmailTemplateIsRetired",
        "TicketAttributeVersion_TicketLaunchedCaseEmailTemplateNotOfTypeTicketLaunchedCase",
        "TicketAttributeVersion_TicketNoResponseEmailTemplateDoesNotExist",
        "TicketAttributeVersion_TicketNoResponseEmailTemplateIsRetired",
        "TicketAttributeVersion_TicketNoResponseEmailTemplateNotOfTypeTicketNoResponse",
        "TicketAttributeVersion_FeedbackFooterEmailTemplateDoesNotExist",
        "TicketAttributeVersion_FeedbackFooterEmailTemplateIsRetired",
        "TicketAttributeVersion_FeedbackFooterEmailTemplateNotOfTypeFeedbackFooter",
        "TicketAttributeVersion_DefaultAdHocEmailTemplateDoesNotExist",
        "TicketAttributeVersion_DefaultAdHocEmailTemplateIsRetired",
        "TicketAttributeVersion_DefaultAdHocEmailTemplateNotOfTypeGeneral",
        "TicketAttributeVersion_SideCardMustBeDifferentToMainCard",
        "TicketAttributeVersion_OneOrMoreCategoriesRequired",
        "TicketAttributeVersion_TooManyTicketCategories",
        "DefectCategory_NameIsRequired",
        "DefectCategory_NameIsDuplicated",
        "DefectCategory_NameIsTooLong",
        "DefectPartyAtFaultOption_NameIsRequired",
        "DefectPartyAtFaultOption_NameIsDuplicated",
        "FileTag_DoesNotExist",
        "FileTag_NameIsRequired",
        "FileTag_NameIsDuplicated",
        "FileTag_NameIsTooLong",
        "AbbyyPlatform_NameIsRequired",
        "AbbyyPlatform_NameIsDuplicated",
        "AbbyyPlatform_UrlIsRequired",
        "AbbyyPlatform_UrlIsNotValid",
        "AbbyyPlatform_UrlIsTooLong",
        "AbbyyPlatform_UsernameIsRequired",
        "AbbyyPlatform_PasswordIsRequired",
        "CaseConditionAttribute_NameIsRequired",
        "CaseConditionAttribute_ExpressionIsRequired",
        "CaseConditionAttribute_ExactlyOneElseIsRequired",
        "CaseConditionAttribute_External",
        "CaseConditionAttribute_MustNotBeFirstCondition",
        "CaseConditionOutputAttribute_NameIsRequired",
        "CannedResponse_EmailTemplateAlreadyExists",
        "WebHookSubscription_FilterObjectTypeIsRequired",
        "WebHookSubscription_WebHookIsRequired",
        "WebHookSubscription_SubscriberURLIsRequired",
        "WebHookSubscription_URLIsNotValid",
        "WebHookSubscription_WebHookDoesNotExist",
        "WebHookSubscription_CreatedByAnotherUser",
        "InvalidIntegrationRobotFarmProcessGUID",
        "WebHookSubscription_AlreadyExists"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "General_UnexpectedFailure",
          "Value": 100,
          "Description": "Unexpected failure during validation. This has been logged as incident {0}."
        },
        {
          "Name": "General_NoData",
          "Value": 101,
          "Description": "No data supplied."
        },
        {
          "Name": "General_GuidMustBeEmpty",
          "Value": 102,
          "Description": "GUID in field '{0}' must be omitted or empty."
        },
        {
          "Name": "General_IsNotInEditableVersionState",
          "Value": 103,
          "Description": "Not in an editable Version State (Draft or Testing)."
        },
        {
          "Name": "General_PacketsExist",
          "Value": 104,
          "Description": "One or more Packets exist."
        },
        {
          "Name": "General_ObjectUpdatedTimeConflict",
          "Value": 105,
          "Description": "The Updated time of Object is not matching. The Last Update was at {0}"
        },
        {
          "Name": "General_GlobalUsersFound",
          "Value": 106,
          "Description": "Cannot change scope to Local '{0}' Global users exist. All users must have a Company value before scope change can be completed."
        },
        {
          "Name": "General_UserDoesNotHavePermission",
          "Value": 107,
          "Description": "User with GUID '{0}' does not have the required permission to access the '{1}' with the GUID '{2}'."
        },
        {
          "Name": "General_CannotCreateRetiredObjects",
          "Value": 108,
          "Description": "Can not create retired objects."
        },
        {
          "Name": "Company_NameIsRequired",
          "Value": 31001,
          "Description": "Name is required."
        },
        {
          "Name": "Company_NameIsDuplicated",
          "Value": 31002,
          "Description": "Company name is duplicated."
        },
        {
          "Name": "Company_DefaultLanguageIsRequired",
          "Value": 31084,
          "Description": "Default Language is required."
        },
        {
          "Name": "Company_DefaultLanguageIsNotValid",
          "Value": 31085,
          "Description": "Default Language is not valid."
        },
        {
          "Name": "Company_CalendarDoesNotExist",
          "Value": 31179,
          "Description": "Calendar '{0}' does not exist."
        },
        {
          "Name": "Company_CalendarIsRetired",
          "Value": 31180,
          "Description": "Calendar '{0}' is retired."
        },
        {
          "Name": "Company_EmployeeSelfServicePortalDoesNotExist",
          "Value": 31262,
          "Description": "Employee Self Service Portal '{0}' does not exist."
        },
        {
          "Name": "Company_EmployeeSelfServicePortalIsRetired",
          "Value": 31263,
          "Description": "Employee Self Service Portal '{0}' is retired."
        },
        {
          "Name": "Company_ParentCompanyDoesNotExist",
          "Value": 31264,
          "Description": "Company '{0}' does not exist."
        },
        {
          "Name": "Company_ParentCompanyIsRetired",
          "Value": 31265,
          "Description": "Company '{0}' is retired."
        },
        {
          "Name": "Company_ParentCompanyIsAlreadyAChild",
          "Value": 31266,
          "Description": "Multi-level company hierarchy not supported. Company '{0}' is already a child."
        },
        {
          "Name": "Company_SupplierCompanyCanNotBeParent",
          "Value": 31267,
          "Description": "Parent companies can not be suppliers."
        },
        {
          "Name": "Company_SupplierCompanyCanNotBeChild",
          "Value": 31268,
          "Description": "Child companies can not be suppliers."
        },
        {
          "Name": "Company_ParentCompanyMustBeCustomer",
          "Value": 31269,
          "Description": "Parent companies must be type 'Customer'."
        },
        {
          "Name": "Company_ParentCompanyCanNotChange",
          "Value": 31270,
          "Description": "Parent company can not be changed."
        },
        {
          "Name": "ScheduleStructure_NameIsDuplicated",
          "Value": 92002,
          "Description": "Schedule Structure with Name '{0}' already exists."
        },
        {
          "Name": "EmailConnector_NameIsRequired",
          "Value": 95001,
          "Description": "Name is required."
        },
        {
          "Name": "EmailConnector_UsernameIsRequired",
          "Value": 95241,
          "Description": "Username is required."
        },
        {
          "Name": "EmailConnector_IncomingServerNameIsRequired",
          "Value": 95271,
          "Description": "Incoming server name is required."
        },
        {
          "Name": "EmailConnector_IncomingServerPortIsRequired",
          "Value": 95272,
          "Description": "Incoming server port is required."
        },
        {
          "Name": "EmailConnector_PrimaryEmailAddressRequired",
          "Value": 95273,
          "Description": "Primary email address is required."
        },
        {
          "Name": "EmailConnector_OutgoingServerNameIsRequired",
          "Value": 95274,
          "Description": "Outgoing server name is required."
        },
        {
          "Name": "EmailConnector_OutgoingServerPortIsRequired",
          "Value": 95275,
          "Description": "Outgoing server port is required."
        },
        {
          "Name": "EmailConnector_PrimaryEmailAddressInvalid",
          "Value": 95276,
          "Description": "Primary email address is not a valid email address."
        },
        {
          "Name": "EmailConnector_SuccessfulTestRequired",
          "Value": 95277,
          "Description": "Email connector has not been tested successfully."
        },
        {
          "Name": "EmailConnector_PrimaryEmailAddressAlreadyInUse",
          "Value": 95278,
          "Description": "Primary Email Address already exists as a Email Route for another connector."
        },
        {
          "Name": "EmailRoute_NameIsRequired",
          "Value": 96001,
          "Description": "Name is required."
        },
        {
          "Name": "EmailRoute_OrderIsDuplicated",
          "Value": 96154,
          "Description": "Route order must be unique between routes on this email connector."
        },
        {
          "Name": "EmailRoute_EmailAddressRequired",
          "Value": 96245,
          "Description": "Email Address is required."
        },
        {
          "Name": "EmailRoute_EmailAddressInvalid",
          "Value": 96246,
          "Description": "One or more Email Address is not * or a valid email address."
        },
        {
          "Name": "EmailRoute_RecipientEmailAddressInvalid",
          "Value": 96279,
          "Description": "One or more Recipient Address is not a valid email address."
        },
        {
          "Name": "EmailRoute_SenderEmailAddressInvalid",
          "Value": 96280,
          "Description": "One or more Sender Address is not a valid email address."
        },
        {
          "Name": "EmailRoute_EmailConnectorDoesNotExist",
          "Value": 96281,
          "Description": "Email Connector '{0}' does not exist."
        },
        {
          "Name": "EmailRoute_EmailConnectorIsRetired",
          "Value": 96282,
          "Description": "Email Connector '{0}' is retired."
        },
        {
          "Name": "EmailRoute_TicketCategoryAttributeMustHaveLiveOrTestVersion",
          "Value": 96283,
          "Description": "Ticket Category Attribute '{0}' must have a Live or Test Version."
        },
        {
          "Name": "EmailRoute_TicketCategoryAttributeMustHaveLiveVersion",
          "Value": 96284,
          "Description": "Ticket Category Attribute '{0}' must have a Live Version."
        },
        {
          "Name": "EmailRoute_CaseAttributeMustHaveLiveOrTestVersion",
          "Value": 96285,
          "Description": "Case Attribute '{0}' must have a Live or Test Version."
        },
        {
          "Name": "EmailRoute_CaseAttributeMustHaveLiveVersion",
          "Value": 96286,
          "Description": "Case Attribute '{0}' must have a Live Version."
        },
        {
          "Name": "EmailRoute_TicketCategoryAttributeDoesNotExist",
          "Value": 96287,
          "Description": "Ticket Category Attribute '{0}' does not exist."
        },
        {
          "Name": "EmailRoute_CaseAttributeDoesNotExist",
          "Value": 96288,
          "Description": "Case Attribute '{0}' does not exist."
        },
        {
          "Name": "EmailRoute_TicketCategoryIsRequired",
          "Value": 96289,
          "Description": "Ticket Category Attribute is required."
        },
        {
          "Name": "EmailRoute_OrderIsRequired",
          "Value": 96290,
          "Description": "Email route must have an order number above 0."
        },
        {
          "Name": "EmailRoute_CannotChangePrimaryEmailAddress",
          "Value": 96291,
          "Description": "Unable to change the email address of the Email Route that is the Primary Email Address of the Connector. Update the Email Connector instead."
        },
        {
          "Name": "ServiceLine_DoesNotExist",
          "Value": 115000,
          "Description": "Service Line '{0}' does not exist."
        },
        {
          "Name": "ServiceLine_NameIsRequired",
          "Value": 115001,
          "Description": "Name is required."
        },
        {
          "Name": "ServiceLine_NameIsDuplicated",
          "Value": 115002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "ServiceLine_NameIsTooLong",
          "Value": 115147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "GlobalChecklist_DescriptionIsRequired",
          "Value": 132152,
          "Description": "Description is a required field."
        },
        {
          "Name": "GlobalChecklist_OrderInvalid",
          "Value": 132153,
          "Description": "Order must be zero or a positive number."
        },
        {
          "Name": "GlobalChecklist_OrderIsDuplicated",
          "Value": 132154,
          "Description": "Order '{0}' is duplicated."
        },
        {
          "Name": "Contract_DoesNotExist",
          "Value": 215000,
          "Description": "Contract '{0}' does not exist."
        },
        {
          "Name": "Contract_NameIsDuplicated",
          "Value": 215002,
          "Description": "Customer Company '{0}' already has a contract named '{1}'."
        },
        {
          "Name": "Contract_CustomerCompanyDoesNotExist",
          "Value": 215072,
          "Description": "Customer Company '{0}' does not exist."
        },
        {
          "Name": "Contract_CustomerCompanyIsRetired",
          "Value": 215073,
          "Description": "Customer Company '{0}' is retired."
        },
        {
          "Name": "Contract_CustomerCompanyIsNotOfTypeCustomer",
          "Value": 215074,
          "Description": "Customer Company '{0}' is not of Type Customer."
        },
        {
          "Name": "Contract_CustomerCompanyCannotChange",
          "Value": 215075,
          "Description": "Customer Company cannot be changed after creation."
        },
        {
          "Name": "Contract_SupplierCompanyDoesNotExist",
          "Value": 215076,
          "Description": "Supplier Company '{0}' does not exist."
        },
        {
          "Name": "Contract_SupplierCompanyIsRetired",
          "Value": 215077,
          "Description": "Supplier Company '{0}' is retired."
        },
        {
          "Name": "Contract_SupplierCompanyIsNotOfTypeSupplier",
          "Value": 215078,
          "Description": "Supplier Company '{0}' is not of Type Service Provider."
        },
        {
          "Name": "ContractVersion_ContractDoesNotExist",
          "Value": 215209,
          "Description": "Contract '{0}' does not exist."
        },
        {
          "Name": "ContractVersion_ContractIsRetired",
          "Value": 215210,
          "Description": "Contract '{0}' is retired."
        },
        {
          "Name": "Contract_CustomerCompanyCompanyTypeInvalid",
          "Value": 215222,
          "Description": "Customer Company '{0} Company Type is invalid."
        },
        {
          "Name": "Contract_SupplierCompanyCompanyTypeInvalid",
          "Value": 215223,
          "Description": "Supplier Company '{0} Company Type is invalid."
        },
        {
          "Name": "LocalChecklist_GlobalChecklistDoesNotExist",
          "Value": 216205,
          "Description": "Linked Global Checklist '{0}' does not exist."
        },
        {
          "Name": "LocalChecklist_GlobalChecklistIsRetired",
          "Value": 216206,
          "Description": "Linked Global Checklist '{0}' is retired."
        },
        {
          "Name": "LocalChecklist_GlobalChecklistIsRequired",
          "Value": 216207,
          "Description": "Linked Global Checklist is required."
        },
        {
          "Name": "LocalChecklist_GlobalChecklistMustBeBlank",
          "Value": 216208,
          "Description": "Linked Global Checklist must be blank."
        },
        {
          "Name": "LocalChecklist_GlobalChecklistMustBeSimilarType",
          "Value": 216334,
          "Description": "Linked Global Checklist must be similar type."
        },
        {
          "Name": "Service_NameIsRequired",
          "Value": 217001,
          "Description": "Name is required."
        },
        {
          "Name": "Service_NameIsDuplicated",
          "Value": 217002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "Service_ServiceLineDoesNotExist",
          "Value": 217003,
          "Description": "Service Line '{0}' does not exist."
        },
        {
          "Name": "Service_ServiceLineIsRetired",
          "Value": 217004,
          "Description": "Service Line '{0}' is retired."
        },
        {
          "Name": "Service_NameIsTooLong",
          "Value": 217147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "Service_ContractDoesNotExist",
          "Value": 217209,
          "Description": "Contract '{0}' does not exist."
        },
        {
          "Name": "Service_ContractIsRetired",
          "Value": 217210,
          "Description": "Contract '{0}' is retired."
        },
        {
          "Name": "ContractVersion_DoesNotExist",
          "Value": 227000,
          "Description": "Contract Version '{0}' does not exist."
        },
        {
          "Name": "ContractVersion_CustomerCalendarDoesNotExist",
          "Value": 227080,
          "Description": "Customer Calendar '{0}' does not exist."
        },
        {
          "Name": "ContractVersion_CustomerCalendarIsRetired",
          "Value": 227081,
          "Description": "Customer Calendar '{0}' is retired."
        },
        {
          "Name": "ContractVersion_SupplierCalendarDoesNotExist",
          "Value": 227082,
          "Description": "Supplier Calendar '{0}' does not exist."
        },
        {
          "Name": "ContractVersion_SupplierCalendarIsRetired",
          "Value": 227083,
          "Description": "Supplier Calendar '{0}' is retired."
        },
        {
          "Name": "ContractVersion_DefaultLanguageIsRequired",
          "Value": 227084,
          "Description": "Default Language is a required field."
        },
        {
          "Name": "ContractVersion_DefaultLanguageIsNotValid",
          "Value": 227085,
          "Description": "Default Language is not valid."
        },
        {
          "Name": "ContractVersion_TeamIsTooLong",
          "Value": 227086,
          "Description": "Team is too long. Maximum length is 256 characters."
        },
        {
          "Name": "ContractVersion_TimeZoneIsRequired",
          "Value": 227087,
          "Description": "Time zone is a required field."
        },
        {
          "Name": "ContractVersion_TimeZoneIsNotValid",
          "Value": 227088,
          "Description": "Time zone is not valid."
        },
        {
          "Name": "ContractVersion_WorkingHoursInADayIsRequired",
          "Value": 227091,
          "Description": "Working hours in a day must be > 0."
        },
        {
          "Name": "ContractVersion_MultipleVersionsExist",
          "Value": 227092,
          "Description": "Contract {0} is used in service {1}."
        },
        {
          "Name": "ContractVersion_TooManyWorkingHoursInADay",
          "Value": 227198,
          "Description": "Working hours in a day must be <= 24."
        },
        {
          "Name": "ContractVersion_ContractInUse",
          "Value": 227211,
          "Description": "Contract {0} is used in service {1}."
        },
        {
          "Name": "FixedFrequencySchedule_NameIsDuplicated",
          "Value": 235002,
          "Description": "Fixed Frequency Schedule with Name '{0}' already exists."
        },
        {
          "Name": "FixedFrequencySchedule_DaysOrLastDayOfMonthRequired",
          "Value": 235318,
          "Description": "Schedule requires either days specified, or last day of month specified."
        },
        {
          "Name": "FixedFrequencySchedule_FrequencyOutOfRange",
          "Value": 235319,
          "Description": "Schedule cannot specify a zero or negative frequency."
        },
        {
          "Name": "FixedFrequencySchedule_ScheduleOutOfRange",
          "Value": 235320,
          "Description": "Schedule cannot specify more than 23 Hours on Hourly Schedule."
        },
        {
          "Name": "FixedFrequencySchedule_HourFilterInvalidForDailySchedule",
          "Value": 235321,
          "Description": "Cannot Specify Hour Filter on a Daily Schedule."
        },
        {
          "Name": "FixedFrequencySchedule_DayFilterInvalidForWeeklySchedule",
          "Value": 235322,
          "Description": "Cannot Specify Day Filter on a Weekly Schedule."
        },
        {
          "Name": "FixedFrequencySchedule_HourFilterInvalidForWeeklySchedule",
          "Value": 235323,
          "Description": "Cannot Specify Hour Filter on a Weekly Schedule."
        },
        {
          "Name": "FixedFrequencySchedule_DayFilterInvalidForMonthlySchedule",
          "Value": 235324,
          "Description": "Cannot Specify Day Filter on a Monthly Schedule."
        },
        {
          "Name": "FixedFrequencySchedule_HourFilterInvalidFoMonthlySchedule",
          "Value": 235325,
          "Description": "Cannot Specify Hour Filter on a Monthly Schedule."
        },
        {
          "Name": "FixedFrequencySchedule_DayFilterInvalidForDaysOfMonthSchedule",
          "Value": 235326,
          "Description": "Cannot Specify Day Filter on a Days Of Month Schedule."
        },
        {
          "Name": "FixedFrequencySchedule_HourFilterInvalidForDaysOfMonthSchedule",
          "Value": 235327,
          "Description": "Cannot Specify Hour Filter on a Days Of Month Schedule."
        },
        {
          "Name": "FixedFrequencySchedule_NoCasesToStart",
          "Value": 235328,
          "Description": "Fixed Frequency Schedule must start at least one case."
        },
        {
          "Name": "Schedule_NameIsDuplicated",
          "Value": 260002,
          "Description": "Schedule with Name '{0}' already exists."
        },
        {
          "Name": "Schedule_PeriodNameIsRequired",
          "Value": 260329,
          "Description": "Period Name is required."
        },
        {
          "Name": "Schedule_PeriodStartDateIsRequired",
          "Value": 260330,
          "Description": "Period Start Date is required."
        },
        {
          "Name": "User_EmailAddressRequired",
          "Value": 312245,
          "Description": "EmailAddress is required."
        },
        {
          "Name": "User_EmailAddressInvalid",
          "Value": 312246,
          "Description": "Email address is invalid."
        },
        {
          "Name": "User_CompanyIsRequired",
          "Value": 312248,
          "Description": "Company value is required."
        },
        {
          "Name": "User_UserHasMultipleCompanies",
          "Value": 312250,
          "Description": "User is configured with multiple companies."
        },
        {
          "Name": "User_UserHasAnotherCompany",
          "Value": 312251,
          "Description": "User is already configured with another company."
        },
        {
          "Name": "User_UserCannotBeMappedToACompany",
          "Value": 312252,
          "Description": "User cannot be mapped to a company."
        },
        {
          "Name": "User_UserAlreadyExists",
          "Value": 312253,
          "Description": "User already exists."
        },
        {
          "Name": "User_CompanyChangeNotSupported",
          "Value": 312254,
          "Description": "Changing the CompanyGUID of a User is not supported."
        },
        {
          "Name": "UserGroup_DoesNotExist",
          "Value": 341000,
          "Description": "User Group '{0}' does not exist."
        },
        {
          "Name": "UserGroup_NameIsRequired",
          "Value": 341001,
          "Description": "Name is required."
        },
        {
          "Name": "UserGroup_NameIsDuplicated",
          "Value": 341002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "UserGroup_NameIsTooLong",
          "Value": 341147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "DataDictionaryTable_SafeNamesIsDuplicated",
          "Value": 427255,
          "Description": "Safe name '{0}' is already in use."
        },
        {
          "Name": "DataDictionaryTable_SafeNameCannotChange",
          "Value": 427256,
          "Description": "Cannot change safe name."
        },
        {
          "Name": "DataDictionary_SafeNamesIsDuplicated",
          "Value": 428255,
          "Description": "Safe name '{0}' is already in use."
        },
        {
          "Name": "DataDictionary_SafeNameCannotChange",
          "Value": 428256,
          "Description": "Cannot change safe name."
        },
        {
          "Name": "DataDictionary_DataTypeCannotChange",
          "Value": 428257,
          "Description": "Cannot change data type."
        },
        {
          "Name": "DataDictionary_ShortCodeIsTooLong",
          "Value": 428258,
          "Description": "ShortCodes must be 1 or 2 characters. '{0}' is {1}."
        },
        {
          "Name": "DataDictionary_ShortCodeIsInvalid",
          "Value": 428259,
          "Description": "ShortCode '{shortCode}' contains invalid characters. ShortCodes can only contain a-z/A-Z."
        },
        {
          "Name": "DataDictionary_ShortCodeIsReserved",
          "Value": 428260,
          "Description": "ShortCode '{shortCode}' is reserved."
        },
        {
          "Name": "DataDictionary_ShortCodeIsDuplicated",
          "Value": 428261,
          "Description": "DataDictionary with ShortCode '{shortCode}' already exists."
        },
        {
          "Name": "ContactTag_DoesNotExist",
          "Value": 910000,
          "Description": "Contact Tag '{0}' does not exist."
        },
        {
          "Name": "ContactTag_NameIsRequired",
          "Value": 910001,
          "Description": "Name is a required field."
        },
        {
          "Name": "ContactTag_NameIsDuplicated",
          "Value": 910002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "ContactTag_SupplierCompanyDoesNotExist",
          "Value": 910076,
          "Description": "Supplier Company '{0}' does not exist."
        },
        {
          "Name": "ContactTag_SupplierCompanyIsRetired",
          "Value": 910077,
          "Description": "Supplier Company '{0}' is retired."
        },
        {
          "Name": "ContactTag_SupplierCompanyIsNotOfTypeSupplier",
          "Value": 910078,
          "Description": "Supplier Company '{0}' is not of Type Service Provider."
        },
        {
          "Name": "ContactTag_SupplierCompanyCannotChange",
          "Value": 910079,
          "Description": "Supplier Company cannot be changed after creation."
        },
        {
          "Name": "ContactTag_NameIsTooLong",
          "Value": 910147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "ContactTag_CannotModifySystemDefault",
          "Value": 910199,
          "Description": "Cannot modify system default Contact Tags."
        },
        {
          "Name": "CaseAttribute_DoesNotExist",
          "Value": 911000,
          "Description": "Case Attribute '{0}' does not exist."
        },
        {
          "Name": "CaseAttribute_ServiceDoesNotExist",
          "Value": 911008,
          "Description": "Service '{0}' does not exist."
        },
        {
          "Name": "CaseAttribute_ServiceCannotChange",
          "Value": 911010,
          "Description": "Service cannot be changed after creation."
        },
        {
          "Name": "CaseAttribute_CaseTypeDoesNotExist",
          "Value": 911011,
          "Description": "Case Type '{0}' does not exist."
        },
        {
          "Name": "CaseAttribute_CaseTypeIsRetired",
          "Value": 911012,
          "Description": "Case Type '{0}' is retired."
        },
        {
          "Name": "CaseAttribute_CaseTypeAlreadyExistsInService",
          "Value": 911013,
          "Description": "Case Type '{0}' already exists in Service '{1}'."
        },
        {
          "Name": "CaseAttribute_CaseTypeInDifferentServiceLineToService",
          "Value": 911014,
          "Description": "Case Type '{0}' exists in a different Service Line to Service '{1}'."
        },
        {
          "Name": "CaseAttribute_CaseTypeCannotChange",
          "Value": 911015,
          "Description": "Case Type cannot be changed after creation."
        },
        {
          "Name": "CaseType_DoesNotExist",
          "Value": 912000,
          "Description": "Case Type '{0}' does not exist."
        },
        {
          "Name": "CaseType_NameIsRequired",
          "Value": 912001,
          "Description": "Name is required."
        },
        {
          "Name": "CaseType_NameIsDuplicated",
          "Value": 912002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "CaseType_ServiceLineDoesNotExist",
          "Value": 912003,
          "Description": "Service Line '{0}' does not exist."
        },
        {
          "Name": "CaseType_ServiceLineIsRetired",
          "Value": 912004,
          "Description": "Service Line '{0}' is retired."
        },
        {
          "Name": "CaseType_ServiceLineCannotChange",
          "Value": 912005,
          "Description": "Service Line cannot be changed after creation."
        },
        {
          "Name": "CaseAttribute_ServiceIsRetired",
          "Value": 912009,
          "Description": "Service '{0}' is retired."
        },
        {
          "Name": "CaseType_NameIsTooLong",
          "Value": 912147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "CaseType_ProcessGroupIsTooLong",
          "Value": 912148,
          "Description": "Process Group is too long. Maximum length is 256 characters."
        },
        {
          "Name": "ActionType_DoesNotExist",
          "Value": 913000,
          "Description": "Action Type '{0}' does not exist."
        },
        {
          "Name": "ActionType_NameIsRequired",
          "Value": 913001,
          "Description": "Name is a required field."
        },
        {
          "Name": "ActionType_NameIsDuplicated",
          "Value": 913002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "ActionType_ServiceLineDoesNotExist",
          "Value": 913003,
          "Description": "Service Line '{0}' does not exist."
        },
        {
          "Name": "ActionType_ServiceLineIsRetired",
          "Value": 913004,
          "Description": "Service Line '{0}' is retired."
        },
        {
          "Name": "ActionType_ServiceLineCannotChange",
          "Value": 913005,
          "Description": "Service Line cannot be changed after creation."
        },
        {
          "Name": "ActionType_NameIsTooLong",
          "Value": 913147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "TicketType_DoesNotExist",
          "Value": 914000,
          "Description": "Ticket Type '{0}' does not exist."
        },
        {
          "Name": "TicketType_NameIsRequired",
          "Value": 914001,
          "Description": "Name is a required field."
        },
        {
          "Name": "TicketType_NameIsDuplicated",
          "Value": 914002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "TicketType_ServiceLineDoesNotExist",
          "Value": 914003,
          "Description": "Service Line '{0}' does not exist."
        },
        {
          "Name": "TicketType_ServiceLineIsRetired",
          "Value": 914004,
          "Description": "Service Line '{0}' is retired."
        },
        {
          "Name": "TicketType_ServiceLineCannotChange",
          "Value": 914005,
          "Description": "Service Line cannot be changed after creation."
        },
        {
          "Name": "TicketAttribute_ServiceIsRetired",
          "Value": 914009,
          "Description": "Service '{0}' is retired."
        },
        {
          "Name": "TicketAttribute_TicketTypeIsRetired",
          "Value": 914012,
          "Description": "Ticket Type '{0}' is retired."
        },
        {
          "Name": "TicketType_NameIsTooLong",
          "Value": 914147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "TicketType_ProcessGroupIsTooLong",
          "Value": 914148,
          "Description": "Process Group is too long. Maximum length is 256 characters."
        },
        {
          "Name": "TicketAttribute_DoesNotExist",
          "Value": 915000,
          "Description": "Ticket Attribute '{0}' does not exist."
        },
        {
          "Name": "TicketAttribute_ServiceDoesNotExist",
          "Value": 915008,
          "Description": "Service '{0}' does not exist."
        },
        {
          "Name": "TicketAttribute_ServiceCannotChange",
          "Value": 915010,
          "Description": "Service cannot be changed after creation."
        },
        {
          "Name": "TicketAttribute_TicketTypeDoesNotExist",
          "Value": 915011,
          "Description": "Ticket Type '{0}' does not exist."
        },
        {
          "Name": "TicketAttribute_TicketTypeAlreadyExistsInService",
          "Value": 915013,
          "Description": "Ticket Type '{0}' already exists in Service '{1}'."
        },
        {
          "Name": "TicketAttribute_TicketTypeInDifferentServiceLineToService",
          "Value": 915014,
          "Description": "Ticket Type '{0}' exists in a different Service Line to Service '{1}'."
        },
        {
          "Name": "TicketAttribute_TicketTypeCannotChange",
          "Value": 915015,
          "Description": "Ticket Type cannot be changed after creation."
        },
        {
          "Name": "Calendar_NameIsRequired",
          "Value": 924001,
          "Description": "Calendar Name is required."
        },
        {
          "Name": "Calendar_NameIsDuplicated",
          "Value": 924002,
          "Description": "Calendar Name is duplicated."
        },
        {
          "Name": "Calendar_TimeZoneIsRequired",
          "Value": 924087,
          "Description": "Calendar Time zone is required."
        },
        {
          "Name": "CalendarException_DateIsRequired",
          "Value": 925243,
          "Description": "Calendar Exception Date is required."
        },
        {
          "Name": "CaseStep_NameIsRequired",
          "Value": 953001,
          "Description": "Name is required."
        },
        {
          "Name": "CaseStep_NameIsDuplicated",
          "Value": 953002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "CaseStep_NameIsTooLong",
          "Value": 953147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "CaseStep_MilestoneInvalid",
          "Value": 953149,
          "Description": "Milestone must be between 0 - 100."
        },
        {
          "Name": "CaseStep_StepNumberInvalid",
          "Value": 953150,
          "Description": "Step Number must be above 0."
        },
        {
          "Name": "CaseStep_StepNumberIsDuplicated",
          "Value": 953151,
          "Description": "Step Number '{0}' is duplicated."
        },
        {
          "Name": "TicketCategoryAttribute_FeedbackWindowDaysMustBeZeroOrPositiveNumber",
          "Value": 954047,
          "Description": "Feedback Window Days must be zero or a positive number."
        },
        {
          "Name": "TicketCategoryAttribute_OutboundEmailAddressIsRequired",
          "Value": 954048,
          "Description": "Outbound Email Address is required."
        },
        {
          "Name": "TicketCategoryAttribute_OutboundEmailAddressIsTooLong",
          "Value": 954049,
          "Description": "Outbound Email Address is too long. Maximum length is 100 characters."
        },
        {
          "Name": "TicketCategoryAttribute_EstimatedDurationMustBePositiveNumber",
          "Value": 954050,
          "Description": "Estimated Duration must be a positive number if set."
        },
        {
          "Name": "TicketCategoryAttribute_TicketCategoryDoesNotExist",
          "Value": 954051,
          "Description": "Ticket Category '{0}' does not exist."
        },
        {
          "Name": "TicketCategoryAttribute_TicketCategoryIsRetired",
          "Value": 954052,
          "Description": "Ticket Category '{0}' is retired."
        },
        {
          "Name": "TicketCategoryAttribute_TicketCategoryCannotChange",
          "Value": 954053,
          "Description": "Ticket Category cannot be changed after creation."
        },
        {
          "Name": "TicketCategoryAttribute_TicketCategoryHasChildLevels",
          "Value": 954054,
          "Description": "Ticket Category '{0}' has child levels."
        },
        {
          "Name": "TicketCategoryAttribute_TicketCategoryDuplicated",
          "Value": 954055,
          "Description": "Ticket Category '{0}' exists in multiple Ticket Attribute Categories."
        },
        {
          "Name": "TicketCategoryAttribute_TicketCategoryInDifferentServiceLine",
          "Value": 954056,
          "Description": "Ticket Category '{0}' exists in a different Service Line to Ticket."
        },
        {
          "Name": "TicketCategoryAttribute_DueDateAttributeIsRequired",
          "Value": 954057,
          "Description": "Due Date Attribute is required."
        },
        {
          "Name": "TicketCategoryAttribute_DueDateAttributeDoesNotExist",
          "Value": 954058,
          "Description": "Due Date Attribute '{0}' does not exist."
        },
        {
          "Name": "TicketCategoryAttribute_DueDateAttributeIsNotValid",
          "Value": 954059,
          "Description": "Due Date Attribute '{0} is not valid."
        },
        {
          "Name": "TicketCategoryAttribute_DueDateAttributeRequiresContractWithCustomerCalendar",
          "Value": 954060,
          "Description": "Due Date Attribute '{0}' can only be used when parent Contract has a Customer Calendar."
        },
        {
          "Name": "TicketCategoryAttribute_DueDateAttributeRequiresContractWithSupplierCalendar",
          "Value": 954061,
          "Description": "Due Date Attribute '{0}'can only be used when parent Contract has a Supplier Calendar."
        },
        {
          "Name": "TicketCategoryAttribute_DueDateAttributeNotValidForProcessType",
          "Value": 954062,
          "Description": "Due Date Attribute '{0}' uses a Method which cannot be used on Tickets."
        },
        {
          "Name": "TicketCategoryAttribute_DueDateAttributeRequiresDataDictionaryOnCard",
          "Value": 954063,
          "Description": "Due Date Attribute '{0}' requires one of the Cards linked to the Ticket to contain Data Dictionary '{1}'."
        },
        {
          "Name": "TicketCategoryAttribute_AllocationAttributeIsRequired",
          "Value": 954065,
          "Description": "Allocation Attribute is required."
        },
        {
          "Name": "TicketCategoryAttribute_AllocationAttributeDoesNotExist",
          "Value": 954066,
          "Description": "Allocation Attribute '{0}' does not exist."
        },
        {
          "Name": "TicketCategoryAttribute_AllocationAttributeIsNotValid",
          "Value": 954067,
          "Description": "Allocation Attribute is not valid."
        },
        {
          "Name": "TicketCategoryAttribute_AllocationAttributeRequiresDataDictionaryOnCard",
          "Value": 954068,
          "Description": "Allocation Attribute '{0}' requires one of the Cards linked to the Ticket to contain Data Dictionary '{1}'."
        },
        {
          "Name": "TicketCategoryAttribute_AllocationAttributeRequiresContractWithTeam",
          "Value": 954069,
          "Description": "Allocation Attribute '{0}' can only be used when parent Contract has a Team specified."
        },
        {
          "Name": "TicketCategoryAttribute_ContactTagDoesNotExist",
          "Value": 954331,
          "Description": "Contact Tag '{0}' does not exist."
        },
        {
          "Name": "TicketCategoryAttribute_ContactTagIsRetired",
          "Value": 954332,
          "Description": "Contact Tag '{0}' is retired."
        },
        {
          "Name": "TicketCategoryAttribute_CannotUseSameAddressForFromAndBCC",
          "Value": 954368,
          "Description": "The 'from' email address cannot be in the BCC address list."
        },
        {
          "Name": "TicketCategoryAttribute_AllocationAttributeNotValidForProcessType",
          "Value": 954371,
          "Description": "Allocation Attribute '{0}' uses a Allocation Method which cannot be used on Tickets."
        },
        {
          "Name": "DueDateAttribute_DoesNotExist",
          "Value": 956000,
          "Description": "Due Date Attribute '{0}' does not exist."
        },
        {
          "Name": "DueDateAttribute_NameIsRequired",
          "Value": 956001,
          "Description": "Name is a required field."
        },
        {
          "Name": "DueDateAttribute_NameIsDuplicated",
          "Value": 956002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "DueDateAttribute_NextWorkingMomentAndUseEndOfDayForCalculationMutuallyExclusive",
          "Value": 956006,
          "Description": "NextWorkingMoment and UseEndOfDayForCalculation cannot be set at the same time."
        },
        {
          "Name": "DueDateAttribute_InUseByLiveConfiguration",
          "Value": 956007,
          "Description": "In use by Live configuration."
        },
        {
          "Name": "DueDateAttribute_NameIsTooLong",
          "Value": 956147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "DueDateAttribute_CalendarIsRequired",
          "Value": 956178,
          "Description": "Calendar is required Calendar Type is Explicit."
        },
        {
          "Name": "DueDateAttribute_CalendarDoesNotExist",
          "Value": 956179,
          "Description": "Calendar '{0}' does not exist."
        },
        {
          "Name": "DueDateAttribute_CalendarIsRetired",
          "Value": 956180,
          "Description": "Calendar '{0}' is retired."
        },
        {
          "Name": "DueDateAttribute_DataDictionaryIsRequired",
          "Value": 956181,
          "Description": "Data Dictionary is required for this Due Date Method."
        },
        {
          "Name": "DueDateAttribute_DataDictionaryDoesNotExist",
          "Value": 956182,
          "Description": "Data Dictionary '{0}' does not exist."
        },
        {
          "Name": "DueDateAttribute_DataDictionaryIsRetired",
          "Value": 956183,
          "Description": "Data Dictionary '{0}' is retired."
        },
        {
          "Name": "DueDateAttribute_DataDictionaryIsWrongDataType",
          "Value": 956184,
          "Description": "Data Dictionary '{0}' must be of Data Type Date/Time."
        },
        {
          "Name": "DueDateAttribute_TargetDurationDataDictionaryDoesNotExist",
          "Value": 956185,
          "Description": "Target Duration Data Dictionary '{0}' does not exist."
        },
        {
          "Name": "DueDateAttribute_TargetDurationDataDictionaryIsRetired",
          "Value": 956186,
          "Description": "Target Duration Data Dictionary '{0}' is retired."
        },
        {
          "Name": "DueDateAttribute_TargetDurationDataDictionaryIsWrongDataType",
          "Value": 956187,
          "Description": "Target Duration Data Dictionary '{0}' must be of DataType WholeNumber."
        },
        {
          "Name": "DueDateAttribute_ScheduleStructureDateIsRequired",
          "Value": 956188,
          "Description": "Schedule Structure Date is required for this Due Date Method."
        },
        {
          "Name": "DueDateAttribute_ScheduleStructureDateDoesNotExist",
          "Value": 956189,
          "Description": "Schedule Structure Date '{0}' does not exist."
        },
        {
          "Name": "DueDateAttribute_ScheduleStructureDateIsRetired",
          "Value": 956190,
          "Description": "Schedule Structure Date '{0}' is retired."
        },
        {
          "Name": "DueDateAttribute_DayOfMonthIsRequired",
          "Value": 956191,
          "Description": "DayOfMonth is required for this Due Date Method."
        },
        {
          "Name": "DueDateAttribute_DayOfMonthInvalid",
          "Value": 956192,
          "Description": "When set DayOfMonth must be between 1 - 31."
        },
        {
          "Name": "DueDateAttribute_MonthOfYearIsRequired",
          "Value": 956193,
          "Description": "MonthOfYear is required for this Due Date Method."
        },
        {
          "Name": "DueDateAttribute_MonthOfYearInvalid",
          "Value": 956194,
          "Description": "When set MonthOfYear must be between 1 - 12."
        },
        {
          "Name": "DueDateAttribute_CalendarTypeIsRequired",
          "Value": 956200,
          "Description": "Calendar Type is required when TargetDurationUnits or DynamicDurationUnits is in 'Working' Minutes/Hours/Days."
        },
        {
          "Name": "DueDateAttribute_CalendarMustBeBlank",
          "Value": 956219,
          "Description": "Calendar cannot be set unless CalendarType is Explicit."
        },
        {
          "Name": "DueDateAttribute_TargetDurationUnitInvalid",
          "Value": 956224,
          "Description": "'{0}' is not a valid value for property 'TargetDurationUnits'."
        },
        {
          "Name": "DueDateAttribute_CannotChangeFieldWhenInLiveUse",
          "Value": 956226,
          "Description": "Field cannot be changed when in use by Live configuration."
        },
        {
          "Name": "DueDateAttribute_DueDateCalculationMethodInvalid",
          "Value": 956234,
          "Description": "'{0}' is not a valid value for property 'DueDateCalculationMethod'."
        },
        {
          "Name": "AllocationAttribute_DoesNotExist",
          "Value": 957000,
          "Description": "Allocation Attribute '{0}' does not exist."
        },
        {
          "Name": "AllocationAttribute_NameIsRequired",
          "Value": 957001,
          "Description": "Name is a required field."
        },
        {
          "Name": "AllocationAttribute_NameIsDuplicated",
          "Value": 957002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "AllocationAttribute_InUseByLiveConfiguration",
          "Value": 957007,
          "Description": "In use by Live configuration."
        },
        {
          "Name": "AllocationAttribute_NameIsTooLong",
          "Value": 957147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "AllocationAttribute_QueueIsRequired",
          "Value": 957155,
          "Description": "Queue is required."
        },
        {
          "Name": "AllocationAttribute_QueueDoesNotExist",
          "Value": 957156,
          "Description": "Queue '{0}' does not exist."
        },
        {
          "Name": "AllocationAttribute_QueueIsRetired",
          "Value": 957157,
          "Description": "Queue '{0}' is retired."
        },
        {
          "Name": "AllocationAttribute_PrimaryAllocationActionTypeIsRequired",
          "Value": 957158,
          "Description": "Primary Method of Previous Action Completer requires a PrimaryAllocationActionTypeGUID."
        },
        {
          "Name": "AllocationAttribute_PrimaryAllocationActionTypeDoesNotExist",
          "Value": 957159,
          "Description": "Primary Allocation Action Type '{0}' does not exist."
        },
        {
          "Name": "AllocationAttribute_PrimaryAllocationActionTypeIsRetired",
          "Value": 957160,
          "Description": "Primary Allocation Action Type '{0}' is retired."
        },
        {
          "Name": "AllocationAttribute_PrimaryAllocationPositionIsRequired",
          "Value": 957161,
          "Description": "Primary Method of Team By Path requires a PrimaryAllocationPositionGUID."
        },
        {
          "Name": "AllocationAttribute_PrimaryAllocationPositionDoesNotExist",
          "Value": 957162,
          "Description": "Primary Allocation Position '{0}' does not exist."
        },
        {
          "Name": "AllocationAttribute_PrimaryAllocationPositionIsRetired",
          "Value": 957163,
          "Description": "Primary Allocation Position '{0}' is retired."
        },
        {
          "Name": "AllocationAttribute_PrimaryAllocationDataDictionaryIsRequired",
          "Value": 957164,
          "Description": "Primary Method of Username From Custom Data Field requires a PrimaryAllocationDataDictionaryGUID."
        },
        {
          "Name": "AllocationAttribute_PrimaryAllocationDataDictionaryDoesNotExist",
          "Value": 957165,
          "Description": "Primary Allocation Data Dictionary '{0}' does not exist."
        },
        {
          "Name": "AllocationAttribute_PrimaryAllocationDataDictionaryIsRetired",
          "Value": 957166,
          "Description": "Primary Allocation Data Dictionary '{0}' is retired."
        },
        {
          "Name": "AllocationAttribute_PrimaryAllocationDataDictionaryIsWrongDataType",
          "Value": 957167,
          "Description": "Primary Allocation Data Dictionary '{0}' must be of data type 'Short Text' or 'List'."
        },
        {
          "Name": "AllocationAttribute_SecondaryAllocationActionTypeIsRequired",
          "Value": 957168,
          "Description": "Secondary Method of Previous Action Completer requires a SecondaryAllocationActionTypeGUID."
        },
        {
          "Name": "AllocationAttribute_SecondaryAllocationActionTypeDoesNotExist",
          "Value": 957169,
          "Description": "Secondary Allocation Action Type '{0}' does not exist."
        },
        {
          "Name": "AllocationAttribute_SecondaryAllocationActionTypeIsRetired",
          "Value": 957170,
          "Description": "Secondary Allocation Action Type '{0}' is retired."
        },
        {
          "Name": "AllocationAttribute_SecondaryAllocationPositionIsRequired",
          "Value": 957171,
          "Description": "Secondary Method of Team By Path requires a SecondaryAllocationPositionGUID."
        },
        {
          "Name": "AllocationAttribute_SecondaryAllocationPositionDoesNotExist",
          "Value": 957172,
          "Description": "Secondary Allocation Position '{0}' does not exist."
        },
        {
          "Name": "AllocationAttribute_SecondaryAllocationPositionIsRetired",
          "Value": 957173,
          "Description": "Secondary Allocation Position '{0}' is retired."
        },
        {
          "Name": "AllocationAttribute_SecondaryAllocationDataDictionaryIsRequired",
          "Value": 957174,
          "Description": "Secondary Method of Username From Custom Data Field requires a SecondaryAllocationDataDictionaryGUID."
        },
        {
          "Name": "AllocationAttribute_SecondaryAllocationDataDictionaryDoesNotExist",
          "Value": 957175,
          "Description": "Secondary Allocation Data Dictionary '{0}' does not exist."
        },
        {
          "Name": "AllocationAttribute_SecondaryAllocationDataDictionaryIsRetired",
          "Value": 957176,
          "Description": "Secondary Allocation Data Dictionary '{0}' is retired."
        },
        {
          "Name": "AllocationAttribute_SecondaryAllocationDataDictionaryIsWrongDataType",
          "Value": 957177,
          "Description": "Secondary Allocation Data Dictionary '{0}' must be of data type 'Short Text' or 'List'."
        },
        {
          "Name": "AllocationAttribute_CannotChangeFieldWhenInLiveUse",
          "Value": 957226,
          "Description": "Field cannot be changed when in use by Live configuration."
        },
        {
          "Name": "TicketCategory_NameIsDuplicated",
          "Value": 958002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "TicketCategory_ServiceLineDoesNotExist",
          "Value": 958003,
          "Description": "Service Line '{0}' does not exist."
        },
        {
          "Name": "TicketCategory_ServiceLineIsRetired",
          "Value": 958004,
          "Description": "Service Line '{0}' is retired."
        },
        {
          "Name": "TicketCategory_ServiceLineCannotChange",
          "Value": 958005,
          "Description": "Service Line cannot be changed after creation."
        },
        {
          "Name": "TicketCategory_ParentCannotChange",
          "Value": 958201,
          "Description": "Parent cannot be changed after creation."
        },
        {
          "Name": "TicketCategory_TooManyLevels",
          "Value": 958202,
          "Description": "Category nesting is too deep. Only 3 levels of category are permitted. No further validation will be performed."
        },
        {
          "Name": "TicketCategory_ParentDoesNotExist",
          "Value": 958217,
          "Description": "Ticket Category '{0}' does not exist."
        },
        {
          "Name": "TicketCategory_ParentIsRetired",
          "Value": 958218,
          "Description": "Ticket Category '{0}' is retired."
        },
        {
          "Name": "CaseAttributeVersion_MainCardDoesNotExist",
          "Value": 963016,
          "Description": "Main Card '{0}' does not exist."
        },
        {
          "Name": "CaseAttributeVersion_MainCardIsRetired",
          "Value": 963017,
          "Description": "Main Card '{0}' is retired."
        },
        {
          "Name": "CaseAttributeVersion_MainCardIsOfTypeSelfService",
          "Value": 963018,
          "Description": "Main Card '{0}' is of type self service."
        },
        {
          "Name": "CaseAttributeVersion_SideCardDoesNotExist",
          "Value": 963019,
          "Description": "Side Card '{0}' does not exist."
        },
        {
          "Name": "CaseAttributeVersion_SideCardIsRetired",
          "Value": 963020,
          "Description": "Side Card '{0}' is retired."
        },
        {
          "Name": "CaseAttributeVersion_SideCardIsOfTypeSelfService",
          "Value": 963021,
          "Description": "Side Card '{0}' is of type self service."
        },
        {
          "Name": "CaseAttributeVersion_OutboundEmailAddressIsRequired",
          "Value": 963048,
          "Description": "Outbound email address is required."
        },
        {
          "Name": "CaseAttributeVersion_OutboundEmailAddressIsTooLong",
          "Value": 963049,
          "Description": "Outbound Email Address is too long. Maximum length is 100 characters."
        },
        {
          "Name": "CaseAttributeVersion_DueDateAttributeIsRequired",
          "Value": 963057,
          "Description": "Due Date Attribute is required."
        },
        {
          "Name": "CaseAttributeVersion_DueDateAttributeDoesNotExist",
          "Value": 963058,
          "Description": "Due Date Attribute '{0}' does not exist."
        },
        {
          "Name": "CaseAttributeVersion_DueDateAttributeIsNotValid",
          "Value": 963059,
          "Description": "Due Date Attribute '{0}' is not valid."
        },
        {
          "Name": "CaseAttributeVersion_DueDateAttributeRequiresContractWithCustomerCalendar",
          "Value": 963060,
          "Description": "Due Date Attribute '{0}' can only be used when parent Contract has a Customer Calendar."
        },
        {
          "Name": "CaseAttributeVersion_DueDateAttributeRequiresContractWithSupplierCalendar",
          "Value": 963061,
          "Description": "Due Date Attribute '{0}' can only be used when parent Contract has a Supplier Calendar."
        },
        {
          "Name": "CaseAttributeVersion_DueDateAttributeNotValidForProcessType",
          "Value": 963062,
          "Description": "Due Date Attribute '{0}' uses a Method which cannot be used on Cases."
        },
        {
          "Name": "CaseAttributeVersion_DueDateAttributeRequiresDataDictionaryOnCard",
          "Value": 963063,
          "Description": "Due Date Attribute '{0}' requires one of the Cards linked to the Case to contain Data Dictionary '{1}'."
        },
        {
          "Name": "CaseAttributeVersion_DueDateAttributeMustLinkToSpecificScheduleStructure",
          "Value": 963064,
          "Description": "Due Date Attribute '{0}' requires the Case to be linked to Schedule Structure '{1}'."
        },
        {
          "Name": "CaseAttributeVersion_AllocationAttributeIsRequired",
          "Value": 963065,
          "Description": "Allocation Attribute is required."
        },
        {
          "Name": "CaseAttributeVersion_AllocationAttributeDoesNotExist",
          "Value": 963066,
          "Description": "Allocation Attribute '{0}' does not exist."
        },
        {
          "Name": "CaseAttributeVersion_AllocationAttributeIsNotValid",
          "Value": 963067,
          "Description": "Allocation Attribute '{0}' is not valid."
        },
        {
          "Name": "CaseAttributeVersion_AllocationAttributeRequiresDataDictionaryOnCard",
          "Value": 963068,
          "Description": "Allocation Attribute '{0}' requires one of the Cards linked to the Case to contain Data Dictionary '{1}'."
        },
        {
          "Name": "CaseAttributeVersion_AllocationAttributeRequiresContractWithTeam",
          "Value": 963069,
          "Description": "Allocation Attribute '{0}' can only be used when parent Contract has a Team specified."
        },
        {
          "Name": "CaseAttributeVersion_RecordCountMustBePositiveInteger",
          "Value": 963094,
          "Description": "Record count must be a positive integer."
        },
        {
          "Name": "CaseAttributeVersion_ScheduleIsRequired",
          "Value": 963095,
          "Description": "StartCaseBySchedule cannot be set when ScheduleGUID is blank."
        },
        {
          "Name": "CaseAttributeVersion_ScheduleDoesNotExist",
          "Value": 963096,
          "Description": "Schedule '{0}' does not exist."
        },
        {
          "Name": "CaseAttributeVersion_ScheduleIsRetired",
          "Value": 963097,
          "Description": "Schedule '{0}' is retired."
        },
        {
          "Name": "CaseAttributeVersion_SOPURLTooLong",
          "Value": 963098,
          "Description": "SOP URL is too long ({0} chars)."
        },
        {
          "Name": "CaseAttributeVersion_DaysToKeepOpenAfterCompletedMustBePositiveNumberOrZero",
          "Value": 963099,
          "Description": "Days to Keep Open After Completed must be a positive integer or zero."
        },
        {
          "Name": "CaseAttributeVersion_DueDateAttributeMustLinkToScheduleDate",
          "Value": 963100,
          "Description": "Due Date Attribute '{0}' requires the Case to be linked to a Schedule Date."
        },
        {
          "Name": "CaseAttributeVersion_ActionAttributeInDifferentServiceLineToCase",
          "Value": 963101,
          "Description": "Action Attribute Service Line ('{0}') is different Service Line To Case ('{1}')."
        },
        {
          "Name": "CaseAttributeVersion_DueDateAttributeAllStepsMustLinkToScheduleDate",
          "Value": 963111,
          "Description": "Due Date Attribute '{0}' requires all steps to be linked to a Schedule Date."
        },
        {
          "Name": "CaseAttributeVersion_EmailTemplateDoesNotExist",
          "Value": 963137,
          "Description": "Email Template '{0}' does not exist."
        },
        {
          "Name": "CaseAttributeVersion_EmailTemplateIsRetired",
          "Value": 963138,
          "Description": "Email Template '{0}' is retired."
        },
        {
          "Name": "CaseAttributeVersion_EmailTemplatePurposeIsNotGeneral",
          "Value": 963139,
          "Description": "Email Template '{0}' is not of type General."
        },
        {
          "Name": "CaseAttributeVersion_InvalidCaseCondition",
          "Value": 963146,
          "Description": "Condition '{0}' is not valid."
        },
        {
          "Name": "CaseAttributeVersion_CaseStepScheduleStructureDateDoesNotExist",
          "Value": 963189,
          "Description": "Schedule Structure Date '{0}' does not exist."
        },
        {
          "Name": "CaseAttributeVersion_CaseStepScheduleStructureDateIsRetired",
          "Value": 963190,
          "Description": "Schedule Structure Date '{0}' is retired."
        },
        {
          "Name": "CaseAttributeVersion_SideCardMustBeDifferentToMainCard",
          "Value": 963216,
          "Description": "Cannot use the same card for Main Card and Side Card."
        },
        {
          "Name": "CaseAttributeVersion_CaseStepDoesNotExist",
          "Value": 963228,
          "Description": "Case Step '{0}' does not exist."
        },
        {
          "Name": "CaseAttributeVersion_CaseStepScheduleStructureDateAlreadyExists",
          "Value": 963229,
          "Description": "Entry for Case Step '{0}', Schedule Structure Date '{1}' already exists."
        },
        {
          "Name": "CaseAttributeVersion_CaseStepScheduleStructureStepCannotChange",
          "Value": 963230,
          "Description": "Case Step Schedule Structure Step cannot be changed after creation."
        },
        {
          "Name": "CaseAttributeVersion_CaseStepIsRetired",
          "Value": 963231,
          "Description": "Case Step '{0}' is retired."
        },
        {
          "Name": "CaseAttributeVersion_ContactTagDoesNotExist",
          "Value": 963331,
          "Description": "Contact Tag '{0}' does not exist."
        },
        {
          "Name": "CaseAttributeVersion_ContactTagIsRetired",
          "Value": 963332,
          "Description": "Contact Tag '{0}' is retired."
        },
        {
          "Name": "CaseAttributeVersion_CannotUseSameAddressForFromAndTo",
          "Value": 963366,
          "Description": "The 'To' recipient list contains an address that may be used as a 'From' address."
        },
        {
          "Name": "CaseAttributeVersion_CannotUseSameAddressForFromAndCC",
          "Value": 963367,
          "Description": "The 'CC' recipient list contains an address that may be used as a 'From' address."
        },
        {
          "Name": "CaseAttributeVersion_CannotUseSameAddressForFromAndBCC",
          "Value": 963368,
          "Description": "The 'BCC' recipient list contains an address that may be used as a 'From' address."
        },
        {
          "Name": "CaseAttributeVersion_AllocationAttributeNotValidForProcessType",
          "Value": 963371,
          "Description": "Allocation Attribute '{0}' uses a Allocation Method which cannot be used on Cases."
        },
        {
          "Name": "ActionAttribute_MainCardDoesNotExist",
          "Value": 964016,
          "Description": "Main Card '{0}' does not exist."
        },
        {
          "Name": "ActionAttribute_MainCardIsRetired",
          "Value": 964017,
          "Description": "Main Card '{0}' is retired."
        },
        {
          "Name": "ActionAttribute_MainCardIsOfTypeSelfService",
          "Value": 964018,
          "Description": "Main Card '{0}' is of type self service."
        },
        {
          "Name": "ActionAttribute_SideCardDoesNotExist",
          "Value": 964019,
          "Description": "Side Card '{0}' does not exist."
        },
        {
          "Name": "ActionAttribute_SideCardIsRetired",
          "Value": 964020,
          "Description": "Side Card '{0}' is retired."
        },
        {
          "Name": "ActionAttribute_SideCardIsOfTypeSelfService",
          "Value": 964021,
          "Description": "Side Card '{0}' is of type self service."
        },
        {
          "Name": "ActionAttribute_DueDateAttributeIsRequired",
          "Value": 964057,
          "Description": "Due Date Attribute '{0}' is required in Action Attribute '{1}'."
        },
        {
          "Name": "ActionAttribute_DueDateAttributeDoesNotExist",
          "Value": 964058,
          "Description": "Due Date Attribute '{0}' in Action Attribute '{1}' does not exist."
        },
        {
          "Name": "ActionAttribute_DueDateAttributeIsNotValid",
          "Value": 964059,
          "Description": "Due Date Attribute '{0}' in Action Attribute '{1}' is not valid."
        },
        {
          "Name": "ActionAttribute_DueDateAttributeRequiresContractWithCustomerCalendar",
          "Value": 964060,
          "Description": "Due Date Attribute '{0}' can only be used when parent Contract has a Customer Calendar in Action Attribute '{1}'."
        },
        {
          "Name": "ActionAttribute_DueDateAttributeRequiresContractWithSupplierCalendar",
          "Value": 964061,
          "Description": "Due Date Attribute '{0}' can only be used when parent Contract has a Supplier Calendar in Action Attribute '{1}'."
        },
        {
          "Name": "ActionAttribute_DueDateAttributeNotValidForProcessType",
          "Value": 964062,
          "Description": "Due Date Attribute '{0}' uses a Method which cannot be used on Actions."
        },
        {
          "Name": "ActionAttribute_DueDateAttributeRequiresDataDictionaryOnCard",
          "Value": 964063,
          "Description": "Due Date Attribute '{0}' requires one of the Cards linked to the Action to contain Data Dictionary '{1}'."
        },
        {
          "Name": "ActionAttribute_DueDateAttributeMustLinkToSpecificScheduleStructure",
          "Value": 964064,
          "Description": "Due Date Attribute '{0}' requires the Action to be linked to Schedule Structure '{1}'."
        },
        {
          "Name": "ActionAttribute_AllocationAttributeIsRequired",
          "Value": 964065,
          "Description": "Allocation Attribute is required in Action Attribute '{1}'."
        },
        {
          "Name": "ActionAttribute_AllocationAttributeDoesNotExist",
          "Value": 964066,
          "Description": "Allocation Attribute '{0}' in Action Attribute '{1}' does not exist."
        },
        {
          "Name": "ActionAttribute_AllocationAttributeIsNotValid",
          "Value": 964067,
          "Description": "Allocation Attribute '{0}' in Action Attribute '{1}' is not valid."
        },
        {
          "Name": "ActionAttribute_AllocationAttributeRequiresDataDictionaryOnCard",
          "Value": 964068,
          "Description": "Allocation Attribute '{0}' requires one of the Cards linked to the Case to contain Data Dictionary '{1}'."
        },
        {
          "Name": "ActionAttribute_AllocationAttributeRequiresContractWithTeam",
          "Value": 964069,
          "Description": "Allocation Attribute '{0}' can only be used when parent Contract has a Team specified in Action Attribute '{1}'."
        },
        {
          "Name": "ActionAttribute_DueDateAttributeStepMustLinkToScheduleDate",
          "Value": 964100,
          "Description": "Due Date Attribute '{0}' requires the Action to be linked to a Schedule Date."
        },
        {
          "Name": "ActionAttribute_StepNumberIsRequired",
          "Value": 964102,
          "Description": "Step number is required."
        },
        {
          "Name": "ActionAttribute_PreviousActionAttributeDoesNotExist",
          "Value": 964103,
          "Description": "Previous action attribute '{0}' does not exist."
        },
        {
          "Name": "ActionAttribute_PreviousActionAttributeIsRetired",
          "Value": 964104,
          "Description": "Previous action attribute '{0}' is retired."
        },
        {
          "Name": "ActionAttribute_ResponseEmailFromIsRequired",
          "Value": 964105,
          "Description": "Response Email From is required in Action Attribute unless set on Case."
        },
        {
          "Name": "ActionAttribute_ResponseEmailFromTooLong",
          "Value": 964106,
          "Description": "Response Email From is too long."
        },
        {
          "Name": "ActionAttribute_EmailToIsRequired",
          "Value": 964107,
          "Description": "Email To is required."
        },
        {
          "Name": "ActionAttribute_ActionGeneralAttributeIsRequired",
          "Value": 964108,
          "Description": "Action General Attribute '{0} is required."
        },
        {
          "Name": "ActionAttribute_ActionGeneralAttributeIsRetired",
          "Value": 964109,
          "Description": "Action General Attribute '{0} is retired."
        },
        {
          "Name": "ActionAttribute_ActionGeneralAttributeDoesNotExist",
          "Value": 964110,
          "Description": "Action General Attribute '{0} does not exist."
        },
        {
          "Name": "ActionAttribute_DueDateAttributeAllStepsMustLinkToScheduleDate",
          "Value": 964111,
          "Description": "Due Date Attribute '{0}' requires all steps to be linked to a Schedule Date."
        },
        {
          "Name": "ActionAttribute_PeerReviewDueDateAttributeMustBeEmpty",
          "Value": 964112,
          "Description": "Peer review due date attribute must not be set."
        },
        {
          "Name": "ActionAttribute_PeerReviewAllocationAttributeMustBeEmpty",
          "Value": 964113,
          "Description": "Peer review allocation attribute must not be set."
        },
        {
          "Name": "ActionAttribute_PeerReviewDueDateAttributeIsRequired",
          "Value": 964114,
          "Description": "Peer Review Due Date Attribute is required."
        },
        {
          "Name": "ActionAttribute_PeerReviewDueDateAttributeDoesNotExist",
          "Value": 964115,
          "Description": "Peer Review Due Date Attribute '{0}' does not exist."
        },
        {
          "Name": "ActionAttribute_PeerReviewDueDateAttributeIsNotValid",
          "Value": 964116,
          "Description": "Peer Review Due Date Attribute '{0}' is not valid."
        },
        {
          "Name": "ActionAttribute_PeerReviewDueDateAttributeRequiresContractWithCustomerCalendar",
          "Value": 964117,
          "Description": "Peer Review Due Date Attribute '{0}' can only be used when parent Contract has a Customer Calendar in Action Attribute '{1}'."
        },
        {
          "Name": "ActionAttribute_PeerReviewDueDateAttributeRequiresContractWithSupplierCalendar",
          "Value": 964118,
          "Description": "Peer Review Due Date Attribute '{0}' can only be used when parent Contract has a Supplier Calendar in Action Attribute '{1}'."
        },
        {
          "Name": "ActionAttribute_PeerReviewDueDateAttributeNotValidForProcessType",
          "Value": 964119,
          "Description": "Peer Review Due Date Attribute '{0}' uses a Method which cannot be used on Actions."
        },
        {
          "Name": "ActionAttribute_PeerReviewDueDateAttributeRequiresDataDictionaryOnCard",
          "Value": 964120,
          "Description": "Peer Review Due Date Attribute '{0}' requires one of the Cards linked to the Action to contain Data Dictionary '{1}'."
        },
        {
          "Name": "ActionAttribute_PeerReviewDueDateAttributeMustLinkToSpecificScheduleStructure",
          "Value": 964121,
          "Description": "Peer Review Due Date Attribute '{0}' requires the Action to be linked to Schedule Structure '{1}'."
        },
        {
          "Name": "ActionAttribute_PeerReviewDueDateAttributeStepMustLinkToScheduleDate",
          "Value": 964122,
          "Description": "Peer Review Due Date Attribute '{0}' requires the Action to be linked to a Schedule Date."
        },
        {
          "Name": "ActionAttribute_PeerReviewDueDateAttributeAllStepsMustLinkToScheduleDate",
          "Value": 964123,
          "Description": "Peer Review Due Date Attribute '{0}' requires all Actions to be linked to a Schedule Date."
        },
        {
          "Name": "ActionAttribute_PeerReviewAllocationAttributeIsRequired",
          "Value": 964124,
          "Description": "Peer Review Allocation Attribute is required."
        },
        {
          "Name": "ActionAttribute_PeerReviewAllocationAttributeDoesNotExist",
          "Value": 964125,
          "Description": "Peer Review Allocation Attribute '{0}' does not exist."
        },
        {
          "Name": "ActionAttribute_PeerReviewAllocationAttributeIsNotValid",
          "Value": 964126,
          "Description": "Peer Review Allocation Attribute '{0}' is not valid."
        },
        {
          "Name": "ActionAttribute_PeerReviewAllocationAttributeRequiresDataDictionaryOnCard",
          "Value": 964127,
          "Description": "Peer Review Allocation Attribute '{0}' requires one of the Cards linked to the Case to contain Data Dictionary '{1}'."
        },
        {
          "Name": "ActionAttribute_PeerReviewAllocationAttributeRequiresContractWithTeam",
          "Value": 964128,
          "Description": "Peer Review Allocation Attribute '{0}' can only be used when parent Contract has a Team specified in Action Attribute '{1}'."
        },
        {
          "Name": "ActionAttribute_AbbyyPlatformIsRequired",
          "Value": 964129,
          "Description": "Abbyy Platform is required."
        },
        {
          "Name": "ActionAttribute_AbbyyProjectIsRequired",
          "Value": 964130,
          "Description": "Abbyy Project is required."
        },
        {
          "Name": "ActionAttribute_AbbyyPlatformMustBeEmpty",
          "Value": 964131,
          "Description": "Abbyy Platform Must Be Empty."
        },
        {
          "Name": "ActionAttribute_AbbyyProjectMustBeEmpty",
          "Value": 964132,
          "Description": "Abbyy Project Must Be Empty."
        },
        {
          "Name": "ActionAttribute_AbbyyFileTagMustBeEmpty",
          "Value": 964133,
          "Description": "Abbyy File Tag Must Be Empty."
        },
        {
          "Name": "ActionAttribute_AbbyyOutputFileTagMustBeEmpty",
          "Value": 964134,
          "Description": "Abbyy Output File Tag Must Be Empty."
        },
        {
          "Name": "ActionAttribute_PreviousCaseConditionOutputAttributeDoesNotExist",
          "Value": 964135,
          "Description": "Previous Case Condition Output Attribute '{1}' does not exist."
        },
        {
          "Name": "ActionAttribute_PreviousCaseConditionOutputAttributeIsRetired",
          "Value": 964136,
          "Description": "Previous Case Condition Output Attribute '{1}' is retired."
        },
        {
          "Name": "ActionAttribute_EmailTemplateDoesNotExist",
          "Value": 964137,
          "Description": "Email Template '{0}' does not exist."
        },
        {
          "Name": "ActionAttribute_EmailTemplateIsRetired",
          "Value": 964138,
          "Description": "Email Template '{0}' is retired."
        },
        {
          "Name": "ActionAttribute_EmailTemplatePurposeNotGeneral",
          "Value": 964139,
          "Description": "Email Template '{0}' purpose is not 'General'."
        },
        {
          "Name": "ActionAttribute_WebApiIntegrationUrlIsRequired",
          "Value": 964141,
          "Description": "Web Api Integration URL is required."
        },
        {
          "Name": "ActionAttribute_WebApiIntegrationUrlMustBeBlank",
          "Value": 964142,
          "Description": "Web Api Integration URL must be blank."
        },
        {
          "Name": "ActionAttribute_WebApiIntegrationUrlIsNotValid",
          "Value": 964143,
          "Description": "Web Api Integration URL ('{0}') is not valid."
        },
        {
          "Name": "ActionAttribute_DuplicateOrderWithinStep",
          "Value": 964144,
          "Description": "Order '{0}' is duplicated within step '{1}'."
        },
        {
          "Name": "ActionAttribute_StartOrWaitCaseMustHaveLiveVersion",
          "Value": 964196,
          "Description": "Start or Wait Case '{0}' must have a Live Version."
        },
        {
          "Name": "ActionAttribute_StartOrWaitCaseMustHaveLiveOrTestVersion",
          "Value": 964197,
          "Description": "Start or Wait Case '{0}' must have a Live or Test Version."
        },
        {
          "Name": "ActionAttribute_StartOrWaitCaseAttributeDoesNotExist",
          "Value": 964203,
          "Description": "Start or Wait Case '{1}' must does not exist."
        },
        {
          "Name": "ActionAttribute_StartOrWaitCaseAttributeIsRetired",
          "Value": 964204,
          "Description": "Start or Wait Case '{1}' is retired."
        },
        {
          "Name": "ActionAttribute_SideCardMustBeDifferentToMainCard",
          "Value": 964216,
          "Description": "Cannot use the same card for Main Card and Side Card."
        },
        {
          "Name": "ActionAttribute_ActionGeneralAttributeActionTypeMismatch",
          "Value": 964220,
          "Description": "Action General Attribute '{0} action type does not match action type."
        },
        {
          "Name": "ActionAttribute_StepNumberDoesNotExistInCaseType",
          "Value": 964227,
          "Description": "Step number '{0}' does not exist in Case Type."
        },
        {
          "Name": "ActionAttribute_CaseStepMismatch",
          "Value": 964232,
          "Description": "Case Step Mismatch. Step Number Expected '{0}' but found '{1}'."
        },
        {
          "Name": "ActionAttribute_StartOrWaitCaseIsRequired",
          "Value": 964233,
          "Description": "Start or Wait Case is required."
        },
        {
          "Name": "ActionAttribute_StartOrWaitCaseAttributeMustNotBeSelf",
          "Value": 964235,
          "Description": "Process to Launch is the same Process which is not supported."
        },
        {
          "Name": "ActionAttribute_ContactTagDoesNotExist",
          "Value": 964331,
          "Description": "Contact Tag '{0}' does not exist."
        },
        {
          "Name": "ActionAttribute_ContactTagIsRetired",
          "Value": 964332,
          "Description": "Contact Tag '{0}' is retired."
        },
        {
          "Name": "ActionAttribute_PeerReviewLocalChecklistMustBeEmpty",
          "Value": 964333,
          "Description": "Peer review local checklist must not be set."
        },
        {
          "Name": "ActionAttribute_AbbyyPlatformDoesNotExist",
          "Value": 964357,
          "Description": "Abbyy Platform '{0}' does not exist."
        },
        {
          "Name": "ActionAttribute_AbbyyPlatformIsRetired",
          "Value": 964358,
          "Description": "Abbyy Platform '{0}' is retired."
        },
        {
          "Name": "ActionAttribute_AbbyyProjectDoesNotExist",
          "Value": 964359,
          "Description": "Abbyy Project '{0}' does not exist."
        },
        {
          "Name": "ActionAttribute_AbbyyProjectIsRetired",
          "Value": 964360,
          "Description": "Abbyy Project '{0}' is retired."
        },
        {
          "Name": "ActionAttribute_AbbyyFileTagDoesNotExist",
          "Value": 964361,
          "Description": "Abbyy File Tag '{0}' does not exist."
        },
        {
          "Name": "ActionAttribute_AbbyyFileTagIsRetired",
          "Value": 964362,
          "Description": "Abbyy File Tag '{0}' is retired."
        },
        {
          "Name": "ActionAttribute_AbbyyOutputFileTagDoesNotExist",
          "Value": 964363,
          "Description": "Abbyy Output File Tag '{0}' does not exist."
        },
        {
          "Name": "ActionAttribute_AbbyyOutputFileTagIsRetired",
          "Value": 964364,
          "Description": "Abbyy Output File Tag '{0}' is retired."
        },
        {
          "Name": "ActionAttribute_StartOrWaitCaseAttributeUsesDifferentSchedule",
          "Value": 964365,
          "Description": "Start or Wait Case '{0}' uses a different schedule."
        },
        {
          "Name": "ActionAttribute_CannotUseSameAddressForFromAndTo",
          "Value": 964366,
          "Description": "The 'To' recipient list contains an address that may be used as a 'From' address."
        },
        {
          "Name": "ActionAttribute_CannotUseSameAddressForFromAndCC",
          "Value": 964367,
          "Description": "The 'CC' recipient list contains an address that may be used as a 'From' address."
        },
        {
          "Name": "ActionAttribute_CannotUseSameAddressForFromAndBCC",
          "Value": 964368,
          "Description": "The 'BCC' recipient list contains an address that may be used as a 'From' address."
        },
        {
          "Name": "ActionAttribute_WebApiIntegrationResponseWindowMustBePositiveInteger",
          "Value": 964369,
          "Description": "Web Api Integration Response Window can not be less than 1 minute."
        },
        {
          "Name": "ActionAttribute_WebApiIntegrationResponseWindowMustBlank",
          "Value": 964370,
          "Description": "Web Api Integration Response Window must be blank."
        },
        {
          "Name": "ActionAttribute_AllocationAttributeNotValidForProcessType",
          "Value": 964371,
          "Description": "Allocation Attribute '{0}' uses a Allocation Method which cannot be used on Actions."
        },
        {
          "Name": "ActionGeneralAttribute_DoesNotExist",
          "Value": 965000,
          "Description": "Action General Attribute '{0}' does not exist."
        },
        {
          "Name": "ActionGeneralAttribute_NameIsRequired",
          "Value": 965001,
          "Description": "Name is a required field."
        },
        {
          "Name": "ActionGeneralAttribute_NameIsDuplicated",
          "Value": 965002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "ActionGeneralAttribute_InUseByLiveConfiguration",
          "Value": 965007,
          "Description": "In use by Live configuration."
        },
        {
          "Name": "ActionGeneralAttribute_NameIsTooLong",
          "Value": 965147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "ActionGeneralAttribute_SOPURLIsTooLong",
          "Value": 965195,
          "Description": "SOP URL is too long. Maximum length is SOPURL characters."
        },
        {
          "Name": "ActionGeneralAttribute_ActionTypeCannotChange",
          "Value": 965221,
          "Description": "Action Type cannot be changed after creation."
        },
        {
          "Name": "ActionGeneralAttribute_CannotChangeFieldWhenInLiveUse",
          "Value": 965226,
          "Description": "Field cannot be changed when in use by Live configuration."
        },
        {
          "Name": "TicketAttributeVersion_MainCardDoesNotExist",
          "Value": 967016,
          "Description": "Main Card '{0}' does not exist."
        },
        {
          "Name": "TicketAttributeVersion_MainCardIsRetired",
          "Value": 967017,
          "Description": "Main Card '{0}' is retired."
        },
        {
          "Name": "TicketAttributeVersion_MainCardIsOfTypeSelfService",
          "Value": 967018,
          "Description": "Main Card '{0}' is of type self service."
        },
        {
          "Name": "TicketAttributeVersion_SideCardDoesNotExist",
          "Value": 967019,
          "Description": "Side Card '{0}' does not exist."
        },
        {
          "Name": "TicketAttributeVersion_SideCardIsRetired",
          "Value": 967020,
          "Description": "Side Card '{0}' is retired."
        },
        {
          "Name": "TicketAttributeVersion_SideCardIsOfTypeSelfService",
          "Value": 967021,
          "Description": "Side Card '{0}' is of type self service."
        },
        {
          "Name": "TicketAttributeVersion_SelfServiceCardDoesNotExist",
          "Value": 967022,
          "Description": "Self Service Card '{0}' does not exist."
        },
        {
          "Name": "TicketAttributeVersion_SelfServiceCardIsRetired",
          "Value": 967023,
          "Description": "Self Service Card '{0}' is retired."
        },
        {
          "Name": "TicketAttributeVersion_SelfServiceCardIsNotOfTypeSelfService",
          "Value": 967024,
          "Description": "Self Service Card '{0}' is of type self service."
        },
        {
          "Name": "TicketAttributeVersion_TicketLoggedEmailTemplateDoesNotExist",
          "Value": 967026,
          "Description": "Ticket Logged Email Template '{0}' does not exist."
        },
        {
          "Name": "TicketAttributeVersion_TicketLoggedEmailTemplateIsRetired",
          "Value": 967027,
          "Description": "Ticket Logged Email Template '{0}' is retired."
        },
        {
          "Name": "TicketAttributeVersion_TicketLoggedEmailTemplateNotOfTypeTicketLogged",
          "Value": 967028,
          "Description": "Ticket Logged Email Template '{0}' is not of type Ticket Logged."
        },
        {
          "Name": "TicketAttributeVersion_TicketSplitEmailTemplateDoesNotExist",
          "Value": 967029,
          "Description": "Ticket Split Email Template '{0}' does not exist."
        },
        {
          "Name": "TicketAttributeVersion_TicketSplitEmailTemplateIsRetired",
          "Value": 967030,
          "Description": "Ticket Split Email Template '{0}' is retired."
        },
        {
          "Name": "TicketAttributeVersion_TicketSplitEmailTemplateNotOfTypeTicketSplit",
          "Value": 967031,
          "Description": "Ticket Split Email Template '{0}' is not of type Ticket Split."
        },
        {
          "Name": "TicketAttributeVersion_TicketRejectedEmailTemplateDoesNotExist",
          "Value": 967032,
          "Description": "Ticket Rejected Email Template '{0}' does not exist."
        },
        {
          "Name": "TicketAttributeVersion_TicketRejectedEmailTemplateIsRetired",
          "Value": 967033,
          "Description": "Ticket Rejected Email Template '{0}' is retired."
        },
        {
          "Name": "TicketAttributeVersion_TicketRejectedEmailTemplateNotOfTypeTicketRejected",
          "Value": 967034,
          "Description": "Ticket Rejected Email Template '{0}' is not of type Ticket Rejected."
        },
        {
          "Name": "TicketAttributeVersion_TicketLaunchedCaseEmailTemplateDoesNotExist",
          "Value": 967035,
          "Description": "Ticket Launched Case Email Template '{0}' does not exist."
        },
        {
          "Name": "TicketAttributeVersion_TicketLaunchedCaseEmailTemplateIsRetired",
          "Value": 967036,
          "Description": "Ticket Launched Case Email Template '{0}' is retired."
        },
        {
          "Name": "TicketAttributeVersion_TicketLaunchedCaseEmailTemplateNotOfTypeTicketLaunchedCase",
          "Value": 967037,
          "Description": "Ticket Launched Case Email Template '{0}' is not of type Ticket Launch Case."
        },
        {
          "Name": "TicketAttributeVersion_TicketNoResponseEmailTemplateDoesNotExist",
          "Value": 967038,
          "Description": "Ticket No Response Email Template '{0}' does not exist."
        },
        {
          "Name": "TicketAttributeVersion_TicketNoResponseEmailTemplateIsRetired",
          "Value": 967039,
          "Description": "Ticket No Response Email Template '{0}' is retired."
        },
        {
          "Name": "TicketAttributeVersion_TicketNoResponseEmailTemplateNotOfTypeTicketNoResponse",
          "Value": 967040,
          "Description": "Ticket No Response Email Template '{0}' is not of type Ticket No Response."
        },
        {
          "Name": "TicketAttributeVersion_FeedbackFooterEmailTemplateDoesNotExist",
          "Value": 967041,
          "Description": "Feedback Footer Email Template '{0}' does not exist."
        },
        {
          "Name": "TicketAttributeVersion_FeedbackFooterEmailTemplateIsRetired",
          "Value": 967042,
          "Description": "Feedback Footer Email Template '{0}' is retired."
        },
        {
          "Name": "TicketAttributeVersion_FeedbackFooterEmailTemplateNotOfTypeFeedbackFooter",
          "Value": 967043,
          "Description": "Feedback Footer Email Template '{0}' is not of type Feedback Footer."
        },
        {
          "Name": "TicketAttributeVersion_DefaultAdHocEmailTemplateDoesNotExist",
          "Value": 967044,
          "Description": "Default AdHoc Email Template '{0}' does not exist."
        },
        {
          "Name": "TicketAttributeVersion_DefaultAdHocEmailTemplateIsRetired",
          "Value": 967045,
          "Description": "Default AdHoc Email Template '{0}' is retired."
        },
        {
          "Name": "TicketAttributeVersion_DefaultAdHocEmailTemplateNotOfTypeGeneral",
          "Value": 967046,
          "Description": "Default AdHoc Email Template '{0}' is not of type General."
        },
        {
          "Name": "TicketAttributeVersion_SideCardMustBeDifferentToMainCard",
          "Value": 967216,
          "Description": "Cannot use the same card for Main Card and Side Card."
        },
        {
          "Name": "TicketAttributeVersion_OneOrMoreCategoriesRequired",
          "Value": 967225,
          "Description": "Ticket must include one or more Categories."
        },
        {
          "Name": "TicketAttributeVersion_TooManyTicketCategories",
          "Value": 967236,
          "Description": "The ticket should have less then or equal to {0} Categories."
        },
        {
          "Name": "DefectCategory_NameIsRequired",
          "Value": 973001,
          "Description": "Name is required."
        },
        {
          "Name": "DefectCategory_NameIsDuplicated",
          "Value": 973002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "DefectCategory_NameIsTooLong",
          "Value": 973147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "DefectPartyAtFaultOption_NameIsRequired",
          "Value": 974001,
          "Description": "Defect Party at Fault Option Name is required."
        },
        {
          "Name": "DefectPartyAtFaultOption_NameIsDuplicated",
          "Value": 974002,
          "Description": "Defect Party at Fault Option Name is duplicated."
        },
        {
          "Name": "FileTag_DoesNotExist",
          "Value": 976000,
          "Description": "File Tag '{0}' does not exist."
        },
        {
          "Name": "FileTag_NameIsRequired",
          "Value": 976001,
          "Description": "Name is a required field."
        },
        {
          "Name": "FileTag_NameIsDuplicated",
          "Value": 976002,
          "Description": "Name '{0}' is already in use."
        },
        {
          "Name": "FileTag_NameIsTooLong",
          "Value": 976147,
          "Description": "Name is too long. Maximum length is 256 characters."
        },
        {
          "Name": "AbbyyPlatform_NameIsRequired",
          "Value": 977001,
          "Description": "Abbyy Platform Name is required."
        },
        {
          "Name": "AbbyyPlatform_NameIsDuplicated",
          "Value": 977002,
          "Description": "Abbyy Platform Name is in Use."
        },
        {
          "Name": "AbbyyPlatform_UrlIsRequired",
          "Value": 977237,
          "Description": "Abbyy Platform URL is required."
        },
        {
          "Name": "AbbyyPlatform_UrlIsNotValid",
          "Value": 977239,
          "Description": "Abbyy Platform URL is not valid."
        },
        {
          "Name": "AbbyyPlatform_UrlIsTooLong",
          "Value": 977240,
          "Description": "Abbyy Platform URL is too long."
        },
        {
          "Name": "AbbyyPlatform_UsernameIsRequired",
          "Value": 977241,
          "Description": "Abbyy Platform Username is required."
        },
        {
          "Name": "AbbyyPlatform_PasswordIsRequired",
          "Value": 977242,
          "Description": "Abbyy Platform Password is required."
        },
        {
          "Name": "CaseConditionAttribute_NameIsRequired",
          "Value": 980001,
          "Description": "Condition Name is required."
        },
        {
          "Name": "CaseConditionAttribute_ExpressionIsRequired",
          "Value": 980212,
          "Description": "Condition Expression is required."
        },
        {
          "Name": "CaseConditionAttribute_ExactlyOneElseIsRequired",
          "Value": 980213,
          "Description": "Condition must have exactly 1 Else output."
        },
        {
          "Name": "CaseConditionAttribute_External",
          "Value": 980214,
          "Description": "{0}."
        },
        {
          "Name": "CaseConditionAttribute_MustNotBeFirstCondition",
          "Value": 980215,
          "Description": "Condition using variable '{0}' must not be the first condition."
        },
        {
          "Name": "CaseConditionOutputAttribute_NameIsRequired",
          "Value": 981001,
          "Description": "Condition Output Name is required."
        },
        {
          "Name": "CannedResponse_EmailTemplateAlreadyExists",
          "Value": 984244,
          "Description": "Email Template '{0}' already exists in Service Line '{1}'."
        },
        {
          "Name": "WebHookSubscription_FilterObjectTypeIsRequired",
          "Value": 990293,
          "Description": "Missing value, FilterObjectType is mandatory and must be supplied."
        },
        {
          "Name": "WebHookSubscription_WebHookIsRequired",
          "Value": 990294,
          "Description": "Missing value, WebHook type is mandatory and must be supplied."
        },
        {
          "Name": "WebHookSubscription_SubscriberURLIsRequired",
          "Value": 990295,
          "Description": "Missing value, Subscriber URL is mandatory and must be supplied."
        },
        {
          "Name": "WebHookSubscription_URLIsNotValid",
          "Value": 990296,
          "Description": "The supplied subscription URL is not valid."
        },
        {
          "Name": "WebHookSubscription_WebHookDoesNotExist",
          "Value": 990297,
          "Description": "The requested WebHook does not exist."
        },
        {
          "Name": "WebHookSubscription_CreatedByAnotherUser",
          "Value": 990298,
          "Description": "This WebHook subscription was created by another user, you may not amend or delete it."
        },
        {
          "Name": "InvalidIntegrationRobotFarmProcessGUID",
          "Value": 990299,
          "Description": "Invalid Integration Robot Farm Process GUID"
        },
        {
          "Name": "WebHookSubscription_AlreadyExists",
          "Value": 990372,
          "Description": "A WebHook subscription with the same settings already exists. Duplicate subscriptions are not permitted"
        }
      ]
    },
    "BasicContactTag": {
      "description": "Abridged version of FullContactTag DTO for use in lists.",
      "required": [
        "Name",
        "AllowMultiple",
        "Retired"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicLocalisedNameAndDescription"
        }
      ],
      "properties": {
        "AllowMultiple": {
          "description": "Whether multiple Contacts can be attributed with this Contact Tag on the same Packet.",
          "type": "boolean"
        },
        "SupplierCompanyGUID": {
          "format": "uuid",
          "description": "Unique identifier for the Supplier Company",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Retired": {
          "description": "Is the object logically deleted.",
          "type": "boolean"
        },
        "Description": {
          "description": "Description of the Object.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the Object.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "FullContactTag": {
      "description": "All data about an Contact Tag for Builder.",
      "required": [
        "Name",
        "AllowMultiple",
        "ShowToCallHandling",
        "ShowToSelfService",
        "Retired"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicLocalisedNameAndDescription"
        }
      ],
      "properties": {
        "AllowMultiple": {
          "description": "Whether multiple Contacts can be attributed with this Contact Tag on the same Packet.",
          "type": "boolean"
        },
        "ShowToCallHandling": {
          "description": "Whether the Packets including a Contact attributed with this Contact Tag show on the Call Handling page for the Contact.",
          "type": "boolean"
        },
        "ShowToSelfService": {
          "description": "Whether the Packets including a Contact attributed with this Contact Tag show to the Contact in Self Service.",
          "type": "boolean"
        },
        "SupplierCompany": {
          "$ref": "#/definitions/BasicLocalisedNameAndDescription",
          "description": "The (optional) Supplier Company that this Contact Tag is associated with. If set the Tag will only show to Packets under a Contract for this Company."
        },
        "Retired": {
          "description": "Is the object logically deleted.",
          "type": "boolean"
        },
        "Description": {
          "description": "Description of the Object.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the Object.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ApiResponse[FullContactTag,ConfigurationValidationMessage]": {
      "description": "Used to enable the return of a created/updated object and a list of validation warnings/errors.",
      "type": "object",
      "properties": {
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationValidationMessage"
          }
        },
        "Result": {
          "$ref": "#/definitions/FullContactTag",
          "description": "The created/updated object."
        }
      }
    },
    "FullActionPacket": {
      "description": "All data about an Action Packet.",
      "type": "object",
      "properties": {
        "Checklist": {
          "description": "The checklist that the resource performing the Action must complete.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChecklistItem"
          }
        },
        "PeerReviewerChecklist": {
          "description": "The checklist for the peer reviewer resource while performing review of the completed Action.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PeerReviewerChecklistItem"
          }
        },
        "EndDate": {
          "format": "date-time",
          "description": "The date/time that the Packet was Closed.",
          "type": "string"
        },
        "CustomerGUID": {
          "format": "uuid",
          "description": "The unique identifier of the Customer that the Packet is for.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ContractGUID": {
          "format": "uuid",
          "description": "The unique identifier of the Contract between the Customer and Supplier that this Packet is transacting under.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ServiceGUID": {
          "format": "uuid",
          "description": "The unique identifier of the Service under the Contract that this Packet is for.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ServiceLineGUID": {
          "format": "uuid",
          "description": "The unique identifier of the Service Line that this Packet is for.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LastUpdatedByUserOn": {
          "format": "date-time",
          "description": "The date/time that the Packet was updated by the User identified in <seealso cref=\"P:Enate.Core.Contracts.DTOs.BaseFullPacket.LastUpdatedByUser\" />.",
          "type": "string"
        },
        "ResolutionMethod": {
          "$ref": "#/definitions/PacketResolutionMethod"
        },
        "OwnerUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that is currently responsible for the Packet even if it is not currently assigned to them to work on."
        },
        "ResolvedByUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that resolved the Packet."
        },
        "LastUpdatedByUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that last updated the Packet."
        },
        "Files": {
          "description": "The list of Files associated with this group of Packets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExistingPacketFile"
          }
        },
        "Contacts": {
          "description": "The list of Contacts associated with this group of Packets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExistingPacketContact"
          }
        },
        "Defects": {
          "description": "The list of Defects associated with this group of Packets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExistingPacketDefect"
          }
        },
        "StartDate": {
          "format": "date-time",
          "description": "The date/time that the Packet was created.",
          "type": "string"
        },
        "CustomerName": {
          "description": "The name of the Customer that the Packet is for.",
          "type": "string"
        },
        "SupplierName": {
          "description": "The name of the Supplier delivering the service for this Packet.",
          "type": "string"
        },
        "ContractName": {
          "description": "The name of the Contract between the Customer and Supplier that this Packet is transacting under.",
          "type": "string"
        },
        "ServiceName": {
          "description": "The name of the Service under the Contract that this Packet is for.",
          "type": "string"
        },
        "ServiceLineName": {
          "description": "The name of the Service Line that this Packet is for.",
          "type": "string"
        },
        "ProcessTypeName": {
          "description": "The name of the Process Type within the Service Line that this Packet is for.",
          "type": "string"
        },
        "Reference": {
          "description": "The unique and human-readable reference of the Packet.",
          "type": "string"
        },
        "Title": {
          "description": "The Title of the Packet.",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PacketStatus"
        },
        "DueDate": {
          "format": "date-time",
          "description": "The date/time that the Packet is currently due to be Resolved to meet SLA.",
          "type": "string"
        },
        "ResolvedOn": {
          "format": "date-time",
          "description": "The date/time that the Packet was Resolved.",
          "type": "string"
        },
        "StartedByMethod": {
          "$ref": "#/definitions/PacketStartedByMethod"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ChecklistItem": {
      "description": "A single Checklist on an Action.",
      "type": "object",
      "properties": {
        "PeerReviewNote": {
          "description": "Optional notes entered by the User when reviewing the decision.",
          "type": "string"
        },
        "CheckedBy": {
          "$ref": "#/definitions/UserForList",
          "description": "The user that updated the checklist decision."
        },
        "CheckedOn": {
          "format": "date-time",
          "description": "The date/time that the Checklist decision was given.",
          "type": "string"
        },
        "Result": {
          "$ref": "#/definitions/ChecklistResult"
        },
        "Note": {
          "description": "Optional notes entered by the User when giving the decision.",
          "type": "string"
        },
        "Definition": {
          "$ref": "#/definitions/ChecklistForPacket",
          "description": "The definition of the Check being performed."
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "PeerReviewerChecklistItem": {
      "description": "A single Checklist on an Action.",
      "required": [
        "Result"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseObject"
        }
      ],
      "properties": {
        "CheckedBy": {
          "$ref": "#/definitions/UserForList",
          "description": "The user that updated the checklist decision."
        },
        "CheckedOn": {
          "format": "date-time",
          "description": "The date/time that the Checklist decision was given.",
          "type": "string"
        },
        "Result": {
          "$ref": "#/definitions/ChecklistResult"
        },
        "Note": {
          "description": "Optional notes entered by the User when giving the decision.",
          "type": "string"
        },
        "Definition": {
          "$ref": "#/definitions/ChecklistForPacket",
          "description": "The definition of the Check being performed."
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ChecklistResult": {
      "enum": [
        "None",
        "NA",
        "No",
        "Yes"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "None",
          "Value": 0,
          "Description": "None"
        },
        {
          "Name": "NA",
          "Value": 1,
          "Description": "N/A"
        },
        {
          "Name": "No",
          "Value": 2,
          "Description": "No"
        },
        {
          "Name": "Yes",
          "Value": 3,
          "Description": "Yes"
        }
      ]
    },
    "ChecklistForPacket": {
      "description": "Details about a Checklist relevant for operational users.",
      "required": [
        "Order",
        "IsGlobal"
      ],
      "type": "object",
      "properties": {
        "Order": {
          "format": "int32",
          "description": "The position of the Checklist when shown on screen.",
          "type": "integer"
        },
        "Description": {
          "description": "Description of the Object.",
          "type": "string"
        },
        "IsGlobal": {
          "description": "Indication of if the Checklist is common to all Actions of the same Action Type.",
          "type": "boolean"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "FullTicketPacket": {
      "description": "All data about a Ticket Packet.",
      "type": "object",
      "properties": {
        "TicketCategoryAttribute": {
          "$ref": "#/definitions/TicketCategoryAttributeForPacket",
          "description": "The category of the Ticket."
        },
        "EndDate": {
          "format": "date-time",
          "description": "The date/time that the Packet was Closed.",
          "type": "string"
        },
        "CustomerGUID": {
          "format": "uuid",
          "description": "The unique identifier of the Customer that the Packet is for.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ContractGUID": {
          "format": "uuid",
          "description": "The unique identifier of the Contract between the Customer and Supplier that this Packet is transacting under.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ServiceGUID": {
          "format": "uuid",
          "description": "The unique identifier of the Service under the Contract that this Packet is for.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ServiceLineGUID": {
          "format": "uuid",
          "description": "The unique identifier of the Service Line that this Packet is for.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LastUpdatedByUserOn": {
          "format": "date-time",
          "description": "The date/time that the Packet was updated by the User identified in <seealso cref=\"P:Enate.Core.Contracts.DTOs.BaseFullPacket.LastUpdatedByUser\" />.",
          "type": "string"
        },
        "ResolutionMethod": {
          "$ref": "#/definitions/PacketResolutionMethod"
        },
        "OwnerUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that is currently responsible for the Packet even if it is not currently assigned to them to work on."
        },
        "StartedByUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that started the Packet."
        },
        "ResolvedByUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that resolved the Packet."
        },
        "LastUpdatedByUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that last updated the Packet."
        },
        "Files": {
          "description": "The list of Files associated with this group of Packets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExistingPacketFile"
          }
        },
        "Contacts": {
          "description": "The list of Contacts associated with this group of Packets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExistingPacketContact"
          }
        },
        "Defects": {
          "description": "The list of Defects associated with this group of Packets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExistingPacketDefect"
          }
        },
        "StartDate": {
          "format": "date-time",
          "description": "The date/time that the Packet was created.",
          "type": "string"
        },
        "CustomerName": {
          "description": "The name of the Customer that the Packet is for.",
          "type": "string"
        },
        "SupplierName": {
          "description": "The name of the Supplier delivering the service for this Packet.",
          "type": "string"
        },
        "ContractName": {
          "description": "The name of the Contract between the Customer and Supplier that this Packet is transacting under.",
          "type": "string"
        },
        "ServiceName": {
          "description": "The name of the Service under the Contract that this Packet is for.",
          "type": "string"
        },
        "ServiceLineName": {
          "description": "The name of the Service Line that this Packet is for.",
          "type": "string"
        },
        "ProcessTypeName": {
          "description": "The name of the Process Type within the Service Line that this Packet is for.",
          "type": "string"
        },
        "Reference": {
          "description": "The unique and human-readable reference of the Packet.",
          "type": "string"
        },
        "Title": {
          "description": "The Title of the Packet.",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PacketStatus"
        },
        "DueDate": {
          "format": "date-time",
          "description": "The date/time that the Packet is currently due to be Resolved to meet SLA.",
          "type": "string"
        },
        "ResolvedOn": {
          "format": "date-time",
          "description": "The date/time that the Packet was Resolved.",
          "type": "string"
        },
        "StartedByMethod": {
          "$ref": "#/definitions/PacketStartedByMethod"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }

    },
    "TicketCategoryAttributeForPacket": {
      "description": "The data about a Ticket Category that is relevant for a Ticket Packet at runtime.",
      "required": [
        "CategoryLevel1GUID",
        "CategoryLevel2GUID",
        "CategoryLevel3GUID",
        "AllowTitleChange",
        "RecordCount"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseObject"
        }
      ],
      "properties": {
        "CategoryLevel1": {
          "description": "The name of the Level 1 Ticket Category",
          "type": "string"
        },
        "CategoryLevel1GUID": {
          "format": "uuid",
          "description": "The unique identifier of the Level 1 Ticket Category",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CategoryLevel2": {
          "description": "The name of the Level 2 Ticket Category",
          "type": "string"
        },
        "CategoryLevel2GUID": {
          "format": "uuid",
          "description": "The unique identifier of the Level 2 Ticket Category",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CategoryLevel3": {
          "description": "The name of the Level 3 Ticket Category",
          "type": "string"
        },
        "CategoryLevel3GUID": {
          "format": "uuid",
          "description": "The unique identifier of the Level 3 Ticket Category",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AllowTitleChange": {
          "description": "Can the Title of Tickets in this category have their Titles changed after they have been created.",
          "type": "boolean"
        },
        "EstimatedDurationMS": {
          "format": "double",
          "description": "The time in milliseconds it is estimated for an Operational User to resolve a Ticket in this Category.",
          "type": "number"
        },
        "RecordCount": {
          "description": "Should the Record Count field show to Operational Users for Tickets in this Category.",
          "type": "boolean"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ActionAttributeForLaunch": {
      "description": "The data about an Action Attribute that is relevant for launching an action",
      "required": [
        "Order",
        "AllowManualCreation",
        "AllowOverrideDueDate",
        "IsAdhoc"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseObject"
        }
      ],
      "properties": {
        "Order": {
          "format": "int32",
          "description": "The Order of the Action within the Step.",
          "type": "integer"
        },
        "StepNumber": {
          "format": "int32",
          "description": "The number of the Step that this Action is on.",
          "type": "integer"
        },
        "AllowManualCreation": {
          "description": "True if a User can manually start this Action.",
          "type": "boolean"
        },
        "Instruction": {
          "description": "The instructions to display to Operational Users to help them complete this Action.",
          "type": "string"
        },
        "AllowOverrideDueDate": {
          "$ref": "#/definitions/AllowOverrideDueDate"
        },
        "DueDateAttribute": {
          "$ref": "#/definitions/DueDateAttributeForPacket",
          "description": "The Due Date flavour for this Action."
        },
        "ActionName": {
          "description": "The name of the action",
          "type": "string"
        },
        "IsAdhoc": {
          "description": "Is This an Adhoc Action",
          "type": "boolean"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "AllowOverrideDueDate": {
      "enum": [
        "No",
        "Yes",
        "OnCreationOnly"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "No",
          "Value": 0,
          "Description": "No"
        },
        {
          "Name": "Yes",
          "Value": 1,
          "Description": "Yes"
        },
        {
          "Name": "OnCreationOnly",
          "Value": 2,
          "Description": "On Creation Only"
        }
      ]
    },
    "DueDateAttributeForPacket": {
      "description": "The data about an Due Date Attribute that is relevant for a Packet at runtime.",
      "required": [
        "Name",
        "AllowOverrideDueDate"
      ],
      "type": "object",
      "properties": {
        "AllowOverrideDueDate": {
          "$ref": "#/definitions/AllowOverrideDueDate"
        },
        "Retired": {
          "description": "Is the object logically deleted.",
          "type": "boolean"
        },
        "InUseByLiveProcess": {
          "description": "Flag indicating if the attribute is referenced by a live Case/Ticket process.",
          "type": "boolean"
        },
        "Description": {
          "description": "Description of the Object.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the Object.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "BasicPacket": {
      "description": "Abridged version of FullPacket DTO for use in lists.",
      "required": [
        "StartDate",
        "Status",
        "StartedByMethod"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseObject"
        }
      ],
      "properties": {
        "StartDate": {
          "format": "date-time",
          "description": "The date/time that the Packet was created.",
          "type": "string"
        },
        "CustomerName": {
          "description": "The name of the Customer that the Packet is for.",
          "type": "string"
        },
        "SupplierName": {
          "description": "The name of the Supplier delivering the service for this Packet.",
          "type": "string"
        },
        "ContractName": {
          "description": "The name of the Contract between the Customer and Supplier that this Packet is transacting under.",
          "type": "string"
        },
        "ServiceName": {
          "description": "The name of the Service under the Contract that this Packet is for.",
          "type": "string"
        },
        "ServiceLineName": {
          "description": "The name of the Service Line that this Packet is for.",
          "type": "string"
        },
        "ProcessTypeName": {
          "description": "The name of the Process Type within the Service Line that this Packet is for.",
          "type": "string"
        },
        "Reference": {
          "description": "The unique and human-readable reference of the Packet.",
          "type": "string"
        },
        "Title": {
          "description": "The Title of the Packet.",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PacketStatus"
        },
        "DueDate": {
          "format": "date-time",
          "description": "The date/time that the Packet is currently due to be Resolved to meet SLA.",
          "type": "string"
        },
        "ResolvedOn": {
          "format": "date-time",
          "description": "The date/time that the Packet was Resolved.",
          "type": "string"
        },
        "StartedByMethod": {
          "$ref": "#/definitions/PacketStartedByMethod"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "PacketValidationMessage": {
      "description": "A validation message that relates to Packet objects.",
      "required": [
        "MessageID"
      ],
      "type": "object",
      "properties": {
        "MessageID": {
          "$ref": "#/definitions/PacketValidatorMessage"
        },
        "IsError": {
          "description": "Indicates the severity of this message.",
          "type": "boolean",
          "readOnly": true
        },
        "MessageDescription": {
          "description": "Default (en-gb) translation lookup (without parameter replacement).",
          "type": "string",
          "readOnly": true
        },
        "Parameters": {
          "description": "A zero based, integer indexed collection of objects to insert into the MessageDescription.",
          "type": "array",
          "items": {
            "type": "object"
          },
          "readOnly": true
        }
      }
    },
    "PacketValidatorMessage": {
      "enum": [
        "General_UnexpectedFailure",
        "Packet_CannotChangeTitle",
        "Packet_ScheduledFollowUpOnMustBeInFuture",
        "Packet_ScheduledFollowUpOnRequired",
        "Packet_RecordCountMustBeGreatherThanZero",
        "Packet_OverrideDueDateCannotChange",
        "Packet_OverrideDueDateNotValid",
        "Packet_PrimaryContactMissing",
        "Packet_RequestorContactMissing",
        "Packet_NotAccessibleBySSOUser",
        "Packet_NotAccessibleByAuthenticatedUser",
        "Packet_IsCompletedNoUpdatesPossible",
        "Packet_IsNotAssignedToAuthenticatedUser",
        "Packet_AuthenticatedUserCanOnlyAccessLivePackets",
        "Packet_AuthenticatedUserCanOnlyAccessTestPackets",
        "Packet_DaysToWaitForMoreInformationMustBeGreaterThanOne",
        "Packet_PacketCannotBeDeletedWhenProcessing",
        "Packet_PacketCannotBeDeletedWithCommunications",
        "Packet_TitleCannotBeBlank",
        "Packet_CannotLinkToItself",
        "PacketContact_EmployeeDoesNotExist",
        "PacketContact_EmployeeNotValidForPacketCompany",
        "PacketContact_UserIsRetired",
        "PacketContactTag_TagDoesNotExist",
        "PacketContactTag_TagUseIncorrect",
        "PacketContactTag_ContactTagNotValidForPacketCompany",
        "PacketContactTag_ContactTagRetired",
        "PacketDefect_NotFound",
        "PacketDefect_DefectPartyAtFaultDoesNotExist",
        "PacketDefect_DefectCategoryDoesNotExist",
        "PacketDefect_DefectCategoryHasChildLevels",
        "PacketDefect_RetiredDefectCannotBeUpdated",
        "PacketDefect_DefectCategoryIsRetired",
        "PacketDefect_DefectPartyAtFaultIsRetired",
        "PacketCommunication_NotAccessibleByAuthenticatedUser",
        "PacketCommunication_AuthenticatedUserCanOnlyAccessLivePackets",
        "PacketCommunication_AuthenticatedUserCanOnlyAccessTestPackets",
        "PacketCustomData_AlreadyUpdated",
        "PacketCustomData_ShortTextTooLong",
        "PacketCustomData_ValueNotInList",
        "PacketCustomData_MultipleLevelListTooLong",
        "PacketCustomData_InvalidDateTimeValue",
        "PacketCustomData_InvalidDateValue",
        "PacketCustomData_InvalidCheckBoxValue",
        "PacketCustomData_InvalidDecimalValue",
        "PacketCustomData_InvalidWholeValue",
        "PacketCustomData_FieldNotFound",
        "PacketCustomData_TableFieldNotFound",
        "PacketCustomData_InvalidMultipleLevelListValue",
        "PacketCustomData_ValueNotInMultipleLevelList",
        "PacketFile_NotFound",
        "PacketFile_DataUpdateNotAllowed",
        "PacketFile_ReplaceFileNotAllowed",
        "PacketFile_FilenameChanged",
        "PacketFile_DataRequired",
        "PacketFile_DataOrTemporaryFileGUID",
        "PacketFile_FileNameRequired",
        "PacketFile_FileNameNotRequired",
        "PacketFile_TemporaryFileNotFound",
        "PacketFile_TagNotFound",
        "PacketFile_EmailAttachmentMustHaveGUID",
        "PacketFile_EmailAttachmentCannotBeRetired",
        "AllocationAttribute_UserDoesNotHaveReassignPermission",
        "AllocationAttribute_UserDoesNotHaveAccessToPacketType",
        "AllocationAttribute_UserRetired",
        "AllocationAttribute_UserDoesNotHaveAccessToPacket",
        "AllocationAttribute_RobotIsSuspended",
        "AllocationAttribute_PacketAlreadyAssignedToRobotTooManyTimes",
        "AllocationAttribute_PacketCannotBeAssignedToRobotDuringPeerReview",
        "AllocationAttribute_PacketCannotBeAssignedToRobot",
        "AllocationAttribute_RobotNotInRobotFarm",
        "AllocationAttribute_CaseCannotAssignToRobotUser",
        "AllocationAttribute_UserIsWrongType",
        "AllocationAttribute_UserInvolvedInDoing",
        "AllocationAttribute_UserInvolvedInPeerReview",
        "AllocationAttribute_PacketAlreadyAssigned",
        "AllocationAttribute_UserDoesNotExist",
        "Case_CaseAttributeVersionGUIDRequired",
        "Case_ActionAttributeNotInCase",
        "Case_ReworkFromStepMustBeCompletedOrCurrent",
        "Case_CaseDoesNotSupportSchedules",
        "Case_CaseScheduleSpecifiedIsDifferentToExpected",
        "Case_CaseCannotChangeScheduleWithoutRework",
        "Case_CaseRequireScheduleToBeSpecified",
        "Case_CaseReworkParamenterRequiredTooMany",
        "Case_CaseReworkParamenterRequiredNotEnough",
        "Case_CaseAttributeGUIDNotFound",
        "Case_CaseCantBeCompletedWithRunningWorkItems",
        "Case_ActionAttributeVersionMismatch",
        "Case_ReworkFromStepMustExist",
        "Case_CannotResolveInThisState",
        "Action_NotWaitingForExternalAPI",
        "Action_RetryNotSupported",
        "Action_NotDoneSuccessfullyCommentIsRequired",
        "Action_CannotCloseWithOutstandingChecklists",
        "Action_PeerReviewCommentIsRequired",
        "Ticket_NewSplitTicketsNeedsMoreItems",
        "Ticket_TicketCategoryAttributeOrTicketAttributeVersionGUIDRequired",
        "Ticket_TicketAttributeVersionDraft",
        "Ticket_TicketAttributeVersionTesting",
        "Ticket_TicketAttributeVersionRetiring",
        "Ticket_TicketAttributeVersionArchived",
        "Ticket_RequesterUserGUIDCannotBeSetWithContacts",
        "Ticket_UnableToUpdateWhileWaitingForChildPackets",
        "Ticket_UnableToMergeIntoAClosedPacket",
        "Ticket_UnableToReopenTicketWhenNotResolved",
        "Ticket_MergeTargetDoesNotExist",
        "Ticket_MergeTargetIsSelf",
        "Ticket_VersionTypeMismacth",
        "Ticket_CategoryDoesNotExist",
        "Ticket_CategoryIsRetired",
        "Ticket_StartedCaseMustBeLiveOrRetiring",
        "Ticket_CannotChangeDescription",
        "Ticket_ResolutionCommunicationIsRequired",
        "Ticket_ResolutionCommunicationMustBeForThisTicket",
        "Ticket_StartedCaseMustBeTestingLiveOrRetiring"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "General_UnexpectedFailure",
          "Value": 1,
          "Description": "Unexpected failure during validation. This has been logged as incident {0}."
        },
        {
          "Name": "Packet_CannotChangeTitle",
          "Value": 81001,
          "Description": "Packet title cannot be changed."
        },
        {
          "Name": "Packet_ScheduledFollowUpOnMustBeInFuture",
          "Value": 81007,
          "Description": "Scheduled follow up on date must be in the future."
        },
        {
          "Name": "Packet_ScheduledFollowUpOnRequired",
          "Value": 81008,
          "Description": "When Wait Type is Future Date the Scheduled Follow Up On date must be specified."
        },
        {
          "Name": "Packet_RecordCountMustBeGreatherThanZero",
          "Value": 81009,
          "Description": "Record count must be at least 1."
        },
        {
          "Name": "Packet_OverrideDueDateCannotChange",
          "Value": 81013,
          "Description": "Override Due Date cannot be changed on this packet."
        },
        {
          "Name": "Packet_OverrideDueDateNotValid",
          "Value": 81014,
          "Description": "Override Due Date cannot be set to this value."
        },
        {
          "Name": "Packet_PrimaryContactMissing",
          "Value": 81015,
          "Description": "A Contact with the Primary Contact Tag must exist."
        },
        {
          "Name": "Packet_RequestorContactMissing",
          "Value": 81017,
          "Description": "A Contact with the Requester Tag must exist."
        },
        {
          "Name": "Packet_NotAccessibleBySSOUser",
          "Value": 81018,
          "Description": "Packet is not accessible by the authenticated Self Service user."
        },
        {
          "Name": "Packet_NotAccessibleByAuthenticatedUser",
          "Value": 81019,
          "Description": "Packet is not accessible by the authenticated user."
        },
        {
          "Name": "Packet_IsCompletedNoUpdatesPossible",
          "Value": 81020,
          "Description": "Packet has already completed. No updates possible."
        },
        {
          "Name": "Packet_IsNotAssignedToAuthenticatedUser",
          "Value": 81021,
          "Description": "Packet is not assigned to authenticated user."
        },
        {
          "Name": "Packet_AuthenticatedUserCanOnlyAccessLivePackets",
          "Value": 81022,
          "Description": "User is currently authenticated to work on Live Packets but requested Packet is not Live."
        },
        {
          "Name": "Packet_AuthenticatedUserCanOnlyAccessTestPackets",
          "Value": 81023,
          "Description": "User is currently authenticated to work on Test Packets but requested Packet is not Testing."
        },
        {
          "Name": "Packet_DaysToWaitForMoreInformationMustBeGreaterThanOne",
          "Value": 81025,
          "Description": "The Days to Wait For More Information must be null or greater than 0."
        },
        {
          "Name": "Packet_PacketCannotBeDeletedWhenProcessing",
          "Value": 81026,
          "Description": "The Packet cannot be deleted as it has started processing."
        },
        {
          "Name": "Packet_PacketCannotBeDeletedWithCommunications",
          "Value": 81027,
          "Description": "The Packet cannot be deleted as it has Communications."
        },
        {
          "Name": "Packet_TitleCannotBeBlank",
          "Value": 81028,
          "Description": "Packet title cannot be blank."
        },
        {
          "Name": "Packet_CannotLinkToItself",
          "Value": 81029,
          "Description": "Packet cannot be linked to itself."
        },
        {
          "Name": "PacketContact_EmployeeDoesNotExist",
          "Value": 83001,
          "Description": "Contact with GUID '{0}' does not exist."
        },
        {
          "Name": "PacketContact_EmployeeNotValidForPacketCompany",
          "Value": 83002,
          "Description": "Contact with GUID '{0}' cannot be used with this Packet as it is scoped to a different company."
        },
        {
          "Name": "PacketContact_UserIsRetired",
          "Value": 83003,
          "Description": "Contact '{0}' is retired."
        },
        {
          "Name": "PacketContactTag_TagDoesNotExist",
          "Value": 84001,
          "Description": "Contact Tag with GUID '{0}' does not exist."
        },
        {
          "Name": "PacketContactTag_TagUseIncorrect",
          "Value": 84002,
          "Description": "Contact Tag '{0}' cannot be used multiple times."
        },
        {
          "Name": "PacketContactTag_ContactTagNotValidForPacketCompany",
          "Value": 84003,
          "Description": "Contact Tag '{0}' cannot be used with this Packet as it is scoped to a different company."
        },
        {
          "Name": "PacketContactTag_ContactTagRetired",
          "Value": 84004,
          "Description": "Contact Tag '{0}' cannot be added because it has been retired."
        },
        {
          "Name": "PacketDefect_NotFound",
          "Value": 88001,
          "Description": "Defect with GUID '{0}' does not exist."
        },
        {
          "Name": "PacketDefect_DefectPartyAtFaultDoesNotExist",
          "Value": 88002,
          "Description": "Defect Party at Fault with GUID '{0}' does not exist."
        },
        {
          "Name": "PacketDefect_DefectCategoryDoesNotExist",
          "Value": 88003,
          "Description": "Defect Category with GUID '{0}' does not exist."
        },
        {
          "Name": "PacketDefect_DefectCategoryHasChildLevels",
          "Value": 88004,
          "Description": "Defect Category with GUID '{0}' has child levels. Only a Defect Category with no further levels can be selected."
        },
        {
          "Name": "PacketDefect_RetiredDefectCannotBeUpdated",
          "Value": 88005,
          "Description": "Defect with GUID '{0}' is retired and not updatable."
        },
        {
          "Name": "PacketDefect_DefectCategoryIsRetired",
          "Value": 88006,
          "Description": "Defect category '{0}' is retired."
        },
        {
          "Name": "PacketDefect_DefectPartyAtFaultIsRetired",
          "Value": 88007,
          "Description": "Defect party at fault '{0}' is retired."
        },
        {
          "Name": "PacketCommunication_NotAccessibleByAuthenticatedUser",
          "Value": 817001,
          "Description": "Packet Communication is not accessible by the authenticated user."
        },
        {
          "Name": "PacketCommunication_AuthenticatedUserCanOnlyAccessLivePackets",
          "Value": 817002,
          "Description": "User is currently authenticated to work on Live Packets but requested Communication item is not Live."
        },
        {
          "Name": "PacketCommunication_AuthenticatedUserCanOnlyAccessTestPackets",
          "Value": 817003,
          "Description": "User is currently authenticated to work on Test Packets but requested Communication item is not Testing."
        },
        {
          "Name": "PacketCustomData_AlreadyUpdated",
          "Value": 828001,
          "Description": "Data Fields last updated at {0} but when downloaded was last updated at {1}. Update blocked to avoid accidental overwrite."
        },
        {
          "Name": "PacketCustomData_ShortTextTooLong",
          "Value": 828002,
          "Description": "Short Text field '{0}' cannot be longer than 400 characters."
        },
        {
          "Name": "PacketCustomData_ValueNotInList",
          "Value": 828003,
          "Description": "List field '{0}' cannot contain value '{1}'."
        },
        {
          "Name": "PacketCustomData_MultipleLevelListTooLong",
          "Value": 828004,
          "Description": "Multiple Level List field '{0}' cannot be longer than 400 characters."
        },
        {
          "Name": "PacketCustomData_InvalidDateTimeValue",
          "Value": 828005,
          "Description": "'{1}' is not a valid Date/Time value in field '{0}'."
        },
        {
          "Name": "PacketCustomData_InvalidDateValue",
          "Value": 828006,
          "Description": "'{1}' is not a valid Date value in field '{0}'."
        },
        {
          "Name": "PacketCustomData_InvalidCheckBoxValue",
          "Value": 828007,
          "Description": "'{1}' is not a valid CheckBox value in field '{0}'."
        },
        {
          "Name": "PacketCustomData_InvalidDecimalValue",
          "Value": 828008,
          "Description": "'{1}' is not a valid Decimal value in field '{0}'."
        },
        {
          "Name": "PacketCustomData_InvalidWholeValue",
          "Value": 828009,
          "Description": "'{1}' is not a valid Whole value in field '{0}'."
        },
        {
          "Name": "PacketCustomData_FieldNotFound",
          "Value": 828010,
          "Description": "'{0}' is not a valid field for this Packet."
        },
        {
          "Name": "PacketCustomData_TableFieldNotFound",
          "Value": 828011,
          "Description": "'{0}' is not a valid field for the table field '{1}'."
        },
        {
          "Name": "PacketCustomData_InvalidMultipleLevelListValue",
          "Value": 828012,
          "Description": "'{0}' is not a valid JSON array for Multiple Level List field '{1}'."
        },
        {
          "Name": "PacketCustomData_ValueNotInMultipleLevelList",
          "Value": 828013,
          "Description": "Multiple Level List field '{0}' cannot contain value '{1}'."
        },
        {
          "Name": "PacketFile_NotFound",
          "Value": 829001,
          "Description": "File with GUID '{0}' not found."
        },
        {
          "Name": "PacketFile_DataUpdateNotAllowed",
          "Value": 829002,
          "Description": "File with GUID '{0}' contains data. Update of existing Files is not supported."
        },
        {
          "Name": "PacketFile_ReplaceFileNotAllowed",
          "Value": 829003,
          "Description": "File with GUID '{0}' has a TemporaryFileGUID. Update of existing Files is not supported."
        },
        {
          "Name": "PacketFile_FilenameChanged",
          "Value": 829004,
          "Description": "File with GUID '{0}' has a different File name. Update of existing Files is not supported."
        },
        {
          "Name": "PacketFile_DataRequired",
          "Value": 829005,
          "Description": "New File must contain either Data or have a TemporaryFileGUID set."
        },
        {
          "Name": "PacketFile_DataOrTemporaryFileGUID",
          "Value": 829006,
          "Description": "New File must contain either Data or have a TemporaryFileGUID set; not both."
        },
        {
          "Name": "PacketFile_FileNameRequired",
          "Value": 829007,
          "Description": "New File with Data must also include a File name."
        },
        {
          "Name": "PacketFile_FileNameNotRequired",
          "Value": 829008,
          "Description": "New File with TemporaryFileGUID must not include a different File name to the previously uploaded Temporary File."
        },
        {
          "Name": "PacketFile_TemporaryFileNotFound",
          "Value": 829009,
          "Description": "TemporaryFileGUID specified in new File not found."
        },
        {
          "Name": "PacketFile_TagNotFound",
          "Value": 829010,
          "Description": "File with GUID '{0}' has an unrecognised Tag with GUID '{1}'."
        },
        {
          "Name": "PacketFile_EmailAttachmentMustHaveGUID",
          "Value": 829011,
          "Description": "File with a source of EmailAttachment cannot have an empty GUID."
        },
        {
          "Name": "PacketFile_EmailAttachmentCannotBeRetired",
          "Value": 829012,
          "Description": "File with a source of EmailAttachment cannot be Retired."
        },
        {
          "Name": "AllocationAttribute_UserDoesNotHaveReassignPermission",
          "Value": 957001,
          "Description": "Authenticated User does not have permission to reassign packets."
        },
        {
          "Name": "AllocationAttribute_UserDoesNotHaveAccessToPacketType",
          "Value": 957002,
          "Description": "User '{0}' does not have access to Packets of type '{1}'."
        },
        {
          "Name": "AllocationAttribute_UserRetired",
          "Value": 957003,
          "Description": "User '{0}' is retired."
        },
        {
          "Name": "AllocationAttribute_UserDoesNotHaveAccessToPacket",
          "Value": 957004,
          "Description": "User '{0}' does not have permission to access Packet '{1}'."
        },
        {
          "Name": "AllocationAttribute_RobotIsSuspended",
          "Value": 957005,
          "Description": "Robot User '{0}' is suspended and cannot be assigned work."
        },
        {
          "Name": "AllocationAttribute_PacketAlreadyAssignedToRobotTooManyTimes",
          "Value": 957006,
          "Description": "Packet '{0}' has already been assigned to a Robot '{1}' times. Maximum allowed is '{2}'."
        },
        {
          "Name": "AllocationAttribute_PacketCannotBeAssignedToRobotDuringPeerReview",
          "Value": 957007,
          "Description": "Packet '{0}' cannot be assigned to a Robot User during Peer Review."
        },
        {
          "Name": "AllocationAttribute_PacketCannotBeAssignedToRobot",
          "Value": 957008,
          "Description": "Packet '{0}' cannot be assigned to a Robot because no Robot Farm is configured for it."
        },
        {
          "Name": "AllocationAttribute_RobotNotInRobotFarm",
          "Value": 957009,
          "Description": "Packet '{0}' cannot be assigned to Robot User '{1}' because it is not a member of the configured Robot Farm '{2}'."
        },
        {
          "Name": "AllocationAttribute_CaseCannotAssignToRobotUser",
          "Value": 957010,
          "Description": "Packet '{0}' is a Case which cannot be assigned to a Robot User."
        },
        {
          "Name": "AllocationAttribute_UserIsWrongType",
          "Value": 957011,
          "Description": "Packet '{0}' cannot be assigned to User '{1}' because they are of type '{2}' which cannot be assigned Packets."
        },
        {
          "Name": "AllocationAttribute_UserInvolvedInDoing",
          "Value": 957012,
          "Description": "Packet '{0}' cannot be assigned to User '{1}' because it is in Peer Review and they were involved in the activity."
        },
        {
          "Name": "AllocationAttribute_UserInvolvedInPeerReview",
          "Value": 957013,
          "Description": "Packet '{0}' cannot be assigned to User '{1}' because it is not in Peer Review and they were involved in the peer review."
        },
        {
          "Name": "AllocationAttribute_PacketAlreadyAssigned",
          "Value": 957014,
          "Description": "Packet '{0}' is already assigned to '{1}'."
        },
        {
          "Name": "AllocationAttribute_UserDoesNotExist",
          "Value": 957015,
          "Description": "User '{0}' does not exist."
        },
        {
          "Name": "Case_CaseAttributeVersionGUIDRequired",
          "Value": 963001,
          "Description": "When creating a new Case CaseAttributeVersionGUID must be specified."
        },
        {
          "Name": "Case_ActionAttributeNotInCase",
          "Value": 963002,
          "Description": "ReworkFromActionAttributeGUID must exist in the case."
        },
        {
          "Name": "Case_ReworkFromStepMustBeCompletedOrCurrent",
          "Value": 963004,
          "Description": "ReworkFromStep must have already started."
        },
        {
          "Name": "Case_CaseDoesNotSupportSchedules",
          "Value": 963005,
          "Description": "This Case does not support Schedules."
        },
        {
          "Name": "Case_CaseScheduleSpecifiedIsDifferentToExpected",
          "Value": 963006,
          "Description": "The Schedule Period Supplied is not the expected Schedule Period for this Case."
        },
        {
          "Name": "Case_CaseCannotChangeScheduleWithoutRework",
          "Value": 963007,
          "Description": "Changing Schedule without Case being put to Rework is invalid"
        },
        {
          "Name": "Case_CaseRequireScheduleToBeSpecified",
          "Value": 963008,
          "Description": "This Case requires a Schedule to be specified."
        },
        {
          "Name": "Case_CaseReworkParamenterRequiredTooMany",
          "Value": 963009,
          "Description": "ReworkFromStep and ReworkFromActionAttributeGUID are mutually exclusive. Please only specify 1 property."
        },
        {
          "Name": "Case_CaseReworkParamenterRequiredNotEnough",
          "Value": 963010,
          "Description": "ReworkFromStep or ReworkFromActionAttributeGUID must be specified."
        },
        {
          "Name": "Case_CaseAttributeGUIDNotFound",
          "Value": 963011,
          "Description": "CaseAttributeGUID Not Found."
        },
        {
          "Name": "Case_CaseCantBeCompletedWithRunningWorkItems",
          "Value": 963012,
          "Description": "Case Can't be Completed With Running Packets."
        },
        {
          "Name": "Case_ActionAttributeVersionMismatch",
          "Value": 963013,
          "Description": "Launched action attribute must be from the same case attribute version as the case."
        },
        {
          "Name": "Case_ReworkFromStepMustExist",
          "Value": 963014,
          "Description": "ReworkFromStep must be a valid step within the case attribute version."
        },
        {
          "Name": "Case_CannotResolveInThisState",
          "Value": 963015,
          "Description": "Case can not be resolved as there are incomplete steps, the progression mode is automatic or the case is not in state 'In Progress'."
        },
        {
          "Name": "Action_NotWaitingForExternalAPI",
          "Value": 964001,
          "Description": "The action is not waiting for the response to an external API request."
        },
        {
          "Name": "Action_RetryNotSupported",
          "Value": 964002,
          "Description": "The action type does not support retry."
        },
        {
          "Name": "Action_NotDoneSuccessfullyCommentIsRequired",
          "Value": 964003,
          "Description": "NotDoneSuccessfullyComment is required."
        },
        {
          "Name": "Action_CannotCloseWithOutstandingChecklists",
          "Value": 964004,
          "Description": "Cannot resolve with outstanding checklists."
        },
        {
          "Name": "Action_PeerReviewCommentIsRequired",
          "Value": 964005,
          "Description": "Cannot fail peer review without comment."
        },
        {
          "Name": "Ticket_NewSplitTicketsNeedsMoreItems",
          "Value": 967001,
          "Description": "When splitting a Ticket it must be split into at least 2 Tickets."
        },
        {
          "Name": "Ticket_TicketCategoryAttributeOrTicketAttributeVersionGUIDRequired",
          "Value": 967002,
          "Description": "When creating a new Ticket either TicketCategoryAttribute or TicketAttributeVersionGUID must be specified."
        },
        {
          "Name": "Ticket_TicketAttributeVersionDraft",
          "Value": 967003,
          "Description": "The Ticket Attribute Version configuration is Draft and no new Tickets can be created."
        },
        {
          "Name": "Ticket_TicketAttributeVersionTesting",
          "Value": 967004,
          "Description": "The Ticket Attribute Version configuration is Testing and current session is not in Test Mode."
        },
        {
          "Name": "Ticket_TicketAttributeVersionRetiring",
          "Value": 967005,
          "Description": "The Ticket Attribute Version configuration is Retiring and no new Tickets can be created."
        },
        {
          "Name": "Ticket_TicketAttributeVersionArchived",
          "Value": 967006,
          "Description": "The Ticket Attribute Version configuration is Archived and no new Tickets can be created."
        },
        {
          "Name": "Ticket_RequesterUserGUIDCannotBeSetWithContacts",
          "Value": 967007,
          "Description": "When RequesterUserGUID is set the Contacts collection must be empty or null."
        },
        {
          "Name": "Ticket_UnableToUpdateWhileWaitingForChildPackets",
          "Value": 967008,
          "Description": "When waiting for Child Packets the Ticket cannot be updated."
        },
        {
          "Name": "Ticket_UnableToMergeIntoAClosedPacket",
          "Value": 967009,
          "Description": "Unable to merge into a Target Packet that is already closed."
        },
        {
          "Name": "Ticket_UnableToReopenTicketWhenNotResolved",
          "Value": 967010,
          "Description": "Unable to reopen a Ticket that is not resolved."
        },
        {
          "Name": "Ticket_MergeTargetDoesNotExist",
          "Value": 967011,
          "Description": "Ticket to merge into ('{0}') does not exist."
        },
        {
          "Name": "Ticket_MergeTargetIsSelf",
          "Value": 967013,
          "Description": "Ticket cannot be merged into itself."
        },
        {
          "Name": "Ticket_VersionTypeMismacth",
          "Value": 967014,
          "Description": "Tickets of type [{0}] cannot be merged into a Packet of type [{1}]."
        },
        {
          "Name": "Ticket_CategoryDoesNotExist",
          "Value": 967018,
          "Description": "Ticket category '{0}' does not exist."
        },
        {
          "Name": "Ticket_CategoryIsRetired",
          "Value": 967019,
          "Description": "Ticket category '{0}' is retired."
        },
        {
          "Name": "Ticket_StartedCaseMustBeLiveOrRetiring",
          "Value": 967020,
          "Description": "Case '{0}' must be live or retiring."
        },
        {
          "Name": "Ticket_CannotChangeDescription",
          "Value": 967021,
          "Description": "Ticket description cannot be changed."
        },
        {
          "Name": "Ticket_ResolutionCommunicationIsRequired",
          "Value": 967022,
          "Description": "Ticket does not have a Resolution communication."
        },
        {
          "Name": "Ticket_ResolutionCommunicationMustBeForThisTicket",
          "Value": 967023,
          "Description": "Resolution communication must be for this ticket."
        },
        {
          "Name": "Ticket_StartedCaseMustBeTestingLiveOrRetiring",
          "Value": 967024,
          "Description": "Case '{0}' must be testing, live or retiring."
        }
      ]
    },
    "ApiResponse[BasicPacket,PacketValidationMessage]": {
      "description": "Used to enable the return of a created/updated object and a list of validation warnings/errors.",
      "type": "object",
      "properties": {
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketValidationMessage"
          }
        },
        "Result": {
          "$ref": "#/definitions/BasicPacket",
          "description": "The created/updated object."
        }
      }
    },
    "PacketCommunicationForList": {
      "required": [
        "GUID",
        "Logged",
        "Read",
        "AttachmentCount",
        "IsSystemGenerated",
        "Importance",
        "CommunicationScope",
        "Type",
        "IsResolutionCommunication"
      ],
      "type": "object",
      "properties": {
        "GUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "From": {
          "type": "string"
        },
        "Logged": {
          "format": "date-time",
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Body": {
          "type": "string"
        },
        "Read": {
          "type": "boolean"
        },
        "AttachmentCount": {
          "format": "int32",
          "type": "integer"
        },
        "IsSystemGenerated": {
          "type": "boolean"
        },
        "FromUser": {
          "$ref": "#/definitions/CaseFlowContact"
        },
        "CancelledByUser": {
          "$ref": "#/definitions/UserForList"
        },
        "Importance": {
          "$ref": "#/definitions/PacketCommunicationImportance"
        },
        "ImportanceDescription": {
          "type": "string",
          "readOnly": true,
          "x-is-deprecated": true
        },
        "CommunicationScope": {
          "$ref": "#/definitions/PacketCommunicationScopeType"
        },
        "CommunicationScopeDescription": {
          "type": "string",
          "readOnly": true,
          "x-is-deprecated": true
        },
        "Type": {
          "$ref": "#/definitions/PacketCommunicationType"
        },
        "TypeDescription": {
          "type": "string",
          "readOnly": true,
          "x-is-deprecated": true
        },
        "IsResolutionCommunication": {
          "type": "boolean"
        },
        "SentOn": {
          "format": "date-time",
          "type": "string"
        },
        "SendStatus": {
          "$ref": "#/definitions/PacketCommunicationSendStatus"
        },
        "NextAttemptToSend": {
          "format": "date-time",
          "type": "string"
        },
        "CancelledOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PacketCommunication": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PacketCommunicationForList"
        }
      ],
      "properties": {
        "To": {
          "type": "string"
        },
        "CCs": {
          "type": "string"
        },
        "BCCs": {
          "type": "string"
        },
        "HTMLBody": {
          "type": "string"
        },
        "Attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCommunicationAttachment"
          }
        },
        "ResolutionTime": {
          "format": "date-time",
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "From": {
          "type": "string"
        },
        "Logged": {
          "format": "date-time",
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Body": {
          "type": "string"
        },
        "Read": {
          "type": "boolean"
        },
        "AttachmentCount": {
          "format": "int32",
          "type": "integer"
        },
        "IsSystemGenerated": {
          "type": "boolean"
        },
        "FromUser": {
          "$ref": "#/definitions/CaseFlowContact"
        },
        "CancelledByUser": {
          "$ref": "#/definitions/UserForList"
        },
        "Importance": {
          "$ref": "#/definitions/PacketCommunicationImportance"
        },
        "ImportanceDescription": {
          "type": "string",
          "readOnly": true,
          "x-is-deprecated": true
        },
        "CommunicationScope": {
          "$ref": "#/definitions/PacketCommunicationScopeType"
        },
        "CommunicationScopeDescription": {
          "type": "string",
          "readOnly": true,
          "x-is-deprecated": true
        },
        "Type": {
          "$ref": "#/definitions/PacketCommunicationType"
        },
        "TypeDescription": {
          "type": "string",
          "readOnly": true,
          "x-is-deprecated": true
        },
        "IsResolutionCommunication": {
          "type": "boolean"
        },
        "SentOn": {
          "format": "date-time",
          "type": "string"
        },
        "SendStatus": {
          "$ref": "#/definitions/PacketCommunicationSendStatus"
        },
        "NextAttemptToSend": {
          "format": "date-time",
          "type": "string"
        },
        "CancelledOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CaseFlowContact": {
      "type": "object",
      "properties": {
        "Employee": {
          "$ref": "#/definitions/UserForForeignKey"
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactTagForForeignKey"
          }
        },
        "EmailAddress": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ContactTagForForeignKey": {
      "required": [
        "GUID"
      ],
      "type": "object",
      "properties": {
        "GUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "UserForForeignKey": {
      "type": "object",
      "properties": {
        "EntityGUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "FullName": {
          "description": "Full name of the user.",
          "type": "string"
        },
        "EmailAddress": {
          "description": "Email address of the user.",
          "type": "string"
        },
        "HasProfilePicture": {
          "description": "Does the user have a profile picture available.",
          "type": "boolean"
        },
        "UserType": {
          "$ref": "#/definitions/UserTypes"
        },
        "IsMe": {
          "description": "Identifies if the User represents the currently authenticated User.",
          "type": "boolean",
          "readOnly": true
        },
        "Retired": {
          "description": "Is the object logically deleted.",
          "type": "boolean"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      },
      "x-is-deprecated": true
    },
    "PacketCommunicationType": {
      "enum": [
        "EmailOutgoing",
        "PhoneIncoming",
        "EmailIncoming",
        "ESSComment",
        "AuditNote",
        "PhoneOutgoing",
        "LetterIncoming",
        "LetterOutgoing"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "EmailOutgoing",
          "Value": 0,
          "Description": "Email Outgoing"
        },
        {
          "Name": "PhoneIncoming",
          "Value": 1,
          "Description": "Phone Incoming"
        },
        {
          "Name": "EmailIncoming",
          "Value": 2,
          "Description": "Email Incoming"
        },
        {
          "Name": "ESSComment",
          "Value": 3,
          "Description": "Self Service Comment"
        },
        {
          "Name": "AuditNote",
          "Value": 4,
          "Description": "Note"
        },
        {
          "Name": "PhoneOutgoing",
          "Value": 5,
          "Description": "Phone Outgoing"
        },
        {
          "Name": "LetterIncoming",
          "Value": 6,
          "Description": "Letter Incoming"
        },
        {
          "Name": "LetterOutgoing",
          "Value": 7,
          "Description": "Letter Outgoing"
        }
      ]
    },
    "PacketCommunicationAttachment": {
      "required": [
        "GUID",
        "AttachmentType"
      ],
      "type": "object",
      "properties": {
        "GUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Filename": {
          "type": "string"
        },
        "ContentType": {
          "type": "string"
        },
        "AttachmentType": {
          "$ref": "#/definitions/PacketCommunicationAttachmentType"
        },
        "Note": {
          "type": "string"
        }
      }
    },
    "PacketCommunicationAttachmentType": {
      "enum": [
        "Unknown",
        "InlineAttachment",
        "RegularAttachment"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "Unknown",
          "Value": 0,
          "Description": "Unknown"
        },
        {
          "Name": "InlineAttachment",
          "Value": 1,
          "Description": "Inline Attachment"
        },
        {
          "Name": "RegularAttachment",
          "Value": 2,
          "Description": "Regular Attachment"
        }
      ]
    },
    "PacketCommunicationScopeType": {
      "enum": [
        "Private",
        "InvolvesPrimaryContact",
        "InvolvesRequester",
        "InvolvesSubject",
        "InvolvesCustomer",
        "InvolvesThirdParty"
      ],
      "type": "string",
      "x-is-flagged": true,
      "x-enum-metadata": [
        {
          "Name": "Private",
          "Value": 0,
          "Description": "Private"
        },
        {
          "Name": "InvolvesPrimaryContact",
          "Value": 1,
          "Description": "Private, Involves Primary Contact"
        },
        {
          "Name": "InvolvesRequester",
          "Value": 2,
          "Description": "Private, Involves Requester"
        },
        {
          "Name": "InvolvesSubject",
          "Value": 4,
          "Description": "Private, Involves Subject"
        },
        {
          "Name": "InvolvesCustomer",
          "Value": 8,
          "Description": "Private, Involves Customer"
        },
        {
          "Name": "InvolvesThirdParty",
          "Value": 16,
          "Description": "Private, Involves Third Party"
        }
      ]
    },
    "PacketCommunicationSendStatus": {
      "enum": [
        "Queued",
        "Sent",
        "PendingRetry",
        "Failed",
        "Cancelled",
        "ConnectorDisabled",
        "Copy"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "Queued",
          "Value": 0,
          "Description": "Queued"
        },
        {
          "Name": "Sent",
          "Value": 1,
          "Description": "Sent"
        },
        {
          "Name": "PendingRetry",
          "Value": 2,
          "Description": "Pending Retry"
        },
        {
          "Name": "Failed",
          "Value": 3,
          "Description": "Failed"
        },
        {
          "Name": "Cancelled",
          "Value": 4,
          "Description": "Cancelled"
        },
        {
          "Name": "ConnectorDisabled",
          "Value": 5,
          "Description": "Connector Disabled"
        },
        {
          "Name": "Copy",
          "Value": 6,
          "Description": "Copy"
        }
      ]
    },
    "PacketCommunicationImportance": {
      "enum": [
        "Normal",
        "Low",
        "High"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "Normal",
          "Value": 0,
          "Description": "Normal"
        },
        {
          "Name": "Low",
          "Value": 1,
          "Description": "Low"
        },
        {
          "Name": "High",
          "Value": 2,
          "Description": "High"
        }
      ]
    },
    "PacketForGetMoreWork": {
      "required": [
        "GUID",
        "Status",
        "State",
        "ProcessType"
      ],
      "type": "object",
      "properties": {
        "GUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Reference": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PacketStatus"
        },
        "State": {
          "$ref": "#/definitions/PacketStates"
        },
        "StateDescription": {
          "type": "string",
          "readOnly": true,
          "x-is-deprecated": true
        },
        "ProcessType": {
          "$ref": "#/definitions/ProcessType"
        },
        "ProcessTypeDescription": {
          "type": "string",
          "readOnly": true,
          "x-is-deprecated": true
        },
        "CustomerName": {
          "type": "string"
        },
        "ContractName": {
          "type": "string"
        },
        "ServiceName": {
          "type": "string"
        },
        "ProcessName": {
          "type": "string"
        }
      }
    },
    "PacketStates": {
      "enum": [
        "ProcessNotStarted",
        "ProcessingDelayTask",
        "ProcessingWaitForTask",
        "Processing",
        "AwaitingWA",
        "WithWA",
        "AwaitingAnonymousWA",
        "WithAnonymousWA",
        "Complete",
        "TerminatedByUser",
        "TerminatedByWaitFor",
        "TerminatedByParentPacket",
        "TerminatedByChildPacket",
        "AwaitingToDelete"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "ProcessNotStarted",
          "Value": 0,
          "Description": "Process not started"
        },
        {
          "Name": "ProcessingDelayTask",
          "Value": 11,
          "Description": "Processing delay"
        },
        {
          "Name": "ProcessingWaitForTask",
          "Value": 12,
          "Description": "Processing wait-for sub Process"
        },
        {
          "Name": "Processing",
          "Value": 13,
          "Description": "Processing"
        },
        {
          "Name": "AwaitingWA",
          "Value": 24,
          "Description": "Awaiting User"
        },
        {
          "Name": "WithWA",
          "Value": 25,
          "Description": "Being worked on by User"
        },
        {
          "Name": "AwaitingAnonymousWA",
          "Value": 26,
          "Description": "Awaiting remote User"
        },
        {
          "Name": "WithAnonymousWA",
          "Value": 27,
          "Description": "Being worked on by remote User"
        },
        {
          "Name": "Complete",
          "Value": 30,
          "Description": "Completed"
        },
        {
          "Name": "TerminatedByUser",
          "Value": 35,
          "Description": "Terminated by User"
        },
        {
          "Name": "TerminatedByWaitFor",
          "Value": 36,
          "Description": "Terminated by wait-for"
        },
        {
          "Name": "TerminatedByParentPacket",
          "Value": 37,
          "Description": "Terminated by parent Packet"
        },
        {
          "Name": "TerminatedByChildPacket",
          "Value": 38,
          "Description": "Terminated by child Packet"
        },
        {
          "Name": "AwaitingToDelete",
          "Value": 1000,
          "Description": "Awaiting to delete"
        }
      ]
    },
    "ProcessType": {
      "enum": [
        "Case",
        "Ticket",
        "Action"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "Case",
          "Value": 1,
          "Description": "Case"
        },
        {
          "Name": "Ticket",
          "Value": 2,
          "Description": "Ticket"
        },
        {
          "Name": "Action",
          "Value": 3,
          "Description": "Action"
        }
      ]
    },
    "FullSchedule": {
      "description": "Full details of a schedule for use in builder.",
      "required": [
        "Name",
        "ScheduleStructureGUID"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicSchedule"
        }
      ],
      "properties": {
        "ScheduleStructureGUID": {
          "format": "uuid",
          "description": "Unique identifier for schedule structure.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "SchedulePeriods": {
          "description": "List of periods for this schedule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FullSchedulePeriod"
          }
        },
        "State": {
          "$ref": "#/definitions/ScheduleStates"
        },
        "Retired": {
          "description": "Is the object logically deleted.",
          "type": "boolean"
        },
        "Status": {
          "$ref": "#/definitions/ScheduleStatus"
        },
        "NoOfPeriodsinFuture": {
          "format": "int32",
          "description": "Count of future periods for this schedule.",
          "type": "integer"
        },
        "StatusDescription": {
          "description": "Schedule status description.",
          "type": "string",
          "readOnly": true
        },
        "StateDescription": {
          "description": "Current state of schedule description.",
          "type": "string",
          "readOnly": true
        },
        "Description": {
          "description": "Description of the Object.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the Object.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "FullSchedulePeriod": {
      "description": "Full details of a Schedule Period for use by builder.",
      "required": [
        "Year",
        "StartDate"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseObject"
        }
      ],
      "properties": {
        "Year": {
          "format": "int32",
          "description": "Year the period occurs in.",
          "type": "integer"
        },
        "Period": {
          "description": "Period name.",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Starting date.",
          "type": "string"
        },
        "SchedulePeriodDates": {
          "description": "List of period dates.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FullSchedulePeriodDate"
          }
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "FullSchedulePeriodDate": {
      "description": "Full details of a schedule period date for builder.",
      "required": [
        "ScheduleStructureDateGUID",
        "Date"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseObject"
        }
      ],
      "properties": {
        "ScheduleStructureDateGUID": {
          "format": "uuid",
          "description": "Unique identifier of schedule structure date.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Date": {
          "format": "date-time",
          "description": "Date of schedule period.",
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ScheduleStatus": {
      "enum": [
        "MoreThanThreePeriodsInFuture",
        "LessThanThreePeriodsInFuture",
        "ZeroPeriodsInFuture"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "MoreThanThreePeriodsInFuture",
          "Value": 0,
          "Description": "Three or more periods in the future"
        },
        {
          "Name": "LessThanThreePeriodsInFuture",
          "Value": 1,
          "Description": "less than three periods in the future"
        },
        {
          "Name": "ZeroPeriodsInFuture",
          "Value": 3,
          "Description": "Zero periods in the future"
        }
      ]
    },
    "ScheduleStates": {
      "enum": [
        "Resumed",
        "Paused"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "Resumed",
          "Value": 0,
          "Description": "Resumed"
        },
        {
          "Name": "Paused",
          "Value": 1,
          "Description": "Paused"
        }
      ]
    },
    "BasicSchedule": {
      "description": "Basic details of schedule for use in lists.",
      "required": [
        "Name",
        "State",
        "Retired",
        "Status",
        "NoOfPeriodsinFuture"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicLocalisedNameAndDescription"
        }
      ],
      "properties": {
        "State": {
          "$ref": "#/definitions/ScheduleStates"
        },
        "Retired": {
          "description": "Is the object logically deleted.",
          "type": "boolean"
        },
        "Status": {
          "$ref": "#/definitions/ScheduleStatus"
        },
        "NoOfPeriodsinFuture": {
          "format": "int32",
          "description": "Count of future periods for this schedule.",
          "type": "integer"
        },
        "StatusDescription": {
          "description": "Schedule status description.",
          "type": "string",
          "readOnly": true
        },
        "StateDescription": {
          "description": "Current state of schedule description.",
          "type": "string",
          "readOnly": true
        },
        "Description": {
          "description": "Description of the Object.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the Object.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ApiResponse[FullSchedule,ConfigurationValidationMessage]": {
      "description": "Used to enable the return of a created/updated object and a list of validation warnings/errors.",
      "type": "object",
      "properties": {
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationValidationMessage"
          }
        },
        "Result": {
          "$ref": "#/definitions/FullSchedule",
          "description": "The created/updated object."
        }
      }
    },
    "ApiResponse[List[LaunchAdHocActionResult],PacketValidationMessage]": {
      "description": "Used to enable the return of a created/updated object and a list of validation warnings/errors.",
      "type": "object",
      "properties": {
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketValidationMessage"
          }
        },
        "Result": {
          "description": "The created/updated object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LaunchAdHocActionResult"
          }
        }
      }
    },
    "LaunchAdHocActionResult": {
      "description": "Packets created by the launch AdHoc Action from case.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseObject"
        }
      ],
      "properties": {
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "NewPacketResult": {
      "description": "The response to a request to create a new Packet.",
      "required": [
        "GUID",
        "ProcessType"
      ],
      "type": "object",
      "properties": {
        "GUID": {
          "format": "uuid",
          "description": "The unique identifier of the created Packet.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Reference": {
          "description": "The reference number of the created Packet.",
          "type": "string"
        },
        "Title": {
          "description": "The title of the created Packet.",
          "type": "string"
        },
        "ProcessType": {
          "$ref": "#/definitions/ProcessType"
        },
        "ProcessTypeDescription": {
          "description": "The name of the Process Type of the created Packet as text.",
          "type": "string",
          "readOnly": true,
          "x-is-deprecated": true
        }
      }
    },
    "WebHookSubscription": {
      "required": [
        "GUID",
        "Webhook"
      ],
      "type": "object",
      "properties": {
        "GUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Webhook": {
          "$ref": "#/definitions/WebHook"
        },
        "FilterObjectGUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "FilterObjectType": {
          "$ref": "#/definitions/EnateObjects"
        },
        "SubscriberURL": {
          "type": "string"
        },
        "Signature": {
          "type": "string"
        },
        "CustomHeader": {
          "type": "string"
        },
        "CustomHeaderValue": {
          "type": "string"
        }
      }
    },
    "WebHook": {
      "enum": [
        "PacketCreated",
        "PacketUpdated",
        "NewCommunication",
        "BusinessObjectCreated",
        "SpecificBusinessObjectUpdated",
        "BusinessObjectTypeUpdated"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "PacketCreated",
          "Value": 0,
          "Description": "Packet Created"
        },
        {
          "Name": "PacketUpdated",
          "Value": 1,
          "Description": "Packet Updated"
        },
        {
          "Name": "NewCommunication",
          "Value": 2,
          "Description": "New Communication"
        },
        {
          "Name": "BusinessObjectCreated",
          "Value": 3,
          "Description": "Business Object Created"
        },
        {
          "Name": "SpecificBusinessObjectUpdated",
          "Value": 4,
          "Description": "Specific Business Object Updated"
        },
        {
          "Name": "BusinessObjectTypeUpdated",
          "Value": 5,
          "Description": "Business Object Type Updated"
        }
      ]
    },
    "EnateObjects": {
      "enum": [
        "None",
        "Company",
        "OU",
        "UserTemporaryFile",
        "UserSession",
        "UserAuditEntry",
        "Position",
        "PositionHolder",
        "Packet",
        "PacketContact",
        "PacketContactTag",
        "PacketDefect",
        "PacketCaseConditionHistory",
        "UserAgent",
        "ScheduleStructure",
        "ScheduleStructureDate",
        "CaseStepScheduleStructureDate",
        "EmailConnector",
        "EmailRoute",
        "UserTab",
        "ServiceLine",
        "GlobalChecklist",
        "Contract",
        "LocalChecklist",
        "Service",
        "EscalationMessage",
        "ContractVersion",
        "FixedFrequencySchedule",
        "Schedule",
        "SchedulePeriod",
        "SchedulePeriodDate",
        "LaunchProcessSchedule",
        "User",
        "PasswordPolicy",
        "UserOption",
        "RuntimePermission",
        "AllowedIPRange",
        "UserQueue",
        "RobotFarm",
        "RobotFarmMember",
        "RobotFarmProcess",
        "RobotSixSigmaEntry",
        "RobotSuspensionHistory",
        "UserGroup",
        "UserGroupUser",
        "Card",
        "CardItem",
        "DataDictionaryTable",
        "DataDictionary",
        "Entity",
        "EntityDataItem",
        "PacketCommunication",
        "PacketCommunicationContact",
        "PacketCommunicationAttachment",
        "PacketDebugMessage",
        "PacketCommunicationRawData",
        "StorageAdapterItemsPendingDelete",
        "StorageAdapterItemsPendingCommit",
        "PacketActivity",
        "PacketAllocationHistory",
        "PacketCustomData",
        "PacketFile",
        "PacketFeedbackEntry",
        "SingleUseDownload",
        "PacketProcessAttributeHistory",
        "PacketChecklist",
        "PacketCaseStepHistory",
        "PacketFileTag",
        "PacketCommunicationAttachmentTag",
        "PacketCaseReworkHistory",
        "PacketQueueHistory",
        "PacketStatusHistory",
        "PacketCasePendingAction",
        "PacketLinkedPacket",
        "ContactTag",
        "CaseAttribute",
        "CaseType",
        "ActionType",
        "TicketType",
        "TicketAttribute",
        "Calendar",
        "CalendarException",
        "EntityStructure",
        "EntityStructureDataItem",
        "SingleSignOnSetting",
        "StorageAdapter",
        "StorageAdapterFile",
        "StorageAdapterConfiguration",
        "Queue",
        "CaseStep",
        "TicketCategoryAttribute",
        "DueDateAttribute",
        "AllocationAttribute",
        "TicketCategory",
        "EmployeeSelfServicePortal",
        "CaseAttributeVersion",
        "ActionAttribute",
        "ActionGeneralAttribute",
        "TicketAttributeVersion",
        "BlockedEmailAddress",
        "LocalisationCache",
        "RPASync",
        "RPASyncConfiguration",
        "RPASyncFile",
        "DefectCategory",
        "DefectPartyAtFaultOption",
        "QueueManager",
        "FileTag",
        "AbbyyPlatform",
        "AbbyyProject",
        "AbbyyBatch",
        "CaseConditionAttribute",
        "CaseConditionOutputAttribute",
        "EmailTemplate",
        "CannedResponse",
        "EmailTemplateAttachment",
        "EmailTemplateContent",
        "EmailTemplateTag",
        "AdvancedSearch",
        "WebHookSubscription",
        "ConfigurationAudit"
      ],
      "type": "string",
      "x-is-flagged": false,
      "x-enum-metadata": [
        {
          "Name": "None",
          "Value": 0,
          "Description": "None"
        },
        {
          "Name": "Company",
          "Value": 31,
          "Description": "Company"
        },
        {
          "Name": "OU",
          "Value": 32,
          "Description": "OU"
        },
        {
          "Name": "UserTemporaryFile",
          "Value": 33,
          "Description": "User Temporary File"
        },
        {
          "Name": "UserSession",
          "Value": 34,
          "Description": "User Session"
        },
        {
          "Name": "UserAuditEntry",
          "Value": 35,
          "Description": "User Audit Entry"
        },
        {
          "Name": "Position",
          "Value": 37,
          "Description": "Position"
        },
        {
          "Name": "PositionHolder",
          "Value": 38,
          "Description": "Position Holder"
        },
        {
          "Name": "Packet",
          "Value": 81,
          "Description": "Packet"
        },
        {
          "Name": "PacketContact",
          "Value": 83,
          "Description": "Packet Contact"
        },
        {
          "Name": "PacketContactTag",
          "Value": 84,
          "Description": "Packet Contact Tag"
        },
        {
          "Name": "PacketDefect",
          "Value": 88,
          "Description": "Packet Defect"
        },
        {
          "Name": "PacketCaseConditionHistory",
          "Value": 89,
          "Description": "Packet Case Condition History"
        },
        {
          "Name": "UserAgent",
          "Value": 91,
          "Description": "User Agent"
        },
        {
          "Name": "ScheduleStructure",
          "Value": 92,
          "Description": "Schedule Structure"
        },
        {
          "Name": "ScheduleStructureDate",
          "Value": 93,
          "Description": "Schedule Structure Date"
        },
        {
          "Name": "CaseStepScheduleStructureDate",
          "Value": 94,
          "Description": "Case Step Schedule Structure Date"
        },
        {
          "Name": "EmailConnector",
          "Value": 95,
          "Description": "Email Connector"
        },
        {
          "Name": "EmailRoute",
          "Value": 96,
          "Description": "Email Route"
        },
        {
          "Name": "UserTab",
          "Value": 97,
          "Description": "User Tab"
        },
        {
          "Name": "ServiceLine",
          "Value": 115,
          "Description": "Service Line"
        },
        {
          "Name": "GlobalChecklist",
          "Value": 132,
          "Description": "Global Checklist"
        },
        {
          "Name": "Contract",
          "Value": 215,
          "Description": "Contract"
        },
        {
          "Name": "LocalChecklist",
          "Value": 216,
          "Description": "Local Checklist"
        },
        {
          "Name": "Service",
          "Value": 217,
          "Description": "Service"
        },
        {
          "Name": "EscalationMessage",
          "Value": 223,
          "Description": "Escalation Message"
        },
        {
          "Name": "ContractVersion",
          "Value": 227,
          "Description": "Contract Version"
        },
        {
          "Name": "FixedFrequencySchedule",
          "Value": 235,
          "Description": "Fixed Frequency Schedule"
        },
        {
          "Name": "Schedule",
          "Value": 260,
          "Description": "Schedule"
        },
        {
          "Name": "SchedulePeriod",
          "Value": 261,
          "Description": "Schedule Period"
        },
        {
          "Name": "SchedulePeriodDate",
          "Value": 262,
          "Description": "Schedule Period Date"
        },
        {
          "Name": "LaunchProcessSchedule",
          "Value": 299,
          "Description": "Launch Process Schedule"
        },
        {
          "Name": "User",
          "Value": 312,
          "Description": "User"
        },
        {
          "Name": "PasswordPolicy",
          "Value": 313,
          "Description": "Password Policy"
        },
        {
          "Name": "UserOption",
          "Value": 315,
          "Description": "User Option"
        },
        {
          "Name": "RuntimePermission",
          "Value": 328,
          "Description": "Runtime Permission"
        },
        {
          "Name": "AllowedIPRange",
          "Value": 333,
          "Description": "Allowed IP Range"
        },
        {
          "Name": "UserQueue",
          "Value": 334,
          "Description": "User Queue"
        },
        {
          "Name": "RobotFarm",
          "Value": 336,
          "Description": "Robot Farm"
        },
        {
          "Name": "RobotFarmMember",
          "Value": 337,
          "Description": "Robot Farm Member"
        },
        {
          "Name": "RobotFarmProcess",
          "Value": 338,
          "Description": "Robot Farm Process"
        },
        {
          "Name": "RobotSixSigmaEntry",
          "Value": 339,
          "Description": "Robot Six Sigma Entry"
        },
        {
          "Name": "RobotSuspensionHistory",
          "Value": 340,
          "Description": "Robot Suspension History"
        },
        {
          "Name": "UserGroup",
          "Value": 341,
          "Description": "User Group"
        },
        {
          "Name": "UserGroupUser",
          "Value": 342,
          "Description": "User Group User"
        },
        {
          "Name": "Card",
          "Value": 425,
          "Description": "Card"
        },
        {
          "Name": "CardItem",
          "Value": 426,
          "Description": "Card Item"
        },
        {
          "Name": "DataDictionaryTable",
          "Value": 427,
          "Description": "Data Dictionary Table"
        },
        {
          "Name": "DataDictionary",
          "Value": 428,
          "Description": "Data Dictionary"
        },
        {
          "Name": "Entity",
          "Value": 812,
          "Description": "Entity"
        },
        {
          "Name": "EntityDataItem",
          "Value": 813,
          "Description": "Entity Data Item"
        },
        {
          "Name": "PacketCommunication",
          "Value": 817,
          "Description": "Packet Communication"
        },
        {
          "Name": "PacketCommunicationContact",
          "Value": 818,
          "Description": "Packet Communication Contact"
        },
        {
          "Name": "PacketCommunicationAttachment",
          "Value": 819,
          "Description": "Packet Communication Attachment"
        },
        {
          "Name": "PacketDebugMessage",
          "Value": 820,
          "Description": "Packet Debug Message"
        },
        {
          "Name": "PacketCommunicationRawData",
          "Value": 821,
          "Description": "Packet Communication Raw Data"
        },
        {
          "Name": "StorageAdapterItemsPendingDelete",
          "Value": 822,
          "Description": "Storage Adapter Items Pending Delete"
        },
        {
          "Name": "StorageAdapterItemsPendingCommit",
          "Value": 823,
          "Description": "Storage Adapter Items Pending Commit"
        },
        {
          "Name": "PacketActivity",
          "Value": 826,
          "Description": "Packet Activity"
        },
        {
          "Name": "PacketAllocationHistory",
          "Value": 827,
          "Description": "Packet Allocation History"
        },
        {
          "Name": "PacketCustomData",
          "Value": 828,
          "Description": "Packet Custom Data"
        },
        {
          "Name": "PacketFile",
          "Value": 829,
          "Description": "Packet File"
        },
        {
          "Name": "PacketFeedbackEntry",
          "Value": 830,
          "Description": "Packet Feedback Entry"
        },
        {
          "Name": "SingleUseDownload",
          "Value": 831,
          "Description": "Single Use Download"
        },
        {
          "Name": "PacketProcessAttributeHistory",
          "Value": 832,
          "Description": "Packet Process Attribute History"
        },
        {
          "Name": "PacketChecklist",
          "Value": 833,
          "Description": "Packet Checklist"
        },
        {
          "Name": "PacketCaseStepHistory",
          "Value": 834,
          "Description": "Packet Case Step History"
        },
        {
          "Name": "PacketFileTag",
          "Value": 835,
          "Description": "Packet File Tag"
        },
        {
          "Name": "PacketCommunicationAttachmentTag",
          "Value": 836,
          "Description": "Packet Communication Attachment Tag"
        },
        {
          "Name": "PacketCaseReworkHistory",
          "Value": 837,
          "Description": "Packet Case Rework History"
        },
        {
          "Name": "PacketQueueHistory",
          "Value": 839,
          "Description": "Packet Queue History"
        },
        {
          "Name": "PacketStatusHistory",
          "Value": 840,
          "Description": "Packet Status History"
        },
        {
          "Name": "PacketCasePendingAction",
          "Value": 841,
          "Description": "Packet Case Pending Action"
        },
        {
          "Name": "PacketLinkedPacket",
          "Value": 842,
          "Description": "Packet Linked Packet"
        },
        {
          "Name": "ContactTag",
          "Value": 910,
          "Description": "Contact Tag"
        },
        {
          "Name": "CaseAttribute",
          "Value": 911,
          "Description": "Case Attribute"
        },
        {
          "Name": "CaseType",
          "Value": 912,
          "Description": "Case Type"
        },
        {
          "Name": "ActionType",
          "Value": 913,
          "Description": "Action Type"
        },
        {
          "Name": "TicketType",
          "Value": 914,
          "Description": "Ticket Type"
        },
        {
          "Name": "TicketAttribute",
          "Value": 915,
          "Description": "Ticket Attribute"
        },
        {
          "Name": "Calendar",
          "Value": 924,
          "Description": "Calendar"
        },
        {
          "Name": "CalendarException",
          "Value": 925,
          "Description": "Calendar Exception"
        },
        {
          "Name": "EntityStructure",
          "Value": 929,
          "Description": "Entity Structure"
        },
        {
          "Name": "EntityStructureDataItem",
          "Value": 930,
          "Description": "Entity Structure Data Item"
        },
        {
          "Name": "SingleSignOnSetting",
          "Value": 945,
          "Description": "Single Sign On Setting"
        },
        {
          "Name": "StorageAdapter",
          "Value": 949,
          "Description": "Storage Adapter"
        },
        {
          "Name": "StorageAdapterFile",
          "Value": 950,
          "Description": "Storage Adapter File"
        },
        {
          "Name": "StorageAdapterConfiguration",
          "Value": 951,
          "Description": "Storage Adapter Configuration"
        },
        {
          "Name": "Queue",
          "Value": 952,
          "Description": "Queue"
        },
        {
          "Name": "CaseStep",
          "Value": 953,
          "Description": "Case Step"
        },
        {
          "Name": "TicketCategoryAttribute",
          "Value": 954,
          "Description": "Ticket Category Attribute"
        },
        {
          "Name": "DueDateAttribute",
          "Value": 956,
          "Description": "Due Date Attribute"
        },
        {
          "Name": "AllocationAttribute",
          "Value": 957,
          "Description": "Allocation Attribute"
        },
        {
          "Name": "TicketCategory",
          "Value": 958,
          "Description": "Ticket Category"
        },
        {
          "Name": "EmployeeSelfServicePortal",
          "Value": 960,
          "Description": "Employee Self Service Portal"
        },
        {
          "Name": "CaseAttributeVersion",
          "Value": 963,
          "Description": "Case Attribute Version"
        },
        {
          "Name": "ActionAttribute",
          "Value": 964,
          "Description": "Action Attribute"
        },
        {
          "Name": "ActionGeneralAttribute",
          "Value": 965,
          "Description": "Action General Attribute"
        },
        {
          "Name": "TicketAttributeVersion",
          "Value": 967,
          "Description": "Ticket Attribute Version"
        },
        {
          "Name": "BlockedEmailAddress",
          "Value": 968,
          "Description": "Blocked Email Address"
        },
        {
          "Name": "LocalisationCache",
          "Value": 969,
          "Description": "Localisation Cache"
        },
        {
          "Name": "RPASync",
          "Value": 970,
          "Description": "RPA Sync"
        },
        {
          "Name": "RPASyncConfiguration",
          "Value": 971,
          "Description": "RPA Sync Configuration"
        },
        {
          "Name": "RPASyncFile",
          "Value": 972,
          "Description": "RPA Sync File"
        },
        {
          "Name": "DefectCategory",
          "Value": 973,
          "Description": "Defect Category"
        },
        {
          "Name": "DefectPartyAtFaultOption",
          "Value": 974,
          "Description": "Defect Party At Fault Option"
        },
        {
          "Name": "QueueManager",
          "Value": 975,
          "Description": "Queue Manager"
        },
        {
          "Name": "FileTag",
          "Value": 976,
          "Description": "File Tag"
        },
        {
          "Name": "AbbyyPlatform",
          "Value": 977,
          "Description": "Abbyy Platform"
        },
        {
          "Name": "AbbyyProject",
          "Value": 978,
          "Description": "Abbyy Project"
        },
        {
          "Name": "AbbyyBatch",
          "Value": 979,
          "Description": "Abbyy Batch"
        },
        {
          "Name": "CaseConditionAttribute",
          "Value": 980,
          "Description": "Case Condition Attribute"
        },
        {
          "Name": "CaseConditionOutputAttribute",
          "Value": 981,
          "Description": "Case Condition Output Attribute"
        },
        {
          "Name": "EmailTemplate",
          "Value": 983,
          "Description": "Email Template"
        },
        {
          "Name": "CannedResponse",
          "Value": 984,
          "Description": "Canned Response"
        },
        {
          "Name": "EmailTemplateAttachment",
          "Value": 985,
          "Description": "Email Template Attachment"
        },
        {
          "Name": "EmailTemplateContent",
          "Value": 986,
          "Description": "Email Template Content"
        },
        {
          "Name": "EmailTemplateTag",
          "Value": 987,
          "Description": "Email Template Tag"
        },
        {
          "Name": "AdvancedSearch",
          "Value": 988,
          "Description": "Advanced Search"
        },
        {
          "Name": "WebHookSubscription",
          "Value": 990,
          "Description": "Web Hook Subscription"
        },
        {
          "Name": "ConfigurationAudit",
          "Value": 992,
          "Description": "Configuration Audit"
        }
      ]
    },
    "ApiResponse[Boolean,ConfigurationValidationMessage]": {
      "description": "Used to enable the return of a created/updated object and a list of validation warnings/errors.",
      "required": [
        "Result"
      ],
      "type": "object",
      "properties": {
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationValidationMessage"
          }
        },
        "Result": {
          "description": "The created/updated object.",
          "type": "boolean"
        }
      }
    },
    "ApiResponse[WebHookSubscription,ConfigurationValidationMessage]": {
      "description": "Used to enable the return of a created/updated object and a list of validation warnings/errors.",
      "type": "object",
      "properties": {
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationValidationMessage"
          }
        },
        "Result": {
          "$ref": "#/definitions/WebHookSubscription",
          "description": "The created/updated object."
        }
      }
    },
    "BasicServiceLine": {
      "description": "Basic GUID, Name, Description information for a ServiceLine.",
      "required": [
        "Name",
        "Retired"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicLocalisedNameAndDescription"
        }
      ],
      "properties": {
        "Retired": {
          "description": "Is the object logically deleted.",
          "type": "boolean"
        },
        "Description": {
          "description": "Description of the Object.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the Object.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ApiResponse[FullCasePacket,PacketValidationMessage]": {
      "description": "Used to enable the return of a created/updated object and a list of validation warnings/errors.",
      "type": "object",
      "properties": {
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketValidationMessage"
          }
        },
        "Result": {
          "$ref": "#/definitions/FullCasePacket",
          "description": "The created/updated object."
        }
      }
    },
    "TicketPacket": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "TicketStartedMethod": {
          "type": "string"
        },
        "ResolutionDetails": {
          "type": "string"
        },
        "CompletedBy": {
          "$ref": "#/definitions/UserForForeignKey"
        },
        "ResolvedOn": {
          "format": "date-time",
          "type": "string"
        },
        "Contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaseFlowContact"
          }
        },
        "ContractGUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CustomerGUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ServiceGUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "GUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CustomerName": {
          "type": "string"
        },
        "ContractName": {
          "type": "string"
        },
        "ServiceName": {
          "type": "string"
        },
        "ProcessTypeName": {
          "type": "string"
        },
        "ProcessName": {
          "type": "string",
          "readOnly": true
        },
        "Reference": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "QueueName": {
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "LastUpdatedByUserOn": {
          "format": "date-time",
          "type": "string"
        },
        "LastUpdatedByUserDate": {
          "format": "date-time",
          "type": "string",
          "readOnly": true,
          "x-is-deprecated": true
        },
        "State": {
          "$ref": "#/definitions/PacketStates"
        },
        "ProcessType": {
          "$ref": "#/definitions/ProcessType"
        },
        "StartedByMethod": {
          "$ref": "#/definitions/PacketStartedByMethod"
        },
        "OwnerUser": {
          "$ref": "#/definitions/UserForForeignKey"
        },
        "StartedByUser": {
          "$ref": "#/definitions/UserForForeignKey"
        }
      },
      "x-is-deprecated": true
    },
    "ContextCustomerLevel": {
      "type": "object",
      "properties": {
        "Contracts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContextContractLevel"
          }
        },
        "GUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ContextContractLevel": {
      "type": "object",
      "properties": {
        "Services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContextServiceLevel"
          }
        },
        "GUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ContextServiceLevel": {
      "type": "object",
      "properties": {
        "Processes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContextProcessLevel"
          }
        },
        "GUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ContextProcessLevel": {
      "required": [
        "AttributeGUID",
        "VersionState"
      ],
      "type": "object",
      "properties": {
        "AttributeGUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "VersionState": {
          "$ref": "#/definitions/VersionedObjectStates"
        },
        "GUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "VersionedObjectStates": {
      "enum": [
        "Draft",
        "Testing",
        "Live",
        "Retiring",
        "Archive"
      ],
      "type": "string",
      "x-is-flagged": true,
      "x-enum-metadata": [
        {
          "Name": "Draft",
          "Value": 1,
          "Description": "Draft"
        },
        {
          "Name": "Testing",
          "Value": 2,
          "Description": "Testing"
        },
        {
          "Name": "Live",
          "Value": 8,
          "Description": "Live"
        },
        {
          "Name": "Retiring",
          "Value": 16,
          "Description": "Retiring"
        },
        {
          "Name": "Archive",
          "Value": 32,
          "Description": "Archive"
        }
      ]
    },
    "ServiceMatrixResults": {
      "description": "The Service Matrix Results.",
      "required": [
        "TotalRowCount",
        "TotalCompaniesCount"
      ],
      "type": "object",
      "properties": {
        "ProcessGroups": {
          "description": "The list of Process Groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceMatrixProcessGroup"
          },
          "readOnly": true
        },
        "Rows": {
          "description": "The list of Customers, Contracts and Services.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceMatrixRow"
          }
        },
        "TotalRowCount": {
          "format": "int32",
          "description": "The total number of Rows that can be returned by requesting different pages.",
          "type": "integer"
        },
        "TotalCompaniesCount": {
          "format": "int32",
          "description": "The total number of Companies.",
          "type": "integer"
        }
      }
    },
    "ServiceMatrixProcessGroup": {
      "description": "The Service Matrix grouping.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the Process Group.",
          "type": "string"
        },
        "ProcessTypes": {
          "description": "The list of Case and Ticket Types in this Process Group.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceMatrixProcessType"
          }
        }
      }
    },
    "ServiceMatrixRow": {
      "description": "A Service Matrix result row.",
      "required": [
        "CustomerGUID",
        "CustomerRetired",
        "ContractRetired",
        "ServiceRetired"
      ],
      "type": "object",
      "properties": {
        "CustomerGUID": {
          "format": "uuid",
          "description": "The Unique Identifier of the Customer Company.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CustomerName": {
          "description": "The name of the Customer Company.",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "The description of the Customer Company.",
          "type": "string"
        },
        "CustomerRetired": {
          "description": "Indicates if the Customer Company is retired.",
          "type": "boolean"
        },
        "ContractGUID": {
          "format": "uuid",
          "description": "The Unique Identifier of the Contract.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ContractName": {
          "description": "The name of the Contract.",
          "type": "string"
        },
        "ContractDescription": {
          "description": "The description of the Contract.",
          "type": "string"
        },
        "ContractVersionGUID": {
          "format": "uuid",
          "description": "The Unique Identifier of the live version Contract.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ContractRetired": {
          "description": "Flag indicating if the Contract is Retired.",
          "type": "boolean"
        },
        "ServiceGUID": {
          "format": "uuid",
          "description": "The Unique Identifier of the Service.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ServiceName": {
          "description": "The name of the Service.",
          "type": "string"
        },
        "ServiceDescription": {
          "description": "The description of the Service.",
          "type": "string"
        },
        "ServiceRetired": {
          "description": "Indicates if the Service is retired.",
          "type": "boolean"
        },
        "Processes": {
          "description": "The list of Processes in this Service (if this item is a Service).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceMatrixProcessLevel"
          }
        }
      }
    },
    "ServiceMatrixProcessType": {
      "description": "The Process Types used in the Service Matrix.",
      "required": [
        "GUID",
        "ProcessType",
        "Retired"
      ],
      "type": "object",
      "properties": {
        "GUID": {
          "format": "uuid",
          "description": "The Unique Identifier of the Process Type.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "description": "The name of the Process Type.",
          "type": "string"
        },
        "Description": {
          "description": "The description of the Process Type.",
          "type": "string"
        },
        "ProcessType": {
          "$ref": "#/definitions/ProcessType"
        },
        "Retired": {
          "description": "Indicates the Retired state of the Process Type {Enate.Core.Contracts.DTOs.ServiceMatrixProcessGroup}.",
          "type": "boolean"
        }
      }
    },
    "ServiceMatrixProcessLevel": {
      "description": "A process within the Service Matrix.",
      "required": [
        "GUID",
        "ProcessType",
        "ProcessTypeGUID",
        "ShowOnContactsPage",
        "IsAvailableToAllUsers"
      ],
      "type": "object",
      "properties": {
        "GUID": {
          "format": "uuid",
          "description": "The unique Identifier of the Process.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ProcessType": {
          "$ref": "#/definitions/ProcessType"
        },
        "ProcessTypeGUID": {
          "format": "uuid",
          "description": "The Unique Identifier of the Process Type.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ShowOnContactsPage": {
          "description": "Should the Process show on the Contact Page for Users to create work.",
          "type": "boolean"
        },
        "IsAvailableToAllUsers": {
          "description": "Should the Process show for all users in the 'add work item' pop up (or just those with permissions).",
          "type": "boolean"
        },
        "LiveAttributeVersionGUID": {
          "format": "uuid",
          "description": "The Unique Identifier of the Live Case (when ProcessType is Case) or Ticket (when ProcessType is Ticket) Attribute Version.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DevelopmentAttributeVersionGUID": {
          "format": "uuid",
          "description": "The Unique Identifier of the Draft or Testing Case (when ProcessType is Case) or Ticket (when ProcessType is Ticket) Attribute Version.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RetiredAttributeVersionGUID": {
          "format": "uuid",
          "description": "The Unique Identifier of the Highest Retired Case (when ProcessType is Case) or Ticket (when ProcessType is Ticket) Attribute Version.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "TicketPacketUpdated": {
      "required": [
        "Processing"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TicketPacket"
        }
      ],
      "properties": {
        "Processing": {
          "type": "boolean"
        },
        "Description": {
          "type": "string"
        },
        "TicketStartedMethod": {
          "type": "string"
        },
        "CompletedBy": {
          "$ref": "#/definitions/UserForForeignKey"
        },
        "ResolvedOn": {
          "format": "date-time",
          "type": "string"
        },
        "Contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaseFlowContact"
          }
        },
        "ContractGUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CustomerGUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ServiceGUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "GUID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CustomerName": {
          "type": "string"
        },
        "ContractName": {
          "type": "string"
        },
        "ServiceName": {
          "type": "string"
        },
        "ProcessTypeName": {
          "type": "string"
        },
        "ProcessName": {
          "type": "string",
          "readOnly": true
        },
        "Reference": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "QueueName": {
          "type": "string"
        },
        "CurrentCustomState": {
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "LastUpdatedByUserOn": {
          "format": "date-time",
          "type": "string"
        },
        "LastUpdatedByUserDate": {
          "format": "date-time",
          "type": "string",
          "readOnly": true,
          "x-is-deprecated": true
        },
        "State": {
          "$ref": "#/definitions/PacketStates"
        },
        "StateDescription": {
          "type": "string",
          "readOnly": true,
          "x-is-deprecated": true
        },
        "ProcessType": {
          "$ref": "#/definitions/ProcessType"
        },
        "StartedByMethod": {
          "$ref": "#/definitions/PacketStartedByMethod"
        },
        "OwnerUser": {
          "$ref": "#/definitions/UserForForeignKey"
        },
        "StarterUser": {
          "$ref": "#/definitions/UserForForeignKey",
          "readOnly": true,
          "x-is-deprecated": true
        },
        "StartedByUser": {
          "$ref": "#/definitions/UserForForeignKey"
        }
      },
      "x-is-deprecated": true
    },
    "ApiResponse[FullActionPacket,PacketValidationMessage]": {
      "description": "Used to enable the return of a created/updated object and a list of validation warnings/errors.",
      "type": "object",
      "properties": {
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketValidationMessage"
          }
        },
        "Result": {
          "$ref": "#/definitions/FullActionPacket",
          "description": "The created/updated object."
        }
      }
    },
    "ApiResponse[FullTicketPacket,PacketValidationMessage]": {
      "description": "Used to enable the return of a created/updated object and a list of validation warnings/errors.",
      "type": "object",
      "properties": {
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketValidationMessage"
          }
        },
        "Result": {
          "$ref": "#/definitions/FullTicketPacket",
          "description": "The created/updated object."
        }
      }
    },
    "ExistingPacketFileTag": {
      "description": "Details of a Tag attributed to a Packet File.",
      "required": [
        "Name",
        "IsHidden"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicLocalisedNameAndDescription"
        }
      ],
      "properties": {
        "IsHidden": {
          "description": "Whether the Files with this tag are hidden from Users. Hidden files are used for integration between systems only.",
          "type": "boolean"
        },
        "AddedOn": {
          "format": "date-time",
          "description": "The date/time that the File Tag was added by the User identified in <seealso cref=\"P:Enate.Core.Contracts.DTOs.ExistingPacketFileTag.AddedByUser\" />.",
          "type": "string"
        },
        "AddedByUser": {
          "$ref": "#/definitions/UserForList",
          "description": "The User that added the File  Tag."
        },
        "Description": {
          "description": "Description of the Object.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the Object.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "GUID": {
          "format": "uuid",
          "description": "Unique identifier of the object.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {},
  "security": [],
  "tags": []
}