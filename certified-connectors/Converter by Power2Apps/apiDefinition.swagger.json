{
  "swagger": "2.0",
  "info": {
    "title": "Converter by Power2Apps",
    "description": "Enables conversion of different data formats from one to another.",
    "contact": {
      "name": "Power2Apps Support",
      "url": "https://www.power2apps.de/kontakt",
      "email": "kontakt@power2apps.de"
    },
    "version": "1.0.0"
  },
  "host": "webapiconverterservice20211014190508.azurewebsites.net",
  "schemes": [
    "https"
  ],
  "basePath": "/Converter",
  "paths": {
    "/GetWordSectionTypes": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetWordSectionTypes",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of Word section types",
        "description": "Returns supported Word section types"
      }
    },
    "/CreateWordFile": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "CreateWordFile",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wordCreationObject",
            "schema": {
              "$ref": "#/definitions/WordCreationObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Create Word File",
        "description": "Create a Word file (DOCX) with multiple text sections or add multiple text sections to a Word file (DOCX)"
      }
    },
    "/AddImageToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "AddImageToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wordImage",
            "schema": {
              "$ref": "#/definitions/WordImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Image to Word File",
        "description": "Add Image to a Word file (DOCX) or create a new Word file (DOCX) with image"
      }
    },
    "/AddImageWithinTableToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "AddImageWithinTableToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wordImage",
            "schema": {
              "$ref": "#/definitions/WordImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Add Image to Word File within Table",
        "description": "Add an image to a Word file (DOCX) within a table or create a new Word file (DOCX) with an image within a table"
      }
    },
    "/AddImageWithinTableToWordV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "AddImageWithinTableToWordV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wordImageWithinTable",
            "schema": {
              "$ref": "#/definitions/WordImageWithinTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Image to Word File within Table",
        "description": "Add an image to a Word file (DOCX) within a table or create a new Word file (DOCX) with an image within a table"
      }
    },
    "/AddTableToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "AddTableToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wordTable",
            "schema": {
              "$ref": "#/definitions/WordTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Table to Word File",
        "description": "Add Table to a Word file (DOCX) or create a new Word file (DOCX) with a table"
      }
    },
    "/AddTextToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "AddTextToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wordText",
            "schema": {
              "$ref": "#/definitions/WordText"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Text to Word File",
        "description": "Add a text to a Word file (DOCX) or create a new Word file (DOCX) with a text"
      }
    },
    "/InsertTextToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "InsertTextToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "insertWordText",
            "schema": {
              "$ref": "#/definitions/InsertWordText"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Insert Text to Word File",
        "description": "Insert a text to a Word file (DOCX)"
      }
    },
    "/InsertImageToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "InsertImageToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "insertWordImage",
            "schema": {
              "$ref": "#/definitions/InsertWordImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Insert Image to Word File",
        "description": "Insert Image to a Word file (DOCX)"
      }
    },
    "/InsertTableToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "InsertTableToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "insertWordTable",
            "schema": {
              "$ref": "#/definitions/InsertWordTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Insert Table to Word File",
        "description": "Insert Table to a Word file (DOCX)"
      }
    },
    "/ExtractWordBookmarks": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ExtractWordBookmarks",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValPair"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract Bookmarks from Word File",
        "description": "Extract all bookmarks from a Word fie (DOCX) and get them as a list"
      }
    },
    "/GetImageFormats": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetImageFormats",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of image formats",
        "description": "Returns supported image formats"
      }
    },
    "/GetResizeOptions": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetResizeOptions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of Resize options",
        "description": "Returns list of Resize options"
      }
    },
    "/ResizeImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ResizeImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "width",
            "type": "number",
            "format": "double",
            "x-ms-visibility": "important",
            "x-ms-summary": "Width",
            "description": "The width of the image - empty for auto"
          },
          {
            "in": "header",
            "name": "height",
            "type": "number",
            "format": "double",
            "x-ms-visibility": "important",
            "x-ms-summary": "Height",
            "description": "The height of the image - empty for auto"
          },
          {
            "in": "header",
            "name": "outFormat",
            "type": "string",
            "default": "JPEG",
            "x-ms-dynamic-values": {
              "operationId": "GetImageFormats",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Format",
            "description": "Outputformat"
          },
          {
            "in": "header",
            "name": "resizeBy",
            "type": "string",
            "default": "px",
            "x-ms-dynamic-values": {
              "operationId": "GetResizeOptions",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Resize By",
            "description": "Resize By"
          },
          {
            "in": "body",
            "name": "fileData",
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Resize Image",
        "description": "Adjust the width and height of an image (JPEG, JPG, PNG, BMP, GIF, TIFF)"
      }
    },
    "/RotateImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "RotateImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "rotate",
            "type": "number",
            "format": "float",
            "default": 90,
            "x-ms-visibility": "important",
            "x-ms-summary": "Rotate",
            "description": "Degrees the image is rotated with"
          },
          {
            "in": "header",
            "name": "outFormat",
            "type": "string",
            "default": "jpeg",
            "x-ms-dynamic-values": {
              "operationId": "GetImageFormats",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Output format",
            "description": "Output format"
          },
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Rotate Image",
        "description": "Rotate an image (JPEG, JPG, PNG, BMP, GIF, TIFF) by an angle (degree) of your choice"
      }
    },
    "/CompressImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "CompressImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "quality",
            "type": "integer",
            "format": "int32",
            "default": 70,
            "x-ms-visibility": "important",
            "x-ms-summary": "Image Quality",
            "description": "The quality of the image (0-100)"
          },
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Compress JPG Image",
        "description": "Compress a JPG (JPEG) image"
      }
    },
    "/ConvertImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "outFormat",
            "type": "string",
            "default": "jpeg",
            "x-ms-dynamic-values": {
              "operationId": "GetImageFormats",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Output format",
            "description": "Output format"
          },
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert Image to another Image Format",
        "description": "Convert an image to another format (JPEG, JPG, PNG, BMP, GIF, TIFF)"
      }
    },
    "/ImageMetaData": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ImageMetaData",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ImageMetaDataResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract Information from Image",
        "description": "Get the metadata information from an image (JPEG, JPG, PNG, BMP, GIF, TIFF, ...)"
      }
    },
    "/GetFileExtensions": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetFileExtensions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of file extensions",
        "description": "Returns supported file extensions"
      }
    },
    "/ConvertFileToPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertFileToPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "fileName",
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "File Name",
            "description": "File name"
          },
          {
            "in": "header",
            "name": "fileExtension",
            "type": "string",
            "default": "Extract from File name",
            "x-ms-dynamic-values": {
              "operationId": "GetFileExtensions",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "File Extension",
            "description": "File extension"
          },
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "File",
            "description": "File"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileContentResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert file (DOCX, PPTX, XLSX, HTML, ...) to PDF",
        "description": "Convert a document (Word, Powerpoint, Excel, ..) to a PDF file"
      }
    },
    "/ConvertFileToPdfV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertFileToPdfV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "fileName",
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Origin File Name",
            "description": "Only used with 'Extract from origin file name'. E.g. 'MyFileName.docx'"
          },
          {
            "in": "header",
            "name": "fileExtension",
            "type": "string",
            "default": "HTML",
            "x-ms-dynamic-values": {
              "operationId": "GetFileExtensions",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Origin File Extension",
            "description": "Origin File extension"
          },
          {
            "in": "body",
            "name": "file",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "File",
            "description": "File"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert File (DOCX, PPTX, XLSX, HTML, ...) to PDF",
        "description": "Convert a document file (Word, Powerpoint, Excel, ..) to a PDF file"
      }
    },
    "/MergePDFs": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "MergePDFs",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileDataTuple"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Merge PDF Files",
        "description": "Merge two PDF files into one PDF file"
      }
    },
    "/PDFMetaData": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "PDFMetaData",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Pdf_Metadata"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract Information from PDF",
        "description": "Get the metadata of a PDF"
      }
    },
    "/ProtectPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ProtectPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "ownerPassword",
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Owner Password",
            "description": "Protect the editing of the PDF with the owner password"
          },
          {
            "in": "header",
            "name": "userPassword",
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "User Password",
            "description": "Protect the opening of the PDF with the user password"
          },
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Protect PDF",
        "description": "Protect a PDF with a password"
      }
    },
    "/UnProtectPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "UnProtectPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "ownerPassword",
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Owner Password",
            "description": "Owner Password"
          },
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Unprotect PDF",
        "description": "Remove the protection from a pdf"
      }
    },
    "/ConvertXmlToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertXmlToJson",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "XML",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "XML",
            "description": "XML"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert XML to JSON",
        "description": "Convert XML to JSON"
      }
    },
    "/ConvertXmlToJsonV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertXmlToJsonV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "xmlData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/XmlData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "XML",
            "description": "XML"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert XML to JSON",
        "description": "Convert an XML to a JSON"
      }
    },
    "/ConvertJsonToXml": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToXml",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "JSON",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to XML",
        "description": "Convert JSON to XML"
      }
    },
    "/ConvertJsonToXmlV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToXmlV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "jsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/XmlResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert JSON to XML",
        "description": "Convert a JSON to an XML"
      }
    },
    "/ConvertJsonToCsvdata": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToCsvdata",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "JSON",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to CSV",
        "description": "Convert JSON to CSV"
      }
    },
    "/ConvertJsonToCsv": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToCsv",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "jsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CsvResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to CSV",
        "description": "Convert a JSON to a CSV"
      }
    },
    "/ConvertJsonToCsvV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToCsvV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "delimiter",
            "type": "string",
            "default": ";",
            "x-ms-dynamic-values": {
              "operationId": "GetSeparators",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Separator",
            "description": "Separator (delimiter) of the fields. Default = ';'"
          },
          {
            "in": "body",
            "name": "jsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CsvResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert JSON to CSV",
        "description": "Convert a JSON to a CSV"
      }
    },
    "/ConvertJsonToYaml": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToYaml",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "jsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/YamlResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert JSON to YAML",
        "description": "Convert a JSON to a YAML"
      }
    },
    "/ConvertYamlToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertYamlToJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "yamlData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/YamlData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "YAML",
            "description": "YAML"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert YAML to JSON",
        "description": "Convert a YAML to a JSON"
      }
    },
    "/ConvertCsvdataToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertCsvdataToJson",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CSV data",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "CSV",
            "description": "CSV data"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert CSV data to JSON",
        "description": "Convert CSV data to JSON"
      }
    },
    "/GetSeparators": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetSeparators",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of Separators",
        "description": "Returns list of separators"
      }
    },
    "/ConvertCsvToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertCsvToJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "dataIncludesHeader",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "CSV has headers?",
            "description": "CSV has headers?"
          },
          {
            "in": "header",
            "name": "autoDiscoverFieldTypes",
            "type": "boolean",
            "default": false,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Automatic field type detection?",
            "description": "Automatic field type detection?"
          },
          {
            "in": "header",
            "name": "maxScanRows",
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Number of rows for field type detection",
            "description": "Number of rows for automatic field type detection. Default = 20"
          },
          {
            "in": "header",
            "name": "ignoreEmptyLine",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Remove empty rows",
            "description": "Remove empty rows"
          },
          {
            "in": "header",
            "name": "skip",
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Skip a number of rows",
            "description": "Skip a number of rows at beginning. Default = 0"
          },
          {
            "in": "header",
            "name": "skipLast",
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Stop at a specific row",
            "description": "Stop at a specific row. Default = convert all rows"
          },
          {
            "in": "header",
            "name": "delimiter",
            "type": "string",
            "default": " Automatic detection of separator",
            "x-ms-dynamic-values": {
              "operationId": "GetSeparators",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Separator",
            "description": "Separator (delimiter) of the fields. Default = 'Automatic detection of separator'"
          },
          {
            "in": "header",
            "name": "mayHaveQuotedFields",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Automatic quote delimiter detection?",
            "description": "Automatic quote delimiter detection?"
          },
          {
            "in": "body",
            "name": "csvData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsvData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "CSV",
            "description": "CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert CSV to JSON",
        "description": "Convert a CSV to a JSON"
      }
    },
    "/ConvertJsonToExcel": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToExcel",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "AllInOneTable",
            "type": "boolean",
            "x-ms-visibility": "important",
            "x-ms-summary": "All in one table",
            "description": "All in one table"
          },
          {
            "in": "body",
            "name": "JSON",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileContentResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to Excel file",
        "description": "Convert JSON to Excel file"
      }
    },
    "/ConvertJsonToExcelV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToExcelV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "allInOneTable",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "important",
            "x-ms-summary": "All in one table",
            "description": "All in one table"
          },
          {
            "in": "body",
            "name": "jsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert JSON to Excel File",
        "description": "Convert a JSON to an Excel file (XLSX)"
      }
    },
    "/ConvertCsvdataToExcel": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertCsvdataToExcel",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CSV data",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "CSV",
            "description": "CSV data"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileContentResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert CSV data to Excel file",
        "description": "Convert CSV data to Excel file"
      }
    },
    "/ConvertCsvToExcel": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertCsvToExcel",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "dataIncludesHeader",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "CSV has headers?",
            "description": "CSV has headers?"
          },
          {
            "in": "header",
            "name": "autoDiscoverFieldTypes",
            "type": "boolean",
            "default": false,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Automatic field type detection?",
            "description": "Automatic field type detection?"
          },
          {
            "in": "header",
            "name": "maxScanRows",
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Number of rows for field type detection",
            "description": "Number of rows for automatic field type detection. Default = 20"
          },
          {
            "in": "header",
            "name": "ignoreEmptyLine",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Remove empty rows",
            "description": "Remove empty rows"
          },
          {
            "in": "header",
            "name": "skip",
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Skip a number of rows",
            "description": "Skip a number of rows at beginning. Default = 0"
          },
          {
            "in": "header",
            "name": "skipLast",
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Stop at a specific row",
            "description": "Stop at a specific row. Default = convert all rows"
          },
          {
            "in": "header",
            "name": "delimiter",
            "type": "string",
            "default": " Automatic detection of separator",
            "x-ms-dynamic-values": {
              "operationId": "GetSeparators",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Separator",
            "description": "Separator (delimiter) of the fields. Default = 'Automatic detection of separator'"
          },
          {
            "in": "header",
            "name": "mayHaveQuotedFields",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Automatic quote delimiter detection?",
            "description": "Automatic quote delimiter detection?"
          },
          {
            "in": "body",
            "name": "csvData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsvData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "CSV",
            "description": "CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert CSV to Excel File",
        "description": "Convert a CSV to a Excel file (XLSX)"
      }
    },
    "/ConvertHTMLtableToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertHTMLtableToJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "htmlTableData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HtmlTableData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "HTML table",
            "description": "HTML table"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert HTML Table to JSON",
        "description": "Convert an HTML table to a JSON or extract the first HTML table from an URL and convert it to a JSON"
      }
    },
    "/ConvertHTMLtableToJsonV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertHTMLtableToJsonV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "htmlTableData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HtmlTableData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "HTML table",
            "description": "HTML table"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonTableResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert HTML Table to JSON",
        "description": "Convert an HTML table to a JSON or extract the first HTML table from an URL and convert it to a JSON"
      }
    },
    "/ConvertHtmlToImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertHtmlToImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "htmlData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HtmlData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "HTML",
            "description": "HTML"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert HTML or URL to JPG Image",
        "description": "Convert an HTML to an JPG (JPEG) Image or convert an URL containing HTML to an JPG (JPEG) Image"
      }
    },
    "/ConvertHtmlToPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertHtmlToPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "htmlData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HtmlData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "HTML",
            "description": "HTML"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert HTML or URL to PDF",
        "description": "Convert an HTML to a PDF or convert an URL containing HTML to a PDF"
      }
    },
    "/UrlToFile": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "UrlToFile",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "urlData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UrlData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "URL",
            "description": "URL"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Get File from URL",
        "description": "Get a file (PDF, JPG, JPEG, PNG, CSV, ...) from an URL"
      }
    },
    "/ConvertSharePointSearchResults": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertSharePointSearchResults",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "sharepointResultData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharepointResultData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "SP search result",
            "description": "SharePoint search result"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SharePointSearchResultResponse"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract results from Send HTTP request to SharePoint search",
        "description": "Extract results from the action 'Send HTTP request to SharePoint' search"
      }
    },
    "/GetRegexOptions": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetRegexOptions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of regular expression options",
        "description": "Returns supported regular expression options"
      }
    },
    "/RegularExpression": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "RegularExpression",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "regExpRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegExpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegExp"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Regular Expression (RegEx)",
        "description": "Searches the specified input string for all occurrences of a specified .NET regular expression (RegEx), using the specified matching options."
      }
    },
    "/GetCodeFormats": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetCodeFormats",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of code formats",
        "description": "Returns supported code formats"
      }
    },
    "/ReadCode": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ReadCode",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Read QR or Barcode",
        "description": "Read a QR code or Barcode from an image"
      }
    },
    "/CreateCode": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "CreateCode",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "content",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Content",
            "description": "The content of the generated code"
          },
          {
            "in": "query",
            "name": "width",
            "type": "integer",
            "format": "int32",
            "default": 200,
            "x-ms-visibility": "important",
            "x-ms-summary": "Width",
            "description": "The width in px"
          },
          {
            "in": "query",
            "name": "height",
            "type": "integer",
            "format": "int32",
            "default": 200,
            "x-ms-visibility": "important",
            "x-ms-summary": "Height",
            "description": "The height in px"
          },
          {
            "in": "query",
            "name": "codeFormat",
            "type": "string",
            "default": "QR CODE",
            "x-ms-dynamic-values": {
              "operationId": "GetCodeFormats",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Code format",
            "description": "The format of the Qr/Bar Code"
          },
          {
            "in": "query",
            "name": "outFormat",
            "type": "string",
            "default": "JPEG",
            "x-ms-dynamic-values": {
              "operationId": "GetImageFormats",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Output format",
            "description": "Output format"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Create QR or Barcode",
        "description": "Create a QR code or a Barcode from a string"
      }
    },
    "/IbanData": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "IbanData",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "account",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "IBAN",
            "description": "IBAN"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BankingAccountData"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract Information from IBAN",
        "description": "Get the bank account details like account number, bank name, bank address and SWIFT code from International Bank Account Number (IBAN)"
      }
    },
    "/GetLanguages": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetLanguages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of languages",
        "description": "Returns language list"
      }
    },
    "/Translate": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "Translate",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "from",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetLanguages",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "From",
            "description": "From"
          },
          {
            "in": "header",
            "name": "to",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetLanguages",
              "value-path": "name",
              "value-title": "name",
              "parameters": {}
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "To",
            "description": "To"
          },
          {
            "in": "body",
            "name": "translationData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TranslationData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Text",
            "description": "Text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TranslationResponse"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Translate Text",
        "description": "Translate a word or sentence"
      }
    }
  },
  "definitions": {
    "BankingAccountData": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Is Valid",
          "description": "Is Valid"
        },
        "isSepaCountry": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Is Valid SEPA Country",
          "description": "Is Valid Single Euro Payment Areas (SEPA) Country"
        },
        "countryCode": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Country Code",
          "description": "Country Code"
        },
        "bban": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "BBAN",
          "description": "Basic Bank Account Number (BBAN)"
        },
        "bankCode": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank Code",
          "description": "Bank Code"
        },
        "branchCode": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Branch Code",
          "description": "Branch Code"
        },
        "accountNumber": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Account Number",
          "description": "Account Number"
        },
        "formattedIban": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Formatted IBAN",
          "description": "Formatted International Bank Account Number (IBAN)"
        },
        "swift_code": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SWIFT Code",
          "description": "SWIFT Code / BIC"
        },
        "bank_name": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank Name",
          "description": "Bank Name"
        },
        "bank_city": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank City",
          "description": "Bank City"
        },
        "bank_zip": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank ZIP",
          "description": "Bank ZIP"
        },
        "bank_adress": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank Address",
          "description": "Bank Address"
        }
      }
    },
    "CodeResponse": {
      "type": "object",
      "properties": {
        "codeValue": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Code value",
          "description": "Code value"
        },
        "codeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Code type",
          "description": "Code type"
        }
      }
    },
    "CsvData": {
      "required": [
        "csv"
      ],
      "type": "object",
      "properties": {
        "csv": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV",
          "description": "CSV"
        }
      }
    },
    "CsvResponse": {
      "type": "object",
      "properties": {
        "csv": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV response",
          "description": "CSV response"
        }
      }
    },
    "FileContentResponse": {
      "type": "object",
      "properties": {
        "fileContent": {
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        }
      }
    },
    "FileData": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File",
          "description": "File"
        }
      }
    },
    "FileDataTuple": {
      "required": [
        "file1",
        "file2"
      ],
      "type": "object",
      "properties": {
        "file1": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File 1",
          "description": "The first file input"
        },
        "file2": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File 2",
          "description": "The second file input"
        }
      }
    },
    "FileResponse": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileContent": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      }
    },
    "HtmlData": {
      "required": [
        "html"
      ],
      "type": "object",
      "properties": {
        "html": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML",
          "description": "HTML"
        }
      }
    },
    "HtmlTableData": {
      "required": [
        "htmlTable"
      ],
      "type": "object",
      "properties": {
        "htmlTable": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML table",
          "description": "HTML table"
        }
      }
    },
    "ImageMetaDataResponse": {
      "type": "object",
      "properties": {
        "imageFormat": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image format",
          "description": "Image format"
        },
        "imageSize": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image size",
          "description": "Image size"
        },
        "width": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Width",
          "description": "Width"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Height",
          "description": "Height"
        },
        "orientation": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Orientation",
          "description": "Orientation"
        },
        "bits": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bits per Pixel",
          "description": "Bits per Pixel"
        },
        "recordingDate": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Date of recording",
          "description": "Date of recording"
        },
        "horizontalResolution": {
          "format": "float",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Horizontal Resolution",
          "description": "Horizontal Resolution"
        },
        "verticalResolution": {
          "format": "float",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Vertical Resolution",
          "description": "Vertical Resolution"
        },
        "hasEXIFData": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Has EXIF Data",
          "description": "Has EXIF Data"
        },
        "exifData": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "EXIF Data",
          "description": "EXIF Data"
        },
        "hasXMPData": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Has XMP Data",
          "description": "Has XMP Data"
        }
      }
    },
    "InsertWordImage": {
      "required": [
        "existingFileContent",
        "placeholderImage"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing file content",
          "description": "Existing Word file to insert image in"
        },
        "placeholderName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder name",
          "description": "Placeholder name"
        },
        "placeholderImage": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder image",
          "description": "Placeholder image"
        }
      }
    },
    "InsertWordTable": {
      "required": [
        "existingFileContent"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing file content",
          "description": "Existing Word file to insert table in"
        },
        "placeholderName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder name",
          "description": "Placeholder name"
        },
        "placeholderTable": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder table",
          "description": "Placeholder table as json"
        }
      }
    },
    "InsertWordText": {
      "required": [
        "existingFileContent"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing file content",
          "description": "Existing Word file to insert text in"
        },
        "placeholderName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder name",
          "description": "Placeholder name"
        },
        "placeholderText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder text",
          "description": "Placeholder text"
        }
      }
    },
    "JsonData": {
      "required": [
        "json"
      ],
      "type": "object",
      "properties": {
        "json": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON",
          "description": "JSON"
        }
      }
    },
    "JsonResponse": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON response",
          "description": "JSON response"
        }
      }
    },
    "JsonTableResponse": {
      "required": [
        "firstTable"
      ],
      "type": "object",
      "properties": {
        "firstTable": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON table response",
          "description": "JSON table response"
        },
        "tables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "KeyValPair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Key",
          "description": "Key"
        },
        "value": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Value",
          "description": "Value"
        }
      }
    },
    "ListOption": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Pdf_Metadata": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Author",
          "description": "Author"
        },
        "creationDate": {
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "CreationDate",
          "description": "CreationDate"
        },
        "creator": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Creator",
          "description": "Creator"
        },
        "modificationDate": {
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "ModificationDate",
          "description": "ModificationDate"
        },
        "producer": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Producer",
          "description": "Producer"
        },
        "subject": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Subject",
          "description": "Subject"
        },
        "title": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "description": "Title"
        },
        "fileSize": {
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "FileSize",
          "description": "FileSize"
        },
        "pdfVersion": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "PDFVersion",
          "description": "PDFVersion"
        },
        "pageCount": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "PageCount",
          "description": "PageCount"
        },
        "keywords": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Keywords",
          "description": "Keywords"
        }
      }
    },
    "RegExp": {
      "required": [
        "input"
      ],
      "type": "object",
      "properties": {
        "input": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text to match",
          "description": "The string to search for a match"
        },
        "pattern": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Regular Expression",
          "description": "The .NET regular expression pattern to match"
        },
        "option": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Regular expression option",
          "description": "Select regular expression option",
          "x-ms-dynamic-values": {
            "operationId": "GetRegexOptions",
            "value-path": "name",
            "value-title": "name",
            "parameters": {}
          }
        },
        "isMatch": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Is match?",
          "description": ""
        },
        "matches": {
          "type": "array",
          "items": {}
        },
        "firstMatch": {
          "x-ms-visibility": "important",
          "x-ms-summary": "First match",
          "description": ""
        },
        "firstMatchValue": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "First match value",
          "description": ""
        }
      }
    },
    "RegExpRequest": {
      "required": [
        "input"
      ],
      "type": "object",
      "properties": {
        "input": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text to match",
          "description": "The string to search for a match"
        },
        "pattern": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Regular Expression",
          "description": "The .NET regular expression pattern to match"
        },
        "option": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Regular expression option",
          "description": "Select regular expression option",
          "x-ms-dynamic-values": {
            "operationId": "GetRegexOptions",
            "value-path": "name",
            "value-title": "name",
            "parameters": {}
          }
        }
      }
    },
    "Section": {
      "type": "object",
      "properties": {
        "sectionType": {
          "default": "Heading1",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "GetWordSectionTypes",
            "value-path": "name",
            "value-title": "name",
            "parameters": {}
          }
        },
        "sectionContent": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text",
          "description": "Text"
        }
      }
    },
    "SharePointSearchResultResponse": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "description": "Title"
        },
        "link": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Link",
          "description": "Link"
        }
      }
    },
    "SharepointResultData": {
      "required": [
        "sharepointResult"
      ],
      "type": "object",
      "properties": {
        "sharepointResult": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SP search result",
          "description": "SharePoint search result"
        }
      }
    },
    "TranslationData": {
      "required": [
        "translation"
      ],
      "type": "object",
      "properties": {
        "translation": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Translation",
          "description": "Translation"
        }
      }
    },
    "TranslationResponse": {
      "type": "object",
      "properties": {
        "firstTranslation": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "First translation response",
          "description": "First translation response"
        },
        "translations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Translations response",
          "description": "Translations response"
        }
      }
    },
    "UrlData": {
      "required": [
        "url"
      ],
      "type": "object",
      "properties": {
        "url": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "URL",
          "description": "URL"
        }
      }
    },
    "WordCreationObject": {
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing file content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Section"
          }
        }
      }
    },
    "WordImage": {
      "required": [
        "image"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing file content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "image": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image",
          "description": "Image to add"
        },
        "imageText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Caption Text",
          "description": "Text displayed next to image"
        }
      }
    },
    "WordImageWithinTable": {
      "required": [
        "image"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing file content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "image": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image",
          "description": "Image to add"
        },
        "imageText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Description Text",
          "description": "Text displayed next to image"
        }
      }
    },
    "WordTable": {
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing file content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "table": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Table",
          "description": "Table as json"
        },
        "tableText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Tabletext",
          "description": "Text displayed next to table"
        }
      }
    },
    "WordText": {
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing file content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "sectionType": {
          "default": "Heading1",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "GetWordSectionTypes",
            "value-path": "name",
            "value-title": "name",
            "parameters": {}
          }
        },
        "text": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text",
          "description": "Text"
        }
      }
    },
    "XmlData": {
      "required": [
        "xml"
      ],
      "type": "object",
      "properties": {
        "xml": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "XML",
          "description": "XML"
        }
      }
    },
    "XmlResponse": {
      "type": "object",
      "properties": {
        "xml": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "XML response",
          "description": "XML response"
        }
      }
    },
    "YamlData": {
      "required": [
        "yaml"
      ],
      "type": "object",
      "properties": {
        "yaml": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "YAML",
          "description": "YAML"
        }
      }
    },
    "YamlResponse": {
      "type": "object",
      "properties": {
        "yaml": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Yaml response",
          "description": "Yaml response"
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKey": {
      "type": "apiKey",
      "name": "ApiKey",
      "in": "header",
      "description": "ApiKey Authorization header"
    }
  },
  "security": [
    {
      "ApiKey": []
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.power2apps.de"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.power2apps.de/datenschutz"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Content and Files;Data"
    }
  ]
}