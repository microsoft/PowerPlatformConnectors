{
  "swagger": "2.0",
  "info": {
    "version": "1.1.0",
    "title": "CivicPlus Transform",
    "description": "Empowers business users to create and deploy digital forms for enterprise and government organizations as web and native apps, while allowing developers to customize, extend, or harness the forms through their own custom apps. Connect your forms with this connector to allow easy submission of your form data into your backend systems or databases without the need to write complex integration code.",
    "contact": {
      "name": "CivicPlus Support",
      "url": "https://www.civicoptimize.civicplus.help/hc/en-us",
      "email": "support@civicplus.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "host": "auth-api.transform.civicplus.com",
  "basePath": "/",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/form-submission-meta/web-hooks": {
      "x-ms-notification-content": {
        "description": "Details for Form Submission Meta Webhook",
        "schema": {
          "$ref": "#/definitions/FormSubmissionMetaWebhookPush"
        }
      },
      "post": {
        "description": "Creates a Form Submission Meta Webhook",
        "summary": "Triggers when a Form submission occurs",
        "operationId": "FormSubmissionMetaWebhookTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "Request body of webhook",
            "in": "body",
            "description": "This is the request body of the Webhook",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["callbackUrl"],
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "description": "Callback URL to push data to the Form Submission Meta Webhook Trigger",
                  "title": "Callback URL",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FormSubmissionMetaWebhook"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "401": {
            "description": "Unauthorised",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        }
      }
    },
    "/form-submission-meta/web-hooks/{webhookSubscriptionId}": {
      "get": {
        "description": "Retrieve a Form Submission Meta Webhook",
        "summary": "Allows for Form Submission Meta Webhook to be retrieved",
        "operationId": "GetFormSubmissionMetaWebhookTrigger",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "webhookSubscriptionId",
            "in": "path",
            "description": "ID of the Hook being retrieved",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FormSubmissionMetaWebhook"
            }
          },
          "401": {
            "description": "Unauthorised",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Form Submission Meta Webhook",
        "summary": "Allows for Form Submission Meta Webhook to be deleted",
        "operationId": "DeleteFormSubmissionMetaWebhookTrigger",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "webhookSubscriptionId",
            "in": "path",
            "description": "ID of the Hook being deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorised",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        }
      }
    },
    "/submissions/{formId}/{submissionId}.json": {
      "get": {
        "description": "Allows for Form Submission data to be retrieved",
        "summary": "Retrieve Form Submission Data",
        "operationId": "GetFormSubmissionData",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "ID of the form being retrieved",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Form Id"
          },
          {
            "name": "submissionId",
            "in": "path",
            "description": "ID of the form submission being retrieved",
            "required": true,
            "type": "string",
            "x-ms-summary": "Submission Id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FormSubmissionData"
            }
          },
          "401": {
            "description": "Unauthenticated",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        }
      }
    },
    "/submissions/{formId}/attachments/{attachmentId}": {
      "get": {
        "description": "Allows for Form Submission attachments to be retrieved",
        "summary": "Retrieve Form Submission Attachment",
        "operationId": "GetFormSubmissionAttachment",
        "x-ms-visibility": "important",
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "ID of the form the attachment was uploaded with",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Form Id"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "ID of the uploaded attachment",
            "required": true,
            "type": "string",
            "x-ms-summary": "Attachment Id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file",
              "x-ms-summary": "Attachment Content"
            }
          },
          "401": {
            "description": "Unauthenticated",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        }
      }
    },
    "/forms/{formId}/submissions/{submissionId}/pdf-document": {
      "post": {
        "description": "Allows for Form Submission PDF to be generated",
        "summary": "Generate Form Submission PDF",
        "operationId": "GenerateFormSubmissionPDF",
        "x-ms-visibility": "important",
        "produces": ["application/pdf"],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "ID of the form that was submitted",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Form Id"
          },
          {
            "name": "submissionId",
            "in": "path",
            "description": "ID of the form submission",
            "required": true,
            "type": "string",
            "x-ms-summary": "Submission Id"
          },
          {
            "name": "includeSubmissionIdInPdf",
            "in": "query",
            "description": "The submission identifier can be included at the bottom of each page in the PDF",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include Submission Identifier In Pdf"
          },
          {
            "name": "X-OneBlink-Target-Group",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "oneblink-simple-pdf-prod",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "file",
              "x-ms-summary": "Form Submission PDF Content"
            }
          },
          "401": {
            "description": "Unauthenticated",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "APIErrorPayload": {
      "type": "object",
      "properties": {
        "error": {
          "x-ms-summary": "Error Title"
        },
        "message": {
          "type": "string",
          "x-ms-summary": "Error Message"
        },
        "statusCode": {
          "type": "integer",
          "x-ms-summary": "HTTP Status Code"
        }
      }
    },
    "FormSubmissionMetaWebhookPush": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "integer",
          "x-ms-summary": "Form Id"
        },
        "submissionId": {
          "type": "string",
          "x-ms-summary": "Submission Id"
        },
        "externalId": {
          "type": "string",
          "x-ms-summary": "External Id"
        }
      }
    },
    "FormSubmissionMetaWebhook-POST": {
      "type": "object",
      "required": ["callbackUrl"],
      "properties": {
        "callbackUrl": {
          "type": "string",
          "description": "Callback URL to push data to the Form Submission Meta Webhook Trigger",
          "title": "Callback URL",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        }
      }
    },
    "FormSubmissionMetaWebhook": {
      "type": "object",
      "properties": {
        "callbackUrl": {
          "type": "string"
        },
        "keyId": {
          "type": "string"
        },
        "organisationId": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "FormSubmissionData": {
      "type": "object",
      "properties": {
        "definition": {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "name": {
              "type": "string",
              "x-ms-summary": "Form Name"
            },
            "description": {
              "type": "string",
              "x-ms-summary": "Form Description"
            }
          }
        },
        "submission": {
          "type": "object",
          "additionalProperties": true,
          "x-ms-summary": "Submission Data"
        },
        "submissionTimestamp": {
          "type": "string",
          "format": "date-time",
          "x-ms-summary": "Submission Timestamp"
        },
        "user": {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "providerUserId": {
              "type": "string",
              "x-ms-summary": "Submitted By: User Id"
            },
            "firstName": {
              "type": "string",
              "x-ms-summary": "Submitted By: First Name"
            },
            "lastName": {
              "type": "string",
              "x-ms-summary": "Submitted By: Last Name"
            },
            "fullName": {
              "type": "string",
              "x-ms-summary": "Submitted By: Full Name"
            },
            "email": {
              "type": "string",
              "x-ms-summary": "Submitted By: Email Address"
            },
            "picture": {
              "type": "string",
              "x-ms-summary": "Submitted By: Image URL"
            },
            "role": {
              "type": "string",
              "x-ms-summary": "Submitted By: Role"
            },
            "userId": {
              "type": "string",
              "x-ms-summary": "Submitted By: Internal User Id"
            },
            "providerType": {
              "type": "string",
              "x-ms-summary": "Submitted By: Provider Type"
            },
            "supervisor": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "providerUserId": {
                  "type": "string",
                  "x-ms-summary": "Submitted By: Supervisor User Id"
                },
                "fullName": {
                  "type": "string",
                  "x-ms-summary": "Submitted By: Supervisor Full Name"
                },
                "email": {
                  "type": "string",
                  "x-ms-summary": "Submitted By: Supervisor Email Address"
                }
              }
            }
          }
        },
        "device": {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "type": {
              "type": "string",
              "x-ms-summary": "Device: Type (CORDOVA, BROWSER, PWA)"
            },
            "cordova": {
              "type": "string",
              "x-ms-summary": "Device: Cordova Version"
            },
            "model": {
              "type": "string",
              "x-ms-summary": "Device: Model"
            },
            "platform": {
              "type": "string",
              "x-ms-summary": "Device: Platform"
            },
            "uuid": {
              "type": "string",
              "x-ms-summary": "Device: Universally Unique Identifier"
            },
            "version": {
              "type": "string",
              "x-ms-summary": "Device: Operating System Version"
            },
            "manufacturer": {
              "type": "string",
              "x-ms-summary": "Device: Manufacturer"
            },
            "isVirtual": {
              "type": "boolean",
              "x-ms-summary": "Device: Was a Simulator"
            },
            "serial": {
              "type": "string",
              "x-ms-summary": "Device: Hardware Serial Number"
            },
            "appCodeName": {
              "type": "string",
              "x-ms-summary": "Device: Browser Code"
            },
            "appName": {
              "type": "string",
              "x-ms-summary": "Device: Browser Name"
            },
            "appVersion": {
              "type": "string",
              "x-ms-summary": "Device: Browser Version"
            },
            "cookieEnabled": {
              "type": "boolean",
              "x-ms-summary": "Device: Were Cookies Enabled"
            },
            "hardwareConcurrency": {
              "type": "number",
              "x-ms-summary": "Device: Hardware Concurrency"
            },
            "language": {
              "type": "string",
              "x-ms-summary": "Device: Preferred Language"
            },
            "maxTouchPoints": {
              "type": "number",
              "x-ms-summary": "Device: Maximum Supported Touch Points"
            },
            "userAgent": {
              "type": "string",
              "x-ms-summary": "Device: User Agent"
            },
            "vendor": {
              "type": "string",
              "x-ms-summary": "Device: Browser Vendor"
            },
            "vendorSub": {
              "type": "string",
              "x-ms-summary": "Device: Browser Vendor Version"
            },
            "webdriver": {
              "type": "boolean",
              "x-ms-summary": "Device: Was Controlled by Automation"
            }
          }
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    }
  },
  "security": [],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "http://oneblink.io/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "http://oneblink.io/legal/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity;Data"
    }
  ]
}
