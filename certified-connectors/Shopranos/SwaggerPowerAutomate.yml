swagger: '2.0'
info:
  title: Catalog API
  description: >-
    Elevate your business automation with the Shopranos Power Automate
    Connector, a powerful Platform-as-a-Service (PaaS) solution that seamlessly
    links your company's ERP system with B2B eCommerce operations. Our mission
    is simple: to empower our customers by enabling them to effortlessly execute
    essential tasks within their workflow.


    With the Shopranos Power Automate Connector, your business gains the agility
    to respond to critical events, such as order creation, with precision. Our
    connector provides the capability to trigger instant notifications or
    orchestrate seamless approval processes, ensuring that you stay in control
    of your operations, every step of the way.


    By integrating Shopranos with Microsoft Power Automate, you're not just
    connecting systems; you're unlocking a world of automation possibilities.
    Whether it's sending crucial messages to stakeholders or driving approval
    workflows, our connector simplifies complex processes, enhances efficiency,
    and accelerates your business's path to success. Experience the power of
    Shopranos with the Microsoft Power Automate Connector and take your
    ERP-to-B2B eCommerce integration to the next level.
  version: v1.0.0
host: platform.shopranos.eu
basePath: /
schemes:
  - https
consumes: []
produces: []
paths:
  /api/AttributeSets:
    get:
      tags:
        - AttributeSets
      summary: Attribute Set Query
      operationId: AttributeSets_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Title
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/AttributeSetDTO'
        '500':
          description: Server Error
    post:
      tags:
        - AttributeSets
      summary: Attribute Set Create
      operationId: AttributeSets_POST_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/CreateAttributeSetDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/AttributeSetDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/AttributeSets/{id}:
    get:
      tags:
        - AttributeSets
      summary: Attribute Set Get By Id
      operationId: AttributeSets_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttributeSetDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - AttributeSets
      summary: Attribute Set Delete
      operationId: AttributeSets_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: token
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - AttributeSets
      summary: Attribute Set Update
      operationId: AttributeSets_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: token
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/UpdateAttributeSetDTO'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttributeSetDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/AttributeSets/Import:
    post:
      tags:
        - AttributeSets
      summary: Attribute Set Import
      operationId: AttributeSets_POST_Import
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            type: string
            items:
              $ref: '#/definitions/AttributeSetDTO'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Attributes/{id}:
    get:
      tags:
        - Attributes
      summary: Attribute Get By Id
      operationId: Attributes_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttributeDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Attributes
      summary: Attribute Delete
      operationId: Attributes_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: token
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Attributes
      summary: Attribute Update
      operationId: Attributes_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: token
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/AttributeDTO'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttributeDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Attributes/code/{code}:
    get:
      tags:
        - Attributes
      summary: Attribute Get By Code
      operationId: Attributes_GET_GetByCode
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: code
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttributeDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Attributes:
    get:
      tags:
        - Attributes
      summary: Attribute Query
      operationId: Attributes_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Status
          type: string
          enum:
            - Draft
            - Active
            - Archived
            - ignore
        - in: query
          name: Type
          type: string
        - in: query
          name: IsFilterable
          type: boolean
        - in: query
          name: DisplayOnProduct
          type: boolean
        - in: query
          name: DisplayInList
          type: boolean
        - in: query
          name: Search
          type: string
        - in: query
          name: Id
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttributeDTO'
        '500':
          description: Server Error
    post:
      tags:
        - Attributes
      summary: Attribute Create
      operationId: Attributes_POST_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/AttributeDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/AttributeDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Attributes/import:
    post:
      tags:
        - Attributes
      summary: Attributes Import
      operationId: Attributes_POST_Import
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            type: string
            items:
              $ref: '#/definitions/AttributeDTO'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Brands:
    get:
      tags:
        - Brands
      summary: Brand Query
      operationId: Brands_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Status
          type: string
          enum:
            - Draft
            - Active
            - Archived
            - ignore
        - in: query
          name: Search
          type: string
        - in: query
          name: Code
          type: string
        - in: query
          name: Id
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/BrandDTO'
        '500':
          description: Server Error
    post:
      tags:
        - Brands
      summary: Brand Create
      operationId: Brands_POST_Add
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/BrandDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/BrandDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Brands/{brandId}:
    get:
      tags:
        - Brands
      summary: Brand Get by Id
      operationId: Brands_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: brandId
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BrandDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Brands
      summary: Brand Delete
      operationId: Brands_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: brandId
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Brands
      summary: Brand Update
      operationId: Brands_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: brandId
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/BrandDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Brands/alias/{brandAlias}:
    get:
      tags:
        - Brands
      summary: Brand Get by Alias
      operationId: Brands_GET_GetByAlias
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: brandAlias
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BrandDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Brands/import:
    post:
      tags:
        - Brands
      summary: Brand Import
      operationId: Brands_POST_Import
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            type: string
            items:
              $ref: '#/definitions/BrandDTO'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Brands/import/codes:
    post:
      tags:
        - Brands
      summary: Brand Import By Code
      operationId: Brands_POST_ImportByCodes
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            type: string
            items:
              $ref: '#/definitions/BrandDTO'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Categories/{id}:
    get:
      tags:
        - Categories
      summary: Category Get By Id
      operationId: Categories_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CategoryDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Categories
      summary: Category Delete
      operationId: Categories_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: token
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Categories
      summary: Category Update
      operationId: Categories_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: token
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/CategoryDTO'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CategoryDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Categories/alias/{alias}:
    get:
      tags:
        - Categories
      summary: Category Get By alias
      operationId: Categories_GET_GetByAlias
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: alias
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CategoryDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Categories:
    get:
      tags:
        - Categories
      summary: Category Query
      operationId: Categories_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Title
          type: string
        - in: query
          name: Id
          type: string
        - in: query
          name: Search
          type: string
        - in: query
          name: Code
          type: string
        - in: query
          name: ParentId
          type: string
        - in: query
          name: Path
          type: string
        - in: query
          name: ParentIds
          type: string
        - in: query
          name: Status
          type: string
          enum:
            - Draft
            - Active
            - Archived
            - ignore
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/CategoryDTO'
        '500':
          description: Server Error
    post:
      tags:
        - Categories
      summary: Category Create
      operationId: Categories_POST_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/CategoryDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CategoryDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Categories/import:
    post:
      tags:
        - Categories
      summary: Category Import
      operationId: Categories_POST_Import
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            type: string
            items:
              $ref: '#/definitions/CategoryDTO'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Collections:
    get:
      tags:
        - Collections
      summary: Collection Query
      operationId: Collections_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Status
          type: string
          enum:
            - Draft
            - Active
            - Archived
            - ignore
        - in: query
          name: Title
          type: string
        - in: query
          name: Id
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CollectionDTO'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    post:
      tags:
        - Collections
      summary: Collection Create
      operationId: Collections_POST_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CollectionDTO'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Collections/{collectionId}:
    get:
      tags:
        - Collections
      summary: Collection Get by Id
      operationId: Collections_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: collectionId
          description: collection id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CollectionDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Collections
      summary: Collection Delete
      operationId: Collections_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: collectionId
          description: Collection Id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Collections
      summary: Collection Update
      operationId: Collections_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: collectionId
          description: collection id
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/CollectionDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/products/{productId}/documentation:
    get:
      tags:
        - Documentations
      summary: Product Get Additional Content By Id
      operationId: Documentations_GET_GetDocumentationByProductId
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: productId
          description: product id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DocumentationDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Documentations
      summary: Product Delete Additional Content
      operationId: Documentations_DELETE_DeleteProduct
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: productId
          description: ''
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Documentations
      summary: Product Updates Additional Content
      operationId: Documentations_PUT_UpdateProduct
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: productId
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/DocumentationDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/products/{productId}/documentation/html:
    get:
      tags:
        - Documentations
      summary: Product Get Additional Content By Id (HTML)
      operationId: Documentations_GET_GetHtmlDocumentationByProductId
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: productId
          description: product id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DocumentationDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/categories/{categoryId}/documentation:
    get:
      tags:
        - Documentations
      summary: Category Get Additional Content By Id
      operationId: Documentations_GET_GetDocumentationByCategoryId
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: categoryId
          description: product id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DocumentationDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Documentations
      summary: Category Delete Additional Content
      operationId: Documentations_DELETE_DeleteCategory
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: categoryId
          description: ''
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Documentations
      summary: Category Update Additional Content
      operationId: Documentations_PUT_UpdateCategory
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: categoryId
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/DocumentationDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/categories/{categoryId}/documentation/html:
    get:
      tags:
        - Documentations
      summary: Category Get Additional Content By Id (HTML)
      operationId: Documentations_GET_GetHtmlDocumentationByCategoryId
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: categoryId
          description: product id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DocumentationDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/collections/{collectionId}/documentation:
    get:
      tags:
        - Documentations
      summary: Collection Get Additional Content By Id
      operationId: Documentations_GET_GetDocumentationByCollectionId
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: collectionId
          description: product id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DocumentationDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Documentations
      summary: Collection Delete Additional Content
      operationId: Documentations_DELETE_DeleteCollection
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: collectionId
          description: ''
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Documentations
      summary: Collection Update Additional Content
      operationId: Documentations_PUT_UpdateCollection
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: collectionId
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/DocumentationDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/collections/{collectionId}/documentation/html:
    get:
      tags:
        - Documentations
      summary: Collection Get Additional Content By Id (HTML)
      operationId: Documentations_GET_GetHtmlDocumentationByCollectionId
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: collectionId
          description: product id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DocumentationDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/brands/{brandId}/documentation:
    get:
      tags:
        - Documentations
      summary: Brand Get Additional Content By Id
      operationId: Documentations_GET_GetDocumentationByBrandId
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: brandId
          description: product id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DocumentationDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Documentations
      summary: Brand Delete Additional Content
      operationId: Documentations_DELETE_DeleteBrand
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: brandId
          description: ''
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Documentations
      summary: Brand Update Additional Content
      operationId: Documentations_PUT_UpdateBrand
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: brandId
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/DocumentationDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/brands/{brandId}/documentation/html:
    get:
      tags:
        - Documentations
      summary: Brand Get Additional Content By Id (HTML)
      operationId: Documentations_GET_GetHtmlDocumentationByBrandId
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: brandId
          description: product id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DocumentationDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Products/extended/{alias}:
    get:
      tags:
        - ExtendedProducts
      summary: Product Extended Get By Alias
      operationId: ExtendedProducts_GET_GetByAlias
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: lang
          description: ''
          type: string
        - in: query
          name: extend
          description: ''
          type: string
        - in: path
          name: alias
          description: product id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExtendedProductDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Products/extended:
    get:
      tags:
        - ExtendedProducts
      summary: Product Extended Query
      operationId: ExtendedProducts_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: lang
          description: ''
          type: string
        - in: query
          name: extend
          description: ''
          type: string
        - in: query
          name: Price
          type: string
        - in: query
          name: MaxPrice
          type: number
          format: double
        - in: query
          name: Size1
          type: string
        - in: query
          name: Size2
          type: string
        - in: query
          name: Size3
          type: string
        - in: query
          name: InsertDate
          type: string
        - in: query
          name: Date1
          type: string
        - in: query
          name: Date2
          type: string
        - in: query
          name: Date3
          type: string
        - in: query
          name: Date1DateRange
          type: string
        - in: query
          name: Date2DateRange
          type: string
        - in: query
          name: Date3DateRange
          type: string
        - in: query
          name: InsertDateRange
          type: string
        - in: query
          name: Search
          type: string
        - in: query
          name: MinPrice
          type: number
          format: double
        - in: query
          name: Status
          type: string
          enum:
            - Draft
            - Active
            - Archived
            - ignore
        - in: query
          name: Availability
          type: string
        - in: query
          name: Tag
          type: string
        - in: query
          name: SourceTag
          type: string
        - in: query
          name: PrivacyRule
          type: string
        - in: query
          name: Rule
          type: string
        - in: query
          name: Condition
          type: string
        - in: query
          name: Ids
          type: string
        - in: query
          name: Id
          type: string
        - in: query
          name: PriceRange
          type: string
        - in: query
          name: BrandCode
          type: string
        - in: query
          name: BrandId
          type: string
        - in: query
          name: Attribute
          type: string
        - in: query
          name: PathCategory
          type: string
        - in: query
          name: CategoryId
          type: string
        - in: query
          name: AdditionalCategoryId
          type: string
        - in: query
          name: StockAvailabilityId
          type: string
        - in: query
          name: AttributeSetId
          type: string
        - in: query
          name: PriceCategoryId
          type: string
        - in: query
          name: HasMedia
          type: boolean
        - in: query
          name: MasterId
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/ExtendedProductDTO'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/collections/extended/{alias}:
    get:
      tags:
        - ExtentedCollections
      summary: Collection Extended Get by Alias
      operationId: ExtentedCollections_GET_GetByAlias
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: lang
          description: ''
          type: string
        - in: path
          name: alias
          description: product id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CollectionDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/collections/extended/{id}/id:
    get:
      tags:
        - ExtentedCollections
      summary: Collection Extended Get by Id
      operationId: ExtentedCollections_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: lang
          description: ''
          type: string
        - in: path
          name: id
          description: product id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CollectionDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/collections/extended:
    get:
      tags:
        - ExtentedCollections
      summary: Collection Extended Query
      operationId: ExtentedCollections_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Status
          type: string
          enum:
            - Draft
            - Active
            - Archived
            - ignore
        - in: query
          name: Title
          type: string
        - in: query
          name: Id
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
        - in: query
          name: lang
          description: ''
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/CollectionDTO'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Filters/clear:
    post:
      tags:
        - Filters
      summary: Filters Purge
      operationId: Filters_POST_BuildFilters
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/IcoTags/{id}:
    get:
      tags:
        - IcoTags
      summary: Product Label Get By Id
      operationId: IcoTags_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/IcoTagDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - IcoTags
      summary: Product Label Delete
      operationId: IcoTags_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - IcoTags
      summary: Product Label Update
      operationId: IcoTags_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/IcoTagDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/IcoTags:
    get:
      tags:
        - IcoTags
      summary: Product Label Query
      operationId: IcoTags_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Name
          type: string
        - in: query
          name: Status
          type: string
          enum:
            - Draft
            - Active
            - Archived
            - ignore
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/IcoTagDTO'
        '500':
          description: Server Error
    post:
      tags:
        - IcoTags
      summary: Product Label Create
      operationId: IcoTags_POST_Add
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/IcoTagDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/IcoTagDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/PrivacyGroups:
    get:
      tags:
        - PrivacyGroups
      summary: Privacy Group Query
      operationId: PrivacyGroups_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Title
          type: string
        - in: query
          name: Status
          type: string
          enum:
            - Draft
            - Active
            - Archived
            - ignore
        - in: query
          name: CustomerIds
          type: string
        - in: query
          name: CustomerGroupIds
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/PrivacyGroupDTO'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    post:
      tags:
        - PrivacyGroups
      summary: Privacy Group Create
      operationId: PrivacyGroups_POST_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PrivacyGroupDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PrivacyGroupDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/PrivacyGroups/{id}:
    get:
      tags:
        - PrivacyGroups
      summary: Privacy Group Get By Id
      operationId: PrivacyGroups_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: PrivacyGroup id
          required: true
          type: string
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PrivacyGroupDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - PrivacyGroups
      summary: Privacy Group Delete
      operationId: PrivacyGroups_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: PrivacyGroup Id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - PrivacyGroups
      summary: Privacy Group Update
      operationId: PrivacyGroups_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: collection id
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/PrivacyGroupDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/ProductVariants/flat:
    get:
      tags:
        - ProductVariants
      summary: Get all flat product variants
      operationId: ProductVariants_GET_GetAllFlat
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Price
          type: string
        - in: query
          name: MaxPrice
          type: number
          format: double
        - in: query
          name: Size1
          type: string
        - in: query
          name: Size2
          type: string
        - in: query
          name: Size3
          type: string
        - in: query
          name: InsertDate
          type: string
        - in: query
          name: Date1
          type: string
        - in: query
          name: Date2
          type: string
        - in: query
          name: Date3
          type: string
        - in: query
          name: Date1DateRange
          type: string
        - in: query
          name: Date2DateRange
          type: string
        - in: query
          name: Date3DateRange
          type: string
        - in: query
          name: InsertDateRange
          type: string
        - in: query
          name: Search
          type: string
        - in: query
          name: MinPrice
          type: number
          format: double
        - in: query
          name: Status
          type: string
          enum:
            - Draft
            - Active
            - Archived
            - ignore
        - in: query
          name: Availability
          type: string
        - in: query
          name: Tag
          type: string
        - in: query
          name: SourceTag
          type: string
        - in: query
          name: PrivacyRule
          type: string
        - in: query
          name: Rule
          type: string
        - in: query
          name: Condition
          type: string
        - in: query
          name: Ids
          type: string
        - in: query
          name: Id
          type: string
        - in: query
          name: PriceRange
          type: string
        - in: query
          name: BrandCode
          type: string
        - in: query
          name: BrandId
          type: string
        - in: query
          name: Attribute
          type: string
        - in: query
          name: PathCategory
          type: string
        - in: query
          name: CategoryId
          type: string
        - in: query
          name: AdditionalCategoryId
          type: string
        - in: query
          name: StockAvailabilityId
          type: string
        - in: query
          name: AttributeSetId
          type: string
        - in: query
          name: PriceCategoryId
          type: string
        - in: query
          name: HasMedia
          type: boolean
        - in: query
          name: MasterId
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Products:
    get:
      tags:
        - ProductsQuery
      summary: Product Query
      operationId: ProductsQuery_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Price
          type: string
        - in: query
          name: MaxPrice
          type: number
          format: double
        - in: query
          name: Size1
          type: string
        - in: query
          name: Size2
          type: string
        - in: query
          name: Size3
          type: string
        - in: query
          name: InsertDate
          type: string
        - in: query
          name: Date1
          type: string
        - in: query
          name: Date2
          type: string
        - in: query
          name: Date3
          type: string
        - in: query
          name: Date1DateRange
          type: string
        - in: query
          name: Date2DateRange
          type: string
        - in: query
          name: Date3DateRange
          type: string
        - in: query
          name: InsertDateRange
          type: string
        - in: query
          name: Search
          type: string
        - in: query
          name: MinPrice
          type: number
          format: double
        - in: query
          name: Status
          type: string
          enum:
            - Draft
            - Active
            - Archived
            - ignore
        - in: query
          name: Availability
          type: string
        - in: query
          name: Tag
          type: string
        - in: query
          name: SourceTag
          type: string
        - in: query
          name: PrivacyRule
          type: string
        - in: query
          name: Rule
          type: string
        - in: query
          name: Condition
          type: string
        - in: query
          name: Ids
          type: string
        - in: query
          name: Id
          type: string
        - in: query
          name: PriceRange
          type: string
        - in: query
          name: BrandCode
          type: string
        - in: query
          name: BrandId
          type: string
        - in: query
          name: Attribute
          type: string
        - in: query
          name: PathCategory
          type: string
        - in: query
          name: CategoryId
          type: string
        - in: query
          name: AdditionalCategoryId
          type: string
        - in: query
          name: StockAvailabilityId
          type: string
        - in: query
          name: AttributeSetId
          type: string
        - in: query
          name: PriceCategoryId
          type: string
        - in: query
          name: HasMedia
          type: boolean
        - in: query
          name: MasterId
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Returns the paginated list of products.
          schema:
            type: string
            items:
              $ref: '#/definitions/ProductDTO'
        '403':
          description: The user is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: An error occurred while retrieving the products.
    post:
      tags:
        - Products
      summary: Product Create
      operationId: Products_POST_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: The Product object to create.
          schema:
            $ref: '#/definitions/ChangeProductDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ProductDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Products/{id}:
    get:
      tags:
        - ProductsQuery
      summary: Product Get By Id
      operationId: ProductsQuery_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: The ID of the product to retrieve.
          required: true
          type: string
      responses:
        '200':
          description: The product was successfully retrieved.
          schema:
            $ref: '#/definitions/ProductDTO'
        '400':
          description: The product ID is invalid or missing.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: The user is not authorized to manage the catalogue.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: The product with the specified ID was not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: An error occurred while retrieving the product.
    delete:
      tags:
        - Products
      summary: Product Delete
      operationId: Products_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: The ID of the product to delete.
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Products
      summary: Product Update
      operationId: Products_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: The ID of the product to update.
          required: true
          type: string
        - in: body
          name: body
          description: The updated product data.
          schema:
            $ref: '#/definitions/ChangeProductDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Products/import/skus:
    post:
      tags:
        - Products
      summary: Product Import By SKU
      operationId: Products_POST_ImportBySKUs
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            type: string
            items:
              $ref: '#/definitions/ImportProductDTO'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Products/import:
    post:
      tags:
        - Products
      summary: Product Import
      operationId: Products_POST_Import
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: A list of ImportProductDTO objects containing product details.
          schema:
            type: string
            items:
              $ref: '#/definitions/ImportProductDTO'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Products/alias/{alias}:
    get:
      tags:
        - ProductsQuery
      summary: Product Get By Alias
      operationId: ProductsQuery_GET_GetByAlias
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: alias
          description: The alias of the product to retrieve.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/RelatedProducts/{productId}/{variantId}:
    get:
      tags:
        - RelatedProducts
      summary: Related Products Create
      operationId: RelatedProducts_GET_GetRelated
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: productId
          description: ''
          required: true
          type: string
        - in: path
          name: variantId
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RelatedProductVariantDTO'
        '500':
          description: Server Error
    delete:
      tags:
        - RelatedProducts
      summary: Related Products Delete
      operationId: RelatedProducts_DELETE_DeleteRelated
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: productId
          description: ''
          required: true
          type: string
        - in: path
          name: variantId
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - RelatedProducts
      summary: Related Products Update
      operationId: RelatedProducts_PUT_UpdateRelated
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: productId
          description: ''
          required: true
          type: string
        - in: path
          name: variantId
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            type: string
            items:
              $ref: '#/definitions/RelatedProductVariantDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/StockAvailability:
    get:
      tags:
        - StockAvailability
      summary: Stock Availability Query
      operationId: StockAvailability_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Title
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/StockAvailabilityDTO'
        '500':
          description: Server Error
    post:
      tags:
        - StockAvailability
      summary: Stock Availability Create
      operationId: StockAvailability_POST_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/CreateStockAvailabilityDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/StockAvailabilityDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/StockAvailability/{id}:
    get:
      tags:
        - StockAvailability
      summary: Stock Availability Get By Id
      operationId: StockAvailability_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StockAvailabilityDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - StockAvailability
      summary: Stock Availability Delete
      operationId: StockAvailability_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - StockAvailability
      summary: Stock Availability Update
      operationId: StockAvailability_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/UpdateStockAvailabilityDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Tags/product/source/import:
    post:
      tags:
        - Tags
      summary: Source Tag Product Import
      operationId: Tags_POST_Import
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            type: string
            items:
              $ref: '#/definitions/SourceTagDTO'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Units:
    get:
      tags:
        - Units
      summary: Unit Query
      operationId: Units_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Name
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/UnitDTO'
        '500':
          description: Server Error
    post:
      tags:
        - Units
      summary: Unit Create
      operationId: Units_POST_Add
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/UnitDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UnitDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Units/{id}:
    get:
      tags:
        - Units
      summary: Unit Get By Id
      operationId: Units_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnitDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Units
      summary: Unit Delete
      operationId: Units_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Units
      summary: Unit Update
      operationId: Units_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/UnitDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Units/import:
    post:
      tags:
        - Units
      summary: Unit Import
      operationId: Units_POST_Import
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            type: string
            items:
              $ref: '#/definitions/UnitDTO'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/webhook/register/product/created:
    x-ms-notification-content:
      description: Product Created Webhook
      schema:
        $ref: '#/definitions/ProductDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When a Product is Created
      description: This operation triggers when a new product is created
      operationId: ProductCreatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/product/updated:
    x-ms-notification-content:
      description: Product Update Webhook
      schema:
        $ref: '#/definitions/ProductDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When a Product is Updated
      description: This operation triggers when a product is updated
      operationId: ProductUpdatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/product/deleted:
    x-ms-notification-content:
      description: Product Deleted Webhook
      schema:
        $ref: '#/definitions/ProductDTO'
    post:
      responses:
        '201':
          description: Webhook deleted
      summary: When a Product is Deleted
      description: This operation triggers when a product is deleted
      operationId: ProductDeletedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/category/created:
    x-ms-notification-content:
      description: Category Created Webhook
      schema:
        $ref: '#/definitions/CategoryDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When a Category is Created
      description: This operation triggers when a new category is created
      operationId: CategoryCreatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/category/updated:
    x-ms-notification-content:
      description: Category Update Webhook
      schema:
        $ref: '#/definitions/CategoryDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When a Category is Updated
      description: This operation triggers when a category is updated
      operationId: CategoryUpdatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/category/deleted:
    x-ms-notification-content:
      description: Category Deleted Webhook
      schema:
        $ref: '#/definitions/CategoryDTO'
    post:
      responses:
        '201':
          description: Webhook deleted
      summary: When a Category is Deleted
      description: This operation triggers when a product is deleted
      operationId: CategoryDeletedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/brand/created:
    x-ms-notification-content:
      description: Brand Created Webhook
      schema:
        $ref: '#/definitions/BrandDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When a Brand is Created
      description: This operation triggers when a new brand is created
      operationId: BrandCreatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/brand/updated:
    x-ms-notification-content:
      description: Brand Update Webhook
      schema:
        $ref: '#/definitions/BrandDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When a Brand is Updated
      description: This operation triggers when a brand is updated
      operationId: BrandUpdatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/brand/deleted:
    x-ms-notification-content:
      description: Brand Deleted Webhook
      schema:
        $ref: '#/definitions/BrandDTO'
    post:
      responses:
        '201':
          description: Webhook deleted
      summary: When a Brand is Deleted
      description: This operation triggers when a brand is deleted
      operationId: BrandDeletedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/unit/created:
    x-ms-notification-content:
      description: Unit Created Webhook
      schema:
        $ref: '#/definitions/UnitDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When a Unit is Created
      description: This operation triggers when a new unit is created
      operationId: UnitCreatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/unit/updated:
    x-ms-notification-content:
      description: Unit Update Webhook
      schema:
        $ref: '#/definitions/UnitDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When a Unit is Updated
      description: This operation triggers when a unit is updated
      operationId: UnitUpdatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/unit/deleted:
    x-ms-notification-content:
      description: Unit Deleted Webhook
      schema:
        $ref: '#/definitions/UnitDTO'
    post:
      responses:
        '201':
          description: Webhook deleted
      summary: When a Unit is Deleted
      description: This operation triggers when a unit is deleted
      operationId: UnitDeletedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/attribute/created:
    x-ms-notification-content:
      description: Attribute Created Webhook
      schema:
        $ref: '#/definitions/AttributeDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When an Attribute is Created
      description: This operation triggers when a new attribute is created
      operationId: AttributeCreatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/attribute/updated:
    x-ms-notification-content:
      description: Attribute Update Webhook
      schema:
        $ref: '#/definitions/AttributeDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When an Attribute is Updated
      description: This operation triggers when an attribute is updated
      operationId: AttributeUpdatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/attribute/deleted:
    x-ms-notification-content:
      description: Attribute Deleted Webhook
      schema:
        $ref: '#/definitions/AttributeDTO'
    post:
      responses:
        '201':
          description: Webhook deleted
      summary: When an Attibute is Deleted
      description: This operation triggers when an attribute is deleted
      operationId: AttributeDeletedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/attributeset/created:
    x-ms-notification-content:
      description: AttributeSet Created Webhook
      schema:
        $ref: '#/definitions/AttributeSetDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When an AttributeSet is Created
      description: This operation triggers when a new attributeSet is created
      operationId: AttributeSetCreatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/attributeset/updated:
    x-ms-notification-content:
      description: AttributeSet Update Webhook
      schema:
        $ref: '#/definitions/AttributeSetDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When an AttributeSet is Updated
      description: This operation triggers when an attributeSet is updated
      operationId: AttributeSetUpdatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/attributeset/deleted:
    x-ms-notification-content:
      description: AttributeSet Deleted Webhook
      schema:
        $ref: '#/definitions/AttributeSetDTO'
    post:
      responses:
        '201':
          description: Webhook deleted
      summary: When an AttibuteSet is Deleted
      description: This operation triggers when an attributeSet is deleted
      operationId: AttributeSetDeletedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/checkout/created:
    x-ms-notification-content:
      description: Chechout Created Webhook
      schema:
        $ref: '#/definitions/CheckoutDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When a Checkout is Created
      description: This operation triggers when a new checkout is created
      operationId: CheckoutCreatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/checkout/completed:
    x-ms-notification-content:
      description: Checkout Completed Webhook
      schema:
        $ref: '#/definitions/CheckoutDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When a Checkout is Completed
      description: This operation triggers when a product is updated
      operationId: CheckoutCompletedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/customer/created:
    x-ms-notification-content:
      description: Customer Created Webhook
      schema:
        $ref: '#/definitions/CustomerDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When a Customer is Created
      description: This operation triggers when a new Customer is created
      operationId: CustomerCreatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/customer/updated:
    x-ms-notification-content:
      description: Customer Update Webhook
      schema:
        $ref: '#/definitions/CustomerDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When an Customer is Updated
      description: This operation triggers when a customer is updated
      operationId: CustomerUpdatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/customer/deleted:
    x-ms-notification-content:
      description: Customer Deleted Webhook
      schema:
        $ref: '#/definitions/CustomerDTO'
    post:
      responses:
        '201':
          description: Webhook deleted
      summary: When a Customer is Deleted
      description: This operation triggers when a Customer is deleted
      operationId: CustomerDeletedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/order/created:
    x-ms-notification-content:
      description: Order Created Webhook
      schema:
        $ref: '#/definitions/OrderDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When an Order is Created
      description: This operation triggers when a new order is created
      operationId: OrderCreatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/order/updated:
    x-ms-notification-content:
      description: Order Update Webhook
      schema:
        $ref: '#/definitions/OrderDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When an Order is Updated
      description: This operation triggers when an order is updated
      operationId: OrderUpdatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/order/deleted:
    x-ms-notification-content:
      description: Order Deleted Webhook
      schema:
        $ref: '#/definitions/OrderDTO'
    post:
      responses:
        '201':
          description: Webhook deleted
      summary: When an Order is Deleted
      description: This operation triggers when an order is deleted
      operationId: OrderDeletedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/inventorylevel/created:
    x-ms-notification-content:
      description: Inventory Level Created Webhook
      schema:
        $ref: '#/definitions/InventoryLevelDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When an Inventory Level is Created
      description: This operation triggers when a new inventory level is created
      operationId: InventoryLevelCreatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/inventorylevel/updated:
    x-ms-notification-content:
      description: Order Update Webhook
      schema:
        $ref: '#/definitions/InventoryLevelDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When an Inventory Level is Updated
      description: This operation triggers when an inventory level is updated
      operationId: InventoryLevelUpdatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/inventorylevel/deleted:
    x-ms-notification-content:
      description: Inventory Level Deleted Webhook
      schema:
        $ref: '#/definitions/InventoryLevelDTO'
    post:
      responses:
        '201':
          description: Webhook deleted
      summary: When an Inventory Level is Deleted
      description: This operation triggers when an inventory level is deleted
      operationId: InventoryLevelDeletedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/payment/initiated:
    x-ms-notification-content:
      description: Payment Initiated Webhook
      schema:
        $ref: '#/definitions/PaymentDTO'
    post:
      responses:
        '201':
          description: Webhook created
      summary: When a Payment is Initiated
      description: This operation triggers when a payment is initiated
      operationId: PaymentInitiatedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/webhook/register/payment/completed:
    x-ms-notification-content:
      description: Payment Completed Webhook
      schema:
        $ref: '#/definitions/PaymentDTO'
    post:
      responses:
        '201':
          description: Webhook deleted
      summary: When a Payment is Completed
      description: This operation triggers when a payment is deleted
      operationId: PaymentCompletedTrigger
      x-ms-trigger: single
      parameters:
        - name: Content-Type
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: Accept
          in: header
          required: false
          type: string
          x-ms-visibility: internal
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              Url:
                type: string
                description: Url
                x-ms-notification-url: true
                x-ms-visibility: internal
                title: ''
              Title:
                type: string
                description: Title
                title: ''
            required:
              - Url
              - Title
  /api/Cart/{token}:
    get:
      tags:
        - Cart
      summary: Cart Get By Token
      operationId: Cart_GET_GetCart
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CartDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Cart
      summary: Cart Delete
      operationId: Cart_DELETE_DeleteCart
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: token
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Cart
      summary: Cart Update
      operationId: Cart_PUT_UpdateCart
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: token
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/UpdateCartDTO'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CartDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Cart:
    post:
      tags:
        - Cart
      summary: Cart Create
      operationId: Cart_POST_CreateCart
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/UpdateCartDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CartDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Cart/{token}/Items:
    post:
      tags:
        - Cart
      summary: Cart Add Product
      operationId: Cart_POST_AddToCart
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: token
          required: true
          type: string
        - in: body
          name: body
          description: cartItemsDTO
          schema:
            type: string
            items:
              $ref: '#/definitions/CreateCartItemDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CartDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Cart/{token}/Items/{productVariantId}:
    delete:
      tags:
        - Cart
      summary: Cart Remove Product
      operationId: Cart_DELETE_RemoveFromCart
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: token
          required: true
          type: string
        - in: path
          name: productVariantId
          description: productVariantId
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/ShoppingList/{alias}:
    get:
      tags:
        - ShoppingList
      summary: Shopping List Get By Alias
      operationId: ShoppingList_GET_GetShoppingList
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: alias
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ShoppingListDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - ShoppingList
      summary: Shopping List Delete
      operationId: ShoppingList_DELETE_DeleteShoppingList
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: alias
          description: ''
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - ShoppingList
      summary: Shopping List Update
      operationId: ShoppingList_PUT_UpdateShoppingList
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: alias
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/ShoppingListDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/ShoppingList:
    get:
      tags:
        - ShoppingList
      summary: Shopping List Get All
      operationId: ShoppingList_GET_GetAllShoppingList
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/ShoppingListDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    post:
      tags:
        - ShoppingList
      summary: Shopping List Create
      operationId: ShoppingList_POST_AddShoppingList
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/ShoppingListDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ShoppingListDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Checkout/{token}:
    get:
      tags:
        - Checkout
      summary: Checkout Get By Token
      operationId: Checkout_GET_GetCheckout
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CheckoutDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Checkout
      summary: Checkout Update
      operationId: Checkout_PUT_UpdateCheckout
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/UpdateCheckoutDTO'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CheckoutDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Checkout/start/{token}:
    post:
      tags:
        - Checkout
      summary: Checkout Create
      operationId: Checkout_POST_StartCheckout
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: ''
          required: true
          type: string
        - in: query
          name: lang
          description: ''
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CheckoutDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Checkout/{token}/calculate:
    get:
      tags:
        - Checkout
      summary: Checkout Recalculate
      operationId: Checkout_GET_CalculateCheckout
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: ''
          required: true
          type: string
        - in: query
          name: lang
          description: ''
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CheckoutDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Checkout/{token}/payment/{providerId}:
    put:
      tags:
        - Checkout
      summary: Checkout Initiate Payment
      operationId: Checkout_PUT_StartPaymentCheckout
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: ''
          required: true
          type: string
        - in: path
          name: providerId
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CheckoutDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Checkout/complete/payment/{token}:
    post:
      tags:
        - Checkout
      summary: Checkout Complete Payment
      operationId: Checkout_POST_CompletePayment
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/PaymentDTO'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CheckoutDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Checkout/complete/{token}:
    post:
      tags:
        - Checkout
      summary: Checkout Complete
      operationId: Checkout_POST_CompleteCheckout
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/UpdateCheckoutDTO'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CheckoutDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Assortment/{customerId}:
    get:
      tags:
        - Assortment
      summary: Assortment Get By Customer Id
      operationId: Assortment_GET_GetCustomerAssortment
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerId
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssortmentDTO'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Assortment
      summary: Assortment Delete
      operationId: Assortment_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerId
          description: customer Id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Assortment
      summary: Assortment Update
      operationId: Assortment_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerId
          description: customerId
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/UpdateAssortmentDTO'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssortmentDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Assortment:
    get:
      tags:
        - Assortment
      summary: Assortments Query
      operationId: Assortment_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: CustomerId
          type: string
          items:
            type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/AssortmentDTO'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    post:
      tags:
        - Assortment
      summary: Assortment Create
      operationId: Assortment_POST_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/CreateAssortmentDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/AssortmentDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Assortment/{customerId}/combinations:
    put:
      tags:
        - Assortment
      summary: Assortment Update Combinations
      operationId: Assortment_PUT_UpdateCombinations
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerId
          description: Customerid
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            type: string
            items:
              $ref: '#/definitions/AssortmentCombinationDTO'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssortmentDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/assortment/{customerid}/values:
    get:
      tags:
        - AssortmentValue
      summary: Assortment Values Get By Customer Id
      operationId: AssortmentValue_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerid
          description: ''
          required: true
          type: string
        - in: query
          name: Status
          type: string
          enum:
            - Inactive
            - Active
        - in: query
          name: Source
          type: string
          enum:
            - manual
            - orders
        - in: query
          name: Type
          type: string
        - in: query
          name: Category
          type: string
        - in: query
          name: Id
          type: string
          items:
            type: string
        - in: query
          name: ProductId
          type: string
          items:
            type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/AssortmentValueDTO'
        '500':
          description: Server Error
    delete:
      tags:
        - AssortmentValue
      summary: Assortment Value Delete By Customer Id and Assortment Id
      operationId: AssortmentValue_DELETE_Remove
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerid
          description: customer id
          required: true
          type: string
        - in: query
          name: id
          description: ''
          type: string
          items:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    post:
      tags:
        - AssortmentValue
      summary: Assortment Values Append By Customer Id
      operationId: AssortmentValue_POST_Append
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerid
          description: customer id
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            type: string
            items:
              $ref: '#/definitions/AddAssortmentValueDTO'
      responses:
        '201':
          description: Created
          schema:
            type: string
            items:
              $ref: '#/definitions/AssortmentValueDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/assortment/{customerid}/values/all:
    delete:
      tags:
        - AssortmentValue
      summary: Assortment Values Delete By Customer Id
      operationId: AssortmentValue_DELETE_RemoveAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerid
          description: customer id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/assortment/{customerid}/values/source/{source}:
    delete:
      tags:
        - AssortmentValue
      summary: Assortment Values Delete By Customer Source Id
      operationId: AssortmentValue_DELETE_RemoveBySource
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerid
          description: customer id
          required: true
          type: string
        - in: path
          name: source
          description: ''
          required: true
          type: string
          enum:
            - manual
            - orders
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/assortment/{customerId}/values/{id}:
    put:
      tags:
        - AssortmentValue
      summary: Assortment Values Update By Customer Id and Assortment Id
      operationId: AssortmentValue_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
        - in: path
          name: customerId
          description: Customerid
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UpdateAssortmentValueDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/assortment/{customerId}/rebuild:
    get:
      tags:
        - AssortmentValue
      summary: Assortment Values Rebuild By Customer Id
      operationId: AssortmentValue_GET_Rebuild
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerId
          description: customerId
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/CustomerGroups:
    get:
      tags:
        - CustomerGroups
      summary: Customer Group Query
      operationId: CustomerGroups_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Status
          type: string
          enum:
            - Draft
            - Active
            - Archived
            - ignore
        - in: query
          name: Title
          type: string
        - in: query
          name: Id
          type: string
          items:
            type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/CustomerGroupDTO'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    post:
      tags:
        - CustomerGroups
      summary: Customer Group Create
      operationId: CustomerGroups_POST_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/CustomerGroupDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CustomerGroupDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/CustomerGroups/{Id}:
    get:
      tags:
        - CustomerGroups
      summary: Customer Group Get By Id
      operationId: CustomerGroups_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: Id
          description: Id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerGroupDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - CustomerGroups
      summary: Customer Group Delete
      operationId: CustomerGroups_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: Id
          description: id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - CustomerGroups
      summary: Customer Group Update
      operationId: CustomerGroups_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: Id
          description: Customer Group id
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/CustomerGroupDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/CustomerGroups/customers:
    get:
      tags:
        - CustomerGroups
      summary: Customer group Get by Customer Id
      operationId: CustomerGroups_GET_GetByCustomerId
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: customerId
          description: customerId
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerGroupDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Customers/{customerId}:
    get:
      tags:
        - Customers
      summary: Customer Get By Id
      operationId: Customers_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerId
          description: customer id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Customers
      summary: Customer Delete
      operationId: Customers_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerId
          description: customer id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Customers
      summary: Customer Update
      operationId: Customers_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: customerId
          description: customer id
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/CustomerDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Customers:
    get:
      tags:
        - Customers
      summary: Customer Query
      operationId: Customers_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Status
          type: string
          enum:
            - Active
            - Inactive
            - StopOrder
            - ignore
        - in: query
          name: Search
          type: string
        - in: query
          name: Name
          type: string
        - in: query
          name: SalesmanId
          type: string
        - in: query
          name: Id
          type: string
          items:
            type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
            items:
              $ref: '#/definitions/CustomerDTO'
        '500':
          description: Server Error
    post:
      tags:
        - Customers
      summary: Customer Create
      operationId: Customers_POST_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/CustomerDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CustomerDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Customers/import:
    post:
      tags:
        - Customers
      summary: Customer Import
      operationId: Customers_POST_Import
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            type: string
            items:
              $ref: '#/definitions/CustomerImportDTO'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/InventoryLevels/availability:
    post:
      tags:
        - InventoryLevels
      summary: Inventory Check Stock Availability
      operationId: InventoryLevels_POST_GetAvailability
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/CheckInventoryAvailabilityLineDTO'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryAvailabilityDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/InventoryLevels/reserve:
    post:
      tags:
        - InventoryLevels
      summary: Inventory Reserve Stock Availability
      operationId: InventoryLevels_POST_ReserveStock
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/CheckInventoryAvailabilityDTO'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryAvailabilityDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/InventoryLevels/reserve/{token}:
    delete:
      tags:
        - InventoryLevels
      summary: Inventory Unreserve Stock Availability
      operationId: InventoryLevels_DELETE_UnReserveStock
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: token
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryAvailabilityDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/InventoryLevels/{id}:
    get:
      tags:
        - InventoryLevels
      summary: Inventory Level Get By Id
      operationId: InventoryLevels_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: inventory level id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryLevelDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - InventoryLevels
      summary: Inventory Level Delete
      operationId: InventoryLevels_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: customer id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - InventoryLevels
      summary: Inventory Level Update
      operationId: InventoryLevels_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: inventory level id
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/InventoryLevelDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/InventoryLevels:
    get:
      tags:
        - InventoryLevels
      summary: Inventory Level Query
      operationId: InventoryLevels_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Location
          type: string
        - in: query
          name: VariantIds
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/InventoryLevelDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    post:
      tags:
        - InventoryLevels
      summary: Inventory Level Create
      operationId: InventoryLevels_POST_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/InventoryLevelDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/InventoryLevelDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/InventoryLevels/variant/{variantId}:
    get:
      tags:
        - InventoryLevels
      summary: Inventory Level Get By Variant Id
      operationId: InventoryLevels_GET_GetByVariantId
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: variantId
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/InventoryLevelDTO'
        '500':
          description: Server Error
  /api/InventoryLevels/import:
    post:
      tags:
        - InventoryLevels
      summary: Inventory Level Import
      operationId: InventoryLevels_POST_Import
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/InventoryLevelDTO'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/locations/{locationId}:
    get:
      tags:
        - Location
      summary: Location Get By Id
      operationId: Location_GET_GetLocation
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: locationId
          description: location id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Location
      summary: Location Delete
      operationId: Location_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: locationId
          description: ''
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Location
      summary: Location Update
      operationId: Location_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: locationId
          description: location id
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/LocationDTO'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/locations:
    get:
      tags:
        - Location
      summary: Location Get All
      operationId: Location_GET_GetLocations
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/LocationDTO'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    post:
      tags:
        - Location
      summary: Location Create
      operationId: Location_POST_Create
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/LocationDTO'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/LocationDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Order/{id}:
    get:
      tags:
        - Order
      summary: Order Get By Id
      operationId: Order_GET_GetById
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: order id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    delete:
      tags:
        - Order
      summary: Order Delete
      operationId: Order_DELETE_Delete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
    put:
      tags:
        - Order
      summary: Order Update
      operationId: Order_PUT_Update
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: id
          description: ''
          required: true
          type: string
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/OrderDTO'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Order:
    get:
      tags:
        - Order
      summary: Order Query
      operationId: Order_GET_GetAll
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: query
          name: Search
          type: string
        - in: query
          name: Code
          type: string
        - in: query
          name: CustomerId
          type: string
        - in: query
          name: OrderStatus
          type: string
        - in: query
          name: Status
          type: string
        - in: query
          name: Tag
          type: string
        - in: query
          name: Favorite
          type: boolean
        - in: query
          name: CustomerCode
          type: string
        - in: query
          name: CustomerTin
          type: string
        - in: query
          name: InsertDate
          type: string
        - in: query
          name: Page
          type: integer
          format: int32
        - in: query
          name: PageSize
          type: integer
          format: int32
        - in: query
          name: Sort
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderDTO'
        '500':
          description: Server Error
    post:
      tags:
        - Order
      summary: Order Create
      operationId: Order_POST_CreateOrder
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            $ref: '#/definitions/OrderDTO'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /api/Order/import:
    post:
      tags:
        - Order
      summary: Order Import
      operationId: Order_POST_Import
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderDTO'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
definitions:
  AttributeDTO:
    required:
      - code
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      name:
        title: Name
        type: string
      code:
        title: Code
        minLength: 1
        type: string
      description:
        title: Description
        type: string
      usedAsFilter:
        title: UsedAsFilter
        type: boolean
      displayOnProduct:
        title: DisplayOnProduct
        type: boolean
      displayOnList:
        title: DisplayOnList
        type: boolean
      displayOnCompare:
        title: DisplayOnCompare
        type: boolean
      type:
        title: Type
        enum:
          - Text
          - Items
          - Color
          - Size
        type: string
      slug:
        title: Slug
        type: string
      position:
        format: int32
        title: Position
        type: integer
      status:
        title: Status
        enum:
          - Draft
          - Active
          - Archived
          - ignore
        type: string
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      items:
        title: Items
        type: array
        items:
          $ref: '#/definitions/AttributeItemDTO'
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/AttributeTranslationDTO'
    additionalProperties: false
  AttributeItemDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      code:
        title: Code
        type: string
      colorCode:
        title: ColorCode
        type: string
      value:
        title: Value
        type: string
      position:
        format: int32
        title: Position
        type: integer
      slug:
        title: Slug
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/AttributeItemTranslationDTO'
    additionalProperties: false
  AttributeItemTranslationDTO:
    type: object
    properties:
      value:
        title: Value
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  AttributeSetDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      title:
        title: Title
        type: string
      description:
        title: Description
        type: string
      groups:
        title: Groups
        type: array
        items:
          $ref: '#/definitions/AttributeSetGroupDTO'
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
    additionalProperties: false
  AttributeSetExtendedDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      title:
        title: Title
        type: string
      description:
        title: Description
        type: string
      groups:
        title: Groups
        type: array
        items:
          $ref: '#/definitions/AttributeSetGroupExtendedDTO'
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
    additionalProperties: false
  AttributeSetGroupDTO:
    type: object
    properties:
      title:
        title: Title
        type: string
      id:
        title: Id
        type: string
      position:
        format: int32
        title: Position
        type: integer
      items:
        title: Items
        type: array
        items:
          $ref: '#/definitions/AttributeSetItemDTO'
    additionalProperties: false
  AttributeSetGroupExtendedDTO:
    type: object
    properties:
      title:
        title: Title
        type: string
      id:
        title: Id
        type: string
      position:
        format: int32
        title: Position
        type: integer
      items:
        title: Items
        type: array
        items:
          $ref: '#/definitions/AttributeSetItemExtendedDTO'
    additionalProperties: false
  AttributeSetItemDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      position:
        format: int32
        title: Position
        type: integer
    additionalProperties: false
  AttributeSetItemExtendedDTO:
    type: object
    properties:
      attributeId:
        title: AttributeId
        type: string
      name:
        title: Name
        type: string
      value:
        title: Value
        type: string
      code:
        title: Code
        type: string
      description:
        title: Description
        type: string
      usedAsFilter:
        title: UsedAsFilter
        type: boolean
      displayOnProduct:
        title: DisplayOnProduct
        type: boolean
      displayOnList:
        title: DisplayOnList
        type: boolean
      displayOnCompare:
        title: DisplayOnCompare
        type: boolean
      slug:
        title: Slug
        type: string
      position:
        format: int32
        title: Position
        type: integer
    additionalProperties: false
  AttributeTranslationDTO:
    type: object
    properties:
      name:
        title: Name
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      description:
        title: Description
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  BrandDTO:
    required:
      - code
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      code:
        title: Code
        minLength: 1
        type: string
      name:
        title: Name
        minLength: 1
        type: string
      alias:
        title: Alias
        type: string
      description:
        title: Description
        type: string
      metaTitle:
        title: MetaTitle
        type: string
      metaDescription:
        title: MetaDescription
        type: string
      status:
        title: Status
        enum:
          - Draft
          - Active
          - Archived
          - ignore
        type: string
      metaKeywords:
        title: MetaKeywords
        type: array
        items:
          type: string
      mediaItem:
        title: MediaItem
        allOf:
          - $ref: '#/definitions/MediaItemDTO'
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/BrandTranslationDTO'
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      seoTitle:
        title: SeoTitle
        type: string
      seoDescription:
        title: SeoDescription
        type: string
    additionalProperties: false
  BrandTranslationDTO:
    type: object
    properties:
      name:
        title: Name
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      description:
        title: Description
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      metaTitle:
        title: MetaTitle
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      metaDescription:
        title: MetaDescription
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      seoTitle:
        title: SeoTitle
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      seoDescription:
        title: SeoDescription
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  CatalogFilterTypeRuleConditionDTO:
    type: object
    properties:
      filter:
        title: Filter
        enum:
          - Tag
          - SourceTag
          - BrandId
          - Price
          - MaxPrice
          - MinPrice
          - Status
          - PriceRange
          - Rule
          - Ids
          - PathCategory
          - Search
          - Attribute
          - CustomDim1
          - CustomDim2
          - CustomDim3
          - CategoryId
          - AdditionalCategoryId
          - StockAvailabilityId
          - AttributeSetId
          - PriceCategoryId
          - HasMedia
          - MasterId
          - Size1
          - Size2
          - Size3
          - Availability
          - InsertDate
          - Size4
          - Size5
          - Size6
          - Date1
          - Date2
          - Date3
          - InsertDateRange
          - Date1DateRange
          - Date2DateRange
          - Date3DateRange
        type: string
      not:
        title: Not
        type: boolean
      value:
        title: Value
      operator:
        title: Operator
        enum:
          - And
          - Or
          - Xor
          - ignore
        type: string
      conditions:
        title: Conditions
        type: array
        items:
          $ref: '#/definitions/CatalogFilterTypeRuleConditionDTO'
      operation:
        title: Operation
        enum:
          - eq
          - neq
          - gte
          - lte
          - gt
          - lt
          - OneOf
          - NotOneOf
          - Contains
          - NotContains
          - StartsWith
          - EndsWith
        type: string
    additionalProperties: false
  CategoryDTO:
    required:
      - code
      - title
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      title:
        title: Title
        minLength: 1
        type: string
      code:
        title: Code
        minLength: 1
        type: string
      alias:
        title: Alias
        type: string
      description:
        title: Description
        type: string
      position:
        format: int32
        title: Position
        type: integer
      displayInMenu:
        title: DisplayInMenu
        type: boolean
      displayAsList:
        title: DisplayAsList
        type: boolean
      parentId:
        title: ParentId
        type: string
      path:
        title: Path
        type: string
      mediaItem:
        title: MediaItem
        allOf:
          - $ref: '#/definitions/MediaItemDTO'
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/CategoryTranslationDTO'
      seoTitle:
        title: SeoTitle
        type: string
      seoDescription:
        title: SeoDescription
        type: string
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      metaTitle:
        title: MetaTitle
        type: string
      metaDescription:
        title: MetaDescription
        type: string
      metaKeywords:
        title: MetaKeywords
        type: array
        items:
          type: string
      treeIds:
        title: TreeIds
        type: array
        items:
          type: string
      link:
        title: Link
        type: string
      status:
        title: Status
        enum:
          - Draft
          - Active
          - Archived
          - ignore
        type: string
    additionalProperties: false
  CategoryTranslationDTO:
    type: object
    properties:
      title:
        title: Title
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      description:
        title: Description
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      metaTitle:
        title: MetaTitle
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      metaDescription:
        title: MetaDescription
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      seoTitle:
        title: SeoTitle
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      seoDescription:
        title: SeoDescription
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      path:
        title: Path
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  ChangeMediaItemDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      link:
        title: Link
        type: string
      position:
        format: int32
        title: Position
        type: integer
      alt:
        title: Alt
        type: string
      mediaType:
        title: MediaType
        enum:
          - Image
          - Video
          - Attachment
          - ignore
        type: string
      galleryId:
        title: GalleryId
        type: string
    additionalProperties: false
  ChangeProductAttributeDTO:
    type: object
    properties:
      attributeId:
        title: AttributeId
        type: string
      attributeItemId:
        title: AttributeItemId
        type: string
      attributeItemValue:
        title: AttributeItemValue
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/ProductAttributeTranslationDTO'
    additionalProperties: false
  ChangeProductDTO:
    type: object
    properties:
      mediaItems:
        title: MediaItems
        type: array
        items:
          $ref: '#/definitions/ChangeMediaItemDTO'
      attributes:
        title: Attributes
        type: array
        items:
          $ref: '#/definitions/ChangeProductAttributeDTO'
      productVariants:
        title: ProductVariants
        type: array
        items:
          $ref: '#/definitions/ChangeProductVariantDTO'
      dimension1:
        title: Dimension1
        allOf:
          - $ref: '#/definitions/DimensionDTO'
      dimension2:
        title: Dimension2
        allOf:
          - $ref: '#/definitions/DimensionDTO'
      dimension3:
        title: Dimension3
        allOf:
          - $ref: '#/definitions/DimensionDTO'
      vatCode:
        title: VatCode
        type: string
      reducedVatCode:
        title: ReducedVatCode
        type: string
      vatRate:
        format: double
        title: VatRate
        type: number
      reducedVatRate:
        format: double
        title: ReducedVatRate
        type: number
      title:
        title: Title
        type: string
      subTitle:
        title: SubTitle
        type: string
      description:
        title: Description
        type: string
      alias:
        title: Alias
        type: string
      status:
        title: Status
        enum:
          - Draft
          - Active
          - Archived
          - ignore
        type: string
      brandId:
        title: BrandId
        type: string
      seoTitle:
        title: SeoTitle
        type: string
      seoDescription:
        title: SeoDescription
        type: string
      categoryId:
        title: CategoryId
        type: string
      priceCategoryId:
        title: PriceCategoryId
        type: string
      additionalCategoryIds:
        title: AdditionalCategoryIds
        type: array
        items:
          type: string
      tags:
        title: Tags
        type: array
        items:
          type: string
      sourceTags:
        title: SourceTags
        type: array
        items:
          type: string
      additionalSearchTags:
        title: AdditionalSearchTags
        type: array
        items:
          type: string
      pathCategories:
        title: PathCategories
        type: array
        items:
          type: string
      availability:
        title: Availability
        enum:
          - Unavailable
          - Available
          - ignore
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/ProductTranslationDTO'
      stopOrder:
        title: StopOrder
        type: boolean
      metaTitle:
        title: MetaTitle
        type: string
      metaDescription:
        title: MetaDescription
        type: string
      metaKeywords:
        title: MetaKeywords
        type: array
        items:
          type: string
      stockAvailabilityModelId:
        title: StockAvailabilityModelId
        type: string
      customFields:
        title: CustomFields
        type: array
        items:
          $ref: '#/definitions/ProductCustomFieldDTO'
      attributeSetId:
        title: AttributeSetId
        type: string
      sortDate:
        format: date-time
        title: SortDate
        type: string
      assortments:
        title: Assortments
        type: array
        items:
          type: string
      masterId:
        title: MasterId
        type: string
      size1:
        format: double
        title: Size1
        type: number
      size2:
        format: double
        title: Size2
        type: number
      size3:
        format: double
        title: Size3
        type: number
      size4:
        format: double
        title: Size4
        type: number
      size5:
        format: double
        title: Size5
        type: number
      size6:
        format: double
        title: Size6
        type: number
      priority:
        format: int32
        title: Priority
        type: integer
      date1:
        format: date-time
        title: Date1
        type: string
      date2:
        format: date-time
        title: Date2
        type: string
      date3:
        format: date-time
        title: Date3
        type: string
    additionalProperties: false
  ChangeProductVariantDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      title:
        title: Title
        maxLength: 150
        minLength: 0
        type: string
      gtin:
        title: Gtin
        maxLength: 50
        minLength: 0
        type: string
      mpn:
        title: Mpn
        maxLength: 70
        minLength: 0
        type: string
      unitPrice:
        format: double
        title: UnitPrice
        type: number
      price:
        format: double
        title: Price
        type: number
      msrp:
        format: double
        title: Msrp
        type: number
      initialPrice:
        format: double
        title: InitialPrice
        type: number
      dimension1ItemId:
        title: Dimension1ItemId
        type: string
      dimension2ItemId:
        title: Dimension2ItemId
        type: string
      dimension3ItemId:
        title: Dimension3ItemId
        type: string
      shippingWeight:
        format: double
        title: ShippingWeight
        type: number
      shippingLength:
        format: double
        title: ShippingLength
        type: number
      shippingWidth:
        format: double
        title: ShippingWidth
        type: number
      shippingHeight:
        format: double
        title: ShippingHeight
        type: number
      sellOutOfStock:
        title: SellOutOfStock
        type: boolean
      minimunStockLevel:
        format: double
        title: MinimunStockLevel
        type: number
      unitId:
        title: UnitId
        type: string
      salesUnitId:
        title: SalesUnitId
        type: string
      salesUnitCondition:
        format: double
        title: SalesUnitCondition
        type: number
      requiresShipping:
        title: RequiresShipping
        type: boolean
      sku:
        title: Sku
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/ProductVariantTranslationDTO'
      minOrderQuantity:
        format: double
        title: MinOrderQuantity
        type: number
      orderQuantityStep:
        format: double
        title: OrderQuantityStep
        type: number
      mediaItem:
        title: MediaItem
        allOf:
          - $ref: '#/definitions/ChangeMediaItemDTO'
    additionalProperties: false
  CollectionDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      title:
        title: Title
        maxLength: 255
        minLength: 0
        type: string
      description:
        title: Description
        type: string
      descriptionHtml:
        title: DescriptionHtml
        type: string
      link:
        title: Link
        maxLength: 150
        minLength: 0
        type: string
      alias:
        title: Alias
        type: string
      mediaItem:
        title: MediaItem
        allOf:
          - $ref: '#/definitions/MediaItemDTO'
      status:
        title: Status
        enum:
          - Draft
          - Active
          - Archived
          - ignore
        type: string
      mode:
        title: Mode
        enum:
          - Automatic
          - Manual
          - ignore
        type: string
      publishedAt:
        format: date-time
        title: PublishedAt
        type: string
      sortOrder:
        title: SortOrder
        type: string
      productCount:
        format: int32
        title: ProductCount
        type: integer
      productIds:
        title: ProductIds
        type: array
        items:
          type: string
      products:
        title: Products
        type: array
        items:
          $ref: '#/definitions/ProductDTO'
      subCollections:
        title: SubCollections
        type: array
        items:
          $ref: '#/definitions/CollectionDTO'
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      tags:
        title: Tags
        type: array
        items:
          type: string
      seoTitle:
        title: SeoTitle
        type: string
      seoDescription:
        title: SeoDescription
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/CollectionTranslationDTO'
      metaTitle:
        title: MetaTitle
        type: string
      metaDescription:
        title: MetaDescription
        type: string
      metaKeywords:
        title: MetaKeywords
        type: array
        items:
          type: string
    additionalProperties: false
  CollectionTranslationDTO:
    type: object
    properties:
      title:
        title: Title
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      description:
        title: Description
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      seoDescription:
        title: SeoDescription
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      seoTitle:
        title: SeoTitle
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      metaTitle:
        title: MetaTitle
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      metaDescription:
        title: MetaDescription
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  CreateAttributeSetDTO:
    type: object
    properties:
      title:
        title: Title
        type: string
      description:
        title: Description
        type: string
      groups:
        title: Groups
        type: array
        items:
          $ref: '#/definitions/CreateAttributeSetGroupDTO'
    additionalProperties: false
  CreateAttributeSetGroupDTO:
    type: object
    properties:
      title:
        title: Title
        type: string
      id:
        title: Id
        type: string
      position:
        format: int32
        title: Position
        type: integer
      items:
        title: Items
        type: array
        items:
          $ref: '#/definitions/AttributeSetItemDTO'
    additionalProperties: false
  CreateStockAvailabilityDTO:
    type: object
    properties:
      code:
        title: Code
        type: string
      title:
        title: Title
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/StockAvailabilityTranslationDTO'
      lines:
        title: Lines
        type: array
        items:
          $ref: '#/definitions/StockAvailabilityLineDTO'
    additionalProperties: false
  DimensionDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      attributeId:
        title: AttributeId
        type: string
      name:
        title: Name
        type: string
      items:
        title: Items
        type: array
        items:
          $ref: '#/definitions/DimensionItemDTO'
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/DimensionTranslationDTO'
    additionalProperties: false
  DimensionExtendedDTO:
    type: object
    properties:
      type:
        title: Type
        enum:
          - Text
          - Items
          - Color
          - Size
        type: string
      usedAsFilter:
        title: UsedAsFilter
        type: boolean
      displayOnProduct:
        title: DisplayOnProduct
        type: boolean
      displayOnList:
        title: DisplayOnList
        type: boolean
      displayOnCompare:
        title: DisplayOnCompare
        type: boolean
      items:
        title: Items
        type: array
        items:
          $ref: '#/definitions/DimensionItemExtendedDTO'
      id:
        title: Id
        type: string
      attributeId:
        title: AttributeId
        type: string
      name:
        title: Name
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/DimensionTranslationDTO'
    additionalProperties: false
  DimensionItemDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      value:
        title: Value
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/DimensionItemTranslationDTO'
    additionalProperties: false
  DimensionItemExtendedDTO:
    type: object
    properties:
      textColor:
        title: TextColor
        type: string
      id:
        title: Id
        type: string
      value:
        title: Value
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/DimensionItemTranslationDTO'
    additionalProperties: false
  DimensionItemTranslationDTO:
    type: object
    properties:
      value:
        title: Value
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  DimensionTranslationDTO:
    type: object
    properties:
      name:
        title: Name
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  DocumentLineTranslationDTO:
    type: object
    properties:
      title:
        title: Title
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      description:
        title: Description
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  DocumentationDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      lines:
        title: Lines
        type: array
        items:
          $ref: '#/definitions/DocumentationLineDTO'
    additionalProperties: false
  DocumentationLineDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      title:
        title: Title
        type: string
      description:
        title: Description
        type: string
      position:
        format: int32
        title: Position
        type: integer
      mediaItem:
        title: MediaItem
        allOf:
          - $ref: '#/definitions/MediaItemDTO'
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/DocumentLineTranslationDTO'
    additionalProperties: false
  ExpectedDTO:
    type: object
    properties:
      deliveryDate:
        format: date-time
        title: DeliveryDate
        type: string
      quantity:
        format: double
        title: Quantity
        type: number
      totalQuantity:
        format: double
        title: TotalQuantity
        type: number
    additionalProperties: false
  ExtendedProductDTO:
    type: object
    properties:
      productVariants:
        title: ProductVariants
        type: array
        items:
          $ref: '#/definitions/ProductVariantExtendedDTO'
      attributes:
        title: Attributes
        type: array
        items:
          $ref: '#/definitions/ProductAttributeExtendedDTO'
      attributeSet:
        title: AttributeSet
        allOf:
          - $ref: '#/definitions/AttributeSetExtendedDTO'
      icoTags:
        title: IcoTags
        type: array
        items:
          $ref: '#/definitions/ProductIcoTagExtendedDTO'
      extraFields:
        title: ExtraFields
      dimension1:
        title: Dimension1
        allOf:
          - $ref: '#/definitions/DimensionExtendedDTO'
      dimension2:
        title: Dimension2
        allOf:
          - $ref: '#/definitions/DimensionExtendedDTO'
      dimension3:
        title: Dimension3
        allOf:
          - $ref: '#/definitions/DimensionExtendedDTO'
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      descriptionPlain:
        title: DescriptionPlain
        type: string
      link:
        title: Link
        type: string
      mediaItems:
        title: MediaItems
        type: array
        items:
          $ref: '#/definitions/MediaItemDTO'
      maxPrice:
        format: double
        title: MaxPrice
        type: number
      minPrice:
        format: double
        title: MinPrice
        type: number
      pathCategories:
        title: PathCategories
        type: array
        items:
          type: string
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      variantCount:
        format: int32
        title: VariantCount
        type: integer
      additionalFeatures:
        title: AdditionalFeatures
        allOf:
          - $ref: '#/definitions/ProductAdditionalFeaturesDTO'
      searchAttributes:
        title: SearchAttributes
        type: array
        items:
          type: string
      vatCode:
        title: VatCode
        type: string
      reducedVatCode:
        title: ReducedVatCode
        type: string
      vatRate:
        format: double
        title: VatRate
        type: number
      reducedVatRate:
        format: double
        title: ReducedVatRate
        type: number
      title:
        title: Title
        type: string
      subTitle:
        title: SubTitle
        type: string
      description:
        title: Description
        type: string
      alias:
        title: Alias
        type: string
      status:
        title: Status
        enum:
          - Draft
          - Active
          - Archived
          - ignore
        type: string
      brandId:
        title: BrandId
        type: string
      seoTitle:
        title: SeoTitle
        type: string
      seoDescription:
        title: SeoDescription
        type: string
      categoryId:
        title: CategoryId
        type: string
      priceCategoryId:
        title: PriceCategoryId
        type: string
      additionalCategoryIds:
        title: AdditionalCategoryIds
        type: array
        items:
          type: string
      tags:
        title: Tags
        type: array
        items:
          type: string
      sourceTags:
        title: SourceTags
        type: array
        items:
          type: string
      additionalSearchTags:
        title: AdditionalSearchTags
        type: array
        items:
          type: string
      availability:
        title: Availability
        enum:
          - Unavailable
          - Available
          - ignore
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/ProductTranslationDTO'
      stopOrder:
        title: StopOrder
        type: boolean
      metaTitle:
        title: MetaTitle
        type: string
      metaDescription:
        title: MetaDescription
        type: string
      metaKeywords:
        title: MetaKeywords
        type: array
        items:
          type: string
      stockAvailabilityModelId:
        title: StockAvailabilityModelId
        type: string
      customFields:
        title: CustomFields
        type: array
        items:
          $ref: '#/definitions/ProductCustomFieldDTO'
      attributeSetId:
        title: AttributeSetId
        type: string
      sortDate:
        format: date-time
        title: SortDate
        type: string
      assortments:
        title: Assortments
        type: array
        items:
          type: string
      masterId:
        title: MasterId
        type: string
      size1:
        format: double
        title: Size1
        type: number
      size2:
        format: double
        title: Size2
        type: number
      size3:
        format: double
        title: Size3
        type: number
      size4:
        format: double
        title: Size4
        type: number
      size5:
        format: double
        title: Size5
        type: number
      size6:
        format: double
        title: Size6
        type: number
      priority:
        format: int32
        title: Priority
        type: integer
      date1:
        format: date-time
        title: Date1
        type: string
      date2:
        format: date-time
        title: Date2
        type: string
      date3:
        format: date-time
        title: Date3
        type: string
    additionalProperties: false
  IcoTagDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      name:
        title: Name
        type: string
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      icon:
        title: Icon
        type: string
      backgroundColor:
        title: BackgroundColor
        type: string
      textColor:
        title: TextColor
        type: string
      productIds:
        title: ProductIds
        type: array
        items:
          type: string
      ruleEnabled:
        title: RuleEnabled
        type: boolean
      dateFrom:
        format: date-time
        title: DateFrom
        type: string
      dateTo:
        format: date-time
        title: DateTo
        type: string
      mode:
        title: Mode
        enum:
          - Automatic
          - Manual
          - ignore
        type: string
      status:
        title: Status
        enum:
          - Draft
          - Active
          - Archived
          - ignore
        type: string
      rule:
        title: Rule
        allOf:
          - $ref: '#/definitions/CatalogFilterTypeRuleConditionDTO'
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/IcoTagTranslationDTO'
    additionalProperties: false
  IcoTagTranslationDTO:
    type: object
    properties:
      name:
        title: Name
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  ImportProductDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      categoryCode:
        title: CategoryCode
        type: string
      mediaItems:
        title: MediaItems
        type: array
        items:
          $ref: '#/definitions/ChangeMediaItemDTO'
      attributes:
        title: Attributes
        type: array
        items:
          $ref: '#/definitions/ChangeProductAttributeDTO'
      productVariants:
        title: ProductVariants
        type: array
        items:
          $ref: '#/definitions/ChangeProductVariantDTO'
      dimension1:
        title: Dimension1
        allOf:
          - $ref: '#/definitions/DimensionDTO'
      dimension2:
        title: Dimension2
        allOf:
          - $ref: '#/definitions/DimensionDTO'
      dimension3:
        title: Dimension3
        allOf:
          - $ref: '#/definitions/DimensionDTO'
      vatCode:
        title: VatCode
        type: string
      reducedVatCode:
        title: ReducedVatCode
        type: string
      vatRate:
        format: double
        title: VatRate
        type: number
      reducedVatRate:
        format: double
        title: ReducedVatRate
        type: number
      title:
        title: Title
        type: string
      subTitle:
        title: SubTitle
        type: string
      description:
        title: Description
        type: string
      alias:
        title: Alias
        type: string
      status:
        title: Status
        enum:
          - Draft
          - Active
          - Archived
          - ignore
        type: string
      brandId:
        title: BrandId
        type: string
      seoTitle:
        title: SeoTitle
        type: string
      seoDescription:
        title: SeoDescription
        type: string
      categoryId:
        title: CategoryId
        type: string
      priceCategoryId:
        title: PriceCategoryId
        type: string
      additionalCategoryIds:
        title: AdditionalCategoryIds
        type: array
        items:
          type: string
      tags:
        title: Tags
        type: array
        items:
          type: string
      sourceTags:
        title: SourceTags
        type: array
        items:
          type: string
      additionalSearchTags:
        title: AdditionalSearchTags
        type: array
        items:
          type: string
      pathCategories:
        title: PathCategories
        type: array
        items:
          type: string
      availability:
        title: Availability
        enum:
          - Unavailable
          - Available
          - ignore
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/ProductTranslationDTO'
      stopOrder:
        title: StopOrder
        type: boolean
      metaTitle:
        title: MetaTitle
        type: string
      metaDescription:
        title: MetaDescription
        type: string
      metaKeywords:
        title: MetaKeywords
        type: array
        items:
          type: string
      stockAvailabilityModelId:
        title: StockAvailabilityModelId
        type: string
      customFields:
        title: CustomFields
        type: array
        items:
          $ref: '#/definitions/ProductCustomFieldDTO'
      attributeSetId:
        title: AttributeSetId
        type: string
      sortDate:
        format: date-time
        title: SortDate
        type: string
      assortments:
        title: Assortments
        type: array
        items:
          type: string
      masterId:
        title: MasterId
        type: string
      size1:
        format: double
        title: Size1
        type: number
      size2:
        format: double
        title: Size2
        type: number
      size3:
        format: double
        title: Size3
        type: number
      size4:
        format: double
        title: Size4
        type: number
      size5:
        format: double
        title: Size5
        type: number
      size6:
        format: double
        title: Size6
        type: number
      priority:
        format: int32
        title: Priority
        type: integer
      date1:
        format: date-time
        title: Date1
        type: string
      date2:
        format: date-time
        title: Date2
        type: string
      date3:
        format: date-time
        title: Date3
        type: string
    additionalProperties: false
  LineTranslationDTO:
    type: object
    properties:
      message:
        title: Message
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  MediaItemDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      galleryId:
        title: GalleryId
        type: string
      companyId:
        title: CompanyId
        type: string
        readOnly: true
      link:
        title: Link
        type: string
      position:
        format: int32
        title: Position
        type: integer
      alt:
        title: Alt
        type: string
      mediaType:
        title: MediaType
        enum:
          - Image
          - Video
          - Attachment
          - ignore
        type: string
      width:
        format: int32
        title: Width
        type: integer
      height:
        format: int32
        title: Height
        type: integer
    additionalProperties: false
  MultiLangDTO:
    type: object
    properties:
      el:
        title: EL
        type: string
      en:
        title: EN
        type: string
      ro:
        title: RO
        type: string
      de:
        title: DE
        type: string
      fr:
        title: FR
        type: string
      it:
        title: IT
        type: string
      bg:
        title: BG
        type: string
      sq:
        title: SQ
        type: string
    additionalProperties: false
  PrivacyGroupDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      title:
        title: Title
        type: string
      status:
        title: Status
        enum:
          - Draft
          - Active
          - Archived
          - ignore
        type: string
      mode:
        title: Mode
        enum:
          - Automatic
          - Manual
          - ignore
        type: string
      productIds:
        title: ProductIds
        type: array
        items:
          type: string
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      rule:
        title: Rule
        allOf:
          - $ref: '#/definitions/CatalogFilterTypeRuleConditionDTO'
      customerGroupIds:
        title: CustomerGroupIds
        type: array
        items:
          type: string
      customerIds:
        title: CustomerIds
        type: array
        items:
          type: string
    additionalProperties: false
  ProblemDetails:
    type: object
    properties:
      type:
        title: Type
        type: string
      title:
        title: Title
        type: string
      status:
        format: int32
        title: Status
        type: integer
      detail:
        title: Detail
        type: string
      instance:
        title: Instance
        type: string
    additionalProperties: {}
  ProductAdditionalFeaturesDTO:
    type: object
    properties:
      icoTags:
        title: IcoTags
        type: array
        items:
          $ref: '#/definitions/ProductIcoTagExtendedDTO'
    additionalProperties: false
  ProductAttributeDTO:
    type: object
    properties:
      attributeId:
        title: AttributeId
        type: string
      attributeItemId:
        title: AttributeItemId
        type: string
      attributeItemValue:
        title: AttributeItemValue
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/ProductAttributeTranslationDTO'
    additionalProperties: false
  ProductAttributeExtendedDTO:
    type: object
    properties:
      name:
        title: Name
        type: string
      slug:
        title: Slug
        type: string
      code:
        title: Code
        type: string
      usedAsFilter:
        title: UsedAsFilter
        type: boolean
      displayOnProduct:
        title: DisplayOnProduct
        type: boolean
      displayOnList:
        title: DisplayOnList
        type: boolean
      displayOnCompare:
        title: DisplayOnCompare
        type: boolean
      attributeId:
        title: AttributeId
        type: string
      attributeItemId:
        title: AttributeItemId
        type: string
      attributeItemValue:
        title: AttributeItemValue
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/ProductAttributeTranslationDTO'
    additionalProperties: false
  ProductAttributeTranslationDTO:
    type: object
    properties:
      attributeItemValue:
        title: AttributeItemValue
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  ProductCustomFieldDTO:
    type: object
    properties:
      name:
        title: Name
        type: string
      value:
        title: Value
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/ProductCustomFieldTranslationDTO'
    additionalProperties: false
  ProductCustomFieldTranslationDTO:
    type: object
    properties:
      value:
        title: Value
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  ProductDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      descriptionPlain:
        title: DescriptionPlain
        type: string
      link:
        title: Link
        type: string
      mediaItems:
        title: MediaItems
        type: array
        items:
          $ref: '#/definitions/MediaItemDTO'
      productVariants:
        title: ProductVariants
        type: array
        items:
          $ref: '#/definitions/ProductVariantDTO'
      attributes:
        title: Attributes
        type: array
        items:
          $ref: '#/definitions/ProductAttributeDTO'
      maxPrice:
        format: double
        title: MaxPrice
        type: number
      minPrice:
        format: double
        title: MinPrice
        type: number
      pathCategories:
        title: PathCategories
        type: array
        items:
          type: string
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      variantCount:
        format: int32
        title: VariantCount
        type: integer
      additionalFeatures:
        title: AdditionalFeatures
        allOf:
          - $ref: '#/definitions/ProductAdditionalFeaturesDTO'
      dimension1:
        title: Dimension1
        allOf:
          - $ref: '#/definitions/DimensionDTO'
      dimension2:
        title: Dimension2
        allOf:
          - $ref: '#/definitions/DimensionDTO'
      dimension3:
        title: Dimension3
        allOf:
          - $ref: '#/definitions/DimensionDTO'
      searchAttributes:
        title: SearchAttributes
        type: array
        items:
          type: string
      vatCode:
        title: VatCode
        type: string
      reducedVatCode:
        title: ReducedVatCode
        type: string
      vatRate:
        format: double
        title: VatRate
        type: number
      reducedVatRate:
        format: double
        title: ReducedVatRate
        type: number
      title:
        title: Title
        type: string
      subTitle:
        title: SubTitle
        type: string
      description:
        title: Description
        type: string
      alias:
        title: Alias
        type: string
      status:
        title: Status
        enum:
          - Draft
          - Active
          - Archived
          - ignore
        type: string
      brandId:
        title: BrandId
        type: string
      seoTitle:
        title: SeoTitle
        type: string
      seoDescription:
        title: SeoDescription
        type: string
      categoryId:
        title: CategoryId
        type: string
      priceCategoryId:
        title: PriceCategoryId
        type: string
      additionalCategoryIds:
        title: AdditionalCategoryIds
        type: array
        items:
          type: string
      tags:
        title: Tags
        type: array
        items:
          type: string
      sourceTags:
        title: SourceTags
        type: array
        items:
          type: string
      additionalSearchTags:
        title: AdditionalSearchTags
        type: array
        items:
          type: string
      availability:
        title: Availability
        enum:
          - Unavailable
          - Available
          - ignore
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/ProductTranslationDTO'
      stopOrder:
        title: StopOrder
        type: boolean
      metaTitle:
        title: MetaTitle
        type: string
      metaDescription:
        title: MetaDescription
        type: string
      metaKeywords:
        title: MetaKeywords
        type: array
        items:
          type: string
      stockAvailabilityModelId:
        title: StockAvailabilityModelId
        type: string
      customFields:
        title: CustomFields
        type: array
        items:
          $ref: '#/definitions/ProductCustomFieldDTO'
      attributeSetId:
        title: AttributeSetId
        type: string
      sortDate:
        format: date-time
        title: SortDate
        type: string
      assortments:
        title: Assortments
        type: array
        items:
          type: string
      masterId:
        title: MasterId
        type: string
      size1:
        format: double
        title: Size1
        type: number
      size2:
        format: double
        title: Size2
        type: number
      size3:
        format: double
        title: Size3
        type: number
      size4:
        format: double
        title: Size4
        type: number
      size5:
        format: double
        title: Size5
        type: number
      size6:
        format: double
        title: Size6
        type: number
      priority:
        format: int32
        title: Priority
        type: integer
      date1:
        format: date-time
        title: Date1
        type: string
      date2:
        format: date-time
        title: Date2
        type: string
      date3:
        format: date-time
        title: Date3
        type: string
    additionalProperties: false
  ProductIcoTagExtendedDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      name:
        title: Name
        type: string
      icon:
        title: Icon
        type: string
      backgroundColor:
        title: BackgroundColor
        type: string
      textColor:
        title: TextColor
        type: string
    additionalProperties: false
  ProductStockAvailabilityExtendedDTO:
    type: object
    properties:
      message:
        title: Message
        type: string
      image:
        title: Image
        allOf:
          - $ref: '#/definitions/MediaItemDTO'
      color:
        title: Color
        type: string
    additionalProperties: false
  ProductTranslationDTO:
    type: object
    properties:
      title:
        title: Title
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      subTitle:
        title: SubTitle
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      description:
        title: Description
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      metaDescription:
        title: MetaDescription
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      metaTitle:
        title: MetaTitle
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      seoDescription:
        title: SeoDescription
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
      seoTitle:
        title: SeoTitle
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  ProductVariantAdditionalFeaturesDTO:
    type: object
    properties:
      stockAvailability:
        title: StockAvailability
        allOf:
          - $ref: '#/definitions/ProductVariantStockAvailabilityDTO'
    additionalProperties: false
  ProductVariantDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      productId:
        title: ProductId
        type: string
      mediaItem:
        title: MediaItem
        allOf:
          - $ref: '#/definitions/MediaItemDTO'
      title:
        title: Title
        maxLength: 150
        minLength: 0
        type: string
      gtin:
        title: Gtin
        maxLength: 50
        minLength: 0
        type: string
      mpn:
        title: Mpn
        maxLength: 70
        minLength: 0
        type: string
      unitPrice:
        format: double
        title: UnitPrice
        type: number
      price:
        format: double
        title: Price
        type: number
      msrp:
        format: double
        title: Msrp
        type: number
      quantity:
        format: double
        title: Quantity
        type: number
      initialPrice:
        format: double
        title: InitialPrice
        type: number
      dimension1ItemId:
        title: Dimension1ItemId
        type: string
      dimension2ItemId:
        title: Dimension2ItemId
        type: string
      dimension3ItemId:
        title: Dimension3ItemId
        type: string
      shippingWeight:
        format: double
        title: ShippingWeight
        type: number
      shippingLength:
        format: double
        title: ShippingLength
        type: number
      shippingWidth:
        format: double
        title: ShippingWidth
        type: number
      shippingHeight:
        format: double
        title: ShippingHeight
        type: number
      sellOutOfStock:
        title: SellOutOfStock
        type: boolean
      minimunStockLevel:
        format: double
        title: MinimunStockLevel
        type: number
      unitId:
        title: UnitId
        type: string
      salesUnitId:
        title: SalesUnitId
        type: string
      salesUnitCondition:
        format: double
        title: SalesUnitCondition
        type: number
      requiresShipping:
        title: RequiresShipping
        type: boolean
      sku:
        title: Sku
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/ProductVariantTranslationDTO'
      canOrder:
        title: CanOrder
        type: boolean
      additionalFeatures:
        title: AdditionalFeatures
        allOf:
          - $ref: '#/definitions/ProductVariantAdditionalFeaturesDTO'
      expected:
        title: Expected
        allOf:
          - $ref: '#/definitions/ExpectedDTO'
      minOrderQuantity:
        format: double
        title: MinOrderQuantity
        type: number
      orderQuantityStep:
        format: double
        title: OrderQuantityStep
        type: number
    additionalProperties: false
  ProductVariantExtendedDTO:
    type: object
    properties:
      stockAvailability:
        title: StockAvailability
        allOf:
          - $ref: '#/definitions/ProductStockAvailabilityExtendedDTO'
      id:
        title: Id
        type: string
      productId:
        title: ProductId
        type: string
      mediaItem:
        title: MediaItem
        allOf:
          - $ref: '#/definitions/MediaItemDTO'
      title:
        title: Title
        maxLength: 150
        minLength: 0
        type: string
      gtin:
        title: Gtin
        maxLength: 50
        minLength: 0
        type: string
      mpn:
        title: Mpn
        maxLength: 70
        minLength: 0
        type: string
      unitPrice:
        format: double
        title: UnitPrice
        type: number
      price:
        format: double
        title: Price
        type: number
      msrp:
        format: double
        title: Msrp
        type: number
      quantity:
        format: double
        title: Quantity
        type: number
      initialPrice:
        format: double
        title: InitialPrice
        type: number
      dimension1ItemId:
        title: Dimension1ItemId
        type: string
      dimension2ItemId:
        title: Dimension2ItemId
        type: string
      dimension3ItemId:
        title: Dimension3ItemId
        type: string
      shippingWeight:
        format: double
        title: ShippingWeight
        type: number
      shippingLength:
        format: double
        title: ShippingLength
        type: number
      shippingWidth:
        format: double
        title: ShippingWidth
        type: number
      shippingHeight:
        format: double
        title: ShippingHeight
        type: number
      sellOutOfStock:
        title: SellOutOfStock
        type: boolean
      minimunStockLevel:
        format: double
        title: MinimunStockLevel
        type: number
      unitId:
        title: UnitId
        type: string
      salesUnitId:
        title: SalesUnitId
        type: string
      salesUnitCondition:
        format: double
        title: SalesUnitCondition
        type: number
      requiresShipping:
        title: RequiresShipping
        type: boolean
      sku:
        title: Sku
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/ProductVariantTranslationDTO'
      canOrder:
        title: CanOrder
        type: boolean
      additionalFeatures:
        title: AdditionalFeatures
        allOf:
          - $ref: '#/definitions/ProductVariantAdditionalFeaturesDTO'
      expected:
        title: Expected
        allOf:
          - $ref: '#/definitions/ExpectedDTO'
      minOrderQuantity:
        format: double
        title: MinOrderQuantity
        type: number
      orderQuantityStep:
        format: double
        title: OrderQuantityStep
        type: number
    additionalProperties: false
  ProductVariantStockAvailabilityDTO:
    type: object
    properties:
      message:
        title: Message
        type: string
      image:
        title: Image
        allOf:
          - $ref: '#/definitions/MediaItemDTO'
      color:
        title: Color
        type: string
    additionalProperties: false
  ProductVariantTranslationDTO:
    type: object
    properties:
      title:
        title: Title
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  RelatedProductVariantDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      productId:
        title: ProductId
        type: string
      companyId:
        title: CompanyId
        type: string
      dimension1ItemIds:
        title: Dimension1ItemIds
        type: array
        items:
          type: string
      dimension2ItemIds:
        title: Dimension2ItemIds
        type: array
        items:
          type: string
      dimension3ItemIds:
        title: Dimension3ItemIds
        type: array
        items:
          type: string
    additionalProperties: false
  SourceTagDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      name:
        title: Name
        type: string
    additionalProperties: false
  StockAvailabilityDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      code:
        title: Code
        type: string
      title:
        title: Title
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/StockAvailabilityTranslationDTO'
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      lines:
        title: Lines
        type: array
        items:
          $ref: '#/definitions/StockAvailabilityLineDTO'
    additionalProperties: false
  StockAvailabilityLineDTO:
    type: object
    properties:
      mediaItem:
        title: MediaItem
        allOf:
          - $ref: '#/definitions/MediaItemDTO'
      message:
        title: Message
        type: string
      quantity:
        format: int32
        title: Quantity
        type: integer
      color:
        title: Color
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/LineTranslationDTO'
    additionalProperties: false
  StockAvailabilityTranslationDTO:
    type: object
    properties:
      title:
        title: Title
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  UnitDTO:
    required:
      - code
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      code:
        title: Code
        minLength: 1
        type: string
      name:
        title: Name
        minLength: 1
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/UnitTranslationDTO'
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
    additionalProperties: false
  UnitTranslationDTO:
    type: object
    properties:
      name:
        title: Name
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  UpdateAttributeSetDTO:
    type: object
    properties:
      title:
        title: Title
        type: string
      description:
        title: Description
        type: string
      groups:
        title: Groups
        type: array
        items:
          $ref: '#/definitions/UpdateAttributeSetGroupDTO'
    additionalProperties: false
  UpdateAttributeSetGroupDTO:
    type: object
    properties:
      title:
        title: Title
        type: string
      id:
        title: Id
        type: string
      position:
        format: int32
        title: Position
        type: integer
      items:
        title: Items
        type: array
        items:
          $ref: '#/definitions/AttributeSetItemDTO'
    additionalProperties: false
  UpdateStockAvailabilityDTO:
    type: object
    properties:
      code:
        title: Code
        type: string
      title:
        title: Title
        type: string
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/StockAvailabilityTranslationDTO'
      lines:
        title: Lines
        type: array
        items:
          $ref: '#/definitions/StockAvailabilityLineDTO'
    additionalProperties: false
  CartDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      token:
        title: Token
        type: string
      currency:
        title: Currency
        enum:
          - aed
          - afn
          - all
          - amd
          - ang
          - aoa
          - ars
          - aud
          - awg
          - azn
          - bam
          - bbd
          - bdt
          - bgn
          - bhd
          - bif
          - bmd
          - bnd
          - bob
          - bov
          - brl
          - bsd
          - btn
          - bwp
          - byn
          - bzd
          - cad
          - cdf
          - che
          - chf
          - chw
          - clf
          - clp
          - cny
          - cop
          - cou
          - crc
          - cuc
          - cup
          - cve
          - czk
          - djf
          - dkk
          - dop
          - dzd
          - egp
          - ern
          - etb
          - eur
          - fjd
          - fkp
          - gbp
          - gel
          - ghs
          - gip
          - gmd
          - gnf
          - gtq
          - gyd
          - hkd
          - hnl
          - hrk
          - htg
          - huf
          - idr
          - ils
          - inr
          - iqd
          - irr
          - isk
          - jmd
          - jod
          - jpy
          - kes
          - kgs
          - khr
          - kmf
          - kpw
          - krw
          - kwd
          - kyd
          - kzt
          - lak
          - lbp
          - lkr
          - lrd
          - lsl
          - lyd
          - mad
          - mdl
          - mga
          - mkd
          - mmk
          - mnt
          - mop
          - mru
          - mur
          - mvr
          - mwk
          - mxn
          - mxv
          - myr
          - mzn
          - nad
          - ngn
          - nio
          - nok
          - npr
          - nzd
          - omr
          - pab
          - pen
          - pgk
          - php
          - pkr
          - pln
          - pyg
          - qar
          - ron
          - rsd
          - rub
          - rwf
          - sar
          - sbd
          - scr
          - sdg
          - sek
          - sgd
          - shp
          - sll
          - sos
          - srd
          - ssp
          - stn
          - svc
          - syp
          - szl
          - thb
          - tjs
          - tmt
          - tnd
          - top
          - try
          - ttd
          - twd
          - tzs
          - uah
          - ugx
          - usd
          - usn
          - uyi
          - uyu
          - uyw
          - uzs
          - ves
          - vnd
          - vuv
          - wst
          - xaf
          - xag
          - xau
          - xba
          - xbb
          - xbc
          - xbd
          - xcd
          - xdr
          - xof
          - xpd
          - xpf
          - xpt
          - xsu
          - xts
          - xua
          - xxx
          - yer
          - zar
          - zmw
          - zwl
          - ignore
        type: string
      totalAmount:
        format: double
        title: TotalAmount
        type: number
      netAmount:
        format: double
        title: NetAmount
        type: number
      vatAmount:
        format: double
        title: VatAmount
        type: number
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      cartItems:
        title: CartItems
        type: array
        items:
          $ref: '#/definitions/CartItemDTO'
    additionalProperties: false
  CartItemDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      productId:
        title: ProductId
        type: string
      productTitle:
        title: ProductTitle
        type: string
      productVariantId:
        title: ProductVariantId
        type: string
      quantity:
        format: double
        title: Quantity
        type: number
      imageLink:
        title: ImageLink
        type: string
      netValue:
        format: double
        title: NetValue
        type: number
      initialUnitPrice:
        format: double
        title: InitialUnitPrice
        type: number
      unitPrice:
        format: double
        title: UnitPrice
        type: number
      initialPrice:
        format: double
        title: InitialPrice
        type: number
      price:
        format: double
        title: Price
        type: number
      lineValue:
        format: double
        title: LineValue
        type: number
      vatValue:
        format: double
        title: VatValue
        type: number
      vatRate:
        format: double
        title: VatRate
        type: number
      vatCode:
        title: VatCode
        type: string
      link:
        title: Link
        type: string
      sku:
        title: Sku
        type: string
      orderQuantityStep:
        format: double
        title: OrderQuantityStep
        type: number
      salesUnitId:
        title: SalesUnitId
        type: string
    additionalProperties: false
  CreateCartItemDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      productId:
        title: ProductId
        type: string
      productVariantId:
        title: ProductVariantId
        type: string
      quantity:
        format: double
        title: Quantity
        type: number
      sku:
        title: Sku
        type: string
      mode:
        title: Mode
        enum:
          - Append
          - Set
        type: string
    additionalProperties: false
  ShoppingListDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      title:
        title: Title
        type: string
      companyId:
        title: CompanyId
        type: string
      customerId:
        title: CustomerId
        type: string
      userId:
        title: UserId
        type: string
      alias:
        title: Alias
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      items:
        title: Items
        type: array
        items:
          $ref: '#/definitions/ShoppingListItemDTO'
    additionalProperties: false
  ShoppingListItemDTO:
    type: object
    properties:
      productId:
        title: ProductId
        type: string
      productVariantId:
        title: ProductVariantId
        type: string
    additionalProperties: false
  UpdateCartDTO:
    type: object
    properties:
      currency:
        title: Currency
        enum:
          - aed
          - afn
          - all
          - amd
          - ang
          - aoa
          - ars
          - aud
          - awg
          - azn
          - bam
          - bbd
          - bdt
          - bgn
          - bhd
          - bif
          - bmd
          - bnd
          - bob
          - bov
          - brl
          - bsd
          - btn
          - bwp
          - byn
          - bzd
          - cad
          - cdf
          - che
          - chf
          - chw
          - clf
          - clp
          - cny
          - cop
          - cou
          - crc
          - cuc
          - cup
          - cve
          - czk
          - djf
          - dkk
          - dop
          - dzd
          - egp
          - ern
          - etb
          - eur
          - fjd
          - fkp
          - gbp
          - gel
          - ghs
          - gip
          - gmd
          - gnf
          - gtq
          - gyd
          - hkd
          - hnl
          - hrk
          - htg
          - huf
          - idr
          - ils
          - inr
          - iqd
          - irr
          - isk
          - jmd
          - jod
          - jpy
          - kes
          - kgs
          - khr
          - kmf
          - kpw
          - krw
          - kwd
          - kyd
          - kzt
          - lak
          - lbp
          - lkr
          - lrd
          - lsl
          - lyd
          - mad
          - mdl
          - mga
          - mkd
          - mmk
          - mnt
          - mop
          - mru
          - mur
          - mvr
          - mwk
          - mxn
          - mxv
          - myr
          - mzn
          - nad
          - ngn
          - nio
          - nok
          - npr
          - nzd
          - omr
          - pab
          - pen
          - pgk
          - php
          - pkr
          - pln
          - pyg
          - qar
          - ron
          - rsd
          - rub
          - rwf
          - sar
          - sbd
          - scr
          - sdg
          - sek
          - sgd
          - shp
          - sll
          - sos
          - srd
          - ssp
          - stn
          - svc
          - syp
          - szl
          - thb
          - tjs
          - tmt
          - tnd
          - top
          - try
          - ttd
          - twd
          - tzs
          - uah
          - ugx
          - usd
          - usn
          - uyi
          - uyu
          - uyw
          - uzs
          - ves
          - vnd
          - vuv
          - wst
          - xaf
          - xag
          - xau
          - xba
          - xbb
          - xbc
          - xbd
          - xcd
          - xdr
          - xof
          - xpd
          - xpf
          - xpt
          - xsu
          - xts
          - xua
          - xxx
          - yer
          - zar
          - zmw
          - zwl
          - ignore
        type: string
      cartItems:
        title: CartItems
        type: array
        items:
          $ref: '#/definitions/CreateCartItemDTO'
    additionalProperties: false
  AddressDTO:
    type: object
    properties:
      address1:
        title: Address1
        maxLength: 100
        minLength: 0
        type: string
      address2:
        title: Address2
        maxLength: 100
        minLength: 0
        type: string
      city:
        title: City
        maxLength: 60
        minLength: 0
        type: string
      state:
        title: State
        maxLength: 50
        minLength: 0
        type: string
      country:
        title: Country
        maxLength: 55
        minLength: 0
        type: string
      countryCode:
        title: CountryCode
        type: string
      postalCode:
        title: PostalCode
        maxLength: 15
        minLength: 0
        type: string
    additionalProperties: false
  CheckoutAddressDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      name:
        title: Name
        type: string
      address:
        title: Address
        allOf:
          - $ref: '#/definitions/AddressDTO'
    additionalProperties: false
  CheckoutPaymentDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      code:
        title: Code
        type: string
      provider:
        title: Provider
        enum:
          - OnePay
          - EveryPay
          - Credit
          - PayPal
          - Deposit
          - PayGate
          - CardLink
          - EDPS
          - JCC
          - ignore
        type: string
      status:
        title: Status
        enum:
          - Submitted
          - Completed
          - Pending
          - Cancelled
          - Failed
          - Error
          - ignore
        type: string
      cardType:
        title: CardType
        enum:
          - Other
          - Visa
          - Mastercard
          - ignore
        type: string
      paymentDate:
        format: date-time
        title: PaymentDate
        type: string
      amount:
        format: double
        title: Amount
        type: number
      approvalCode:
        title: ApprovalCode
        type: string
      cardNumber:
        title: CardNumber
        type: string
      postDating:
        format: int32
        title: PostDating
        type: integer
      installments:
        format: int32
        title: Installments
        type: integer
      bankId:
        title: BankId
        type: string
      transactionId:
        title: TransactionId
        type: string
    additionalProperties: false
  OrderCustomFieldDTO:
    type: object
    properties:
      name:
        title: Name
        type: string
      value:
        title: Value
    additionalProperties: false
  PaymentDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      customerId:
        title: CustomerId
        type: string
      checkoutToken:
        title: CheckoutToken
        type: string
      amount:
        format: double
        title: Amount
        type: number
      commissionAmount:
        format: double
        title: CommissionAmount
        type: number
      remittanceInformation:
        title: RemittanceInformation
        type: string
      provider:
        title: Provider
        enum:
          - OnePay
          - EveryPay
          - Credit
          - PayPal
          - Deposit
          - PayGate
          - CardLink
          - EDPS
          - JCC
          - ignore
        type: string
      status:
        title: Status
        enum:
          - Submitted
          - Completed
          - Pending
          - Cancelled
          - Failed
          - Error
          - ignore
        type: string
      paymentDate:
        format: date-time
        title: PaymentDate
        type: string
      creationDate:
        format: date-time
        title: CreationDate
        type: string
      approvalCode:
        title: ApprovalCode
        type: string
      cardType:
        title: CardType
        enum:
          - Other
          - Visa
          - Mastercard
          - ignore
        type: string
      cardNumber:
        title: CardNumber
        type: string
      postDating:
        format: int32
        title: PostDating
        type: integer
      installments:
        format: int32
        title: Installments
        type: integer
      bankId:
        title: BankId
        type: string
      transactionId:
        title: TransactionId
        type: string
    additionalProperties: false
  ShippingLineDTO:
    type: object
    properties:
      carrierId:
        title: CarrierId
        type: string
      carrierCode:
        title: CarrierCode
        type: string
      title:
        title: Title
        type: string
      netPrice:
        format: double
        title: NetPrice
        type: number
      totalAmount:
        format: double
        title: TotalAmount
        type: number
      vatLines:
        title: VatLines
        type: array
        items:
          $ref: '#/definitions/ShippingVatDTO'
    additionalProperties: false
  ShippingVatDTO:
    type: object
    properties:
      rate:
        format: double
        title: Rate
        type: number
      amount:
        format: double
        title: Amount
        type: number
    additionalProperties: false
  UpdateCheckoutDTO:
    type: object
    properties:
      notes:
        title: Notes
        type: string
      referenceCode:
        title: ReferenceCode
        type: string
      shippingAddress:
        title: ShippingAddress
        allOf:
          - $ref: '#/definitions/AddressDTO'
      shippingLine:
        title: ShippingLine
        allOf:
          - $ref: '#/definitions/ShippingLineDTO'
      payment:
        title: Payment
        allOf:
          - $ref: '#/definitions/CheckoutPaymentDTO'
      customerBranchId:
        title: CustomerBranchId
        type: string
      customFields:
        title: CustomFields
        type: array
        items:
          $ref: '#/definitions/OrderCustomFieldDTO'
      addresses:
        title: Addresses
        type: array
        items:
          $ref: '#/definitions/CheckoutAddressDTO'
      deliveryDate:
        format: date-time
        title: DeliveryDate
        type: string
    additionalProperties: false
  CalculatedShippingDTO:
    type: object
    properties:
      carrier:
        title: Carrier
        allOf:
          - $ref: '#/definitions/CarrierDTO'
      shippingLine:
        title: ShippingLine
        allOf:
          - $ref: '#/definitions/ShippingLineDTO'
    additionalProperties: false
  CarrierDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      code:
        title: Code
        type: string
      name:
        title: Name
        type: string
      status:
        title: Status
        enum:
          - Draft
          - Active
          - Archived
          - ignore
        type: string
      transitTime:
        title: TransitTime
        type: string
      handlingCost:
        title: HandlingCost
        type: boolean
      speedGrade:
        format: double
        title: SpeedGrade
        type: number
      logo:
        title: Logo
        allOf:
          - $ref: '#/definitions/MediaItemDTO'
      trackUrl:
        title: TrackUrl
        type: string
      rangeType:
        title: RangeType
        enum:
          - Price
          - Weight
        type: string
      zones:
        title: Zones
        type: array
        items:
          $ref: '#/definitions/CarrierZoneDTO'
      ranges:
        title: Ranges
        type: array
        items:
          $ref: '#/definitions/CarrierRangeDTO'
    additionalProperties: false
  CarrierRangeDTO:
    type: object
    properties:
      fromValue:
        format: double
        title: FromValue
        type: number
      toValue:
        format: double
        title: ToValue
        type: number
      cost:
        format: double
        title: Cost
        type: number
      zones:
        title: Zones
        type: array
        items:
          $ref: '#/definitions/CarrierZoneCostDTO'
    additionalProperties: false
  CarrierZoneCostDTO:
    type: object
    properties:
      zoneId:
        title: ZoneId
        type: string
      cost:
        format: double
        title: Cost
        type: number
    additionalProperties: false
  CarrierZoneDTO:
    type: object
    properties:
      id:
        type: string
    additionalProperties: false
  CheckoutDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      customerId:
        title: CustomerId
        type: string
      customerName:
        title: CustomerName
        type: string
      userEmail:
        title: UserEmail
        type: string
      userFirstName:
        title: UserFirstName
        type: string
      userLastName:
        title: UserLastName
        type: string
      userId:
        title: UserId
        type: string
      customerBranchId:
        title: CustomerBranchId
        type: string
      cartToken:
        title: CartToken
        type: string
      token:
        title: Token
        type: string
      referenceCode:
        title: ReferenceCode
        type: string
      notes:
        title: Notes
        type: string
      status:
        title: Status
        enum:
          - Start
          - FillAddress
          - SetShipping
          - PendingPayment
          - Completed
          - CompletePayment
          - SetPayment
          - PaymentFailed
          - ignore
        type: string
      billingAddress:
        title: BillingAddress
        allOf:
          - $ref: '#/definitions/AddressDTO'
      shippingAddress:
        title: ShippingAddress
        allOf:
          - $ref: '#/definitions/AddressDTO'
      buyerAcceptsMarketing:
        title: BuyerAcceptsMarketing
        type: boolean
      email:
        title: Email
        maxLength: 254
        minLength: 0
        type: string
      phone:
        title: Phone
        maxLength: 20
        minLength: 0
        type: string
      currency:
        title: Currency
        enum:
          - aed
          - afn
          - all
          - amd
          - ang
          - aoa
          - ars
          - aud
          - awg
          - azn
          - bam
          - bbd
          - bdt
          - bgn
          - bhd
          - bif
          - bmd
          - bnd
          - bob
          - bov
          - brl
          - bsd
          - btn
          - bwp
          - byn
          - bzd
          - cad
          - cdf
          - che
          - chf
          - chw
          - clf
          - clp
          - cny
          - cop
          - cou
          - crc
          - cuc
          - cup
          - cve
          - czk
          - djf
          - dkk
          - dop
          - dzd
          - egp
          - ern
          - etb
          - eur
          - fjd
          - fkp
          - gbp
          - gel
          - ghs
          - gip
          - gmd
          - gnf
          - gtq
          - gyd
          - hkd
          - hnl
          - hrk
          - htg
          - huf
          - idr
          - ils
          - inr
          - iqd
          - irr
          - isk
          - jmd
          - jod
          - jpy
          - kes
          - kgs
          - khr
          - kmf
          - kpw
          - krw
          - kwd
          - kyd
          - kzt
          - lak
          - lbp
          - lkr
          - lrd
          - lsl
          - lyd
          - mad
          - mdl
          - mga
          - mkd
          - mmk
          - mnt
          - mop
          - mru
          - mur
          - mvr
          - mwk
          - mxn
          - mxv
          - myr
          - mzn
          - nad
          - ngn
          - nio
          - nok
          - npr
          - nzd
          - omr
          - pab
          - pen
          - pgk
          - php
          - pkr
          - pln
          - pyg
          - qar
          - ron
          - rsd
          - rub
          - rwf
          - sar
          - sbd
          - scr
          - sdg
          - sek
          - sgd
          - shp
          - sll
          - sos
          - srd
          - ssp
          - stn
          - svc
          - syp
          - szl
          - thb
          - tjs
          - tmt
          - tnd
          - top
          - try
          - ttd
          - twd
          - tzs
          - uah
          - ugx
          - usd
          - usn
          - uyi
          - uyu
          - uyw
          - uzs
          - ves
          - vnd
          - vuv
          - wst
          - xaf
          - xag
          - xau
          - xba
          - xbb
          - xbc
          - xbd
          - xcd
          - xdr
          - xof
          - xpd
          - xpf
          - xpt
          - xsu
          - xts
          - xua
          - xxx
          - yer
          - zar
          - zmw
          - zwl
          - ignore
        type: string
      totalAmount:
        format: double
        title: TotalAmount
        type: number
      netAmount:
        format: double
        title: NetAmount
        type: number
      vatAmount:
        format: double
        title: VatAmount
        type: number
      expenseAmount:
        format: double
        title: ExpenseAmount
        type: number
      discountRate:
        format: double
        title: DiscountRate
        type: number
      discountValue:
        format: double
        title: DiscountValue
        type: number
      completedDate:
        format: date-time
        title: CompletedDate
        type: string
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      cartItems:
        title: CartItems
        type: array
        items:
          $ref: '#/definitions/CheckoutItemDTO'
      giftLines:
        title: GiftLines
        type: array
        items:
          $ref: '#/definitions/CheckoutGiftLineDTO'
      vatAnalysis:
        title: VatAnalysis
        type: array
        items:
          $ref: '#/definitions/VatAnalysisDTO'
      expenseLines:
        title: ExpenseLines
        type: array
        items:
          $ref: '#/definitions/ExpenseLineDTO'
      shippingLine:
        title: ShippingLine
        allOf:
          - $ref: '#/definitions/ShippingLineDTO'
      orderId:
        title: OrderId
        type: string
      orderCode:
        title: OrderCode
        type: string
      payment:
        title: Payment
        allOf:
          - $ref: '#/definitions/CheckoutPaymentDTO'
      customer:
        title: Customer
        allOf:
          - $ref: '#/definitions/CustomerDTO'
      shippingOptions:
        title: ShippingOptions
        type: array
        items:
          $ref: '#/definitions/CalculatedShippingDTO'
      paymentMethods:
        title: PaymentMethods
        allOf:
          - $ref: '#/definitions/CustomerPaymentOptionsDTO'
      settings:
        title: Settings
        allOf:
          - $ref: '#/definitions/CheckoutSettingsDTO'
      customFields:
        title: CustomFields
        type: array
        items:
          $ref: '#/definitions/OrderCustomFieldDTO'
      addresses:
        title: Addresses
        type: array
        items:
          $ref: '#/definitions/CheckoutAddressDTO'
      deliveryDate:
        format: date-time
        title: DeliveryDate
        type: string
    additionalProperties: false
  CheckoutGiftLineDTO:
    type: object
    properties:
      vatCode:
        title: VatCode
        type: string
      imageLink:
        title: ImageLink
        type: string
      productTitle:
        title: ProductTitle
        type: string
      productAlias:
        title: ProductAlias
        type: string
      productId:
        title: ProductId
        type: string
      productVariantId:
        title: ProductVariantId
        type: string
      quantity:
        format: double
        title: Quantity
        type: number
    additionalProperties: false
  CheckoutItemDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      productId:
        title: ProductId
        type: string
      productTitle:
        title: ProductTitle
        type: string
      productVariantId:
        title: ProductVariantId
        type: string
      quantity:
        format: double
        title: Quantity
        type: number
      unit:
        title: Unit
        type: string
      imageLink:
        title: ImageLink
        type: string
      color:
        title: Color
        type: string
      material:
        title: Material
        type: string
      pattern:
        title: Pattern
        type: string
      size:
        title: Size
        type: string
      netValue:
        format: double
        title: NetValue
        type: number
      expenseValue:
        format: double
        title: ExpenseValue
        type: number
      initialUnitPrice:
        format: double
        title: InitialUnitPrice
        type: number
      unitPrice:
        format: double
        title: UnitPrice
        type: number
      initialPrice:
        format: double
        title: InitialPrice
        type: number
      price:
        format: double
        title: Price
        type: number
      priceValue1:
        format: double
        title: PriceValue1
        type: number
      priceValue2:
        format: double
        title: PriceValue2
        type: number
      priceValue3:
        format: double
        title: PriceValue3
        type: number
      lineValue:
        format: double
        title: LineValue
        type: number
      discountValue:
        format: double
        title: DiscountValue
        type: number
      discountRate:
        format: double
        title: DiscountRate
        type: number
      vatValue:
        format: double
        title: VatValue
        type: number
      vatRate:
        format: double
        title: VatRate
        type: number
      vatCode:
        title: VatCode
        type: string
      customDim1Value:
        title: CustomDim1Value
        type: string
      customDim2Value:
        title: CustomDim2Value
        type: string
      customDim3Value:
        title: CustomDim3Value
        type: string
      link:
        title: Link
        type: string
      sku:
        title: Sku
        type: string
      salesUnitId:
        title: SalesUnitId
        type: string
    additionalProperties: false
  CheckoutSettingsDTO:
    type: object
    properties:
      showBilling:
        title: ShowBilling
        type: boolean
      showShipping:
        title: ShowShipping
        type: boolean
      showPayment:
        title: ShowPayment
        type: boolean
    additionalProperties: false
  CustomerBranchDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      sourceId:
        title: SourceId
        type: string
      code:
        title: Code
        type: string
      name:
        title: Name
        type: string
      contact:
        title: Contact
        type: string
      contactPhone:
        title: ContactPhone
        type: string
      phone:
        title: Phone
        type: string
      address:
        title: Address
        allOf:
          - $ref: '#/definitions/AddressDTO'
      status:
        title: Status
        enum:
          - Active
          - Inactive
          - StopOrder
          - ignore
        type: string
    additionalProperties: false
  CustomerPaymentDTO:
    type: object
    properties:
      provider:
        title: Provider
        enum:
          - OnePay
          - EveryPay
          - Credit
          - PayPal
          - Deposit
          - PayGate
          - CardLink
          - EDPS
          - JCC
          - ignore
        type: string
      name:
        title: Name
        type: string
      position:
        format: int32
        title: Position
        type: integer
      message:
        title: Message
        type: string
    additionalProperties: false
  CustomerPaymentOptionsDTO:
    type: object
    properties:
      providers:
        title: Providers
        type: array
        items:
          $ref: '#/definitions/CustomerPaymentDTO'
    additionalProperties: false
  CustomerShippingAddressDTO:
    type: object
    properties:
      name:
        title: Name
        type: string
      address:
        title: Address
        allOf:
          - $ref: '#/definitions/AddressDTO'
    additionalProperties: false
  ExpenseLineDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      netValue:
        format: double
        title: NetValue
        type: number
      vatValue:
        format: double
        title: VatValue
        type: number
    additionalProperties: false
  VatAnalysisDTO:
    type: object
    properties:
      vatRate:
        format: double
        title: VatRate
        type: number
      vatAmount:
        format: double
        title: VatAmount
        type: number
      vatCode:
        title: VatCode
        type: string
      netAmount:
        format: double
        title: NetAmount
        type: number
    additionalProperties: false
  AddAssortmentValueDTO:
    type: object
    properties:
      productId:
        title: ProductId
        type: string
      categoryId:
        title: CategoryId
        type: string
      typeId:
        title: TypeId
        type: string
      status:
        title: Status
        enum:
          - Inactive
          - Active
        type: string
      source:
        title: Source
        enum:
          - manual
          - orders
        type: string
    additionalProperties: false
  AssortmentCombinationDTO:
    type: object
    properties:
      branchId:
        title: BranchId
        type: string
      categoryId:
        title: CategoryId
        type: string
      typeId:
        title: TypeId
        type: string
    additionalProperties: false
  AssortmentDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      customerId:
        title: CustomerId
        type: string
      categories:
        title: Categories
        type: array
        items:
          $ref: '#/definitions/CustomerCategoryDTO'
      types:
        title: Types
        type: array
        items:
          $ref: '#/definitions/CustomerTypeDTO'
      combinations:
        title: Combinations
        type: array
        items:
          $ref: '#/definitions/AssortmentCombinationDTO'
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
    additionalProperties: false
  AssortmentValueDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      customerId:
        title: CustomerId
        type: string
      productId:
        title: ProductId
        type: string
      categoryId:
        title: CategoryId
        type: string
      typeId:
        title: TypeId
        type: string
      status:
        title: Status
        enum:
          - Inactive
          - Active
        type: string
      source:
        title: Source
        enum:
          - manual
          - orders
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
    additionalProperties: false
  CreateAssortmentDTO:
    type: object
    properties:
      customerId:
        title: CustomerId
        type: string
      categories:
        title: Categories
        type: array
        items:
          $ref: '#/definitions/CreateCustomerCategoryDTO'
      types:
        title: Types
        type: array
        items:
          $ref: '#/definitions/CreateCustomerTypeDTO'
    additionalProperties: false
  CreateCustomerCategoryDTO:
    type: object
    properties:
      name:
        title: Name
        type: string
    additionalProperties: false
  CreateCustomerTypeDTO:
    type: object
    properties:
      name:
        title: Name
        type: string
    additionalProperties: false
  CustomerAdditionalFeaturesDTO:
    type: object
    properties:
      extraFields:
        title: ExtraFields
    additionalProperties: false
  CustomerBranchImportDTO:
    type: object
    properties:
      address1:
        title: Address1
        maxLength: 100
        minLength: 0
        type: string
      address2:
        title: Address2
        maxLength: 100
        minLength: 0
        type: string
      city:
        title: City
        maxLength: 60
        minLength: 0
        type: string
      state:
        title: State
        maxLength: 50
        minLength: 0
        type: string
      country:
        title: Country
        maxLength: 55
        minLength: 0
        type: string
      countryCode:
        title: CountryCode
        type: string
      postalCode:
        title: PostalCode
        maxLength: 15
        minLength: 0
        type: string
      id:
        title: Id
        type: string
      sourceId:
        title: SourceId
        type: string
      code:
        title: Code
        type: string
      name:
        title: Name
        type: string
      contact:
        title: Contact
        type: string
      contactPhone:
        title: ContactPhone
        type: string
      phone:
        title: Phone
        type: string
      address:
        title: Address
        allOf:
          - $ref: '#/definitions/AddressDTO'
      vatType:
        title: VatType
        enum:
          - Zero
          - Regular
          - Discounted
          - ignore
        type: string
      status:
        title: Status
        enum:
          - Active
          - Inactive
          - StopOrder
          - ignore
        type: string
      contactLanguage:
        title: ContactLanguage
        type: string
    additionalProperties: false
  CustomerCategoryDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      name:
        title: Name
        type: string
    additionalProperties: false
  CustomerCustomFieldDTO:
    type: object
    properties:
      name:
        title: Name
        type: string
      value:
        title: Value
      translation:
        title: Translation
        allOf:
          - $ref: '#/definitions/CustomerCustomFieldTranslationDTO'
    additionalProperties: false
  CustomerCustomFieldTranslationDTO:
    type: object
    properties:
      value:
        title: Value
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  CustomerDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      code:
        title: Code
        type: string
      name:
        title: Name
        type: string
      tin:
        title: Tin
        type: string
      email:
        title: Email
        type: string
      contact:
        title: Contact
        type: string
      contactPhone:
        title: ContactPhone
        type: string
      phone:
        title: Phone
        type: string
      priceCategoryId:
        title: PriceCategoryId
        type: string
      sourceId:
        title: SourceId
        type: string
      tags:
        title: Tags
        type: array
        items:
          type: string
      sourceTags:
        title: SourceTags
        type: array
        items:
          type: string
      address:
        title: Address
        allOf:
          - $ref: '#/definitions/AddressDTO'
      notes:
        title: Notes
        type: string
      status:
        title: Status
        enum:
          - Active
          - Inactive
          - StopOrder
          - ignore
        type: string
      branches:
        title: Branches
        type: array
        items:
          $ref: '#/definitions/CustomerBranchDTO'
      additionalFeatures:
        title: AdditionalFeatures
        allOf:
          - $ref: '#/definitions/CustomerAdditionalFeaturesDTO'
      customFields:
        title: CustomFields
        type: array
        items:
          $ref: '#/definitions/CustomerCustomFieldDTO'
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      salesmanId:
        title: SalesmanId
        type: string
      taxOffice:
        title: TaxOffice
        type: string
      contactLanguage:
        title: ContactLanguage
        type: string
      vatType:
        title: VatType
        enum:
          - Zero
          - Regular
          - Discounted
          - ignore
        type: string
      shopType:
        title: ShopType
        enum:
          - B2B
          - B2C
          - Both
          - ignore
        type: string
      shippingAddresses:
        title: ShippingAddresses
        type: array
        items:
          $ref: '#/definitions/CustomerShippingAddressDTO'
    additionalProperties: false
  CustomerFilterTypeRuleCondition:
    type: object
    properties:
      filter:
        title: Filter
        enum:
          - Name
          - Tin
          - Phone
          - SourceTag
          - Tag
          - Rule
          - Search
          - Id
          - SalesmanId
          - Status
        type: string
      not:
        title: Not
        type: boolean
      value:
        title: Value
      operator:
        title: Operator
        enum:
          - And
          - Or
          - Xor
          - ignore
        type: string
      conditions:
        title: Conditions
        type: array
        items:
          $ref: '#/definitions/CustomerFilterTypeRuleCondition'
      operation:
        title: Operation
        enum:
          - eq
          - neq
          - gte
          - lte
          - gt
          - lt
          - OneOf
          - NotOneOf
          - Contains
          - NotContains
          - StartsWith
          - EndsWith
        type: string
    additionalProperties: false
  CustomerFilterTypeRuleConditionDTO:
    type: object
    properties:
      filter:
        title: Filter
        enum:
          - Name
          - Tin
          - Phone
          - SourceTag
          - Tag
          - Rule
          - Search
          - Id
          - SalesmanId
          - Status
        type: string
      not:
        title: Not
        type: boolean
      value:
        title: Value
      operator:
        title: Operator
        enum:
          - And
          - Or
          - Xor
          - ignore
        type: string
      conditions:
        title: Conditions
        type: array
        items:
          $ref: '#/definitions/CustomerFilterTypeRuleConditionDTO'
      operation:
        title: Operation
        enum:
          - eq
          - neq
          - gte
          - lte
          - gt
          - lt
          - OneOf
          - NotOneOf
          - Contains
          - NotContains
          - StartsWith
          - EndsWith
        type: string
    additionalProperties: false
  CustomerGroupDTO:
    required:
      - title
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      title:
        title: Title
        maxLength: 255
        minLength: 0
        type: string
      status:
        title: Status
        enum:
          - Draft
          - Active
          - Archived
          - ignore
        type: string
      rule:
        title: Rule
        allOf:
          - $ref: '#/definitions/CustomerFilterTypeRuleConditionDTO'
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
    additionalProperties: false
  CustomerImportDTO:
    type: object
    properties:
      branches:
        title: Branches
        type: array
        items:
          $ref: '#/definitions/CustomerBranchImportDTO'
      address1:
        title: Address1
        type: string
      address2:
        title: Address2
        maxLength: 100
        minLength: 0
        type: string
      city:
        title: City
        maxLength: 60
        minLength: 0
        type: string
      state:
        title: State
        maxLength: 50
        minLength: 0
        type: string
      country:
        title: Country
        maxLength: 55
        minLength: 0
        type: string
      countryCode:
        title: CountryCode
        type: string
      postalCode:
        title: PostalCode
        maxLength: 15
        minLength: 0
        type: string
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        type: string
      code:
        title: Code
        type: string
      name:
        title: Name
        type: string
      tin:
        title: Tin
        type: string
      email:
        title: Email
        type: string
      contact:
        title: Contact
        type: string
      contactPhone:
        title: ContactPhone
        type: string
      phone:
        title: Phone
        type: string
      priceCategoryId:
        title: PriceCategoryId
        type: string
      sourceId:
        title: SourceId
        type: string
      tags:
        title: Tags
        type: array
        items:
          type: string
      sourceTags:
        title: SourceTags
        type: array
        items:
          type: string
      address:
        title: Address
        allOf:
          - $ref: '#/definitions/AddressDTO'
      notes:
        title: Notes
        type: string
      status:
        title: Status
        enum:
          - Active
          - Inactive
          - StopOrder
          - ignore
        type: string
      additionalFeatures:
        title: AdditionalFeatures
        allOf:
          - $ref: '#/definitions/CustomerAdditionalFeaturesDTO'
      customFields:
        title: CustomFields
        type: array
        items:
          $ref: '#/definitions/CustomerCustomFieldDTO'
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      salesmanId:
        title: SalesmanId
        type: string
      taxOffice:
        title: TaxOffice
        type: string
      contactLanguage:
        title: ContactLanguage
        type: string
      vatType:
        title: VatType
        enum:
          - Zero
          - Regular
          - Discounted
          - ignore
        type: string
      shopType:
        title: ShopType
        enum:
          - B2B
          - B2C
          - Both
          - ignore
        type: string
      shippingAddresses:
        title: ShippingAddresses
        type: array
        items:
          $ref: '#/definitions/CustomerShippingAddressDTO'
    additionalProperties: false
  CustomerTypeDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      name:
        title: Name
        type: string
    additionalProperties: false
  UpdateAssortmentDTO:
    type: object
    properties:
      categories:
        title: Categories
        type: array
        items:
          $ref: '#/definitions/UpdateCustomerCategoryDTO'
      types:
        title: Types
        type: array
        items:
          $ref: '#/definitions/UpdateCustomerTypeDTO'
    additionalProperties: false
  UpdateAssortmentValueDTO:
    type: object
    properties:
      status:
        title: Status
        enum:
          - Inactive
          - Active
        type: string
    additionalProperties: false
  UpdateCustomerCategoryDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      name:
        title: Name
        type: string
    additionalProperties: false
  UpdateCustomerTypeDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      name:
        title: Name
        type: string
    additionalProperties: false
  CheckInventoryAvailabilityDTO:
    type: object
    properties:
      token:
        title: Token
        type: string
      lines:
        title: Lines
        type: array
        items:
          $ref: '#/definitions/CheckInventoryAvailabilityLineDTO'
    additionalProperties: false
  CheckInventoryAvailabilityLineDTO:
    type: object
    properties:
      productId:
        title: ProductId
        type: string
      productVariantId:
        title: ProductVariantId
        type: string
      quantity:
        format: double
        title: Quantity
        type: number
    additionalProperties: false
  ExpectedInventoryLineDTO:
    type: object
    properties:
      deliveryDate:
        format: date-time
        title: DeliveryDate
        type: string
      expectedQuantity:
        format: double
        title: ExpectedQuantity
        type: number
    additionalProperties: false
  InventoryLevelDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      productVariantId:
        title: ProductVariantId
        type: string
      productId:
        title: ProductId
        type: string
      companyId:
        title: CompanyId
        type: string
      locationId:
        title: LocationId
        type: string
      quantity:
        format: double
        title: Quantity
        type: number
      expectedInventoryLines:
        title: ExpectedInventoryLines
        type: array
        items:
          $ref: '#/definitions/ExpectedInventoryLineDTO'
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
    additionalProperties: false
  InventoryLevelFilterTypeBaseFilter:
    type: object
    properties:
      filter:
        title: Filter
        enum:
          - Location
          - VariantIds
        type: string
      operation:
        title: Operation
        enum:
          - eq
          - neq
          - gte
          - lte
          - gt
          - lt
          - OneOf
          - NotOneOf
          - Contains
          - NotContains
          - StartsWith
          - EndsWith
        type: string
      value:
        title: Value
    additionalProperties: false
  InventoryLevelSortTypeBaseSort:
    type: object
    properties:
      field:
        title: Field
        enum:
          - Id
          - Quantity
          - UpdateDate
        type: string
      order:
        title: Order
        enum:
          - asc
          - desc
        type: string
    additionalProperties: false
  LocationDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      companyId:
        title: CompanyId
        maxLength: 128
        minLength: 0
        type: string
      name:
        title: Name
        type: string
      isActive:
        title: IsActive
        type: boolean
      address:
        title: Address
        allOf:
          - $ref: '#/definitions/AddressDTO'
      phone:
        title: Phone
        type: string
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
    additionalProperties: false
  InventoryAvailabilityDTO:
    type: object
    properties:
      token:
        title: Token
        type: string
      available:
        title: Available
        type: boolean
      lines:
        title: Lines
        type: array
        items:
          $ref: '#/definitions/StockAvailabilityLineDTO'
    additionalProperties: false
  InventoryAvailabilityDTOLineDTO:
    type: object
    properties:
      productId:
        title: ProductId
        type: string
      productVariantId:
        title: ProductVariantId
        type: string
      unitQuantity:
        format: double
        title: UnitQuantity
        type: number
      unitAvailableQuantity:
        format: double
        title: UnitAvailableQuantity
        type: number
      quantity:
        format: double
        title: Quantity
        type: number
      availableQuantity:
        format: double
        title: AvailableQuantity
        type: number
    additionalProperties: false
  GiftLineDTO:
    type: object
    properties:
      productId:
        title: ProductId
        type: string
      productVariantId:
        title: ProductVariantId
        type: string
      productTitle:
        title: ProductTitle
        type: string
      quantity:
        format: double
        title: Quantity
        type: number
      vatCode:
        title: VatCode
        type: string
      imageLink:
        title: ImageLink
        type: string
      productAlias:
        title: ProductAlias
        type: string
    additionalProperties: false
  OrderCustomFieldTranslationDTO:
    type: object
    properties:
      value:
        title: Value
        allOf:
          - $ref: '#/definitions/MultiLangDTO'
    additionalProperties: false
  OrderDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      code:
        title: Code
        type: string
      companyId:
        title: CompanyId
        type: string
      checkoutToken:
        title: CheckoutToken
        type: string
      cartToken:
        title: CartToken
        type: string
      status:
        title: Status
        enum:
          - Draft
          - Placed
          - Cancelled
          - Processing
          - ToBeShipped
          - Shipped
          - PartialDelivery
          - FailedToDeliver
          - Delivered
          - Rejected
          - Completed
          - ignore
        type: string
      customerId:
        title: CustomerId
        type: string
      customerBranchId:
        title: CustomerBranchId
        type: string
      customerBranchSourceId:
        title: CustomerBranchSourceId
        type: string
      customerTin:
        title: CustomerTin
        type: string
      customerName:
        title: CustomerName
        type: string
      customerCode:
        title: CustomerCode
        type: string
      customerSourceId:
        title: CustomerSourceId
        type: string
      customerBranchName:
        title: CustomerBranchName
        type: string
      currency:
        title: Currency
        enum:
          - aed
          - afn
          - all
          - amd
          - ang
          - aoa
          - ars
          - aud
          - awg
          - azn
          - bam
          - bbd
          - bdt
          - bgn
          - bhd
          - bif
          - bmd
          - bnd
          - bob
          - bov
          - brl
          - bsd
          - btn
          - bwp
          - byn
          - bzd
          - cad
          - cdf
          - che
          - chf
          - chw
          - clf
          - clp
          - cny
          - cop
          - cou
          - crc
          - cuc
          - cup
          - cve
          - czk
          - djf
          - dkk
          - dop
          - dzd
          - egp
          - ern
          - etb
          - eur
          - fjd
          - fkp
          - gbp
          - gel
          - ghs
          - gip
          - gmd
          - gnf
          - gtq
          - gyd
          - hkd
          - hnl
          - hrk
          - htg
          - huf
          - idr
          - ils
          - inr
          - iqd
          - irr
          - isk
          - jmd
          - jod
          - jpy
          - kes
          - kgs
          - khr
          - kmf
          - kpw
          - krw
          - kwd
          - kyd
          - kzt
          - lak
          - lbp
          - lkr
          - lrd
          - lsl
          - lyd
          - mad
          - mdl
          - mga
          - mkd
          - mmk
          - mnt
          - mop
          - mru
          - mur
          - mvr
          - mwk
          - mxn
          - mxv
          - myr
          - mzn
          - nad
          - ngn
          - nio
          - nok
          - npr
          - nzd
          - omr
          - pab
          - pen
          - pgk
          - php
          - pkr
          - pln
          - pyg
          - qar
          - ron
          - rsd
          - rub
          - rwf
          - sar
          - sbd
          - scr
          - sdg
          - sek
          - sgd
          - shp
          - sll
          - sos
          - srd
          - ssp
          - stn
          - svc
          - syp
          - szl
          - thb
          - tjs
          - tmt
          - tnd
          - top
          - try
          - ttd
          - twd
          - tzs
          - uah
          - ugx
          - usd
          - usn
          - uyi
          - uyu
          - uyw
          - uzs
          - ves
          - vnd
          - vuv
          - wst
          - xaf
          - xag
          - xau
          - xba
          - xbb
          - xbc
          - xbd
          - xcd
          - xdr
          - xof
          - xpd
          - xpf
          - xpt
          - xsu
          - xts
          - xua
          - xxx
          - yer
          - zar
          - zmw
          - zwl
          - ignore
        type: string
      cancelledAt:
        format: date-time
        title: CancelledAt
        type: string
      deliveryDate:
        format: date-time
        title: DeliveryDate
        type: string
      cancellationReason:
        title: CancellationReason
        type: string
      closedAt:
        format: date-time
        title: ClosedAt
        type: string
      referenceCode:
        title: ReferenceCode
        type: string
      discountRate:
        format: double
        title: DiscountRate
        type: number
      discountValue:
        format: double
        title: DiscountValue
        type: number
      totalAmount:
        format: double
        title: TotalAmount
        type: number
      netAmount:
        format: double
        title: NetAmount
        type: number
      vatAmount:
        format: double
        title: VatAmount
        type: number
      expenseAmount:
        format: double
        title: ExpenseAmount
        type: number
      financialStatus:
        title: FinancialStatus
        enum:
          - Pending
          - Authorized
          - PartiallyPaid
          - PartiallyRefunded
          - Refunded
          - Voided
        type: string
      fulfillmentStatus:
        title: FulfillmentStatus
        enum:
          - Fulfilled
          - 'Null'
          - Partial
          - Restocked
        type: string
      billingAddress:
        title: BillingAddress
        allOf:
          - $ref: '#/definitions/AddressDTO'
      shippingAddress:
        title: ShippingAddress
        allOf:
          - $ref: '#/definitions/AddressDTO'
      requiresCalculation:
        title: RequiresCalculation
        type: boolean
      lines:
        title: Lines
        type: array
        items:
          $ref: '#/definitions/OrderLineDTO'
      vatAnalysis:
        title: VatAnalysis
        type: array
        items:
          $ref: '#/definitions/VatAnalysisDTO'
      tags:
        title: Tags
        type: array
        items:
          type: string
      sourceId:
        title: SourceId
        type: string
      sourceTags:
        title: SourceTags
        type: array
        items:
          type: string
      notes:
        title: Notes
        type: string
      updateDate:
        format: date-time
        title: UpdateDate
        type: string
      insertDate:
        format: date-time
        title: InsertDate
        type: string
      favorite:
        title: Favorite
        type: boolean
      userId:
        title: UserId
        type: string
      invoiceUrl:
        title: InvoiceUrl
        type: string
      notify:
        title: Notify
        type: string
      notified:
        title: Notified
        type: array
        items:
          type: string
      customFields:
        title: CustomFields
        type: array
        items:
          $ref: '#/definitions/OrderCustomFieldDTO'
      shippingLine:
        title: ShippingLine
        allOf:
          - $ref: '#/definitions/ShippingLineDTO'
      giftLines:
        title: GiftLines
        type: array
        items:
          $ref: '#/definitions/GiftLineDTO'
      expenseLines:
        title: ExpenseLines
        type: array
        items:
          $ref: '#/definitions/ExpenseLineDTO'
      payment:
        title: Payment
        allOf:
          - $ref: '#/definitions/OrderPaymentDTO'
      seriesId:
        title: SeriesId
        type: string
    additionalProperties: false
  OrderFilterTypeBaseFilter:
    type: object
    properties:
      filter:
        title: Filter
        enum:
          - TotalNetPrice
          - FinancialStatus
          - FulfillmentStatus
          - Code
          - OrderStatus
          - Tag
          - SourceTag
          - CustomerId
          - Status
          - Favorite
          - Search
          - CustomerCode
          - CustomerTin
          - InsertDate
        type: string
      operation:
        title: Operation
        enum:
          - eq
          - neq
          - gte
          - lte
          - gt
          - lt
          - OneOf
          - NotOneOf
          - Contains
          - NotContains
          - StartsWith
          - EndsWith
        type: string
      value:
        title: Value
    additionalProperties: false
  OrderLineDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      productId:
        title: ProductId
        type: string
      productVariantId:
        title: ProductVariantId
        type: string
      productTitle:
        title: ProductTitle
        type: string
      unitId:
        title: UnitId
        type: string
      salesUnitId:
        title: SalesUnitId
        type: string
      quantity:
        format: double
        title: Quantity
        type: number
      unitQuantity:
        format: double
        title: UnitQuantity
        type: number
      netValue:
        format: double
        title: NetValue
        type: number
      price:
        format: double
        title: Price
        type: number
      expenseValue:
        format: double
        title: ExpenseValue
        type: number
      priceValue1:
        format: double
        title: PriceValue1
        type: number
      priceValue2:
        format: double
        title: PriceValue2
        type: number
      priceValue3:
        format: double
        title: PriceValue3
        type: number
      unitPrice:
        format: double
        title: UnitPrice
        type: number
      lineValue:
        format: double
        title: LineValue
        type: number
      discountValue:
        format: double
        title: DiscountValue
        type: number
      discountRate:
        format: double
        title: DiscountRate
        type: number
      vatValue:
        format: double
        title: VatValue
        type: number
      vatRate:
        format: double
        title: VatRate
        type: number
      vatCode:
        title: VatCode
        type: string
      sku:
        title: Sku
        type: string
      dimension1Caption:
        title: Dimension1Caption
        type: string
      dimension2Caption:
        title: Dimension2Caption
        type: string
      dimension3Caption:
        title: Dimension3Caption
        type: string
      dimension1Value:
        title: Dimension1Value
        type: string
      dimension2Value:
        title: Dimension2Value
        type: string
      dimension3Value:
        title: Dimension3Value
        type: string
    additionalProperties: false
  OrderPaymentDTO:
    type: object
    properties:
      id:
        title: Id
        type: string
      code:
        title: Code
        type: string
      provider:
        title: Provider
        enum:
          - OnePay
          - EveryPay
          - Credit
          - PayPal
          - Deposit
          - PayGate
          - CardLink
          - EDPS
          - JCC
          - ignore
        type: string
      status:
        title: Status
        enum:
          - Submitted
          - Completed
          - Pending
          - Cancelled
          - Failed
          - Error
          - ignore
        type: string
      cardType:
        title: CardType
        enum:
          - Other
          - Visa
          - Mastercard
          - ignore
        type: string
      paymentDate:
        format: date-time
        title: PaymentDate
        type: string
      amount:
        format: double
        title: Amount
        type: number
      approvalCode:
        title: ApprovalCode
        type: string
      cardNumber:
        title: CardNumber
        type: string
      postDating:
        format: int32
        title: PostDating
        type: integer
      installments:
        format: int32
        title: Installments
        type: integer
      bankId:
        title: BankId
        type: string
      transactionId:
        title: TransactionId
        type: string
    additionalProperties: false
  OrderSortTypeBaseSort:
    type: object
    properties:
      field:
        title: Field
        enum:
          - Id
          - TotalNetPrice
          - InsertDate
          - UpdateDate
          - Code
        type: string
      order:
        title: Order
        enum:
          - asc
          - desc
        type: string
    additionalProperties: false
parameters: {}
responses: {}
securityDefinitions:
  API Key:
    type: apiKey
    in: header
    name: x-shopranos-apikey
security:
  - API Key: []
tags: []
