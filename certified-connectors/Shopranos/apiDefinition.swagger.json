{
    "swagger": "2.0",
    "info": {
        "title": "Shopranos",
        "description": "Elevate your business with Shopranos, linking ERP to B2B eCommerce. Trigger notifications and streamline approvals effortlessly, boosting efficiency and control. Unleash automation possibilities, driving success through seamless integration.",
        "version": "v1.0.1",
        "contact": {
            "name": "Shopranos",
            "url": "https://www.shopranos.eu",
            "email": "support@shopranos.eu"
        }
    },
    "host": "platform.shopranos.eu",
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "x-ms-connector-metadata": [
        {
            "propertyName": "Website",
            "propertyValue": "https://www.shopranos.eu"
        },
        {
            "propertyName": "Privacy Policy",
            "propertyValue": "https://www.shopranos.eu/privacy-policy"
        },
        {
            "propertyName": "Categories",
            "propertyValue": "Commerce"
        }
    ],
    "consumes": [],
    "produces": [],
    "paths": {
        "/api/AttributeSets": {
            "get": {
                "tags": [
                    "AttributeSets"
                ],
                "summary": "Attribute Set Query",
                "description": "Get attribute sets by search criteria",
                "operationId": "AttributeSets_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "x-ms-summary": "Title",
                        "description": "Query by title",
                        "in": "query",
                        "name": "Title",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "description": "Set the page number",
                        "name": "Page",
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Page"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Page Size"
                    },
                    {
                        "in": "query",
                        "name": "Sort",
                        "description": "Set sort field and direction",
                        "type": "string",
                        "x-ms-summary": "Sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AttributeSetDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "AttributeSets"
                ],
                "summary": "Attribute Set Create",
                "description": "Create attribute set",
                "operationId": "AttributeSets_POST_Create",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CreateAttributeSetDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/AttributeSetDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/AttributeSets/{id}": {
            "get": {
                "tags": [
                    "AttributeSets"
                ],
                "summary": "Attribute Set Get By Id",
                "description": "Get attribute set by id",
                "operationId": "AttributeSets_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the attribute set",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AttributeSetDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "AttributeSets"
                ],
                "summary": "Attribute Set Delete",
                "description": "Delete attribute set",
                "operationId": "AttributeSets_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the attribute set",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "AttributeSets"
                ],
                "summary": "Attribute Set Update",
                "description": "Update attribute set",
                "operationId": "AttributeSets_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the attribute set"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UpdateAttributeSetDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AttributeSetDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/AttributeSets/Import": {
            "post": {
                "tags": [
                    "AttributeSets"
                ],
                "summary": "Attribute Set Import",
                "description": "Import attribute sets",
                "operationId": "AttributeSets_POST_Import",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AttributeSetDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Attributes/{id}": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Attribute Get By Id",
                "description": "Get attribute by id",
                "operationId": "Attributes_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the attribute",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AttributeDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Attribute Delete",
                "description": "Delete attribute",
                "operationId": "Attributes_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the attribute",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Attribute Update",
                "description": "Update attribute",
                "operationId": "Attributes_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the attribute",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AttributeDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AttributeDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Attributes/code/{code}": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Attribute Get By Code",
                "description": "Get attribute by code",
                "operationId": "Attributes_GET_GetByCode",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "code",
                        "x-ms-summary": "Code",
                        "description": "Set the code of the attribute",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AttributeDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Attributes": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Attribute Query",
                "description": "Get attributes by search criteria",
                "operationId": "Attributes_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Status",
                        "type": "string",
                        "x-ms-summary": "Status",
                        "description": "Set the status of the attribute",
                        "enum": [
                            "Draft",
                            "Active",
                            "Archived",
                            "ignore"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Type",
                        "x-ms-summary": "Type",
                        "description": "Set the type of the attribute",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "IsFilterable",
                        "x-ms-summary": "Is Filterable",
                        "description": "Set the is filterable of the attribute",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "DisplayOnProduct",
                        "x-ms-summary": "Display On Product",
                        "description": "Set the display on product of the attribute",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "DisplayInList",
                        "x-ms-summary": "Display In List",
                        "description": "Set the display in list of the attribute",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "Search",
                        "x-ms-summary": "Search",
                        "description": "Set the search of the attribute",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the attribute",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AttributeDTO"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Attribute Create",
                "description": "Create attribute",
                "operationId": "Attributes_POST_Create",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AttributeDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/AttributeDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Attributes/import": {
            "post": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Attributes Import",
                "description": "Import attributes",
                "operationId": "Attributes_POST_Import",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AttributeDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Brand Query",
                "description": "Get brands by search criteria",
                "operationId": "Brands_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Status",
                        "type": "string",
                        "x-ms-summary": "Status",
                        "description": "Set the status of the brand",
                        "enum": [
                            "Draft",
                            "Active",
                            "Archived",
                            "ignore"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Search",
                        "x-ms-summary": "Search",
                        "description": "Set the search of the brand",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Code",
                        "x-ms-summary": "Code",
                        "description": "Set the code of the brand",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the brand",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrandDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Brand Create",
                "description": "Create brand",
                "operationId": "Brands_POST_Add",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BrandDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/BrandDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Brands/{brandId}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Brand Get by Id",
                "description": "Get brand by id",
                "operationId": "Brands_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "brandId",
                        "x-ms-summary": "Brand Id",
                        "description": "Set the id of the brand",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BrandDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Brand Delete",
                "description": "Delete brand",
                "operationId": "Brands_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "brandId",
                        "x-ms-summary": "Brand Id",
                        "description": "Set the id of the brand",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Brands"
                ],
                "summary": "Brand Update",
                "description": "Update brand",
                "operationId": "Brands_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "brandId",
                        "x-ms-summary": "Brand Id",
                        "description": "Set the id of the brand",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BrandDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Brands/alias/{brandAlias}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Brand Get by Alias",
                "description": "Get brand by alias",
                "operationId": "Brands_GET_GetByAlias",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "brandAlias",
                        "x-ms-summary": "Brand Alias",
                        "description": "Set the alias of the brand",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BrandDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Brands/import": {
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Brand Import",
                "description": "Import brands",
                "operationId": "Brands_POST_Import",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrandDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Brands/import/codes": {
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Brand Import By Code",
                "description": "Import brands by codes",
                "operationId": "Brands_POST_ImportByCodes",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrandDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Category Get By Id",
                "description": "Get category by id",
                "operationId": "Categories_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the category",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CategoryDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Category Delete",
                "description": "Delete category",
                "operationId": "Categories_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the category",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Category Update",
                "description": "Update category",
                "operationId": "Categories_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the category",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CategoryDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CategoryDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Categories/alias/{alias}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Category Get By alias",
                "description": "Get category by alias",
                "operationId": "Categories_GET_GetByAlias",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alias",
                        "x-ms-summary": "Alias",
                        "description": "Set the alias of the category",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CategoryDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Category Query",
                "description": "Get categories by search criteria",
                "operationId": "Categories_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Title",
                        "type": "string",
                        "x-ms-summary": "Title",
                        "description": "Set the title of the category"
                    },
                    {
                        "in": "query",
                        "name": "Id",
                        "type": "string",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the category"
                    },
                    {
                        "in": "query",
                        "name": "Search",
                        "type": "string",
                        "x-ms-summary": "Search",
                        "description": "Set the search keyword for the category"
                    },
                    {
                        "in": "query",
                        "name": "Code",
                        "x-ms-summary": "Code",
                        "description": "Set the code of the category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "ParentId",
                        "x-ms-summary": "Parent Id",
                        "description": "Set the parent id of the category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Path",
                        "x-ms-summary": "Path",
                        "description": "Set the path of the category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "ParentIds",
                        "x-ms-summary": "Parent Ids",
                        "description": "Set the parent ids of the category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Status",
                        "x-ms-summary": "Status",
                        "description": "Set the status of the category",
                        "type": "string",
                        "enum": [
                            "Draft",
                            "Active",
                            "Archived",
                            "ignore"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Category Create",
                "description": "Create category",
                "operationId": "Categories_POST_Create",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CategoryDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CategoryDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Categories/import": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Category Import",
                "description": "Import categories",
                "operationId": "Categories_POST_Import",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Collections": {
            "get": {
                "tags": [
                    "Collections"
                ],
                "summary": "Collection Query",
                "description": "Get collections by search criteria",
                "operationId": "Collections_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Status",
                        "x-ms-summary": "Status",
                        "description": "Set the status of the collection",
                        "type": "string",
                        "enum": [
                            "Draft",
                            "Active",
                            "Archived",
                            "ignore"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Title",
                        "x-ms-summary": "Title",
                        "description": "Set the title of the collection",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the collection",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CollectionDTO"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Collections"
                ],
                "summary": "Collection Create",
                "description": "Create collection",
                "operationId": "Collections_POST_Create",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CollectionDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Collections/{collectionId}": {
            "get": {
                "tags": [
                    "Collections"
                ],
                "summary": "Collection Get by Id",
                "description": "Get collection by id",
                "operationId": "Collections_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "collectionId",
                        "x-ms-summary": "Collection Id",
                        "description": "Set the id of the collection",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CollectionDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Collections"
                ],
                "summary": "Collection Delete",
                "description": "Delete collection",
                "operationId": "Collections_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "collectionId",
                        "x-ms-summary": "Collection Id",
                        "description": "Set the id of the collection",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Collections"
                ],
                "summary": "Collection Update",
                "description": "Update collection",
                "operationId": "Collections_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "collectionId",
                        "x-ms-summary": "Collection Id",
                        "description": "Set the id of the collection",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CollectionDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/products/{productId}/documentation": {
            "get": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Product Get Additional Content By Id",
                "description": "Get additional content by product id",
                "operationId": "Documentations_GET_GetDocumentationByProductId",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "productId",
                        "x-ms-summary": "Product Id",
                        "description": "Set the id of the product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DocumentationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Product Delete Additional Content",
                "description": "Delete additional content by product id",
                "operationId": "Documentations_DELETE_DeleteProduct",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "productId",
                        "x-ms-summary": "Product Id",
                        "description": "Set the id of the product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Product Updates Additional Content",
                "description": "Update additional content by product id",
                "operationId": "Documentations_PUT_UpdateProduct",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "productId",
                        "x-ms-summary": "Product Id",
                        "description": "Set the id of the product",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentationDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/products/{productId}/documentation/html": {
            "get": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Product Get Additional Content By Id (HTML)",
                "description": "Get additional content by product id",
                "operationId": "Documentations_GET_GetHtmlDocumentationByProductId",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "productId",
                        "x-ms-summary": "Product Id",
                        "description": "Set the id of the product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DocumentationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/categories/{categoryId}/documentation": {
            "get": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Category Get Additional Content By Id",
                "description": "Get additional content by category id",
                "operationId": "Documentations_GET_GetDocumentationByCategoryId",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryId",
                        "x-ms-summary": "Category Id",
                        "description": "Set the id of the category",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DocumentationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Category Delete Additional Content",
                "description": "Delete additional content by category id",
                "operationId": "Documentations_DELETE_DeleteCategory",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryId",
                        "x-ms-summary": "Category Id",
                        "description": "Set the id of the category",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Category Update Additional Content",
                "description": "Update additional content by category id",
                "operationId": "Documentations_PUT_UpdateCategory",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryId",
                        "x-ms-summary": "Category Id",
                        "description": "Set the id of the category",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentationDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/categories/{categoryId}/documentation/html": {
            "get": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Category Get Additional Content By Id (HTML)",
                "description": "Get additional content by category id",
                "operationId": "Documentations_GET_GetHtmlDocumentationByCategoryId",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryId",
                        "x-ms-summary": "Category Id",
                        "description": "Set the id of the category",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DocumentationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/collections/{collectionId}/documentation": {
            "get": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Collection Get Additional Content By Id",
                "description": "Get additional content by collection id",
                "operationId": "Documentations_GET_GetDocumentationByCollectionId",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "collectionId",
                        "x-ms-summary": "Collection Id",
                        "description": "Set the id of the collection",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DocumentationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Collection Delete Additional Content",
                "description": "Delete additional content by collection id",
                "operationId": "Documentations_DELETE_DeleteCollection",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "collectionId",
                        "x-ms-summary": "Collection Id",
                        "description": "Set the id of the collection",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Collection Update Additional Content",
                "description": "Update additional content by collection id",
                "operationId": "Documentations_PUT_UpdateCollection",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "collectionId",
                        "x-ms-summary": "Collection Id",
                        "description": "Set the id of the collection",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentationDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/collections/{collectionId}/documentation/html": {
            "get": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Collection Get Additional Content By Id (HTML)",
                "description": "Get additional content by collection id",
                "operationId": "Documentations_GET_GetHtmlDocumentationByCollectionId",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "collectionId",
                        "x-ms-summary": "Collection Id",
                        "description": "Set the id of the collection",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DocumentationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/brands/{brandId}/documentation": {
            "get": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Brand Get Additional Content By Id",
                "description": "Get additional content by brand id",
                "operationId": "Documentations_GET_GetDocumentationByBrandId",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "brandId",
                        "x-ms-summary": "Brand Id",
                        "description": "Set the id of the brand",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DocumentationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Brand Delete Additional Content",
                "description": "Delete additional content by brand id",
                "operationId": "Documentations_DELETE_DeleteBrand",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "brandId",
                        "x-ms-summary": "Brand Id",
                        "description": "Set the id of the brand",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Brand Update Additional Content",
                "description": "Update additional content by brand id",
                "operationId": "Documentations_PUT_UpdateBrand",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "brandId",
                        "x-ms-summary": "Brand Id",
                        "description": "Set the id of the brand",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentationDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/brands/{brandId}/documentation/html": {
            "get": {
                "tags": [
                    "Documentations"
                ],
                "summary": "Brand Get Additional Content By Id (HTML)",
                "description": "Get additional content by brand id",
                "operationId": "Documentations_GET_GetHtmlDocumentationByBrandId",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "brandId",
                        "x-ms-summary": "Brand Id",
                        "description": "Set the id of the brand",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DocumentationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Products/extended/{alias}": {
            "get": {
                "tags": [
                    "ExtendedProducts"
                ],
                "summary": "Product Extended Get By Alias",
                "description": "Get extended product by alias",
                "operationId": "ExtendedProducts_GET_GetByAlias",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "x-ms-summary": "Language",
                        "description": "Set the language",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "extend",
                        "x-ms-summary": "Extend",
                        "description": "Set the fields to extend",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "alias",
                        "x-ms-summary": "Alias",
                        "description": "Set the alias of the product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ExtendedProductDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Products/extended": {
            "get": {
                "tags": [
                    "ExtendedProducts"
                ],
                "summary": "Product Extended Query",
                "description": "Query extended products",
                "operationId": "ExtendedProducts_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "x-ms-summary": "Language",
                        "description": "Set the language",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "extend",
                        "x-ms-summary": "Extend",
                        "description": "Set the fields to extend",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Price",
                        "x-ms-summary": "Price",
                        "description": "Set the price",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "MaxPrice",
                        "type": "number",
                        "x-ms-summary": "Max Price",
                        "description": "Set the max price",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "Size1",
                        "x-ms-summary": "Size 1",
                        "description": "Set the size 1",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Size2",
                        "x-ms-summary": "Size 2",
                        "description": "Set the size 2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Size3",
                        "x-ms-summary": "Size 3",
                        "description": "Set the size 3",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "InsertDate",
                        "x-ms-summary": "Insert Date",
                        "description": "Set the insert date",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date1",
                        "x-ms-summary": "Date 1",
                        "description": "Set the date 1",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date2",
                        "x-ms-summary": "Date 2",
                        "description": "Set the date 2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date3",
                        "type": "string",
                        "x-ms-summary": "Date 3",
                        "description": "Set the date 3"
                    },
                    {
                        "in": "query",
                        "name": "Date1DateRange",
                        "type": "string",
                        "x-ms-summary": "Date 1 Date Range",
                        "description": "Set the date 1 date range"
                    },
                    {
                        "in": "query",
                        "name": "Date2DateRange",
                        "x-ms-summary": "Date 2 Date Range",
                        "description": "Set the date 2 date range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date3DateRange",
                        "x-ms-summary": "Date 3 Date Range",
                        "description": "Set the date 3 date range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "InsertDateRange",
                        "x-ms-summary": "Insert Date Range",
                        "description": "Set the insert date range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Search",
                        "x-ms-summary": "Search",
                        "description": "Set the search text",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "MinPrice",
                        "x-ms-summary": "Min Price",
                        "description": "Set the min price",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "Status",
                        "x-ms-summary": "Status",
                        "description": "Set the status",
                        "type": "string",
                        "enum": [
                            "Draft",
                            "Active",
                            "Archived",
                            "ignore"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Availability",
                        "x-ms-summary": "Availability",
                        "description": "Set the availability",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Tag",
                        "x-ms-summary": "Tag",
                        "description": "Set the tag",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "SourceTag",
                        "x-ms-summary": "Source Tag",
                        "description": "Set the source tag",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "PrivacyRule",
                        "x-ms-summary": "Privacy Rule",
                        "description": "Set the privacy rule",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Rule",
                        "x-ms-summary": "Rule",
                        "description": "Set the rule",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Condition",
                        "x-ms-summary": "Condition",
                        "description": "Set the condition",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Ids",
                        "x-ms-summary": "Ids",
                        "description": "Set the ids",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Id",
                        "x-ms-summary": "Id",
                        "description": "Set the id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "PriceRange",
                        "x-ms-summary": "Price Range",
                        "description": "Set the price range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "BrandCode",
                        "x-ms-summary": "Brand Code",
                        "description": "Set the brand code",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "BrandId",
                        "x-ms-summary": "Brand Id",
                        "description": "Set the brand id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Attribute",
                        "x-ms-summary": "Attribute",
                        "description": "Set the attribute",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "PathCategory",
                        "x-ms-summary": "Path Category",
                        "description": "Set the path category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "CategoryId",
                        "x-ms-summary": "Category Id",
                        "description": "Set the category id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "AdditionalCategoryId",
                        "x-ms-summary": "Additional Category Id",
                        "description": "Set the additional category id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "StockAvailabilityId",
                        "x-ms-summary": "Stock Availability Id",
                        "description": "Set the stock availability id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "AttributeSetId",
                        "x-ms-summary": "Attribute Set Id",
                        "description": "Set the attribute set id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "PriceCategoryId",
                        "x-ms-summary": "Price Category Id",
                        "description": "Set the price category id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "HasMedia",
                        "x-ms-summary": "Has Media",
                        "description": "Set the has media",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "MasterId",
                        "x-ms-summary": "Master Id",
                        "description": "Set the master id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExtendedProductDTO"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/collections/extended/{alias}": {
            "get": {
                "tags": [
                    "ExtentedCollections"
                ],
                "summary": "Collection Extended Get by Alias",
                "description": "Get extended collection by alias",
                "operationId": "ExtentedCollections_GET_GetByAlias",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "x-ms-summary": "Language",
                        "description": "Set the language",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "alias",
                        "x-ms-summary": "Alias",
                        "description": "Set the alias of the collection",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CollectionDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/collections/extended/{id}/id": {
            "get": {
                "tags": [
                    "ExtentedCollections"
                ],
                "summary": "Collection Extended Get by Id",
                "description": "Get extended collection by id",
                "operationId": "ExtentedCollections_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "x-ms-summary": "Language",
                        "description": "Set the language",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the collection",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CollectionDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/collections/extended": {
            "get": {
                "tags": [
                    "ExtentedCollections"
                ],
                "summary": "Collection Extended Query",
                "description": "Query extended collections",
                "operationId": "ExtentedCollections_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Status",
                        "x-ms-summary": "Status",
                        "description": "Set the status",
                        "type": "string",
                        "enum": [
                            "Draft",
                            "Active",
                            "Archived",
                            "ignore"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Title",
                        "x-ms-summary": "Title",
                        "description": "Set the title",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Id",
                        "x-ms-summary": "Id",
                        "description": "Set the id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "lang",
                        "x-ms-summary": "Language",
                        "description": "Set the language",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CollectionDTO"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Filters/clear": {
            "post": {
                "tags": [
                    "Filters"
                ],
                "summary": "Filters Purge",
                "description": "Purge filters",
                "operationId": "Filters_POST_BuildFilters",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/IcoTags/{id}": {
            "get": {
                "tags": [
                    "IcoTags"
                ],
                "summary": "Product Label Get By Id",
                "description": "Get product label by id",
                "operationId": "IcoTags_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the product label",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/IcoTagDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "IcoTags"
                ],
                "summary": "Product Label Delete",
                "description": "Delete product label by id",
                "operationId": "IcoTags_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the product label",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "IcoTags"
                ],
                "summary": "Product Label Update",
                "description": "Update product label by id",
                "operationId": "IcoTags_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the product label",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IcoTagDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/IcoTags": {
            "get": {
                "tags": [
                    "IcoTags"
                ],
                "summary": "Product Label Query",
                "description": "Query product labels",
                "operationId": "IcoTags_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Name",
                        "x-ms-summary": "Name",
                        "description": "Set the name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Status",
                        "x-ms-summary": "Status",
                        "description": "Set the status",
                        "type": "string",
                        "enum": [
                            "Draft",
                            "Active",
                            "Archived",
                            "ignore"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IcoTagDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "IcoTags"
                ],
                "summary": "Product Label Create",
                "description": "Create product label",
                "operationId": "IcoTags_POST_Add",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IcoTagDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/IcoTagDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/PrivacyGroups": {
            "get": {
                "tags": [
                    "PrivacyGroups"
                ],
                "summary": "Privacy Group Query",
                "description": "Query privacy groups",
                "operationId": "PrivacyGroups_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Title",
                        "x-ms-summary": "Title",
                        "description": "Set the title",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Status",
                        "x-ms-summary": "Status",
                        "description": "Set the status",
                        "type": "string",
                        "enum": [
                            "Draft",
                            "Active",
                            "Archived",
                            "ignore"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "CustomerIds",
                        "x-ms-summary": "Customer Ids",
                        "description": "Set the customer ids",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "CustomerGroupIds",
                        "x-ms-summary": "Customer Group Ids",
                        "description": "Set the customer group ids",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PrivacyGroupDTO"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "PrivacyGroups"
                ],
                "summary": "Privacy Group Create",
                "description": "Create privacy group",
                "operationId": "PrivacyGroups_POST_Create",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PrivacyGroupDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/PrivacyGroupDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/PrivacyGroups/{id}": {
            "get": {
                "tags": [
                    "PrivacyGroups"
                ],
                "summary": "Privacy Group Get By Id",
                "description": "Get privacy group by id",
                "operationId": "PrivacyGroups_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the privacy group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/PrivacyGroupDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PrivacyGroups"
                ],
                "summary": "Privacy Group Delete",
                "description": "Delete privacy group by id",
                "operationId": "PrivacyGroups_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the privacy group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "PrivacyGroups"
                ],
                "summary": "Privacy Group Update",
                "description": "Update privacy group by id",
                "operationId": "PrivacyGroups_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the privacy group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PrivacyGroupDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/ProductVariants/flat": {
            "get": {
                "tags": [
                    "ProductVariants"
                ],
                "summary": "Get all flat product variants",
                "description": "Get all flat product variants",
                "operationId": "ProductVariants_GET_GetAllFlat",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Price",
                        "type": "string",
                        "x-ms-summary": "Price",
                        "description": "Set the price"
                    },
                    {
                        "in": "query",
                        "name": "MaxPrice",
                        "type": "number",
                        "x-ms-summary": "Max Price",
                        "description": "Set the max price",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "Size1",
                        "x-ms-summary": "Size 1",
                        "description": "Set the size 1",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Size2",
                        "x-ms-summary": "Size 2",
                        "description": "Set the size 2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Size3",
                        "x-ms-summary": "Size 3",
                        "description": "Set the size 3",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "InsertDate",
                        "x-ms-summary": "Insert Date",
                        "description": "Set the insert date",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date1",
                        "x-ms-summary": "Date 1",
                        "description": "Set the date 1",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date2",
                        "x-ms-summary": "Date 2",
                        "description": "Set the date 2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date3",
                        "x-ms-summary": "Date 3",
                        "description": "Set the date 3",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date1DateRange",
                        "x-ms-summary": "Date 1 Date Range",
                        "description": "Set the date 1 date range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date2DateRange",
                        "x-ms-summary": "Date 2 Date Range",
                        "description": "Set the date 2 date range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date3DateRange",
                        "x-ms-summary": "Date 3 Date Range",
                        "description": "Set the date 3 date range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "InsertDateRange",
                        "x-ms-summary": "Insert Date Range",
                        "description": "Set the insert date range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Search",
                        "x-ms-summary": "Search",
                        "description": "Set the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "MinPrice",
                        "x-ms-summary": "Min Price",
                        "description": "Set the min price",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "Status",
                        "x-ms-summary": "Status",
                        "description": "Set the status",
                        "type": "string",
                        "enum": [
                            "Draft",
                            "Active",
                            "Archived",
                            "ignore"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Availability",
                        "x-ms-summary": "Availability",
                        "description": "Set the availability",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Tag",
                        "x-ms-summary": "Tag",
                        "description": "Set the tag",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "SourceTag",
                        "x-ms-summary": "Source Tag",
                        "description": "Set the source tag",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "PrivacyRule",
                        "x-ms-summary": "Privacy Rule",
                        "description": "Set the privacy rule",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Rule",
                        "x-ms-summary": "Rule",
                        "description": "Set the rule",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Condition",
                        "x-ms-summary": "Condition",
                        "description": "Set the condition",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Ids",
                        "x-ms-summary": "Ids",
                        "description": "Set the ids",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Id",
                        "x-ms-summary": "Id",
                        "description": "Set the id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "PriceRange",
                        "x-ms-summary": "Price Range",
                        "description": "Set the price range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "BrandCode",
                        "x-ms-summary": "Brand Code",
                        "description": "Set the brand code",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "BrandId",
                        "x-ms-summary": "Brand Id",
                        "description": "Set the brand id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Attribute",
                        "x-ms-summary": "Attribute",
                        "description": "Set the attribute",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "PathCategory",
                        "x-ms-summary": "Path Category",
                        "description": "Set the path category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "CategoryId",
                        "x-ms-summary": "Category Id",
                        "description": "Set the category id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "AdditionalCategoryId",
                        "x-ms-summary": "Additional Category Id",
                        "description": "Set the additional category id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "StockAvailabilityId",
                        "x-ms-summary": "Stock Availability Id",
                        "description": "Set the stock availability id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "AttributeSetId",
                        "x-ms-summary": "Attribute Set Id",
                        "description": "Set the attribute set id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "PriceCategoryId",
                        "x-ms-summary": "Price Category Id",
                        "description": "Set the price category id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "HasMedia",
                        "x-ms-summary": "Has Media",
                        "description": "Set the has media",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "MasterId",
                        "x-ms-summary": "Master Id",
                        "description": "Set the master id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Products": {
            "get": {
                "tags": [
                    "ProductsQuery"
                ],
                "summary": "Product Query",
                "description": "Query products",
                "operationId": "ProductsQuery_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Price",
                        "x-ms-summary": "Price",
                        "description": "Set the price",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "MaxPrice",
                        "x-ms-summary": "Max Price",
                        "description": "Set the max price",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "Size1",
                        "x-ms-summary": "Size 1",
                        "description": "Set the size 1",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Size2",
                        "x-ms-summary": "Size 2",
                        "description": "Set the size 2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Size3",
                        "x-ms-summary": "Size 3",
                        "description": "Set the size 3",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "InsertDate",
                        "x-ms-summary": "Insert Date",
                        "description": "Set the insert date",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date1",
                        "x-ms-summary": "Date 1",
                        "description": "Set the date 1",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date2",
                        "x-ms-summary": "Date 2",
                        "description": "Set the date 2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date3",
                        "x-ms-summary": "Date 3",
                        "description": "Set the date 3",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date1DateRange",
                        "x-ms-summary": "Date 1 Date Range",
                        "description": "Set the date 1 date range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date2DateRange",
                        "x-ms-summary": "Date 2 Date Range",
                        "description": "Set the date 2 date range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Date3DateRange",
                        "x-ms-summary": "Date 3 Date Range",
                        "description": "Set the date 3 date range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "InsertDateRange",
                        "x-ms-summary": "Insert Date Range",
                        "description": "Set the insert date range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Search",
                        "x-ms-summary": "Search",
                        "description": "Set the search text",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "MinPrice",
                        "x-ms-summary": "Min Price",
                        "description": "Set the min price",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "Status",
                        "x-ms-summary": "Status",
                        "description": "Set the status",
                        "type": "string",
                        "enum": [
                            "Draft",
                            "Active",
                            "Archived",
                            "ignore"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Availability",
                        "x-ms-summary": "Availability",
                        "description": "Set the availability",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Tag",
                        "x-ms-summary": "Tag",
                        "description": "Set the tag",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "SourceTag",
                        "x-ms-summary": "Source Tag",
                        "description": "Set the source tag",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "PrivacyRule",
                        "x-ms-summary": "Privacy Rule",
                        "description": "Set the privacy rule",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Rule",
                        "x-ms-summary": "Rule",
                        "description": "Set the rule",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Condition",
                        "x-ms-summary": "Condition",
                        "description": "Set the condition",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Ids",
                        "x-ms-summary": "Ids",
                        "description": "Set the ids",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Id",
                        "x-ms-summary": "Id",
                        "description": "Set the id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "PriceRange",
                        "x-ms-summary": "Price Range",
                        "description": "Set the price range",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "BrandCode",
                        "x-ms-summary": "Brand Code",
                        "description": "Set the brand code",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "BrandId",
                        "x-ms-summary": "Brand Id",
                        "description": "Set the brand id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Attribute",
                        "x-ms-summary": "Attribute",
                        "description": "Set the attribute",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "PathCategory",
                        "x-ms-summary": "Path Category",
                        "description": "Set the path category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "CategoryId",
                        "x-ms-summary": "Category Id",
                        "description": "Set the category id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "AdditionalCategoryId",
                        "x-ms-summary": "Additional Category Id",
                        "description": "Set the additional category id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "StockAvailabilityId",
                        "x-ms-summary": "Stock Availability Id",
                        "description": "Set the stock availability id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "AttributeSetId",
                        "x-ms-summary": "Attribute Set Id",
                        "description": "Set the attribute set id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "PriceCategoryId",
                        "x-ms-summary": "Price Category Id",
                        "description": "Set the price category id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "HasMedia",
                        "x-ms-summary": "Has Media",
                        "description": "Set the has media",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "MasterId",
                        "x-ms-summary": "Master Id",
                        "description": "Set the master id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the paginated list of products.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductDTO"
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform this action.",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "An error occurred while retrieving the products."
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Product Create",
                "description": "Create product",
                "operationId": "Products_POST_Create",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The Product object to create.",
                        "schema": {
                            "$ref": "#/definitions/ChangeProductDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ProductDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Products/{id}": {
            "get": {
                "tags": [
                    "ProductsQuery"
                ],
                "summary": "Product Get By Id",
                "description": "Get product by id",
                "operationId": "ProductsQuery_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The product was successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/ProductDTO"
                        }
                    },
                    "400": {
                        "description": "The product ID is invalid or missing.",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to manage the catalogue.",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "The product with the specified ID was not found.",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "An error occurred while retrieving the product."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Product Delete",
                "description": "Delete product by id",
                "operationId": "Products_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Product Update",
                "description": "Update product by id",
                "operationId": "Products_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the product",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The updated product data.",
                        "schema": {
                            "$ref": "#/definitions/ChangeProductDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Products/import/skus": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Product Import By SKU",
                "description": "Import products by SKU",
                "operationId": "Products_POST_ImportBySKUs",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ImportProductDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Products/import": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Product Import",
                "description": "Import products",
                "operationId": "Products_POST_Import",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "A list of ImportProductDTO objects containing product details.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ImportProductDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Products/alias/{alias}": {
            "get": {
                "tags": [
                    "ProductsQuery"
                ],
                "summary": "Product Get By Alias",
                "description": "Get product by alias",
                "operationId": "ProductsQuery_GET_GetByAlias",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alias",
                        "x-ms-summary": "Alias",
                        "description": "Set the alias of the product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ProductDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/RelatedProducts/{productId}/{variantId}": {
            "get": {
                "tags": [
                    "RelatedProducts"
                ],
                "summary": "Related Products Create",
                "description": "Create related products",
                "operationId": "RelatedProducts_GET_GetRelated",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "productId",
                        "x-ms-summary": "Product Id",
                        "description": "Set the product id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "variantId",
                        "x-ms-summary": "Variant Id",
                        "description": "Set the variant id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RelatedProductVariantDTO"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "RelatedProducts"
                ],
                "summary": "Related Products Delete",
                "description": "Delete related products",
                "operationId": "RelatedProducts_DELETE_DeleteRelated",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "productId",
                        "x-ms-summary": "Product Id",
                        "description": "Set the product id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "variantId",
                        "x-ms-summary": "Variant Id",
                        "description": "Set the variant id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "RelatedProducts"
                ],
                "summary": "Related Products Update",
                "description": "Update related products",
                "operationId": "RelatedProducts_PUT_UpdateRelated",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "productId",
                        "x-ms-summary": "Product Id",
                        "description": "Set the product id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "variantId",
                        "x-ms-summary": "Variant Id",
                        "description": "Set the variant id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RelatedProductVariantDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/StockAvailability": {
            "get": {
                "tags": [
                    "StockAvailability"
                ],
                "summary": "Stock Availability Query",
                "description": "Query stock availability",
                "operationId": "StockAvailability_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Title",
                        "x-ms-summary": "Title",
                        "description": "Set the title",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StockAvailabilityDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "StockAvailability"
                ],
                "summary": "Stock Availability Create",
                "description": "Create stock availability",
                "operationId": "StockAvailability_POST_Create",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CreateStockAvailabilityDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/StockAvailabilityDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/StockAvailability/{id}": {
            "get": {
                "tags": [
                    "StockAvailability"
                ],
                "summary": "Stock Availability Get By Id",
                "description": "Get stock availability by id",
                "operationId": "StockAvailability_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the stock availability",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/StockAvailabilityDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "StockAvailability"
                ],
                "summary": "Stock Availability Delete",
                "description": "Delete stock availability by id",
                "operationId": "StockAvailability_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the stock availability",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "StockAvailability"
                ],
                "summary": "Stock Availability Update",
                "description": "Update stock availability by id",
                "operationId": "StockAvailability_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the stock availability",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UpdateStockAvailabilityDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Tags/product/source/import": {
            "post": {
                "tags": [
                    "Tags"
                ],
                "summary": "Source Tag Product Import",
                "description": "Import source tag products",
                "operationId": "Tags_POST_Import",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SourceTagDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Units": {
            "get": {
                "tags": [
                    "Units"
                ],
                "summary": "Unit Query",
                "description": "Query units",
                "operationId": "Units_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Name",
                        "x-ms-summary": "Name",
                        "description": "Set the name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UnitDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Units"
                ],
                "summary": "Unit Create",
                "description": "Create unit",
                "operationId": "Units_POST_Add",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UnitDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/UnitDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Units/{id}": {
            "get": {
                "tags": [
                    "Units"
                ],
                "summary": "Unit Get By Id",
                "description": "Get unit by id",
                "operationId": "Units_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the unit",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UnitDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Units"
                ],
                "summary": "Unit Delete",
                "description": "Delete unit by id",
                "operationId": "Units_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the unit",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Units"
                ],
                "summary": "Unit Update",
                "description": "Update unit by id",
                "operationId": "Units_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Set the id of the unit",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UnitDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Units/import": {
            "post": {
                "tags": [
                    "Units"
                ],
                "summary": "Unit Import",
                "description": "Import units",
                "operationId": "Units_POST_Import",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UnitDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/webhook/register/product/created": {
            "x-ms-notification-content": {
                "description": "Product Created Webhook",
                "schema": {
                    "$ref": "#/definitions/ProductDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When a Product is Created",
                "description": "This operation triggers when a new product is created",
                "operationId": "ProductCreatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/product/updated": {
            "x-ms-notification-content": {
                "description": "Product Update Webhook",
                "schema": {
                    "$ref": "#/definitions/ProductDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When a Product is Updated",
                "description": "This operation triggers when a product is updated",
                "operationId": "ProductUpdatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/product/deleted": {
            "x-ms-notification-content": {
                "description": "Product Deleted Webhook",
                "schema": {
                    "$ref": "#/definitions/ProductDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook deleted"
                    }
                },
                "summary": "When a Product is Deleted",
                "description": "This operation triggers when a product is deleted",
                "operationId": "ProductDeletedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/category/created": {
            "x-ms-notification-content": {
                "description": "Category Created Webhook",
                "schema": {
                    "$ref": "#/definitions/CategoryDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When a Category is Created",
                "description": "This operation triggers when a new category is created",
                "operationId": "CategoryCreatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/category/updated": {
            "x-ms-notification-content": {
                "description": "Category Update Webhook",
                "schema": {
                    "$ref": "#/definitions/CategoryDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When a Category is Updated",
                "description": "This operation triggers when a category is updated",
                "operationId": "CategoryUpdatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/category/deleted": {
            "x-ms-notification-content": {
                "description": "Category Deleted Webhook",
                "schema": {
                    "$ref": "#/definitions/CategoryDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook deleted"
                    }
                },
                "summary": "When a Category is Deleted",
                "description": "This operation triggers when a product is deleted",
                "operationId": "CategoryDeletedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/brand/created": {
            "x-ms-notification-content": {
                "description": "Brand Created Webhook",
                "schema": {
                    "$ref": "#/definitions/BrandDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When a Brand is Created",
                "description": "This operation triggers when a new brand is created",
                "operationId": "BrandCreatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/brand/updated": {
            "x-ms-notification-content": {
                "description": "Brand Update Webhook",
                "schema": {
                    "$ref": "#/definitions/BrandDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When a Brand is Updated",
                "description": "This operation triggers when a brand is updated",
                "operationId": "BrandUpdatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/brand/deleted": {
            "x-ms-notification-content": {
                "description": "Brand Deleted Webhook",
                "schema": {
                    "$ref": "#/definitions/BrandDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook deleted"
                    }
                },
                "summary": "When a Brand is Deleted",
                "description": "This operation triggers when a brand is deleted",
                "operationId": "BrandDeletedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/unit/created": {
            "x-ms-notification-content": {
                "description": "Unit Created Webhook",
                "schema": {
                    "$ref": "#/definitions/UnitDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When a Unit is Created",
                "description": "This operation triggers when a new unit is created",
                "operationId": "UnitCreatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/unit/updated": {
            "x-ms-notification-content": {
                "description": "Unit Update Webhook",
                "schema": {
                    "$ref": "#/definitions/UnitDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When a Unit is Updated",
                "description": "This operation triggers when a unit is updated",
                "operationId": "UnitUpdatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/unit/deleted": {
            "x-ms-notification-content": {
                "description": "Unit Deleted Webhook",
                "schema": {
                    "$ref": "#/definitions/UnitDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook deleted"
                    }
                },
                "summary": "When a Unit is Deleted",
                "description": "This operation triggers when a unit is deleted",
                "operationId": "UnitDeletedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/attribute/created": {
            "x-ms-notification-content": {
                "description": "Attribute Created Webhook",
                "schema": {
                    "$ref": "#/definitions/AttributeDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When an Attribute is Created",
                "description": "This operation triggers when a new attribute is created",
                "operationId": "AttributeCreatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/attribute/updated": {
            "x-ms-notification-content": {
                "description": "Attribute Update Webhook",
                "schema": {
                    "$ref": "#/definitions/AttributeDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When an Attribute is Updated",
                "description": "This operation triggers when an attribute is updated",
                "operationId": "AttributeUpdatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/attribute/deleted": {
            "x-ms-notification-content": {
                "description": "Attribute Deleted Webhook",
                "schema": {
                    "$ref": "#/definitions/AttributeDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook deleted"
                    }
                },
                "summary": "When an Attibute is Deleted",
                "description": "This operation triggers when an attribute is deleted",
                "operationId": "AttributeDeletedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/attributeset/created": {
            "x-ms-notification-content": {
                "description": "AttributeSet Created Webhook",
                "schema": {
                    "$ref": "#/definitions/AttributeSetDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When an AttributeSet is Created",
                "description": "This operation triggers when a new attributeSet is created",
                "operationId": "AttributeSetCreatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/attributeset/updated": {
            "x-ms-notification-content": {
                "description": "AttributeSet Update Webhook",
                "schema": {
                    "$ref": "#/definitions/AttributeSetDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When an AttributeSet is Updated",
                "description": "This operation triggers when an attributeSet is updated",
                "operationId": "AttributeSetUpdatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/attributeset/deleted": {
            "x-ms-notification-content": {
                "description": "AttributeSet Deleted Webhook",
                "schema": {
                    "$ref": "#/definitions/AttributeSetDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook deleted"
                    }
                },
                "summary": "When an AttibuteSet is Deleted",
                "description": "This operation triggers when an attributeSet is deleted",
                "operationId": "AttributeSetDeletedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/checkout/created": {
            "x-ms-notification-content": {
                "description": "Chechout Created Webhook",
                "schema": {
                    "$ref": "#/definitions/CheckoutDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When a Checkout is Created",
                "description": "This operation triggers when a new checkout is created",
                "operationId": "CheckoutCreatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/checkout/completed": {
            "x-ms-notification-content": {
                "description": "Checkout Completed Webhook",
                "schema": {
                    "$ref": "#/definitions/CheckoutDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When a Checkout is Completed",
                "description": "This operation triggers when a product is updated",
                "operationId": "CheckoutCompletedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/customer/created": {
            "x-ms-notification-content": {
                "description": "Customer Created Webhook",
                "schema": {
                    "$ref": "#/definitions/CustomerDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When a Customer is Created",
                "description": "This operation triggers when a new Customer is created",
                "operationId": "CustomerCreatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/customer/updated": {
            "x-ms-notification-content": {
                "description": "Customer Update Webhook",
                "schema": {
                    "$ref": "#/definitions/CustomerDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When an Customer is Updated",
                "description": "This operation triggers when a customer is updated",
                "operationId": "CustomerUpdatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/customer/deleted": {
            "x-ms-notification-content": {
                "description": "Customer Deleted Webhook",
                "schema": {
                    "$ref": "#/definitions/CustomerDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook deleted"
                    }
                },
                "summary": "When a Customer is Deleted",
                "description": "This operation triggers when a Customer is deleted",
                "operationId": "CustomerDeletedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/order/created": {
            "x-ms-notification-content": {
                "description": "Order Created Webhook",
                "schema": {
                    "$ref": "#/definitions/OrderDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When an Order is Created",
                "description": "This operation triggers when a new order is created",
                "operationId": "OrderCreatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/order/updated": {
            "x-ms-notification-content": {
                "description": "Order Update Webhook",
                "schema": {
                    "$ref": "#/definitions/OrderDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When an Order is Updated",
                "description": "This operation triggers when an order is updated",
                "operationId": "OrderUpdatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/order/deleted": {
            "x-ms-notification-content": {
                "description": "Order Deleted Webhook",
                "schema": {
                    "$ref": "#/definitions/OrderDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook deleted"
                    }
                },
                "summary": "When an Order is Deleted",
                "description": "This operation triggers when an order is deleted",
                "operationId": "OrderDeletedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/inventorylevel/created": {
            "x-ms-notification-content": {
                "description": "Inventory Level Created Webhook",
                "schema": {
                    "$ref": "#/definitions/InventoryLevelDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When an Inventory Level is Created",
                "description": "This operation triggers when a new inventory level is created",
                "operationId": "InventoryLevelCreatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/inventorylevel/updated": {
            "x-ms-notification-content": {
                "description": "Order Update Webhook",
                "schema": {
                    "$ref": "#/definitions/InventoryLevelDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When an Inventory Level is Updated",
                "description": "This operation triggers when an inventory level is updated",
                "operationId": "InventoryLevelUpdatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/inventorylevel/deleted": {
            "x-ms-notification-content": {
                "description": "Inventory Level Deleted Webhook",
                "schema": {
                    "$ref": "#/definitions/InventoryLevelDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook deleted"
                    }
                },
                "summary": "When an Inventory Level is Deleted",
                "description": "This operation triggers when an inventory level is deleted",
                "operationId": "InventoryLevelDeletedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/payment/initiated": {
            "x-ms-notification-content": {
                "description": "Payment Initiated Webhook",
                "schema": {
                    "$ref": "#/definitions/PaymentDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook created"
                    }
                },
                "summary": "When a Payment is Initiated",
                "description": "This operation triggers when a payment is initiated",
                "operationId": "PaymentInitiatedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/webhook/register/payment/completed": {
            "x-ms-notification-content": {
                "description": "Payment Completed Webhook",
                "schema": {
                    "$ref": "#/definitions/PaymentDTO"
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Webhook deleted"
                    }
                },
                "summary": "When a Payment is Completed",
                "description": "This operation triggers when a payment is deleted",
                "operationId": "PaymentCompletedTrigger",
                "x-ms-trigger": "single",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Url": {
                                    "type": "string",
                                    "description": "Url",
                                    "x-ms-notification-url": true,
                                    "x-ms-visibility": "internal",
                                    "title": ""
                                },
                                "Title": {
                                    "type": "string",
                                    "description": "Title",
                                    "title": ""
                                }
                            },
                            "required": [
                                "Url",
                                "Title"
                            ]
                        }
                    }
                ]
            }
        },
        "/api/Cart/{token}": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Cart Get By Token",
                "description": "Get Cart by token",
                "operationId": "Cart_GET_GetCart",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "token",
                        "description": "Get Cart by token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CartDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Cart Delete",
                "description": "Delete Cart by token",
                "operationId": "Cart_DELETE_DeleteCart",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "token",
                        "description": "Delete Cart by token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Cart Update",
                "description": "Update Cart by token",
                "operationId": "Cart_PUT_UpdateCart",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "token",
                        "description": "Update Cart by token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UpdateCartDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CartDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Cart": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Cart Create",
                "description": "Create Cart",
                "operationId": "Cart_POST_CreateCart",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UpdateCartDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CartDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Cart/{token}/Items": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Cart Add Product",
                "description": "Add product to cart",
                "operationId": "Cart_POST_AddToCart",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "token",
                        "description": "Get Cart by token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "cartItemsDTO",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CreateCartItemDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CartDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Cart/{token}/Items/{productVariantId}": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Cart Remove Product",
                "description": "Remove product from cart",
                "operationId": "Cart_DELETE_RemoveFromCart",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "token",
                        "description": "Get Cart by token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "productVariantId",
                        "x-ms-summary": "productVariantId",
                        "description": "Get Cart by token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/ShoppingList/{alias}": {
            "get": {
                "tags": [
                    "ShoppingList"
                ],
                "summary": "Shopping List Get By Alias",
                "description": "Get a shopping list by alias",
                "operationId": "ShoppingList_GET_GetShoppingList",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alias",
                        "x-ms-summary": "Alias",
                        "description": "Alias",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ShoppingListDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ShoppingList"
                ],
                "summary": "Shopping List Delete",
                "description": "Delete a shopping list by alias",
                "operationId": "ShoppingList_DELETE_DeleteShoppingList",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alias",
                        "x-ms-summary": "Alias",
                        "description": "Get a shopping list by alias",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "ShoppingList"
                ],
                "summary": "Shopping List Update",
                "description": "Update a shopping list by alias",
                "operationId": "ShoppingList_PUT_UpdateShoppingList",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alias",
                        "x-ms-summary": "Alias",
                        "description": "Set a shopping list by alias",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ShoppingListDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/ShoppingList": {
            "get": {
                "tags": [
                    "ShoppingList"
                ],
                "summary": "Shopping List Get All",
                "description": "Get all shopping lists",
                "operationId": "ShoppingList_GET_GetAllShoppingList",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShoppingListDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "ShoppingList"
                ],
                "summary": "Shopping List Create",
                "description": "Create a shopping list",
                "operationId": "ShoppingList_POST_AddShoppingList",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ShoppingListDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ShoppingListDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Checkout/{token}": {
            "get": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Checkout Get By Token",
                "description": "Get a checkout by token",
                "operationId": "Checkout_GET_GetCheckout",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "Token",
                        "description": "Get a checkout by token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CheckoutDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Checkout Update",
                "description": "Update a checkout by token",
                "operationId": "Checkout_PUT_UpdateCheckout",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "Token",
                        "description": "Upate a checkout by token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UpdateCheckoutDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CheckoutDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Checkout/start/{token}": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Checkout Create",
                "description": "Create a checkout by token",
                "operationId": "Checkout_POST_StartCheckout",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "Token",
                        "description": "Create a checkout by token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "lang",
                        "x-ms-summary": "Language",
                        "description": "Language",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CheckoutDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Checkout/{token}/calculate": {
            "get": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Checkout Recalculate",
                "description": "Recalculate a checkout by token",
                "operationId": "Checkout_GET_CalculateCheckout",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "Token",
                        "description": "Recalculate a checkout by token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "lang",
                        "x-ms-summary": "Language",
                        "description": "Language",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CheckoutDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Checkout/{token}/payment/{providerId}": {
            "put": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Checkout Initiate Payment",
                "description": "Initiate a payment for a checkout by token",
                "operationId": "Checkout_PUT_StartPaymentCheckout",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "Token",
                        "description": "Initiate a payment for a checkout by token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "providerId",
                        "x-ms-summary": "ProviderId",
                        "description": "Set a payment provider for a checkout by token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CheckoutDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Checkout/complete/payment/{token}": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Checkout Complete Payment",
                "description": "Complete a payment for a checkout by token",
                "operationId": "Checkout_POST_CompletePayment",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "Token",
                        "description": "Complete a payment for a checkout by token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PaymentDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CheckoutDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Checkout/complete/{token}": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Checkout Complete",
                "description": "Complete a checkout by token",
                "operationId": "Checkout_POST_CompleteCheckout",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "Token",
                        "description": "Complete a checkout by token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UpdateCheckoutDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CheckoutDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Assortment/{customerId}": {
            "get": {
                "tags": [
                    "Assortment"
                ],
                "summary": "Assortment Get By Customer Id",
                "description": "Get an assortment by customer Id",
                "operationId": "Assortment_GET_GetCustomerAssortment",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "x-ms-summary": "Customer Id",
                        "description": "Get an assortment by customer Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AssortmentDTO"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assortment"
                ],
                "summary": "Assortment Delete",
                "operationId": "Assortment_DELETE_Delete",
                "description": "Delete an assortment by customer Id",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "x-ms-summary": "Customer Id",
                        "description": "Delete an assortment by customer Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Assortment"
                ],
                "summary": "Assortment Update",
                "description": "Update an assortment by customer Id",
                "operationId": "Assortment_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "x-ms-summary": "Customer Id",
                        "description": "Update an assortment by customer Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UpdateAssortmentDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AssortmentDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Assortment": {
            "get": {
                "tags": [
                    "Assortment"
                ],
                "summary": "Assortments Query",
                "description": "Get all assortments",
                "operationId": "Assortment_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "CustomerId",
                        "x-ms-summary": "Customer Id",
                        "description": "Get all assortments by customer Id",
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssortmentDTO"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Assortment"
                ],
                "summary": "Assortment Create",
                "description": "Create an assortment",
                "operationId": "Assortment_POST_Create",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CreateAssortmentDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/AssortmentDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Assortment/{customerId}/combinations": {
            "put": {
                "tags": [
                    "Assortment"
                ],
                "summary": "Assortment Update Combinations",
                "description": "Update an assortment combinations by customer Id",
                "operationId": "Assortment_PUT_UpdateCombinations",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "x-ms-summary": "Customer Id",
                        "description": "Update an assortment combinations by customer Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssortmentCombinationDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AssortmentDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/assortment/{customerid}/values": {
            "get": {
                "tags": [
                    "AssortmentValue"
                ],
                "summary": "Assortment Values Get By Customer Id",
                "description": "Get assortment values by customer Id",
                "operationId": "AssortmentValue_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerid",
                        "x-ms-summary": "Customer Id",
                        "description": "Get assortment values by customer Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Status",
                        "x-ms-summary": "Status",
                        "description": "Get assortment values by status",
                        "type": "string",
                        "enum": [
                            "Inactive",
                            "Active"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Source",
                        "x-ms-summary": "Source",
                        "description": "Get assortment values by source",
                        "type": "string",
                        "enum": [
                            "manual",
                            "orders"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Type",
                        "x-ms-summary": "Type",
                        "description": "Get assortment values by type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Category",
                        "x-ms-summary": "Category",
                        "description": "Get assortment values by category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Id",
                        "type": "string",
                        "x-ms-summary": "Id",
                        "description": "Get assortment values by id",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ProductId",
                        "x-ms-summary": "Product Id",
                        "description": "Get assortment values by product id",
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssortmentValueDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "AssortmentValue"
                ],
                "summary": "Assortment Value Delete By Customer Id and Assortment Id",
                "description": "Delete assortment values by customer Id and assortment Id",
                "operationId": "AssortmentValue_DELETE_Remove",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerid",
                        "x-ms-summary": "Customer Id",
                        "description": "Delete assortment values by customer Id and assortment Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Delete assortment values by id",
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "AssortmentValue"
                ],
                "summary": "Assortment Values Append By Customer Id",
                "description": "Append assortment values by customer Id",
                "operationId": "AssortmentValue_POST_Append",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerid",
                        "x-ms-summary": "Customer Id",
                        "description": "Append assortment values by customer Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AddAssortmentValueDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssortmentValueDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/assortment/{customerid}/values/all": {
            "delete": {
                "tags": [
                    "AssortmentValue"
                ],
                "summary": "Assortment Values Delete By Customer Id",
                "description": "Delete assortment values by customer Id",
                "operationId": "AssortmentValue_DELETE_RemoveAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerid",
                        "x-ms-summary": "Customer Id",
                        "description": "Delete assortment values by customer Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/assortment/{customerid}/values/source/{source}": {
            "delete": {
                "tags": [
                    "AssortmentValue"
                ],
                "summary": "Assortment Values Delete By Customer Source Id",
                "description": "Delete assortment values by customer Id and source",
                "operationId": "AssortmentValue_DELETE_RemoveBySource",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerid",
                        "x-ms-summary": "Customer Id",
                        "description": "Delete assortment values by customer Id and source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "source",
                        "x-ms-summary": "Source",
                        "description": "Delete assortment values by source",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "manual",
                            "orders"
                        ]
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/assortment/{customerId}/values/{id}": {
            "put": {
                "tags": [
                    "AssortmentValue"
                ],
                "summary": "Assortment Values Update By Customer Id and Assortment Id",
                "description": "Update assortment values by customer Id and assortment Id",
                "operationId": "AssortmentValue_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Update assortment values by id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "customerId",
                        "x-ms-summary": "Customer Id",
                        "description": "Update assortment values by customer Id and assortment Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateAssortmentValueDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/assortment/{customerId}/rebuild": {
            "get": {
                "tags": [
                    "AssortmentValue"
                ],
                "summary": "Assortment Values Rebuild By Customer Id",
                "operationId": "AssortmentValue_GET_Rebuild",
                "description": "Rebuild assortment values by customer Id",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "x-ms-summary": "Customer Id",
                        "description": "Rebuild assortment values by customer Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/CustomerGroups": {
            "get": {
                "tags": [
                    "CustomerGroups"
                ],
                "summary": "Customer Group Query",
                "operationId": "CustomerGroups_GET_GetAll",
                "description": "Get all customer groups",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Status",
                        "x-ms-summary": "Status",
                        "description": "Get all customer groups by status",
                        "type": "string",
                        "enum": [
                            "Draft",
                            "Active",
                            "Archived",
                            "ignore"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Title",
                        "type": "string",
                        "x-ms-summary": "Title",
                        "description": "Get all customer groups by title"
                    },
                    {
                        "in": "query",
                        "name": "Id",
                        "type": "string",
                        "x-ms-summary": "Id",
                        "description": "Get all customer groups by id",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerGroupDTO"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "CustomerGroups"
                ],
                "summary": "Customer Group Create",
                "description": "Create a customer group",
                "operationId": "CustomerGroups_POST_Create",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomerGroupDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CustomerGroupDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/CustomerGroups/{Id}": {
            "get": {
                "tags": [
                    "CustomerGroups"
                ],
                "summary": "Customer Group Get By Id",
                "description": "Get a customer group by Id",
                "operationId": "CustomerGroups_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "Id",
                        "x-ms-summary": "Id",
                        "description": "Get a customer group by Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CustomerGroupDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CustomerGroups"
                ],
                "summary": "Customer Group Delete",
                "description": "Delete a customer group by Id",
                "operationId": "CustomerGroups_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "Id",
                        "x-ms-summary": "Id",
                        "description": "Delete a customer group by Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "CustomerGroups"
                ],
                "summary": "Customer Group Update",
                "description": "Update a customer group by Id",
                "operationId": "CustomerGroups_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "Id",
                        "x-ms-summary": "Id",
                        "description": "Update a customer group by Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomerGroupDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/CustomerGroups/customers": {
            "get": {
                "tags": [
                    "CustomerGroups"
                ],
                "summary": "Customer group Get by Customer Id",
                "description": "Get a customer group by customer Id",
                "operationId": "CustomerGroups_GET_GetByCustomerId",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "customerId",
                        "x-ms-summary": "Customer Id",
                        "description": "Get a customer group by customer Id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CustomerGroupDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Customers/{customerId}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customer Get By Id",
                "description": "Get a customer by Id",
                "operationId": "Customers_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "x-ms-summary": "Customer Id",
                        "description": "Get a customer by Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CustomerDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customer Delete",
                "description": "Delete a customer by Id",
                "operationId": "Customers_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "x-ms-summary": "Customer Id",
                        "description": "Delete a customer by Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customer Update",
                "description": "Update a customer by Id",
                "operationId": "Customers_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "x-ms-summary": "Customer Id",
                        "description": "Update a customer by Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomerDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customer Query",
                "description": "Get all customers",
                "operationId": "Customers_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Status",
                        "x-ms-summary": "Status",
                        "description": "Get all customers by status",
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive",
                            "StopOrder",
                            "ignore"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "Search",
                        "type": "string",
                        "x-ms-summary": "Search",
                        "description": "Get all customers by search text"
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "type": "string",
                        "x-ms-summary": "Name",
                        "description": "Get all customers by name"
                    },
                    {
                        "in": "query",
                        "name": "SalesmanId",
                        "type": "string",
                        "x-ms-summary": "Salesman Id",
                        "description": "Get all customers by salesman id"
                    },
                    {
                        "in": "query",
                        "name": "Id",
                        "x-ms-summary": "Id",
                        "description": "Get all customers by id",
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customer Create",
                "description": "Create a customer",
                "operationId": "Customers_POST_Create",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomerDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CustomerDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Customers/import": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customer Import",
                "description": "Import customers",
                "operationId": "Customers_POST_Import",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerImportDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/InventoryLevels/availability": {
            "post": {
                "tags": [
                    "InventoryLevels"
                ],
                "summary": "Inventory Check Stock Availability",
                "description": "Check stock availability",
                "operationId": "InventoryLevels_POST_GetAvailability",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CheckInventoryAvailabilityLineDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/InventoryAvailabilityDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/InventoryLevels/reserve": {
            "post": {
                "tags": [
                    "InventoryLevels"
                ],
                "summary": "Inventory Reserve Stock Availability",
                "description": "Reserve stock availability",
                "operationId": "InventoryLevels_POST_ReserveStock",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CheckInventoryAvailabilityDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/InventoryAvailabilityDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/InventoryLevels/reserve/{token}": {
            "delete": {
                "tags": [
                    "InventoryLevels"
                ],
                "summary": "Inventory Unreserve Stock Availability",
                "description": "Unreserve stock availability",
                "operationId": "InventoryLevels_DELETE_UnReserveStock",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "x-ms-summary": "Token",
                        "description": "Unreserve stock availability by token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/InventoryAvailabilityDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/InventoryLevels/{id}": {
            "get": {
                "tags": [
                    "InventoryLevels"
                ],
                "summary": "Inventory Level Get By Id",
                "description": "Get a inventory level by Id",
                "operationId": "InventoryLevels_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Get a inventory level by Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/InventoryLevelDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "InventoryLevels"
                ],
                "summary": "Inventory Level Delete",
                "description": "Delete a inventory level by Id",
                "operationId": "InventoryLevels_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Delete a inventory level by Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "InventoryLevels"
                ],
                "summary": "Inventory Level Update",
                "description": "Update a inventory level by Id",
                "operationId": "InventoryLevels_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Update a inventory level by Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InventoryLevelDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/InventoryLevels": {
            "get": {
                "tags": [
                    "InventoryLevels"
                ],
                "summary": "Inventory Level Query",
                "description": "Get all inventory levels",
                "operationId": "InventoryLevels_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Location",
                        "type": "string",
                        "x-ms-summary": "Location",
                        "description": "Get all inventory levels by location"
                    },
                    {
                        "in": "query",
                        "name": "VariantIds",
                        "type": "string",
                        "x-ms-summary": "Variant Ids",
                        "description": "Get all inventory levels by variant ids"
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InventoryLevelDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "InventoryLevels"
                ],
                "summary": "Inventory Level Create",
                "description": "Create a inventory level",
                "operationId": "InventoryLevels_POST_Create",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InventoryLevelDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/InventoryLevelDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/InventoryLevels/variant/{variantId}": {
            "get": {
                "tags": [
                    "InventoryLevels"
                ],
                "summary": "Inventory Level Get By Variant Id",
                "description": "Get a inventory level by variant Id",
                "operationId": "InventoryLevels_GET_GetByVariantId",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "variantId",
                        "x-ms-summary": "Variant Id",
                        "description": "Get a inventory level by variant Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InventoryLevelDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/InventoryLevels/import": {
            "post": {
                "tags": [
                    "InventoryLevels"
                ],
                "summary": "Inventory Level Import",
                "description": "Import inventory levels",
                "operationId": "InventoryLevels_POST_Import",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InventoryLevelDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/locations/{locationId}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Location Get By Id",
                "description": "Get a location by Id",
                "operationId": "Location_GET_GetLocation",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "locationId",
                        "x-ms-summary": "Location Id",
                        "description": "Get a location by Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LocationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Location"
                ],
                "summary": "Location Delete",
                "description": "Delete a location by Id",
                "operationId": "Location_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "locationId",
                        "x-ms-summary": "Location Id",
                        "description": "Delete a location by Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Location"
                ],
                "summary": "Location Update",
                "description": "Update a location by Id",
                "operationId": "Location_PUT_Update",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "locationId",
                        "x-ms-summary": "Location Id",
                        "description": "Update a location by Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LocationDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/locations": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Location Get All",
                "description": "Get all locations",
                "operationId": "Location_GET_GetLocations",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LocationDTO"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "Location Create",
                "description": "Create a location",
                "operationId": "Location_POST_Create",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LocationDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/LocationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Order/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Order Get By Id",
                "description": "Get a order by Id",
                "operationId": "Order_GET_GetById",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Get a order by Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrderDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Order Delete",
                "description": "Delete a order by Id",
                "operationId": "Order_DELETE_Delete",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Delete a order by Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Order Update",
                "operationId": "Order_PUT_Update",
                "description": "Update a order by Id",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "x-ms-summary": "Id",
                        "description": "Update a order by Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrderDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Order": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Order Query",
                "description": "Get all orders",
                "operationId": "Order_GET_GetAll",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Search",
                        "type": "string",
                        "x-ms-summary": "Search",
                        "description": "Search text"
                    },
                    {
                        "in": "query",
                        "name": "Code",
                        "type": "string",
                        "x-ms-summary": "Code",
                        "description": "Get all orders by code"
                    },
                    {
                        "in": "query",
                        "name": "CustomerId",
                        "type": "string",
                        "x-ms-summary": "Customer Id",
                        "description": "Get all orders by customer id"
                    },
                    {
                        "in": "query",
                        "name": "OrderStatus",
                        "type": "string",
                        "x-ms-summary": "Order Status",
                        "description": "Get all orders by order status"
                    },
                    {
                        "in": "query",
                        "name": "Status",
                        "type": "string",
                        "x-ms-summary": "Status",
                        "description": "Get all orders by status"
                    },
                    {
                        "in": "query",
                        "name": "Tag",
                        "type": "string",
                        "x-ms-summary": "Tag",
                        "description": "Get all orders by tag"
                    },
                    {
                        "in": "query",
                        "name": "CustomerCode",
                        "type": "string",
                        "x-ms-summary": "Customer Code",
                        "description": "Get all orders by customer code"
                    },
                    {
                        "in": "query",
                        "name": "CustomerTin",
                        "type": "string",
                        "x-ms-summary": "Customer Tin",
                        "description": "Get all orders by customer tin"
                    },
                    {
                        "in": "query",
                        "name": "InsertDate",
                        "type": "string",
                        "x-ms-summary": "Insert Date",
                        "description": "Get all orders by insert date"
                    },
                    {
                        "in": "query",
                        "name": "Page",
                        "type": "integer",
                        "x-ms-summary": "Page",
                        "description": "Set the page number",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "PageSize",
                        "x-ms-summary": "Page Size",
                        "description": "Set the page size",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "x-ms-summary": "Sort",
                        "description": "Set sort field and direction",
                        "name": "Sort",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Order Create",
                "description": "Create a order",
                "operationId": "Order_POST_CreateOrder",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrderDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/Order/import": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Order Import",
                "description": "Import orders",
                "operationId": "Order_POST_Import",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ProblemDetails"
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "AttributeDTO": {
            "required": [
                "code",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "minLength": 1,
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "usedAsFilter": {
                    "title": "UsedAsFilter",
                    "type": "boolean"
                },
                "displayOnProduct": {
                    "title": "DisplayOnProduct",
                    "type": "boolean"
                },
                "displayOnList": {
                    "title": "DisplayOnList",
                    "type": "boolean"
                },
                "displayOnCompare": {
                    "title": "DisplayOnCompare",
                    "type": "boolean"
                },
                "type": {
                    "title": "Type",
                    "enum": [
                        "Text",
                        "Items",
                        "Color",
                        "Size"
                    ],
                    "type": "string"
                },
                "slug": {
                    "title": "Slug",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Active",
                        "Archived",
                        "ignore"
                    ],
                    "type": "string"
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "items": {
                    "title": "Items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttributeItemDTO"
                    }
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AttributeTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "AttributeItemDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "colorCode": {
                    "title": "ColorCode",
                    "type": "string"
                },
                "value": {
                    "title": "Value",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                },
                "slug": {
                    "title": "Slug",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AttributeItemTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "AttributeItemTranslationDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "title": "Value",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "AttributeSetDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "groups": {
                    "title": "Groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttributeSetGroupDTO"
                    }
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "AttributeSetExtendedDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "groups": {
                    "title": "Groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttributeSetGroupExtendedDTO"
                    }
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "AttributeSetGroupDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                },
                "items": {
                    "title": "Items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttributeSetItemDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "AttributeSetGroupExtendedDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                },
                "items": {
                    "title": "Items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttributeSetItemExtendedDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "AttributeSetItemDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                }
            },
            "additionalProperties": true
        },
        "AttributeSetItemExtendedDTO": {
            "type": "object",
            "properties": {
                "attributeId": {
                    "title": "AttributeId",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "value": {
                    "title": "Value",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "usedAsFilter": {
                    "title": "UsedAsFilter",
                    "type": "boolean"
                },
                "displayOnProduct": {
                    "title": "DisplayOnProduct",
                    "type": "boolean"
                },
                "displayOnList": {
                    "title": "DisplayOnList",
                    "type": "boolean"
                },
                "displayOnCompare": {
                    "title": "DisplayOnCompare",
                    "type": "boolean"
                },
                "slug": {
                    "title": "Slug",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                }
            },
            "additionalProperties": true
        },
        "AttributeTranslationDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "description": {
                    "title": "Description",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "BrandDTO": {
            "required": [
                "code",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "minLength": 1,
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "minLength": 1,
                    "type": "string"
                },
                "alias": {
                    "title": "Alias",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "metaTitle": {
                    "title": "MetaTitle",
                    "type": "string"
                },
                "metaDescription": {
                    "title": "MetaDescription",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Active",
                        "Archived",
                        "ignore"
                    ],
                    "type": "string"
                },
                "metaKeywords": {
                    "title": "MetaKeywords",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mediaItem": {
                    "title": "MediaItem",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MediaItemDTO"
                        }
                    ]
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/BrandTranslationDTO"
                        }
                    ]
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "seoTitle": {
                    "title": "SeoTitle",
                    "type": "string"
                },
                "seoDescription": {
                    "title": "SeoDescription",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "BrandTranslationDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "description": {
                    "title": "Description",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "metaTitle": {
                    "title": "MetaTitle",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "metaDescription": {
                    "title": "MetaDescription",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "seoTitle": {
                    "title": "SeoTitle",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "seoDescription": {
                    "title": "SeoDescription",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "CatalogFilterTypeRuleConditionDTO": {
            "type": "object",
            "properties": {
                "filter": {
                    "title": "Filter",
                    "enum": [
                        "Tag",
                        "SourceTag",
                        "BrandId",
                        "Price",
                        "MaxPrice",
                        "MinPrice",
                        "Status",
                        "PriceRange",
                        "Rule",
                        "Ids",
                        "PathCategory",
                        "Search",
                        "Attribute",
                        "CustomDim1",
                        "CustomDim2",
                        "CustomDim3",
                        "CategoryId",
                        "AdditionalCategoryId",
                        "StockAvailabilityId",
                        "AttributeSetId",
                        "PriceCategoryId",
                        "HasMedia",
                        "MasterId",
                        "Size1",
                        "Size2",
                        "Size3",
                        "Availability",
                        "InsertDate",
                        "Size4",
                        "Size5",
                        "Size6",
                        "Date1",
                        "Date2",
                        "Date3",
                        "InsertDateRange",
                        "Date1DateRange",
                        "Date2DateRange",
                        "Date3DateRange"
                    ],
                    "type": "string"
                },
                "not": {
                    "title": "Not",
                    "type": "boolean"
                },
                "value": {
                    "title": "Value"
                },
                "operator": {
                    "title": "Operator",
                    "enum": [
                        "And",
                        "Or",
                        "Xor",
                        "ignore"
                    ],
                    "type": "string"
                },
                "conditions": {
                    "title": "Conditions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CatalogFilterTypeRuleConditionDTO"
                    }
                },
                "operation": {
                    "title": "Operation",
                    "enum": [
                        "eq",
                        "neq",
                        "gte",
                        "lte",
                        "gt",
                        "lt",
                        "OneOf",
                        "NotOneOf",
                        "Contains",
                        "NotContains",
                        "StartsWith",
                        "EndsWith"
                    ],
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CategoryDTO": {
            "required": [
                "code",
                "title"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "minLength": 1,
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "minLength": 1,
                    "type": "string"
                },
                "alias": {
                    "title": "Alias",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                },
                "displayInMenu": {
                    "title": "DisplayInMenu",
                    "type": "boolean"
                },
                "displayAsList": {
                    "title": "DisplayAsList",
                    "type": "boolean"
                },
                "parentId": {
                    "title": "ParentId",
                    "type": "string"
                },
                "path": {
                    "title": "Path",
                    "type": "string"
                },
                "mediaItem": {
                    "title": "MediaItem",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MediaItemDTO"
                        }
                    ]
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CategoryTranslationDTO"
                        }
                    ]
                },
                "seoTitle": {
                    "title": "SeoTitle",
                    "type": "string"
                },
                "seoDescription": {
                    "title": "SeoDescription",
                    "type": "string"
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "metaTitle": {
                    "title": "MetaTitle",
                    "type": "string"
                },
                "metaDescription": {
                    "title": "MetaDescription",
                    "type": "string"
                },
                "metaKeywords": {
                    "title": "MetaKeywords",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "treeIds": {
                    "title": "TreeIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "link": {
                    "title": "Link",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Active",
                        "Archived",
                        "ignore"
                    ],
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CategoryTranslationDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "description": {
                    "title": "Description",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "metaTitle": {
                    "title": "MetaTitle",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "metaDescription": {
                    "title": "MetaDescription",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "seoTitle": {
                    "title": "SeoTitle",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "seoDescription": {
                    "title": "SeoDescription",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "path": {
                    "title": "Path",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "ChangeMediaItemDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "link": {
                    "title": "Link",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                },
                "alt": {
                    "title": "Alt",
                    "type": "string"
                },
                "mediaType": {
                    "title": "MediaType",
                    "enum": [
                        "Image",
                        "Video",
                        "Attachment",
                        "ignore"
                    ],
                    "type": "string"
                },
                "galleryId": {
                    "title": "GalleryId",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "ChangeProductAttributeDTO": {
            "type": "object",
            "properties": {
                "attributeId": {
                    "title": "AttributeId",
                    "type": "string"
                },
                "attributeItemId": {
                    "title": "AttributeItemId",
                    "type": "string"
                },
                "attributeItemValue": {
                    "title": "AttributeItemValue",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductAttributeTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "ChangeProductDTO": {
            "type": "object",
            "properties": {
                "mediaItems": {
                    "title": "MediaItems",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangeMediaItemDTO"
                    }
                },
                "attributes": {
                    "title": "Attributes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangeProductAttributeDTO"
                    }
                },
                "productVariants": {
                    "title": "ProductVariants",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangeProductVariantDTO"
                    }
                },
                "dimension1": {
                    "title": "Dimension1",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionDTO"
                        }
                    ]
                },
                "dimension2": {
                    "title": "Dimension2",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionDTO"
                        }
                    ]
                },
                "dimension3": {
                    "title": "Dimension3",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionDTO"
                        }
                    ]
                },
                "vatCode": {
                    "title": "VatCode",
                    "type": "string"
                },
                "reducedVatCode": {
                    "title": "ReducedVatCode",
                    "type": "string"
                },
                "vatRate": {
                    "format": "double",
                    "title": "VatRate",
                    "type": "number"
                },
                "reducedVatRate": {
                    "format": "double",
                    "title": "ReducedVatRate",
                    "type": "number"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "subTitle": {
                    "title": "SubTitle",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "alias": {
                    "title": "Alias",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Active",
                        "Archived",
                        "ignore"
                    ],
                    "type": "string"
                },
                "brandId": {
                    "title": "BrandId",
                    "type": "string"
                },
                "seoTitle": {
                    "title": "SeoTitle",
                    "type": "string"
                },
                "seoDescription": {
                    "title": "SeoDescription",
                    "type": "string"
                },
                "categoryId": {
                    "title": "CategoryId",
                    "type": "string"
                },
                "priceCategoryId": {
                    "title": "PriceCategoryId",
                    "type": "string"
                },
                "additionalCategoryIds": {
                    "title": "AdditionalCategoryIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "title": "Tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceTags": {
                    "title": "SourceTags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "additionalSearchTags": {
                    "title": "AdditionalSearchTags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pathCategories": {
                    "title": "PathCategories",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "availability": {
                    "title": "Availability",
                    "enum": [
                        "Unavailable",
                        "Available",
                        "ignore"
                    ],
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductTranslationDTO"
                        }
                    ]
                },
                "stopOrder": {
                    "title": "StopOrder",
                    "type": "boolean"
                },
                "metaTitle": {
                    "title": "MetaTitle",
                    "type": "string"
                },
                "metaDescription": {
                    "title": "MetaDescription",
                    "type": "string"
                },
                "metaKeywords": {
                    "title": "MetaKeywords",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stockAvailabilityModelId": {
                    "title": "StockAvailabilityModelId",
                    "type": "string"
                },
                "customFields": {
                    "title": "CustomFields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductCustomFieldDTO"
                    }
                },
                "attributeSetId": {
                    "title": "AttributeSetId",
                    "type": "string"
                },
                "sortDate": {
                    "format": "date-time",
                    "title": "SortDate",
                    "type": "string"
                },
                "assortments": {
                    "title": "Assortments",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "masterId": {
                    "title": "MasterId",
                    "type": "string"
                },
                "size1": {
                    "format": "double",
                    "title": "Size1",
                    "type": "number"
                },
                "size2": {
                    "format": "double",
                    "title": "Size2",
                    "type": "number"
                },
                "size3": {
                    "format": "double",
                    "title": "Size3",
                    "type": "number"
                },
                "size4": {
                    "format": "double",
                    "title": "Size4",
                    "type": "number"
                },
                "size5": {
                    "format": "double",
                    "title": "Size5",
                    "type": "number"
                },
                "size6": {
                    "format": "double",
                    "title": "Size6",
                    "type": "number"
                },
                "priority": {
                    "format": "int32",
                    "title": "Priority",
                    "type": "integer"
                },
                "date1": {
                    "format": "date-time",
                    "title": "Date1",
                    "type": "string"
                },
                "date2": {
                    "format": "date-time",
                    "title": "Date2",
                    "type": "string"
                },
                "date3": {
                    "format": "date-time",
                    "title": "Date3",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "ChangeProductVariantDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "maxLength": 150,
                    "minLength": 0,
                    "type": "string"
                },
                "gtin": {
                    "title": "Gtin",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                },
                "mpn": {
                    "title": "Mpn",
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string"
                },
                "unitPrice": {
                    "format": "double",
                    "title": "UnitPrice",
                    "type": "number"
                },
                "price": {
                    "format": "double",
                    "title": "Price",
                    "type": "number"
                },
                "msrp": {
                    "format": "double",
                    "title": "Msrp",
                    "type": "number"
                },
                "initialPrice": {
                    "format": "double",
                    "title": "InitialPrice",
                    "type": "number"
                },
                "dimension1ItemId": {
                    "title": "Dimension1ItemId",
                    "type": "string"
                },
                "dimension2ItemId": {
                    "title": "Dimension2ItemId",
                    "type": "string"
                },
                "dimension3ItemId": {
                    "title": "Dimension3ItemId",
                    "type": "string"
                },
                "shippingWeight": {
                    "format": "double",
                    "title": "ShippingWeight",
                    "type": "number"
                },
                "shippingLength": {
                    "format": "double",
                    "title": "ShippingLength",
                    "type": "number"
                },
                "shippingWidth": {
                    "format": "double",
                    "title": "ShippingWidth",
                    "type": "number"
                },
                "shippingHeight": {
                    "format": "double",
                    "title": "ShippingHeight",
                    "type": "number"
                },
                "sellOutOfStock": {
                    "title": "SellOutOfStock",
                    "type": "boolean"
                },
                "minimunStockLevel": {
                    "format": "double",
                    "title": "MinimunStockLevel",
                    "type": "number"
                },
                "unitId": {
                    "title": "UnitId",
                    "type": "string"
                },
                "salesUnitId": {
                    "title": "SalesUnitId",
                    "type": "string"
                },
                "salesUnitCondition": {
                    "format": "double",
                    "title": "SalesUnitCondition",
                    "type": "number"
                },
                "requiresShipping": {
                    "title": "RequiresShipping",
                    "type": "boolean"
                },
                "sku": {
                    "title": "Sku",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductVariantTranslationDTO"
                        }
                    ]
                },
                "minOrderQuantity": {
                    "format": "double",
                    "title": "MinOrderQuantity",
                    "type": "number"
                },
                "orderQuantityStep": {
                    "format": "double",
                    "title": "OrderQuantityStep",
                    "type": "number"
                },
                "mediaItem": {
                    "title": "MediaItem",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeMediaItemDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "CollectionDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "descriptionHtml": {
                    "title": "DescriptionHtml",
                    "type": "string"
                },
                "link": {
                    "title": "Link",
                    "maxLength": 150,
                    "minLength": 0,
                    "type": "string"
                },
                "alias": {
                    "title": "Alias",
                    "type": "string"
                },
                "mediaItem": {
                    "title": "MediaItem",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MediaItemDTO"
                        }
                    ]
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Active",
                        "Archived",
                        "ignore"
                    ],
                    "type": "string"
                },
                "mode": {
                    "title": "Mode",
                    "enum": [
                        "Automatic",
                        "Manual",
                        "ignore"
                    ],
                    "type": "string"
                },
                "publishedAt": {
                    "format": "date-time",
                    "title": "PublishedAt",
                    "type": "string"
                },
                "sortOrder": {
                    "title": "SortOrder",
                    "type": "string"
                },
                "productCount": {
                    "format": "int32",
                    "title": "ProductCount",
                    "type": "integer"
                },
                "productIds": {
                    "title": "ProductIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "products": {
                    "title": "Products",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductDTO"
                    }
                },
                "subCollections": {
                    "title": "SubCollections",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CollectionDTO"
                    }
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "tags": {
                    "title": "Tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "seoTitle": {
                    "title": "SeoTitle",
                    "type": "string"
                },
                "seoDescription": {
                    "title": "SeoDescription",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CollectionTranslationDTO"
                        }
                    ]
                },
                "metaTitle": {
                    "title": "MetaTitle",
                    "type": "string"
                },
                "metaDescription": {
                    "title": "MetaDescription",
                    "type": "string"
                },
                "metaKeywords": {
                    "title": "MetaKeywords",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "additionalProperties": true
        },
        "CollectionTranslationDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "description": {
                    "title": "Description",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "seoDescription": {
                    "title": "SeoDescription",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "seoTitle": {
                    "title": "SeoTitle",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "metaTitle": {
                    "title": "MetaTitle",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "metaDescription": {
                    "title": "MetaDescription",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "CreateAttributeSetDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "groups": {
                    "title": "Groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreateAttributeSetGroupDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "CreateAttributeSetGroupDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                },
                "items": {
                    "title": "Items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttributeSetItemDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "CreateStockAvailabilityDTO": {
            "type": "object",
            "properties": {
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/StockAvailabilityTranslationDTO"
                        }
                    ]
                },
                "lines": {
                    "title": "Lines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StockAvailabilityLineDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "DimensionDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "attributeId": {
                    "title": "AttributeId",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "items": {
                    "title": "Items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DimensionItemDTO"
                    }
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "DimensionExtendedDTO": {
            "type": "object",
            "properties": {
                "type": {
                    "title": "Type",
                    "enum": [
                        "Text",
                        "Items",
                        "Color",
                        "Size"
                    ],
                    "type": "string"
                },
                "usedAsFilter": {
                    "title": "UsedAsFilter",
                    "type": "boolean"
                },
                "displayOnProduct": {
                    "title": "DisplayOnProduct",
                    "type": "boolean"
                },
                "displayOnList": {
                    "title": "DisplayOnList",
                    "type": "boolean"
                },
                "displayOnCompare": {
                    "title": "DisplayOnCompare",
                    "type": "boolean"
                },
                "items": {
                    "title": "Items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DimensionItemExtendedDTO"
                    }
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "attributeId": {
                    "title": "AttributeId",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "DimensionItemDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "value": {
                    "title": "Value",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionItemTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "DimensionItemExtendedDTO": {
            "type": "object",
            "properties": {
                "textColor": {
                    "title": "TextColor",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "value": {
                    "title": "Value",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionItemTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "DimensionItemTranslationDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "title": "Value",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "DimensionTranslationDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "DocumentLineTranslationDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "description": {
                    "title": "Description",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "DocumentationDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "lines": {
                    "title": "Lines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DocumentationLineDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "DocumentationLineDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                },
                "mediaItem": {
                    "title": "MediaItem",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MediaItemDTO"
                        }
                    ]
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DocumentLineTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "ExpectedDTO": {
            "type": "object",
            "properties": {
                "deliveryDate": {
                    "format": "date-time",
                    "title": "DeliveryDate",
                    "type": "string"
                },
                "quantity": {
                    "format": "double",
                    "title": "Quantity",
                    "type": "number"
                },
                "totalQuantity": {
                    "format": "double",
                    "title": "TotalQuantity",
                    "type": "number"
                }
            },
            "additionalProperties": true
        },
        "ExtendedProductDTO": {
            "type": "object",
            "properties": {
                "productVariants": {
                    "title": "ProductVariants",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductVariantExtendedDTO"
                    }
                },
                "attributes": {
                    "title": "Attributes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductAttributeExtendedDTO"
                    }
                },
                "attributeSet": {
                    "title": "AttributeSet",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AttributeSetExtendedDTO"
                        }
                    ]
                },
                "icoTags": {
                    "title": "IcoTags",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductIcoTagExtendedDTO"
                    }
                },
                "extraFields": {
                    "title": "ExtraFields"
                },
                "dimension1": {
                    "title": "Dimension1",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionExtendedDTO"
                        }
                    ]
                },
                "dimension2": {
                    "title": "Dimension2",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionExtendedDTO"
                        }
                    ]
                },
                "dimension3": {
                    "title": "Dimension3",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionExtendedDTO"
                        }
                    ]
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "descriptionPlain": {
                    "title": "DescriptionPlain",
                    "type": "string"
                },
                "link": {
                    "title": "Link",
                    "type": "string"
                },
                "mediaItems": {
                    "title": "MediaItems",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MediaItemDTO"
                    }
                },
                "maxPrice": {
                    "format": "double",
                    "title": "MaxPrice",
                    "type": "number"
                },
                "minPrice": {
                    "format": "double",
                    "title": "MinPrice",
                    "type": "number"
                },
                "pathCategories": {
                    "title": "PathCategories",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "variantCount": {
                    "format": "int32",
                    "title": "VariantCount",
                    "type": "integer"
                },
                "additionalFeatures": {
                    "title": "AdditionalFeatures",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductAdditionalFeaturesDTO"
                        }
                    ]
                },
                "searchAttributes": {
                    "title": "SearchAttributes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vatCode": {
                    "title": "VatCode",
                    "type": "string"
                },
                "reducedVatCode": {
                    "title": "ReducedVatCode",
                    "type": "string"
                },
                "vatRate": {
                    "format": "double",
                    "title": "VatRate",
                    "type": "number"
                },
                "reducedVatRate": {
                    "format": "double",
                    "title": "ReducedVatRate",
                    "type": "number"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "subTitle": {
                    "title": "SubTitle",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "alias": {
                    "title": "Alias",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Active",
                        "Archived",
                        "ignore"
                    ],
                    "type": "string"
                },
                "brandId": {
                    "title": "BrandId",
                    "type": "string"
                },
                "seoTitle": {
                    "title": "SeoTitle",
                    "type": "string"
                },
                "seoDescription": {
                    "title": "SeoDescription",
                    "type": "string"
                },
                "categoryId": {
                    "title": "CategoryId",
                    "type": "string"
                },
                "priceCategoryId": {
                    "title": "PriceCategoryId",
                    "type": "string"
                },
                "additionalCategoryIds": {
                    "title": "AdditionalCategoryIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "title": "Tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceTags": {
                    "title": "SourceTags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "additionalSearchTags": {
                    "title": "AdditionalSearchTags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "availability": {
                    "title": "Availability",
                    "enum": [
                        "Unavailable",
                        "Available",
                        "ignore"
                    ],
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductTranslationDTO"
                        }
                    ]
                },
                "stopOrder": {
                    "title": "StopOrder",
                    "type": "boolean"
                },
                "metaTitle": {
                    "title": "MetaTitle",
                    "type": "string"
                },
                "metaDescription": {
                    "title": "MetaDescription",
                    "type": "string"
                },
                "metaKeywords": {
                    "title": "MetaKeywords",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stockAvailabilityModelId": {
                    "title": "StockAvailabilityModelId",
                    "type": "string"
                },
                "customFields": {
                    "title": "CustomFields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductCustomFieldDTO"
                    }
                },
                "attributeSetId": {
                    "title": "AttributeSetId",
                    "type": "string"
                },
                "sortDate": {
                    "format": "date-time",
                    "title": "SortDate",
                    "type": "string"
                },
                "assortments": {
                    "title": "Assortments",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "masterId": {
                    "title": "MasterId",
                    "type": "string"
                },
                "size1": {
                    "format": "double",
                    "title": "Size1",
                    "type": "number"
                },
                "size2": {
                    "format": "double",
                    "title": "Size2",
                    "type": "number"
                },
                "size3": {
                    "format": "double",
                    "title": "Size3",
                    "type": "number"
                },
                "size4": {
                    "format": "double",
                    "title": "Size4",
                    "type": "number"
                },
                "size5": {
                    "format": "double",
                    "title": "Size5",
                    "type": "number"
                },
                "size6": {
                    "format": "double",
                    "title": "Size6",
                    "type": "number"
                },
                "priority": {
                    "format": "int32",
                    "title": "Priority",
                    "type": "integer"
                },
                "date1": {
                    "format": "date-time",
                    "title": "Date1",
                    "type": "string"
                },
                "date2": {
                    "format": "date-time",
                    "title": "Date2",
                    "type": "string"
                },
                "date3": {
                    "format": "date-time",
                    "title": "Date3",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "IcoTagDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "icon": {
                    "title": "Icon",
                    "type": "string"
                },
                "backgroundColor": {
                    "title": "BackgroundColor",
                    "type": "string"
                },
                "textColor": {
                    "title": "TextColor",
                    "type": "string"
                },
                "productIds": {
                    "title": "ProductIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ruleEnabled": {
                    "title": "RuleEnabled",
                    "type": "boolean"
                },
                "dateFrom": {
                    "format": "date-time",
                    "title": "DateFrom",
                    "type": "string"
                },
                "dateTo": {
                    "format": "date-time",
                    "title": "DateTo",
                    "type": "string"
                },
                "mode": {
                    "title": "Mode",
                    "enum": [
                        "Automatic",
                        "Manual",
                        "ignore"
                    ],
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Active",
                        "Archived",
                        "ignore"
                    ],
                    "type": "string"
                },
                "rule": {
                    "title": "Rule",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CatalogFilterTypeRuleConditionDTO"
                        }
                    ]
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/IcoTagTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "IcoTagTranslationDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "ImportProductDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "categoryCode": {
                    "title": "CategoryCode",
                    "type": "string"
                },
                "mediaItems": {
                    "title": "MediaItems",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangeMediaItemDTO"
                    }
                },
                "attributes": {
                    "title": "Attributes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangeProductAttributeDTO"
                    }
                },
                "productVariants": {
                    "title": "ProductVariants",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangeProductVariantDTO"
                    }
                },
                "dimension1": {
                    "title": "Dimension1",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionDTO"
                        }
                    ]
                },
                "dimension2": {
                    "title": "Dimension2",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionDTO"
                        }
                    ]
                },
                "dimension3": {
                    "title": "Dimension3",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionDTO"
                        }
                    ]
                },
                "vatCode": {
                    "title": "VatCode",
                    "type": "string"
                },
                "reducedVatCode": {
                    "title": "ReducedVatCode",
                    "type": "string"
                },
                "vatRate": {
                    "format": "double",
                    "title": "VatRate",
                    "type": "number"
                },
                "reducedVatRate": {
                    "format": "double",
                    "title": "ReducedVatRate",
                    "type": "number"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "subTitle": {
                    "title": "SubTitle",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "alias": {
                    "title": "Alias",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Active",
                        "Archived",
                        "ignore"
                    ],
                    "type": "string"
                },
                "brandId": {
                    "title": "BrandId",
                    "type": "string"
                },
                "seoTitle": {
                    "title": "SeoTitle",
                    "type": "string"
                },
                "seoDescription": {
                    "title": "SeoDescription",
                    "type": "string"
                },
                "categoryId": {
                    "title": "CategoryId",
                    "type": "string"
                },
                "priceCategoryId": {
                    "title": "PriceCategoryId",
                    "type": "string"
                },
                "additionalCategoryIds": {
                    "title": "AdditionalCategoryIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "title": "Tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceTags": {
                    "title": "SourceTags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "additionalSearchTags": {
                    "title": "AdditionalSearchTags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pathCategories": {
                    "title": "PathCategories",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "availability": {
                    "title": "Availability",
                    "enum": [
                        "Unavailable",
                        "Available",
                        "ignore"
                    ],
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductTranslationDTO"
                        }
                    ]
                },
                "stopOrder": {
                    "title": "StopOrder",
                    "type": "boolean"
                },
                "metaTitle": {
                    "title": "MetaTitle",
                    "type": "string"
                },
                "metaDescription": {
                    "title": "MetaDescription",
                    "type": "string"
                },
                "metaKeywords": {
                    "title": "MetaKeywords",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stockAvailabilityModelId": {
                    "title": "StockAvailabilityModelId",
                    "type": "string"
                },
                "customFields": {
                    "title": "CustomFields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductCustomFieldDTO"
                    }
                },
                "attributeSetId": {
                    "title": "AttributeSetId",
                    "type": "string"
                },
                "sortDate": {
                    "format": "date-time",
                    "title": "SortDate",
                    "type": "string"
                },
                "assortments": {
                    "title": "Assortments",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "masterId": {
                    "title": "MasterId",
                    "type": "string"
                },
                "size1": {
                    "format": "double",
                    "title": "Size1",
                    "type": "number"
                },
                "size2": {
                    "format": "double",
                    "title": "Size2",
                    "type": "number"
                },
                "size3": {
                    "format": "double",
                    "title": "Size3",
                    "type": "number"
                },
                "size4": {
                    "format": "double",
                    "title": "Size4",
                    "type": "number"
                },
                "size5": {
                    "format": "double",
                    "title": "Size5",
                    "type": "number"
                },
                "size6": {
                    "format": "double",
                    "title": "Size6",
                    "type": "number"
                },
                "priority": {
                    "format": "int32",
                    "title": "Priority",
                    "type": "integer"
                },
                "date1": {
                    "format": "date-time",
                    "title": "Date1",
                    "type": "string"
                },
                "date2": {
                    "format": "date-time",
                    "title": "Date2",
                    "type": "string"
                },
                "date3": {
                    "format": "date-time",
                    "title": "Date3",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "LineTranslationDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "title": "Message",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "MediaItemDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "galleryId": {
                    "title": "GalleryId",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string",
                    "readOnly": true
                },
                "link": {
                    "title": "Link",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                },
                "alt": {
                    "title": "Alt",
                    "type": "string"
                },
                "mediaType": {
                    "title": "MediaType",
                    "enum": [
                        "Image",
                        "Video",
                        "Attachment",
                        "ignore"
                    ],
                    "type": "string"
                },
                "width": {
                    "format": "int32",
                    "title": "Width",
                    "type": "integer"
                },
                "height": {
                    "format": "int32",
                    "title": "Height",
                    "type": "integer"
                }
            },
            "additionalProperties": true
        },
        "MultiLangDTO": {
            "type": "object",
            "properties": {
                "el": {
                    "title": "EL",
                    "type": "string"
                },
                "en": {
                    "title": "EN",
                    "type": "string"
                },
                "ro": {
                    "title": "RO",
                    "type": "string"
                },
                "de": {
                    "title": "DE",
                    "type": "string"
                },
                "fr": {
                    "title": "FR",
                    "type": "string"
                },
                "it": {
                    "title": "IT",
                    "type": "string"
                },
                "bg": {
                    "title": "BG",
                    "type": "string"
                },
                "sq": {
                    "title": "SQ",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "PrivacyGroupDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Active",
                        "Archived",
                        "ignore"
                    ],
                    "type": "string"
                },
                "mode": {
                    "title": "Mode",
                    "enum": [
                        "Automatic",
                        "Manual",
                        "ignore"
                    ],
                    "type": "string"
                },
                "productIds": {
                    "title": "ProductIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "rule": {
                    "title": "Rule",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CatalogFilterTypeRuleConditionDTO"
                        }
                    ]
                },
                "customerGroupIds": {
                    "title": "CustomerGroupIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customerIds": {
                    "title": "CustomerIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "additionalProperties": true
        },
        "ProblemDetails": {
            "type": "object",
            "properties": {
                "type": {
                    "title": "Type",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "title": "Status",
                    "type": "integer"
                },
                "detail": {
                    "title": "Detail",
                    "type": "string"
                },
                "instance": {
                    "title": "Instance",
                    "type": "string"
                }
            },
            "additionalProperties": {}
        },
        "ProductAdditionalFeaturesDTO": {
            "type": "object",
            "properties": {
                "icoTags": {
                    "title": "IcoTags",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductIcoTagExtendedDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "ProductAttributeDTO": {
            "type": "object",
            "properties": {
                "attributeId": {
                    "title": "AttributeId",
                    "type": "string"
                },
                "attributeItemId": {
                    "title": "AttributeItemId",
                    "type": "string"
                },
                "attributeItemValue": {
                    "title": "AttributeItemValue",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductAttributeTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "ProductAttributeExtendedDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "slug": {
                    "title": "Slug",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "usedAsFilter": {
                    "title": "UsedAsFilter",
                    "type": "boolean"
                },
                "displayOnProduct": {
                    "title": "DisplayOnProduct",
                    "type": "boolean"
                },
                "displayOnList": {
                    "title": "DisplayOnList",
                    "type": "boolean"
                },
                "displayOnCompare": {
                    "title": "DisplayOnCompare",
                    "type": "boolean"
                },
                "attributeId": {
                    "title": "AttributeId",
                    "type": "string"
                },
                "attributeItemId": {
                    "title": "AttributeItemId",
                    "type": "string"
                },
                "attributeItemValue": {
                    "title": "AttributeItemValue",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductAttributeTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "ProductAttributeTranslationDTO": {
            "type": "object",
            "properties": {
                "attributeItemValue": {
                    "title": "AttributeItemValue",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "ProductCustomFieldDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "value": {
                    "title": "Value"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductCustomFieldTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "ProductCustomFieldTranslationDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "title": "Value",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "ProductDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "descriptionPlain": {
                    "title": "DescriptionPlain",
                    "type": "string"
                },
                "link": {
                    "title": "Link",
                    "type": "string"
                },
                "mediaItems": {
                    "title": "MediaItems",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MediaItemDTO"
                    }
                },
                "productVariants": {
                    "title": "ProductVariants",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductVariantDTO"
                    }
                },
                "attributes": {
                    "title": "Attributes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductAttributeDTO"
                    }
                },
                "maxPrice": {
                    "format": "double",
                    "title": "MaxPrice",
                    "type": "number"
                },
                "minPrice": {
                    "format": "double",
                    "title": "MinPrice",
                    "type": "number"
                },
                "pathCategories": {
                    "title": "PathCategories",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "variantCount": {
                    "format": "int32",
                    "title": "VariantCount",
                    "type": "integer"
                },
                "additionalFeatures": {
                    "title": "AdditionalFeatures",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductAdditionalFeaturesDTO"
                        }
                    ]
                },
                "dimension1": {
                    "title": "Dimension1",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionDTO"
                        }
                    ]
                },
                "dimension2": {
                    "title": "Dimension2",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionDTO"
                        }
                    ]
                },
                "dimension3": {
                    "title": "Dimension3",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DimensionDTO"
                        }
                    ]
                },
                "searchAttributes": {
                    "title": "SearchAttributes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vatCode": {
                    "title": "VatCode",
                    "type": "string"
                },
                "reducedVatCode": {
                    "title": "ReducedVatCode",
                    "type": "string"
                },
                "vatRate": {
                    "format": "double",
                    "title": "VatRate",
                    "type": "number"
                },
                "reducedVatRate": {
                    "format": "double",
                    "title": "ReducedVatRate",
                    "type": "number"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "subTitle": {
                    "title": "SubTitle",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "alias": {
                    "title": "Alias",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Active",
                        "Archived",
                        "ignore"
                    ],
                    "type": "string"
                },
                "brandId": {
                    "title": "BrandId",
                    "type": "string"
                },
                "seoTitle": {
                    "title": "SeoTitle",
                    "type": "string"
                },
                "seoDescription": {
                    "title": "SeoDescription",
                    "type": "string"
                },
                "categoryId": {
                    "title": "CategoryId",
                    "type": "string"
                },
                "priceCategoryId": {
                    "title": "PriceCategoryId",
                    "type": "string"
                },
                "additionalCategoryIds": {
                    "title": "AdditionalCategoryIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "title": "Tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceTags": {
                    "title": "SourceTags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "additionalSearchTags": {
                    "title": "AdditionalSearchTags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "availability": {
                    "title": "Availability",
                    "enum": [
                        "Unavailable",
                        "Available",
                        "ignore"
                    ],
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductTranslationDTO"
                        }
                    ]
                },
                "stopOrder": {
                    "title": "StopOrder",
                    "type": "boolean"
                },
                "metaTitle": {
                    "title": "MetaTitle",
                    "type": "string"
                },
                "metaDescription": {
                    "title": "MetaDescription",
                    "type": "string"
                },
                "metaKeywords": {
                    "title": "MetaKeywords",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stockAvailabilityModelId": {
                    "title": "StockAvailabilityModelId",
                    "type": "string"
                },
                "customFields": {
                    "title": "CustomFields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductCustomFieldDTO"
                    }
                },
                "attributeSetId": {
                    "title": "AttributeSetId",
                    "type": "string"
                },
                "sortDate": {
                    "format": "date-time",
                    "title": "SortDate",
                    "type": "string"
                },
                "assortments": {
                    "title": "Assortments",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "masterId": {
                    "title": "MasterId",
                    "type": "string"
                },
                "size1": {
                    "format": "double",
                    "title": "Size1",
                    "type": "number"
                },
                "size2": {
                    "format": "double",
                    "title": "Size2",
                    "type": "number"
                },
                "size3": {
                    "format": "double",
                    "title": "Size3",
                    "type": "number"
                },
                "size4": {
                    "format": "double",
                    "title": "Size4",
                    "type": "number"
                },
                "size5": {
                    "format": "double",
                    "title": "Size5",
                    "type": "number"
                },
                "size6": {
                    "format": "double",
                    "title": "Size6",
                    "type": "number"
                },
                "priority": {
                    "format": "int32",
                    "title": "Priority",
                    "type": "integer"
                },
                "date1": {
                    "format": "date-time",
                    "title": "Date1",
                    "type": "string"
                },
                "date2": {
                    "format": "date-time",
                    "title": "Date2",
                    "type": "string"
                },
                "date3": {
                    "format": "date-time",
                    "title": "Date3",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "ProductIcoTagExtendedDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "icon": {
                    "title": "Icon",
                    "type": "string"
                },
                "backgroundColor": {
                    "title": "BackgroundColor",
                    "type": "string"
                },
                "textColor": {
                    "title": "TextColor",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "ProductStockAvailabilityExtendedDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "title": "Message",
                    "type": "string"
                },
                "image": {
                    "title": "Image",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MediaItemDTO"
                        }
                    ]
                },
                "color": {
                    "title": "Color",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "ProductTranslationDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "subTitle": {
                    "title": "SubTitle",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "description": {
                    "title": "Description",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "metaDescription": {
                    "title": "MetaDescription",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "metaTitle": {
                    "title": "MetaTitle",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "seoDescription": {
                    "title": "SeoDescription",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                },
                "seoTitle": {
                    "title": "SeoTitle",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "ProductVariantAdditionalFeaturesDTO": {
            "type": "object",
            "properties": {
                "stockAvailability": {
                    "title": "StockAvailability",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductVariantStockAvailabilityDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "ProductVariantDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "mediaItem": {
                    "title": "MediaItem",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MediaItemDTO"
                        }
                    ]
                },
                "title": {
                    "title": "Title",
                    "maxLength": 150,
                    "minLength": 0,
                    "type": "string"
                },
                "gtin": {
                    "title": "Gtin",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                },
                "mpn": {
                    "title": "Mpn",
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string"
                },
                "unitPrice": {
                    "format": "double",
                    "title": "UnitPrice",
                    "type": "number"
                },
                "price": {
                    "format": "double",
                    "title": "Price",
                    "type": "number"
                },
                "msrp": {
                    "format": "double",
                    "title": "Msrp",
                    "type": "number"
                },
                "quantity": {
                    "format": "double",
                    "title": "Quantity",
                    "type": "number"
                },
                "initialPrice": {
                    "format": "double",
                    "title": "InitialPrice",
                    "type": "number"
                },
                "dimension1ItemId": {
                    "title": "Dimension1ItemId",
                    "type": "string"
                },
                "dimension2ItemId": {
                    "title": "Dimension2ItemId",
                    "type": "string"
                },
                "dimension3ItemId": {
                    "title": "Dimension3ItemId",
                    "type": "string"
                },
                "shippingWeight": {
                    "format": "double",
                    "title": "ShippingWeight",
                    "type": "number"
                },
                "shippingLength": {
                    "format": "double",
                    "title": "ShippingLength",
                    "type": "number"
                },
                "shippingWidth": {
                    "format": "double",
                    "title": "ShippingWidth",
                    "type": "number"
                },
                "shippingHeight": {
                    "format": "double",
                    "title": "ShippingHeight",
                    "type": "number"
                },
                "sellOutOfStock": {
                    "title": "SellOutOfStock",
                    "type": "boolean"
                },
                "minimunStockLevel": {
                    "format": "double",
                    "title": "MinimunStockLevel",
                    "type": "number"
                },
                "unitId": {
                    "title": "UnitId",
                    "type": "string"
                },
                "salesUnitId": {
                    "title": "SalesUnitId",
                    "type": "string"
                },
                "salesUnitCondition": {
                    "format": "double",
                    "title": "SalesUnitCondition",
                    "type": "number"
                },
                "requiresShipping": {
                    "title": "RequiresShipping",
                    "type": "boolean"
                },
                "sku": {
                    "title": "Sku",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductVariantTranslationDTO"
                        }
                    ]
                },
                "canOrder": {
                    "title": "CanOrder",
                    "type": "boolean"
                },
                "additionalFeatures": {
                    "title": "AdditionalFeatures",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductVariantAdditionalFeaturesDTO"
                        }
                    ]
                },
                "expected": {
                    "title": "Expected",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExpectedDTO"
                        }
                    ]
                },
                "minOrderQuantity": {
                    "format": "double",
                    "title": "MinOrderQuantity",
                    "type": "number"
                },
                "orderQuantityStep": {
                    "format": "double",
                    "title": "OrderQuantityStep",
                    "type": "number"
                }
            },
            "additionalProperties": true
        },
        "ProductVariantExtendedDTO": {
            "type": "object",
            "properties": {
                "stockAvailability": {
                    "title": "StockAvailability",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductStockAvailabilityExtendedDTO"
                        }
                    ]
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "mediaItem": {
                    "title": "MediaItem",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MediaItemDTO"
                        }
                    ]
                },
                "title": {
                    "title": "Title",
                    "maxLength": 150,
                    "minLength": 0,
                    "type": "string"
                },
                "gtin": {
                    "title": "Gtin",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                },
                "mpn": {
                    "title": "Mpn",
                    "maxLength": 70,
                    "minLength": 0,
                    "type": "string"
                },
                "unitPrice": {
                    "format": "double",
                    "title": "UnitPrice",
                    "type": "number"
                },
                "price": {
                    "format": "double",
                    "title": "Price",
                    "type": "number"
                },
                "msrp": {
                    "format": "double",
                    "title": "Msrp",
                    "type": "number"
                },
                "quantity": {
                    "format": "double",
                    "title": "Quantity",
                    "type": "number"
                },
                "initialPrice": {
                    "format": "double",
                    "title": "InitialPrice",
                    "type": "number"
                },
                "dimension1ItemId": {
                    "title": "Dimension1ItemId",
                    "type": "string"
                },
                "dimension2ItemId": {
                    "title": "Dimension2ItemId",
                    "type": "string"
                },
                "dimension3ItemId": {
                    "title": "Dimension3ItemId",
                    "type": "string"
                },
                "shippingWeight": {
                    "format": "double",
                    "title": "ShippingWeight",
                    "type": "number"
                },
                "shippingLength": {
                    "format": "double",
                    "title": "ShippingLength",
                    "type": "number"
                },
                "shippingWidth": {
                    "format": "double",
                    "title": "ShippingWidth",
                    "type": "number"
                },
                "shippingHeight": {
                    "format": "double",
                    "title": "ShippingHeight",
                    "type": "number"
                },
                "sellOutOfStock": {
                    "title": "SellOutOfStock",
                    "type": "boolean"
                },
                "minimunStockLevel": {
                    "format": "double",
                    "title": "MinimunStockLevel",
                    "type": "number"
                },
                "unitId": {
                    "title": "UnitId",
                    "type": "string"
                },
                "salesUnitId": {
                    "title": "SalesUnitId",
                    "type": "string"
                },
                "salesUnitCondition": {
                    "format": "double",
                    "title": "SalesUnitCondition",
                    "type": "number"
                },
                "requiresShipping": {
                    "title": "RequiresShipping",
                    "type": "boolean"
                },
                "sku": {
                    "title": "Sku",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductVariantTranslationDTO"
                        }
                    ]
                },
                "canOrder": {
                    "title": "CanOrder",
                    "type": "boolean"
                },
                "additionalFeatures": {
                    "title": "AdditionalFeatures",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ProductVariantAdditionalFeaturesDTO"
                        }
                    ]
                },
                "expected": {
                    "title": "Expected",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExpectedDTO"
                        }
                    ]
                },
                "minOrderQuantity": {
                    "format": "double",
                    "title": "MinOrderQuantity",
                    "type": "number"
                },
                "orderQuantityStep": {
                    "format": "double",
                    "title": "OrderQuantityStep",
                    "type": "number"
                }
            },
            "additionalProperties": true
        },
        "ProductVariantStockAvailabilityDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "title": "Message",
                    "type": "string"
                },
                "image": {
                    "title": "Image",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MediaItemDTO"
                        }
                    ]
                },
                "color": {
                    "title": "Color",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "ProductVariantTranslationDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "RelatedProductVariantDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "dimension1ItemIds": {
                    "title": "Dimension1ItemIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dimension2ItemIds": {
                    "title": "Dimension2ItemIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dimension3ItemIds": {
                    "title": "Dimension3ItemIds",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "additionalProperties": true
        },
        "SourceTagDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "StockAvailabilityDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/StockAvailabilityTranslationDTO"
                        }
                    ]
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "lines": {
                    "title": "Lines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StockAvailabilityLineDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "StockAvailabilityLineDTO": {
            "type": "object",
            "properties": {
                "mediaItem": {
                    "title": "MediaItem",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MediaItemDTO"
                        }
                    ]
                },
                "message": {
                    "title": "Message",
                    "type": "string"
                },
                "quantity": {
                    "format": "int32",
                    "title": "Quantity",
                    "type": "integer"
                },
                "color": {
                    "title": "Color",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LineTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "StockAvailabilityTranslationDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "UnitDTO": {
            "required": [
                "code",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "minLength": 1,
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "minLength": 1,
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/UnitTranslationDTO"
                        }
                    ]
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "UnitTranslationDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "UpdateAttributeSetDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "groups": {
                    "title": "Groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdateAttributeSetGroupDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "UpdateAttributeSetGroupDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                },
                "items": {
                    "title": "Items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttributeSetItemDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "UpdateStockAvailabilityDTO": {
            "type": "object",
            "properties": {
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/StockAvailabilityTranslationDTO"
                        }
                    ]
                },
                "lines": {
                    "title": "Lines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StockAvailabilityLineDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "CartDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "token": {
                    "title": "Token",
                    "type": "string"
                },
                "currency": {
                    "title": "Currency",
                    "enum": [
                        "aed",
                        "afn",
                        "all",
                        "amd",
                        "ang",
                        "aoa",
                        "ars",
                        "aud",
                        "awg",
                        "azn",
                        "bam",
                        "bbd",
                        "bdt",
                        "bgn",
                        "bhd",
                        "bif",
                        "bmd",
                        "bnd",
                        "bob",
                        "bov",
                        "brl",
                        "bsd",
                        "btn",
                        "bwp",
                        "byn",
                        "bzd",
                        "cad",
                        "cdf",
                        "che",
                        "chf",
                        "chw",
                        "clf",
                        "clp",
                        "cny",
                        "cop",
                        "cou",
                        "crc",
                        "cuc",
                        "cup",
                        "cve",
                        "czk",
                        "djf",
                        "dkk",
                        "dop",
                        "dzd",
                        "egp",
                        "ern",
                        "etb",
                        "eur",
                        "fjd",
                        "fkp",
                        "gbp",
                        "gel",
                        "ghs",
                        "gip",
                        "gmd",
                        "gnf",
                        "gtq",
                        "gyd",
                        "hkd",
                        "hnl",
                        "hrk",
                        "htg",
                        "huf",
                        "idr",
                        "ils",
                        "inr",
                        "iqd",
                        "irr",
                        "isk",
                        "jmd",
                        "jod",
                        "jpy",
                        "kes",
                        "kgs",
                        "khr",
                        "kmf",
                        "kpw",
                        "krw",
                        "kwd",
                        "kyd",
                        "kzt",
                        "lak",
                        "lbp",
                        "lkr",
                        "lrd",
                        "lsl",
                        "lyd",
                        "mad",
                        "mdl",
                        "mga",
                        "mkd",
                        "mmk",
                        "mnt",
                        "mop",
                        "mru",
                        "mur",
                        "mvr",
                        "mwk",
                        "mxn",
                        "mxv",
                        "myr",
                        "mzn",
                        "nad",
                        "ngn",
                        "nio",
                        "nok",
                        "npr",
                        "nzd",
                        "omr",
                        "pab",
                        "pen",
                        "pgk",
                        "php",
                        "pkr",
                        "pln",
                        "pyg",
                        "qar",
                        "ron",
                        "rsd",
                        "rub",
                        "rwf",
                        "sar",
                        "sbd",
                        "scr",
                        "sdg",
                        "sek",
                        "sgd",
                        "shp",
                        "sll",
                        "sos",
                        "srd",
                        "ssp",
                        "stn",
                        "svc",
                        "syp",
                        "szl",
                        "thb",
                        "tjs",
                        "tmt",
                        "tnd",
                        "top",
                        "try",
                        "ttd",
                        "twd",
                        "tzs",
                        "uah",
                        "ugx",
                        "usd",
                        "usn",
                        "uyi",
                        "uyu",
                        "uyw",
                        "uzs",
                        "ves",
                        "vnd",
                        "vuv",
                        "wst",
                        "xaf",
                        "xag",
                        "xau",
                        "xba",
                        "xbb",
                        "xbc",
                        "xbd",
                        "xcd",
                        "xdr",
                        "xof",
                        "xpd",
                        "xpf",
                        "xpt",
                        "xsu",
                        "xts",
                        "xua",
                        "xxx",
                        "yer",
                        "zar",
                        "zmw",
                        "zwl",
                        "ignore"
                    ],
                    "type": "string"
                },
                "totalAmount": {
                    "format": "double",
                    "title": "TotalAmount",
                    "type": "number"
                },
                "netAmount": {
                    "format": "double",
                    "title": "NetAmount",
                    "type": "number"
                },
                "vatAmount": {
                    "format": "double",
                    "title": "VatAmount",
                    "type": "number"
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "cartItems": {
                    "title": "CartItems",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CartItemDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "CartItemDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "productTitle": {
                    "title": "ProductTitle",
                    "type": "string"
                },
                "productVariantId": {
                    "title": "ProductVariantId",
                    "type": "string"
                },
                "quantity": {
                    "format": "double",
                    "title": "Quantity",
                    "type": "number"
                },
                "imageLink": {
                    "title": "ImageLink",
                    "type": "string"
                },
                "netValue": {
                    "format": "double",
                    "title": "NetValue",
                    "type": "number"
                },
                "initialUnitPrice": {
                    "format": "double",
                    "title": "InitialUnitPrice",
                    "type": "number"
                },
                "unitPrice": {
                    "format": "double",
                    "title": "UnitPrice",
                    "type": "number"
                },
                "initialPrice": {
                    "format": "double",
                    "title": "InitialPrice",
                    "type": "number"
                },
                "price": {
                    "format": "double",
                    "title": "Price",
                    "type": "number"
                },
                "lineValue": {
                    "format": "double",
                    "title": "LineValue",
                    "type": "number"
                },
                "vatValue": {
                    "format": "double",
                    "title": "VatValue",
                    "type": "number"
                },
                "vatRate": {
                    "format": "double",
                    "title": "VatRate",
                    "type": "number"
                },
                "vatCode": {
                    "title": "VatCode",
                    "type": "string"
                },
                "link": {
                    "title": "Link",
                    "type": "string"
                },
                "sku": {
                    "title": "Sku",
                    "type": "string"
                },
                "orderQuantityStep": {
                    "format": "double",
                    "title": "OrderQuantityStep",
                    "type": "number"
                },
                "salesUnitId": {
                    "title": "SalesUnitId",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CreateCartItemDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "productVariantId": {
                    "title": "ProductVariantId",
                    "type": "string"
                },
                "quantity": {
                    "format": "double",
                    "title": "Quantity",
                    "type": "number"
                },
                "sku": {
                    "title": "Sku",
                    "type": "string"
                },
                "mode": {
                    "title": "Mode",
                    "enum": [
                        "Append",
                        "Set"
                    ],
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "ShoppingListDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "customerId": {
                    "title": "CustomerId",
                    "type": "string"
                },
                "userId": {
                    "title": "UserId",
                    "type": "string"
                },
                "alias": {
                    "title": "Alias",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "items": {
                    "title": "Items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ShoppingListItemDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "ShoppingListItemDTO": {
            "type": "object",
            "properties": {
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "productVariantId": {
                    "title": "ProductVariantId",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "UpdateCartDTO": {
            "type": "object",
            "properties": {
                "currency": {
                    "title": "Currency",
                    "enum": [
                        "aed",
                        "afn",
                        "all",
                        "amd",
                        "ang",
                        "aoa",
                        "ars",
                        "aud",
                        "awg",
                        "azn",
                        "bam",
                        "bbd",
                        "bdt",
                        "bgn",
                        "bhd",
                        "bif",
                        "bmd",
                        "bnd",
                        "bob",
                        "bov",
                        "brl",
                        "bsd",
                        "btn",
                        "bwp",
                        "byn",
                        "bzd",
                        "cad",
                        "cdf",
                        "che",
                        "chf",
                        "chw",
                        "clf",
                        "clp",
                        "cny",
                        "cop",
                        "cou",
                        "crc",
                        "cuc",
                        "cup",
                        "cve",
                        "czk",
                        "djf",
                        "dkk",
                        "dop",
                        "dzd",
                        "egp",
                        "ern",
                        "etb",
                        "eur",
                        "fjd",
                        "fkp",
                        "gbp",
                        "gel",
                        "ghs",
                        "gip",
                        "gmd",
                        "gnf",
                        "gtq",
                        "gyd",
                        "hkd",
                        "hnl",
                        "hrk",
                        "htg",
                        "huf",
                        "idr",
                        "ils",
                        "inr",
                        "iqd",
                        "irr",
                        "isk",
                        "jmd",
                        "jod",
                        "jpy",
                        "kes",
                        "kgs",
                        "khr",
                        "kmf",
                        "kpw",
                        "krw",
                        "kwd",
                        "kyd",
                        "kzt",
                        "lak",
                        "lbp",
                        "lkr",
                        "lrd",
                        "lsl",
                        "lyd",
                        "mad",
                        "mdl",
                        "mga",
                        "mkd",
                        "mmk",
                        "mnt",
                        "mop",
                        "mru",
                        "mur",
                        "mvr",
                        "mwk",
                        "mxn",
                        "mxv",
                        "myr",
                        "mzn",
                        "nad",
                        "ngn",
                        "nio",
                        "nok",
                        "npr",
                        "nzd",
                        "omr",
                        "pab",
                        "pen",
                        "pgk",
                        "php",
                        "pkr",
                        "pln",
                        "pyg",
                        "qar",
                        "ron",
                        "rsd",
                        "rub",
                        "rwf",
                        "sar",
                        "sbd",
                        "scr",
                        "sdg",
                        "sek",
                        "sgd",
                        "shp",
                        "sll",
                        "sos",
                        "srd",
                        "ssp",
                        "stn",
                        "svc",
                        "syp",
                        "szl",
                        "thb",
                        "tjs",
                        "tmt",
                        "tnd",
                        "top",
                        "try",
                        "ttd",
                        "twd",
                        "tzs",
                        "uah",
                        "ugx",
                        "usd",
                        "usn",
                        "uyi",
                        "uyu",
                        "uyw",
                        "uzs",
                        "ves",
                        "vnd",
                        "vuv",
                        "wst",
                        "xaf",
                        "xag",
                        "xau",
                        "xba",
                        "xbb",
                        "xbc",
                        "xbd",
                        "xcd",
                        "xdr",
                        "xof",
                        "xpd",
                        "xpf",
                        "xpt",
                        "xsu",
                        "xts",
                        "xua",
                        "xxx",
                        "yer",
                        "zar",
                        "zmw",
                        "zwl",
                        "ignore"
                    ],
                    "type": "string"
                },
                "cartItems": {
                    "title": "CartItems",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreateCartItemDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "AddressDTO": {
            "type": "object",
            "properties": {
                "address1": {
                    "title": "Address1",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "address2": {
                    "title": "Address2",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "city": {
                    "title": "City",
                    "maxLength": 60,
                    "minLength": 0,
                    "type": "string"
                },
                "state": {
                    "title": "State",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                },
                "country": {
                    "title": "Country",
                    "maxLength": 55,
                    "minLength": 0,
                    "type": "string"
                },
                "countryCode": {
                    "title": "CountryCode",
                    "type": "string"
                },
                "postalCode": {
                    "title": "PostalCode",
                    "maxLength": 15,
                    "minLength": 0,
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CheckoutAddressDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "address": {
                    "title": "Address",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "CheckoutPaymentDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "provider": {
                    "title": "Provider",
                    "enum": [
                        "OnePay",
                        "EveryPay",
                        "Credit",
                        "PayPal",
                        "Deposit",
                        "PayGate",
                        "CardLink",
                        "EDPS",
                        "JCC",
                        "ignore"
                    ],
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Submitted",
                        "Completed",
                        "Pending",
                        "Cancelled",
                        "Failed",
                        "Error",
                        "ignore"
                    ],
                    "type": "string"
                },
                "cardType": {
                    "title": "CardType",
                    "enum": [
                        "Other",
                        "Visa",
                        "Mastercard",
                        "ignore"
                    ],
                    "type": "string"
                },
                "paymentDate": {
                    "format": "date-time",
                    "title": "PaymentDate",
                    "type": "string"
                },
                "amount": {
                    "format": "double",
                    "title": "Amount",
                    "type": "number"
                },
                "approvalCode": {
                    "title": "ApprovalCode",
                    "type": "string"
                },
                "cardNumber": {
                    "title": "CardNumber",
                    "type": "string"
                },
                "postDating": {
                    "format": "int32",
                    "title": "PostDating",
                    "type": "integer"
                },
                "installments": {
                    "format": "int32",
                    "title": "Installments",
                    "type": "integer"
                },
                "bankId": {
                    "title": "BankId",
                    "type": "string"
                },
                "transactionId": {
                    "title": "TransactionId",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "OrderCustomFieldDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "value": {
                    "title": "Value"
                }
            },
            "additionalProperties": true
        },
        "PaymentDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "customerId": {
                    "title": "CustomerId",
                    "type": "string"
                },
                "checkoutToken": {
                    "title": "CheckoutToken",
                    "type": "string"
                },
                "amount": {
                    "format": "double",
                    "title": "Amount",
                    "type": "number"
                },
                "commissionAmount": {
                    "format": "double",
                    "title": "CommissionAmount",
                    "type": "number"
                },
                "remittanceInformation": {
                    "title": "RemittanceInformation",
                    "type": "string"
                },
                "provider": {
                    "title": "Provider",
                    "enum": [
                        "OnePay",
                        "EveryPay",
                        "Credit",
                        "PayPal",
                        "Deposit",
                        "PayGate",
                        "CardLink",
                        "EDPS",
                        "JCC",
                        "ignore"
                    ],
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Submitted",
                        "Completed",
                        "Pending",
                        "Cancelled",
                        "Failed",
                        "Error",
                        "ignore"
                    ],
                    "type": "string"
                },
                "paymentDate": {
                    "format": "date-time",
                    "title": "PaymentDate",
                    "type": "string"
                },
                "creationDate": {
                    "format": "date-time",
                    "title": "CreationDate",
                    "type": "string"
                },
                "approvalCode": {
                    "title": "ApprovalCode",
                    "type": "string"
                },
                "cardType": {
                    "title": "CardType",
                    "enum": [
                        "Other",
                        "Visa",
                        "Mastercard",
                        "ignore"
                    ],
                    "type": "string"
                },
                "cardNumber": {
                    "title": "CardNumber",
                    "type": "string"
                },
                "postDating": {
                    "format": "int32",
                    "title": "PostDating",
                    "type": "integer"
                },
                "installments": {
                    "format": "int32",
                    "title": "Installments",
                    "type": "integer"
                },
                "bankId": {
                    "title": "BankId",
                    "type": "string"
                },
                "transactionId": {
                    "title": "TransactionId",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "ShippingLineDTO": {
            "type": "object",
            "properties": {
                "carrierId": {
                    "title": "CarrierId",
                    "type": "string"
                },
                "carrierCode": {
                    "title": "CarrierCode",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "type": "string"
                },
                "netPrice": {
                    "format": "double",
                    "title": "NetPrice",
                    "type": "number"
                },
                "totalAmount": {
                    "format": "double",
                    "title": "TotalAmount",
                    "type": "number"
                },
                "vatLines": {
                    "title": "VatLines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ShippingVatDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "ShippingVatDTO": {
            "type": "object",
            "properties": {
                "rate": {
                    "format": "double",
                    "title": "Rate",
                    "type": "number"
                },
                "amount": {
                    "format": "double",
                    "title": "Amount",
                    "type": "number"
                }
            },
            "additionalProperties": true
        },
        "UpdateCheckoutDTO": {
            "type": "object",
            "properties": {
                "notes": {
                    "title": "Notes",
                    "type": "string"
                },
                "referenceCode": {
                    "title": "ReferenceCode",
                    "type": "string"
                },
                "shippingAddress": {
                    "title": "ShippingAddress",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressDTO"
                        }
                    ]
                },
                "shippingLine": {
                    "title": "ShippingLine",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ShippingLineDTO"
                        }
                    ]
                },
                "payment": {
                    "title": "Payment",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CheckoutPaymentDTO"
                        }
                    ]
                },
                "customerBranchId": {
                    "title": "CustomerBranchId",
                    "type": "string"
                },
                "customFields": {
                    "title": "CustomFields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderCustomFieldDTO"
                    }
                },
                "addresses": {
                    "title": "Addresses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CheckoutAddressDTO"
                    }
                },
                "deliveryDate": {
                    "format": "date-time",
                    "title": "DeliveryDate",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CalculatedShippingDTO": {
            "type": "object",
            "properties": {
                "carrier": {
                    "title": "Carrier",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CarrierDTO"
                        }
                    ]
                },
                "shippingLine": {
                    "title": "ShippingLine",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ShippingLineDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "CarrierDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Active",
                        "Archived",
                        "ignore"
                    ],
                    "type": "string"
                },
                "transitTime": {
                    "title": "TransitTime",
                    "type": "string"
                },
                "handlingCost": {
                    "title": "HandlingCost",
                    "type": "boolean"
                },
                "speedGrade": {
                    "format": "double",
                    "title": "SpeedGrade",
                    "type": "number"
                },
                "logo": {
                    "title": "Logo",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MediaItemDTO"
                        }
                    ]
                },
                "trackUrl": {
                    "title": "TrackUrl",
                    "type": "string"
                },
                "rangeType": {
                    "title": "RangeType",
                    "enum": [
                        "Price",
                        "Weight"
                    ],
                    "type": "string"
                },
                "zones": {
                    "title": "Zones",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CarrierZoneDTO"
                    }
                },
                "ranges": {
                    "title": "Ranges",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CarrierRangeDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "CarrierRangeDTO": {
            "type": "object",
            "properties": {
                "fromValue": {
                    "format": "double",
                    "title": "FromValue",
                    "type": "number"
                },
                "toValue": {
                    "format": "double",
                    "title": "ToValue",
                    "type": "number"
                },
                "cost": {
                    "format": "double",
                    "title": "Cost",
                    "type": "number"
                },
                "zones": {
                    "title": "Zones",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CarrierZoneCostDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "CarrierZoneCostDTO": {
            "type": "object",
            "properties": {
                "zoneId": {
                    "title": "ZoneId",
                    "type": "string"
                },
                "cost": {
                    "format": "double",
                    "title": "Cost",
                    "type": "number"
                }
            },
            "additionalProperties": true
        },
        "CarrierZoneDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CheckoutDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "customerId": {
                    "title": "CustomerId",
                    "type": "string"
                },
                "customerName": {
                    "title": "CustomerName",
                    "type": "string"
                },
                "userEmail": {
                    "title": "UserEmail",
                    "type": "string"
                },
                "userFirstName": {
                    "title": "UserFirstName",
                    "type": "string"
                },
                "userLastName": {
                    "title": "UserLastName",
                    "type": "string"
                },
                "userId": {
                    "title": "UserId",
                    "type": "string"
                },
                "customerBranchId": {
                    "title": "CustomerBranchId",
                    "type": "string"
                },
                "cartToken": {
                    "title": "CartToken",
                    "type": "string"
                },
                "token": {
                    "title": "Token",
                    "type": "string"
                },
                "referenceCode": {
                    "title": "ReferenceCode",
                    "type": "string"
                },
                "notes": {
                    "title": "Notes",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Start",
                        "FillAddress",
                        "SetShipping",
                        "PendingPayment",
                        "Completed",
                        "CompletePayment",
                        "SetPayment",
                        "PaymentFailed",
                        "ignore"
                    ],
                    "type": "string"
                },
                "billingAddress": {
                    "title": "BillingAddress",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressDTO"
                        }
                    ]
                },
                "shippingAddress": {
                    "title": "ShippingAddress",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressDTO"
                        }
                    ]
                },
                "buyerAcceptsMarketing": {
                    "title": "BuyerAcceptsMarketing",
                    "type": "boolean"
                },
                "email": {
                    "title": "Email",
                    "maxLength": 254,
                    "minLength": 0,
                    "type": "string"
                },
                "phone": {
                    "title": "Phone",
                    "maxLength": 20,
                    "minLength": 0,
                    "type": "string"
                },
                "currency": {
                    "title": "Currency",
                    "enum": [
                        "aed",
                        "afn",
                        "all",
                        "amd",
                        "ang",
                        "aoa",
                        "ars",
                        "aud",
                        "awg",
                        "azn",
                        "bam",
                        "bbd",
                        "bdt",
                        "bgn",
                        "bhd",
                        "bif",
                        "bmd",
                        "bnd",
                        "bob",
                        "bov",
                        "brl",
                        "bsd",
                        "btn",
                        "bwp",
                        "byn",
                        "bzd",
                        "cad",
                        "cdf",
                        "che",
                        "chf",
                        "chw",
                        "clf",
                        "clp",
                        "cny",
                        "cop",
                        "cou",
                        "crc",
                        "cuc",
                        "cup",
                        "cve",
                        "czk",
                        "djf",
                        "dkk",
                        "dop",
                        "dzd",
                        "egp",
                        "ern",
                        "etb",
                        "eur",
                        "fjd",
                        "fkp",
                        "gbp",
                        "gel",
                        "ghs",
                        "gip",
                        "gmd",
                        "gnf",
                        "gtq",
                        "gyd",
                        "hkd",
                        "hnl",
                        "hrk",
                        "htg",
                        "huf",
                        "idr",
                        "ils",
                        "inr",
                        "iqd",
                        "irr",
                        "isk",
                        "jmd",
                        "jod",
                        "jpy",
                        "kes",
                        "kgs",
                        "khr",
                        "kmf",
                        "kpw",
                        "krw",
                        "kwd",
                        "kyd",
                        "kzt",
                        "lak",
                        "lbp",
                        "lkr",
                        "lrd",
                        "lsl",
                        "lyd",
                        "mad",
                        "mdl",
                        "mga",
                        "mkd",
                        "mmk",
                        "mnt",
                        "mop",
                        "mru",
                        "mur",
                        "mvr",
                        "mwk",
                        "mxn",
                        "mxv",
                        "myr",
                        "mzn",
                        "nad",
                        "ngn",
                        "nio",
                        "nok",
                        "npr",
                        "nzd",
                        "omr",
                        "pab",
                        "pen",
                        "pgk",
                        "php",
                        "pkr",
                        "pln",
                        "pyg",
                        "qar",
                        "ron",
                        "rsd",
                        "rub",
                        "rwf",
                        "sar",
                        "sbd",
                        "scr",
                        "sdg",
                        "sek",
                        "sgd",
                        "shp",
                        "sll",
                        "sos",
                        "srd",
                        "ssp",
                        "stn",
                        "svc",
                        "syp",
                        "szl",
                        "thb",
                        "tjs",
                        "tmt",
                        "tnd",
                        "top",
                        "try",
                        "ttd",
                        "twd",
                        "tzs",
                        "uah",
                        "ugx",
                        "usd",
                        "usn",
                        "uyi",
                        "uyu",
                        "uyw",
                        "uzs",
                        "ves",
                        "vnd",
                        "vuv",
                        "wst",
                        "xaf",
                        "xag",
                        "xau",
                        "xba",
                        "xbb",
                        "xbc",
                        "xbd",
                        "xcd",
                        "xdr",
                        "xof",
                        "xpd",
                        "xpf",
                        "xpt",
                        "xsu",
                        "xts",
                        "xua",
                        "xxx",
                        "yer",
                        "zar",
                        "zmw",
                        "zwl",
                        "ignore"
                    ],
                    "type": "string"
                },
                "totalAmount": {
                    "format": "double",
                    "title": "TotalAmount",
                    "type": "number"
                },
                "netAmount": {
                    "format": "double",
                    "title": "NetAmount",
                    "type": "number"
                },
                "vatAmount": {
                    "format": "double",
                    "title": "VatAmount",
                    "type": "number"
                },
                "expenseAmount": {
                    "format": "double",
                    "title": "ExpenseAmount",
                    "type": "number"
                },
                "discountRate": {
                    "format": "double",
                    "title": "DiscountRate",
                    "type": "number"
                },
                "discountValue": {
                    "format": "double",
                    "title": "DiscountValue",
                    "type": "number"
                },
                "completedDate": {
                    "format": "date-time",
                    "title": "CompletedDate",
                    "type": "string"
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "cartItems": {
                    "title": "CartItems",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CheckoutItemDTO"
                    }
                },
                "giftLines": {
                    "title": "GiftLines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CheckoutGiftLineDTO"
                    }
                },
                "vatAnalysis": {
                    "title": "VatAnalysis",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VatAnalysisDTO"
                    }
                },
                "expenseLines": {
                    "title": "ExpenseLines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExpenseLineDTO"
                    }
                },
                "shippingLine": {
                    "title": "ShippingLine",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ShippingLineDTO"
                        }
                    ]
                },
                "orderId": {
                    "title": "OrderId",
                    "type": "string"
                },
                "orderCode": {
                    "title": "OrderCode",
                    "type": "string"
                },
                "payment": {
                    "title": "Payment",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CheckoutPaymentDTO"
                        }
                    ]
                },
                "customer": {
                    "title": "Customer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomerDTO"
                        }
                    ]
                },
                "shippingOptions": {
                    "title": "ShippingOptions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CalculatedShippingDTO"
                    }
                },
                "paymentMethods": {
                    "title": "PaymentMethods",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomerPaymentOptionsDTO"
                        }
                    ]
                },
                "settings": {
                    "title": "Settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CheckoutSettingsDTO"
                        }
                    ]
                },
                "customFields": {
                    "title": "CustomFields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderCustomFieldDTO"
                    }
                },
                "addresses": {
                    "title": "Addresses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CheckoutAddressDTO"
                    }
                },
                "deliveryDate": {
                    "format": "date-time",
                    "title": "DeliveryDate",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CheckoutGiftLineDTO": {
            "type": "object",
            "properties": {
                "vatCode": {
                    "title": "VatCode",
                    "type": "string"
                },
                "imageLink": {
                    "title": "ImageLink",
                    "type": "string"
                },
                "productTitle": {
                    "title": "ProductTitle",
                    "type": "string"
                },
                "productAlias": {
                    "title": "ProductAlias",
                    "type": "string"
                },
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "productVariantId": {
                    "title": "ProductVariantId",
                    "type": "string"
                },
                "quantity": {
                    "format": "double",
                    "title": "Quantity",
                    "type": "number"
                }
            },
            "additionalProperties": true
        },
        "CheckoutItemDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "productTitle": {
                    "title": "ProductTitle",
                    "type": "string"
                },
                "productVariantId": {
                    "title": "ProductVariantId",
                    "type": "string"
                },
                "quantity": {
                    "format": "double",
                    "title": "Quantity",
                    "type": "number"
                },
                "unit": {
                    "title": "Unit",
                    "type": "string"
                },
                "imageLink": {
                    "title": "ImageLink",
                    "type": "string"
                },
                "color": {
                    "title": "Color",
                    "type": "string"
                },
                "material": {
                    "title": "Material",
                    "type": "string"
                },
                "pattern": {
                    "title": "Pattern",
                    "type": "string"
                },
                "size": {
                    "title": "Size",
                    "type": "string"
                },
                "netValue": {
                    "format": "double",
                    "title": "NetValue",
                    "type": "number"
                },
                "expenseValue": {
                    "format": "double",
                    "title": "ExpenseValue",
                    "type": "number"
                },
                "initialUnitPrice": {
                    "format": "double",
                    "title": "InitialUnitPrice",
                    "type": "number"
                },
                "unitPrice": {
                    "format": "double",
                    "title": "UnitPrice",
                    "type": "number"
                },
                "initialPrice": {
                    "format": "double",
                    "title": "InitialPrice",
                    "type": "number"
                },
                "price": {
                    "format": "double",
                    "title": "Price",
                    "type": "number"
                },
                "priceValue1": {
                    "format": "double",
                    "title": "PriceValue1",
                    "type": "number"
                },
                "priceValue2": {
                    "format": "double",
                    "title": "PriceValue2",
                    "type": "number"
                },
                "priceValue3": {
                    "format": "double",
                    "title": "PriceValue3",
                    "type": "number"
                },
                "lineValue": {
                    "format": "double",
                    "title": "LineValue",
                    "type": "number"
                },
                "discountValue": {
                    "format": "double",
                    "title": "DiscountValue",
                    "type": "number"
                },
                "discountRate": {
                    "format": "double",
                    "title": "DiscountRate",
                    "type": "number"
                },
                "vatValue": {
                    "format": "double",
                    "title": "VatValue",
                    "type": "number"
                },
                "vatRate": {
                    "format": "double",
                    "title": "VatRate",
                    "type": "number"
                },
                "vatCode": {
                    "title": "VatCode",
                    "type": "string"
                },
                "customDim1Value": {
                    "title": "CustomDim1Value",
                    "type": "string"
                },
                "customDim2Value": {
                    "title": "CustomDim2Value",
                    "type": "string"
                },
                "customDim3Value": {
                    "title": "CustomDim3Value",
                    "type": "string"
                },
                "link": {
                    "title": "Link",
                    "type": "string"
                },
                "sku": {
                    "title": "Sku",
                    "type": "string"
                },
                "salesUnitId": {
                    "title": "SalesUnitId",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CheckoutSettingsDTO": {
            "type": "object",
            "properties": {
                "showBilling": {
                    "title": "ShowBilling",
                    "type": "boolean"
                },
                "showShipping": {
                    "title": "ShowShipping",
                    "type": "boolean"
                },
                "showPayment": {
                    "title": "ShowPayment",
                    "type": "boolean"
                }
            },
            "additionalProperties": true
        },
        "CustomerBranchDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "sourceId": {
                    "title": "SourceId",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "contact": {
                    "title": "Contact",
                    "type": "string"
                },
                "contactPhone": {
                    "title": "ContactPhone",
                    "type": "string"
                },
                "phone": {
                    "title": "Phone",
                    "type": "string"
                },
                "address": {
                    "title": "Address",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressDTO"
                        }
                    ]
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Active",
                        "Inactive",
                        "StopOrder",
                        "ignore"
                    ],
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CustomerPaymentDTO": {
            "type": "object",
            "properties": {
                "provider": {
                    "title": "Provider",
                    "enum": [
                        "OnePay",
                        "EveryPay",
                        "Credit",
                        "PayPal",
                        "Deposit",
                        "PayGate",
                        "CardLink",
                        "EDPS",
                        "JCC",
                        "ignore"
                    ],
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "title": "Position",
                    "type": "integer"
                },
                "message": {
                    "title": "Message",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CustomerPaymentOptionsDTO": {
            "type": "object",
            "properties": {
                "providers": {
                    "title": "Providers",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerPaymentDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "CustomerShippingAddressDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "address": {
                    "title": "Address",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "ExpenseLineDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "netValue": {
                    "format": "double",
                    "title": "NetValue",
                    "type": "number"
                },
                "vatValue": {
                    "format": "double",
                    "title": "VatValue",
                    "type": "number"
                }
            },
            "additionalProperties": true
        },
        "VatAnalysisDTO": {
            "type": "object",
            "properties": {
                "vatRate": {
                    "format": "double",
                    "title": "VatRate",
                    "type": "number"
                },
                "vatAmount": {
                    "format": "double",
                    "title": "VatAmount",
                    "type": "number"
                },
                "vatCode": {
                    "title": "VatCode",
                    "type": "string"
                },
                "netAmount": {
                    "format": "double",
                    "title": "NetAmount",
                    "type": "number"
                }
            },
            "additionalProperties": true
        },
        "AddAssortmentValueDTO": {
            "type": "object",
            "properties": {
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "categoryId": {
                    "title": "CategoryId",
                    "type": "string"
                },
                "typeId": {
                    "title": "TypeId",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Inactive",
                        "Active"
                    ],
                    "type": "string"
                },
                "source": {
                    "title": "Source",
                    "enum": [
                        "manual",
                        "orders"
                    ],
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "AssortmentCombinationDTO": {
            "type": "object",
            "properties": {
                "branchId": {
                    "title": "BranchId",
                    "type": "string"
                },
                "categoryId": {
                    "title": "CategoryId",
                    "type": "string"
                },
                "typeId": {
                    "title": "TypeId",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "AssortmentDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "customerId": {
                    "title": "CustomerId",
                    "type": "string"
                },
                "categories": {
                    "title": "Categories",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerCategoryDTO"
                    }
                },
                "types": {
                    "title": "Types",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerTypeDTO"
                    }
                },
                "combinations": {
                    "title": "Combinations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssortmentCombinationDTO"
                    }
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "AssortmentValueDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "customerId": {
                    "title": "CustomerId",
                    "type": "string"
                },
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "categoryId": {
                    "title": "CategoryId",
                    "type": "string"
                },
                "typeId": {
                    "title": "TypeId",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Inactive",
                        "Active"
                    ],
                    "type": "string"
                },
                "source": {
                    "title": "Source",
                    "enum": [
                        "manual",
                        "orders"
                    ],
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CreateAssortmentDTO": {
            "type": "object",
            "properties": {
                "customerId": {
                    "title": "CustomerId",
                    "type": "string"
                },
                "categories": {
                    "title": "Categories",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreateCustomerCategoryDTO"
                    }
                },
                "types": {
                    "title": "Types",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreateCustomerTypeDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "CreateCustomerCategoryDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CreateCustomerTypeDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CustomerAdditionalFeaturesDTO": {
            "type": "object",
            "properties": {
                "extraFields": {
                    "title": "ExtraFields"
                }
            },
            "additionalProperties": true
        },
        "CustomerBranchImportDTO": {
            "type": "object",
            "properties": {
                "address1": {
                    "title": "Address1",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "address2": {
                    "title": "Address2",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "city": {
                    "title": "City",
                    "maxLength": 60,
                    "minLength": 0,
                    "type": "string"
                },
                "state": {
                    "title": "State",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                },
                "country": {
                    "title": "Country",
                    "maxLength": 55,
                    "minLength": 0,
                    "type": "string"
                },
                "countryCode": {
                    "title": "CountryCode",
                    "type": "string"
                },
                "postalCode": {
                    "title": "PostalCode",
                    "maxLength": 15,
                    "minLength": 0,
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "sourceId": {
                    "title": "SourceId",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "contact": {
                    "title": "Contact",
                    "type": "string"
                },
                "contactPhone": {
                    "title": "ContactPhone",
                    "type": "string"
                },
                "phone": {
                    "title": "Phone",
                    "type": "string"
                },
                "address": {
                    "title": "Address",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressDTO"
                        }
                    ]
                },
                "vatType": {
                    "title": "VatType",
                    "enum": [
                        "Zero",
                        "Regular",
                        "Discounted",
                        "ignore"
                    ],
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Active",
                        "Inactive",
                        "StopOrder",
                        "ignore"
                    ],
                    "type": "string"
                },
                "contactLanguage": {
                    "title": "ContactLanguage",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CustomerCategoryDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CustomerCustomFieldDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "value": {
                    "title": "Value"
                },
                "translation": {
                    "title": "Translation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomerCustomFieldTranslationDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "CustomerCustomFieldTranslationDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "title": "Value",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "CustomerDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "tin": {
                    "title": "Tin",
                    "type": "string"
                },
                "email": {
                    "title": "Email",
                    "type": "string"
                },
                "contact": {
                    "title": "Contact",
                    "type": "string"
                },
                "contactPhone": {
                    "title": "ContactPhone",
                    "type": "string"
                },
                "phone": {
                    "title": "Phone",
                    "type": "string"
                },
                "priceCategoryId": {
                    "title": "PriceCategoryId",
                    "type": "string"
                },
                "sourceId": {
                    "title": "SourceId",
                    "type": "string"
                },
                "tags": {
                    "title": "Tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceTags": {
                    "title": "SourceTags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "address": {
                    "title": "Address",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressDTO"
                        }
                    ]
                },
                "notes": {
                    "title": "Notes",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Active",
                        "Inactive",
                        "StopOrder",
                        "ignore"
                    ],
                    "type": "string"
                },
                "branches": {
                    "title": "Branches",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerBranchDTO"
                    }
                },
                "additionalFeatures": {
                    "title": "AdditionalFeatures",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomerAdditionalFeaturesDTO"
                        }
                    ]
                },
                "customFields": {
                    "title": "CustomFields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerCustomFieldDTO"
                    }
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "salesmanId": {
                    "title": "SalesmanId",
                    "type": "string"
                },
                "taxOffice": {
                    "title": "TaxOffice",
                    "type": "string"
                },
                "contactLanguage": {
                    "title": "ContactLanguage",
                    "type": "string"
                },
                "vatType": {
                    "title": "VatType",
                    "enum": [
                        "Zero",
                        "Regular",
                        "Discounted",
                        "ignore"
                    ],
                    "type": "string"
                },
                "shopType": {
                    "title": "ShopType",
                    "enum": [
                        "B2B",
                        "B2C",
                        "Both",
                        "ignore"
                    ],
                    "type": "string"
                },
                "shippingAddresses": {
                    "title": "ShippingAddresses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerShippingAddressDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "CustomerFilterTypeRuleCondition": {
            "type": "object",
            "properties": {
                "filter": {
                    "title": "Filter",
                    "enum": [
                        "Name",
                        "Tin",
                        "Phone",
                        "SourceTag",
                        "Tag",
                        "Rule",
                        "Search",
                        "Id",
                        "SalesmanId",
                        "Status"
                    ],
                    "type": "string"
                },
                "not": {
                    "title": "Not",
                    "type": "boolean"
                },
                "value": {
                    "title": "Value"
                },
                "operator": {
                    "title": "Operator",
                    "enum": [
                        "And",
                        "Or",
                        "Xor",
                        "ignore"
                    ],
                    "type": "string"
                },
                "conditions": {
                    "title": "Conditions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerFilterTypeRuleCondition"
                    }
                },
                "operation": {
                    "title": "Operation",
                    "enum": [
                        "eq",
                        "neq",
                        "gte",
                        "lte",
                        "gt",
                        "lt",
                        "OneOf",
                        "NotOneOf",
                        "Contains",
                        "NotContains",
                        "StartsWith",
                        "EndsWith"
                    ],
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CustomerFilterTypeRuleConditionDTO": {
            "type": "object",
            "properties": {
                "filter": {
                    "title": "Filter",
                    "enum": [
                        "Name",
                        "Tin",
                        "Phone",
                        "SourceTag",
                        "Tag",
                        "Rule",
                        "Search",
                        "Id",
                        "SalesmanId",
                        "Status"
                    ],
                    "type": "string"
                },
                "not": {
                    "title": "Not",
                    "type": "boolean"
                },
                "value": {
                    "title": "Value"
                },
                "operator": {
                    "title": "Operator",
                    "enum": [
                        "And",
                        "Or",
                        "Xor",
                        "ignore"
                    ],
                    "type": "string"
                },
                "conditions": {
                    "title": "Conditions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerFilterTypeRuleConditionDTO"
                    }
                },
                "operation": {
                    "title": "Operation",
                    "enum": [
                        "eq",
                        "neq",
                        "gte",
                        "lte",
                        "gt",
                        "lt",
                        "OneOf",
                        "NotOneOf",
                        "Contains",
                        "NotContains",
                        "StartsWith",
                        "EndsWith"
                    ],
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CustomerGroupDTO": {
            "required": [
                "title"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "title": {
                    "title": "Title",
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Active",
                        "Archived",
                        "ignore"
                    ],
                    "type": "string"
                },
                "rule": {
                    "title": "Rule",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomerFilterTypeRuleConditionDTO"
                        }
                    ]
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CustomerImportDTO": {
            "type": "object",
            "properties": {
                "branches": {
                    "title": "Branches",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerBranchImportDTO"
                    }
                },
                "address1": {
                    "title": "Address1",
                    "type": "string"
                },
                "address2": {
                    "title": "Address2",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "city": {
                    "title": "City",
                    "maxLength": 60,
                    "minLength": 0,
                    "type": "string"
                },
                "state": {
                    "title": "State",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                },
                "country": {
                    "title": "Country",
                    "maxLength": 55,
                    "minLength": 0,
                    "type": "string"
                },
                "countryCode": {
                    "title": "CountryCode",
                    "type": "string"
                },
                "postalCode": {
                    "title": "PostalCode",
                    "maxLength": 15,
                    "minLength": 0,
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "tin": {
                    "title": "Tin",
                    "type": "string"
                },
                "email": {
                    "title": "Email",
                    "type": "string"
                },
                "contact": {
                    "title": "Contact",
                    "type": "string"
                },
                "contactPhone": {
                    "title": "ContactPhone",
                    "type": "string"
                },
                "phone": {
                    "title": "Phone",
                    "type": "string"
                },
                "priceCategoryId": {
                    "title": "PriceCategoryId",
                    "type": "string"
                },
                "sourceId": {
                    "title": "SourceId",
                    "type": "string"
                },
                "tags": {
                    "title": "Tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceTags": {
                    "title": "SourceTags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "address": {
                    "title": "Address",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressDTO"
                        }
                    ]
                },
                "notes": {
                    "title": "Notes",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Active",
                        "Inactive",
                        "StopOrder",
                        "ignore"
                    ],
                    "type": "string"
                },
                "additionalFeatures": {
                    "title": "AdditionalFeatures",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomerAdditionalFeaturesDTO"
                        }
                    ]
                },
                "customFields": {
                    "title": "CustomFields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerCustomFieldDTO"
                    }
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "salesmanId": {
                    "title": "SalesmanId",
                    "type": "string"
                },
                "taxOffice": {
                    "title": "TaxOffice",
                    "type": "string"
                },
                "contactLanguage": {
                    "title": "ContactLanguage",
                    "type": "string"
                },
                "vatType": {
                    "title": "VatType",
                    "enum": [
                        "Zero",
                        "Regular",
                        "Discounted",
                        "ignore"
                    ],
                    "type": "string"
                },
                "shopType": {
                    "title": "ShopType",
                    "enum": [
                        "B2B",
                        "B2C",
                        "Both",
                        "ignore"
                    ],
                    "type": "string"
                },
                "shippingAddresses": {
                    "title": "ShippingAddresses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerShippingAddressDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "CustomerTypeDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "UpdateAssortmentDTO": {
            "type": "object",
            "properties": {
                "categories": {
                    "title": "Categories",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdateCustomerCategoryDTO"
                    }
                },
                "types": {
                    "title": "Types",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdateCustomerTypeDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "UpdateAssortmentValueDTO": {
            "type": "object",
            "properties": {
                "status": {
                    "title": "Status",
                    "enum": [
                        "Inactive",
                        "Active"
                    ],
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "UpdateCustomerCategoryDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "UpdateCustomerTypeDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "CheckInventoryAvailabilityDTO": {
            "type": "object",
            "properties": {
                "token": {
                    "title": "Token",
                    "type": "string"
                },
                "lines": {
                    "title": "Lines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CheckInventoryAvailabilityLineDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "CheckInventoryAvailabilityLineDTO": {
            "type": "object",
            "properties": {
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "productVariantId": {
                    "title": "ProductVariantId",
                    "type": "string"
                },
                "quantity": {
                    "format": "double",
                    "title": "Quantity",
                    "type": "number"
                }
            },
            "additionalProperties": true
        },
        "ExpectedInventoryLineDTO": {
            "type": "object",
            "properties": {
                "deliveryDate": {
                    "format": "date-time",
                    "title": "DeliveryDate",
                    "type": "string"
                },
                "expectedQuantity": {
                    "format": "double",
                    "title": "ExpectedQuantity",
                    "type": "number"
                }
            },
            "additionalProperties": true
        },
        "InventoryLevelDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "productVariantId": {
                    "title": "ProductVariantId",
                    "type": "string"
                },
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "locationId": {
                    "title": "LocationId",
                    "type": "string"
                },
                "quantity": {
                    "format": "double",
                    "title": "Quantity",
                    "type": "number"
                },
                "expectedInventoryLines": {
                    "title": "ExpectedInventoryLines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExpectedInventoryLineDTO"
                    }
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "InventoryLevelFilterTypeBaseFilter": {
            "type": "object",
            "properties": {
                "filter": {
                    "title": "Filter",
                    "enum": [
                        "Location",
                        "VariantIds"
                    ],
                    "type": "string"
                },
                "operation": {
                    "title": "Operation",
                    "enum": [
                        "eq",
                        "neq",
                        "gte",
                        "lte",
                        "gt",
                        "lt",
                        "OneOf",
                        "NotOneOf",
                        "Contains",
                        "NotContains",
                        "StartsWith",
                        "EndsWith"
                    ],
                    "type": "string"
                },
                "value": {
                    "title": "Value"
                }
            },
            "additionalProperties": true
        },
        "InventoryLevelSortTypeBaseSort": {
            "type": "object",
            "properties": {
                "field": {
                    "title": "Field",
                    "enum": [
                        "Id",
                        "Quantity",
                        "UpdateDate"
                    ],
                    "type": "string"
                },
                "order": {
                    "title": "Order",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "LocationDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "maxLength": 128,
                    "minLength": 0,
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "isActive": {
                    "title": "IsActive",
                    "type": "boolean"
                },
                "address": {
                    "title": "Address",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressDTO"
                        }
                    ]
                },
                "phone": {
                    "title": "Phone",
                    "type": "string"
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "InventoryAvailabilityDTO": {
            "type": "object",
            "properties": {
                "token": {
                    "title": "Token",
                    "type": "string"
                },
                "available": {
                    "title": "Available",
                    "type": "boolean"
                },
                "lines": {
                    "title": "Lines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StockAvailabilityLineDTO"
                    }
                }
            },
            "additionalProperties": true
        },
        "InventoryAvailabilityDTOLineDTO": {
            "type": "object",
            "properties": {
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "productVariantId": {
                    "title": "ProductVariantId",
                    "type": "string"
                },
                "unitQuantity": {
                    "format": "double",
                    "title": "UnitQuantity",
                    "type": "number"
                },
                "unitAvailableQuantity": {
                    "format": "double",
                    "title": "UnitAvailableQuantity",
                    "type": "number"
                },
                "quantity": {
                    "format": "double",
                    "title": "Quantity",
                    "type": "number"
                },
                "availableQuantity": {
                    "format": "double",
                    "title": "AvailableQuantity",
                    "type": "number"
                }
            },
            "additionalProperties": true
        },
        "GiftLineDTO": {
            "type": "object",
            "properties": {
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "productVariantId": {
                    "title": "ProductVariantId",
                    "type": "string"
                },
                "productTitle": {
                    "title": "ProductTitle",
                    "type": "string"
                },
                "quantity": {
                    "format": "double",
                    "title": "Quantity",
                    "type": "number"
                },
                "vatCode": {
                    "title": "VatCode",
                    "type": "string"
                },
                "imageLink": {
                    "title": "ImageLink",
                    "type": "string"
                },
                "productAlias": {
                    "title": "ProductAlias",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "OrderCustomFieldTranslationDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "title": "Value",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiLangDTO"
                        }
                    ]
                }
            },
            "additionalProperties": true
        },
        "OrderDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "companyId": {
                    "title": "CompanyId",
                    "type": "string"
                },
                "checkoutToken": {
                    "title": "CheckoutToken",
                    "type": "string"
                },
                "cartToken": {
                    "title": "CartToken",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Draft",
                        "Placed",
                        "Cancelled",
                        "Processing",
                        "ToBeShipped",
                        "Shipped",
                        "PartialDelivery",
                        "FailedToDeliver",
                        "Delivered",
                        "Rejected",
                        "Completed",
                        "ignore"
                    ],
                    "type": "string"
                },
                "customerId": {
                    "title": "CustomerId",
                    "type": "string"
                },
                "customerBranchId": {
                    "title": "CustomerBranchId",
                    "type": "string"
                },
                "customerBranchSourceId": {
                    "title": "CustomerBranchSourceId",
                    "type": "string"
                },
                "customerTin": {
                    "title": "CustomerTin",
                    "type": "string"
                },
                "customerName": {
                    "title": "CustomerName",
                    "type": "string"
                },
                "customerCode": {
                    "title": "CustomerCode",
                    "type": "string"
                },
                "customerSourceId": {
                    "title": "CustomerSourceId",
                    "type": "string"
                },
                "customerBranchName": {
                    "title": "CustomerBranchName",
                    "type": "string"
                },
                "currency": {
                    "title": "Currency",
                    "enum": [
                        "aed",
                        "afn",
                        "all",
                        "amd",
                        "ang",
                        "aoa",
                        "ars",
                        "aud",
                        "awg",
                        "azn",
                        "bam",
                        "bbd",
                        "bdt",
                        "bgn",
                        "bhd",
                        "bif",
                        "bmd",
                        "bnd",
                        "bob",
                        "bov",
                        "brl",
                        "bsd",
                        "btn",
                        "bwp",
                        "byn",
                        "bzd",
                        "cad",
                        "cdf",
                        "che",
                        "chf",
                        "chw",
                        "clf",
                        "clp",
                        "cny",
                        "cop",
                        "cou",
                        "crc",
                        "cuc",
                        "cup",
                        "cve",
                        "czk",
                        "djf",
                        "dkk",
                        "dop",
                        "dzd",
                        "egp",
                        "ern",
                        "etb",
                        "eur",
                        "fjd",
                        "fkp",
                        "gbp",
                        "gel",
                        "ghs",
                        "gip",
                        "gmd",
                        "gnf",
                        "gtq",
                        "gyd",
                        "hkd",
                        "hnl",
                        "hrk",
                        "htg",
                        "huf",
                        "idr",
                        "ils",
                        "inr",
                        "iqd",
                        "irr",
                        "isk",
                        "jmd",
                        "jod",
                        "jpy",
                        "kes",
                        "kgs",
                        "khr",
                        "kmf",
                        "kpw",
                        "krw",
                        "kwd",
                        "kyd",
                        "kzt",
                        "lak",
                        "lbp",
                        "lkr",
                        "lrd",
                        "lsl",
                        "lyd",
                        "mad",
                        "mdl",
                        "mga",
                        "mkd",
                        "mmk",
                        "mnt",
                        "mop",
                        "mru",
                        "mur",
                        "mvr",
                        "mwk",
                        "mxn",
                        "mxv",
                        "myr",
                        "mzn",
                        "nad",
                        "ngn",
                        "nio",
                        "nok",
                        "npr",
                        "nzd",
                        "omr",
                        "pab",
                        "pen",
                        "pgk",
                        "php",
                        "pkr",
                        "pln",
                        "pyg",
                        "qar",
                        "ron",
                        "rsd",
                        "rub",
                        "rwf",
                        "sar",
                        "sbd",
                        "scr",
                        "sdg",
                        "sek",
                        "sgd",
                        "shp",
                        "sll",
                        "sos",
                        "srd",
                        "ssp",
                        "stn",
                        "svc",
                        "syp",
                        "szl",
                        "thb",
                        "tjs",
                        "tmt",
                        "tnd",
                        "top",
                        "try",
                        "ttd",
                        "twd",
                        "tzs",
                        "uah",
                        "ugx",
                        "usd",
                        "usn",
                        "uyi",
                        "uyu",
                        "uyw",
                        "uzs",
                        "ves",
                        "vnd",
                        "vuv",
                        "wst",
                        "xaf",
                        "xag",
                        "xau",
                        "xba",
                        "xbb",
                        "xbc",
                        "xbd",
                        "xcd",
                        "xdr",
                        "xof",
                        "xpd",
                        "xpf",
                        "xpt",
                        "xsu",
                        "xts",
                        "xua",
                        "xxx",
                        "yer",
                        "zar",
                        "zmw",
                        "zwl",
                        "ignore"
                    ],
                    "type": "string"
                },
                "cancelledAt": {
                    "format": "date-time",
                    "title": "CancelledAt",
                    "type": "string"
                },
                "deliveryDate": {
                    "format": "date-time",
                    "title": "DeliveryDate",
                    "type": "string"
                },
                "cancellationReason": {
                    "title": "CancellationReason",
                    "type": "string"
                },
                "closedAt": {
                    "format": "date-time",
                    "title": "ClosedAt",
                    "type": "string"
                },
                "referenceCode": {
                    "title": "ReferenceCode",
                    "type": "string"
                },
                "discountRate": {
                    "format": "double",
                    "title": "DiscountRate",
                    "type": "number"
                },
                "discountValue": {
                    "format": "double",
                    "title": "DiscountValue",
                    "type": "number"
                },
                "totalAmount": {
                    "format": "double",
                    "title": "TotalAmount",
                    "type": "number"
                },
                "netAmount": {
                    "format": "double",
                    "title": "NetAmount",
                    "type": "number"
                },
                "vatAmount": {
                    "format": "double",
                    "title": "VatAmount",
                    "type": "number"
                },
                "expenseAmount": {
                    "format": "double",
                    "title": "ExpenseAmount",
                    "type": "number"
                },
                "financialStatus": {
                    "title": "FinancialStatus",
                    "enum": [
                        "Pending",
                        "Authorized",
                        "PartiallyPaid",
                        "PartiallyRefunded",
                        "Refunded",
                        "Voided"
                    ],
                    "type": "string"
                },
                "fulfillmentStatus": {
                    "title": "FulfillmentStatus",
                    "enum": [
                        "Fulfilled",
                        "Null",
                        "Partial",
                        "Restocked"
                    ],
                    "type": "string"
                },
                "billingAddress": {
                    "title": "BillingAddress",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressDTO"
                        }
                    ]
                },
                "shippingAddress": {
                    "title": "ShippingAddress",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressDTO"
                        }
                    ]
                },
                "requiresCalculation": {
                    "title": "RequiresCalculation",
                    "type": "boolean"
                },
                "lines": {
                    "title": "Lines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderLineDTO"
                    }
                },
                "vatAnalysis": {
                    "title": "VatAnalysis",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VatAnalysisDTO"
                    }
                },
                "tags": {
                    "title": "Tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceId": {
                    "title": "SourceId",
                    "type": "string"
                },
                "sourceTags": {
                    "title": "SourceTags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "notes": {
                    "title": "Notes",
                    "type": "string"
                },
                "updateDate": {
                    "format": "date-time",
                    "title": "UpdateDate",
                    "type": "string"
                },
                "insertDate": {
                    "format": "date-time",
                    "title": "InsertDate",
                    "type": "string"
                },
                "favorite": {
                    "title": "Favorite",
                    "type": "boolean"
                },
                "userId": {
                    "title": "UserId",
                    "type": "string"
                },
                "invoiceUrl": {
                    "title": "InvoiceUrl",
                    "type": "string"
                },
                "notify": {
                    "title": "Notify",
                    "type": "string"
                },
                "notified": {
                    "title": "Notified",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customFields": {
                    "title": "CustomFields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderCustomFieldDTO"
                    }
                },
                "shippingLine": {
                    "title": "ShippingLine",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ShippingLineDTO"
                        }
                    ]
                },
                "giftLines": {
                    "title": "GiftLines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GiftLineDTO"
                    }
                },
                "expenseLines": {
                    "title": "ExpenseLines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExpenseLineDTO"
                    }
                },
                "payment": {
                    "title": "Payment",
                    "allOf": [
                        {
                            "$ref": "#/definitions/OrderPaymentDTO"
                        }
                    ]
                },
                "seriesId": {
                    "title": "SeriesId",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "OrderFilterTypeBaseFilter": {
            "type": "object",
            "properties": {
                "filter": {
                    "title": "Filter",
                    "enum": [
                        "TotalNetPrice",
                        "FinancialStatus",
                        "FulfillmentStatus",
                        "Code",
                        "OrderStatus",
                        "Tag",
                        "SourceTag",
                        "CustomerId",
                        "Status",
                        "Favorite",
                        "Search",
                        "CustomerCode",
                        "CustomerTin",
                        "InsertDate"
                    ],
                    "type": "string"
                },
                "operation": {
                    "title": "Operation",
                    "enum": [
                        "eq",
                        "neq",
                        "gte",
                        "lte",
                        "gt",
                        "lt",
                        "OneOf",
                        "NotOneOf",
                        "Contains",
                        "NotContains",
                        "StartsWith",
                        "EndsWith"
                    ],
                    "type": "string"
                },
                "value": {
                    "title": "Value"
                }
            },
            "additionalProperties": true
        },
        "OrderLineDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "productId": {
                    "title": "ProductId",
                    "type": "string"
                },
                "productVariantId": {
                    "title": "ProductVariantId",
                    "type": "string"
                },
                "productTitle": {
                    "title": "ProductTitle",
                    "type": "string"
                },
                "unitId": {
                    "title": "UnitId",
                    "type": "string"
                },
                "salesUnitId": {
                    "title": "SalesUnitId",
                    "type": "string"
                },
                "quantity": {
                    "format": "double",
                    "title": "Quantity",
                    "type": "number"
                },
                "unitQuantity": {
                    "format": "double",
                    "title": "UnitQuantity",
                    "type": "number"
                },
                "netValue": {
                    "format": "double",
                    "title": "NetValue",
                    "type": "number"
                },
                "price": {
                    "format": "double",
                    "title": "Price",
                    "type": "number"
                },
                "expenseValue": {
                    "format": "double",
                    "title": "ExpenseValue",
                    "type": "number"
                },
                "priceValue1": {
                    "format": "double",
                    "title": "PriceValue1",
                    "type": "number"
                },
                "priceValue2": {
                    "format": "double",
                    "title": "PriceValue2",
                    "type": "number"
                },
                "priceValue3": {
                    "format": "double",
                    "title": "PriceValue3",
                    "type": "number"
                },
                "unitPrice": {
                    "format": "double",
                    "title": "UnitPrice",
                    "type": "number"
                },
                "lineValue": {
                    "format": "double",
                    "title": "LineValue",
                    "type": "number"
                },
                "discountValue": {
                    "format": "double",
                    "title": "DiscountValue",
                    "type": "number"
                },
                "discountRate": {
                    "format": "double",
                    "title": "DiscountRate",
                    "type": "number"
                },
                "vatValue": {
                    "format": "double",
                    "title": "VatValue",
                    "type": "number"
                },
                "vatRate": {
                    "format": "double",
                    "title": "VatRate",
                    "type": "number"
                },
                "vatCode": {
                    "title": "VatCode",
                    "type": "string"
                },
                "sku": {
                    "title": "Sku",
                    "type": "string"
                },
                "dimension1Caption": {
                    "title": "Dimension1Caption",
                    "type": "string"
                },
                "dimension2Caption": {
                    "title": "Dimension2Caption",
                    "type": "string"
                },
                "dimension3Caption": {
                    "title": "Dimension3Caption",
                    "type": "string"
                },
                "dimension1Value": {
                    "title": "Dimension1Value",
                    "type": "string"
                },
                "dimension2Value": {
                    "title": "Dimension2Value",
                    "type": "string"
                },
                "dimension3Value": {
                    "title": "Dimension3Value",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "OrderPaymentDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "code": {
                    "title": "Code",
                    "type": "string"
                },
                "provider": {
                    "title": "Provider",
                    "enum": [
                        "OnePay",
                        "EveryPay",
                        "Credit",
                        "PayPal",
                        "Deposit",
                        "PayGate",
                        "CardLink",
                        "EDPS",
                        "JCC",
                        "ignore"
                    ],
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "enum": [
                        "Submitted",
                        "Completed",
                        "Pending",
                        "Cancelled",
                        "Failed",
                        "Error",
                        "ignore"
                    ],
                    "type": "string"
                },
                "cardType": {
                    "title": "CardType",
                    "enum": [
                        "Other",
                        "Visa",
                        "Mastercard",
                        "ignore"
                    ],
                    "type": "string"
                },
                "paymentDate": {
                    "format": "date-time",
                    "title": "PaymentDate",
                    "type": "string"
                },
                "amount": {
                    "format": "double",
                    "title": "Amount",
                    "type": "number"
                },
                "approvalCode": {
                    "title": "ApprovalCode",
                    "type": "string"
                },
                "cardNumber": {
                    "title": "CardNumber",
                    "type": "string"
                },
                "postDating": {
                    "format": "int32",
                    "title": "PostDating",
                    "type": "integer"
                },
                "installments": {
                    "format": "int32",
                    "title": "Installments",
                    "type": "integer"
                },
                "bankId": {
                    "title": "BankId",
                    "type": "string"
                },
                "transactionId": {
                    "title": "TransactionId",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "OrderSortTypeBaseSort": {
            "type": "object",
            "properties": {
                "field": {
                    "title": "Field",
                    "enum": [
                        "Id",
                        "TotalNetPrice",
                        "InsertDate",
                        "UpdateDate",
                        "Code"
                    ],
                    "type": "string"
                },
                "order": {
                    "title": "Order",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "type": "string"
                }
            },
            "additionalProperties": true
        }
    },
    "parameters": {},
    "responses": {},
    "securityDefinitions": {
        "API Key": {
            "type": "apiKey",
            "in": "header",
            "name": "x-shopranos-apikey"
        }
    },
    "security": [
        {
            "API Key": []
        }
    ],
    "tags": []
}