{
  "swagger": "2.0",
  "info": {
    "title": "Teams-Spirit",
    "description": "The Teams-Spirit Connector enables you to connect your Teams-Spirit Subscription to your flows.",
    "version": "1.0",
    "contact": {
      "name": "Immanuel Fuchs",
      "url": "https://teams-spirit.de/#kontakt",
      "email": "info@digitalteamwork.de"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://teams-spirit.de"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://teams-spirit.de/datenschutz/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Communication;Productivity"
    }
  ],
  "host": "api.app.teams-spirit.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/approvals": {
      "get": {
        "responses": {
          "200": {
            "description": "List of all approvals",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id"
                  },
                  "userName": {
                    "type": "string",
                    "description": "userName"
                  },
                  "userId": {
                    "type": "string",
                    "description": "userId"
                  },
                  "createForExternalUser": {
                    "type": "boolean",
                    "description": "createForExternalUser"
                  },
                  "externalUserId": {
                    "type": "string",
                    "description": "externalUserId"
                  },
                  "reactingUserId": {
                    "type": "string",
                    "description": "reactingUserId"
                  },
                  "reactingUserName": {
                    "type": "string",
                    "description": "reactingUserName"
                  },
                  "requestTime": {
                    "type": "string",
                    "description": "requestTime"
                  },
                  "expirationDateTime": {
                    "type": "string",
                    "description": "expirationDateTime"
                  },
                  "status": {
                    "type": "integer",
                    "format": "int32",
                    "description": "status"
                  },
                  "groupName": {
                    "type": "string",
                    "description": "groupName"
                  },
                  "groupDescription": {
                    "type": "string",
                    "description": "groupDescription"
                  },
                  "reason": {
                    "type": "string",
                    "description": "reason"
                  },
                  "rejectReason": {
                    "type": "string",
                    "description": "rejectReason"
                  },
                  "access": {
                    "type": "boolean",
                    "description": "access"
                  },
                  "reactionTime": {
                    "type": "string",
                    "description": "reactionTime"
                  },
                  "type": {
                    "type": "string",
                    "description": "type"
                  },
                  "tid": {
                    "type": "string",
                    "description": "tid"
                  },
                  "templateId": {
                    "type": "string",
                    "description": "templateId"
                  },
                  "attributeSettings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "attributeId": {
                          "type": "string",
                          "description": "attributeId"
                        },
                        "value": {
                          "type": "string",
                          "description": "value"
                        },
                        "type": {
                          "type": "integer",
                          "format": "int32",
                          "description": "type"
                        }
                      }
                    },
                    "description": "attributeSettings"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all Approvals",
        "description": "Get all Approvals",
        "operationId": "GetApprovals",
        "parameters": []
      }
    },
    "/approvals/{Approval-ID}/approve": {
      "get": {
        "responses": {
          "200": {
            "description": "Approval was approved"
          }
        },
        "summary": "Approve",
        "description": "Approves the given approval",
        "operationId": "Approve",
        "parameters": [
          {
            "name": "Approval-ID",
            "x-ms-summary": "Id of approval",
            "description": "Id of approval",
            "x-ms-url-encoding": "single",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/approvals/{Approval-ID}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Deletion successful"
          }
        },
        "summary": "Reject",
        "description": "Reject",
        "operationId": "Reject",
        "parameters": [
          {
            "name": "Approval-ID",
            "in": "path",
            "x-ms-summary": "Id of approval",
            "description": "Id of approval",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/webhooks": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object"
        },
        "description": "EventData"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Array of webhooks",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get All Registered Flows",
        "description": "Get All Registered Flows",
        "operationId": "GetAllRegisteredFlows",
        "x-ms-visibility": "internal",
        "parameters": []
      },
      "post": {
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "unsubscribeUrl": {
                  "type": "string",
                  "description": "Unsubscribe-URL"
                }
              }
            }
          }
        },
        "summary": "Action-Trigger",
        "description": "Action-Trigger",
        "operationId": "ActionTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "description": "callbackUrl",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": ""
                },
                "name": {
                  "type": "string",
                  "description": "Name",
                  "title": "Name",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAllRegisteredFlows",
                    "value-path": "name",
                    "value-title": "name"
                  }
                }
              },
              "required": [
                "callbackUrl",
                "name"
              ]
            }
          }
        ]
      }
    },
    "/webhooks/delete/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Delete WebHook",
        "description": "Delete the WebHook",
        "operationId": "DeleteWebHook",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "ID",
            "description": "Specify the ID of the WebHook"
          }
        ]
      }
    },
    "/groups/{Group-ID}/archive": {
      "post": {
        "responses": {
          "200": {
            "description": "Group archived"
          }
        },
        "summary": "Archive Team",
        "description": "Archives the Team",
        "operationId": "ArchiveTeam",
        "parameters": [
          {
            "name": "Group-ID",
            "in": "path",
            "x-ms-summary": "Id of group",
            "description": "Id of group",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sharePointReadOnly": {
                  "type": "boolean",
                  "description": "sharePointReadOnly",
                  "title": "Make the SharePoint site read-only for team members",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "sharePointReadOnly"
              ]
            }
          }
        ]
      }
    },
    "/groups/{Group-ID}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Deletion successful"
          }
        },
        "summary": "Delete Team",
        "description": "Deletes the Team",
        "operationId": "DeleteTeam",
        "parameters": [
          {
            "name": "Group-ID",
            "in": "path",
            "x-ms-summary": "Id of group",
            "x-ms-url-encoding": "single",
            "description": "Id of group",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/attributes": {
      "get": {
        "responses": {
          "200": {
            "description": "List of attributes",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id"
                  },
                  "type": {
                    "type": "string",
                    "description": "type"
                  },
                  "key": {
                    "type": "string",
                    "description": "key"
                  },
                  "adKey": {
                    "type": "integer",
                    "format": "int32",
                    "description": "adKey"
                  },
                  "color": {
                    "type": "integer",
                    "format": "int32",
                    "description": "color"
                  },
                  "description": {
                    "type": "string",
                    "description": "description"
                  },
                  "global": {
                    "type": "boolean",
                    "description": "global"
                  },
                  "locked": {
                    "type": "boolean",
                    "description": "locked"
                  },
                  "predefinedValues": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "predefinedValues"
                  }
                }
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get all Tags",
        "description": "Gets all Tags",
        "operationId": "GetTags",
        "parameters": []
      }
    },
    "/groups/{Group-ID}/change-tag-value": {
      "patch": {
        "responses": {
          "200": {
            "description": "Tag changed"
          }
        },
        "summary": "Change Tag Value",
        "description": "Changes the Value of a Tag in a given Team",
        "operationId": "ChangeTagValue",
        "parameters": [
          {
            "name": "Group-ID",
            "in": "path",
            "x-ms-summary": "Id of group",
            "description": "Id of group",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "Content",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id",
                  "title": "Tag",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTags",
                    "value-path": "id",
                    "value-title": "key"
                  }
                },
                "value": {
                  "type": "string",
                  "description": "value",
                  "title": "Value",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTag",
                    "value-collection": "predefinedValues",
                    "parameters": {
                      "id": {
                        "parameter": "id"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetTag",
                    "itemsPath": "predefinedValues",
                    "parameters": {
                      "id": {
                        "parameterReference": "Content/id"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/groups/{Group-ID}/remove-all-users-not-owner": {
      "post": {
        "responses": {
          "200": {
            "description": "Users removed"
          }
        },
        "summary": "Remove all Non-Owners from Team",
        "description": "Removes all the Members exept for Owners from the Team",
        "operationId": "RemoveAllUsersExeptOwners",
        "parameters": [
          {
            "name": "Group-ID",
            "in": "path",
            "x-ms-summary": "Id of group",
            "description": "Id of group",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/groups/{Group-ID}/remove-all-users-except-selected-owner": {
      "post": {
        "responses": {
          "200": {
            "description": "Users removed"
          }
        },
        "summary": "Remove all Users except Owner",
        "description": "Removes all Users except one selected Owner",
        "operationId": "RemoveAllUsersExceptOneOwner",
        "parameters": [
          {
            "name": "Group-ID",
            "in": "path",
            "x-ms-summary": "Id of group",
            "description": "Id of group",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "ownerId": {
                  "type": "string",
                  "description": "ownerId",
                  "title": "Owner Id"
                }
              }
            }
          }
        ]
      }
    },
    "/groups/{Group-ID}/remove-all-guests": {
      "post": {
        "responses": {
          "200": {
            "description": "Guests removed"
          }
        },
        "summary": "Remove all Guests",
        "description": "Removes all Guests from the Team",
        "operationId": "RemoveGuests",
        "parameters": [
          {
            "name": "Group-ID",
            "in": "path",
            "x-ms-summary": "Id of group",
            "description": "Id of group",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/groups/{Group-ID}/remove-user": {
      "post": {
        "responses": {
          "200": {
            "description": "User removed"
          }
        },
        "summary": "Remove User from Team",
        "description": "Removes a User from the Team",
        "operationId": "RemoveUser",
        "parameters": [
          {
            "name": "Group-ID",
            "in": "path",
            "x-ms-summary": "Id of group",
            "description": "Id of group",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "userId",
                  "title": "User Id"
                }
              }
            }
          }
        ]
      }
    },
    "/groups/{Group-ID}/change-role-to-member": {
      "post": {
        "responses": {
          "200": {
            "description": "Role changed"
          }
        },
        "summary": "Change role to Member",
        "description": "Changes a users role to member in the Team",
        "operationId": "ChangeRoleToMember",
        "parameters": [
          {
            "name": "Group-ID",
            "in": "path",
            "x-ms-summary": "Id of group",
            "x-ms-url-encoding": "single",
            "description": "Id of group",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "userId",
                  "title": "User Id"
                }
              }
            }
          }
        ]
      }
    },
    "/groups/{Group-ID}/change-role-to-owner": {
      "post": {
        "responses": {
          "200": {
            "description": "Role changed"
          }
        },
        "summary": "Change role to Owner",
        "description": "Promotes a User in the Team to Owner",
        "operationId": "ChangeRoleToOwner",
        "parameters": [
          {
            "name": "Group-ID",
            "in": "path",
            "x-ms-summary": "Id of group",
            "description": "Id of group",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "userId",
                  "title": "User Id"
                }
              }
            }
          }
        ]
      }
    },
    "/attributes/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Single attribute",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id"
                },
                "type": {
                  "type": "string",
                  "description": "type"
                },
                "key": {
                  "type": "string",
                  "description": "key"
                },
                "adKey": {
                  "type": "integer",
                  "format": "int32",
                  "description": "adKey"
                },
                "color": {
                  "type": "integer",
                  "format": "int32",
                  "description": "color"
                },
                "description": {
                  "type": "string",
                  "description": "description"
                },
                "global": {
                  "type": "boolean",
                  "description": "global"
                },
                "locked": {
                  "type": "boolean",
                  "description": "locked"
                },
                "predefinedValues": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "predefinedValues"
                }
              }
            }
          }
        },
        "summary": "GetTag",
        "description": "Gets a Single Tag",
        "operationId": "GetTag",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "x-ms-summary": "Id of tag",
            "description": "Id of tag",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/groups/{Group-ID}/extend-expiration": {
      "post": {
        "responses": {
          "200": {
            "description": "Role changed"
          }
        },
        "summary": "Extend Expiration Date",
        "description": "Extends the Groups Expiration Date",
        "operationId": "ExtendExpirationDate",
        "parameters": [
          {
            "name": "Group-ID",
            "in": "path",
            "x-ms-summary": "Id of group",
            "description": "Id of group",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "weeks": {
                  "type": "string",
                  "description": "weeks",
                  "title": "Weeks",
                  "default": "4'"
                }
              }
            }
          }
        ]
      }
    },
    "/groups/{Group-ID}/attribute/{Tag-ID}": {
      "get": {
        "responses": {
          "200": {
            "description": "The tags value",
            "schema": {
              "title": "Tag Value",
              "type": "string"
            }
          }
        },
        "summary": "Get Tag Value",
        "description": "Gets a Tags value for a group",
        "operationId": "GetTagValue",
        "parameters": [
          {
            "name": "Group-ID",
            "in": "path",
            "x-ms-summary": "Id of group",
            "description": "Id of group",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "Tag-ID",
            "in": "path",
            "x-ms-summary": "Id of tag",
            "description": "Id of tag",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTags",
              "value-path": "id",
              "value-title": "key"
            }
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2-auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {
        "access_as_user": "api://app.teams-spirit.com/3a57026a-cf3f-4295-93f5-ca245af3d2df/access_as_user"
      }
    }
  },
  "security": [
    {
      "oauth2-auth": [
        "api://app.teams-spirit.com/3a57026a-cf3f-4295-93f5-ca245af3d2df/access_as_user"
      ]
    }
  ],
  "tags": []
}