{
  "swagger": "2.0",
  "info": {
    "title": "Dime.Scheduler",
    "description": "Dime.Scheduler is a resource and project planning solution that extends the capabilities of ERP, CRM and other business systems with powerful graphical scheduling tools.",
    "version": "0.1",
    "contact": {
      "name": "Dime.Scheduler Support",
      "url": "https://docs.dimescheduler.com",
      "email": "support@dimescheduler.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.dimescheduler.com"
    },
    {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://www.dime-software.com/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Data"
    }
  ],
  "host": "api.dimescheduler.com",
  "basePath": "/v0.1",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/category": {
      "post": {
        "summary": "Add, update or remove a category",
        "description": "Add, update or remove a category, which is the visual indicator that renders the background of the appointment.",
        "operationId": "Category",
        "tags": ["indicator"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/category"
            }
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/timeMarker": {
      "post": {
        "summary": "Add, update or remove a time marker",
        "description": "Add, update or remove a time marker, which is the visual indicator that renders the underscore of the appointment.",
        "operationId": "Timemarker",
        "tags": ["indicator"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "timeMarker",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/timeMarker"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/pin": {
      "post": {
        "summary": "Add, update or remove a pin",
        "description": "Add, update or remove a pin, which is the visual indicator that renders the colors of the markers on the map.",
        "operationId": "Pin",
        "tags": ["indicator"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "pin",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/pin"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/resource": {
      "post": {
        "summary": "Add, update or remove a resource",
        "description": "Add, update or remove a resource.",
        "operationId": "Resource",
        "tags": ["resource"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "resource",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/resource"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/actionUri": {
      "post": {
        "summary": "Add, update or remove an action link",
        "description": "Add, update or remove an action link.",
        "operationId": "Actionuri",
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "actionUri",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/actionUri"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointment": {
      "post": {
        "summary": "Add, update or remove an appointment",
        "description": "Add, update or remove an appointment.",
        "operationId": "Appointment",
        "tags": ["appointment"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appointment"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentCategory": {
      "post": {
        "summary": "Add, update or remove the category of an appointment",
        "description": "Add, update or remove the category of an appointment.",
        "operationId": "AppointmentCategory",
        "tags": ["appointment"],
        "parameters": [
          {
            "name": "appointmentCategory",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/appointmentCategory"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentContainer": {
      "post": {
        "summary": "Add, update or remove an appointment container",
        "description": "Add, update or remove an appointment container.",
        "operationId": "AppointmentContainer",
        "tags": ["appointment"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "appointmentContainer",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/appointmentContainer"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentContent": {
      "post": {
        "summary": "Add, update or remove the content of the appointment",
        "description": "Add, update or remove the content of the appointment.",
        "operationId": "AppointmentContent",
        "tags": ["appointment"],
        "parameters": [
          {
            "name": "appointmentContent",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/appointmentContent"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentImportance": {
      "post": {
        "summary": "Add, update or remove the priority of an appointment",
        "description": "Add, update or remove the priority of an appointment.",
        "operationId": "AppointmentImportance",
        "tags": ["appointment"],
        "parameters": [
          {
            "name": "appointmentImportance",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/appointmentImportance"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentLocked": {
      "post": {
        "summary": "Add, update or remove the appointment's locked status",
        "description": "Add, update or remove the appointment's locked status.",
        "operationId": "AppointmentLocked",
        "tags": ["appointment"],
        "parameters": [
          {
            "name": "appointmentLocked",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/appointmentLocked"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentPlanningQuantity": {
      "post": {
        "summary": "Add, update or remove the appointment's planning quantity",
        "description": "Add, update or remove the appointment's planning quantity.",
        "operationId": "AppointmentPlanningQuantity",
        "tags": ["appointment"],
        "parameters": [
          {
            "name": "appointmentPlanningQuantity",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/appointmentPlanningQuantity"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentTimeMarker": {
      "post": {
        "summary": "Add, update or remove the appointment's time marker",
        "description": "Add, update or remove the appointment's time marker.",
        "operationId": "AppointmentTimemarker",
        "tags": ["appointment"],
        "parameters": [
          {
            "name": "appointmentTimeMarker",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/appointmentTimeMarker"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentUri": {
      "post": {
        "summary": "Add, update or remove an appointment link",
        "description": "Add, update or remove an appointment link.",
        "operationId": "AppointmentUri",
        "tags": ["appointment"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "appointmentUri",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/appointmentUri"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/assignment": {
      "post": {
        "summary": "Add, update or remove an assignment",
        "description": "Add, update or remove an assignment, which is the allocation of a resource to an appointment.",
        "operationId": "Assignment",
        "tags": ["appointment"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "assignment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/assignment"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/caption": {
      "post": {
        "summary": "Add, update or remove a caption",
        "description": "Add, update or remove a caption.",
        "operationId": "Caption",
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "caption",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/caption"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/container": {
      "post": {
        "summary": "Add, update or remove a container",
        "description": "Add, update or remove a container.",
        "operationId": "Container",
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "container",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/container"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/filterGroup": {
      "post": {
        "summary": "Add, update or remove a filter group",
        "description": "Add, update or remove a filter group.",
        "operationId": "FilterGroup",
        "tags": ["filters"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "filterGroup",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/filterGroup"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/filterValue": {
      "post": {
        "summary": "Add, update or remove a filter value",
        "description": "Add, update or remove a filter value.",
        "operationId": "FilterValue",
        "tags": ["filters"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "filterValue",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/filterValue"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/job": {
      "post": {
        "summary": "Add, update or remove a job",
        "description": "Add, update or remove a job.",
        "operationId": "Job",
        "tags": ["task"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "job",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/job"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/notification": {
      "post": {
        "summary": "Add, update or remove notification",
        "description": "Add, update or remove notification.",
        "operationId": "Notification",
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "notification",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/notification"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/resourceCalendar": {
      "post": {
        "summary": "Add, update or remove a calendar for a resource",
        "description": "Add, update or remove a calendar for a resource.",
        "operationId": "ResourceCalendar",
        "tags": ["resource"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "resourceCalendar",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/resourceCalendar"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/resourceCapacity": {
      "post": {
        "summary": "Add, update or remove the capacity of a resource",
        "description": "Add, update or remove the capacity of a resource.",
        "operationId": "ResourceCapacity",
        "tags": ["resource"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "resourceCapacity",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/resourceCapacity"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/resourceFilterValue": {
      "post": {
        "summary": "Add, update or remove the filter value of a resource",
        "description": "Add, update or remove the filter value of a resource.",
        "operationId": "ResourceFilterValue",
        "tags": ["resource"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "resourceFilterValue",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/resourceFilterValue"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/resourceGpsTracking": {
      "post": {
        "summary": "Add, update or remove the live location of a resource",
        "description": "Add, update or remove the live location of a resource.",
        "operationId": "ResourceGpstracking",
        "tags": ["resource"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "resourceGpsTracking",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/resourceGpsTracking"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/resourceUri": {
      "post": {
        "summary": "Add, update or remove the uri of a resource",
        "description": "Add, update or remove the uri of a resource.",
        "operationId": "ResourceUri",
        "tags": ["resource"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "resourceUri",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/resourceUri"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/task": {
      "post": {
        "summary": "Add, update or remove a task",
        "description": "Add, update or remove a task.",
        "operationId": "Task",
        "tags": ["task"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "task",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/task"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/taskContainer": {
      "post": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "summary": "Add, update or remove a task container",
        "description": "Add, update or remove a task container.",
        "operationId": "TaskContainer",
        "tags": ["task"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "taskContainer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskContainer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/taskFilterValue": {
      "post": {
        "summary": "Add, update or remove a task filter value",
        "description": "Add, update or remove a task filter value.",
        "operationId": "TaskFiltervalue",
        "tags": ["task"],
        "parameters": [
          {
            "name": "ds-append",
            "in": "header",
            "description": "True to create or update the record, false to remove.",
            "type": "boolean",
            "x-ms-summary": "Append"
          },
          {
            "name": "taskFilterValue",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/taskFilterValue"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/taskLocked": {
      "post": {
        "summary": "Add, update or remove the task's locked status",
        "description": "Add, update or remove the task's locked status.",
        "operationId": "TaskLocked",
        "tags": ["task"],
        "parameters": [
          {
            "name": "taskLocked",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/taskLocked"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    }
  },
  "definitions": {
    "actionUri": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "uriType": {
          "x-ms-summary": "URI type",
          "format": "int32",
          "type": "integer"
        },
        "uri": {
          "x-ms-summary": "URI",
          "type": "string"
        },
        "description": {
          "x-ms-summary": "Description",
          "maxLength": 255,
          "type": "string"
        },
        "default": {
          "x-ms-summary": "Default",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "uriType": 0,
        "uri": "string",
        "description": "string",
        "default": true
      }
    },
    "appointment": {
      "type": "object",
      "properties": {
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string"
        },
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "maxLength": 50,
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "maxLength": 50,
          "type": "string"
        },
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string"
        },
        "subject": {
          "x-ms-summary": "Subject",
          "type": "string"
        },
        "body": {
          "x-ms-summary": "Body",
          "type": "string"
        },
        "start": {
          "x-ms-summary": "Start",
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "x-ms-summary": "End",
          "format": "date-time",
          "type": "string"
        },
        "isAllDay": {
          "x-ms-summary": "Is all day",
          "type": "boolean"
        },
        "timeMarker": {
          "x-ms-summary": "Time marker",
          "type": "string"
        },
        "category": {
          "x-ms-summary": "Category",
          "type": "string"
        },
        "importance": {
          "x-ms-summary": "Importance",
          "type": "integer",
          "default": 0,
          "enum": [0, 1, 2]
        },
        "locked": {
          "x-ms-summary": "Locked",
          "type": "boolean"
        },
        "replaceResource": {
          "x-ms-summary": "Replace resource",
          "type": "boolean"
        },
        "backOfficeId": {
          "x-ms-summary": "Back office id",
          "maxLength": 100,
          "type": "string"
        },
        "backOfficeParentId": {
          "x-ms-summary": "Back office parent id",
          "maxLength": 100,
          "type": "string"
        },
        "unitOfMeasure": {
          "x-ms-summary": "Unit of measure",
          "maxLength": 20,
          "type": "string"
        },
        "unitOfMeasureConversion": {
          "x-ms-summary": "Unit of measure conversion",
          "format": "double",
          "type": "number"
        },
        "planningQuantity": {
          "x-ms-summary": "Planning quantity",
          "format": "double",
          "type": "number"
        },
        "useFixedPlanningQuantity": {
          "x-ms-summary": "Use fixed planning quantity",
          "type": "boolean"
        },
        "roundToUnitOfMeasure": {
          "x-ms-summary": "Round to unit of measure",
          "type": "boolean"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back office",
          "type": "boolean"
        }
      },
      "example": {
        "appointmentGuid": "04cd4567-1295-4226-86bd-5b1e99d7bab8",
        "sourceApp": "MYCRMAPP",
        "sourceType": "DEMO",
        "jobNo": "DS_DEMO",
        "taskNo": "DS_DEMO_15MIN",
        "resourceNo": "JOHNDOE",
        "subject": "Dime.Scheduler 15 minute introduction",
        "body": "Dime.Scheduler 15 minute introduction. Teams meeting.",
        "start": "2022-10-01T15:00:00Z",
        "end": "2022-10-01T15:15:00Z"
      }
    },
    "appointmentCategory": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer"
        },
        "category": {
          "x-ms-summary": "Category",
          "maxLength": 100,
          "type": "string"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "appointmentId": 0,
        "category": "string",
        "appointmentGuid": "string",
        "sentFromBackOffice": true
      }
    },
    "appointmentContainer": {
      "type": "object",
      "properties": {
        "container": {
          "x-ms-summary": "Container",
          "maxLength": 100,
          "type": "string"
        },
        "appointment": {
          "x-ms-summary": "Appointment",
          "maxLength": 100,
          "type": "string"
        }
      },
      "example": {
        "container": "string",
        "appointment": "string"
      }
    },
    "appointmentContent": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean"
        },
        "subject": {
          "x-ms-summary": "Subject",
          "type": "string"
        },
        "body": {
          "x-ms-summary": "Body",
          "type": "string"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "appointmentId": 0,
        "appointmentGuid": "string",
        "sentFromBackOffice": true,
        "subject": "string",
        "body": "string"
      }
    },
    "appointmentImportance": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer"
        },
        "importance": {
          "x-ms-summary": "Importance",
          "format": "int32",
          "default": 0,
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "appointmentId": 0,
        "importance": 0,
        "appointmentGuid": "string",
        "sentFromBackOffice": true
      }
    },
    "appointmentLocked": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer"
        },
        "locked": {
          "x-ms-summary": "Locked",
          "type": "boolean"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "appointmentId": 0,
        "locked": true,
        "appointmentGuid": "string",
        "sentFromBackOffice": true
      }
    },
    "appointmentPlanningQuantity": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer"
        },
        "quantity": {
          "x-ms-summary": "Quantity",
          "format": "double",
          "type": "number"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "appointmentId": 0,
        "quantity": 0,
        "appointmentGuid": "string",
        "sentFromBackOffice": true
      }
    },
    "appointmentTimeMarker": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer"
        },
        "timeMarker": {
          "x-ms-summary": "Time marker",
          "maxLength": 100,
          "type": "string"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "appointmentId": 0,
        "timeMarker": "string",
        "appointmentGuid": "string",
        "sentFromBackOffice": true
      }
    },
    "appointmentUri": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string"
        },
        "uri": {
          "x-ms-summary": "URI",
          "maxLength": 1000,
          "type": "string"
        },
        "description": {
          "x-ms-summary": "Description",
          "maxLength": 255,
          "type": "string"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "appointmentId": 0,
        "appointmentGuid": "string",
        "uri": "string",
        "description": "string"
      }
    },
    "assignment": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string"
        },
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "appointmentId": 0,
        "appointmentGuid": "string",
        "resourceNo": "string",
        "sentFromBackOffice": true
      }
    },
    "caption": {
      "type": "object",
      "properties": {
        "context": {
          "x-ms-summary": "Context",
          "format": "int32",
          "type": "integer"
        },
        "sourceTable": {
          "x-ms-summary": "Source table",
          "maxLength": 255,
          "type": "string"
        },
        "fieldName": {
          "x-ms-summary": "Field name",
          "maxLength": 255,
          "type": "string"
        },
        "language": {
          "x-ms-summary": "Language",
          "maxLength": 10,
          "type": "string"
        },
        "text": {
          "x-ms-summary": "Text",
          "maxLength": 100,
          "type": "string"
        }
      },
      "example": {
        "context": 0,
        "sourceTable": "string",
        "fieldName": "string",
        "language": "string",
        "text": "string"
      }
    },
    "category": {
      "type": "object",
      "properties": {
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 100,
          "type": "string"
        },
        "displayName": {
          "x-ms-summary": "Display name",
          "maxLength": 100,
          "type": "string"
        },
        "color": {
          "x-ms-summary": "Color",
          "maxLength": 7,
          "type": "string"
        }
      },
      "example": {
        "name": "OOO",
        "displayName": "Out of office",
        "color": "#6e62b5"
      }
    },
    "container": {
      "type": "object",
      "properties": {
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 100,
          "type": "string"
        },
        "handleDate": {
          "x-ms-summary": "Handle date",
          "format": "date-time",
          "type": "string"
        },
        "handleLocked": {
          "x-ms-summary": "Handle locked",
          "type": "boolean"
        }
      },
      "example": {
        "name": "Project Icarus",
        "handleDate": "2022-01-01T10:00",
        "handleLocked": true
      }
    },
    "filterGroup": {
      "type": "object",
      "properties": {
        "id": {
          "x-ms-summary": "Id",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 50,
          "type": "string"
        },
        "columnNo": {
          "x-ms-summary": "Column no.",
          "format": "int32",
          "type": "integer"
        },
        "dataFilter": {
          "x-ms-summary": "Date filter",
          "type": "boolean"
        }
      },
      "example": {
        "id": 0,
        "name": "Driver's license",
        "columnNo": 0,
        "dataFilter": true
      }
    },
    "filterValue": {
      "type": "object",
      "properties": {
        "group": {
          "x-ms-summary": "Group",
          "maxLength": 50,
          "type": "string"
        },
        "value": {
          "x-ms-summary": "Value",
          "maxLength": 100,
          "type": "string"
        }
      },
      "example": {
        "group": "Driver's license",
        "value": "Class B"
      }
    },
    "job": {
      "type": "object",
      "required": ["sourceApp", "sourceType", "jobNo", "shortDescription"],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "maxLength": 50,
          "type": "string"
        },
        "shortDescription": {
          "x-ms-summary": "Short description",
          "maxLength": 50,
          "type": "string"
        },
        "description": {
          "x-ms-summary": "Description",
          "type": "string"
        },
        "type": {
          "x-ms-summary": "Type",
          "maxLength": 50,
          "type": "string"
        },
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 255,
          "type": "string"
        },
        "category": {
          "x-ms-summary": "Category",
          "maxLength": 100,
          "type": "string"
        },
        "timeMarker": {
          "x-ms-summary": "Time marker",
          "maxLength": 100,
          "type": "string"
        },
        "pin": {
          "x-ms-summary": "Pin",
          "maxLength": 100,
          "type": "string"
        },
        "customerNo": {
          "x-ms-summary": "Customer no.",
          "maxLength": 20,
          "type": "string"
        },
        "customerName": {
          "x-ms-summary": "Customer name",
          "maxLength": 50,
          "type": "string"
        },
        "customerAddress": {
          "x-ms-summary": "Customer address",
          "type": "string"
        },
        "customerAddressGeoLong": {
          "x-ms-summary": "Customer address longitude",
          "maxLength": 50,
          "type": "string"
        },
        "customerAddressGeoLat": {
          "x-ms-summary": "Customer address latitude",
          "maxLength": 50,
          "type": "string"
        },
        "customerPhone": {
          "x-ms-summary": "Customer phone",
          "maxLength": 50,
          "type": "string"
        },
        "customerEmail": {
          "x-ms-summary": "Customer e-mail",
          "maxLength": 50,
          "type": "string",
          "format": "email"
        },
        "contactNo": {
          "x-ms-summary": "Contact no.",
          "maxLength": 20,
          "type": "string"
        },
        "contactName": {
          "x-ms-summary": "Contact name",
          "maxLength": 50,
          "type": "string"
        },
        "contactAddress": {
          "x-ms-summary": "Contact address",
          "type": "string"
        },
        "contactAddressGeoLong": {
          "x-ms-summary": "Contact address longitude",
          "maxLength": 50,
          "type": "string"
        },
        "contactAddressGeoLat": {
          "x-ms-summary": "Contact address latitude",
          "maxLength": 50,
          "type": "string"
        },
        "contactPhone": {
          "x-ms-summary": "Contact phone",
          "maxLength": 50,
          "type": "string"
        },
        "contactEmail": {
          "x-ms-summary": "Contact e-mail",
          "maxLength": 50,
          "type": "string",
          "format": "email"
        },
        "siteNo": {
          "x-ms-summary": "Site no.",
          "maxLength": 20,
          "type": "string"
        },
        "siteName": {
          "x-ms-summary": "Site name",
          "maxLength": 50,
          "type": "string"
        },
        "siteAddress": {
          "x-ms-summary": "Site address",
          "type": "string"
        },
        "siteAddressGeoLong": {
          "x-ms-summary": "Site address longitude",
          "maxLength": 50,
          "type": "string"
        },
        "siteAddressGeoLat": {
          "x-ms-summary": "Site address latitude",
          "maxLength": 50,
          "type": "string"
        },
        "sitePhone": {
          "x-ms-summary": "Site phone",
          "maxLength": 50,
          "type": "string"
        },
        "siteEmail": {
          "x-ms-summary": "Site e-mail",
          "maxLength": 50,
          "type": "string",
          "format": "email"
        },
        "siteRegion": {
          "x-ms-summary": "Site region",
          "maxLength": 10,
          "type": "string"
        },
        "siteStreet": {
          "x-ms-summary": "Site street",
          "maxLength": 255,
          "type": "string"
        },
        "siteStreetNo": {
          "x-ms-summary": "Site street no.",
          "maxLength": 20,
          "type": "string"
        },
        "sitePostcode": {
          "x-ms-summary": "Site post code",
          "maxLength": 20,
          "type": "string"
        },
        "siteCity": {
          "x-ms-summary": "Site city",
          "maxLength": 50,
          "type": "string"
        },
        "siteCounty": {
          "x-ms-summary": "Site county",
          "maxLength": 50,
          "type": "string"
        },
        "siteState": {
          "x-ms-summary": "Site state",
          "maxLength": 50,
          "type": "string"
        },
        "siteCountry": {
          "x-ms-summary": "Site country",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromNo": {
          "x-ms-summary": "Site from no.",
          "maxLength": 20,
          "type": "string"
        },
        "siteFromName": {
          "x-ms-summary": "Site from name",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromAddress": {
          "x-ms-summary": "Site from address",
          "type": "string"
        },
        "siteFromAddressGeoLong": {
          "x-ms-summary": "Site from longitude",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromAddressGeoLat": {
          "x-ms-summary": "Site from latitude",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromPhone": {
          "x-ms-summary": "Site from phone",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromEmail": {
          "x-ms-summary": "Site from e-mail",
          "maxLength": 50,
          "type": "string",
          "format": "email"
        },
        "siteFromRegion": {
          "x-ms-summary": "Site from region",
          "maxLength": 10,
          "type": "string"
        },
        "siteFromStreet": {
          "x-ms-summary": "Site from street",
          "maxLength": 255,
          "type": "string"
        },
        "siteFromStreetNo": {
          "x-ms-summary": "Site from street no.",
          "maxLength": 20,
          "type": "string"
        },
        "siteFromPostcode": {
          "x-ms-summary": "Site from post code",
          "maxLength": 20,
          "type": "string"
        },
        "siteFromCity": {
          "x-ms-summary": "Site from city",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromCounty": {
          "x-ms-summary": "Site from county",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromState": {
          "x-ms-summary": "Site from state",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromCountry": {
          "x-ms-summary": "Site from country",
          "maxLength": 50,
          "type": "string"
        },
        "billNo": {
          "x-ms-summary": "Bill no.",
          "maxLength": 20,
          "type": "string"
        },
        "billName": {
          "x-ms-summary": "Bill name",
          "maxLength": 50,
          "type": "string"
        },
        "billAddress": {
          "x-ms-summary": "Bill address",
          "type": "string"
        },
        "billAddressGeoLong": {
          "x-ms-summary": "Bill address longitude",
          "maxLength": 50,
          "type": "string"
        },
        "billAddressGeoLat": {
          "x-ms-summary": "Bill address latitude",
          "maxLength": 50,
          "type": "string"
        },
        "billPhone": {
          "x-ms-summary": "Bill phone",
          "maxLength": 50,
          "type": "string"
        },
        "billEmail": {
          "x-ms-summary": "Bill e-mail",
          "maxLength": 50,
          "type": "string",
          "format": "email"
        },
        "billRegion": {
          "x-ms-summary": "Bill region",
          "maxLength": 10,
          "type": "string"
        },
        "importance": {
          "x-ms-summary": "Importance",
          "format": "int32",
          "default": 0,
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "creationDateTime": {
          "x-ms-summary": "Creation datetime",
          "format": "date-time",
          "type": "string"
        },
        "customerReference": {
          "x-ms-summary": "Customer reference",
          "maxLength": 50,
          "type": "string"
        },
        "language": {
          "x-ms-summary": "Language",
          "maxLength": 10,
          "type": "string"
        },
        "responsible": {
          "x-ms-summary": "Responsible",
          "maxLength": 50,
          "type": "string"
        },
        "creator": {
          "x-ms-summary": "Creator",
          "maxLength": 50,
          "type": "string"
        },
        "freeText1": {
          "x-ms-summary": "Free text field #1",
          "maxLength": 100,
          "type": "string"
        },
        "freeText2": {
          "x-ms-summary": "Free text field #2",
          "maxLength": 100,
          "type": "string"
        },
        "freeText3": {
          "x-ms-summary": "Free text field #3",
          "maxLength": 100,
          "type": "string"
        },
        "freeText4": {
          "x-ms-summary": "Free text field #4",
          "maxLength": 100,
          "type": "string"
        },
        "freeText5": {
          "x-ms-summary": "Free text field #5",
          "maxLength": 100,
          "type": "string"
        },
        "freeText6": {
          "x-ms-summary": "Free text field #6",
          "maxLength": 100,
          "type": "string"
        },
        "freeText7": {
          "x-ms-summary": "Free text field #7",
          "maxLength": 100,
          "type": "string"
        },
        "freeText8": {
          "x-ms-summary": "Free text field #8",
          "maxLength": 100,
          "type": "string"
        },
        "freeText9": {
          "x-ms-summary": "Free text field #9",
          "maxLength": 100,
          "type": "string"
        },
        "freeText10": {
          "x-ms-summary": "Free text field #10",
          "maxLength": 100,
          "type": "string"
        },
        "freeText11": {
          "x-ms-summary": "Free text field #11",
          "maxLength": 100,
          "type": "string"
        },
        "freeText12": {
          "x-ms-summary": "Free text field #12",
          "maxLength": 100,
          "type": "string"
        },
        "freeText13": {
          "x-ms-summary": "Free text field #13",
          "maxLength": 100,
          "type": "string"
        },
        "freeText14": {
          "x-ms-summary": "Free text field #14",
          "maxLength": 100,
          "type": "string"
        },
        "freeText15": {
          "x-ms-summary": "Free text field #15",
          "maxLength": 100,
          "type": "string"
        },
        "freeText16": {
          "x-ms-summary": "Free text field #16",
          "maxLength": 100,
          "type": "string"
        },
        "freeText17": {
          "x-ms-summary": "Free text field #17",
          "maxLength": 100,
          "type": "string"
        },
        "freeText18": {
          "x-ms-summary": "Free text field #18",
          "maxLength": 100,
          "type": "string"
        },
        "freeText19": {
          "x-ms-summary": "Free text field #19",
          "maxLength": 100,
          "type": "string"
        },
        "freeText20": {
          "x-ms-summary": "Free text field #20",
          "maxLength": 100,
          "type": "string"
        },
        "freeDecimal1": {
          "x-ms-summary": "Free decimal field #1",
          "format": "double",
          "type": "number"
        },
        "freeDecimal2": {
          "x-ms-summary": "Free decimal field #2",
          "format": "double",
          "type": "number"
        },
        "freeDecimal3": {
          "x-ms-summary": "Free decimal field #3",
          "format": "double",
          "type": "number"
        },
        "freeDecimal4": {
          "x-ms-summary": "Free decimal field #4",
          "format": "double",
          "type": "number"
        },
        "freeDecimal5": {
          "x-ms-summary": "Free decimal field #5",
          "format": "double",
          "type": "number"
        },
        "freeDate1": {
          "x-ms-summary": "Free date field #1",
          "format": "date-time",
          "type": "string"
        },
        "freeDate2": {
          "x-ms-summary": "Free date field #2",
          "format": "date-time",
          "type": "string"
        },
        "freeDate3": {
          "x-ms-summary": "Free date field #3",
          "format": "date-time",
          "type": "string"
        },
        "freeDate4": {
          "x-ms-summary": "Free date field #4",
          "format": "date-time",
          "type": "string"
        },
        "freeDate5": {
          "x-ms-summary": "Free date field #5",
          "format": "date-time",
          "type": "string"
        },
        "freeBit1": {
          "x-ms-summary": "Free boolean field #1",
          "type": "boolean"
        },
        "freeBit2": {
          "x-ms-summary": "Free boolean field #2",
          "type": "boolean"
        },
        "freeBit3": {
          "x-ms-summary": "Free boolean field #3",
          "type": "boolean"
        },
        "freeBit4": {
          "x-ms-summary": "Free boolean field #4",
          "type": "boolean"
        },
        "freeBit5": {
          "x-ms-summary": "Free boolean field #5",
          "type": "boolean"
        },
        "enableManualSelection": {
          "x-ms-summary": "Enable manual selection",
          "type": "boolean"
        },
        "availableInGantt": {
          "x-ms-summary": "Available in Gantt chart",
          "type": "boolean"
        },
        "startDate": {
          "x-ms-summary": "Start date",
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "x-ms-summary": "End date",
          "format": "date-time",
          "type": "string"
        },
        "allowDependencies": {
          "x-ms-summary": "Allow dependencies",
          "type": "boolean"
        },
        "note": {
          "x-ms-summary": "Note",
          "type": "string"
        },
        "overRuleGanttPlanning": {
          "x-ms-summary": "Overrule Gantt chart planning",
          "type": "boolean"
        },
        "checkAppointments": {
          "x-ms-summary": "Check appointmetns",
          "type": "boolean"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "jobNo": "string",
        "shortDescription": "string",
        "description": "string",
        "type": "string",
        "name": "string",
        "category": "string",
        "timeMarker": "string",
        "pin": "string",
        "customerNo": "string",
        "customerName": "string",
        "customerAddress": "string",
        "customerAddressGeoLong": "string",
        "customerAddressGeoLat": "string",
        "customerPhone": "string",
        "customerEmail": "string",
        "contactNo": "string",
        "contactName": "string",
        "contactAddress": "string",
        "contactAddressGeoLong": "string",
        "contactAddressGeoLat": "string",
        "contactPhone": "string",
        "contactEmail": "string",
        "siteNo": "string",
        "siteName": "string",
        "siteAddress": "string",
        "siteAddressGeoLong": "string",
        "siteAddressGeoLat": "string",
        "sitePhone": "string",
        "siteEmail": "string",
        "siteRegion": "string",
        "siteStreet": "string",
        "siteStreetNo": "string",
        "sitePostcode": "string",
        "siteCity": "string",
        "siteCounty": "string",
        "siteState": "string",
        "siteCountry": "string",
        "siteFromNo": "string",
        "siteFromName": "string",
        "siteFromAddress": "string",
        "siteFromAddressGeoLong": "string",
        "siteFromAddressGeoLat": "string",
        "siteFromPhone": "string",
        "siteFromEmail": "string",
        "siteFromRegion": "string",
        "siteFromStreet": "string",
        "siteFromStreetNo": "string",
        "siteFromPostcode": "string",
        "siteFromCity": "string",
        "siteFromCounty": "string",
        "siteFromState": "string",
        "siteFromCountry": "string",
        "billNo": "string",
        "billName": "string",
        "billAddress": "string",
        "billAddressGeoLong": "string",
        "billAddressGeoLat": "string",
        "billPhone": "string",
        "billEmail": "string",
        "billRegion": "string",
        "importance": 0,
        "creationDateTime": "string",
        "customerReference": "string",
        "language": "string",
        "responsible": "string",
        "creator": "string",
        "freeText1": "string",
        "freeText2": "string",
        "freeText3": "string",
        "freeText4": "string",
        "freeText5": "string",
        "freeText6": "string",
        "freeText7": "string",
        "freeText8": "string",
        "freeText9": "string",
        "freeText10": "string",
        "freeText11": "string",
        "freeText12": "string",
        "freeText13": "string",
        "freeText14": "string",
        "freeText15": "string",
        "freeText16": "string",
        "freeText17": "string",
        "freeText18": "string",
        "freeText19": "string",
        "freeText20": "string",
        "freeDecimal1": 0,
        "freeDecimal2": 0,
        "freeDecimal3": 0,
        "freeDecimal4": 0,
        "freeDecimal5": 0,
        "freeDate1": "string",
        "freeDate2": "string",
        "freeDate3": "string",
        "freeDate4": "string",
        "freeDate5": "string",
        "freeBit1": true,
        "freeBit2": true,
        "freeBit3": true,
        "freeBit4": true,
        "freeBit5": true,
        "enableManualSelection": true,
        "availableInGantt": true,
        "startDate": "string",
        "endDate": "string",
        "allowDependencies": true,
        "note": "string",
        "overRuleGanttPlanning": true,
        "checkAppointments": true,
        "sentFromBackOffice": true
      }
    },
    "notification": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer"
        },
        "connectorId": {
          "x-ms-summary": "Connector id",
          "maxLength": 50,
          "type": "string"
        },
        "type": {
          "x-ms-summary": "Type",
          "format": "int32",
          "default": 0,
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "code": {
          "x-ms-summary": "Code",
          "maxLength": 20,
          "type": "string"
        },
        "text": {
          "x-ms-summary": "Text",
          "type": "string"
        },
        "date": {
          "x-ms-summary": "Date",
          "format": "date-time",
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "maxLength": 50,
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "maxLength": 50,
          "type": "string"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "appointmentId": 0,
        "connectorId": "string",
        "type": 0,
        "code": "string",
        "text": "string",
        "date": "string",
        "jobNo": "string",
        "taskNo": "string",
        "appointmentGuid": "string",
        "sentFromBackOffice": true
      }
    },
    "pin": {
      "type": "object",
      "properties": {
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 100,
          "type": "string"
        },
        "color": {
          "x-ms-summary": "Color",
          "maxLength": 7,
          "type": "string"
        }
      },
      "example": {
        "name": "Delivery trucks",
        "color": "#4a877c"
      }
    },
    "resource": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string"
        },
        "resourceType": {
          "x-ms-summary": "Resource type",
          "maxLength": 100,
          "type": "string"
        },
        "resourceTypeId": {
          "x-ms-summary": "Resource type id",
          "format": "int32",
          "type": "integer"
        },
        "resourceName": {
          "x-ms-summary": "Resource name",
          "maxLength": 100,
          "type": "string"
        },
        "displayName": {
          "x-ms-summary": "Display name",
          "maxLength": 100,
          "type": "string"
        },
        "department": {
          "x-ms-summary": "Department",
          "maxLength": 50,
          "type": "string"
        },
        "email": {
          "x-ms-summary": "E-mail",
          "maxLength": 100,
          "type": "string",
          "format": "email"
        },
        "phone": {
          "x-ms-summary": "Phone",
          "maxLength": 50,
          "type": "string"
        },
        "mobilePhone": {
          "x-ms-summary": "Mobile phone",
          "maxLength": 50,
          "type": "string"
        },
        "replacementResource": {
          "x-ms-summary": "Replacement resource",
          "type": "boolean"
        },
        "fieldServiceEmail": {
          "x-ms-summary": "Field service e-mail",
          "maxLength": 100,
          "type": "string",
          "format": "email"
        },
        "personalEmail": {
          "x-ms-summary": "Person e-mail",
          "maxLength": 100,
          "type": "string",
          "format": "email"
        },
        "gpsTrackingResourceNo": {
          "x-ms-summary": "GPS tracking no.",
          "maxLength": 50,
          "type": "string"
        },
        "homeAddress": {
          "x-ms-summary": "Home address",
          "type": "string"
        },
        "homeAddressGeoLong": {
          "x-ms-summary": "Home address longitude",
          "format": "float",
          "type": "number"
        },
        "homeAddressGeoLat": {
          "x-ms-summary": "Home address latitude",
          "format": "float",
          "type": "number"
        },
        "homePhone": {
          "x-ms-summary": "Home phone",
          "maxLength": 50,
          "type": "string"
        },
        "homeEmail": {
          "x-ms-summary": "Home e-mail",
          "maxLength": 50,
          "type": "string",
          "format": "email"
        },
        "homeStreet": {
          "x-ms-summary": "Home street",
          "maxLength": 255,
          "type": "string"
        },
        "homeStreetNo": {
          "x-ms-summary": "Home street no.",
          "maxLength": 20,
          "type": "string"
        },
        "homePostcode": {
          "x-ms-summary": "Home post code",
          "maxLength": 20,
          "type": "string"
        },
        "homeCity": {
          "x-ms-summary": "Home city",
          "maxLength": 50,
          "type": "string"
        },
        "homeCounty": {
          "x-ms-summary": "Home county",
          "maxLength": 50,
          "type": "string"
        },
        "homeState": {
          "x-ms-summary": "Home state",
          "maxLength": 50,
          "type": "string"
        },
        "homeCountry": {
          "x-ms-summary": "Home country",
          "maxLength": 50,
          "type": "string"
        },
        "homeRegion": {
          "x-ms-summary": "Home region",
          "maxLength": 10,
          "type": "string"
        },
        "teamCode": {
          "x-ms-summary": "Team code",
          "maxLength": 20,
          "type": "string"
        },
        "teamName": {
          "x-ms-summary": "Team name",
          "maxLength": 100,
          "type": "string"
        },
        "teamType": {
          "x-ms-summary": "Team type",
          "maxLength": 20,
          "type": "string"
        },
        "teamSort": {
          "x-ms-summary": "Team sort",
          "format": "int32",
          "type": "integer"
        },
        "teamMemberType": {
          "x-ms-summary": "Team member type",
          "maxLength": 20,
          "type": "string"
        },
        "teamMemberSort": {
          "x-ms-summary": "Team member sort",
          "format": "int32",
          "type": "integer"
        },
        "doNotShow": {
          "x-ms-summary": "Do not show",
          "type": "boolean"
        },
        "exchangeIntegrationEnabled": {
          "x-ms-summary": "Enable exchange integration",
          "type": "boolean"
        },
        "resourceGpsTrackingEnabled": {
          "x-ms-summary": "Enable resource GPS tracking",
          "type": "boolean"
        },
        "inServiceFrom": {
          "x-ms-summary": "In service from",
          "format": "date-time",
          "type": "string"
        },
        "inServiceTill": {
          "x-ms-summary": "In service until",
          "format": "date-time",
          "type": "string"
        },
        "url1": {
          "x-ms-summary": "URL 1",
          "maxLength": 1000,
          "type": "string"
        },
        "urlDescription1": {
          "x-ms-summary": "URL description #1",
          "maxLength": 255,
          "type": "string"
        },
        "url2": {
          "x-ms-summary": "URL 2",
          "maxLength": 1000,
          "type": "string"
        },
        "urlDescription2": {
          "x-ms-summary": "URL description #2",
          "maxLength": 255,
          "type": "string"
        },
        "url3": {
          "x-ms-summary": "URL 3",
          "maxLength": 1000,
          "type": "string"
        },
        "urlDescription3": {
          "x-ms-summary": "URL description #3",
          "maxLength": 255,
          "type": "string"
        },
        "bulkPlanning": {
          "x-ms-summary": "Bulk planning",
          "type": "boolean"
        },
        "bulkCapacity": {
          "x-ms-summary": "Bulk capacity",
          "format": "double",
          "type": "number"
        },
        "pin": {
          "x-ms-summary": "The pin indicator",
          "maxLength": 100,
          "type": "string"
        },
        "freeText1": {
          "x-ms-summary": "Free text field #1",
          "maxLength": 100,
          "type": "string"
        },
        "freeText2": {
          "x-ms-summary": "Free text field #2",
          "maxLength": 100,
          "type": "string"
        },
        "freeText3": {
          "x-ms-summary": "Free text field #3",
          "maxLength": 100,
          "type": "string"
        },
        "freeText4": {
          "x-ms-summary": "Free text field #4",
          "maxLength": 100,
          "type": "string"
        },
        "freeText5": {
          "x-ms-summary": "Free text field #5",
          "maxLength": 100,
          "type": "string"
        },
        "freeText6": {
          "x-ms-summary": "Free text field #6",
          "maxLength": 100,
          "type": "string"
        },
        "freeText7": {
          "x-ms-summary": "Free text field #7",
          "maxLength": 100,
          "type": "string"
        },
        "freeText8": {
          "x-ms-summary": "Free text field #8",
          "maxLength": 100,
          "type": "string"
        },
        "freeText9": {
          "x-ms-summary": "Free text field #9",
          "maxLength": 100,
          "type": "string"
        },
        "freeText10": {
          "x-ms-summary": "Free text field #10",
          "maxLength": 100,
          "type": "string"
        },
        "freeText11": {
          "x-ms-summary": "Free text field #11",
          "maxLength": 100,
          "type": "string"
        },
        "freeText12": {
          "x-ms-summary": "Free text field #12",
          "maxLength": 100,
          "type": "string"
        },
        "freeText13": {
          "x-ms-summary": "Free text field #13",
          "maxLength": 100,
          "type": "string"
        },
        "freeText14": {
          "x-ms-summary": "Free text field #14",
          "maxLength": 100,
          "type": "string"
        },
        "freeText15": {
          "x-ms-summary": "Free text field #15",
          "maxLength": 100,
          "type": "string"
        },
        "freeText16": {
          "x-ms-summary": "Free text field #16",
          "maxLength": 100,
          "type": "string"
        },
        "freeText17": {
          "x-ms-summary": "Free text field #17",
          "maxLength": 100,
          "type": "string"
        },
        "freeText18": {
          "x-ms-summary": "Free text field #18",
          "maxLength": 100,
          "type": "string"
        },
        "freeText19": {
          "x-ms-summary": "Free text field #19",
          "maxLength": 100,
          "type": "string"
        },
        "freeText20": {
          "x-ms-summary": "Free text field #20",
          "maxLength": 100,
          "type": "string"
        },
        "freeDecimal1": {
          "x-ms-summary": "Free decimal field #1",
          "format": "double",
          "type": "number"
        },
        "freeDecimal2": {
          "x-ms-summary": "Free decimal field #2",
          "format": "double",
          "type": "number"
        },
        "freeDecimal3": {
          "x-ms-summary": "Free decimal field #3",
          "format": "double",
          "type": "number"
        },
        "freeDecimal4": {
          "x-ms-summary": "Free decimal field #4",
          "format": "double",
          "type": "number"
        },
        "freeDecimal5": {
          "x-ms-summary": "Free decimal field #5",
          "format": "double",
          "type": "number"
        },
        "freeDate1": {
          "x-ms-summary": "Free decimal field #1",
          "format": "date-time",
          "type": "string"
        },
        "freeDate2": {
          "x-ms-summary": "Free decimal field #2",
          "format": "date-time",
          "type": "string"
        },
        "freeDate3": {
          "x-ms-summary": "Free decimal field #3",
          "format": "date-time",
          "type": "string"
        },
        "freeDate4": {
          "x-ms-summary": "Free decimal field #4",
          "format": "date-time",
          "type": "string"
        },
        "freeDate5": {
          "x-ms-summary": "Free decimal field #5",
          "format": "date-time",
          "type": "string"
        },
        "freeBit1": {
          "x-ms-summary": "Free boolean field #1",
          "type": "boolean"
        },
        "freeBit2": {
          "x-ms-summary": "Free boolean field #2",
          "type": "boolean"
        },
        "freeBit3": {
          "x-ms-summary": "Free boolean field #3",
          "type": "boolean"
        },
        "freeBit4": {
          "x-ms-summary": "Free boolean field #4",
          "type": "boolean"
        },
        "freeBit5": {
          "x-ms-summary": "Free boolean field #5",
          "type": "boolean"
        }
      },
      "example": {
        "resourceNo": "string",
        "sourceApp": "string",
        "sourceType": "string",
        "resourceType": "string",
        "resourceTypeId": 0,
        "resourceName": "string",
        "displayName": "string",
        "department": "string",
        "email": "string",
        "phone": "string",
        "mobilePhone": "string",
        "replacementResource": true,
        "fieldServiceEmail": "string",
        "personalEmail": "string",
        "gpsTrackingResourceNo": "string",
        "homeAddress": "string",
        "homeAddressGeoLong": 0,
        "homeAddressGeoLat": 0,
        "homePhone": "string",
        "homeEmail": "string",
        "homeStreet": "string",
        "homeStreetNo": "string",
        "homePostcode": "string",
        "homeCity": "string",
        "homeCounty": "string",
        "homeState": "string",
        "homeCountry": "string",
        "homeRegion": "string",
        "teamCode": "string",
        "teamName": "string",
        "teamType": "string",
        "teamSort": 0,
        "teamMemberType": "string",
        "teamMemberSort": 0,
        "doNotShow": true,
        "inServiceFrom": "string",
        "inServiceTill": "string",
        "exchangeIntegrationEnabled": true,
        "url1": "string",
        "urlDescription1": "string",
        "url2": "string",
        "urlDescription2": "string",
        "url3": "string",
        "urlDescription3": "string",
        "bulkPlanning": true,
        "bulkCapacity": 0,
        "resourceGpsTrackingEnabled": true,
        "pin": "string",
        "freeText1": "string",
        "freeText2": "string",
        "freeText3": "string",
        "freeText4": "string",
        "freeText5": "string",
        "freeText6": "string",
        "freeText7": "string",
        "freeText8": "string",
        "freeText9": "string",
        "freeText10": "string",
        "freeText11": "string",
        "freeText12": "string",
        "freeText13": "string",
        "freeText14": "string",
        "freeText15": "string",
        "freeText16": "string",
        "freeText17": "string",
        "freeText18": "string",
        "freeText19": "string",
        "freeText20": "string",
        "freeDecimal1": 0,
        "freeDecimal2": 0,
        "freeDecimal3": 0,
        "freeDecimal4": 0,
        "freeDecimal5": 0,
        "freeDate1": "string",
        "freeDate2": "string",
        "freeDate3": "string",
        "freeDate4": "string",
        "freeDate5": "string",
        "freeBit1": true,
        "freeBit2": true,
        "freeBit3": true,
        "freeBit4": true,
        "freeBit5": true
      }
    },
    "resourceCalendar": {
      "type": "object",
      "properties": {
        "code": {
          "x-ms-summary": "Code",
          "maxLength": 50,
          "type": "string"
        },
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string"
        },
        "calendarCode": {
          "x-ms-summary": "Calendar code",
          "maxLength": 255,
          "type": "string"
        },
        "startDate": {
          "x-ms-summary": "Start date",
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "x-ms-summary": "End date",
          "format": "date-time",
          "type": "string"
        }
      },
      "example": {
        "code": "string",
        "resourceNo": "string",
        "calendarCode": "string",
        "startDate": "string",
        "endDate": "string"
      }
    },
    "resourceCapacity": {
      "type": "object",
      "properties": {
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string"
        },
        "date": {
          "x-ms-summary": "Date",
          "format": "date-time",
          "type": "string"
        },
        "capacityInSeconds": {
          "x-ms-summary": "Capacity in seconds",
          "format": "int64",
          "type": "integer"
        },
        "quantity": {
          "x-ms-summary": "Quantity",
          "format": "double",
          "type": "number"
        },
        "unitOfMeasure": {
          "x-ms-summary": "Unit of measure",
          "maxLength": 20,
          "type": "string"
        },
        "unitOfMeasureConversion": {
          "x-ms-summary": "Unit of measure conversion",
          "format": "double",
          "type": "number"
        }
      },
      "example": {
        "resourceNo": "string",
        "date": "string",
        "capacityInSeconds": 0,
        "quantity": 0,
        "unitOfMeasure": "string",
        "unitOfMeasureConversion": 0
      }
    },
    "resourceFilterValue": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "type": "string"
        },
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "type": "string"
        },
        "filterGroup": {
          "x-ms-summary": "Filter group",
          "type": "string"
        },
        "filterValue": {
          "x-ms-summary": "Filter value",
          "type": "string"
        },
        "transferToTemp": {
          "x-ms-summary": "Transfer to temp",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "resourceNo": "string",
        "filterGroup": "string",
        "filterValue": "string",
        "transferToTemp": true
      }
    },
    "resourceGpsTracking": {
      "type": "object",
      "properties": {
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string"
        },
        "gpsTrackingResourceNo": {
          "x-ms-summary": "GPS tracking resource no.",
          "maxLength": 50,
          "type": "string"
        },
        "latitude": {
          "x-ms-summary": "Latitude",
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "x-ms-summary": "Longitude",
          "format": "double",
          "type": "number"
        },
        "speed": {
          "x-ms-summary": "Speed",
          "format": "int32",
          "type": "integer"
        },
        "date": {
          "x-ms-summary": "Date",
          "format": "date-time",
          "type": "string"
        },
        "rowId": {
          "x-ms-summary": "Row id",
          "maxLength": 100,
          "type": "string"
        },
        "power": {
          "x-ms-summary": "Power",
          "maxLength": 50,
          "type": "string"
        }
      },
      "example": {
        "resourceNo": "string",
        "gpsTrackingResourceNo": "string",
        "latitude": 0,
        "longitude": 0,
        "speed": 0,
        "date": "string",
        "rowId": "string",
        "power": "string"
      }
    },
    "resourceUri": {
      "type": "object",
      "properties": {
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string"
        },
        "uri": {
          "x-ms-summary": "URI",
          "maxLength": 1000,
          "type": "string"
        },
        "description": {
          "x-ms-summary": "Description",
          "maxLength": 255,
          "type": "string"
        }
      },
      "example": {
        "resourceNo": "string",
        "uri": "string",
        "description": "string"
      }
    },
    "task": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "maxLength": 50,
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "maxLength": 50,
          "type": "string"
        },
        "taskType": {
          "x-ms-summary": "Task type",
          "format": "int32",
          "default": 0,
          "enum": [0, 1],
          "type": "integer"
        },
        "shortDescription": {
          "x-ms-summary": "Short description",
          "maxLength": 50,
          "type": "string"
        },
        "description": {
          "x-ms-summary": "Description",
          "maxLength": 200,
          "type": "string"
        },
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 255,
          "type": "string"
        },
        "type": {
          "x-ms-summary": "Type",
          "maxLength": 20,
          "type": "string"
        },
        "category": {
          "x-ms-summary": "Category",
          "maxLength": 100,
          "type": "string"
        },
        "timeMarker": {
          "x-ms-summary": "Time marker",
          "maxLength": 100,
          "type": "string"
        },
        "pin": {
          "x-ms-summary": "Pin",
          "maxLength": 100,
          "type": "string"
        },
        "serviceNo": {
          "x-ms-summary": "Service no.",
          "maxLength": 50,
          "type": "string"
        },
        "serviceGroup": {
          "x-ms-summary": "Service group",
          "maxLength": 20,
          "type": "string"
        },
        "serviceClass": {
          "x-ms-summary": "Service class",
          "maxLength": 20,
          "type": "string"
        },
        "serviceSerialNo": {
          "x-ms-summary": "Service serial no.",
          "maxLength": 50,
          "type": "string"
        },
        "serviceName": {
          "x-ms-summary": "Service name",
          "maxLength": 50,
          "type": "string"
        },
        "irisFault": {
          "x-ms-summary": "IRIS fault",
          "maxLength": 10,
          "type": "string"
        },
        "irisSymptom": {
          "x-ms-summary": "IRIS symptom",
          "maxLength": 10,
          "type": "string"
        },
        "irisArea": {
          "x-ms-summary": "IRIS area",
          "maxLength": 10,
          "type": "string"
        },
        "irisReason": {
          "x-ms-summary": "IRIS reason",
          "maxLength": 10,
          "type": "string"
        },
        "irisResolution": {
          "x-ms-summary": "IRIS resolution",
          "maxLength": 10,
          "type": "string"
        },
        "skill1": {
          "x-ms-summary": "Skill #1",
          "maxLength": 10,
          "type": "string"
        },
        "skill2": {
          "x-ms-summary": "Skill #2",
          "maxLength": 10,
          "type": "string"
        },
        "skill3": {
          "x-ms-summary": "Skill #3",
          "maxLength": 10,
          "type": "string"
        },
        "contractNo": {
          "x-ms-summary": "Contract number",
          "maxLength": 20,
          "type": "string"
        },
        "contractType": {
          "x-ms-summary": "Contract type",
          "maxLength": 30,
          "type": "string"
        },
        "contractDescription": {
          "x-ms-summary": "Contract description",
          "type": "string"
        },
        "contractStartDate": {
          "x-ms-summary": "Contract start date",
          "format": "date-time",
          "type": "string"
        },
        "contractEndDate": {
          "x-ms-summary": "Contract end date",
          "format": "date-time",
          "type": "string"
        },
        "partsWarrantyStartDate": {
          "x-ms-summary": "Parts warranty start date",
          "format": "date-time",
          "type": "string"
        },
        "partsWarrantyEndDate": {
          "x-ms-summary": "Parts warranty end date",
          "format": "date-time",
          "type": "string"
        },
        "laborWarrantyStartDate": {
          "x-ms-summary": "Labor warranty start date",
          "format": "date-time",
          "type": "string"
        },
        "laborWarrantyEndDate": {
          "x-ms-summary": "Labor warranty end date",
          "format": "date-time",
          "type": "string"
        },
        "importance": {
          "x-ms-summary": "Importance",
          "format": "int32",
          "default": 0,
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "status": {
          "x-ms-summary": "Status",
          "maxLength": 20,
          "type": "string"
        },
        "expectedResponseDateTime": {
          "x-ms-summary": "Expected response date",
          "format": "date-time",
          "type": "string"
        },
        "actualResponseDateTime": {
          "x-ms-summary": "Actual response date",
          "format": "date-time",
          "type": "string"
        },
        "requestedStartDate": {
          "x-ms-summary": "Requested start date",
          "format": "date-time",
          "type": "string"
        },
        "requestedEndDate": {
          "x-ms-summary": "Requested end date",
          "format": "date-time",
          "type": "string"
        },
        "requestedStartTime": {
          "x-ms-summary": "Requested start time",
          "type": "string"
        },
        "requestedEndTime": {
          "x-ms-summary": "Requested end time",
          "type": "string"
        },
        "confirmedStartDate": {
          "x-ms-summary": "Confirmed start date",
          "format": "date-time",
          "type": "string"
        },
        "confirmedEndDate": {
          "x-ms-summary": "Confirmed end date",
          "format": "date-time",
          "type": "string"
        },
        "actualStartDate": {
          "x-ms-summary": "Actual start date",
          "format": "date-time",
          "type": "string"
        },
        "actualEndDate": {
          "x-ms-summary": "Actual end date",
          "format": "date-time",
          "type": "string"
        },
        "locationDescription": {
          "x-ms-summary": "Location description",
          "type": "string"
        },
        "duration": {
          "x-ms-summary": "Duration",
          "type": "string"
        },
        "durationInSeconds": {
          "x-ms-summary": "Duration in seconds",
          "format": "int64",
          "type": "integer"
        },
        "subject": {
          "x-ms-summary": "Subject",
          "type": "string"
        },
        "body": {
          "x-ms-summary": "Body",
          "type": "string"
        },
        "infiniteTask": {
          "x-ms-summary": "Is infinite task",
          "type": "boolean"
        },
        "taskOpenAsOf": {
          "x-ms-summary": "Open the task from",
          "format": "date-time",
          "type": "string"
        },
        "taskOpenTill": {
          "x-ms-summary": "Open the task until",
          "format": "date-time",
          "type": "string"
        },
        "requiredTotalDuration": {
          "x-ms-summary": "Required total duration",
          "type": "string"
        },
        "requiredNoResources": {
          "x-ms-summary": "Required number of resources",
          "format": "int32",
          "type": "integer"
        },
        "appointmentEarliestAllowed": {
          "x-ms-summary": "Earliest allowed time",
          "format": "date-time",
          "type": "string"
        },
        "appointmentLatestAllowed": {
          "x-ms-summary": "Latest allowed time",
          "format": "date-time",
          "type": "string"
        },
        "freeText1": {
          "x-ms-summary": "Free text field #1",
          "maxLength": 100,
          "type": "string"
        },
        "freeText2": {
          "x-ms-summary": "Free text field #2",
          "maxLength": 100,
          "type": "string"
        },
        "freeText3": {
          "x-ms-summary": "Free text field #3",
          "maxLength": 100,
          "type": "string"
        },
        "freeText4": {
          "x-ms-summary": "Free text field #4",
          "maxLength": 100,
          "type": "string"
        },
        "freeText5": {
          "x-ms-summary": "Free text field #5",
          "maxLength": 100,
          "type": "string"
        },
        "freeText6": {
          "x-ms-summary": "Free text field #6",
          "maxLength": 100,
          "type": "string"
        },
        "freeText7": {
          "x-ms-summary": "Free text field #7",
          "maxLength": 100,
          "type": "string"
        },
        "freeText8": {
          "x-ms-summary": "Free text field #8",
          "maxLength": 100,
          "type": "string"
        },
        "freeText9": {
          "x-ms-summary": "Free text field #9",
          "maxLength": 100,
          "type": "string"
        },
        "freeText10": {
          "x-ms-summary": "Free text field #10",
          "maxLength": 100,
          "type": "string"
        },
        "freeText11": {
          "x-ms-summary": "Free text field #11",
          "maxLength": 100,
          "type": "string"
        },
        "freeText12": {
          "x-ms-summary": "Free text field #12",
          "maxLength": 100,
          "type": "string"
        },
        "freeText13": {
          "x-ms-summary": "Free text field #13",
          "maxLength": 100,
          "type": "string"
        },
        "freeText14": {
          "x-ms-summary": "Free text field #14",
          "maxLength": 100,
          "type": "string"
        },
        "freeText15": {
          "x-ms-summary": "Free text field #15",
          "maxLength": 100,
          "type": "string"
        },
        "freeText16": {
          "x-ms-summary": "Free text field #16",
          "maxLength": 100,
          "type": "string"
        },
        "freeText17": {
          "x-ms-summary": "Free text field #17",
          "maxLength": 100,
          "type": "string"
        },
        "freeText18": {
          "x-ms-summary": "Free text field #18",
          "maxLength": 100,
          "type": "string"
        },
        "freeText19": {
          "x-ms-summary": "Free text field #19",
          "maxLength": 100,
          "type": "string"
        },
        "freeText20": {
          "x-ms-summary": "Free text field #20",
          "maxLength": 100,
          "type": "string"
        },
        "freeDecimal1": {
          "x-ms-summary": "Free decimal field #1",
          "format": "double",
          "type": "number"
        },
        "freeDecimal2": {
          "x-ms-summary": "Free decimal field #2",
          "format": "double",
          "type": "number"
        },
        "freeDecimal3": {
          "x-ms-summary": "Free decimal field #3",
          "format": "double",
          "type": "number"
        },
        "freeDecimal4": {
          "x-ms-summary": "Free decimal field #4",
          "format": "double",
          "type": "number"
        },
        "freeDecimal5": {
          "x-ms-summary": "Free decimal field #5",
          "format": "double",
          "type": "number"
        },
        "freeDate1": {
          "x-ms-summary": "Free date field #1",
          "format": "date-time",
          "type": "string"
        },
        "freeDate2": {
          "x-ms-summary": "Free date field #2",
          "format": "date-time",
          "type": "string"
        },
        "freeDate3": {
          "x-ms-summary": "Free date field #3",
          "format": "date-time",
          "type": "string"
        },
        "freeDate4": {
          "x-ms-summary": "Free date field #4",
          "format": "date-time",
          "type": "string"
        },
        "freeDate5": {
          "x-ms-summary": "Free date field #5",
          "format": "date-time",
          "type": "string"
        },
        "freeBit1": {
          "x-ms-summary": "Free boolean field #1",
          "type": "boolean"
        },
        "freeBit2": {
          "x-ms-summary": "Free boolean field #2",
          "type": "boolean"
        },
        "freeBit3": {
          "x-ms-summary": "Free boolean field #3",
          "type": "boolean"
        },
        "freeBit4": {
          "x-ms-summary": "Free boolean field #4",
          "type": "boolean"
        },
        "freeBit5": {
          "x-ms-summary": "Free boolean field #5",
          "type": "boolean"
        },
        "url1": {
          "x-ms-summary": "URL 1",
          "maxLength": 1000,
          "type": "string"
        },
        "urlDescription1": {
          "x-ms-summary": "URL 1 description",
          "maxLength": 255,
          "type": "string"
        },
        "url2": {
          "x-ms-summary": "URL 2",
          "maxLength": 1000,
          "type": "string"
        },
        "urlDescription2": {
          "x-ms-summary": "URL 2 description",
          "maxLength": 255,
          "type": "string"
        },
        "url3": {
          "x-ms-summary": "URL 3",
          "maxLength": 1000,
          "type": "string"
        },
        "urlDescription3": {
          "x-ms-summary": "URL 3 description",
          "maxLength": 255,
          "type": "string"
        },
        "certificateNo": {
          "x-ms-summary": "Certificate no.",
          "type": "string"
        },
        "requiredTotalDurationInSeconds": {
          "x-ms-summary": "Required total duration (in seconds)",
          "format": "int64",
          "type": "integer"
        },
        "doNotCountAppointmentResource": {
          "x-ms-summary": "Do not count appointment resources",
          "type": "boolean"
        },
        "isComplete": {
          "x-ms-summary": "Is complete",
          "type": "boolean"
        },
        "planningUOM": {
          "x-ms-summary": "Planning UOM",
          "maxLength": 20,
          "type": "string"
        },
        "planningUOMConversion": {
          "x-ms-summary": "Planning UOM conversion",
          "format": "double",
          "type": "number"
        },
        "planningQty": {
          "x-ms-summary": "Planning quantity",
          "format": "double",
          "type": "number"
        },
        "useFixPlanningQty": {
          "x-ms-summary": "Use fixed planning quantity",
          "type": "boolean"
        },
        "roundToUOM": {
          "x-ms-summary": "Round to UOM",
          "type": "boolean"
        },
        "appointmentTemplate": {
          "x-ms-summary": "Appointment template",
          "maxLength": 100,
          "type": "string"
        },
        "bulkPlanningQty": {
          "x-ms-summary": "Bulk planning quantity",
          "format": "double",
          "type": "number"
        },
        "startDate": {
          "x-ms-summary": "Start date",
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "x-ms-summary": "End date",
          "format": "date-time",
          "type": "string"
        },
        "percentDone": {
          "x-ms-summary": "Percentage done",
          "format": "int32",
          "type": "integer"
        },
        "schedulingMode": {
          "x-ms-summary": "Scheduling mode",
          "format": "int32",
          "default": 0,
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "baseLineStartDate": {
          "x-ms-summary": "Baseline start date",
          "format": "date-time",
          "type": "string"
        },
        "baseLineEndDate": {
          "x-ms-summary": "Baseline end date",
          "format": "date-time",
          "type": "string"
        },
        "baseLinePercentDone": {
          "x-ms-summary": "Baseline percent done",
          "format": "int32",
          "type": "integer"
        },
        "deadLine": {
          "x-ms-summary": "Deadline",
          "format": "date-time",
          "type": "string"
        },
        "index": {
          "x-ms-summary": "Index",
          "format": "int32",
          "type": "integer"
        },
        "constraintType": {
          "x-ms-summary": "Constraint type",
          "format": "int32",
          "type": "integer"
        },
        "constraintDatetime": {
          "x-ms-summary": "Constraint datetime",
          "format": "date-time",
          "type": "string"
        },
        "parentTaskNo": {
          "x-ms-summary": "Parent task no.",
          "maxLength": 50,
          "type": "string"
        },
        "calendarCode": {
          "x-ms-summary": "Calendar code",
          "maxLength": 255,
          "type": "string"
        },
        "predecessorTaskNo": {
          "x-ms-summary": "Predecessor task no.",
          "maxLength": 50,
          "type": "string"
        },
        "predecessorLag": {
          "x-ms-summary": "Predecessor lag",
          "format": "int32",
          "type": "integer"
        },
        "manuallyScheduled": {
          "x-ms-summary": "Manually scheduled",
          "type": "boolean"
        },
        "note": {
          "x-ms-summary": "Note",
          "type": "string"
        },
        "overRuleGanttPlanning": {
          "x-ms-summary": "Overrule Gantt planning",
          "type": "boolean"
        },
        "ignoreCalendars": {
          "x-ms-summary": "Ignore calendars",
          "type": "boolean"
        },
        "containerName": {
          "x-ms-summary": "Container name",
          "maxLength": 255,
          "type": "string"
        },
        "containerIndex": {
          "x-ms-summary": "Container index",
          "format": "int32",
          "type": "integer"
        },
        "checkAppointments": {
          "x-ms-summary": "Check appointments",
          "type": "boolean"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "jobNo": "string",
        "taskNo": "string",
        "taskType": 0,
        "shortDescription": "string",
        "description": "string",
        "name": "string",
        "type": "string",
        "category": "string",
        "timeMarker": "string",
        "pin": "string",
        "serviceNo": "string",
        "serviceGroup": "string",
        "serviceClass": "string",
        "serviceSerialNo": "string",
        "serviceName": "string",
        "irisFault": "string",
        "irisSymptom": "string",
        "irisArea": "string",
        "irisReason": "string",
        "irisResolution": "string",
        "skill1": "string",
        "skill2": "string",
        "skill3": "string",
        "contractNo": "string",
        "contractType": "string",
        "contractDescription": "string",
        "contractStartDate": "string",
        "contractEndDate": "string",
        "partsWarrantyStartDate": "string",
        "partsWarrantyEndDate": "string",
        "laborWarrantyStartDate": "string",
        "laborWarrantyEndDate": "string",
        "importance": 0,
        "status": "string",
        "expectedResponseDateTime": "string",
        "actualResponseDateTime": "string",
        "requestedStartDate": "string",
        "requestedEndDate": "string",
        "requestedStartTime": {
          "ticks": 0,
          "days": 0,
          "hours": 0,
          "milliseconds": 0,
          "minutes": 0,
          "seconds": 0,
          "totalDays": 0,
          "totalHours": 0,
          "totalMilliseconds": 0,
          "totalMinutes": 0,
          "totalSeconds": 0
        },
        "requestedEndTime": {
          "ticks": 0,
          "days": 0,
          "hours": 0,
          "milliseconds": 0,
          "minutes": 0,
          "seconds": 0,
          "totalDays": 0,
          "totalHours": 0,
          "totalMilliseconds": 0,
          "totalMinutes": 0,
          "totalSeconds": 0
        },
        "confirmedStartDate": "string",
        "confirmedEndDate": "string",
        "actualStartDate": "string",
        "actualEndDate": "string",
        "locationDescription": "string",
        "duration": {
          "ticks": 0,
          "days": 0,
          "hours": 0,
          "milliseconds": 0,
          "minutes": 0,
          "seconds": 0,
          "totalDays": 0,
          "totalHours": 0,
          "totalMilliseconds": 0,
          "totalMinutes": 0,
          "totalSeconds": 0
        },
        "durationInSeconds": 0,
        "subject": "string",
        "body": "string",
        "infiniteTask": true,
        "taskOpenAsOf": "string",
        "taskOpenTill": "string",
        "requiredTotalDuration": {
          "ticks": 0,
          "days": 0,
          "hours": 0,
          "milliseconds": 0,
          "minutes": 0,
          "seconds": 0,
          "totalDays": 0,
          "totalHours": 0,
          "totalMilliseconds": 0,
          "totalMinutes": 0,
          "totalSeconds": 0
        },
        "requiredNoResources": 0,
        "appointmentEarliestAllowed": "string",
        "appointmentLatestAllowed": "string",
        "freeText1": "string",
        "freeText2": "string",
        "freeText3": "string",
        "freeText4": "string",
        "freeText5": "string",
        "freeText6": "string",
        "freeText7": "string",
        "freeText8": "string",
        "freeText9": "string",
        "freeText10": "string",
        "freeText11": "string",
        "freeText12": "string",
        "freeText13": "string",
        "freeText14": "string",
        "freeText15": "string",
        "freeText16": "string",
        "freeText17": "string",
        "freeText18": "string",
        "freeText19": "string",
        "freeText20": "string",
        "freeDecimal1": 0,
        "freeDecimal2": 0,
        "freeDecimal3": 0,
        "freeDecimal4": 0,
        "freeDecimal5": 0,
        "freeDate1": "string",
        "freeDate2": "string",
        "freeDate3": "string",
        "freeDate4": "string",
        "freeDate5": "string",
        "freeBit1": true,
        "freeBit2": true,
        "freeBit3": true,
        "freeBit4": true,
        "freeBit5": true,
        "url1": "string",
        "urlDescription1": "string",
        "url2": "string",
        "urlDescription2": "string",
        "url3": "string",
        "urlDescription3": "string",
        "certificateNo": "string",
        "requiredTotalDurationInSeconds": 0,
        "doNotCountAppointmentResource": true,
        "isComplete": true,
        "planningUOM": "string",
        "planningUOMConversion": 0,
        "planningQty": 0,
        "useFixPlanningQty": true,
        "roundToUOM": true,
        "appointmentTemplate": "string",
        "bulkPlanningQty": 0,
        "startDate": "string",
        "endDate": "string",
        "percentDone": 0,
        "schedulingMode": 0,
        "baseLineStartDate": "string",
        "baseLineEndDate": "string",
        "baseLinePercentDone": 0,
        "deadLine": "string",
        "index": 0,
        "constraintType": 0,
        "constraintDatetime": "string",
        "parentTaskNo": "string",
        "calendarCode": "string",
        "predecessorTaskNo": "string",
        "predecessorLag": 0,
        "manuallyScheduled": true,
        "note": "string",
        "overRuleGanttPlanning": true,
        "ignoreCalendars": true,
        "containerName": "string",
        "containerIndex": 0,
        "checkAppointments": true,
        "sentFromBackOffice": true
      }
    },
    "taskContainer": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "maxLength": 50,
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "maxLength": 50,
          "type": "string"
        },
        "name": {
          "x-ms-summary": "name",
          "maxLength": 255,
          "type": "string"
        },
        "index": {
          "x-ms-summary": "Index",
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "jobNo": "string",
        "taskNo": "string",
        "name": "string",
        "index": 0
      }
    },
    "taskFilterValue": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "maxLength": 50,
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "maxLength": 50,
          "type": "string"
        },
        "filterGroup": {
          "x-ms-summary": "Filter group",
          "maxLength": 50,
          "type": "string"
        },
        "filterValue": {
          "x-ms-summary": "Filter value",
          "maxLength": 100,
          "type": "string"
        },
        "transferToTemp": {
          "x-ms-summary": "Transfer to temp",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "jobNo": "string",
        "taskNo": "string",
        "filterGroup": "string",
        "filterValue": "string",
        "transferToTemp": true
      }
    },
    "taskLocked": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "maxLength": 50,
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "maxLength": 50,
          "type": "string"
        },
        "locked": {
          "x-ms-summary": "Locked",
          "type": "boolean"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "jobNo": "string",
        "taskNo": "string",
        "locked": true,
        "sentFromBackOffice": true
      }
    },
    "timeMarker": {
      "type": "object",
      "properties": {
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 100,
          "type": "string"
        },
        "color": {
          "x-ms-summary": "Color",
          "maxLength": 7,
          "type": "string"
        }
      },
      "example": {
        "name": "Underway for delivery",
        "color": "#99bj2z"
      }
    },
    "timeSpan": {
      "type": "object",
      "properties": {
        "ticks": {
          "format": "int64",
          "type": "integer"
        },
        "days": {
          "format": "int32",
          "type": "integer"
        },
        "hours": {
          "format": "int32",
          "type": "integer"
        },
        "milliseconds": {
          "format": "int32",
          "type": "integer"
        },
        "minutes": {
          "format": "int32",
          "type": "integer"
        },
        "seconds": {
          "format": "int32",
          "type": "integer"
        },
        "totalDays": {
          "format": "double",
          "type": "number"
        },
        "totalHours": {
          "format": "double",
          "type": "number"
        },
        "totalMilliseconds": {
          "format": "double",
          "type": "number"
        },
        "totalMinutes": {
          "format": "double",
          "type": "number"
        },
        "totalSeconds": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "SendErrorResponseBody": {
      "type": "string"
    },
    "SendSuccessResponseBody": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "Successful",
          "x-ms-summary": "Successful",
          "description": "Successful",
          "x-ms-visibility": "advanced"
        },
        "message": {
          "type": "string",
          "title": "Response message",
          "x-ms-summary": "Response message",
          "description": "Response message.",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "type": "number",
          "title": "Status code",
          "x-ms-summary": "Status code",
          "description": "The status code",
          "x-ms-visibility": "advanced"
        },
        "phrase": {
          "type": "string",
          "title": "Status code phrase",
          "x-ms-summary": "Status code phrase",
          "description": "Status code phrase",
          "x-ms-visibility": "advanced"
        }
      }
    }
  },
  "parameters": {},
  "responses": {
    "200": {
      "description": "Response to successful sending record",
      "x-ms-summary": "Success response",
      "schema": {
        "$ref": "#/definitions/SendSuccessResponseBody"
      }
    },
    "400": {
      "description": "The request was invalid.",
      "x-ms-summary": "The request was invalid.",
      "schema": {
        "$ref": "#/definitions/SendErrorResponseBody"
      }
    },
    "500": {
      "description": "An error occurred on the server.",
      "x-ms-summary": "An error occurred on the server.",
      "schema": {
        "$ref": "#/definitions/SendErrorResponseBody"
      }
    },
    "default": {
      "description": "Response to successful sending record",
      "x-ms-summary": "Success response"
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "x-functions-key",
      "in": "header"
    }
  },
  "security": [],
  "tags": []
}
