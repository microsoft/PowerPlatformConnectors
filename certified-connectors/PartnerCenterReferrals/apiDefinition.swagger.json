{
  "basePath": "/v1.0/engagements/",
  "consumes": [],
  "definitions": {
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral": {
      "properties": {
        "@odata.context": {
          "description": "OData context for this API call",
          "title": "ODataContext",
          "type": "string"
        },
        "campaignId": {
          "description": "Marketing Campaign ID",
          "title": "Campaign ID",
          "type": "string"
        },
        "consent": {
          "description": "consentObject",
          "properties": {
            "consentToContact": {
              "description": "Consent to Contact",
              "title": "Consent to contact",
              "type": "boolean"
            },
            "consentToToShareInfoWithOthers": {
              "description": "Consent to share info with others",
              "title": "Consent To Share Info With Others",
              "type": "boolean"
            },
            "consentToShareReferralWithMicrosoftSellers": {
              "description": "Consent to share Referral with Microsoft Sellers",
              "title": "Consent To Share Referral With Microsoft Sellers",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "createdDateTime": {
          "description": "Created Date Time",
          "title": "Date/Time of Creation",
          "type": "string"
        },
        "customerProfile": {
          "description": "Details of the customer",
          "properties": {
            "address": {
              "description": "Address of the customer",
              "properties": {
                "addressLine1": {
                  "description": "Customer Address Line 1",
                  "title": "Customer Profile - Address Line 1",
                  "type": "string"
                },
                "addressLine2": {
                  "description": "Customer Profile Address Line 2",
                  "title": "Customer Profile - Address Line 2",
                  "type": "string"
                },
                "city": {
                  "description": "Customer Profile City",
                  "title": "Customer Profile - City",
                  "type": "string"
                },
                "country": {
                  "description": "Customer Profile Country",
                  "title": "Customer Profile - Country",
                  "type": "string"
                },
                "postalCode": {
                  "description": "Customer Profile Postal Code",
                  "title": "Customer Profile - Postal Code",
                  "type": "string"
                },
                "region": {
                  "description": "Customer Profile Region",
                  "title": "Customer Profile - Region",
                  "type": "string"
                },
                "state": {
                  "description": "Customer Profile State",
                  "title": "Customer Profile - State",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "ids": {
              "description": "CustomerProfileIDs",
              "items": {},
              "title": "Customer Profile - IDs",
              "type": "array"
            },
            "name": {
              "description": "Customer Name",
              "title": "Customer Profile - Name",
              "type": "string"
            },
            "size": {
              "description": "Customer Number of Employees",
              "title": "Customer Profile - Size",
              "type": "string"
            },
            "team": {
              "description": "Customer Team",
              "title": "Customer Team",
              "items": {
                "properties": {
                  "contactPreference": {
                    "description": "Customer Team Contact Preference",
                    "properties": {
                      "disableNotifications": {
                        "description": "Customer Team Contact Preference Disable Notifications",
                        "title": "Customer Contact Preference Disable Notifications",
                        "type": "boolean"
                      },
                      "locale": {
                        "description": "Customer Team Contact Preference Locale",
                        "title": "Customer Contact Preference Locale",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "email": {
                    "description": "Customer Team Email",
                    "title": "Email",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "Customer Team FirstName",
                    "title": "First Name",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Customer Team LastName",
                    "title": "Last Name",
                    "type": "string"
                  },
                  "phoneNumber": {
                    "description": "Customer Team PhoneNumber",
                    "title": "Phone Number",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "details": {
          "description": "Details of referral",
          "properties": {
            "closingDateTime": {
              "description": "Closing DateTime",
              "title": "Closing Date Time",
              "type": "string"
            },
            "currency": {
              "description": "Currency",
              "title": "Currency",
              "type": "string"
            },
            "customerAction": {
              "description": "Customer Action",
              "title": "Customer Action",
              "type": "string"
            },
            "customerRequestedContact": {
              "description": "Has Customer Requested To Be Contacted",
              "title": "Customer Contact Requested",
              "type": "boolean"
            },
            "dealValue": {
              "description": "Deal Value",
              "format": "float",
              "title": "Deal Value",
              "type": "number"
            },
            "notes": {
              "description": "Notes",
              "title": "Notes",
              "type": "string"
            },
            "requirements": {
              "description": "Referral Requirements",
              "title": "Referral Requirements",
              "properties": {
                "industries": {
                  "description": "Industries",
                  "title": "Industries",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Industry Name",
                        "title": "Name",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "products": {
                  "description": "Products",
                  "title": "Products",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Products Name",
                        "title": "Name",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "services": {
                  "description": "Services",
                  "title": "Services",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Services Name",
                        "title": "Name",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "solutions": {
                  "description": "Solutions",
                  "items": {},
                  "title": "Solutions",
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "eTag": {
          "description": "eTag",
          "title": "eTag",
          "type": "string"
        },
        "engagementId": {
          "description": "Engagement ID",
          "title": "Engagement ID",
          "type": "string"
        },
        "expirationDateTime": {
          "description": "Expiration DateTime",
          "title": "Date/Time of Expiration",
          "type": "string"
        },
        "externalReferenceId": {
          "description": "External Reference ID",
          "title": "External Reference ID",
          "type": "string"
        },
        "favorite": {
          "description": "Mark This Referral As Favorite",
          "title": "Favorite",
          "type": "boolean"
        },
        "id": {
          "description": "Referral ID",
          "title": "Referral ID",
          "type": "string"
        },
        "inviteContext": {
          "description": "Invite Context",
          "properties": {
            "assistanceRequestCode": {
              "description": "Assistance Request Code For This Referral",
              "enum": [
                "Unknown",
                "GeneralOrOther",
                "CustomerTechnicalArchitecture",
                "ProofOfConceptOrDemo",
                "QuotesOrLicensing",
                "PostSalesCustomerSuccess",
                "WorkloadSpecificValueProposition"
              ],
              "title": "Assistance Request Code",
              "type": "string"
            },
            "invitedBy": {
              "description": "Invited By",
              "properties": {
                "organizationId": {
                  "description": "Invited By Organization ID",
                  "title": "Invited By - Organization ID",
                  "type": "string"
                },
                "organizationName": {
                  "description": "Invited By Organization Name",
                  "title": "Invited By - Organization Name",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "notes": {
              "description": "Invite Context Notes",
              "title": "Invite - Context Notes",
              "type": "string"
            }
          },
          "type": "object"
        },
        "lastModifiedVia": {
          "description": "Referral Last Modified By",
          "title": "Last Modified By",
          "type": "string"
        },
        "lastRunId": {
          "description": "Identifier For The Last Run",
          "title": "Last Run ID",
          "type": "string"
        },
        "links": {
          "description": "Links",
          "properties": {
            "relatedReferrals": {
              "description": "Related Referrals",
              "properties": {
                "method": {
                  "description": "Links Related Referrals Method",
                  "title": "Links - Related Referrals Method",
                  "type": "string"
                },
                "uri": {
                  "description": "Links Related Referrals URI",
                  "title": "Links - Related Referrals URI",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "self": {
              "description": "Links Self",
              "properties": {
                "method": {
                  "description": "Links Self Method",
                  "title": "Links - Self Method",
                  "type": "string"
                },
                "uri": {
                  "description": "Links Self URI",
                  "title": "Links - Self URI",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "name": {
          "description": "Name",
          "title": "Name",
          "type": "string"
        },
        "organizationId": {
          "description": "Organization ID",
          "title": "Organization ID",
          "type": "string"
        },
        "organizationName": {
          "description": "Organization Name",
          "title": "Organization Name",
          "type": "string"
        },
        "qualification": {
          "description": "Qualification",
          "title": "Qualification",
          "type": "string"
        },
        "referralProgram": {
          "description": "Referral Program Name",
          "title": "Referral Program",
          "type": "string"
        },
        "salesStage": {
          "description": "Sales Stage",
          "enum": [
            "Qualify",
            "Develop",
            "Propose",
            "Close"
          ],
          "title": "Sales Stage",
          "type": "string"
        },
        "status": {
          "description": "Status",
          "title": "Status",
          "type": "string"
        },
        "statusReason": {
          "description": "Status Reason",
          "title": "Status - Reason",
          "type": "string"
        },
        "substatus": {
          "description": "SubStatus",
          "title": "SubStatus",
          "type": "string"
        },
        "target": {
          "description": "Target",
          "items": {
            "properties": {
              "id": {
                "description": "Target ID",
                "title": "Target - ID",
                "type": "string"
              },
              "type": {
                "description": "Target Type",
                "title": "Target - Type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "team": {
          "description": "Sales Team",
          "title": "Sales Team",
          "items": {
            "properties": {
              "contactPreference": {
                "description": "Sales Team Contact Preference",
                "properties": {
                  "disableNotifications": {
                    "description": "Sales Team Disable Notifications",
                    "title": "Disable Notifications",
                    "type": "boolean"
                  },
                  "locale": {
                    "description": "Sales Team Contact Preference Locale",
                    "title": "Contact Preference Locale",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "email": {
                "description": "Sales Team Email",
                "title": "Email",
                "type": "string"
              },
              "firstName": {
                "description": "Sales Team First Name",
                "title": "First Name",
                "type": "string"
              },
              "lastName": {
                "description": "Sales Team Last Name",
                "title": "Last Name",
                "type": "string"
              },
              "phoneNumber": {
                "description": "Sales Team Phone Number",
                "title": "Phone Number",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "trackingInfo": {
          "description": "Referral Tracking Information",
          "properties": {
            "microsoftMsxId": {
              "description": "Opportunity ID for the referral in Microsoft CRM",
              "title": "Microsoft CRM ID",
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "Type of Referral",
          "title": "Type",
          "type": "string"
        },
        "updatedDateTime": {
          "description": "Updated Date Time",
          "title": "Date/Time of Update",
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.UpdateReferralDetails": {
      "description": "Update Referral Details",
      "items": {
        "properties": {
          "op": {
            "description": "Choose an update (patch) operation",
            "default": "replace",
            "enum": [
              "replace",
              "add"
            ],
            "title": "Update Operation",
            "type": "string",
            "x-ms-summary": "Update Operation"
          },
          "path": {
            "description": "Path to specific field within referral document for e.g. /details/notes",
            "enum": [
              "/campaignId",
              "/consent/consentToShareReferralWithMicrosoftSellers",
              "/customerProfile/team",
              "/customerProfile/team/-",
              "/details/closingDateTime",
              "/details/currency",
              "/details/dealValue",
              "/details/notes",
              "/details/requirements/solutions",
              "/details/requirements/solutions/-",
              "/externalReferenceId",
              "/referralProgram",
              "/salesStage",
              "/status",
              "/substatus",
              "/statusReason",
              "/team",
              "/team/-"
            ],
            "title": "Field Path",
            "type": "string",
            "x-ms-summary": "Field Path"
          },
          "value": {
            "description": "New value to be replaced",
            "title": "Value",
            "x-ms-summary": "Value"
          }
        },
        "type": "object"
      },
      "type": "array",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.UpdateReferralDetails"
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral]]": {
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "items": {
            "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-typeName": "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral]]"
    }
  },
  "host": "api.partner.microsoft.com",
  "info": {
    "description": "Partner center referrals connector will help Microsoft partners to get a bidirectional sync between their CRM instances and partner center referrals system.",
    "title": "Partner Center Referrals",
    "version": "1.0",
    "contact": {
      "name": "Partner Center Support",
      "url": "https://partner.microsoft.com/en-us/support",
      "email": "pcRefConnectorHelp@microsoft.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "parameters": {},
  "paths": {
    "/referrals": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Get all referrals",
        "operationId": "GetAllReferrals",
        "parameters": [
          {
            "description": "Expands related entities inline (default = none).",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string",
            "x-ms-summary": "Expand Query",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "An ODATA filter query to restrict the entries returned (e.g. stringColumn eq 'string' OR numberColumn lt 123).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-ms-summary": "Filter Query",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "An ODATA select query to display which properties to include in the response.",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string",
            "x-ms-summary": "Select Query",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "An ODATA orderBy query for specifying the order of entries.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string",
            "x-ms-summary": "Order By",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Total number of entries to retrieve (default = all).",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The number of entries to skip (default = 0).",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Includes a count of the matching results in the response.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Count",
            "x-ms-visibility": "advanced"
          },
          {
            "default": "application/json",
            "description": "Content type of the request.",
            "in": "header",
            "name": "content-type",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The unique identifier to track the request.",
            "in": "header",
            "name": "MS-CorrelationId",
            "required": false,
            "type": "string",
            "x-ms-summary": "Correlation ID",
            "x-ms-visibility": "important"
          },
          {
            "default": "60858c1b-2062-40ad-b42c-996b6b5b047d",
            "description": "Optional, ID to identify the caller - Power Automate",
            "in": "header",
            "name": "X-Caller-Id",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "@odata.context": {
                  "description": "OData context for this API call",
                  "title": "ODataContext",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "@odata.count",
                  "format": "int32",
                  "title": "ODataCount",
                  "type": "integer"
                },
                "value": {
                  "items": {
                    "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "There was a missing or an invalid input. The response body will provide the error details."
          },
          "401": {
            "description": "The request was not authenticated. The client needs to authenticate with the partner API service first."
          },
          "403": {
            "description": "The request was authenticated but was refused since the caller does not have the rights to invoke it."
          },
          "404": {
            "description": "The resource is not found."
          },
          "500": {
            "description": "The partner API service or one of its dependencies failed to fulfill the request. Callers may retry this."
          }
        },
        "summary": "Get all referrals",
        "tags": [
          "Referrals"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Create a referral",
        "operationId": "CreateReferral",
        "parameters": [
          {
            "description": "The entity to post",
            "in": "body",
            "name": "Referral",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
            }
          },
          {
            "description": "The unique identifier to track the request",
            "in": "header",
            "name": "MS-CorrelationId",
            "required": false,
            "type": "string",
            "x-ms-summary": "Correlation ID",
            "x-ms-visibility": "important"
          },
          {
            "default": "60858c1b-2062-40ad-b42c-996b6b5b047d",
            "description": "Optional, ID to identify the caller - Power Automate",
            "in": "header",
            "name": "X-Caller-Id",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request was successful. Referral created.",
            "schema": {
              "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
            }
          },
          "400": {
            "description": "There was a missing or an invalid input. The response body will provide the error details."
          },
          "401": {
            "description": "The request was not authenticated. The client needs to authenticate with the partner API service first."
          },
          "403": {
            "description": "The request was authenticated but was refused since the caller does not have the rights to invoke it."
          },
          "404": {
            "description": "The resource is not found."
          },
          "500": {
            "description": "The partner API service or one of its dependencies failed to fulfill the request. Callers may retry this."
          }
        },
        "summary": "Create a referral",
        "tags": [
          "Referrals"
        ]
      }
    },
    "/referrals/{id}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Get a referral matching the given identifier",
        "operationId": "GetReferralById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Identifier of the referral.",
            "x-ms-summary": "Referral ID"
          },
          {
            "default": "application/json",
            "description": "Content type of the request.",
            "in": "header",
            "name": "content-type",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The unique identifier to track the request",
            "in": "header",
            "name": "MS-CorrelationId",
            "required": false,
            "type": "string",
            "x-ms-summary": "Correlation ID",
            "x-ms-visibility": "important"
          },
          {
            "default": "60858c1b-2062-40ad-b42c-996b6b5b047d",
            "description": "Optional, ID to identify the caller - Power Automate",
            "in": "header",
            "name": "X-Caller-Id",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
            }
          },
          "400": {
            "description": "There was a missing or an invalid input. The response body will provide the error details."
          },
          "401": {
            "description": "The request was not authenticated. The client needs to authenticate with the partner API service first."
          },
          "403": {
            "description": "The request was authenticated but was refused since the caller does not have the rights to invoke it."
          },
          "404": {
            "description": "The resource is not found."
          },
          "500": {
            "description": "The partner API service or one of its dependencies failed to fulfill the request. Callers may retry this."
          }
        },
        "summary": "Get a referral by Id",
        "tags": [
          "Referrals"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Updates the referral matching the given referral identifier",
        "operationId": "UpdateReferralById",
        "parameters": [
          {
            "description": "The unique id for this referral.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Referral ID"
          },
          {
            "in": "body",
            "name": "odataReferral",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
            }
          },
          {
            "description": "Used for if match header from the client.",
            "in": "header",
            "name": "if-match",
            "required": true,
            "type": "string",
            "x-ms-summary": "Used for if match header from the client"
          },
          {
            "default": "application/json",
            "description": "Content type of the request",
            "in": "header",
            "name": "content-type",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The unique identifier to track the request",
            "in": "header",
            "name": "MS-CorrelationId",
            "required": false,
            "type": "string",
            "x-ms-summary": "Correlation ID",
            "x-ms-visibility": "important"
          },
          {
            "default": "60858c1b-2062-40ad-b42c-996b6b5b047d",
            "description": "Optional, ID to identify the caller - Power Automate",
            "in": "header",
            "name": "X-Caller-Id",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request was successful. Referral status updated.",
            "schema": {
              "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
            }
          },
          "400": {
            "description": "There was a missing or an invalid input. The response body will provide the error details."
          },
          "401": {
            "description": "The request was not authenticated. The client needs to authenticate with the partner API service first."
          },
          "403": {
            "description": "The request was authenticated but was refused since the caller does not have the rights to invoke it."
          },
          "404": {
            "description": "The resource is not found."
          },
          "500": {
            "description": "The partner API service or one of its dependencies failed to fulfill the request. Callers may retry this."
          }
        },
        "summary": "Update a referral by Id",
        "tags": [
          "Referrals"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Updates the referral matching the given referral identifier for specific fields",
        "operationId": "PatchReferralById",
        "parameters": [
          {
            "description": "The unique id for this referral",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Referral ID"
          },
          {
            "default": "application/json",
            "description": "Content type of the request",
            "in": "header",
            "name": "content-type",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The unique identifier to track the request",
            "in": "header",
            "name": "MS-CorrelationId",
            "required": false,
            "type": "string",
            "x-ms-summary": "Correlation ID",
            "x-ms-visibility": "important"
          },
          {
            "default": "60858c1b-2062-40ad-b42c-996b6b5b047d",
            "description": "Optional, ID to identify the caller - Power Automate",
            "in": "header",
            "name": "X-Caller-Id",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "Referral",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.UpdateReferralDetails"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "The request was successful. Referral status updated.",
            "schema": {
              "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
            }
          },
          "400": {
            "description": "There was a missing or an invalid input. The response body will provide the error details."
          },
          "401": {
            "description": "The request was not authenticated. The client needs to authenticate with the partner API service first."
          },
          "403": {
            "description": "The request was authenticated but was refused since the caller does not have the rights to invoke it."
          },
          "404": {
            "description": "The resource is not found."
          },
          "500": {
            "description": "The partner API service or one of its dependencies failed to fulfill the request. Callers may retry this."
          }
        },
        "summary": "Update specific fields in a referral by Id",
        "tags": [
          "Referrals"
        ]
      }
    }
  },
  "produces": [],
  "responses": {},
  "schemes": [
    "https"
  ],
  "security": [
    {
      "oauth2_auth": [
        "openid"
      ]
    }
  ],
  "securityDefinitions": {
    "oauth2_auth": {
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "flow": "accessCode",
      "scopes": {
        "openid": "openid"
      },
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "type": "oauth2"
    }
  },
  "swagger": "2.0",
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://partner.microsoft.com/dashboard"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://privacy.microsoft.com/en-US/privacystatement"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity;Sales and CRM"
    }
  ]
}