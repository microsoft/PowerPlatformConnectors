{
  "basePath": "/v1.0/engagements/",
  "consumes": [],
  "definitions": {
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Address": {
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Address"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Consent": {
      "properties": {
        "consentToContact": {
          "type": "boolean"
        },
        "consentToToShareInfoWithOthers": {
          "type": "boolean"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Consent"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.ContactPreference": {
      "properties": {
        "disableNotifications": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.ContactPreference"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.CustomerProfile": {
      "properties": {
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.CustomerProfile"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.CustomerProfileId": {
      "properties": {
        "id": {
          "type": "string"
        },
        "profileType": {
          "enum": [
            "Duns",
            "External"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.CustomerProfileId"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.InviteContext": {
      "properties": {
        "notes": {
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.InviteContext"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.InvitedBy": {
      "properties": {
        "organizationId": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.InvitedBy"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Link": {
      "properties": {
        "method": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Link"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Member": {
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Member"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral": {
      "properties": {
        "@odata.context": {
          "description": "@odata.context",
          "title": "ODataContext",
          "type": "string"
        },
        "consent": {
          "description": "consentObject",
          "properties": {
            "consentToContact": {
              "description": "ConsentToContact",
              "title": "Consent To Contact",
              "type": "boolean"
            },
            "consentToToShareInfoWithOthers": {
              "description": "ConsentToShareInfoWithOthers",
              "title": "Consent To Share Info With Others",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "createdDateTime": {
          "description": "CreatedDateTime",
          "title": "Date/Time of Creation",
          "type": "string"
        },
        "customerProfile": {
          "description": "Team1customerProfileObject",
          "properties": {
            "address": {
              "description": "addressObject",
              "properties": {
                "addressLine1": {
                  "description": "CustomerProfileAddressLine1",
                  "title": "Customer Profile - Address Line 1",
                  "type": "string"
                },
                "addressLine2": {
                  "description": "CustomerProfileAddressLine2",
                  "title": "Customer Profile - Address Line 2",
                  "type": "string"
                },
                "city": {
                  "description": "CustomerProfileCity",
                  "title": "Customer Profile - City",
                  "type": "string"
                },
                "country": {
                  "description": "CustomerProfileCountry",
                  "title": "Customer Profile - Country",
                  "type": "string"
                },
                "postalCode": {
                  "description": "CustomerProfilePostalCode",
                  "title": "Customer Profile - Postal Code",
                  "type": "string"
                },
                "region": {
                  "description": "CustomerProfileRegion",
                  "title": "Customer Profile - Region",
                  "type": "string"
                },
                "state": {
                  "description": "CustomerProfileState",
                  "title": "Customer Profile - State",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "ids": {
              "description": "CustomerProfileIDs",
              "items": {},
              "title": "Customer Profile - IDs",
              "type": "array"
            },
            "name": {
              "description": "CustomerProfileName",
              "title": "Customer Profile - Name",
              "type": "string"
            },
            "size": {
              "description": "CustomerProfileSize",
              "title": "Customer Profile - Size",
              "type": "string"
            },
            "team": {
              "description": "Team1teamObject",
              "items": {
                "properties": {
                  "contactPreference": {
                    "description": "Team1contactPreferenceObject",
                    "properties": {
                      "disableNotifications": {
                        "description": "Team1ContactPreferenceDisableNotifications",
                        "title": "Team1 - Contact Preference Disable Notifications",
                        "type": "boolean"
                      },
                      "locale": {
                        "description": "Team1ContactPreferenceLocale",
                        "title": "Team1 - Contact Preference Locale",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "email": {
                    "description": "Team1Email",
                    "title": "Team1 - Email",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "Team1FirstName",
                    "title": "Team1 - First Name",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Team1LastName",
                    "title": "Team1 - Last Name",
                    "type": "string"
                  },
                  "phoneNumber": {
                    "description": "Team1PhoneNumber",
                    "title": "Team1 - Phone Number",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "details": {
          "description": "detailsObject",
          "properties": {
            "closingDateTime": {
              "description": "DetailsClosingDateTime",
              "title": "Details - Closing Date Time",
              "type": "string"
            },
            "currency": {
              "description": "DetailsCurrency",
              "title": "Details - Currency",
              "type": "string"
            },
            "dealValue": {
              "description": "DetailsDealValue",
              "format": "float",
              "title": "Details - Deal Value",
              "type": "number"
            },
            "notes": {
              "description": "DetailsNotes",
              "title": "Details - Notes",
              "type": "string"
            },
            "requirements": {
              "description": "requirementsObjects",
              "properties": {
                "industries": {
                  "description": "industriesObject",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "IndustryId",
                        "title": "Industry ID",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "products": {
                  "description": "productsObject",
                  "items": {},
                  "title": "Products - List",
                  "type": "array"
                },
                "services": {
                  "description": "servicesObject",
                  "items": {},
                  "title": "Services - List",
                  "type": "array"
                },
                "solutions": {
                  "description": "solutionsObject",
                  "items": {},
                  "title": "Solutions - List",
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "eTag": {
          "description": "eTag",
          "title": "eTag",
          "type": "string"
        },
        "engagementId": {
          "description": "EngagementID",
          "title": "Engagement ID",
          "type": "string"
        },
        "expirationDateTime": {
          "description": "ExpirationDateTime",
          "title": "Date/Time of Expiration",
          "type": "string"
        },
        "externalReferenceId": {
          "description": "ExternalReferenceID",
          "title": "External Reference ID",
          "type": "string"
        },
        "id": {
          "description": "ReferralID",
          "title": "Referral ID",
          "type": "string"
        },
        "inviteContext": {
          "description": "inviteContextObject",
          "properties": {
            "invitedBy": {
              "description": "invitedByObject",
              "properties": {
                "organizationId": {
                  "description": "InvitedByOrganizationId",
                  "title": "Invited By - Organization ID",
                  "type": "string"
                },
                "organizationName": {
                  "description": "InvitedByOrganizationName",
                  "title": "Invited By - Organization Name",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "notes": {
              "description": "InviteContextNotes",
              "title": "Invite - Context Notes",
              "type": "string"
            }
          },
          "type": "object"
        },
        "links": {
          "description": "linksObject",
          "properties": {
            "relatedReferrals": {
              "description": "LinksrelatedReferralsObject",
              "properties": {
                "method": {
                  "description": "LinksRelatedReferralsMethod",
                  "title": "Links - Related Referrals Method",
                  "type": "string"
                },
                "uri": {
                  "description": "LinksRelatedReferralsuri",
                  "title": "Links - Related Referrals URI",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "self": {
              "description": "LinksSelfObject",
              "properties": {
                "method": {
                  "description": "LinksSelfMethod",
                  "title": "Links - Self Method",
                  "type": "string"
                },
                "uri": {
                  "description": "LinksSelfuri",
                  "title": "Links - Self URI",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "name": {
          "description": "Name",
          "title": "Name",
          "type": "string"
        },
        "organizationId": {
          "description": "OrganizationID",
          "title": "Organization ID",
          "type": "string"
        },
        "organizationName": {
          "description": "OrganizationName",
          "title": "Organization Name",
          "type": "string"
        },
        "qualification": {
          "description": "Qualification",
          "title": "Qualification",
          "type": "string"
        },
        "status": {
          "description": "Status",
          "title": "Status",
          "type": "string"
        },
        "statusReason": {
          "description": "statusReason",
          "title": "Status - Reason",
          "type": "string"
        },
        "substatus": {
          "description": "subStatus",
          "title": "subStatus",
          "type": "string"
        },
        "target": {
          "description": "targetObject",
          "items": {
            "properties": {
              "id": {
                "description": "TargetId",
                "title": "Target - ID",
                "type": "string"
              },
              "type": {
                "description": "TargetType",
                "title": "Target - Type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "team": {
          "description": "Team2teamObject",
          "items": {
            "properties": {
              "contactPreference": {
                "description": "Team2ContactPreferenceObject",
                "properties": {
                  "disableNotifications": {
                    "description": "Team2DisableNotifications",
                    "title": "Team2 - Disable Notifications",
                    "type": "boolean"
                  },
                  "locale": {
                    "description": "Team2ContactPreferenceLocale",
                    "title": "Team2 - Contact Preference Locale",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "email": {
                "description": "Team2Email",
                "title": "Team2 - Email",
                "type": "string"
              },
              "firstName": {
                "description": "Team2FirstName",
                "title": "Team2 - First Name",
                "type": "string"
              },
              "lastName": {
                "description": "Team2LastName",
                "title": "Team2 - Last Name",
                "type": "string"
              },
              "phoneNumber": {
                "description": "Team2PhoneNumber",
                "title": "Team2 - Phone Number",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "type": {
          "description": "Type",
          "title": "Type",
          "type": "string"
        },
        "updatedDateTime": {
          "description": "UpdatedDateTime",
          "title": "Date/Time of Update",
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.ReferralDetails": {
      "properties": {
        "closingDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "dealValue": {
          "format": "double",
          "type": "number"
        },
        "notes": {
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.ReferralDetails"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.ReferralLinks": {
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.ReferralLinks"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.ReferralRequirements": {
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.ReferralRequirements"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.SolutionTag": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "enum": [
            "None",
            "Category",
            "Name"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.SolutionTag"
    },
    "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Tag": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object",
      "x-typeName": "Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Tag"
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral]]": {
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "items": {
            "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-typeName": "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral]]"
    }
  },
  "host": "api.partner.microsoft.com",
  "info": {
    "contact": {
      "name": "Partner Experiences Lead Management team, Microsoft Corporation"
    },
    "description": "Partner center referrals connector will help Microsoft partners to get a bidirectional sync between their CRM instances and partner center referrals system.",
    "title": "Partner Center Referrals",
    "version": "1.0",
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "parameters": {},
  "paths": {
    "/referrals": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Get all referrals",
        "operationId": "GetAllReferrals",
        "parameters": [
          {
            "description": "Expands related entities inline.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filters the results, based on a Boolean condition.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Selects which properties to include in the response.",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sorts the results.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Returns only the first n results.",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Skips the first n results.",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Includes a count of the matching results in the response.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "application/json",
            "description": "Used for tracking requests from the client.",
            "in": "header",
            "name": "content-type",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "@odata.context": {
                  "description": "@odata.context",
                  "title": "ODataContext",
                  "type": "string"
                },
                "@odata.count": {
                  "description": "@odata.count",
                  "format": "int32",
                  "title": "ODataCount",
                  "type": "integer"
                },
                "value": {
                  "items": {
                    "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "There was a missing or an invalid input. The response body will provide the error details."
          },
          "401": {
            "description": "The request was not authenticated. The client needs to authenticate with the partner API service first."
          },
          "403": {
            "description": "The request was authenticated but was refused since the caller does not have the rights to invoke it."
          },
          "404": {
            "description": "The resource is not found."
          },
          "500": {
            "description": "The partner API service or one of its dependencies failed to fulfill the request. Callers may retry this."
          }
        },
        "summary": "Get all referrals",
        "tags": [
          "Referrals"
        ]
      }
    },
    "/referrals/{id}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Get a referral matching the given identifier",
        "operationId": "GetReferralById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": "application/json",
            "description": "Used for tracking requests from the client.",
            "in": "header",
            "name": "content-type",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
            }
          },
          "400": {
            "description": "There was a missing or an invalid input. The response body will provide the error details."
          },
          "401": {
            "description": "The request was not authenticated. The client needs to authenticate with the partner API service first."
          },
          "403": {
            "description": "The request was authenticated but was refused since the caller does not have the rights to invoke it."
          },
          "404": {
            "description": "The resource is not found."
          },
          "500": {
            "description": "The partner API service or one of its dependencies failed to fulfill the request. Callers may retry this."
          }
        },
        "summary": "Get a referral by Id",
        "tags": [
          "Referrals"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "description": "Updates the referral matching the given referral identifier",
        "operationId": "UpdateReferralById",
        "parameters": [
          {
            "description": "The unique id for this referral",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "odataReferral",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
            }
          },
          {
            "description": "Used for if match header from the client.",
            "in": "header",
            "name": "if-match",
            "required": true,
            "type": "string"
          },
          {
            "default": "application/json",
            "description": "",
            "in": "header",
            "name": "content-type",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request was successful. Referral status updated.",
            "schema": {
              "$ref": "#/definitions/Microsoft.Partner.Service.PartnerReferrals.Contracts.V3.Referral"
            }
          },
          "400": {
            "description": "There was a missing or an invalid input. The response body will provide the error details."
          },
          "401": {
            "description": "The request was not authenticated. The client needs to authenticate with the partner API service first."
          },
          "403": {
            "description": "The request was authenticated but was refused since the caller does not have the rights to invoke it."
          },
          "404": {
            "description": "The resource is not found."
          },
          "500": {
            "description": "The partner API service or one of its dependencies failed to fulfill the request. Callers may retry this."
          }
        },
        "summary": "Update a referral by Id",
        "tags": [
          "Referrals"
        ]
      }
    }
  },
  "produces": [],
  "responses": {},
  "schemes": [
    "https"
  ],
  "security": [
    {
      "oauth2_auth": [
        "openid"
      ]
    }
  ],
  "securityDefinitions": {
    "oauth2_auth": {
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "flow": "accessCode",
      "scopes": {
        "openid": "openid"
      },
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "type": "oauth2"
    }
  },
  "swagger": "2.0",
  "tags": []
}