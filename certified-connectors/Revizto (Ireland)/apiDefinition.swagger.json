{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Revizto (Ireland)",
    "description": "Revizto Connector allows you to seamlessly extract information about your projects, teams, and issue history from Revizto. This capability enables the utilization of Revizto data, and, if necessary, its integration with other data sources, to generate custom reports and dashboards featuring compelling visuals in Power BI. Revizto Connector streamlines the process of linking both applications with just a few clicks, eliminating the need to compose API requests.",
    "contact": {
      "name": "Revizto",
      "url": "https://revizto.com/en/contact-us/",
      "email": "service@revizto.com"
    }
  },
  "host": "api.ireland.revizto.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "application/x-www-form-urlencoded"
  ],
  "produces": [
     "application/json"
  ],

  "paths": { 

    "/v5/project/list/paged": {
      "get": {
        "operationId": "Get__v5_project_paged_list",
        "tags": [
          "Projects"
        ],
        "summary": "Project list",
        "description": "Gets a paginated project list",
        "x-ms-summary": "Gets a paginated project list",
        "parameters": [
          {
            "description": "The field by which to sort the projects",
            "x-ms-summary": "The field by which to sort the projects",
            "in": "query",
            "name": "sorting",
            "required": false,
            "type": "string",
            "enum": [
              "published", 
              "updated", 
              "created", 
              "size", 
              "name"
            ]
          },
          {
            "description": "Set this parameter to true to include  project thumbnails in the response.",
            "x-ms-summary": "Set this parameter to true to include  project thumbnails in the response.",
            "in": "query",
            "name": "screenshots",
            "required": false,
            "type": "boolean",
            "enum": [
              true,
              false
            ]
          },
          {
            "description": "Set this parameter to true to include avatars of project owners in the response.",
            "x-ms-summary": "Set this parameter to true to include avatars of project owners in the response.",
            "in": "query",
            "name": "avatars",
            "required": false,
            "type": "boolean",
            "enum": [
              true,
              false
            ]
          },
          {
            "description": "Set this parameter to true to include project notification types in the response (1 - global notifications, 2 - custom notifications).",
            "x-ms-summary": "Include project notification settings",
            "in": "query",
            "name": "notifications",
            "required": false,
            "type": "boolean",
            "enum": [
              true,
              false
            ]
          },
          {
            "description": "Current page",
            "x-ms-summary": "Current page",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "You are authorized, and the server returned a response. See the \"result\" field for details.",
            "schema": {
              "properties": {
                "data": {
                  "default": null,
                  "description": "A JSON object with detailed response data.",
                  "type": "object",
                  "x-nullable": true
                },
                "message": {
                  "default": "Success.",
                  "title": "",
                  "type": "string"
                },
                "result": {
                  "default": 0
                }
              },
              "required": [
                "result",
                "data",
                "message"
              ],
              "type": "object"
            }
          }
        }
      }
    },
    "/v5/project/{projectUuid}/comments": {
      "get": {
        "operationId": "Get__v5_project_comments_project_comment_list",
        "tags": [
          "Project Issue Comments"
        ],
        "summary": "Project comments",
        "description": "Return all project comments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectUuid",
            "description": "The project UUID",
            "x-ms-summary": "The project UUID",
            "format": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "description": "The page number",
            "x-ms-summary": "The page number",
            "default": 1,
            "exclusiveMinimum": true,
            "in": "query",
            "minimum": 0,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The limit of comments on a page",
            "x-ms-summary": "The limit of comments on a page",
            "default": 15,
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "name": "commentTypes",
            "description": "Type of comments",
            "x-ms-summary": "Type of comments",
            "in": "query",
            "required": false,
            "type": "array",
            "items" : {
              "type": "string",
              "enum": [
                "text",
                "markup",
                "diff",
                "file"
              ]
            }
          },
          {
            "name": "issueUuids",
            "description": "Array of issues uuids",
            "x-ms-summary": "Array of issues uuids",
            "in": "query",
            "type": "array",
            "required": false,
            "items" : {
              "type": "string"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "You are authorized, and the server returned a response. See the result field for details.",
            "schema": {
              "type": "object",
              "x-properties": {
                "type": "object",
                "data": {
                  "description": "Response data",
                    "x-ms-summary": "Response data",
                    "x-nullable": true,
                    "type": "array",
                    "entities": {
                      "description": "A JSON array with results",
                      "x-ms-summary": "A JSON array with results",
                      "items": {
                        "$ref": "#/definitions/CommentsItem"

                      }
                    }
                  },
                  "message": {
                    "description": "Response status",
                    "x-ms-summary": "Response status",
                    "default": "Success.",
                    "title": "Status",
                    "type": "string"
                  },
                  "result": {
                    "description": "Response status code",
                    "x-ms-summary": "Response status code",
                    "default": 0,
                    "type": "integer"
                },
                "required": [
                  "result",
                  "data",
                  "message"
                ]
              }
            }
          }
        }
      }
    },
    "/v5/project/{Project UUID}/issue-filter/filter": {
      "get": {
        "operationId": "Post__v5_issue_filter_filter_issues",
        "tags": [
          "Issues"
        ],
        "summary": "Get issues",
        "description": "Gets a list of project issues",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Project UUID",
            "description": "The project UUID",
            "x-ms-summary": "The project UUID",
            "format": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "additionalFields",
            "description": "Append list of additional fields",
            "x-ms-summary": "Append list of additional fields",
            "in": "query",
            "default": [],
            "items": {
              "enum": [
                "appendClashAndLocationFields"
              ],
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "alwaysFiltersDTO",
            "description": "Filtering settings using the logical operator AND",
            "x-ms-summary": "Filtering settings using the logical operator AND",
            "in": "query",
            "default": [],
            "type": "array",
            "items": {
              "type": "string"
            }

          },
          {
            "name": "anyFiltersDTO",
            "description": "Filtering settings using the logical operator OR",
            "x-ms-summary": "Filtering settings using the logical operator OR",
            "in": "query",
            "default": [],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "customFields",
            "description": "Wich of additionalFields should be returned",
            "x-ms-summary": "Wich of additionalFields should be returned",
            "in": "query",
            "x-ms-examples": [
              "tags",
              "type",
              "clash_space"
            ],
            "items": {
              "enum": [
                "type",
                "tags",
                "watchers",
                "public",
                "sheet",
                "clash_test",
                "clash_area",
                "clash_room",
                "clash_space",
                "clash_zone",
                "clash_discipline",
                "clash_distance",
                "clash_distance_m",
                "clash_distance_mm",
                "clash_category",
                "clash_level",
                "clash_grid_x",
                "clash_grid_y",
                "clash_source_file",
                "clashGrid"
              ],
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "limit",
            "description": "Number of issues displayed per page",
            "x-ms-summary": "Number of issues displayed per page",
            "in": "query",
            "default": 100,
            "maximum": 100,
            "minimum": 1,
            "type": "integer"
          },
          {
            "name": "page",
            "description": "Page number",
            "x-ms-summary": "Page number",
            "in": "query",
            "default": 0,
            "minimum": 0,
            "type": "integer"
          },
          {
            "name": "sendFullIssueData",
            "in": "query",
            "description": "To get full issue data",
            "x-ms-summary": "To get full issue data",
            "default": false,
            "type": "boolean"
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "To get issues by statuses",
            "x-ms-summary": "To get issues by statuses",
            "default": null,
            "x-ms-examples": [
              [
                "none",
                "open"
              ]
            ],
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array"
          },
          {
            "name": "synchronized",
            "default": null,
            "description": "To retrieve only the issues that were created or updated after a specific time, specify the time here. You might want to use this parameter if you have previously retrieved the project issues, in order to save time by getting the updates only. Use the following format: YYYY-MM-DD HH:MM:SS. Example: 2018-05-30 23:24:57 If the time is not specified, it is set to: 2000-01-01 00:00:00",
            "x-ms-summary": "To retrieve the issues that were created or updated after a specific time",
            "in": "query",
            "x-ms-examples": "2018-05-30 23:24:57",
            "format": "date-time",
            "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "You are authorized, and the server returned a response. See the result field for details.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "title": "Response",
                  "description": "Response",
                  "x-ms-summary": "Response",
                  "x-nullable": true
                },
                "message": {
                  "title": "Response status",
                  "description": "Respose status",
                  "x-ms-summary": "Response status",
                  "default": "Success.",
                  "type": "string"
                },
                "result": {
                  "description": "Response status code",
                  "x-ms-summary": "Response status code",
                  "default": 0,
                  "type": "integer"
                }
              },
              "required": [
                "result",
                "data",
                "message"
              ]
            }
          }
        }
      }
    },
    "/v5/project/{projectUuid}/issue-filter/filter_all": {
      "post": {
        "operationId": "Post__v5_issue_filter_filter_all_issues",       
        "tags": [
          "Issues"
        ],
        "summary": "List of all issues in the project",
        "description": "Gets a list of all project issues",
        "x-ms-summary": "Gets a list of all project issues",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The project UUID",
            "x-ms-summary": "The project UUID",
            "format": "uuid",
            "in": "path",
            "name": "projectUuid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "You are authorized, and the server returned a response. See the result field for details.",
            "x-ms-summary": "You are authorized, and the server returned a response. See the result field for details.",
            "schema": {
              "properties": {
                "data": {
                  "description": "A JSON object with detailed response data.",
                  "x-ms-summary": "A JSON object with detailed response data.",
                  "properties": {
                    "count": {
                      "description": "Count of issues",
                      "x-ms-summary": "Count of issues",
                      "example": 1,
                      "type": "integer"
                    },
                    "entities": {
                      "description": "Array of results",
                      "x-ms-summary": "Array of results",
                      "items": {
                        "$ref": "#/definitions/PartialIssueItem"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "entities",
                    "count"
                  ],
                  "type": "object",
                  "x-nullable": true
                },
                "message": {
                  "description": "Response status",
                  "x-ms-summary": "Response status",
                  "default": "Success.",
                  "title": "Status",
                  "type": "string"
                },
                "result": {
                  "description": "Response status code",
                  "x-ms-summary": "Response status code",
                  "default": 0,
                  "type": "integer"
                }
              },
              "required": [
                "result",
                "data",
                "message"
              ],
              "type": "object"
            }
          }
        }
      }
    },
    "/v5/project/{projectUuid}/team": {
      "get": {
        "operationId": "Post__v5_get_project_members",
        "tags": [
          "Projects"
        ],
        "summary": "Get project members",
        "description": "Gets the list of project members",
        "x-ms-summary": "Get a list of all project members",
        "parameters": [
          {
            "description": "The project UUID",
            "x-ms-summary": "The project UUID",
            "format": "uuid",
            "in": "path",
            "name": "projectUuid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "You are authorized, and the server returned a response",
            "schema": {
              "properties": {
                "data": {
                  "description": "A JSON object with detailed response data",
                  "properties": {
                    "count": {
                      "description": "Count of users",
                      "x-ms-summary": "Count of users",
                      "example": 1,
                      "type": "integer"
                    },
                    "entities": {
                      "description": "Array of results",
                      "x-ms-summary": "Array of results",
                      "items": {
                        "$ref": "#/definitions/ProjectMemberItem"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "entities",
                    "count"
                  ],
                  "type": "object",
                  "x-nullable": true
                },
                "message": {
                  "description": "Response status",
                  "x-ms-summary": "Response status",
                  "default": "Success.",
                  "title": "Status",
                  "type": "string"
                },
                "result": {
                  "description": "Response status code",
                  "x-ms-summary": "Response status code",
                  "title": "Status code",
                  "default": 0,
                  "type": "integer"
                }
              },
              "required": [
                "result",
                "data",
                "message"
              ],
              "type": "object"
            }
          }
        }
      }
    },
    "/v5/user/licenses": {
      "get": {
        "operationId": "Get__v5_user_get_licenses",
        "tags": [
          "Licenses"
        ],
        "summary": "Get current user's licenses",
        "description": "Gets the licenses available to the current user.",
        "x-ms-summary": "Get a list of all avaliable current user's lincenses",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "You are authorized, and the server returned a response",
            "x-ms-summary": "You are authorized, and the server returned a response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "A JSON object with detailed response data",
                  "x-ms-summary": "A JSON object with detailed response data",
                  "properties": {
                    "count": {
                      "description": "Count of user licenses",
                      "x-ms-summary": "Count of user licenses",
                      "example": 1,
                      "type": "integer"
                    },
                    "entities": {
                      "description": "A JSON array that describes one or several licenses",
                      "x-ms-summary": "A JSON array that describes one or several licenses",
                      "items": {
                        "$ref": "#/definitions/LicenseItem"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "entities",
                    "count"
                  ],
                  "type": "object",
                  "x-nullable": true
                },
                "message": {
                  "description": "Response status",
                  "x-ms-summary": "Response status",
                  "default": "Success.",
                  "title": "Status",
                  "type": "string"
                },
                "result": {
                  "description": "Response status code",
                  "x-ms-summary": "Response status code",
                  "title": "Code",
                  "default": 0,
                  "type": "integer"
                }
              },
              "required": [
                "result",
                "data",
                "message"
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "LicenseItem": {
      "title": "License object",
      "x-ms-summary": "License object",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "authMethod": {
          "description": "Current user automation method",
          "x-ms-summary": "Current user automation method",
          "type": "object"
        },
        "created": {
          "description": "The license creation date in the following format: YYYY-MM-DD HH:MM:SS.",
          "x-ms-summary": "The license creation date in the following format: YYYY-MM-DD HH:MM:SS.",
          "example": "2018-05-30 23:24:57",
          "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
          "type": "string"
        },
        "disallowCloud": {
          "description": "Shows whether the license allows creation of cloud projects",
          "x-ms-summary": "Shows whether the license allows creation of cloud projects",
          "type": "boolean"
        },
        "disallowShared": {
          "description": "Shows whether the license allows creation of shared location projects",
          "x-ms-summary": "Shows whether the license allows creation of shared location projects",
          "type": "boolean"
        },
        "expires": {
          "description": "The license expiration date in the following format: YYYY-MM-DD",
          "x-ms-summary": "The license expiration date in the following format: YYYY-MM-DD",
          "example": "2018-05-30",
          "format": "date",
          "type": "string"
        },
        "frozen": {
          "description": "Shows whether the license is active or suspended",
          "x-ms-summary": "Shows whether the license is active or suspended",
          "example": false,
          "type": "boolean"
        },
        "frozenReason": {
          "description": "The reason of the current license suspension",
          "x-ms-summary": "The reason of the current license suspension",
          "example": 0,
          "type": "integer",
          "enum":[
            0,
            -50,
            -51,
            -54,
            -56
          ]
        },
        "frozenReasons": {
          "description": "All reasons of the license suspension that had effect in the past, including the reason of the current suspension",
          "x-ms-summary": "All reasons of the license suspension that had effect in the past, including the reason of the current suspension",
          "items": {
            "type": "integer",
            "enum":[
              0,
              -50,
              -51,
              -54,
              -56
            ]
          },
          "type": "array"
        },
                "id": {
          "description": "The license ID",
          "x-ms-summary": "The license ID",
          "example": 12345,
          "type": "integer"
        },
        "isValidAuth": {
          "description": "Shows whether the current user is signed in to this license",
          "x-ms-summary": "Shows whether the current user is signed in to this license",
          "example": true,
          "type": "boolean"
        },
        "licenseClass": {
          "description": "The subscription plan",
          "x-ms-summary": "The subscription plan",
          "type": "integer",
          "example": 0,
          "enum": [
            0,
            1
          ]
        },
        "licenseOptions": {
          "$ref": "#/definitions/LicenseOptionsItem"
        },
        "logo": {
          "description": "The URL of the company logo stored in the license",
          "x-ms-summary": "The URL of the company logo stored in the license",
          "example": "https://example.com/image.jpeg",
          "format": "uri",
          "type": "string",
          "x-nullable": true
        },
        "memberCompanies": {
          "description": "The list of license members' companies",
          "x-ms-summary": "The list of license members' companies",
          "example": [
            "Company 1",
            "Company 2"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "memberDepartments": {
          "description": "The list of license members' departments",
          "x-ms-summary": "The list of license members' departments",
          "example": [
            "Department1",
            "Department 2"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "memberLocations": {
          "description": "The list of license members' office locations",
          "x-ms-summary": "The list of license members' office locations",
          "example": [
            "Location1",
            "Location 2"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "memberMetaTags": {
          "description": "The user tags available in the license",
          "x-ms-summary": "The user tags available in the license",
          "example": [
            "user-tag-1",
            "user-tag-2"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "The license name",
          "x-ms-summary": "The license name",
          "example": "My license",
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/LicenseOwnerItem"
        },
        "plan": {
          "description": "A JSON object that describes the license capacity. While it returns correct data, it is currently deprecated and replaced with the slots field. It will be removed in future Revizto versions.",
          "x-ms-summary": "A JSON object that describes the license capacity. While it returns correct data, it is currently deprecated and replaced with the slots field. It will be removed in future Revizto versions.",
          "type": "object",
          "x-deprecated": true
        },
        "projectMetaTags": {
          "description": "The project tags available in the license",
          "x-ms-summary": "The project tags available in the license",
          "example": [
            "project-tag-1",
            "project-tag-2"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "region": {
          "description": "The license region",
          "x-ms-summary": "The license region",
          "example": "eu-central-1",
          "type": "string"
        },
        "role": {
          "description": "The current user's role in the license.</p>\n<table>\n    <tr>\n        <td>1</td>\n        <td>Guest</td>\n    </tr>\n    <tr>\n        <td>2</td>\n        <td>Collaborator</td>\n    </tr>\n    <tr>\n        <td>3</td>\n        <td>Content creator</td>\n    </tr>\n    <tr>\n        <td>4</td>\n        <td>License administrator</td>\n    </tr>\n    <tr>\n        <td>5</td>\n        <td>Super administrator</td>\n    </tr>\n</table>",
          "x-ms-summary": "The current user's role in the license",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "example": 5,
          "type": "integer"
        },
        "sendEmail": {
          "description": "Notification settings",
          "x-ms-summary": "Notification settings",
          "example": 1,
          "type": "integer",
          "enum": [
            0,
            1
          ]
        },
        "slots": {
          "description": "A JSON object that describes the license capacity",
          "properties": {
            "projects": {
              "description": "The number of project slots in the license",
              "x-ms-summary": "The number of project slots in the license",
              "example": 99686
            },
            "users": {
              "description": "The number of user slots in the license",
              "x-ms-summary": "The number of user slots in the license",
              "example": 99793
            }
          },
          "type": "object"
        },
        "type": {
          "description": "License type",
          "x-ms-summary": "License type",
          "x-ms-visibility": "internal",
          "example": 0,
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ]
        },
        "uuid": {
          "description": "The license UUID",
          "x-ms-summary": "The license UUID",
          "example": "f143fb14-a16b-4d3a-af51-3d0aa77f8ba6",
          "format": "uuid",
          "type": "string"
        },
        "visibleCompany": {
          "description": "Shows whether the Company field is enabled in the license",
          "x-ms-summary": "Shows whether the Company field is enabled in the license",
          "example": 0,
          "type": "integer",
          "enum": [
            1,
            0
          ]
        },
        "visibleDepartment": {
          "description": "Shows whether the Department field is enabled in the license",
          "x-ms-summary": "Shows whether the Department field is enabled in the license",
          "example": 1,
          "type": "integer",
          "enum": [
            1,
            0
          ]
        },
        "visibleLocation": {
          "description": "Shows whether the Office location field is enabled in the license",
          "example": 0,
          "type": "integer",
          "enum": [
            1,
            0
          ]
        }
      },
      "required": [
          "id",
          "uuid",
          "name",
          "expires",
          "type",
          "licenseClass",
          "licenseOptions",
          "region",
          "sendEmail",
          "disallowCloud",
          "disallowShared",
          "owner",
          "plan",
          "logo",
          "created",
          "visibleCompany",
          "visibleDepartment",
          "visibleLocation",
          "role",
          "isValidAuth",
          "frozen",
          "frozenReason"
        ]
    },
    "LicenseOptionsItem": {
      "additionalProperties": false,
      "description": "Describes license options",
      "x-ms-summary": "Describes license options",
    },
    "LicenseOwnerItem": {
      "additionalProperties": false,
      "description": "A JSON object that describes the super administrator of the license",
      "x-ms-summary": "A JSON object that describes the super administrator of the license",
      "title": "LicenseOwnerItem",
      "type": "object",
      "properties": {
        "email": {
          "description": "The super administrator's email address",
          "x-ms-summary": "The super administrator's email address",
          "example": "jdoe@example.com",
          "format": "email",
          "maxLength": 255,
          "type": "string"
        },
        "firstname": {
          "description": "The super administrator's first name",
          "x-ms-summary": "The super administrator's first name",
          "example": "John",
          "type": "string"
        },
        "id": {
          "description": "The ID of the super administrator",
          "x-ms-summary": "The ID of the super administrator",
          "example": 12345,
          "type": "integer"
        },
        "lastname": {
          "description": "The super administrator's last name",
          "x-ms-summary": "The super administrator's last name",
          "example": "Doe",
          "type": "string"
        },
        "role": {
          "description": "This field is for internal use",
          "x-ms-summary": "This field is for internal use",
          "example": "admin",
          "type": "string"
        },
        "uuid": {
          "description": "The UUID of the super administrator",
          "x-ms-summary": "The UUID of the super administrator",
          "example": "eb2fbeb8-e31d-469d-a4b7-e781c8c8c8ae",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uuid",
        "firstname",
        "lastname",
        "email",
        "role"
      ]
    },
    "PartialIssueItem": {
      "title": "partialIssueItem",
      "type": "object",
      "properties": {
        "dbid": {
          "description": "Internal issue ID",
          "x-ms-summary": "Internal issue ID",
          "type": "integer",
          "x-ms-visibility": "internal"
        },
        "id": {
          "description": "External issue ID",
          "x-ms-summary": "Exteranl issue ID",
          "type": "integer"
        },
        "uuid": {
          "description": "A unique issue identifier in UUID 4 format",
          "x-ms-summary": "A unique issue identifier in UUID 4 format",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "dbid",
        "id",
        "uuid"
      ]
    },
    "ProjectMemberItem": {
      "title": "projectMemberItem",
      "type": "object",
      "properties": {
        "accessRole": {
          "$ref": "#/definitions/RoleItem"
        },
        "accesslevel": {
          "description": "User access level",
          "x-ms-summary": "User access level",
          "type": "integer",
          "x-ms-visibility": "internal"
        },
        "activated": {
          "description": "Shows whether the license member completed their registration at Revizto Workspace",
          "x-ms-summary": "Shows whether the license member completed their registration at Revizto Workspace",
          "type": "boolean"
        },
        "avatar": {
          "description": "The URL of the project member's profile picture",
          "x-ms-summary": "The URL of the project member's profile picture",
          "type": "string"
        },
        "company": {
          "description": "The license member's company",
          "x-ms-summary": "The license member's company",
          "type": "string"
        },
        "department": {
          "description": "The license member's department",
          "x-ms-summary": "The license member's department",
          "type": "string"
        },
        "email": {
          "description": "The project member's email",
          "x-ms-summary": "The project member's email",
          "format": "email",
          "type": "string"
        },
        "firstname": {
          "description": "The license member's first name",
          "x-ms-summary": "The license member's first name",
          "example": "John",
          "type": "string"
        },
        "frozen": {
          "description": "Shows whether the license member is suspended",
          "x-ms-summary": "Shows whether the license member is suspended",
          "type": "boolean"
        },
        "fullname": {
          "description": "The full name of the license member (first name + space + last name)",
          "x-ms-summary": "The full name of the license member (first name + space + last name)",
          "example": "John Doe",
          "type": "string"
        },
        "id": {
          "description": "Revizto account ID",
          "x-ms-summary": "Revizto account ID",
          "x-ms-visibility": "internal",
          "example": 12345,
          "type": "integer"
        },
        "invited": {
          "description": "Invitation status",
          "x-ms-summary": "Invitation status",
          "type": "boolean"
        },
        "language": {
          "description": "The project owner's Revizto Workspace language",
          "type": "string",
          "enum": [
            "cn",
            "de",
            "en",
            "es",
            "fr",
            "jp",
            "pt"
          ]
        },
        "lastActive": {
          "description": "The last time when the project member performed any of the following actions in the project: Have the project open in the Revizto application; Create a project or a new project version; Add or remove a project member, or edit their access rights; Edit or comment an issue; Create, edit, or send a report; Create, edit, or send a dashboard or a chart;",
          "x-ms-summary": "The last time when the project member performed any of the following actions in the project: Have the project open in the Revizto application; Create a project or a new project version; Add or remove a project member, or edit their access rights; Edit or comment an issue; Create, edit, or send a report; Create, edit, or send a dashboard or a chart;",
          "example": "2018-05-30 23:24:57",
          "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
          "type": "string"
        },
        "lastname": {
          "description": "The license member's last name",
          "x-ms-summary": "The license member's last name",
          "example": "Doe",
          "type": "string"
        },
        "location": {
          "description": "The license member's office location",
          "x-ms-summary": "The license member's office location",
          "type": "string"
        },
        "member": {
          "$ref": "#/definitions/ProjectMemberItemMember"
        },
        "member_id": {
          "description": "The license member ID",
          "x-ms-summary": "The license member ID",
          "type": "integer"
        },
        "role": {
          "description": "Internal role",
          "x-ms-summary": "Internal role",
          "x-ms-visibility": "internal",
          "type": "string"
        },
        "status": {
          "description": "The license member status",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ]
        },
        "suspendReason": {
          "description": "Suspension code",
          "x-ms-summary": "Suspension code",
          "type": "integer"
        },
        "uuid": {
          "description": "Revizto account UUID",
          "x-ms-summary": "Revizto account UUID",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uuid",
        "firstname",
        "lastname",
        "fullname",
        "frozen",
        "lastActive",
        "activated",
        "role",
        "language",
        "avatar",
        "email",
        "invited",
        "accesslevel",
        "accessRole",
        "member_id",
        "member",
        "company",
        "department",
        "location",
        "status",
        "suspendReason"
      ]
    },
    "ProjectMemberItemMember": {
      "description": "A JSON object that describes a license member",
      "x-ms-summary": "A JSON object that describes a license member",
      "type": "object",
      "properties": {
        "hasValidAuth": {
          "description": "User have active authentication method",
          "x-ms-summary": "User have active authentication method",
          "type": "boolean"
        },
        "id": {
          "description": "The license member ID",
          "x-ms-summary": "The license member ID",
          "type": "integer"
        },
        "metaTags": {
          "description": "List of tags assigned to the license member",
          "x-ms-summary": "List of tags assigned to the license member",
          "items": {
            "type": "string",
            "example": "Tag 1"
          },
          "type": "array"
        },
        "permissions": {
          "description": "User permissions",
          "x-ms-summary": "User permissions",
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "role": {
          "description": "The project member's role in the license",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        "user": {
          "$ref": "#/definitions/ProjectMemberUser"
        },
        "uuid": {
          "description": "The project member UUID",
          "x-ms-summary": "The project member UUID",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uuid",
        "role",
        "hasValidAuth",
        "user"
      ]
    },
    "ProjectMemberUser": {
      "description": "A JSON object that describes a Revizto account",
      "x-ms-summary": "A JSON object that describes a Revizto account",
      "type": "object",
      "properties": {
        "email": {
          "description": "The user's email",
          "x-ms-summary": "The user's email",
          "format": "email",
          "type": "string"
        },
        "firstname": {
          "description": "The user's first name",
          "x-ms-summary": "The user's first name",
          "type": "string"
        },
        "id": {
          "description": "The Revizto account ID",
          "x-ms-summary": "The Revizto account ID",
          "type": "integer"
        },
        "lastname": {
          "description": "The user's last name",
          "x-ms-summary": "The user's last name",
          "type": "string"
        },
        "role": {
          "description": "Account role for internal use",
          "x-ms-summary": "Account role for internal use",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "uuid": {
          "description": "The Revizto account UUID",
          "x-ms-summary": "The Revizto account UUID",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uuid",
        "firstname",
        "lastname",
        "role",
        "email"
      ]
    },
    "RoleItem": {
      "description": "The project member's project role",
      "x-ms-summary": "The project member's project role",
      "type": "object",
      "properties": {
        "id": {
          "description": "The project role ID",
          "x-ms-summary": "The project role ID",
          "example": 12345,
          "type": "integer"
        },
        "name": {
          "description": "The project role name",
          "x-ms-summary": "The project role name",
          "example": "Admin",
          "type": "string"
        },
        "system": {
          "description": "Predifined or custome role",
          "x-ms-summary": "Predifined or custome role",
          "example": 1,
          "type": "integer",
          "x-ms-visibility": "internal"
        },
        "uuid": {
          "description": "The project role UUID",
          "x-ms-summary": "The project role UUID",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uuid",
        "name",
        "system"
      ]
    },
    "CommentsItem": {
      "type" : "object"
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://ws.revizto.com/login?request=accessCode&",
      "tokenUrl": "https://api.ireland.revizto.com/v5/oauth2",
      "scopes": {
        "DOCUMENT_READ DOCUMENT_WRITE": "DOCUMENT_READ DOCUMENT_WRITE"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "DOCUMENT_READ DOCUMENT_WRITE"
      ]
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://revizto.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://revizto.com/en/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Content and Files"
    }
  ]
}
