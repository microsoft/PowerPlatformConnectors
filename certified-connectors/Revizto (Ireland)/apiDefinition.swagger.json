{
  "basePath": "/",
  "definitions": {
    "FilterAllIssuesRequest": {
      "properties": {
        "alwaysFiltersDTO": {
          "default": [],
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "anyFiltersDTO": {
          "default": [],
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "customFields": {
          "default": [],
          "example": [
            "tags",
            "type",
            "clash_space"
          ],
          "items": {
            "enum": [
              "type",
              "tags",
              "watchers",
              "public",
              "sheet",
              "clash_test",
              "clash_area",
              "clash_room",
              "clash_space",
              "clash_zone",
              "clash_discipline",
              "clash_distance",
              "clash_distance_m",
              "clash_distance_mm",
              "clash_category",
              "clash_level",
              "clash_grid_x",
              "clash_grid_y",
              "clash_source_file",
              "clashGrid"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "dotTimestamp": {
          "default": null,
          "type": "integer",
          "x-nullable": true
        },
        "graphUuid": {
          "default": null,
          "type": "string",
          "x-nullable": true
        },
        "groupBy": {
          "default": null,
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "issueIds": {
          "default": null,
          "description": "Issue ids",
          "example": [
            1,
            2,
            3
          ],
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "lineUuid": {
          "default": null,
          "type": "string",
          "x-nullable": true
        },
        "reportSort": {
          "default": [],
          "items": {
            "$ref": "#/definitions/ReportableSort"
          },
          "type": "array"
        },
        "statuses": {
          "default": null,
          "example": [
            [
              "none",
              "open"
            ]
          ],
          "items": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "array"
        },
        "synchronized": {
          "default": null,
          "description": "<p>\n    To retrieve only the issues that were created or updated after a specific time, specify the time here.\n</p>\n<p>\n    You might want to use this parameter if you have previously retrieved the project issues,\n    in order to save time by getting the updates only.\n</p>\n<p>Use the following format: YYYY-MM-DD HH:MM:SS.</p>\n<p>Example:</p>\n<pre>2018-05-30 23:24:57</pre>\n<p>If the time is not specified, it is set to:</p>\n<pre>2000-01-01 00:00:00</pre>",
          "example": "2018-05-30 23:24:57",
          "format": "date-time",
          "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
          "type": "string"
        }
      },
      "title": "FilterAllIssuesRequest",
      "type": "object"
    },
    "FilterIssuesRequest": {
      "properties": {
        "additionalFields": {
          "default": [],
          "items": {
            "enum": [
              "appendClashAndLocationFields",
              "appendIssueCoordinates"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "alwaysFiltersDTO": {
          "default": [],
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "anyFiltersDTO": {
          "default": [],
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "customFields": {
          "example": [
            "tags",
            "type",
            "clash_space"
          ],
          "items": {
            "enum": [
              "type",
              "tags",
              "watchers",
              "public",
              "sheet",
              "clash_test",
              "clash_area",
              "clash_room",
              "clash_space",
              "clash_zone",
              "clash_discipline",
              "clash_distance",
              "clash_distance_m",
              "clash_distance_mm",
              "clash_category",
              "clash_level",
              "clash_grid_x",
              "clash_grid_y",
              "clash_source_file",
              "clashGrid"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "dotTimestamp": {
          "default": null,
          "type": "integer",
          "x-nullable": true
        },
        "graphUuid": {
          "default": null,
          "type": "string",
          "x-nullable": true
        },
        "groupBy": {
          "default": null,
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "limit": {
          "default": 100,
          "maximum": 100,
          "minimum": 1,
          "type": "integer"
        },
        "lineUuid": {
          "default": null,
          "type": "string",
          "x-nullable": true
        },
        "page": {
          "default": 0,
          "minimum": 0,
          "type": "integer"
        },
        "reportSort": {
          "default": [],
          "items": {
            "$ref": "#/definitions/ReportableSort"
          },
          "type": "array"
        },
        "sendFullIssueData": {
          "default": false,
          "type": "boolean"
        },
        "statuses": {
          "default": null,
          "example": [
            [
              "none",
              "open"
            ]
          ],
          "items": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "array"
        },
        "synchronized": {
          "default": null,
          "description": "<p>\n    To retrieve only the issues that were created or updated after a specific time, specify the time here.\n</p>\n<p>\n    You might want to use this parameter if you have previously retrieved the project issues,\n    in order to save time by getting the updates only.\n</p>\n<p>Use the following format: YYYY-MM-DD HH:MM:SS.</p>\n<p>Example:</p>\n<pre>2018-05-30 23:24:57</pre>\n<p>If the time is not specified, it is set to:</p>\n<pre>2000-01-01 00:00:00</pre>",
          "example": "2018-05-30 23:24:57",
          "format": "date-time",
          "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
          "type": "string"
        }
      },
      "title": "FilterIssuesRequest",
      "type": "object"
    },
    "LicenseItem": {
      "additionalProperties": true,
      "properties": {
        "authMethod": {
          "type": "object"
        },
        "created": {
          "description": "The license creation date in the following format: YYYY-MM-DD HH:MM:SS.",
          "example": "2018-05-30 23:24:57",
          "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
          "type": "string"
        },
        "disallowCloud": {
          "description": "<p>Shows whether the license allows creation of cloud projects.</p>\n<table>\n    <tr>\n        <td>false</td>\n        <td>The license allows creation of cloud projects.</td>\n    </tr>\n    <tr>\n        <td>true</td>\n        <td>The license does not allow creation of cloud projects.</td>\n    </tr>\n</table>",
          "type": "boolean"
        },
        "disallowShared": {
          "description": "<p>Shows whether the license allows creation of shared location projects.</p>\n<table>\n    <tr>\n        <td>false</td>\n        <td>The license allows creation of shared location projects.</td>\n    </tr>\n    <tr>\n        <td>true</td>\n        <td>The license does not allow creation of shared location projects.</td>\n    </tr>\n</table>",
          "type": "boolean"
        },
        "expires": {
          "description": "<p>The license expiration date in the following format: YYYY-MM-DD.</p>",
          "example": "2018-05-30",
          "format": "date",
          "type": "string"
        },
        "frozen": {
          "description": "<p>Shows whether the license is active or suspended.</p>\n<table>\n    <tr>\n        <td>false</td>\n        <td>The license is active.</td>\n    </tr>\n    <tr>\n        <td>true</td>\n        <td>The license is suspended.</td>\n    </tr>\n</table>",
          "example": false,
          "type": "boolean"
        },
        "frozenReason": {
          "description": "<p>The reason of the current license suspension.</p>\n<table>\n    <tr>\n        <td>0</td>\n        <td>The license is not suspended.</td>\n    </tr>\n    <tr>\n        <td>-51</td>\n        <td>The license has expired.</td>\n    </tr>\n    <tr>\n        <td>-53</td>\n        <td>The number of license members exceeds the number of user slots.                </td>\n    </tr>\n    <tr>\n        <td>-54</td>\n        <td>The number of projects exceeds the number of project slots.</td>\n    </tr>\n    <tr>\n        <td>-56</td>\n        <td>The license is suspended.</td>\n    </tr>\n</table>",
          "example": 0,
          "type": "integer"
        },
        "frozenReasons": {
          "description": "<p>All reasons of the license suspension that had effect in the past, including the reason of the cirrent suspension.</p>\n<table>\n    <tr>\n        <td>-51</td>\n        <td>The license has expired.</td>\n    </tr>\n    <tr>\n        <td>-53</td>\n        <td>The number of license members exceeds the number of user slots.                </td>\n    </tr>\n    <tr>\n        <td>-54</td>\n        <td>The number of projects exceeds the number of project slots.</td>\n    </tr>\n    <tr>\n        <td>-56</td>\n        <td>The license is suspended.</td>\n    </tr>\n</table>",
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "id": {
          "description": "The license ID.",
          "example": 12345,
          "type": "integer"
        },
        "isValidAuth": {
          "description": "<p>Shows whether the current user is signed in to this license.</p>\n<table>\n    <tr>\n        <td>false</td>\n        <td><p>The current user cannot sign in to the license due to one\n            of the following reasons:</p>\n            <ul>\n                <li>The license requires SSO authentication but the user is authenticated with the email\n                address and password that they created during the registration at Revizto Workspace.\n                </li>\n                <li>The license requires 2-factor authentication, but the user hasn't set it up.</li>\n                <li>The user is not assigned an authentication method in this license.</li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <td>true</td>\n        <td>???</td>\n    </tr>\n</table>",
          "example": true,
          "type": "boolean"
        },
        "licenseClass": {
          "description": "<p>The subscription plan.</p>\n<table>\n    <tr>\n        <td>0</td>\n        <td>Standard.</td>\n    </tr>\n    <tr>\n        <td>1</td>\n        <td>Revizto+</td>\n    </tr>\n</table>",
          "enum": [
            0,
            1
          ],
          "example": 0,
          "type": "integer"
        },
        "licenseOptions": {
          "$ref": "#/definitions/LicenseOptionsItem"
        },
        "logo": {
          "description": "The URL of the company logo stored in the license.",
          "example": "https://example.com/image.jpeg",
          "format": "uri",
          "type": "string",
          "x-nullable": true
        },
        "memberCompanies": {
          "description": "The list of license members' companies.",
          "example": [
            "Company1",
            "Company 2"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "memberDepartments": {
          "description": "The list of license members' departments.",
          "example": [
            "Department1",
            "Department 2"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "memberLocations": {
          "description": "The list of license members' office locations.",
          "example": [
            "Location1",
            "Location 2"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "memberMetaTags": {
          "description": "The user tags available in the license.",
          "example": [
            "user-tag-1",
            "user-tag-2"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "The license name.",
          "example": "My license",
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/LicenseOwnerItem"
        },
        "plan": {
          "description": "<p>A JSON object that describes the license capacity.</p>\n<p>While it returns correct data, it is currently deprecated\n    and replaced with the \"slots\" field. It will be removed in future Revizto versions.</p>",
          "properties": {
            "projects": {
              "description": "This field is deprecated.",
              "example": 100241,
              "x-deprecated": true
            },
            "users": {
              "description": "This field is deprecated.",
              "example": 100241,
              "x-deprecated": true
            }
          },
          "type": "object",
          "x-deprecated": true
        },
        "projectMetaTags": {
          "description": "The project tags available in the license.",
          "example": [
            "project-tag-1",
            "project-tag-2"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "region": {
          "description": "The license region.",
          "example": "eu-central-1",
          "type": "string"
        },
        "role": {
          "description": "<p>The current user's role in the license.</p>\n<table>\n    <tr>\n        <td>1</td>\n        <td>Guest</td>\n    </tr>\n    <tr>\n        <td>2</td>\n        <td>Collaborator</td>\n    </tr>\n    <tr>\n        <td>3</td>\n        <td>Content creator</td>\n    </tr>\n    <tr>\n        <td>4</td>\n        <td>License administrator</td>\n    </tr>\n    <tr>\n        <td>5</td>\n        <td>Super administrator</td>\n    </tr>\n</table>",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "example": 5,
          "type": "integer"
        },
        "sendEmail": {
          "description": "<p>The ???</p>\n<table>\n    <tr>\n        <td>0</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>1</td>\n        <td></td>\n    </tr>\n</table>",
          "enum": [
            0,
            1
          ],
          "example": 1,
          "type": "integer"
        },
        "slots": {
          "description": "A JSON object that describes the license capacity.",
          "properties": {
            "projects": {
              "description": "<p>The number of project slots in the license.</p>\n<p>If this field contains the number 100241, the number of slots is unlimited.</p>",
              "example": 99686
            },
            "users": {
              "description": "<p>The number of user slots in the license.</p>\n<p>If this field contains the number 100241, the number of slots is unlimited.</p>",
              "example": 99793
            }
          },
          "type": "object"
        },
        "type": {
          "description": "This field is for internal use.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "example": 0,
          "type": "integer"
        },
        "uuid": {
          "description": "The license UUID.",
          "example": "f143fb14-a16b-4d3a-af51-3d0aa77f8ba6",
          "format": "uuid",
          "type": "string"
        },
        "visibleCompany": {
          "description": "<p>Shows whether the \"Company\" field is enabled in the license.</p>\n<table>\n    <tr>\n        <td>0</td>\n        <td>The field is unavailable.</td>\n    </tr>\n    <tr>\n        <td>1</td>\n        <td>The field is available.</td>\n    </tr>\n</table>",
          "enum": [
            1,
            0
          ],
          "example": 0,
          "type": "integer"
        },
        "visibleDepartment": {
          "description": "<p>Shows whether the \"Department\" field is enabled in the license.</p>\n<table>\n    <tr>\n        <td>0</td>\n        <td>The field is unavailable.</td>\n    </tr>\n    <tr>\n        <td>1</td>\n        <td>The field is available.</td>\n    </tr>\n</table>",
          "example": 1,
          "type": "integer"
        },
        "visibleLocation": {
          "description": "<p>Shows whether the \"Office location\" field is enabled in the license.</p>\n<table>\n    <tr>\n        <td>0</td>\n        <td>The field is unavailable.</td>\n    </tr>\n    <tr>\n        <td>1</td>\n        <td>The field is available.</td>\n    </tr>\n</table>",
          "example": 0,
          "type": "integer"
        }
      },
      "required": [
        "id",
        "uuid",
        "name",
        "expires",
        "type",
        "licenseClass",
        "licenseOptions",
        "region",
        "sendEmail",
        "disallowCloud",
        "disallowShared",
        "owner",
        "plan",
        "logo",
        "created",
        "visibleCompany",
        "visibleDepartment",
        "visibleLocation",
        "role",
        "isValidAuth",
        "frozen",
        "frozenReason"
      ],
      "title": "License object",
      "type": "object"
    },
    "LicenseOptionsItem": {
      "additionalProperties": false,
      "properties": {
        "allowApiAccess": {
          "description": "<p>Shows whether the license allows its members to access the API.</p>\n<table>\n    <tr>\n        <td>true</td>\n        <td>The license allows access to the API.</td>\n    </tr>\n    <tr>\n        <td>false</td>\n        <td>The license does not allow access to the API.</td>\n    </tr>\n</table>",
          "example": true,
          "type": "boolean"
        },
        "allowBCFExport": {
          "description": "<p>Shows whether the license allows exporting issues to BCF files.</p>\n<table>\n    <tr>\n        <td>true</td>\n        <td>The license allows exporting issues to BCF files.</td>\n    </tr>\n    <tr>\n        <td>false</td>\n        <td>The license does not allow exporting issues to BCF files.</td>\n    </tr>\n</table>",
          "example": true,
          "type": "boolean"
        },
        "allowBeExternalGuest": {
          "description": "<p>\n    Shows whether the license allows its members\n    to be guests in other licenses issued in this region.\n</p>\n<table>\n    <tr>\n        <td>true</td>\n        <td><p>The license members can be guests in other licenses.</p>\n            <p>\n                If <i>domainsForAllowBeExternalGuest</i> contains any email domains,\n                only license members from these\n                domains can be guests in other licences.\n            </p>\n        </td>\n    </tr>\n    <tr>\n        <td>false</td>\n        <td>The license members cannot be guests in other licenses.</td>\n    </tr>\n</table>",
          "example": true,
          "type": "boolean"
        },
        "allowGuestsHere": {
          "description": "allow guests here",
          "example": true,
          "type": "boolean"
        },
        "allowedExtraFieldsManagement": {
          "enum": [
            "listed",
            "any"
          ],
          "type": "string",
          "x-nullable": true
        },
        "clashAutomation": {
          "description": "<p>Shows whether the license allows clash automation.</p>\n<table>\n    <tr>\n        <td>true</td>\n        <td>The license allows clash automation.</td>\n    </tr>\n    <tr>\n        <td>false</td>\n        <td>The license does not allow clash automation.</td>\n    </tr>\n</table>",
          "example": true,
          "type": "boolean"
        },
        "domainsForAllowBeExternalGuest": {
          "description": "<p>\n    A list of email domains. If specified, only license members from these\n    email domains can be guests in other licences.\n</p>\n<p>A domain might or might not include \"@\"; it works either way.</p>",
          "items": {
            "example": "@example.com",
            "type": "string"
          },
          "type": "array"
        },
        "extraFieldsManagers": {
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "type": "array"
        },
        "isSeparatedProcoreStatuses": {
          "description": "<p>Shows whether Procore statuses are separated from Revizto statuses for all projects in the license</p>\n<table>\n    <tr>\n        <td>true</td>\n        <td>Procore statuses are separated from Revizto statuses.</td>\n    </tr>\n    <tr>\n        <td>false</td>\n        <td>Procore controls Revizto statuses.</td>\n    </tr>\n</table>",
          "example": true,
          "type": "boolean"
        },
        "isWorkflowEnabled": {
          "description": "<p>Shows whether the license allows to add, change, and use workflows.</p>\n<table>\n    <tr>\n        <td>true</td>\n        <td>The license allows to change workflows.</td>\n    </tr>\n    <tr>\n        <td>false</td>\n        <td>The license does not allow changing workflows.</td>\n    </tr>\n</table>",
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "clashAutomation",
        "allowBeExternalGuest",
        "domainsForAllowBeExternalGuest",
        "allowBCFExport",
        "allowApiAccess",
        "extraFieldsManagers",
        "allowedExtraFieldsManagement",
        "isWorkflowEnabled",
        "allowGuestsHere",
        "isSeparatedProcoreStatuses"
      ],
      "type": "object"
    },
    "LicenseOwnerItem": {
      "additionalProperties": false,
      "description": "A JSON object that describes the super administrator of the license.",
      "properties": {
        "email": {
          "description": "The super administrator's email address.",
          "example": "jdoe@example.com",
          "format": "email",
          "maxLength": 255,
          "type": "string"
        },
        "firstname": {
          "description": "The super administrator's first name.",
          "example": "John",
          "type": "string"
        },
        "id": {
          "description": "The ID of the super administrator.",
          "example": 12345,
          "type": "integer"
        },
        "lastname": {
          "description": "The super administrator's last name.",
          "example": "Doe",
          "type": "string"
        },
        "role": {
          "description": "This field is for internal use.",
          "example": "admin",
          "type": "string"
        },
        "uuid": {
          "description": "The UUID of the super administrator.",
          "example": "eb2fbeb8-e31d-469d-a4b7-e781c8c8c8ae",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uuid",
        "firstname",
        "lastname",
        "email",
        "role"
      ],
      "title": "LicenseOwnerItem",
      "type": "object"
    },
    "PartialIssueItem": {
      "properties": {
        "assignee": {
          "description": "<p>The issue assignee's email address.</p>\n<p>\n    If the issue assignee is not specified during the issue creation,\n    the user that created the issue becomes the assignee.\n</p>",
          "example": "user@example.com",
          "maxLength": 255,
          "type": "string"
        },
        "commented": {
          "description": "<p>The date and time when the issue was last commented, in the following format: YYYY-MM-DD HH:MM:SS.</p>\n<p>Example:</p>\n<pre>2018-05-30 23:24:57</pre>\n<p>If the issue was never commented, it is set to:</p>\n <pre>2001-01-01 00:00:00</pre>",
          "example": "2018-05-30 23:24:57",
          "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
          "type": "string",
          "x-nullable": true
        },
        "created": {
          "example": "2018-05-30 23:24:57",
          "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
          "type": "string",
          "x-nullable": true
        },
        "dbid": {
          "type": "integer"
        },
        "deadline": {
          "example": "2018-05-30 23:24:57",
          "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "The issue ID. It is assigned at the server side.",
          "type": "integer"
        },
        "priority": {
          "default": "none",
          "description": "The issue priority",
          "enum": [
            "blocker",
            "critical",
            "major",
            "minor",
            "trivial",
            "none"
          ],
          "type": "string"
        },
        "reporter": {
          "description": "<p>The issue reporter's email address.</p>\n<p>\n    The issue reporter can be different from the issue author (the user that\n    created the issue):\n</p>\n<ul>\n    <li>A reporter can be changed, while the author cannot be changed.</li>\n    <li>\n        An issue author is granted the rights to view, edit, comment, close, and delete the issue.\n        An issue reporter does not get these rights automatically\n        (you might want to grant them through a project role).\n    </li>\n</ul>",
          "format": "email",
          "maxLength": 255,
          "type": "string"
        },
        "status": {
          "type": "string",
          "x-nullable": true
        },
        "tags": {
          "description": "The issue tags.",
          "example": [
            "tag 1",
            "tag 2"
          ],
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "type": {
          "description": "<p>The issue type.</p>\n<table>\n    <tr>\n        <td>1</td>\n        <td>Regular issue</td>\n    </tr>\n    <tr>\n        <td>3</td>\n        <td>Clash issue</td>\n    </tr>\n</table>",
          "enum": [
            1,
            3
          ],
          "type": "integer",
          "x-nullable": true
        },
        "unread": {
          "type": "integer",
          "x-nullable": true
        },
        "updated": {
          "example": "2018-05-30 23:24:57",
          "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
          "type": "string",
          "x-nullable": true
        },
        "uuid": {
          "description": "A unique issue identifier in UUID 4 format.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "dbid",
        "id",
        "uuid"
      ],
      "title": "PartialIssueItem",
      "type": "object"
    },
    "ProjectMemberItem": {
      "properties": {
        "accessRole": {
          "$ref": "#/definitions/RoleItem"
        },
        "accesslevel": {
          "description": "The ???",
          "type": "integer"
        },
        "activated": {
          "description": "<p>Shows whether the license member completed their registration\n    at Revizto Workspace.</p>\n<table>\n    <tr>\n        <td>false</td>\n        <td>The project member has not completed their registration at Revizto Workspace.</td>\n    </tr>\n    <tr>\n        <td>true</td>\n        <td>\n            The project member completed their registration at Revizto Workspace\n            (followed the link in the invitation email and created a password).\n        </td>\n    </tr>\n</table>",
          "type": "boolean"
        },
        "avatar": {
          "description": "The URL of the project member's profile picture.",
          "type": "string"
        },
        "company": {
          "description": "The license member's company.",
          "type": "string"
        },
        "department": {
          "description": "The license member's department.",
          "type": "string"
        },
        "email": {
          "description": "The project member's email.",
          "format": "email",
          "type": "string"
        },
        "firstname": {
          "description": "The license member's first name.",
          "example": "John",
          "type": "string"
        },
        "frozen": {
          "description": "<p>Shows whether the license member is suspended.</p>\n<table>\n    <tr>\n        <td>true</td>\n        <td>The license member is suspended.</td>\n    </tr>\n    <tr>\n        <td>false</td>\n        <td>The license member is not suspended.</td>\n    </tr>\n</table>",
          "type": "boolean"
        },
        "fullname": {
          "description": "The full name of the license member (first name + space + last name).",
          "example": "John Doe",
          "type": "string"
        },
        "id": {
          "description": "The license member ID.",
          "example": 12345,
          "type": "integer"
        },
        "invited": {
          "description": "The ???",
          "type": "boolean"
        },
        "language": {
          "description": "<p>The project owner's Revizto Workspace language.</p>\n<table>\n    <tr>\n        <td>cn</td>\n        <td>Chinese</td>\n    </tr>\n    <tr>\n        <td>de</td>\n        <td>German</td>\n    </tr>\n    <tr>\n        <td>en</td>\n        <td>English</td>\n    </tr>\n    <tr>\n        <td>es</td>\n        <td>Spanish</td>\n    </tr>\n    <tr>\n        <td>fr</td>\n        <td>French</td>\n    </tr>\n    <tr>\n        <td>jp</td>\n        <td>Japanese</td>\n    </tr>\n    <tr>\n        <td>pt</td>\n        <td>Portuguese</td>\n    </tr>\n    <tr>\n        <td>ru</td>\n        <td>Russian</td>\n    </tr>\n</table>",
          "type": "string"
        },
        "lastActive": {
          "description": "<p>The last time when the project member performed any of the following actions\n    in the project:</p>\n<ul>\n    <li>Have the project open in the Revizto application.</li>\n    <li>Create a project or a new project version.</li>\n    <li>Add or remove a project member, or edit their access rights.</li>\n    <li>Edit or comment an issue.</li>\n    <li>Create, edit, or send a report.</li>\n    <li>Create, edit, or send a dashboard or a chart.</li>\n</ul>\n<p>This field has the following format: YYYY-MM-DD HH:MM:SS.</p>\n<p>Example:</p>\n<pre>2018-05-30 23:24:57</pre>",
          "example": "2018-05-30 23:24:57",
          "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
          "type": "string"
        },
        "lastname": {
          "description": "The license member's last name.",
          "example": "Doe",
          "type": "string"
        },
        "location": {
          "description": "The license member's office location.",
          "type": "string"
        },
        "member": {
          "$ref": "#/definitions/ProjectMemberItemMember"
        },
        "member_id": {
          "description": "The ???",
          "type": "integer"
        },
        "role": {
          "description": "The ???",
          "type": "string"
        },
        "status": {
          "description": "<p>The license member status.</p>\n<table>\n    <tr>\n        <td>1</td>\n        <td>Active.</td>\n    </tr>\n    <tr>\n        <td>2</td>\n        <td>This status is deprecated.</td>\n    </tr>\n    <tr>\n        <td>3</td>\n        <td>This status is deprecated.</td>\n    </tr>\n    <tr>\n        <td>4</td>\n        <td>Suspended.</td>\n    </tr>\n    <tr>\n        <td>5</td>\n        <td>Deactivated.</td>\n    </tr>\n    <tr>\n        <td>6</td>\n        <td>Pending (the user hasn't completed their registration in the license).</td>\n    </tr>\n    <tr>\n        <td>7</td>\n        <td>\n            Pending approval (the user was added through a project invitation, which requires\n            a license administrator's approval).\n        </td>\n    </tr>\n</table>",
          "type": "integer"
        },
        "suspendReason": {
          "description": "The ???",
          "type": "integer"
        },
        "uuid": {
          "description": "The license member UUID.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uuid",
        "firstname",
        "lastname",
        "fullname",
        "frozen",
        "lastActive",
        "activated",
        "role",
        "language",
        "avatar",
        "email",
        "invited",
        "accesslevel",
        "accessRole",
        "member_id",
        "member",
        "company",
        "department",
        "location",
        "status",
        "suspendReason"
      ],
      "title": "ProjectMemberItem",
      "type": "object"
    },
    "ProjectMemberItemMember": {
      "description": "A JSON object that describes a project member.",
      "properties": {
        "hasValidAuth": {
          "description": "The ???",
          "type": "boolean"
        },
        "id": {
          "description": "The license member ID.",
          "type": "integer"
        },
        "metaTags": {
          "description": "The ???",
          "example": "[\"tag 1\", \"tag 2\"]",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "permissions": {
          "description": "The ???",
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "role": {
          "description": "<p>The project member's role in the license.</p>\n<table>\n    <tr>\n        <td>1</td>\n        <td>Guest</td>\n    </tr>\n    <tr>\n        <td>2</td>\n        <td>Collaborator</td>\n    </tr>\n    <tr>\n        <td>3</td>\n        <td>Content creator</td>\n    </tr>\n    <tr>\n        <td>4</td>\n        <td>License administrator</td>\n    </tr>\n    <tr>\n        <td>5</td>\n        <td>Super administrator</td>\n    </tr>\n</table>",
          "type": "integer"
        },
        "user": {
          "$ref": "#/definitions/ProjectMemberUser"
        },
        "uuid": {
          "description": "The project member UUID.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uuid",
        "role",
        "hasValidAuth",
        "user"
      ],
      "title": "object",
      "type": "object"
    },
    "ProjectMemberUser": {
      "description": "A JSON object that describes a Revizto account.",
      "properties": {
        "email": {
          "description": "The user's email.",
          "format": "email",
          "type": "string"
        },
        "firstname": {
          "description": "The user's first name.",
          "type": "string"
        },
        "id": {
          "description": "The Revizto account ID.",
          "type": "integer"
        },
        "lastname": {
          "description": "The user's last name.",
          "type": "string"
        },
        "role": {
          "description": "This field is for internal use.",
          "type": "string"
        },
        "uuid": {
          "description": "The Revizto account UUID.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uuid",
        "firstname",
        "lastname",
        "role",
        "email"
      ],
      "title": "object",
      "type": "object"
    },
    "ReportableSort": {
      "properties": {
        "direction": {
          "description": "The sorting direction",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string",
          "x-nullable": true
        },
        "field": {
          "enum": [
            "assignee",
            "clash_area",
            "clashcount",
            "clash_level",
            "clash_room",
            "clash_source_file",
            "clash_space",
            "clash_test",
            "clash_zone",
            "commented",
            "created",
            "customStatus",
            "customType",
            "deadline",
            "id",
            "priority",
            "project",
            "reporter",
            "sheet",
            "stamp",
            "stamp_color",
            "status",
            "tags",
            "type",
            "unread",
            "updated",
            "public"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "ReportableSort",
      "type": "object"
    },
    "RoleItem": {
      "description": "The project member's project role.",
      "properties": {
        "id": {
          "description": "The project role ID.",
          "example": 12345,
          "type": "integer"
        },
        "name": {
          "description": "The project role name.",
          "example": "Admin",
          "type": "string"
        },
        "system": {
          "example": 1,
          "type": "integer"
        },
        "uuid": {
          "description": "The project role UUID.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uuid",
        "name",
        "system"
      ],
      "title": "object",
      "type": "object"
    }
  },
  "host": "api.ireland.revizto.com",
  "info": {
    "description": "Facilitates seamless integration with the Revizto (Ireland), empowering users for informed decision-making.",
    "title": "Revizto",
    "version": "1.0.0"
  },
  "paths": {
    "/v5/project/list/paged": {
      "get": {
        "operationId": "Get__v5_project_paged_list",
        "parameters": [
          {
            "description": "The field by which to sort the projects: "published", "updated", "created", "size", or "name".",
            "x-ms-summary": "The field by which to sort the projects: "published", "updated", "created", "size", or "name".",
            "in": "query",
            "name": "sorting",
            "required": false,
            "type": "string"
          },
          {
            "description": "Set this parameter to \"true\" to include  project thumbnails in the response.",
            "x-ms-summary": "Set this parameter to \"true\" to include  project thumbnails in the response.",
            "in": "query",
            "name": "screenshots",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Set this parameter to \"true\" to include avatars of project owners in the response.",
            "x-ms-summary": "Set this parameter to \"true\" to include avatars of project owners in the response.",
            "in": "query",
            "name": "avatars",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Set this parameter to \"true\" to include project notification types in the response (1 - global notifications, 2 - custom notifications). ",
            "x-ms-summary": "Set this parameter to \"true\" to include project notification types in the response (1 - global notifications, 2 - custom notifications). ",
            "in": "query",
            "name": "notifications",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Current page",
            "x-ms-summary": "Current page",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "You are authorized, and the server returned a response. See the \"result\" field for details.",
            "schema": {
              "properties": {
                "data": {
                  "default": null,
                  "description": "A JSON object with detailed response data.",
                  "type": "object",
                  "x-nullable": true
                },
                "message": {
                  "default": "Success.",
                  "title": "",
                  "type": "string"
                },
                "result": {
                  "default": 0
                }
              },
              "required": [
                "result",
                "data",
                "message"
              ],
              "type": "object"
            }
          }
        },
        "summary": "Project list",
        "tags": [
          "Projects"
        ],
        "description": "Gets a paginated project list",
        "x-ms-summary": "Gets a paginated project list"
      }
    },
    "/v5/project/{projectUuid}/comments": {
      "get": {
        "operationId": "Get__v5_project_comments_project_comment_list",
        "parameters": [
          {
            "description": "The project UUID. You can get it with \"Get license projects\".",
            "format": "uuid",
            "in": "path",
            "required": true,
            "name": "projectUuid",
            "type": "string"
          },
          {
            "default": 1,
            "exclusiveMinimum": true,
            "in": "query",
            "minimum": 0,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 15,
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "You are authorized, and the server returned a response. See the \"result\" field for details.",
            "schema": {
              "properties": {
                "data": {
                  "x-nullable": true
                },
                "message": {
                  "default": "Success.",
                  "title": "",
                  "type": "string"
                },
                "result": {
                  "default": 0
                }
              },
              "required": [
                "result",
                "data",
                "message"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Project Issue Comments"
        ],
        "summary": "Project comments",
        "description": "Return all project comments",
        "x-ms-summary": "Return all project comments"
      }
    },
    "/v5/project/{projectUuid}/issue-filter/filter": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "<p>\n    Gets a list of project issues. You can apply a filter by multiple issue fields, and also specify how to sort\n    the resulting list of issues.\n</p>\n<p><b>Note.</b> Project administrators have access to deleted issues. However,\n    even if you call this method as a user with project administrator rights, it will not get deleted issues.\n    Use <a href=\"branches/main/53a1ad80bbc20\">Get deleted issues</a> instead.\n</p>",
        "operationId": "Post__v5_issue_filter_filter_issues",
        "parameters": [
          {
            "description": "The project UUID. You can get it with \"Get license projects\".",
            "x-ms-summary": "The project UUID. You can get it with \"Get license projects\".",
            "format": "uuid",
            "in": "path",
            "name": "projectUuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FilterIssuesRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "You are authorized, and the server returned a response. See the \"result\" field for details.",
            "schema": {
              "properties": {
                "data": {
                  "x-nullable": true
                },
                "message": {
                  "default": "Success.",
                  "title": "",
                  "type": "string"
                },
                "result": {
                  "default": 0
                }
              },
              "required": [
                "result",
                "data",
                "message"
              ],
              "type": "object"
            }
          }
        },
        "summary": "Get issues",
        "tags": [
          "Issues"
        ],
        "x-ms-summary": "Gets a list of project issues"
      }
    },
    "/v5/project/{projectUuid}/issue-filter/filter_all": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "Post__v5_issue_filter_filter_all_issues",
        "parameters": [
          {
            "description": "The project UUID. You can get it with \"Get license projects\".",
            "format": "uuid",
            "in": "path",
            "name": "projectUuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FilterAllIssuesRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "You are authorized, and the server returned a response. See the \"result\" field for details.",
            "schema": {
              "properties": {
                "data": {
                  "description": "A JSON object with detailed response data.",
                  "properties": {
                    "count": {
                      "example": 1,
                      "type": "integer"
                    },
                    "entities": {
                      "items": {
                        "$ref": "#/definitions/PartialIssueItem"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "entities",
                    "count"
                  ],
                  "type": "object",
                  "x-nullable": true
                },
                "message": {
                  "default": "Success.",
                  "title": "",
                  "type": "string"
                },
                "result": {
                  "default": 0
                }
              },
              "required": [
                "result",
                "data",
                "message"
              ],
              "type": "object"
            }
          }
        },
        "summary": "List of all issues in the project",
        "tags": [
          "Issues"
        ],
        "description": "Gets a list of all project issues",
         "x-ms-summary": "Gets a list of all project issues"
      }
    },
    "/v5/project/{projectUuid}/team": {
      "get": {
        "description": "Gets the list of project members.",
        "x-ms-summary": "Gets the list of project members.",
        "parameters": [
          {
            "description": "The project UUID. You can get it with \"Get license projects\".",
            "x-ms-summary": "The project UUID. You can get it with \"Get license projects\".",
            "format": "uuid",
            "in": "path",
            "name": "projectUuid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "You are authorized, and the server returned a response. See the \"result\" field for details.",
            "schema": {
              "properties": {
                "data": {
                  "description": "A JSON object with detailed response data.",
                  "properties": {
                    "count": {
                      "example": 1,
                      "type": "integer"
                    },
                    "entities": {
                      "items": {
                        "$ref": "#/definitions/ProjectMemberItem"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "entities",
                    "count"
                  ],
                  "type": "object",
                  "x-nullable": true
                },
                "message": {
                  "default": "Success.",
                  "title": "",
                  "type": "string"
                },
                "result": {
                  "default": 0
                }
              },
              "required": [
                "result",
                "data",
                "message"
              ],
              "type": "object"
            }
          }
        },
        "summary": "Get project members",
        "tags": [
          "Projects"
        ],
        "x-ms-summary": "Get a list of all project members",
        "operationId": "Post__v5_get_project_members"
      }
    },
    "/v5/user/licenses": {
      "get": {
        "description": "Gets the licenses available to the current user.",
        "operationId": "Get__v5_user_get_licenses",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "You are authorized, and the server returned a response. See the \"result\" field for details.",
            "schema": {
              "properties": {
                "data": {
                  "description": "A JSON object with detailed response data.",
                  "properties": {
                    "count": {
                      "example": 1,
                      "type": "integer"
                    },
                    "entities": {
                      "description": "A JSON array that describes one or several licenses.",
                      "items": {
                        "$ref": "#/definitions/LicenseItem"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "entities",
                    "count"
                  ],
                  "type": "object",
                  "x-nullable": true
                },
                "message": {
                  "default": "Success.",
                  "title": "",
                  "type": "string"
                },
                "result": {
                  "default": 0
                }
              },
              "required": [
                "result",
                "data",
                "message"
              ],
              "type": "object"
            }
          }
        },
        "summary": "Get current user's licenses",
        "tags": [
          "Licenses"
        ],
        "x-ms-summary": "Get a list of all avaliable current user's lincenses",
      }
    }
  },
  "schemes": [
    "https"
  ],
  "security": [
    {
      "apiKey-auth": []
    }
  ],
  "securityDefinitions": {
    "apiKey-auth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://revizto.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://revizto.com/en/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;BIM"
    }
  ],
  "swagger": "2.0",
  "x-components": {}
}
