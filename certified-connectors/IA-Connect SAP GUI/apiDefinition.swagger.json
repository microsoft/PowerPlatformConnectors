{
  "swagger": "2.0",
  "info": {
    "title": "IA-Connect SAP GUI",
    "description": "IA-Connect is a Robotic Process Automation (RPA) platform which adds RPA functionality from the Cloud to on-premises virtual machines or over Citrix or Microsoft Remote Desktop (RDS) connections. This is the module for automating the SAP GUI application.",
    "version": "9.0",
    "contact": {
      "name": "Ultima Labs",
      "url": "https://www.ultima.com/ultima-labs",
      "email": "IAConnect@ultima.com"
    }
  },
  "host": "DefinedInConnectionParameters",
  "basePath": "/IAConnectRESTClient",
  "schemes": [
    "https"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.ultima.com/ultima-labs"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.ultima.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "IT Operations;Productivity"
    }
  ],
  "paths": {
    "/SAPGUI/SAPEnableScripting": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Enable SAP scripting",
        "description": "Enables SAP scripting in the SAP GUI. This setting must also be enabled on the SAP server by setting the 'sapgui/user_scripting' parameter value to TRUE.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPEnableScripting",
            "description": "Inputs for IA-Connect SAPEnableScripting action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "NotifyWhenScriptAttachesToGUI": {
                  "type": "boolean",
                  "default": false,
                  "title": "Notify when script attaches to GUI",
                  "description": "Should SAPGUI notify the user when a script attaches to the GUI? This presents a popup box and therefore should be disabled for automation.",
                  "x-ms-visibility": "advanced"
                },
                "NotifyWhenScriptOpensConnection": {
                  "type": "boolean",
                  "default": false,
                  "title": "Notify when script opens connection",
                  "description": "Should SAPGUI notify the user when a script attaches to the GUI? This presents a popup box and therefore should be disabled for automation.",
                  "x-ms-visibility": "advanced"
                },
                "ShowNativeWindowsDialogs": {
                  "type": "boolean",
                  "default": false,
                  "title": "Show native windows dialogs",
                  "description": "Should native Windows dialogs be displayed (e.g. Save As, Open) rather than the replacement SAP dialogs?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPEnableScripting"
      }
    },
    "/SAPGUI/SAPLaunchSAPGUI": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Launch SAPGUI",
        "description": "Enables SAP scripting and launches SAP GUI. This is the first step towards automating SAP GUI if it was not already running.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPLaunchSAPGUI",
            "description": "Inputs for IA-Connect SAPLaunchSAPGUI action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SAPLogonEXE": {
                  "type": "string",
                  "title": "SAPLogon EXE",
                  "description": "The full path to SAPLogon.exe. If left blank, IA-Connect will attempt to detect it automatically."
                },
                "SAPLogonArguments": {
                  "type": "string",
                  "title": "SAPLogon arguments",
                  "description": "Provide any optional command-line arguments for SAPLogon.exe here, if required.",
                  "x-ms-visibility": "advanced"
                },
                "EnableSAPScripting": {
                  "type": "boolean",
                  "default": true,
                  "title": "Enable SAP scripting",
                  "description": "Should SAP scripting be enabled? If set to true (the default), SAP scripting will be enabled. If set to false, the current SAP scripting setting will be used.",
                  "x-ms-visibility": "advanced"
                },
                "NotifyWhenScriptAttachesToGUI": {
                  "type": "boolean",
                  "default": false,
                  "title": "Notify when script attaches to GUI",
                  "description": "Should SAPGUI notify the user when a script attaches to the GUI? This presents a popup box and therefore should be disabled for automation.",
                  "x-ms-visibility": "advanced"
                },
                "NotifyWhenScriptOpensConnection": {
                  "type": "boolean",
                  "default": false,
                  "title": "Notify when script opens connection",
                  "description": "Should SAPGUI notify the user when a script attaches to the GUI? This presents a popup box and therefore should be disabled for automation.",
                  "x-ms-visibility": "advanced"
                },
                "ShowNativeWindowsDialogs": {
                  "type": "boolean",
                  "default": false,
                  "title": "Show native windows dialogs",
                  "description": "Should native Windows dialogs be displayed (e.g. Save As, Open) rather than the replacement SAP dialogs?",
                  "x-ms-visibility": "advanced"
                },
                "AttachAfterLaunch": {
                  "type": "boolean",
                  "default": true,
                  "title": "Attach after launch",
                  "description": "Should IA-Connect attempt to attach to SAPGUI automatically? By default, this is set to true.",
                  "x-ms-visibility": "advanced"
                },
                "SecondsToWait": {
                  "type": "number",
                  "format": "double",
                  "default": 15,
                  "title": "Seconds to wait",
                  "description": "The number of seconds that IA-Connect will wait for SAPGUI to launch before attempting to attach to it."
                },
                "SAPProgId": {
                  "type": "string",
                  "default": "SAPGUI",
                  "title": "SAPGUI prog Id",
                  "description": "The SAP program ID. This defaults to 'SAPGUI' and should only be changed if advised by your SAP administrator.",
                  "x-ms-visibility": "advanced"
                },
                "DisableSystemMessages": {
                  "type": "boolean",
                  "default": true,
                  "title": "Disable system messages",
                  "description": "Should system messages be disabled? These are typically sent by the SAP administrator and create additional popup dialogs so therefore should be disabled for automation."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPGUIMajorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAPGUI major version",
                  "description": "The SAPGUI major version, for example 7400."
                },
                "SAPGUIRevision": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAPGUI revision",
                  "description": "The SAPGUI revision, for example 3."
                },
                "SAPGUIPatchLevel": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAPGUI patch level",
                  "description": "The SAPGUI patch level, for example 11."
                },
                "SAPGUIMinorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAPGUI minor version",
                  "description": "The SAPGUI minor version, for example 257."
                },
                "SAPGUINewVisualDesign": {
                  "type": "boolean",
                  "title": "SAPGUI using new visual design",
                  "description": "Returns true if SAPGUI is using the new visual design, or false if not."
                }
              }
            }
          }
        },
        "operationId": "SAPLaunchSAPGUI"
      }
    },
    "/SAPGUI/SAPAttachToSAPGUI": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Attach to SAPGUI instance",
        "description": "Attaches to an instance of SAP GUI which is already running. This is the first step towards automating SAP GUI if SAP GUI was already running.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPAttachToSAPGUI",
            "description": "Inputs for IA-Connect SAPAttachToSAPGUI action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SAPProgId": {
                  "type": "string",
                  "default": "SAPGUI",
                  "title": "SAPGUI prog Id",
                  "description": "The SAP program ID. This defaults to 'SAPGUI' and should only be changed if advised by your SAP administrator.",
                  "x-ms-visibility": "advanced"
                },
                "DisableSystemMessages": {
                  "type": "boolean",
                  "default": true,
                  "title": "Disable system messages",
                  "description": "Should system messages be disabled? These are typically sent by the SAP administrator and create additional popup dialogs so therefore should be disabled for automation."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfSAPConnections": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of SAP connections",
                  "description": "Returns the number of SAP connections that are currently open."
                },
                "SAPGUIMajorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAPGUI major version",
                  "description": "The SAPGUI major version, for example 7400."
                },
                "SAPGUIRevision": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAPGUI revision",
                  "description": "The SAPGUI revision, for example 3."
                },
                "SAPGUIPatchLevel": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAPGUI patch level",
                  "description": "The SAPGUI patch level, for example 11."
                },
                "SAPGUIMinorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAPGUI minor version",
                  "description": "The SAPGUI minor version, for example 257."
                },
                "SAPGUINewVisualDesign": {
                  "type": "boolean",
                  "title": "SAPGUI using new visual design",
                  "description": "Returns true if SAPGUI is using the new visual design, or false if not."
                }
              }
            }
          }
        },
        "operationId": "SAPAttachToSAPGUI"
      }
    },
    "/SAPGUI/SAPDetachFromSAPGUI": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Detach from SAPGUI",
        "description": "Detaches IA-Connect from the running instance of SAPGUI.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPDetachFromSAPGUI",
            "description": "Inputs for IA-Connect SAPDetachFromSAPGUI action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPDetachFromSAPGUI"
      }
    },
    "/SAPGUI/SAPGetSAPGUIStatus": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAPGUI attach status",
        "description": "Returns information about the current IA-Connect connection to SAP GUI.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetSAPGUIStatus",
            "description": "Inputs for IA-Connect SAPGetSAPGUIStatus action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "Connected": {
                  "type": "boolean",
                  "title": "Connected to SAPGUI",
                  "description": "Returns true if IA-Connect is currently connected to SAPGUI."
                },
                "ConnectionError": {
                  "type": "string",
                  "title": "SAPGUI connection error",
                  "description": "Returns any error messages reported by SAPGUI."
                },
                "NumberOfSAPConnections": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of SAP connections",
                  "description": "Returns the number of SAP connections that are currently open."
                },
                "SAPGUIMajorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAPGUI major version",
                  "description": "The SAPGUI major version, for example 7400."
                },
                "SAPGUIRevision": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAPGUI revision",
                  "description": "The SAPGUI revision, for example 3."
                },
                "SAPGUIPatchLevel": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAPGUI patch level",
                  "description": "The SAPGUI patch level, for example 11."
                },
                "SAPGUIMinorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAPGUI minor version",
                  "description": "The SAPGUI minor version, for example 257."
                },
                "SAPGUINewVisualDesign": {
                  "type": "boolean",
                  "title": "SAPGUI using new visual design",
                  "description": "Returns true if SAPGUI is using the new visual design, or false if not."
                },
                "ConnectedToSession": {
                  "type": "boolean",
                  "title": "Connected to session",
                  "description": "Returns true if IA-Connect is currently connected to an SAP session."
                },
                "SessionError": {
                  "type": "string",
                  "title": "Session connection error",
                  "description": "Returns any error messages reported by the SAP session."
                },
                "SessionName": {
                  "type": "string",
                  "title": "Session name",
                  "description": "The name of the session IA-Connect is connected to."
                },
                "SessionSystemName": {
                  "type": "string",
                  "title": "Session system name",
                  "description": "The name of the system that the currently connected session is connected to, for example NPL."
                }
              }
            }
          }
        },
        "operationId": "SAPGetSAPGUIStatus"
      }
    },
    "/SAPGUI/SAPGetSAPSessions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP sessions",
        "description": "Returns a list of running SAP sessions. This information is useful if you wish to attach to an existing SAP connection / session but you don't know which ones are available.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetSAPSessions",
            "description": "Inputs for IA-Connect SAPGetSAPSessions action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfSAPConnections": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of SAP connections",
                  "description": "Returns the number of SAP connections that are currently open."
                },
                "SAPConnectionsJSON": {
                  "type": "string",
                  "title": "SAP connections JSON",
                  "description": "The properties of the open SAP connections, in JSON format. This list will contain properties such as the connection name, the connection description and the number of sessions that are currently open in the connection."
                },
                "NumberOfSAPSessions": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of SAP sessions",
                  "description": "Returns the number of SAP sessions that are currently open. It is possible for a single SAP connection to have multiple sessions, for example if the active SAP connection opens a second session."
                },
                "SAPSessionsJSON": {
                  "type": "string",
                  "title": "SAP sessions JSON",
                  "description": "The properties of the open SAP sessions, in JSON format. This list will contain many properties such as the session name, the connection name that owns the session and the name of the user."
                }
              }
            }
          }
        },
        "operationId": "SAPGetSAPSessions"
      }
    },
    "/SAPGUI/SAPAttachToSession": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Attach to SAP session",
        "description": "Attaches IA-Connect to an open SAP session. This action can be used to switch control to any new SAP sessions that are opened within an existing connection.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPAttachToSession",
            "description": "Inputs for IA-Connect SAPAttachToSession action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchConnectionName": {
                  "type": "string",
                  "title": "Search SAP connection name",
                  "description": "The name of the SAP connection to connect to. If you are unsure of the connection name, this can be returned from the action 'Get SAP sessions'."
                },
                "SearchSessionName": {
                  "type": "string",
                  "title": "Search SAP session name",
                  "description": "The name of the SAP session to connect to. If you are unsure of the session name, this can be returned from the action 'Get SAP sessions'."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AttachedConnectionName": {
                  "type": "string",
                  "title": "Attached connection name",
                  "description": "The name of the connection that was attached to."
                },
                "AttachedSessionName": {
                  "type": "string",
                  "title": "Attached session name",
                  "description": "The name of the session that was attached to."
                }
              }
            }
          }
        },
        "operationId": "SAPAttachToSession"
      }
    },
    "/SAPGUI/SAPCloseSession": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Close SAP session",
        "description": "Closes an open SAP session.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPCloseSession",
            "description": "Inputs for IA-Connect SAPCloseSession action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "CloseAttachedSession": {
                  "type": "boolean",
                  "default": true,
                  "title": "Close attached session",
                  "description": "If set to true then the session that IA-Connect is currently attached to will be closed, as opposed to searching for a specific session."
                },
                "SearchConnectionName": {
                  "type": "string",
                  "title": "Search SAP connection name",
                  "description": "The name of the SAP connection containing the session to close to (or leave blank to close a session in the first connection)."
                },
                "SearchSessionName": {
                  "type": "string",
                  "title": "Search SAP session name",
                  "description": "The name of the SAP session to close (or leave blank to close the first session). As sessions are contained within connections, the SAP connection must have been found."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPCloseSession"
      }
    },
    "/SAPGUI/SAPGetAttachedSessionProperties": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get attached session properties",
        "description": "Returns information about the SAP session that IA-Connect is attached to.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetAttachedSessionProperties",
            "description": "Inputs for IA-Connect SAPGetAttachedSessionProperties action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ConnectedToSession": {
                  "type": "boolean",
                  "title": "Connected to session",
                  "description": "Returns true if IA-Connect is currently connected to an SAP session."
                },
                "SessionError": {
                  "type": "string",
                  "title": "Session connection error",
                  "description": "Returns any error messages reported by the SAP session."
                },
                "SessionName": {
                  "type": "string",
                  "title": "Session name",
                  "description": "The name of the session IA-Connect is connected to."
                },
                "SessionSystemName": {
                  "type": "string",
                  "title": "Session system name",
                  "description": "The name of the system that the currently connected session is connected to, for example NPL."
                },
                "Busy": {
                  "type": "boolean",
                  "title": "Session is busy",
                  "description": "Returns true if the SAP session is reporting that it is currently busy."
                },
                "SessionNumber": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Session number",
                  "description": "The SAP session number."
                },
                "LoggedInUser": {
                  "type": "string",
                  "title": "Logged in user",
                  "description": "The username of the logged in user."
                },
                "ScreenNumber": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Screen number",
                  "description": "The SAP screen number."
                },
                "ActiveTransaction": {
                  "type": "string",
                  "title": "Active transaction",
                  "description": "The name of the active transaction if one is currently running."
                }
              }
            }
          }
        },
        "operationId": "SAPGetAttachedSessionProperties"
      }
    },
    "/SAPGUI/SAPWaitForAttachedSessionNotBusy": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Wait for attached SAP session not busy",
        "description": "Waits for the attached SAP session to report that it is no longer busy.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPWaitForAttachedSessionNotBusy",
            "description": "Inputs for IA-Connect SAPWaitForAttachedSessionNotBusy action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SecondsToWait": {
                  "type": "number",
                  "format": "double",
                  "default": 15,
                  "title": "Seconds to wait",
                  "description": "The number of seconds to wait for the attached SAP session to report that it is no longer busy."
                },
                "RaiseExceptionIfBusyAfterWait": {
                  "type": "boolean",
                  "default": false,
                  "title": "Raise exception if busy after wait",
                  "description": "Should IA-Connect raise an exception if the attached SAP session is still reporting that it is busy after the wait period?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SecondsToWait",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "BusyAfterWait": {
                  "type": "boolean",
                  "title": "Session busy after wait",
                  "description": "Returns true if the attached SAP session is still reporting that it is busy after the wait period, or false if not."
                }
              }
            }
          }
        },
        "operationId": "SAPWaitForAttachedSessionNotBusy"
      }
    },
    "/SAPGUI/SAPInputTextIntoSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Input text into SAP element",
        "description": "Inputs text into an SAP element (typically a text entry field), either replacing the existing text or inserting the new value at a specific position.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPInputTextIntoSAPElement",
            "description": "Inputs for IA-Connect SAPInputTextIntoSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "TextToInput": {
                  "type": "string",
                  "title": "Text to input",
                  "description": "The text value to input."
                },
                "ReplaceExistingValue": {
                  "type": "boolean",
                  "default": true,
                  "title": "Replace existing value",
                  "description": "If there is existing text in the element, should this be replaced?",
                  "x-ms-visibility": "advanced"
                },
                "InsertPosition": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Insert position",
                  "description": "The position (index) to begin inserting text. If there is existing text, the insert position can be used to insert at a specific position within the existing text.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "TextToInput",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPInputTextIntoSAPElement"
      }
    },
    "/SAPGUI/SAPInputPasswordIntoSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Input password into SAP element",
        "description": "Inputs a password into an SAP element (typically a password entry field).",
        "parameters": [
          {
            "in": "body",
            "name": "SAPInputPasswordIntoSAPElement",
            "description": "Inputs for IA-Connect SAPInputPasswordIntoSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "PasswordToInput": {
                  "type": "string",
                  "format": "password",
                  "title": "Password to input",
                  "description": "The password value to input."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "PasswordToInput",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPInputPasswordIntoSAPElement"
      }
    },
    "/SAPGUI/SAPGetElementProperties": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP element properties",
        "description": "Returns all properties of an SAP element. This can be useful if you are uncertain which field holds the property values required.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetElementProperties",
            "description": "Inputs for IA-Connect SAPGetElementProperties action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPElementType": {
                  "type": "string",
                  "title": "Element type",
                  "description": "The SAP type of the element, for example 'GuiTextField'."
                },
                "SAPElementTypeCode": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element type code",
                  "description": "The SAP type code, for example 31 for 'GuiTextField'."
                },
                "SAPElementName": {
                  "type": "string",
                  "title": "Element name",
                  "description": "The SAP name of the element."
                },
                "SAPElementId": {
                  "type": "string",
                  "title": "Element Id",
                  "description": "The SAP ID of the element."
                },
                "SAPElementSubType": {
                  "type": "string",
                  "title": "Element sub type",
                  "description": "The SAP sub type of the element. This is dependant on the element type and some elements may not have a sub type."
                },
                "SAPElementTextValue": {
                  "type": "string",
                  "title": "Element text value",
                  "description": "The text value of the SAP element."
                },
                "SAPElementIsContainer": {
                  "type": "boolean",
                  "title": "Element is container",
                  "description": "Returns true if the element is a container (for example a GuiMainWindow or GuiUserArea), or false if not."
                },
                "SAPElementNumberOfChildren": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of children",
                  "description": "The number of child elements, if the element is a container."
                },
                "SAPElementIsChangeable": {
                  "type": "boolean",
                  "title": "Element is changeable",
                  "description": "Returns true if the element is changeable or false if not."
                },
                "SAPElementIsModified": {
                  "type": "boolean",
                  "title": "Element is modified",
                  "description": "Returns true if the element has been modified or false if not."
                },
                "SAPElementIsSelected": {
                  "type": "boolean",
                  "title": "Element is selected",
                  "description": "Returns true if the element is currently selected (e.g. for radio buttons or checkboxes) or false if not."
                },
                "SAPElementIsHighlighted": {
                  "type": "boolean",
                  "title": "Element is highlighted",
                  "description": "Returns true if the element is currently highlighted (e.g. for labels or text boxes) or false if not."
                },
                "SAPElementIsVisible": {
                  "type": "boolean",
                  "title": "Element is visible",
                  "description": "Returns true if the element is currently visible or false if not."
                },
                "SAPElementLeftEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element left edge",
                  "description": "The distance in pixels between the left edge of the element or window and the left edge of the display."
                },
                "SAPElementTopEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element top edge",
                  "description": "The distance in pixels between the top edge of the element or window and the top edge of the display."
                },
                "SAPElementWidth": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element width",
                  "description": "The width of the element in pixels."
                },
                "SAPElementHeight": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element height",
                  "description": "The height of the element in pixels."
                },
                "SAPElementRightEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element right edge",
                  "description": "The distance in pixels between the right edge of the element or window and the right edge of the display."
                },
                "SAPElementBottomEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element bottom edge",
                  "description": "The distance in pixels between the bottom edge of the element or window and the bottom edge of the display."
                }
              }
            }
          }
        },
        "operationId": "SAPGetElementProperties"
      }
    },
    "/SAPGUI/SAPWaitForElementId": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Wait for SAP element",
        "description": "Waits for an SAP element (typically an individual element within a window such as a button or a text input area) to exist.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPWaitForElementId",
            "description": "Inputs for IA-Connect SAPWaitForElementId action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SecondsToWait": {
                  "type": "number",
                  "format": "double",
                  "default": 15,
                  "title": "Seconds to wait",
                  "description": "The number of seconds to wait for the SAP element to exist."
                },
                "RaiseExceptionIfElementNotFound": {
                  "type": "boolean",
                  "default": false,
                  "title": "Raise exception if element not found",
                  "description": "Should IA-Connect raise an exception if the SAP element does not exist after the wait period?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPElementExists": {
                  "type": "boolean",
                  "title": "Element exists",
                  "description": "Returns true if the element exists."
                },
                "SAPElementType": {
                  "type": "string",
                  "title": "Element type",
                  "description": "The SAP type of the element, for example 'GuiTextField'."
                },
                "SAPElementTypeCode": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element type code",
                  "description": "The SAP type code, for example 31 for 'GuiTextField'."
                },
                "SAPElementName": {
                  "type": "string",
                  "title": "Element name",
                  "description": "The SAP name of the element."
                },
                "SAPElementSubType": {
                  "type": "string",
                  "title": "Element sub type",
                  "description": "The SAP sub type of the element. This is dependant on the element type and some elements may not have a sub type."
                }
              }
            }
          }
        },
        "operationId": "SAPWaitForElementId"
      }
    },
    "/SAPGUI/SAPWaitForWindow": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Wait for SAP window",
        "description": "Waits for a SAP window with the specified title.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPWaitForWindow",
            "description": "Inputs for IA-Connect SAPWaitForWindow action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPWindowTitle": {
                  "type": "string",
                  "title": "Search SAP window title",
                  "description": "The title of the SAP window."
                },
                "SearchIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search is regular expression",
                  "description": "If set to true, the search window name is treated as a regular expression. For example, ^S for a window title that starts with S or P$ for a window title that ends with P. If set to false (the default), the search window name is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search is case sensitive",
                  "description": "Should the window title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "SecondsToWait": {
                  "type": "number",
                  "format": "double",
                  "default": 15,
                  "title": "Seconds to wait",
                  "description": "The number of seconds to wait for the SAP window to exist."
                },
                "RaiseExceptionIfElementNotFound": {
                  "type": "boolean",
                  "default": false,
                  "title": "Raise exception if element not found",
                  "description": "Should IA-Connect raise an exception if the SAP window does not exist after the wait period?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPWindowTitle",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPWindowExists": {
                  "type": "boolean",
                  "title": "Window exists",
                  "description": "Returns true if a window with the specified title exists."
                },
                "SAPElementId": {
                  "type": "string",
                  "title": "Element Id",
                  "description": "The SAP ID of the element."
                },
                "SAPElementType": {
                  "type": "string",
                  "title": "Element type",
                  "description": "The SAP type of the element, for example 'GuiMainWindow'."
                },
                "SAPElementTypeCode": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element type code",
                  "description": "The SAP type code, for example 21 for 'GuiMainWindow'."
                },
                "SAPElementName": {
                  "type": "string",
                  "title": "Element name",
                  "description": "The SAP name of the element."
                },
                "SAPElementSubType": {
                  "type": "string",
                  "title": "Element sub type",
                  "description": "The SAP sub type of the element. This is dependant on the element type and some elements may not have a sub type."
                }
              }
            }
          }
        },
        "operationId": "SAPWaitForWindow"
      }
    },
    "/SAPGUI/SAPGetElementTextValue": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP element text value",
        "description": "Returns the text value of an SAP element. A text value is usually associated with a text element, but many elements can have this property.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetElementTextValue",
            "description": "Inputs for IA-Connect SAPGetElementTextValue action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPElementTextValue": {
                  "type": "string",
                  "title": "Element text value",
                  "description": "The text value of the element."
                }
              }
            }
          }
        },
        "operationId": "SAPGetElementTextValue"
      }
    },
    "/SAPGUI/SAPPressSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Press SAP element",
        "description": "Presses an SAP element (typically a button).",
        "parameters": [
          {
            "in": "body",
            "name": "SAPPressSAPElement",
            "description": "Inputs for IA-Connect SAPPressSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPPressSAPElement"
      }
    },
    "/SAPGUI/SAPSelectSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP element",
        "description": "Selects an SAP element (typically a tab element or item in a list or drop-down).",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSelectSAPElement",
            "description": "Inputs for IA-Connect SAPSelectSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSelectSAPElement"
      }
    },
    "/SAPGUI/SAPFocusSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Focus SAP element",
        "description": "Focusses an SAP element which makes it the active element for keyboard focus and brings the SAP window to the foreground.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPFocusSAPElement",
            "description": "Inputs for IA-Connect SAPFocusSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPFocusSAPElement"
      }
    },
    "/SAPGUI/SAPCheckSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Check SAP element",
        "description": "Sets the state of an SAP element (typically a checkbox or radio box) to either checked or unchecked.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPCheckSAPElement",
            "description": "Inputs for IA-Connect SAPCheckSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "CheckElement": {
                  "type": "boolean",
                  "default": true,
                  "title": "Check element",
                  "description": "Should the element be checked (true) or unchecked (false)?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPCheckSAPElement"
      }
    },
    "/SAPGUI/SAPVisualiseSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Visualise SAP element",
        "description": "Tells the SAP GUI to draw a red rectangle around the element. This is a built-in SAP feature and not the same as asking IA-Connect to display a highlighting rectangle. The element will remain visualised until it is interacted with.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPVisualiseSAPElement",
            "description": "Inputs for IA-Connect SAPVisualiseSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "VisualiseOn": {
                  "type": "boolean",
                  "default": true,
                  "title": "Visualise on",
                  "description": "If set to true, the SAP element will be visualised. If set to false, this will clear the visible rectangle if one is already being displayed."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPVisualiseSAPElement"
      }
    },
    "/SAPGUI/SAPDrawRectangleAroundSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Draw rectangle around SAP element",
        "description": "Draws a rectangle around the perimeter of an SAP element to aid in identifying that the element found is the one required. The rectangle is automatically removed after 5 seconds.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPDrawRectangleAroundSAPElement",
            "description": "Inputs for IA-Connect SAPDrawRectangleAroundSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "PenColour": {
                  "type": "string",
                  "default": "#009FDE",
                  "title": "Pen colour",
                  "description": "The colour of the rectangle to be drawn (e.g. red, green, blue, yellow, purple or orange) or a string hex code e.g. #FF0000."
                },
                "PenThicknessPixels": {
                  "type": "integer",
                  "format": "int32",
                  "default": 4,
                  "title": "Pen thickness pixels",
                  "description": "The thickness (in pixels) of the highlight rectangle border."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPDrawRectangleAroundSAPElement"
      }
    },
    "/SAPGUI/SAPSendCommand": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Send SAP command",
        "description": "Inputs and submits a SAP command. This is the same as entering a command or transaction code into the command box.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSendCommand",
            "description": "Inputs for IA-Connect SAPSendCommand action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SAPCommand": {
                  "type": "string",
                  "title": "SAP command",
                  "description": "The full SAP command or transaction code to be sent."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SAPCommand",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSendCommand"
      }
    },
    "/SAPGUI/SAPEnterTCode": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Enter SAP T-code",
        "description": "Enters an SAP transaction code (T-code). This is the same as entering a T-code into the SAP command box.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPEnterTCode",
            "description": "Inputs for IA-Connect SAPEnterTCode action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SAPTCode": {
                  "type": "string",
                  "title": "SAP T-code",
                  "description": "The SAP transaction code (T-code) to be sent, for example 'SLICENSE'."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SAPTCode",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPEnterTCode"
      }
    },
    "/SAPGUI/SAPSendVKey": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Send virtual key",
        "description": "Sends a virtual key to an SAP element. Virtual keys can only be sent to a GUI Frame window, for example 'wnd[0]'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSendVKey",
            "description": "Inputs for IA-Connect SAPSendVKey action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SAPVKey": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Virtual key",
                  "description": "The SAP virtual key to be sent, for example 'V1' to display the Help window."
                },
                "DetectParentWindowElement": {
                  "type": "boolean",
                  "default": true,
                  "title": "Detect parent window element",
                  "description": "If set to true and a SAP ID for an element is provided (for example a text box or button) then the associated SAP window will be automatically detected and the virtual key will be sent to the window. If set to False then the SAP window element Id itself must be specified (for example 'wnd[0]') or an exception will be raised.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "SAPVKey",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSendVKey"
      }
    },
    "/SAPGUI/SAPSendEnterVKey": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Send enter virtual key",
        "description": "Sends the enter virtual key to an SAP element. Virtual keys can only be sent to a GUI Frame window, for example 'wnd[0]'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSendEnterVKey",
            "description": "Inputs for IA-Connect SAPSendEnterVKey action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "DetectParentWindowElement": {
                  "type": "boolean",
                  "default": true,
                  "title": "Detect parent window element",
                  "description": "If set to true and a SAP ID for an element is provided (for example a text box or button) then the associated SAP window will be automatically detected and the virtual key will be sent to the window. If set to False then the SAP window element Id itself must be specified (for example 'wnd[0]') or an exception will be raised.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSendEnterVKey"
      }
    },
    "/SAPGUI/SAPWindowRestore": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Restore SAP window",
        "description": "Restores a SAP window from being maximised or minimised.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPWindowRestore",
            "description": "Inputs for IA-Connect SAPWindowRestore action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "DetectParentWindowElement": {
                  "type": "boolean",
                  "default": true,
                  "title": "Detect parent window element",
                  "description": "If set to true and a SAP ID for an element is provided (for example a text box or button) then the associated SAP window will be automatically detected and the command will be sent to the window. If set to False then the SAP window element Id itself must be specified (for example 'wnd[0]') or an exception will be raised.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPWindowRestore"
      }
    },
    "/SAPGUI/SAPWindowMaximise": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Maximise SAP window",
        "description": "Maximises a SAP window.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPWindowMaximise",
            "description": "Inputs for IA-Connect SAPWindowMaximise action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "DetectParentWindowElement": {
                  "type": "boolean",
                  "default": true,
                  "title": "Detect parent window element",
                  "description": "If set to true and a SAP ID for an element is provided (for example a text box or button) then the associated SAP window will be automatically detected and the command will be sent to the window. If set to False then the SAP window element Id itself must be specified (for example 'wnd[0]') or an exception will be raised.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPWindowMaximise"
      }
    },
    "/SAPGUI/SAPWindowMinimise": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Minimise SAP window",
        "description": "Minimises a SAP window.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPWindowMinimise",
            "description": "Inputs for IA-Connect SAPWindowMinimise action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "DetectParentWindowElement": {
                  "type": "boolean",
                  "default": true,
                  "title": "Detect parent window element",
                  "description": "If set to true and a SAP ID for an element is provided (for example a text box or button) then the associated SAP window will be automatically detected and the command will be sent to the window. If set to False then the SAP window element Id itself must be specified (for example 'wnd[0]') or an exception will be raised.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPWindowMinimise"
      }
    },
    "/SAPGUI/SAPWindowClose": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Close SAP window",
        "description": "Closes an SAP window.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPWindowClose",
            "description": "Inputs for IA-Connect SAPWindowClose action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "DetectParentWindowElement": {
                  "type": "boolean",
                  "default": true,
                  "title": "Detect parent window element",
                  "description": "If set to true and a SAP ID for an element is provided (for example a text box or button) then the associated SAP window will be automatically detected and the command will be sent to the window. If set to False then the SAP window element Id itself must be specified (for example 'wnd[0]') or an exception will be raised.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPWindowClose"
      }
    },
    "/SAPGUI/SAPBringWindowToFront": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Bring SAP window to the front",
        "description": "Brings a SAP window to the front.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPBringWindowToFront",
            "description": "Inputs for IA-Connect SAPBringWindowToFront action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "ToggleWindow": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle window",
                  "description": "Should the window be toggled by attempting to focus or click it? This helps to ensure that the window is reliably brought to the foreground.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleUsesGlobalLeftMouseClickAgent": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle uses global left mouse click agent",
                  "description": "If choosing to toggle the window, this specifies whether to use global mouse clicks to focus the IA-Connect Agent first.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleDelay": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Toggle delay in seconds",
                  "description": "If choosing to toggle the window, this specifies the pause after toggling.",
                  "x-ms-visibility": "advanced"
                },
                "DetectParentWindowElement": {
                  "type": "boolean",
                  "default": true,
                  "title": "Detect parent window element",
                  "description": "If set to true and a SAP ID for an element is provided (for example a text box or button) then the associated SAP window will be automatically detected and the command will be sent to the window. If set to False then the SAP window element Id itself must be specified (for example 'wnd[0]') or an exception will be raised.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPBringWindowToFront"
      }
    },
    "/SAPGUI/SAPGlobalLeftMouseClickOnSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Global left mouse click on SAP element",
        "description": "Moves the mouse to the centre of an SAP element and clicks the left mouse button.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGlobalLeftMouseClickOnSAPElement",
            "description": "Inputs for IA-Connect SAPGlobalLeftMouseClickOnSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SetElementWindowTopMost": {
                  "type": "boolean",
                  "default": false,
                  "title": "Set element window topmost",
                  "description": "Should IA-Connect set the SAP window containing the element topmost (on top of all other windows) before interacting with it? This helps ensure that no other windows are in front but will not work if using published applications (for example with Citrix) because the topmost setting in the remote session does not impact the local session.",
                  "x-ms-visibility": "advanced"
                },
                "BringElementWindowToFront": {
                  "type": "boolean",
                  "default": false,
                  "title": "Bring element window to front",
                  "description": "Should IA-Connect bring the SAP window containing the element to the front before interacting with it? This helps ensure that no other windows are in front.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleWindow": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle window",
                  "description": "Should the window be toggled by attempting to focus or click it? This helps to ensure that the window is reliably brought to the foreground.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleUsesGlobalLeftMouseClickAgent": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle uses global left mouse click agent",
                  "description": "If choosing to toggle the window, this specifies whether to use global mouse clicks to focus the IA-Connect Agent first.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleDelay": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Toggle delay in seconds",
                  "description": "If choosing to toggle the window, this specifies the pause after toggling.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetX": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset X",
                  "description": "The number of X pixels to offset the click action by. This parameter supports both positive (right) and negative (left) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetY": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset Y",
                  "description": "The number of Y pixels to offset the click action by. This parameter supports both positive (down) and negative (up) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "OffsetRelativeTo": {
                  "type": "string",
                  "title": "Offset relative to",
				  "enum": [ "Center", "Left", "Right", "Top", "Bottom", "Top Left", "Top Right", "Bottom Left", "Bottom Right"],
                  "description": "The relative position of the element to offset from (Center / Centre / Middle, Left, Right, Top, Bottom, Top Left, Top Right, Bottom Left, Bottom Right).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPGlobalLeftMouseClickOnSAPElement"
      }
    },
    "/SAPGUI/SAPGlobalRightMouseClickOnSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Global right mouse click on SAP element",
        "description": "Moves the mouse to the centre of an SAP element and clicks the right mouse button.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGlobalRightMouseClickOnSAPElement",
            "description": "Inputs for IA-Connect SAPGlobalRightMouseClickOnSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SetElementWindowTopMost": {
                  "type": "boolean",
                  "default": false,
                  "title": "Set element window topmost",
                  "description": "Should IA-Connect set the SAP window containing the element topmost (on top of all other windows) before interacting with it? This helps ensure that no other windows are in front but will not work if using published applications (for example with Citrix) because the topmost setting in the remote session does not impact the local session.",
                  "x-ms-visibility": "advanced"
                },
                "BringElementWindowToFront": {
                  "type": "boolean",
                  "default": false,
                  "title": "Bring element window to front",
                  "description": "Should IA-Connect bring the SAP window containing the element to the front before interacting with it? This helps ensure that no other windows are in front.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleWindow": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle window",
                  "description": "Should the window be toggled by attempting to focus or click it? This helps to ensure that the window is reliably brought to the foreground.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleUsesGlobalLeftMouseClickAgent": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle uses global left mouse click agent",
                  "description": "If choosing to toggle the window, this specifies whether to use global mouse clicks to focus the IA-Connect Agent first.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleDelay": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Toggle delay in seconds",
                  "description": "If choosing to toggle the window, this specifies the pause after toggling.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetX": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset X",
                  "description": "The number of X pixels to offset the click action by. This parameter supports both positive (right) and negative (left) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetY": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset Y",
                  "description": "The number of Y pixels to offset the click action by. This parameter supports both positive (down) and negative (up) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "OffsetRelativeTo": {
                  "type": "string",
                  "title": "Offset relative to",
				  "enum": [ "Center", "Left", "Right", "Top", "Bottom", "Top Left", "Top Right", "Bottom Left", "Bottom Right"],
                  "description": "The relative position of the element to offset from (Center / Centre / Middle, Left, Right, Top, Bottom, Top Left, Top Right, Bottom Left, Bottom Right).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPGlobalRightMouseClickOnSAPElement"
      }
    },
    "/SAPGUI/SAPGlobalMiddleMouseClickOnSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Global middle mouse click on SAP element",
        "description": "Moves the mouse to the centre of an SAP element and clicks the middle mouse button.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGlobalMiddleMouseClickOnSAPElement",
            "description": "Inputs for IA-Connect SAPGlobalMiddleMouseClickOnSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SetElementWindowTopMost": {
                  "type": "boolean",
                  "default": false,
                  "title": "Set element window topmost",
                  "description": "Should IA-Connect set the SAP window containing the element topmost (on top of all other windows) before interacting with it? This helps ensure that no other windows are in front but will not work if using published applications (for example with Citrix) because the topmost setting in the remote session does not impact the local session.",
                  "x-ms-visibility": "advanced"
                },
                "BringElementWindowToFront": {
                  "type": "boolean",
                  "default": false,
                  "title": "Bring element window to front",
                  "description": "Should IA-Connect bring the SAP window containing the element to the front before interacting with it? This helps ensure that no other windows are in front.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleWindow": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle window",
                  "description": "Should the window be toggled by attempting to focus or click it? This helps to ensure that the window is reliably brought to the foreground.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleUsesGlobalLeftMouseClickAgent": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle uses global left mouse click agent",
                  "description": "If choosing to toggle the window, this specifies whether to use global mouse clicks to focus the IA-Connect Agent first.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleDelay": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Toggle delay in seconds",
                  "description": "If choosing to toggle the window, this specifies the pause after toggling.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetX": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset X",
                  "description": "The number of X pixels to offset the click action by. This parameter supports both positive (right) and negative (left) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetY": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset Y",
                  "description": "The number of Y pixels to offset the click action by. This parameter supports both positive (down) and negative (up) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "OffsetRelativeTo": {
                  "type": "string",
                  "title": "Offset relative to",
				  "enum": [ "Center", "Left", "Right", "Top", "Bottom", "Top Left", "Top Right", "Bottom Left", "Bottom Right"],
                  "description": "The relative position of the element to offset from (Center / Centre / Middle, Left, Right, Top, Bottom, Top Left, Top Right, Bottom Left, Bottom Right).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPGlobalMiddleMouseClickOnSAPElement"
      }
    },
    "/SAPGUI/SAPGlobalDoubleLeftMouseClickOnSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Global double left mouse click on SAP element",
        "description": "Moves the mouse to the centre of an SAP element and double clicks the left mouse button.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGlobalDoubleLeftMouseClickOnSAPElement",
            "description": "Inputs for IA-Connect SAPGlobalDoubleLeftMouseClickOnSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SetElementWindowTopMost": {
                  "type": "boolean",
                  "default": false,
                  "title": "Set element window topmost",
                  "description": "Should IA-Connect set the SAP window containing the element topmost (on top of all other windows) before interacting with it? This helps ensure that no other windows are in front but will not work if using published applications (for example with Citrix) because the topmost setting in the remote session does not impact the local session.",
                  "x-ms-visibility": "advanced"
                },
                "BringElementWindowToFront": {
                  "type": "boolean",
                  "default": false,
                  "title": "Bring element window to front",
                  "description": "Should IA-Connect bring the SAP window containing the element to the front before interacting with it? This helps ensure that no other windows are in front.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleWindow": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle window",
                  "description": "Should the window be toggled by attempting to focus or click it? This helps to ensure that the window is reliably brought to the foreground.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleUsesGlobalLeftMouseClickAgent": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle uses global left mouse click agent",
                  "description": "If choosing to toggle the window, this specifies whether to use global mouse clicks to focus the IA-Connect Agent first.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleDelay": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Toggle delay in seconds",
                  "description": "If choosing to toggle the window, this specifies the pause after toggling.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetX": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset X",
                  "description": "The number of X pixels to offset the click action by. This parameter supports both positive (right) and negative (left) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetY": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset Y",
                  "description": "The number of Y pixels to offset the click action by. This parameter supports both positive (down) and negative (up) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "OffsetRelativeTo": {
                  "type": "string",
                  "title": "Offset relative to",
				  "enum": [ "Center", "Left", "Right", "Top", "Bottom", "Top Left", "Top Right", "Bottom Left", "Bottom Right"],
                  "description": "The relative position of the element to offset from (Center / Centre / Middle, Left, Right, Top, Bottom, Top Left, Top Right, Bottom Left, Bottom Right).",
                  "x-ms-visibility": "advanced"
                },
                "DoubleClickDelayInMilliseconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Double click delay in milliseconds",
                  "description": "The delay (in milliseconds) between each of the clicks."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPGlobalDoubleLeftMouseClickOnSAPElement"
      }
    },
    "/SAPGUI/SAPGlobalInputTextIntoSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Global input text into SAP element",
        "description": "Moves the mouse to centre of the SAP element, focusses it, left clicks, and presses keys. Typically used with a text input that will not accept native input methods.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGlobalInputTextIntoSAPElement",
            "description": "Inputs for IA-Connect SAPGlobalInputTextIntoSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SetElementWindowTopMost": {
                  "type": "boolean",
                  "default": false,
                  "title": "Set element window topmost",
                  "description": "Should IA-Connect set the SAP window containing the element topmost (on top of all other windows) before interacting with it? This helps ensure that no other windows are in front but will not work if using published applications (for example with Citrix) because the topmost setting in the remote session does not impact the local session.",
                  "x-ms-visibility": "advanced"
                },
                "BringElementWindowToFront": {
                  "type": "boolean",
                  "default": false,
                  "title": "Bring element window to front",
                  "description": "Should IA-Connect bring the SAP window containing the element to the front before interacting with it? This helps ensure that no other windows are in front.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleWindow": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle window",
                  "description": "Should the window be toggled by attempting to focus or click it? This helps to ensure that the window is reliably brought to the foreground.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleUsesGlobalLeftMouseClickAgent": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle uses global left mouse click agent",
                  "description": "If choosing to toggle the window, this specifies whether to use global mouse clicks to focus the IA-Connect Agent first.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleDelay": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Toggle delay in seconds",
                  "description": "If choosing to toggle the window, this specifies the pause after toggling.",
                  "x-ms-visibility": "advanced"
                },
                "GlobalMouseClickOnElement": {
                  "type": "boolean",
                  "default": true,
                  "title": "Global left mouse click on element",
                  "description": "Should a global mouse click be performed at the element coordinates (to focus the element) before entering text?"
                },
                "ReplaceExistingValueUsingDoubleClickDelete": {
                  "type": "boolean",
                  "default": false,
                  "title": "Replace existing value using double mouse click delete",
                  "description": "Should any existing value be replaced by double clicking the mouse (to highlight it) and then deleting?",
                  "x-ms-visibility": "advanced"
                },
                "ReplaceExistingValueUsingCTRLADelete": {
                  "type": "boolean",
                  "default": false,
                  "title": "Replace existing value using CTRL-A delete",
                  "description": "Should any existing value be replaced by pressing Ctrl-A (to highlight all) and then deleting? Some elements may not support highlighting with Ctrl-A in which case the alternative option of 'Replace existing value using double mouse click delete' should be tried.",
                  "x-ms-visibility": "advanced"
                },
                "TextToInput": {
                  "type": "string",
                  "title": "Text to input",
                  "description": "The text value to global input."
                },
                "SendKeyEvents": {
                  "type": "boolean",
                  "default": false,
                  "title": "Use send key events",
                  "description": "If set to true then send key events (a lower level API which sends simulated keystrokes to the operating system) will be used. If set to false then send keys (a higher level API which sends keystrokes to the focused element) will be used instead.",
                  "x-ms-visibility": "advanced"
                },
                "KeyIntervalInMilliseconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Key interval in milliseconds",
                  "description": "The number of milliseconds between each key press.",
                  "x-ms-visibility": "advanced"
                },
                "DoubleClickIntervalInMilliseconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Double click interval in milliseconds",
                  "description": "The number of milliseconds between each click if the parameter 'Replace existing value using double mouse click delete' is set to true.",
                  "x-ms-visibility": "advanced"
                },
                "DontInterpretSymbols": {
                  "type": "boolean",
                  "default": false,
                  "title": "Dont interpret symbols",
                  "description": "Should symbols in the 'Text to input' not be interpreted as special keys (e.g. + for Shift, ^ for Ctrl)? This should be set to true if you are attempting to input the actual symbols.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "TextToInput",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPGlobalInputTextIntoSAPElement"
      }
    },
    "/SAPGUI/SAPGlobalInputPasswordIntoSAPElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Global input password into SAP element",
        "description": "Moves the mouse to centre of the SAP element, focusses it, left clicks, and presses keys. Typically used with a password input that will not accept native input methods.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGlobalInputPasswordIntoSAPElement",
            "description": "Inputs for IA-Connect SAPGlobalInputPasswordIntoSAPElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SetElementWindowTopMost": {
                  "type": "boolean",
                  "default": false,
                  "title": "Set element window topmost",
                  "description": "Should IA-Connect set the SAP window containing the element topmost (on top of all other windows) before interacting with it? This helps ensure that no other windows are in front but will not work if using published applications (for example with Citrix) because the topmost setting in the remote session does not impact the local session.",
                  "x-ms-visibility": "advanced"
                },
                "BringElementWindowToFront": {
                  "type": "boolean",
                  "default": false,
                  "title": "Bring element window to front",
                  "description": "Should IA-Connect bring the SAP window containing the element to the front before interacting with it? This helps ensure that no other windows are in front.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleWindow": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle window",
                  "description": "Should the window be toggled by attempting to focus or click it? This helps to ensure that the window is reliably brought to the foreground.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleUsesGlobalLeftMouseClickAgent": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle uses global left mouse click agent",
                  "description": "If choosing to toggle the window, this specifies whether to use global mouse clicks to focus the IA-Connect Agent first.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleDelay": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Toggle delay in seconds",
                  "description": "If choosing to toggle the window, this specifies the pause after toggling.",
                  "x-ms-visibility": "advanced"
                },
                "GlobalMouseClickOnElement": {
                  "type": "boolean",
                  "default": true,
                  "title": "Global left mouse click on element",
                  "description": "Should a global mouse click be performed at the element coordinates (to focus the element) before entering text?"
                },
                "ReplaceExistingValueUsingDoubleClickDelete": {
                  "type": "boolean",
                  "default": false,
                  "title": "Replace existing value using double mouse click delete",
                  "description": "Should any existing value be replaced by double clicking the mouse (to highlight it) and then deleting?",
                  "x-ms-visibility": "advanced"
                },
                "ReplaceExistingValueUsingCTRLADelete": {
                  "type": "boolean",
                  "default": false,
                  "title": "Replace existing value using CTRL-A delete",
                  "description": "Should any existing value be replaced by pressing Ctrl-A (to highlight all) and then deleting? Some elements may not support highlighting with Ctrl-A in which case the alternative option of 'Replace existing value using double mouse click delete' should be tried.",
                  "x-ms-visibility": "advanced"
                },
                "PasswordToInput": {
                  "type": "string",
                  "format": "password",
                  "title": "Password to input",
                  "description": "The password value to global input."
                },
                "SendKeyEvents": {
                  "type": "boolean",
                  "default": false,
                  "title": "Use send key events",
                  "description": "If set to true then send key events (a lower level API which sends simulated keystrokes to the operating system) will be used. If set to false then send keys (a higher level API which sends keystrokes to the focused element) will be used instead.",
                  "x-ms-visibility": "advanced"
                },
                "KeyIntervalInMilliseconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Key interval in milliseconds",
                  "description": "The number of milliseconds between each key press.",
                  "x-ms-visibility": "advanced"
                },
                "DoubleClickIntervalInMilliseconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Double click interval in milliseconds",
                  "description": "The number of milliseconds between each click if the parameter 'Replace existing value using double mouse click delete' is set to true.",
                  "x-ms-visibility": "advanced"
                },
                "DontInterpretSymbols": {
                  "type": "boolean",
                  "default": false,
                  "title": "Dont interpret symbols",
                  "description": "Should symbols in the 'Password to input' not be interpreted as special keys (e.g. + for Shift, ^ for Ctrl)? This should be set to true if you are attempting to input the actual symbols.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "PasswordToInput",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPGlobalInputPasswordIntoSAPElement"
      }
    },
    "/SAPGUI/SAPSetListSelectionByName": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP list item by name",
        "description": "Selects the list element with the specified name. This is typically used to select an item in a dropdown / menu item.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSetListSelectionByName",
            "description": "Inputs for IA-Connect SAPSetListSelectionByName action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "ListItemName": {
                  "type": "string",
                  "title": "List item name",
                  "description": "The name of the element item to be selected."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "ListItemName",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSetListSelectionByName"
      }
    },
    "/SAPGUI/SAPSetListSelectionByKey": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP list item by key",
        "description": "Selects the list element with the specified key. This is typically used to select an item in a dropdown / menu item.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSetListSelectionByKey",
            "description": "Inputs for IA-Connect SAPSetListSelectionByKey action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "ListItemKey": {
                  "type": "string",
                  "title": "List item key",
                  "description": "The key of the list of the item to be selected. If you do not know the list item key, you can retrieve this from the output of the action 'Get SAP selection list items'."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "ListItemKey",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSetListSelectionByKey"
      }
    },
    "/SAPGUI/SAPGetListSelectionElementItems": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP selection list items",
        "description": "Returns a list of child element items found under the specified SAP element (typically dropdown / menu items).",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetListSelectionElementItems",
            "description": "Inputs for IA-Connect SAPGetListSelectionElementItems action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfItemsInList": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of items in list",
                  "description": "The number of items in the list."
                },
                "SAPSelectionListItemsJSON": {
                  "type": "string",
                  "title": "Selection list items JSON",
                  "description": "The properties of the selection list items, in JSON format."
                },
                "CurrentlySelectedValue": {
                  "type": "string",
                  "title": "Currently selected value",
                  "description": "The value of the currently selected item."
                },
                "CurrentlySelectedKey": {
                  "type": "string",
                  "title": "Currently selected key",
                  "description": "The key of the currently selected item."
                },
                "ValueRequired": {
                  "type": "boolean",
                  "title": "Value required",
                  "description": "Returns true if a value must be selected, or false if not."
                }
              }
            }
          }
        },
        "operationId": "SAPGetListSelectionElementItems"
      }
    },
    "/SAPGUI/SAPGetAllChildSAPElementProperties": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get all SAP child element properties",
        "description": "Returns all properties of all SAP child elements. This can be useful if you are uncertain which field holds the property values required.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetAllChildSAPElementProperties",
            "description": "Inputs for IA-Connect SAPGetAllChildSAPElementProperties action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "FirstItemToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "First item to return",
                  "description": "The element index of the first item to return, starting from 1. If you wish to return the elements in the reverse order (from the bottom of the tree), you can alternatively specify a negative index starting from -1. For example, an index of -10 would return the tenth item from the bottom.",
                  "x-ms-visibility": "advanced"
                },
                "MaxItemsToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Max items to return",
                  "description": "The maximum number of child elements to return. This parameter can be used to return large sets of elements in smaller chunks, for example large tables. Instead of attempting to return the entire table which may cause a timeout for extremely large tables, you could instead return 500 rows at a time.",
                  "x-ms-visibility": "advanced"
                },
                "SearchSAPElementType": {
                  "type": "string",
                  "title": "Search SAP element type",
                  "description": "The type of SAP element to search for (for example, GuiButton) or leave blank for all element types."
                },
                "MaxTextLength": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Max text length",
                  "description": "The maximum length of any text field. Setting a maximum value can increase search speed as some properties can contain large amounts of text. By default, there is no maximum text length so full values will be returned.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfChildElementsReturned": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of child elements returned",
                  "description": "The number of child elements returned."
                },
                "MoreElementsAvailableAtCurrentDepth": {
                  "type": "boolean",
                  "title": "More elements available",
                  "description": "Returns true if there were more child elements available but the inputs 'First item to return' or 'Max items to return' limited the search results."
                },
                "SAPChildElementsJSON": {
                  "type": "string",
                  "title": "SAP child elements JSON",
                  "description": "A list of all located child elements (and their properties), in JSON format."
                }
              }
            }
          }
        },
        "operationId": "SAPGetAllChildSAPElementProperties"
      }
    },
    "/SAPGUI/SAPGetSAPSessionTopLevelSAPElementProperties": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP session top level element properties",
        "description": "Returns the properties of the SAP element at the top-level of the active SAP session, typically the GuiMainWindow element.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetSAPSessionTopLevelSAPElementProperties",
            "description": "Inputs for IA-Connect SAPGetSAPSessionTopLevelSAPElementProperties action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FirstItemToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "First item to return",
                  "description": "The element index of the first item to return, starting from 1. If you wish to return the elements in the reverse order (from the bottom of the tree), you can alternatively specify a negative index starting from -1. For example, an index of -10 would return the tenth item from the bottom.",
                  "x-ms-visibility": "advanced"
                },
                "MaxItemsToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Max items to return",
                  "description": "The maximum number of child elements to return. This parameter can be used to return large sets of elements in smaller chunks, for example large tables. Instead of attempting to return the entire table which may cause a timeout for extremely large tables, you could instead return 500 rows at a time.",
                  "x-ms-visibility": "advanced"
                },
                "SearchSAPElementType": {
                  "type": "string",
                  "title": "Search SAP element type",
                  "description": "The type of SAP element to search for (for example, GuiButton) or leave blank for all element types."
                },
                "MaxTextLength": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Max text length",
                  "description": "The maximum length of any text field. Setting a maximum value can increase search speed as some properties can contain large amounts of text. By default, there is no maximum text length so full values will be returned.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfChildElementsReturned": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of top level elements returned",
                  "description": "The number of top level elements returned."
                },
                "MoreElementsAvailableAtCurrentDepth": {
                  "type": "boolean",
                  "title": "More elements available",
                  "description": "Returns true if there were more top level elements available but the inputs 'First item to return' or 'Max items to return' limited the search results."
                },
                "SAPChildElementsJSON": {
                  "type": "string",
                  "title": "SAP top level elements JSON",
                  "description": "A list of all top level elements (and their properties), in JSON format."
                }
              }
            }
          }
        },
        "operationId": "SAPGetSAPSessionTopLevelSAPElementProperties"
      }
    },
    "/SAPGUI/SAPGetSAPElementParentId": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP parent element Id",
        "description": "Returns the SAP element Id of the parent element of an SAP element.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetSAPElementParentId",
            "description": "Inputs for IA-Connect SAPGetSAPElementParentId action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPParentElementId": {
                  "type": "string",
                  "title": "SAP parent element Id",
                  "description": "The SAP element ID of the parent element."
                },
                "SAPParentElementType": {
                  "type": "string",
                  "title": "SAP parent element type",
                  "description": "The SAP type of the parent element, for example 'GuiMainWindow'."
                },
                "SAPParentElementTypeCode": {
                  "type": "integer",
                  "format": "int32",
                  "title": "SAP parent element type code",
                  "description": "The SAP type code of the parent element, for example 21 for 'GuiMainWindow'."
                }
              }
            }
          }
        },
        "operationId": "SAPGetSAPElementParentId"
      }
    },
    "/SAPGUI/SAPGetElementPropertiesAsList": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP element properties as collection",
        "description": "Returns the properties of an SAP element as a single line list (single line collection / data table) instead of individual items, this maybe useful depending on how you intend to use the data.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetElementPropertiesAsList",
            "description": "Inputs for IA-Connect SAPGetElementPropertiesAsList action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "MaxTextLength": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Max text length",
                  "description": "The SAP element text property could potentially be very long, so this option allows you to limit the maximum size which will be returned (and the field 'ElementTextTrimmed' will inform you if the text was trimmed). By default, this value is 0 which does not limit the maximum size."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfElementsReturned": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of elements returned",
                  "description": "The number of elements returned."
                },
                "SAPElementsJSON": {
                  "type": "string",
                  "title": "SAP element properties JSON",
                  "description": "The SAP properties of the element, in JSON format."
                }
              }
            }
          }
        },
        "operationId": "SAPGetElementPropertiesAsList"
      }
    },
    "/SAPGUI/SAPGetSAPElementAtScreenCoordinate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP element at screen coordinate",
        "description": "If a SAP element exists at the specified coordinates, this action will identify the element and return the element ID.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetSAPElementAtScreenCoordinate",
            "description": "Inputs for IA-Connect SAPGetSAPElementAtScreenCoordinate action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ScreenX": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X",
                  "description": "The screen X coordinate in pixels to locate the SAP element at."
                },
                "ScreenY": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y",
                  "description": "The screen Y coordinate in pixels to locate the SAP element at."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ScreenX",
                "ScreenY",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPElementId": {
                  "type": "string",
                  "title": "SAP element Id",
                  "description": "The SAP element ID of the element, if one was found at the specified coordinates. This element ID can be used as an input to many other SAP actions."
                }
              }
            }
          }
        },
        "operationId": "SAPGetSAPElementAtScreenCoordinate"
      }
    },
    "/SAPGUI/SAPOpenConnection": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Open SAP connection",
        "description": "Open a SAP connection using either the description of the SAP system (i.e. the name in the list of SAP connections) or the address of the SAP system (e.g. /H/address/S/3200).",
        "parameters": [
          {
            "in": "body",
            "name": "SAPOpenConnection",
            "description": "Inputs for IA-Connect SAPOpenConnection action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SAPConnectionDescription": {
                  "type": "string",
                  "title": "SAP connection description",
                  "description": "The name / description of the SAP connection as seen in the list of connections in SAP GUI, for example Test SAP system."
                },
                "SAPConnectionAddress": {
                  "type": "string",
                  "title": "SAP connection address",
                  "description": "The connection address of the SAP system, for example /H/address/S/3200."
                },
                "ConnectSynchronous": {
                  "type": "boolean",
                  "default": true,
                  "title": "Connect synchronous",
                  "description": "Should IA-Connect wait for the login window to open before connecting?",
                  "x-ms-visibility": "advanced"
                },
                "ConnectToSession": {
                  "type": "boolean",
                  "default": true,
                  "title": "Connect to session",
                  "description": "Should IA-Connect automatically connect to the first available session on this connection?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "OpenedConnectionName": {
                  "type": "string",
                  "title": "Opened connection name",
                  "description": "The internal name of the connection that was opened, for example con[0]."
                },
                "ScriptingDisabledByServer": {
                  "type": "boolean",
                  "title": "Scripting disabled by server",
                  "description": "Returns true if SAP scripting has been disabled on the SAP server."
                },
                "NumberOfSAPSessions": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of SAP sessions",
                  "description": "The number of SAP sessions that are open in the connection."
                },
                "ConnectedSessionName": {
                  "type": "string",
                  "title": "Connected session name",
                  "description": "The internal name of the connection that was opened, for example ses[0]."
                }
              }
            }
          }
        },
        "operationId": "SAPOpenConnection"
      }
    },
    "/SAPGUI/SAPGetSAPTableProperties": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP table properties",
        "description": "Returns the properties of an SAP table element. This is an element with an element type of 'GuiTableControl'. For gridview elements (these are similar to tables but provide additional functionality via a built-in toolbar), use the alternative action 'Get SAP grid view properties'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetSAPTableProperties",
            "description": "Inputs for IA-Connect SAPGetSAPTableProperties action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfVisibleRows": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of visible rows",
                  "description": "The number of visible rows in the table."
                },
                "NumberOfVisibleColumns": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of visible columns",
                  "description": "The number of visible columns in the table."
                },
                "VerticalScrollbarMinimum": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Vertical scrollbar minimum",
                  "description": "The minimum value of the vertical scrollbar."
                },
                "VerticalScrollbarMaximum": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Vertical scrollbar maximum",
                  "description": "The maximum value of the vertical scrollbar."
                },
                "VerticalScrollbarPosition": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Vertical scrollbar position",
                  "description": "The current position of the vertical scrollbar."
                },
                "VerticalScrollbarPageSize": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Vertical scrollbar page size",
                  "description": "The page size of the vertical scrollbar."
                },
                "EstimatedNumberOfRows": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Estimated number of rows",
                  "description": "The estimated number of rows in the table, including rows that are not currently visible."
                },
                "HorizontalScrollbarMinimum": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Horizontal scrollbar minimum",
                  "description": "The minimum value of the horizontal scrollbar."
                },
                "HorizontalScrollbarMaximum": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Horizontal scrollbar maximum",
                  "description": "The maximum value of the horizontal scrollbar."
                },
                "HorizontalScrollbarPosition": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Horizontal scrollbar position",
                  "description": "The current position of the horizontal scrollbar."
                },
                "HorizontalScrollbarPageSize": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Horizontal scrollbar page size",
                  "description": "The page size of the horizontal scrollbar."
                },
                "EstimatedNumberOfColumns": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Estimated number of columns",
                  "description": "The estimated number of columns in the table, including rows that are not currently visible."
                },
                "RowSelectMode": {
                  "type": "string",
                  "title": "Row selection mode",
                  "description": "The current row selection mode, for example 'No selection' or 'Single selection'."
                },
                "ColumnSelectMode": {
                  "type": "string",
                  "title": "Column selection mode",
                  "description": "The current column selection mode, for example 'No selection' or 'Single selection'."
                }
              }
            }
          }
        },
        "operationId": "SAPGetSAPTableProperties"
      }
    },
    "/SAPGUI/SAPGetSAPTableVisibleCellTextContentsAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP table visible cell text contents",
        "description": "Gets the contents of a visible table cell at the specified row and column index within a table. Row index 1, column index 1 represents the top left corner of the visible cells in the table. This action can only be used to retrieve the contents of visible cells.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetSAPTableVisibleCellTextContentsAtIndex",
            "description": "Inputs for IA-Connect SAPGetSAPTableVisibleCellTextContentsAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "VisibleRowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Visible row index",
                  "description": "The row index of the visible table cell, starting from 1."
                },
                "VisibleColumnIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Visible column index",
                  "description": "The column index of the visible table cell, starting from 1."
                },
                "CheckedElementValue": {
                  "type": "string",
                  "default": "True",
                  "title": "Checked element value",
                  "description": "For GuiRadioBox or GuiCheckBox elements contained within a table, what value should be returned if they are selected / checked? By default, this is 'True' (as text).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "CellTextContents": {
                  "type": "string",
                  "title": "Cell text contents",
                  "description": "The contents of the visible cell."
                },
                "CellColumnName": {
                  "type": "string",
                  "title": "Cell column name",
                  "description": "The name of the column which contains the visible cell."
                },
                "HorizontalScrollbarPosition": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Horizontal scrollbar position",
                  "description": "The current position of the horizontal scrollbar."
                },
                "VerticalScrollbarPosition": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Vertical scrollbar position",
                  "description": "The current position of the vertical scrollbar."
                },
                "EstimatedActualRowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Estimated actual row index",
                  "description": "The estimated actual row index in the table, including rows that are not currently visible."
                },
                "EstimatedActualColumnIndex": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Estimated actual column index",
                  "description": "The estimated actual colmun index in the table, including columns that are not currently visible."
                }
              }
            }
          }
        },
        "operationId": "SAPGetSAPTableVisibleCellTextContentsAtIndex"
      }
    },
    "/SAPGUI/SAPGetSAPTableVisibleCellPropertiesAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP table visible cell properties",
        "description": "Returns all properties of a visible table cell at the specified row and column index within a table. Row index 1, column index 1 represents the top left corner of the visible cells in the table. This action can only be used to retrieve the properties of visible cells.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetSAPTableVisibleCellPropertiesAtIndex",
            "description": "Inputs for IA-Connect SAPGetSAPTableVisibleCellPropertiesAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "VisibleRowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Visible row index",
                  "description": "The row index of the visible table cell, starting from 1."
                },
                "VisibleColumnIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Visible column index",
                  "description": "The column index of the visible table cell, starting from 1."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPElementType": {
                  "type": "string",
                  "title": "Element type",
                  "description": "The SAP type of the element, for example 'GuiTextField'."
                },
                "SAPElementTypeCode": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element type code",
                  "description": "The SAP type code, for example 31 for 'GuiMainWindow'."
                },
                "SAPElementName": {
                  "type": "string",
                  "title": "Element name",
                  "description": "The SAP name of the element."
                },
                "SAPElementId": {
                  "type": "string",
                  "title": "Element Id",
                  "description": "The SAP ID of the element."
                },
                "SAPElementSubType": {
                  "type": "string",
                  "title": "Element sub type",
                  "description": "The SAP sub type of the element. This is dependant on the element type and some elements may not have a sub type."
                },
                "SAPElementTextValue": {
                  "type": "string",
                  "title": "Element text value",
                  "description": "The text value of the SAP element."
                },
                "SAPElementIsContainer": {
                  "type": "boolean",
                  "title": "Element is container",
                  "description": "Returns true if the element is a container (for example a GuiMainWindow or GuiUserArea), or false if not."
                },
                "SAPElementNumberOfChildren": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of children",
                  "description": "The number of child elements, if the element is a container."
                },
                "SAPElementIsChangeable": {
                  "type": "boolean",
                  "title": "Element is changeable",
                  "description": "Returns true if the element is changeable or false if not."
                },
                "SAPElementIsModified": {
                  "type": "boolean",
                  "title": "Element is modified",
                  "description": "Returns true if the element has been modified or false if not."
                },
                "SAPElementIsSelected": {
                  "type": "boolean",
                  "title": "Element is selected",
                  "description": "Returns true if the element is currently selected (e.g. for radio buttons or checkboxes) or false if not."
                },
                "SAPElementIsHighlighted": {
                  "type": "boolean",
                  "title": "Element is highlighted",
                  "description": "Returns true if the element is currently highlighted (e.g. for labels or text boxes) or false if not."
                },
                "SAPElementIsVisible": {
                  "type": "boolean",
                  "title": "Element is visible",
                  "description": "Returns true if the element is currently visible or false if not."
                },
                "SAPElementLeftEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element left edge",
                  "description": "The distance in pixels between the left edge of the element or window and the left edge of the display."
                },
                "SAPElementTopEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element top edge",
                  "description": "The distance in pixels between the top edge of the element or window and the top edge of the display."
                },
                "SAPElementWidth": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element width",
                  "description": "The width of the element in pixels."
                },
                "SAPElementHeight": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element height",
                  "description": "The height of the element in pixels."
                },
                "SAPElementRightEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element right edge",
                  "description": "The distance in pixels between the right edge of the element or window and the left edge of the display."
                },
                "SAPElementBottomEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Element bottom edge",
                  "description": "The distance in pixels between the bottom edge of the element or window and the top edge of the display."
                },
                "CellColumnName": {
                  "type": "string",
                  "title": "Cell column name",
                  "description": "The name of the column which contains the visible cell."
                },
                "HorizontalScrollbarPosition": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Horizontal scrollbar position",
                  "description": "The current position of the horizontal scrollbar."
                },
                "VerticalScrollbarPosition": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Vertical scrollbar position",
                  "description": "The current position of the vertical scrollbar."
                },
                "EstimatedActualRowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Estimated actual row index",
                  "description": "The estimated actual row index in the table, including rows that are not currently visible."
                },
                "EstimatedActualColumnIndex": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Estimated actual column index",
                  "description": "The estimated actual colmun index in the table, including columns that are not currently visible."
                }
              }
            }
          }
        },
        "operationId": "SAPGetSAPTableVisibleCellPropertiesAtIndex"
      }
    },
    "/SAPGUI/SAPSetSAPTableVisibleCellTextContentsAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Write to SAP table visible text cell",
        "description": "Writes to a visible table cell at the specified row and column index within a table. Row index 1, column index 1 represents the top left corner of the visible cells in the table. This action can only be used to set the contents of visible cells.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSetSAPTableVisibleCellTextContentsAtIndex",
            "description": "Inputs for IA-Connect SAPSetSAPTableVisibleCellTextContentsAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "VisibleRowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Visible row index",
                  "description": "The row index of the visible table cell, starting from 1."
                },
                "VisibleColumnIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Visible column index",
                  "description": "The column index of the visible table cell, starting from 1."
                },
                "TextToInput": {
                  "type": "string",
                  "title": "Text to input",
                  "description": "The text value to input."
                },
                "ReplaceExistingValue": {
                  "type": "boolean",
                  "default": true,
                  "title": "Replace existing value",
                  "description": "If there is existing text in the element, should this be replaced?",
                  "x-ms-visibility": "advanced"
                },
                "InsertPosition": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Insert position",
                  "description": "The position (index) to begin inserting text. If there is existing text, the insert position can be used to insert at a specific position within the existing text.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "TextToInput",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSetSAPTableVisibleCellTextContentsAtIndex"
      }
    },
    "/SAPGUI/SAPCheckSAPTableVisibleCellCheckboxAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Check SAP table visible checkbox cell",
        "description": "Check or uncheck a checkbox in a visible table cell at the specified row and column index within a table. Row index 1, column index 1 represents the top left corner of the visible cells in the table. This action can only be used to check or uncheck visible cells.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPCheckSAPTableVisibleCellCheckboxAtIndex",
            "description": "Inputs for IA-Connect SAPCheckSAPTableVisibleCellCheckboxAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "VisibleRowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Visible row index",
                  "description": "The row index of the visible table cell, starting from 1."
                },
                "VisibleColumnIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Visible column index",
                  "description": "The column index of the visible table cell, starting from 1."
                },
                "CheckCellElement": {
                  "type": "boolean",
                  "default": true,
                  "title": "Check cell element",
                  "description": "If set to true, the visible table cell will be checked. If set to false, it will be unchecked."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPCheckSAPTableVisibleCellCheckboxAtIndex"
      }
    },
    "/SAPGUI/SAPPressSAPTableVisibleCellAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Press SAP table visible cell",
        "description": "Presses a button in a visible table cell at the specified row and column index within a table. Row index 1, column index 1 represents the top left corner of the visible cells in the table. This action can only be used to press visible cells.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPPressSAPTableVisibleCellAtIndex",
            "description": "Inputs for IA-Connect SAPPressSAPTableVisibleCellAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "VisibleRowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Visible row index",
                  "description": "The row index of the visible table cell, starting from 1."
                },
                "VisibleColumnIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Visible column index",
                  "description": "The column index of the visible table cell, starting from 1."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPPressSAPTableVisibleCellAtIndex"
      }
    },
    "/SAPGUI/SAPScrollSAPTable": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Scroll SAP table",
        "description": "Scrolls an SAP table element either horizontally, vertically or both.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPScrollSAPTable",
            "description": "Inputs for IA-Connect SAPScrollSAPTable action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "MoveHorizontalScrollbar": {
                  "type": "boolean",
                  "default": false,
                  "title": "Move horizontal scrollbar",
                  "description": "Should the horizontal scrollbar be moved?"
                },
                "HorizontalScrollbarPosition": {
                  "type": "integer",
                  "format": "int32",
                  "title": "New horizontal scrollbar position",
                  "description": "The new horizontal scrollbar position to move to. The minimum and maximum positional values of the table scrollbars can be retrieved from the action 'Get SAP table properties'."
                },
                "MoveVerticalScrollbar": {
                  "type": "boolean",
                  "default": false,
                  "title": "Move vertical scrollbar",
                  "description": "Should the vertical scrollbar be moved?"
                },
                "VerticalScrollbarPosition": {
                  "type": "integer",
                  "format": "int32",
                  "title": "New vertical scrollbar position",
                  "description": "The new vertical scrollbar position to move to. The minimum and maximum positional values of the table scrollbars can be retrieved from the action 'Get SAP table properties'."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPScrollSAPTable"
      }
    },
    "/SAPGUI/SAPGetTableVisibleTextContents": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP table visible text contents",
        "description": "Gets the contents of all visible table cells within a table. This action can only be used to retrieve the contents of visible cells.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetTableVisibleTextContents",
            "description": "Inputs for IA-Connect SAPGetTableVisibleTextContents action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "FirstVisibleRowToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "First visible row to return",
                  "description": "The row index of the first visible table row to return, starting from 1.",
                  "x-ms-visibility": "advanced"
                },
                "MaxRowsToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Max rows to return",
                  "description": "The maximum number of rows to return, or 0 to return all rows."
                },
                "FirstVisibleColumnToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "First visible column to return",
                  "description": "The column index of the first visible table column to return, starting from 1.",
                  "x-ms-visibility": "advanced"
                },
                "MaxColumnsToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Max columns to return",
                  "description": "The maximum number of columns to return, or 0 to return all columns."
                },
                "UseColumnHeadersFromTable": {
                  "type": "boolean",
                  "default": false,
                  "title": "Use column headers from table",
                  "description": "If set to true then the IA-Connect Agent will attempt to setup the returned table columns to match the column names in the SAP table."
                },
                "ReturnRowIndexInOutputCollection": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return row index in output collection",
                  "description": "If set to true then the IA-Connect Agent will return the row index in the output collection as an additional column. This is useful if you plan to filter the data since you will be able to track which row this originally came from. By default, the column name for the row index will be '_Row_index_' but you can change it by providing an alternative value in the input 'Name of column to store row index'.",
                  "x-ms-visibility": "advanced"
                },
                "NameOfColumnToStoreRowIndex": {
                  "type": "string",
                  "title": "Name of column to store row index",
                  "description": "If 'Return row index in output collection' is set to true then you can override the default column name of '_Row_Index' by providing an alternative value here.",
                  "x-ms-visibility": "advanced"
                },
                "CheckedElementValue": {
                  "type": "string",
                  "default": "True",
                  "title": "Checked element value",
                  "description": "For GuiRadioBox or GuiCheckBox elements contained within a table, what value should be returned if they are selected / checked? By default, this is 'True' (as text).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPTableTextContentsJSON": {
                  "type": "string",
                  "title": "SAP table text contents JSON",
                  "description": "The text contents of all the visible cells in the table, in JSON format."
                },
                "NumberOfRowsReturned": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of rows returned",
                  "description": "The number of rows returned. This may be limited by the 'First visible row to return' or 'Max rows to return' inputs."
                },
                "NumberOfColumnsReturned": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of columns returned",
                  "description": "The number of columns returned. This may be limited by the 'First visible column to return' or 'Max columns to return' inputs."
                }
              }
            }
          }
        },
        "operationId": "SAPGetTableVisibleTextContents"
      }
    },
    "/SAPGUI/SAPSelectSAPTableRow": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP table visible row",
        "description": "Selects the visible table row at the specified row index within a table. Row index 1, represents the first visible row in the table. This action can only be used to select visible rows.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSelectSAPTableRow",
            "description": "Inputs for IA-Connect SAPSelectSAPTableRow action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "VisibleRowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Visible row index",
                  "description": "The index of the visible table row, starting from 1."
                },
                "Select": {
                  "type": "boolean",
                  "default": true,
                  "title": "Select",
                  "description": "If set to true then the row will be selected. If set to false, it will be deselected."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSelectSAPTableRow"
      }
    },
    "/SAPGUI/SAPSelectSAPTableColumn": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP table visible column",
        "description": "Selects the visible table column at the specified column index within a table. Column index 1, represents the first visible column in the table. This action can only be used to select visible columns.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSelectSAPTableColumn",
            "description": "Inputs for IA-Connect SAPSelectSAPTableColumn action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "VisibleColumnIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Visible column index",
                  "description": "The index of the visible table column, starting from 1."
                },
                "Select": {
                  "type": "boolean",
                  "default": true,
                  "title": "Select",
                  "description": "If set to true then the column will be selected. If set to false, it will be deselected."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSelectSAPTableColumn"
      }
    },
    "/SAPGUI/SAPGetTreeNodes": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP tree nodes",
        "description": "Returns a list of all nodes in an SAP tree element.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetTreeNodes",
            "description": "Inputs for IA-Connect SAPGetTreeNodes action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "ParentNodeKey": {
                  "type": "string",
                  "title": "Parent node key",
                  "description": "If specified then the tree will be processed from the specified node key (note that you can obtain node keys by calling this action with a blank parent node key - that will provide the keys at the top-level). If not specified then the top-level of the tree will be processed.",
                  "x-ms-visibility": "advanced"
                },
                "ProcessSubNodes": {
                  "type": "boolean",
                  "default": true,
                  "title": "Process sub nodes",
                  "description": "If set to true, all nodes in the tree (including subnodes) will be returned. If set to false, only the top-level nodes will be returned.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfNodesInTree": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of tree nodes",
                  "description": "The number of nodes in the tree."
                },
                "SAPTreeNodesJSON": {
                  "type": "string",
                  "title": "SAP tree nodes JSON",
                  "description": "A list of all nodes in the tree, in JSON format."
                },
                "NumberOfSelectedNodes": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of selected nodes",
                  "description": "The number of nodes in the tree."
                },
                "CurrentlySelectedNode": {
                  "type": "string",
                  "title": "Currently selected node",
                  "description": "The node key of the currently selected node."
                },
                "TreeType": {
                  "type": "string",
                  "title": "Tree type",
                  "description": "The type of tree, Simple (0), List (1) or Column (2)."
                },
                "TreeSelectionMode": {
                  "type": "string",
                  "title": "Tree selection mode",
                  "description": "The tree selection mode, Single node (0), Multiple node (1), Single item (2) or Multiple item (3)."
                }
              }
            }
          }
        },
        "operationId": "SAPGetTreeNodes"
      }
    },
    "/SAPGUI/SAPDoubleClickTreeItem": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Double click SAP tree item",
        "description": "Double clicks a node or item in a SAP tree. The specific node or item can be searched using one of either the node key, node path or node text. The key, path or text values can be determined by using the action 'Get SAP tree nodes'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPDoubleClickTreeItem",
            "description": "Inputs for IA-Connect SAPDoubleClickTreeItem action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchNodeKey": {
                  "type": "string",
                  "title": "Search node key",
                  "description": "The key of the node to be clicked. If you have provided a value for the key, you do not need to provide a value for the path or text."
                },
                "SearchNodePath": {
                  "type": "string",
                  "title": "Search node path",
                  "description": "The path of the node to be clicked. If you have provided a value for the path, you do not need to provide a value for the key or text."
                },
                "SearchNodeText": {
                  "type": "string",
                  "title": "Search node text",
                  "description": "The text of the node to be clicked. If you have provided a value for the text, you do not need to provide a value for the path or key."
                },
                "SearchNodeTextIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is regular expression",
                  "description": "If set to true, the search node text is treated as a regular expression. For example, ^S for a node that starts with S or P$ for a node that ends with P. If set to false (the default), the search node text is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchNodeTextIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is case sensitive",
                  "description": "Should the node text search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The optional internal name of the column that the item is within. This can be determined by using the action 'Get SAP tree column headers' and providing the values shown in the 'ColumnName' column.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The optional title of the column that the item is within. This can be determined by using the action 'Get SAP tree column headers' and provide the values shown in the 'ColumnTitle' column.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPDoubleClickTreeItem"
      }
    },
    "/SAPGUI/SAPSelectTreeItem": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP tree item",
        "description": "Select or deselect a node or item in a SAP tree. The specific node or item can be searched using one of either the node key, node path or node text. The key, path or text values can be determined by using the action 'Get SAP tree nodes'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSelectTreeItem",
            "description": "Inputs for IA-Connect SAPSelectTreeItem action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchNodeKey": {
                  "type": "string",
                  "title": "Search node key",
                  "description": "The key of the node to be clicked. If you have provided a value for the key, you do not need to provide a value for the path or text."
                },
                "SearchNodePath": {
                  "type": "string",
                  "title": "Search node path",
                  "description": "The path of the node to be clicked. If you have provided a value for the path, you do not need to provide a value for the key or text."
                },
                "SearchNodeText": {
                  "type": "string",
                  "title": "Search node text",
                  "description": "The text of the node to be clicked. If you have provided a value for the text, you do not need to provide a value for the path or key."
                },
                "SearchNodeTextIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is regular expression",
                  "description": "If set to true, the search node text is treated as a regular expression. For example, ^S for a node that starts with S or P$ for a node that ends with P. If set to false (the default), the search node text is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchNodeTextIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is case sensitive",
                  "description": "Should the node text search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The optional internal name of the column that the node or item is within. This can be determined by using the action 'Get SAP tree column headers' and providing the values shown in the 'ColumnName' column.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The optional title of the column that the node or item is within. This can be determined by using the action 'Get SAP tree column headers' and provide the values shown in the 'ColumnTitle' column.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Select": {
                  "type": "boolean",
                  "default": true,
                  "title": "Select",
                  "description": "If set to true then the tree node or item will be selected. If set to false, it will be deselected."
                },
                "DeselectAllFirst": {
                  "type": "boolean",
                  "default": false,
                  "title": "Deselect all first",
                  "description": "Should all nodes in the tree be deselected before selecting this node? This will result in this node being the only selected node in the tree."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSelectTreeItem"
      }
    },
    "/SAPGUI/SAPExpandTreeNode": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Expand SAP tree node",
        "description": "Expands or collapses a node in a SAP tree. The specific node or item can be searched using one of either the node key, node path or node text. The key, path or text values can be determined by using the action 'Get SAP tree nodes'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPExpandTreeNode",
            "description": "Inputs for IA-Connect SAPExpandTreeNode action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchNodeKey": {
                  "type": "string",
                  "title": "Search node key",
                  "description": "The key of the node to be clicked. If you have provided a value for the key, you do not need to provide a value for the path or text."
                },
                "SearchNodePath": {
                  "type": "string",
                  "title": "Search node path",
                  "description": "The path of the node to be clicked. If you have provided a value for the path, you do not need to provide a value for the key or text."
                },
                "SearchNodeText": {
                  "type": "string",
                  "title": "Search node text",
                  "description": "The text of the node to be clicked. If you have provided a value for the text, you do not need to provide a value for the path or key."
                },
                "SearchNodeTextIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is regular expression",
                  "description": "If set to true, the search node text is treated as a regular expression. For example, ^S for a node that starts with S or P$ for a node that ends with P. If set to false (the default), the search node text is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchNodeTextIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is case sensitive",
                  "description": "Should the node text search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Expand": {
                  "type": "boolean",
                  "default": true,
                  "title": "Expand",
                  "description": "If set to true then the tree node or item will be expanded. If set to false, it will be collapsed."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPExpandTreeNode"
      }
    },
    "/SAPGUI/SAPDeselectAllTreeNodes": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deselect all SAP tree nodes",
        "description": "Deselect all nodes in a SAP tree.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPDeselectAllTreeNodes",
            "description": "Inputs for IA-Connect SAPDeselectAllTreeNodes action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPDeselectAllTreeNodes"
      }
    },
    "/SAPGUI/SAPPressKeyOnTree": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Press key on SAP tree",
        "description": "Press a key on a SAP tree. There are a limited built-in list of keys you can press, for example 'F1', 'F4', 'Delete', 'Insert', 'Enter', 'Cut', 'Copy' or 'Paste'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPPressKeyOnTree",
            "description": "Inputs for IA-Connect SAPPressKeyOnTree action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Key": {
                  "type": "string",
                  "title": "Key",
                  "description": "The key to press, for example 'F1', 'F4', 'Delete', 'Insert', 'Enter', 'Cut', 'Copy' or 'Paste'."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Key",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPPressKeyOnTree"
      }
    },
    "/SAPGUI/SAPOpenContextMenuOnTreeItem": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Open SAP tree item context menu",
        "description": "Opens the context menu for a SAP tree node or item. The specific node or item can be searched using one of either the node key, node path or node text. The key, path or text values can be determined by using the action 'Get SAP tree nodes'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPOpenContextMenuOnTreeItem",
            "description": "Inputs for IA-Connect SAPOpenContextMenuOnTreeItem action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchNodeKey": {
                  "type": "string",
                  "title": "Search node key",
                  "description": "The key of the node to be clicked. If you have provided a value for the key, you do not need to provide a value for the path or text."
                },
                "SearchNodePath": {
                  "type": "string",
                  "title": "Search node path",
                  "description": "The path of the node to be clicked. If you have provided a value for the path, you do not need to provide a value for the key or text."
                },
                "SearchNodeText": {
                  "type": "string",
                  "title": "Search node text",
                  "description": "The text of the node to be clicked. If you have provided a value for the text, you do not need to provide a value for the path or key."
                },
                "SearchNodeTextIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is regular expression",
                  "description": "If set to true, the search node text is treated as a regular expression. For example, ^S for a node that starts with S or P$ for a node that ends with P. If set to false (the default), the search node text is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchNodeTextIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is case sensitive",
                  "description": "Should the node text search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The optional internal name of the column that the node or item is within. This can be determined by using the action 'Get SAP tree column headers' and providing the values shown in the 'ColumnName' column.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The optional title of the column that the node or item is within. This can be determined by using the action 'Get SAP tree column headers' and provide the values shown in the 'ColumnTitle' column.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPOpenContextMenuOnTreeItem"
      }
    },
    "/SAPGUI/SAPGetTreeTextContents": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP tree text contents",
        "description": "Returns the text contents of all nodes in a SAP tree.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetTreeTextContents",
            "description": "Inputs for IA-Connect SAPGetTreeTextContents action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "FirstRowToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "First row to return",
                  "description": "The row index of the first tree item row to return, starting from 1.",
                  "x-ms-visibility": "advanced"
                },
                "MaxRowsToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Max rows to return",
                  "description": "The maximum number of rows to return, or 0 to return all rows."
                },
                "FirstColumnToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "First column to return",
                  "description": "The column index of the first tree item column to return, starting from 1.",
                  "x-ms-visibility": "advanced"
                },
                "MaxColumnsToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Max columns to return",
                  "description": "The maximum number of columns to return, or 0 to return all columns."
                },
                "UseColumnHeadersFromTree": {
                  "type": "boolean",
                  "default": false,
                  "title": "Use column headers from tree",
                  "description": "If set to true then the IA-Connect Agent will attempt to setup the returned table columns to match the column names in the SAP table."
                },
                "ReturnRowIndexInOutputCollection": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return row index in output collection",
                  "description": "If set to true then the IA-Connect Agent will return the row index in the output collection as an additional column. This is useful if you plan to filter the data since you will be able to track which row this originally came from. By default, the column name for the row index will be '_Row_index_' but you can change it by providing an alternative value in the input 'Name of column to store row index'.",
                  "x-ms-visibility": "advanced"
                },
                "NameOfColumnToStoreRowIndex": {
                  "type": "string",
                  "title": "Name of column to store row index",
                  "description": "If 'Return row index in output collection' is set to true then you can override the default column name of '_Row_Index' by providing an alternative value here.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPTreeTextContentsJSON": {
                  "type": "string",
                  "title": "SAP tree text contents JSON",
                  "description": "The text contents of the tree, in JSON format."
                },
                "NumberOfRowsReturned": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of rows returned",
                  "description": "The number of rows returned. This may be limited by the 'First visible row to return' or 'Max rows to return' inputs."
                },
                "NumberOfColumnsReturned": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of columns returned",
                  "description": "The number of columns returned. This may be limited by the 'First visible column to return' or 'Max columns to return' inputs."
                }
              }
            }
          }
        },
        "operationId": "SAPGetTreeTextContents"
      }
    },
    "/SAPGUI/SAPSetTreeColumnWidth": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set SAP tree column width",
        "description": "Set the width (in pixels) of a SAP tree column. The specific column can be searched using one of either the column name or column title. The column name or title values can be determined by using the action 'Get SAP tree column headers'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSetTreeColumnWidth",
            "description": "Inputs for IA-Connect SAPSetTreeColumnWidth action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the node or item is within. This can be determined by using the action 'Get SAP tree column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the node or item is within. This can be determined by using the action 'Get SAP tree column headers' and provide the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "ColumnWidthInPixels": {
                  "type": "integer",
                  "format": "int32",
                  "default": 200,
                  "title": "Column width in pixels",
                  "description": "The width to set the column to (in pixels)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSetTreeColumnWidth"
      }
    },
    "/SAPGUI/SAPPressButtonOnTreeItem": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Press button on SAP tree item",
        "description": "Presses a button on a SAP tree item. The specific node or item can be searched using one of either the node key, node path or node text. The key, path or text values can be determined by using the action 'Get SAP tree nodes'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPPressButtonOnTreeItem",
            "description": "Inputs for IA-Connect SAPPressButtonOnTreeItem action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchNodeKey": {
                  "type": "string",
                  "title": "Search node key",
                  "description": "The key of the node to be clicked. If you have provided a value for the key, you do not need to provide a value for the path or text."
                },
                "SearchNodePath": {
                  "type": "string",
                  "title": "Search node path",
                  "description": "The path of the node to be clicked. If you have provided a value for the path, you do not need to provide a value for the key or text."
                },
                "SearchNodeText": {
                  "type": "string",
                  "title": "Search node text",
                  "description": "The text of the node to be clicked. If you have provided a value for the text, you do not need to provide a value for the path or key."
                },
                "SearchNodeTextIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is regular expression",
                  "description": "If set to true, the search node text is treated as a regular expression. For example, ^S for a node that starts with S or P$ for a node that ends with P. If set to false (the default), the search node text is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchNodeTextIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is case sensitive",
                  "description": "Should the node text search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the node or item is within. If you have provided a column name, the column title is not required. This can be determined by using the action 'Get SAP tree column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the node or item is within. If you have provided a column title, the column name is not required. This can be determined by using the action 'Get SAP tree column headers' and provide the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Force": {
                  "type": "boolean",
                  "default": false,
                  "title": "Force",
                  "description": "If the tree item is not a button then the IA-Connect Agent will not attempt to press it. If you wish to attempt to press the element anyway, this should be set to True.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPPressButtonOnTreeItem"
      }
    },
    "/SAPGUI/SAPClickLinkOnTreeItem": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Click link on SAP tree item",
        "description": "Clicks a link on a SAP tree item. The specific node or item can be searched using one of either the node key, node path or node text. The key, path or text values can be determined by using the action 'Get SAP tree nodes'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPClickLinkOnTreeItem",
            "description": "Inputs for IA-Connect SAPClickLinkOnTreeItem action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchNodeKey": {
                  "type": "string",
                  "title": "Search node key",
                  "description": "The key of the node to be clicked. If you have provided a value for the key, you do not need to provide a value for the path or text."
                },
                "SearchNodePath": {
                  "type": "string",
                  "title": "Search node path",
                  "description": "The path of the node to be clicked. If you have provided a value for the path, you do not need to provide a value for the key or text."
                },
                "SearchNodeText": {
                  "type": "string",
                  "title": "Search node text",
                  "description": "The text of the node to be clicked. If you have provided a value for the text, you do not need to provide a value for the path or key."
                },
                "SearchNodeTextIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is regular expression",
                  "description": "If set to true, the search node text is treated as a regular expression. For example, ^S for a node that starts with S or P$ for a node that ends with P. If set to false (the default), the search node text is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchNodeTextIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is case sensitive",
                  "description": "Should the node text search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the node or item is within. If you have provided a column name, the column title is not required. This can be determined by using the action 'Get SAP tree column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the node or item is within. If you have provided a column title, the column name is not required. This can be determined by using the action 'Get SAP tree column headers' and provide the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Force": {
                  "type": "boolean",
                  "default": false,
                  "title": "Force",
                  "description": "If the tree item is not a clickable link then the IA-Connect Agent will not attempt to click it. If you wish to attempt to click the element anyway, this should be set to True.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPClickLinkOnTreeItem"
      }
    },
    "/SAPGUI/SAPCheckTreeItem": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Check SAP tree item",
        "description": "Checks a SAP tree item. The specific node or item can be searched using one of either the node key, node path or node text. The key, path or text values can be determined by using the action 'Get SAP tree nodes'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPCheckTreeItem",
            "description": "Inputs for IA-Connect SAPCheckTreeItem action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchNodeKey": {
                  "type": "string",
                  "title": "Search node key",
                  "description": "The key of the node to be clicked. If you have provided a value for the key, you do not need to provide a value for the path or text."
                },
                "SearchNodePath": {
                  "type": "string",
                  "title": "Search node path",
                  "description": "The path of the node to be clicked. If you have provided a value for the path, you do not need to provide a value for the key or text."
                },
                "SearchNodeText": {
                  "type": "string",
                  "title": "Search node text",
                  "description": "The text of the node to be clicked. If you have provided a value for the text, you do not need to provide a value for the path or key."
                },
                "SearchNodeTextIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is regular expression",
                  "description": "If set to true, the search node text is treated as a regular expression. For example, ^S for a node that starts with S or P$ for a node that ends with P. If set to false (the default), the search node text is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchNodeTextIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is case sensitive",
                  "description": "Should the node text search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the node or item is within. If you have provided a column name, the column title is not required. This can be determined by using the action 'Get SAP tree column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the node or item is within. If you have provided a column title, the column name is not required. This can be determined by using the action 'Get SAP tree column headers' and provide the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "CheckItem": {
                  "type": "boolean",
                  "default": true,
                  "title": "Check item",
                  "description": "If set to true then the tree node or item will be checked. If set to false, it will be unchecked."
                },
                "Force": {
                  "type": "boolean",
                  "default": false,
                  "title": "Force",
                  "description": "If the tree item is not a checkbox or radio button then the IA-Connect Agent will not attempt to check it. If you wish to attempt to check the element anyway, this should be set to True.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPCheckTreeItem"
      }
    },
    "/SAPGUI/SAPGetTreeColumnHeaders": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP tree column headers",
        "description": "Returns a list of column headers in a tree. The name or title of the column headers can be used for the 'Search column name' or 'Search column title' input in many SAP tree actions.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetTreeColumnHeaders",
            "description": "Inputs for IA-Connect SAPGetTreeColumnHeaders action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPTreeColumnHeadersJSON": {
                  "type": "string",
                  "title": "SAP tree column headers JSON",
                  "description": "A list of all tree column headers in the tree, in JSON format."
                },
                "NumberOfColumnHeaders": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of column headers",
                  "description": "The number of column headers in the tree."
                }
              }
            }
          }
        },
        "operationId": "SAPGetTreeColumnHeaders"
      }
    },
    "/SAPGUI/SAPGetTreeItemProperties": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP tree item properties",
        "description": "Returns the properties of a SAP tree item. The specific node or item can be searched using one of either the node key, node path or node text. The key, path or text values can be determined by using the action 'Get SAP tree nodes'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetTreeItemProperties",
            "description": "Inputs for IA-Connect SAPGetTreeItemProperties action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchNodeKey": {
                  "type": "string",
                  "title": "Search node key",
                  "description": "The key of the node to be clicked. If you have provided a value for the key, you do not need to provide a value for the path or text."
                },
                "SearchNodePath": {
                  "type": "string",
                  "title": "Search node path",
                  "description": "The path of the node to be clicked. If you have provided a value for the path, you do not need to provide a value for the key or text."
                },
                "SearchNodeText": {
                  "type": "string",
                  "title": "Search node text",
                  "description": "The text of the node to be clicked. If you have provided a value for the text, you do not need to provide a value for the path or key."
                },
                "SearchNodeTextIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is regular expression",
                  "description": "If set to true, the search node text is treated as a regular expression. For example, ^S for a node that starts with S or P$ for a node that ends with P. If set to false (the default), the search node text is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchNodeTextIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search node text is case sensitive",
                  "description": "Should the node text search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the node or item is within. If you have provided a column name, the column title is not required. This can be determined by using the action 'Get SAP tree column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the node or item is within. If you have provided a column title, the column name is not required. This can be determined by using the action 'Get SAP tree column headers' and provide the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ItemType": {
                  "type": "string",
                  "title": "Item type",
                  "description": "The type of the tree item, for example 'Text'."
                },
                "ItemTextValue": {
                  "type": "string",
                  "title": "Item text value",
                  "description": "The text value of the tree item."
                },
                "ItemEnabled": {
                  "type": "boolean",
                  "title": "Item is enabled",
                  "description": "Returns true if the tree item is enabled, or false if not."
                },
                "ItemHighlighted": {
                  "type": "boolean",
                  "title": "Item is highlighted",
                  "description": "Returns true if the tree item is highlighted, or false if not."
                },
                "ItemChecked": {
                  "type": "boolean",
                  "title": "Item is checked",
                  "description": "Returns true if the tree item is checked, or false if not."
                },
                "ItemVisible": {
                  "type": "boolean",
                  "title": "Item is visible",
                  "description": "Returns true if the tree item is visible, or false if not."
                },
                "ItemLeftEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Item left edge",
                  "description": "The distance in pixels between the left edge of the tree item and the left edge of the display."
                },
                "ItemTopEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Item top edge",
                  "description": "The distance in pixels between the top edge of the tree item and the top edge of the display."
                },
                "ItemWidth": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Item width",
                  "description": "The width of the tree item in pixels."
                },
                "ItemHeight": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Item height",
                  "description": "The height of the tree item in pixels."
                },
                "ItemRightEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Item right edge",
                  "description": "The distance in pixels between the right edge of the tree item and the right edge of the display."
                },
                "ItemBottomEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Item bottom edge",
                  "description": "The distance in pixels between the bottom edge of the tree item and the bottom edge of the display."
                },
                "ItemTextColourHex": {
                  "type": "string",
                  "title": "Item text colour hex",
                  "description": "A hex code representation of the text colour of the tree item."
                },
                "ItemStyle": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Item style",
                  "description": "The item style code."
                }
              }
            }
          }
        },
        "operationId": "SAPGetTreeItemProperties"
      }
    },
    "/SAPGUI/SAPGetShellToolbarElements": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP shell toolbar elements",
        "description": "Returns a list of elements (usually buttons) in a GuiShell toolbar.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetShellToolbarElements",
            "description": "Inputs for IA-Connect SAPGetShellToolbarElements action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfToolbarButtons": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of toolbar buttons",
                  "description": "The number of buttons in the toolbar."
                },
                "SAPShellToolbarElementsJSON": {
                  "type": "string",
                  "title": "SAP toolbar elements JSON",
                  "description": "A list of all elements in the toolbar, in JSON format."
                }
              }
            }
          }
        },
        "operationId": "SAPGetShellToolbarElements"
      }
    },
    "/SAPGUI/SAPPressShellToolbarElement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Press SAP shell toolbar element",
        "description": "Presses an SAP element (usually a button) in a toolbar. The specific element to press can be searched using one of either the element Id, the text value or the element index.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPPressShellToolbarElement",
            "description": "Inputs for IA-Connect SAPPressShellToolbarElement action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchToolbarElementId": {
                  "type": "string",
                  "title": "Search toolbar element Id",
                  "description": "The Id of the toolbar element to press. The list of Ids for the elements in a toolbar can be obtained using the action 'Get SAP shell toolbar elements'."
                },
                "SearchToolbarElementText": {
                  "type": "string",
                  "title": "Search toolbar element text",
                  "description": "The search text for an element in a toolbar to be pressed. The list of text values for the elements in a toolbar can be obtained using the action 'Get SAP shell toolbar elements'."
                },
                "SearchToolbarElementIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Search toolbar element index",
                  "description": "The index (starting at 1) of the toolbar element. The list of elements in a toolbar can be obtained using the action 'Get SAP shell toolbar elements'."
                },
                "SearchToolbarTextIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search toolbar element text is regular expression",
                  "description": "If set to true, the search toolbar text is treated as a regular expression. For example, ^S for a toolbar text that starts with S or P$ for a toolbar text that ends with P. If set to false (the default), the toolbar text is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchToolbarTextIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search toolbar element text is case sensitive",
                  "description": "Should the toolbar text search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPPressShellToolbarElement"
      }
    },
    "/SAPGUI/SAPPressShellToolbarElementContextButton": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Press SAP shell toolbar context button",
        "description": "Presses a context button on a SAP element in a toolbar. The specific element to press the context button on can be searched using one of either the element Id, the text value or the element index.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPPressShellToolbarElementContextButton",
            "description": "Inputs for IA-Connect SAPPressShellToolbarElementContextButton action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchToolbarElementId": {
                  "type": "string",
                  "title": "Search toolbar element Id",
                  "description": "The Id of the toolbar element to press the context button on. The list of Ids for the elements in a toolbar can be obtained using the action 'Get SAP shell toolbar elements'."
                },
                "SearchToolbarElementText": {
                  "type": "string",
                  "title": "Search toolbar element text",
                  "description": "The search text for an element in a toolbar to press the context button on. The list of text values for the elements in a toolbar can be obtained using the action 'Get SAP shell toolbar elements'."
                },
                "SearchToolbarElementIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Search toolbar element index",
                  "description": "The index (starting at 1) of the toolbar element to press the context button on. The list of elements in a toolbar can be obtained using the action 'Get SAP shell toolbar elements'."
                },
                "SearchToolbarTextIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search toolbar element text is regular expression",
                  "description": "If set to true, the search toolbar text is treated as a regular expression. For example, ^S for a toolbar text that starts with S or P$ for a toolbar text that ends with P. If set to false (the default), the toolbar text is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchToolbarTextIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search toolbar element text is case sensitive",
                  "description": "Should the toolbar text search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPPressShellToolbarElementContextButton"
      }
    },
    "/SAPGUI/SAPSelectShellToolbarMenuItem": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP shell toolbar menu item",
        "description": "Selects a menu item in a shell toolbar. The specific element to select can be searched using one of either the element Id, the text value or the element index.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSelectShellToolbarMenuItem",
            "description": "Inputs for IA-Connect SAPSelectShellToolbarMenuItem action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchToolbarElementId": {
                  "type": "string",
                  "title": "Search toolbar element Id",
                  "description": "The Id of the toolbar element to select. The list of Ids for the elements in a toolbar can be obtained using the action 'Get SAP shell toolbar elements'."
                },
                "SearchToolbarElementText": {
                  "type": "string",
                  "title": "Search toolbar element text",
                  "description": "The search text for an element in a toolbar to be selected. The list of text values for the elements in a toolbar can be obtained using the action 'Get SAP shell toolbar elements'."
                },
                "SearchToolbarElementIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Search toolbar element index",
                  "description": "The index (starting at 1) of the toolbar element to select. The list of elements in a toolbar can be obtained using the action 'Get SAP shell toolbar elements'."
                },
                "SearchToolbarTextIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search toolbar element text is regular expression",
                  "description": "If set to true, the search toolbar text is treated as a regular expression. For example, ^S for a toolbar text that starts with S or P$ for a toolbar text that ends with P. If set to false (the default), the toolbar text is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchToolbarTextIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search toolbar element text is case sensitive",
                  "description": "Should the toolbar text search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSelectShellToolbarMenuItem"
      }
    },
    "/SAPGUI/SAPGetSAPGridViewProperties": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP grid view properties",
        "description": "Returns the properties of an SAP grid view element. This is an element with an element type of 'GridView'.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetSAPGridViewProperties",
            "description": "Inputs for IA-Connect SAPGetSAPGridViewProperties action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfRows": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of rows",
                  "description": "The number of rows in the gridview."
                },
                "NumberOfVisibleRows": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of visible rows",
                  "description": "The number of visible rows in the grid view."
                },
                "FirstVisibleRowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "title": "First visible row index",
                  "description": "The index of the first visible row in the grid view."
                },
                "CurrentCellRowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Current cell row index",
                  "description": "The row index of the currently selected cell in the grid view."
                },
                "NumberOfColumns": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of columns",
                  "description": "The number of columns in the grid view."
                },
                "FirstVisibleColumnName": {
                  "type": "string",
                  "title": "First visible column name",
                  "description": "The internal name of the first visible column in the grid view."
                },
                "CurrentCellColumnName": {
                  "type": "string",
                  "title": "Current cell column name",
                  "description": "The internal column name of the currently selected cell in the grid view."
                },
                "NumberOfFrozenColumns": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of frozen columns",
                  "description": "The number of columns that are frozen in the grid view."
                },
                "NumberOfToolbarButtons": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of toolbar buttons",
                  "description": "The number of toolbar buttons in the gridview."
                },
                "SelectionMode": {
                  "type": "string",
                  "title": "Selection mode",
                  "description": "The selection mode of the grid view, for example RowsAndColumns."
                },
                "GridViewTitle": {
                  "type": "string",
                  "title": "Grid view title",
                  "description": "The title of the grid view. Some grid view elements may not have a title."
                }
              }
            }
          }
        },
        "operationId": "SAPGetSAPGridViewProperties"
      }
    },
    "/SAPGUI/SAPGetSAPGridViewCellContentsAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP grid view cell contents",
        "description": "Gets the contents of a grid view cell in the specified row and column within a grid view. Row index 1 represents the top row of cells in the grid view.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetSAPGridViewCellContentsAtIndex",
            "description": "Inputs for IA-Connect SAPGetSAPGridViewCellContentsAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the grid view cell, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "CellTextContents": {
                  "type": "string",
                  "title": "Cell text contents",
                  "description": "The text contents of the cell."
                },
                "CellIsChangeable": {
                  "type": "boolean",
                  "title": "Cell is changeable",
                  "description": "Returns true if the cell contents can be changed or false if not."
                },
                "CellType": {
                  "type": "string",
                  "title": "Cell type",
                  "description": "The type of the cell."
                },
                "CellIsChecked": {
                  "type": "boolean",
                  "title": "Cell is checked",
                  "description": "Returns true if the cell is checked or false if not."
                }
              }
            }
          }
        },
        "operationId": "SAPGetSAPGridViewCellContentsAtIndex"
      }
    },
    "/SAPGUI/SAPGetSAPGridViewCellPropertiesAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP grid view cell properties",
        "description": "Returns all properties of a grid view cell in the specified row and column within a grid view. Row index 1 represents the top row of cells in the grid view.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetSAPGridViewCellPropertiesAtIndex",
            "description": "Inputs for IA-Connect SAPGetSAPGridViewCellPropertiesAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the grid view cell, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "CellTextContents": {
                  "type": "string",
                  "title": "Cell text contents",
                  "description": "The text contents of the cell."
                },
                "CellIsChangeable": {
                  "type": "boolean",
                  "title": "Cell is changeable",
                  "description": "Returns true if the cell contents can be changed or false if not."
                },
                "CellType": {
                  "type": "string",
                  "title": "Cell type",
                  "description": "The type of the cell."
                },
                "CellIsChecked": {
                  "type": "boolean",
                  "title": "Cell is checked",
                  "description": "Returns true if the cell is checked or false if not."
                },
                "CellIsVisible": {
                  "type": "boolean",
                  "title": "Cell is visible",
                  "description": "Returns true if the cell is currently visible or false if not."
                },
                "LeftEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Cell left edge",
                  "description": "The distance in pixels between the left edge of the cell and the left edge of the display."
                },
                "TopEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Cell top edge",
                  "description": "The distance in pixels between the top edge of the cell and the top edge of the display."
                },
                "RightEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Cell right edge",
                  "description": "The distance in pixels between the right edge of the cell and the left edge of the display."
                },
                "BottomEdge": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Cell bottom edge",
                  "description": "The distance in pixels between the bottom edge of the cell and the top edge of the display."
                },
                "Width": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Cell width",
                  "description": "The width of the cell in pixels."
                },
                "Height": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Cell height",
                  "description": "The height of the cell in pixels."
                },
                "ClickablePointX": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Cell clickable point X",
                  "description": "The X coordinate of the centre of the cell."
                },
                "ClickablePointY": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Cell clickable point Y",
                  "description": "The Y coordinate of the centre of the cell."
                },
                "CellState": {
                  "type": "string",
                  "title": "Cell state",
                  "description": "The cell state."
                },
                "CellColour": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "title": "Cell colour",
                  "description": "The cell colour."
                },
                "CellColourInfo": {
                  "type": "string",
                  "title": "Cell colour info",
                  "description": "The cell colour represented as hex."
                },
                "CellIsLink": {
                  "type": "boolean",
                  "title": "Cell is link",
                  "description": "Returns true if the cell is a link or false if not."
                }
              }
            }
          }
        },
        "operationId": "SAPGetSAPGridViewCellPropertiesAtIndex"
      }
    },
    "/SAPGUI/SAPDrawRectangleAroundSAPGridViewCellAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Draw rectangle around SAP grid view cell",
        "description": "Draws a rectangle around the perimeter of an SAP grid view cell to aid in identifying that the cell found is the one required. The rectangle is automatically removed after 5 seconds.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPDrawRectangleAroundSAPGridViewCellAtIndex",
            "description": "Inputs for IA-Connect SAPDrawRectangleAroundSAPGridViewCellAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the grid view cell, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "PenColour": {
                  "type": "string",
                  "default": "#009FDE",
                  "title": "Pen colour",
                  "description": "The colour of the rectangle to be drawn (e.g. red, green, blue, yellow, purple or orange) or a string hex code e.g. #FF0000."
                },
                "PenThicknessPixels": {
                  "type": "integer",
                  "format": "int32",
                  "default": 4,
                  "title": "Pen thickness pixels",
                  "description": "The thickness (in pixels) of the highlight rectangle border."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPDrawRectangleAroundSAPGridViewCellAtIndex"
      }
    },
    "/SAPGUI/SAPGlobalLeftClickSAPGridViewCellAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Global left click SAP grid view cell",
        "description": "Moves the mouse to the centre of an SAP grid view cell and clicks the left mouse button.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGlobalLeftClickSAPGridViewCellAtIndex",
            "description": "Inputs for IA-Connect SAPGlobalLeftClickSAPGridViewCellAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the grid view cell, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "SetElementWindowTopMost": {
                  "type": "boolean",
                  "default": false,
                  "title": "Set element window topmost",
                  "description": "Should IA-Connect set the SAP window containing the element topmost (on top of all other windows) before interacting with it? This helps ensure that no other windows are in front but will not work if using published applications (for example with Citrix) because the topmost setting in the remote session does not impact the local session.",
                  "x-ms-visibility": "advanced"
                },
                "BringElementWindowToFront": {
                  "type": "boolean",
                  "default": false,
                  "title": "Bring element window to front",
                  "description": "Should IA-Connect bring the SAP window containing the element to the front before interacting with it? This helps ensure that no other windows are in front.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleWindow": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle window",
                  "description": "Should the window be toggled by attempting to focus or click it? This helps to ensure that the window is reliably brought to the foreground.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleUsesGlobalLeftMouseClickAgent": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle uses global left mouse click agent",
                  "description": "If choosing to toggle the window, this specifies whether to use global mouse clicks to focus the IA-Connect Agent first.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleDelay": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Toggle delay in seconds",
                  "description": "If choosing to toggle the window, this specifies the pause after toggling.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetX": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset X",
                  "description": "The number of X pixels to offset the click action by. This parameter supports both positive (right) and negative (left) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetY": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset Y",
                  "description": "The number of Y pixels to offset the click action by. This parameter supports both positive (down) and negative (up) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "OffsetRelativeTo": {
                  "type": "string",
                  "title": "Offset relative to",
				  "enum": [ "Center", "Left", "Right", "Top", "Bottom", "Top Left", "Top Right", "Bottom Left", "Bottom Right"],
                  "description": "The relative position of the element to offset from (Center / Centre / Middle, Left, Right, Top, Bottom, Top Left, Top Right, Bottom Left, Bottom Right).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPGlobalLeftClickSAPGridViewCellAtIndex"
      }
    },
    "/SAPGUI/SAPGlobalRightClickSAPGridViewCellAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Global right click SAP grid view cell",
        "description": "Moves the mouse to the centre of an SAP grid view cell and clicks the right mouse button.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGlobalRightClickSAPGridViewCellAtIndex",
            "description": "Inputs for IA-Connect SAPGlobalRightClickSAPGridViewCellAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the grid view cell, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "SetElementWindowTopMost": {
                  "type": "boolean",
                  "default": false,
                  "title": "Set element window topmost",
                  "description": "Should IA-Connect set the SAP window containing the element topmost (on top of all other windows) before interacting with it? This helps ensure that no other windows are in front but will not work if using published applications (for example with Citrix) because the topmost setting in the remote session does not impact the local session.",
                  "x-ms-visibility": "advanced"
                },
                "BringElementWindowToFront": {
                  "type": "boolean",
                  "default": false,
                  "title": "Bring element window to front",
                  "description": "Should IA-Connect bring the SAP window containing the element to the front before interacting with it? This helps ensure that no other windows are in front.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleWindow": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle window",
                  "description": "Should the window be toggled by attempting to focus or click it? This helps to ensure that the window is reliably brought to the foreground.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleUsesGlobalLeftMouseClickAgent": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle uses global left mouse click agent",
                  "description": "If choosing to toggle the window, this specifies whether to use global mouse clicks to focus the IA-Connect Agent first.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleDelay": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Toggle delay in seconds",
                  "description": "If choosing to toggle the window, this specifies the pause after toggling.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetX": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset X",
                  "description": "The number of X pixels to offset the click action by. This parameter supports both positive (right) and negative (left) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetY": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset Y",
                  "description": "The number of Y pixels to offset the click action by. This parameter supports both positive (down) and negative (up) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "OffsetRelativeTo": {
                  "type": "string",
                  "title": "Offset relative to",
				  "enum": [ "Center", "Left", "Right", "Top", "Bottom", "Top Left", "Top Right", "Bottom Left", "Bottom Right"],
                  "description": "The relative position of the element to offset from (Center / Centre / Middle, Left, Right, Top, Bottom, Top Left, Top Right, Bottom Left, Bottom Right).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPGlobalRightClickSAPGridViewCellAtIndex"
      }
    },
    "/SAPGUI/SAPGlobalDoubleLeftClickSAPGridViewCellAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Global double left click SAP grid view cell",
        "description": "Moves the mouse to the centre of an SAP grid view cell and double clicks the left mouse button.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGlobalDoubleLeftClickSAPGridViewCellAtIndex",
            "description": "Inputs for IA-Connect SAPGlobalDoubleLeftClickSAPGridViewCellAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the grid view cell, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "SetElementWindowTopMost": {
                  "type": "boolean",
                  "default": false,
                  "title": "Set element window topmost",
                  "description": "Should IA-Connect set the SAP window containing the element topmost (on top of all other windows) before interacting with it? This helps ensure that no other windows are in front but will not work if using published applications (for example with Citrix) because the topmost setting in the remote session does not impact the local session.",
                  "x-ms-visibility": "advanced"
                },
                "BringElementWindowToFront": {
                  "type": "boolean",
                  "default": false,
                  "title": "Bring element window to front",
                  "description": "Should IA-Connect bring the SAP window containing the element to the front before interacting with it? This helps ensure that no other windows are in front.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleWindow": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle window",
                  "description": "Should the window be toggled by attempting to focus or click it? This helps to ensure that the window is reliably brought to the foreground.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleUsesGlobalLeftMouseClickAgent": {
                  "type": "boolean",
                  "default": true,
                  "title": "Toggle uses global left mouse click agent",
                  "description": "If choosing to toggle the window, this specifies whether to use global mouse clicks to focus the IA-Connect Agent first.",
                  "x-ms-visibility": "advanced"
                },
                "ToggleDelay": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Toggle delay in seconds",
                  "description": "If choosing to toggle the window, this specifies the pause after toggling.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetX": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset X",
                  "description": "The number of X pixels to offset the click action by. This parameter supports both positive (right) and negative (left) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "ClickOffsetY": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Click offset Y",
                  "description": "The number of Y pixels to offset the click action by. This parameter supports both positive (down) and negative (up) offset values.",
                  "x-ms-visibility": "advanced"
                },
                "OffsetRelativeTo": {
                  "type": "string",
                  "title": "Offset relative to",
				  "enum": [ "Center", "Left", "Right", "Top", "Bottom", "Top Left", "Top Right", "Bottom Left", "Bottom Right"],
                  "description": "The relative position of the element to offset from (Center / Centre / Middle, Left, Right, Top, Bottom, Top Left, Top Right, Bottom Left, Bottom Right).",
                  "x-ms-visibility": "advanced"
                },
                "DoubleClickDelayInMilliseconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Double click delay in milliseconds",
                  "description": "The delay (in milliseconds) between each of the clicks."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPGlobalDoubleLeftClickSAPGridViewCellAtIndex"
      }
    },
    "/SAPGUI/SAPGetSAPGridViewColumnHeaders": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP grid view column headers",
        "description": "Returns a list of column headers in a grid view. The name or title of the column headers can be used for the 'Search column name' or 'Search column title' input in many SAP grid view actions.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetSAPGridViewColumnHeaders",
            "description": "Inputs for IA-Connect SAPGetSAPGridViewColumnHeaders action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPGridViewColumnHeadersJSON": {
                  "type": "string",
                  "title": "SAP grid view column headers JSON",
                  "description": "A list of all column headers in the grid view, in JSON format."
                },
                "NumberOfColumnHeaders": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of column headers",
                  "description": "The number of column headers in the grid view."
                }
              }
            }
          }
        },
        "operationId": "SAPGetSAPGridViewColumnHeaders"
      }
    },
    "/SAPGUI/SAPClickSAPGridViewCellAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Click SAP grid view cell",
        "description": "Clicks a grid view cell in the specified row and column within a grid view. Row index 1 represents the top row of cells in the grid view.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPClickSAPGridViewCellAtIndex",
            "description": "Inputs for IA-Connect SAPClickSAPGridViewCellAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the grid view cell, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPClickSAPGridViewCellAtIndex"
      }
    },
    "/SAPGUI/SAPDoubleClickSAPGridViewCellAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Double click SAP grid view cell",
        "description": "Double clicks a grid view cell in the specified row and column within a grid view. Row index 1 represents the top row of cells in the grid view.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPDoubleClickSAPGridViewCellAtIndex",
            "description": "Inputs for IA-Connect SAPDoubleClickSAPGridViewCellAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the grid view cell, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPDoubleClickSAPGridViewCellAtIndex"
      }
    },
    "/SAPGUI/SAPPressSAPGridViewCellButtonAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Press SAP grid view cell button",
        "description": "Presses a button in a grid view cell at the specified row and column within a grid view. Row index 1 represents the top row of cells in the grid view.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPPressSAPGridViewCellButtonAtIndex",
            "description": "Inputs for IA-Connect SAPPressSAPGridViewCellButtonAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the grid view cell, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPPressSAPGridViewCellButtonAtIndex"
      }
    },
    "/SAPGUI/SAPCheckSAPGridViewCellCheckboxAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Check SAP grid view cell checkbox",
        "description": "Check or uncheck a checkbox in a grid view cell at the specified row and column within a grid view. Row index 1 represents the top row of cells in the grid view.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPCheckSAPGridViewCellCheckboxAtIndex",
            "description": "Inputs for IA-Connect SAPCheckSAPGridViewCellCheckboxAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the grid view cell, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "CheckCellElement": {
                  "type": "boolean",
                  "default": true,
                  "title": "Check cell element",
                  "description": "If set to true then the grid view cell will be checked. If set to false, it will be unchecked."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPCheckSAPGridViewCellCheckboxAtIndex"
      }
    },
    "/SAPGUI/SAPModifySAPGridViewCellAtIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Modify SAP grid view cell value",
        "description": "Modifies the contents of a grid view cell at the specified row and column within a grid view. Row index 1 represents the top row of cells in the grid view.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPModifySAPGridViewCellAtIndex",
            "description": "Inputs for IA-Connect SAPModifySAPGridViewCellAtIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the grid view cell, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "NewValue": {
                  "type": "string",
                  "title": "New value",
                  "description": "The value to input."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "NewValue",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ModifiedValue": {
                  "type": "string",
                  "title": "Modified value",
                  "description": "The contents of the cell after it has been modified."
                }
              }
            }
          }
        },
        "operationId": "SAPModifySAPGridViewCellAtIndex"
      }
    },
    "/SAPGUI/SAPSetSAPGridViewCurrentRow": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set SAP grid view current row index",
        "description": "Sets the current row index within a grid view. The current column will remain unchanged.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSetSAPGridViewCurrentRow",
            "description": "Inputs for IA-Connect SAPSetSAPGridViewCurrentRow action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the current row to set in the grid view, starting from 1."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSetSAPGridViewCurrentRow"
      }
    },
    "/SAPGUI/SAPPressSAPGridViewColumnHeader": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Press SAP grid view column header",
        "description": "Presses a column header in a SAP grid view.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPPressSAPGridViewColumnHeader",
            "description": "Inputs for IA-Connect SAPPressSAPGridViewColumnHeader action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column to press in the grid view. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column to press in the grid view. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPPressSAPGridViewColumnHeader"
      }
    },
    "/SAPGUI/SAPSetSAPGridViewFirstVisibleRow": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set SAP grid view first visible row index",
        "description": "Scrolls a SAP grid view until the specified row index (starting at 1) is the first visible row. If you set a row index higher than the number of rows in the grid view then it will scroll down as far as possible.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSetSAPGridViewFirstVisibleRow",
            "description": "Inputs for IA-Connect SAPSetSAPGridViewFirstVisibleRow action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "FirstVisibleRowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "First visible row index",
                  "description": "The index of the row to make the first visible row in the grid view. Starts at 1."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "FirstVisibleRowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActualFirstVisibleRowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Actual first visible row index",
                  "description": "The index of the first visible row. If you provided a 'First visible row index' value that was greater than the number of rows in the grid view, this output will tell you how far the grid view was scrolled."
                }
              }
            }
          }
        },
        "operationId": "SAPSetSAPGridViewFirstVisibleRow"
      }
    },
    "/SAPGUI/SAPSelectSAPGridViewRow": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP grid view row",
        "description": "Selects a single SAP row in a grid view. If a different row or rows are currently selected, they will become deselected.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSelectSAPGridViewRow",
            "description": "Inputs for IA-Connect SAPSelectSAPGridViewRow action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the row to be selected, starting from 1."
                },
                "SetAsCurrentRow": {
                  "type": "boolean",
                  "default": true,
                  "title": "Set as current row",
                  "description": "If set to true then this row will also be set as the current row. If set to false, the current row will remain unchanged."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSelectSAPGridViewRow"
      }
    },
    "/SAPGUI/SAPSelectSAPGridViewMultipleRows": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP grid view multiple rows",
        "description": "Selects multiple SAP rows in a grid view. If a different row or rows are currently selected, they will become deselected.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSelectSAPGridViewMultipleRows",
            "description": "Inputs for IA-Connect SAPSelectSAPGridViewMultipleRows action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowsToSelect": {
                  "type": "string",
                  "title": "Rows to select",
                  "description": "The row indexes of the row to be selected, starting from 1. These can be provided either as individual rows (for example 1,3,7) or ranges (for example 1-2,5,7-9)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowsToSelect",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSelectSAPGridViewMultipleRows"
      }
    },
    "/SAPGUI/SAPSetSAPGridViewCurrentColumn": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set SAP grid view current column",
        "description": "Sets the current column within a grid view. The current row will remain unchanged.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSetSAPGridViewCurrentColumn",
            "description": "Inputs for IA-Connect SAPSetSAPGridViewCurrentColumn action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column to set as the current column in the grid view. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column to set as the current column in the grid view. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSetSAPGridViewCurrentColumn"
      }
    },
    "/SAPGUI/SAPSetSAPGridViewCurrentCell": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set SAP grid view current cell",
        "description": "Sets the current cell in a grid view to the cell at the specified row and column. Row index 1 represents the top row of cells in the grid view.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSetSAPGridViewCurrentCell",
            "description": "Inputs for IA-Connect SAPSetSAPGridViewCurrentCell action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the grid view cell, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column that the cell is within. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSetSAPGridViewCurrentCell"
      }
    },
    "/SAPGUI/SAPSelectSAPGridViewColumn": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP grid view column",
        "description": "Selects a single SAP column in a grid view. If a different column or columns are currently selected, they will remain selected unless the 'Clear selection first' parameter is set to true.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSelectSAPGridViewColumn",
            "description": "Inputs for IA-Connect SAPSelectSAPGridViewColumn action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column to be selected in the grid view. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column to be selected in the grid view. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "SelectColumn": {
                  "type": "boolean",
                  "default": true,
                  "title": "Select column",
                  "description": "If set to true, the specified column will be selected. If set to false, the column will be deselected."
                },
                "SetAsCurrentColumn": {
                  "type": "boolean",
                  "default": false,
                  "title": "Set as current column",
                  "description": "If set to true then this column will also be set as the current column. If set to false, the current column will remain unchanged."
                },
                "ClearSelectionFirst": {
                  "type": "boolean",
                  "default": false,
                  "title": "Clear selection first",
                  "description": "If set to true, the entire grid view will be deselected before selecting the chosen column."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSelectSAPGridViewColumn"
      }
    },
    "/SAPGUI/SAPGridViewSelectAll": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select all on SAP grid view",
        "description": "Selects everything in a SAP grid view.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGridViewSelectAll",
            "description": "Inputs for IA-Connect SAPGridViewSelectAll action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPGridViewSelectAll"
      }
    },
    "/SAPGUI/SAPGridViewDeselectAll": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Deselect all on SAP grid view",
        "description": "Deselects everything in a SAP grid view.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGridViewDeselectAll",
            "description": "Inputs for IA-Connect SAPGridViewDeselectAll action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPGridViewDeselectAll"
      }
    },
    "/SAPGUI/SAPSetSAPGridViewFirstVisibleColumn": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set SAP grid view first visible column",
        "description": "Scrolls a SAP grid view until the specified column is the first visible column.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSetSAPGridViewFirstVisibleColumn",
            "description": "Inputs for IA-Connect SAPSetSAPGridViewFirstVisibleColumn action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column to set as the first visible column in the grid view. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column to set as the first visible column in the grid view. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActualFirstVisibleColumnName": {
                  "type": "string",
                  "title": "Actual first visible column name",
                  "description": "The name of the first visible column that was set."
                }
              }
            }
          }
        },
        "operationId": "SAPSetSAPGridViewFirstVisibleColumn"
      }
    },
    "/SAPGUI/SAPGridViewOpenContextMenu": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Open SAP grid view context menu",
        "description": "Opens the SAP grid view context menu.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGridViewOpenContextMenu",
            "description": "Inputs for IA-Connect SAPGridViewOpenContextMenu action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "RowIndex": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Row index",
                  "description": "The row index of the row to open the SAP grid view context menu on, starting from 1."
                },
                "SearchColumnName": {
                  "type": "string",
                  "title": "Search column name",
                  "description": "The internal name of the column to open the SAP grid view context menu on in the grid view. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "SearchColumnTitle": {
                  "type": "string",
                  "title": "Search column title",
                  "description": "The title of the column to open the SAP grid view context menu on in the grid view. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "SearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "SearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "RowIndex",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPGridViewOpenContextMenu"
      }
    },
    "/SAPGUI/SAPGetGridViewTextContents": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get SAP grid view text contents",
        "description": "Returns all the text contents of a SAP grid view.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPGetGridViewTextContents",
            "description": "Inputs for IA-Connect SAPGetGridViewTextContents action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "FirstRowToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "First row to return",
                  "description": "The row index of the first grid view row to return, starting from 1.",
                  "x-ms-visibility": "advanced"
                },
                "MaxRowsToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Max rows to return",
                  "description": "The maximum number of rows to return, or 0 to return all rows."
                },
                "FirstSearchColumnName": {
                  "type": "string",
                  "title": "First search column name",
                  "description": "The internal name of the first column to read from. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnName' column."
                },
                "FirstSearchColumnTitle": {
                  "type": "string",
                  "title": "First search column title",
                  "description": "The title of the first column to read from. This can be determined by using the action 'Get SAP grid view column headers' and providing the values shown in the 'ColumnTitle' column."
                },
                "FirstSearchColumnTitleIsRegularExpression": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is regular expression",
                  "description": "If set to true, the first search column title is treated as a regular expression. For example, ^S for a column title that starts with S or P$ for a column title that ends with P. If set to false (the default), the column title is treated as an exact match.",
                  "x-ms-visibility": "advanced"
                },
                "FirstSearchColumnTitleIsCaseSensitive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Search column title is case sensitive",
                  "description": "Should the first column title search be case sensitive?",
                  "x-ms-visibility": "advanced"
                },
                "MaxColumnsToReturn": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "title": "Max columns to return",
                  "description": "The maximum number of columns to return, or 0 to return all columns."
                },
                "UseColumnHeadersFromTable": {
                  "type": "boolean",
                  "default": true,
                  "title": "Use column headers from grid view",
                  "description": "If set to true then the IA-Connect Agent will attempt to setup the returned columns to match the column names in the SAP grid view."
                },
                "ReturnRowIndexInOutputCollection": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return row index in output collection",
                  "description": "If set to true then the IA-Connect Agent will return the row index in the output collection as an additional column. This is useful if you plan to filter the data since you will be able to track which row this originally came from. By default, the column name for the row index will be '_Row_index_' but you can change it by providing an alternative value in the input 'Name of column to store row index'.",
                  "x-ms-visibility": "advanced"
                },
                "NameOfColumnToStoreRowIndex": {
                  "type": "string",
                  "title": "Name of column to store row index",
                  "description": "If 'Return row index in output collection' is set to true then you can override the default column name of '_Row_Index' by providing an alternative value here.",
                  "x-ms-visibility": "advanced"
                },
                "CheckedElementValue": {
                  "type": "string",
                  "default": "True",
                  "title": "Checked element value",
                  "description": "For GuiRadioBox or GuiCheckBox elements contained within the grid view, what value should be returned if they are selected / checked? By default, this is 'True' (as text).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SAPGridViewTextContentsJSON": {
                  "type": "string",
                  "title": "SAP grid view text contents JSON",
                  "description": "The text contents of all the cells in the grid view, in JSON format."
                },
                "NumberOfRowsReturned": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of rows returned",
                  "description": "The number of rows returned. This may be limited by the 'First visible row to return' or 'Max rows to return' inputs."
                },
                "NumberOfColumnsReturned": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of columns returned",
                  "description": "The number of columns returned. This may be limited by the 'First visible column to return' or 'Max columns to return' inputs."
                }
              }
            }
          }
        },
        "operationId": "SAPGetGridViewTextContents"
      }
    },
    "/SAPGUI/SAPSelectCalendarMonth": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP calendar month",
        "description": "Selects the specified month (1 to 12) in the specified year in a SAP calendar element. The month is selected in addition to any existing selection.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSelectCalendarMonth",
            "description": "Inputs for IA-Connect SAPSelectCalendarMonth action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Month": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Month",
                  "description": "The month (from 1 to 12) to be selected."
                },
                "Year": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Year",
                  "description": "The year to be selected."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Month",
                "Year",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSelectCalendarMonth"
      }
    },
    "/SAPGUI/SAPSelectCalendarWeek": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP calendar week",
        "description": "Selects the specified week (starting at 1) in the specified year in a SAP calendar element. The week is selected in addition to any existing selection.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSelectCalendarWeek",
            "description": "Inputs for IA-Connect SAPSelectCalendarWeek action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "Week": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Week",
                  "description": "The week (from 1 to 52) to be selected."
                },
                "Year": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Year",
                  "description": "The year to be selected."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "Week",
                "Year",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSelectCalendarWeek"
      }
    },
    "/SAPGUI/SAPSelectCalendarRange": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Select SAP calendar date range",
        "description": "Selects the specified date range (from YYYYMMDD to YYYYMMDD) in a SAP calendar element. This selection replaces any existing date selections.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPSelectCalendarRange",
            "description": "Inputs for IA-Connect SAPSelectCalendarRange action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "FromDateYYYYMMDD": {
                  "type": "string",
                  "title": "From date",
                  "description": "The start date of the selection, in the format YYYYMMDD."
                },
                "ToDateYYYYMMDD": {
                  "type": "string",
                  "title": "To date",
                  "description": "The end date of the selection, in the format YYYYMMDD."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "FromDateYYYYMMDD",
                "ToDateYYYYMMDD",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPSelectCalendarRange"
      }
    },
    "/SAPGUI/SAPFocusCalendarDate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Focus SAP calendar date",
        "description": "Focusses the specified calendar date (YYYYMMDD) in a SAP calendar element.",
        "parameters": [
          {
            "in": "body",
            "name": "SAPFocusCalendarDate",
            "description": "Inputs for IA-Connect SAPFocusCalendarDate action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchSAPElementId": {
                  "type": "string",
                  "title": "Search SAP element Id",
                  "description": "The SAP element ID of the element to interact with. This can be discovered via Inspection."
                },
                "DateYYYYMMDD": {
                  "type": "string",
                  "title": "Date",
                  "description": "The date to be focussed, in the format YYYYMMDD."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SearchSAPElementId",
                "DateYYYYMMDD",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SAPFocusCalendarDate"
      }
    }
  },
  "definitions": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "RESTAPIKey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}