{
  "swagger": "2.0",
  "info": {
    "title": "Revelation helpdesk",
    "description": "The Revelation helpdesk connector allows you to create and update items in your helpdesk such as tickets, clients, users and assets by connecting to the Revelation helpdesk API using OAuth authentication. You can also take advantage of the extensive list of triggers allowing you to integrate your business processes based on events that occur in Revelation helpdesk",
    "version": "1.0.0",
    "termsOfService": "https://revelationhelpdesk.com/termsofuse",
    "contact": {
      "name": "Yellowfish Support",
      "url": "https://revelationhelpdesk.com",
      "email": "support@yellowfishsoftware.com"
    }
  },
  "host": "cloud.revelationhelpdesk.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://revelationhelpdesk.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://revelationhelpdesk.com/privacypolicy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "IT Operations;Productivity"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "text/plain",
    "application/json"
  ],
  "paths": {
    "/Project": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Gets a list of Projects",
        "description": "Gets a list of Projects for a Client in Revelation helpdesk",
        "operationId": "GetProjects",
        "parameters": [
          {
            "x-ms-summary": "Client",
            "description": "Client",
            "in": "query",
            "name": "companyId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Project/Template": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get a list of Project Templates",
        "description": "Gets a list of Project Templates in Revelation helpdesk",
        "operationId": "GetProjectTemplates",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "template_name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get Contact list",
        "description": "Gets a list of Contacts in Revelation helpdesk",
        "operationId": "GetUsers",
        "parameters": [
          {
            "in": "query",
            "x-ms-summary": "Company",
            "description": "Company",
            "name": "companyId",
            "type": "integer",
            "format": "int32",
            "x-ms-dynamic-values": {
              "operationId": "GetClients",
              "value-path": "id",
              "value-title": "company_Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Create a new User",
        "operationId": "CreateUser",
        "summary": "Create User",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ContactEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactResponseEntity"
            }
          }
        }
      }
    },
    "/User/Staff": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get Staff list",
        "description": "Gets a list of active Staff in Revelation helpdesk",
        "operationId": "GetStaff",
        "parameters": [
          {
            "x-ms-summary": "Include Queues",
            "description": "Include Queues",
            "in": "query",
            "name": "includeQueues",
            "type": "boolean",
            "default": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/User/AccessLevel": {
      "get": {
        "tags": [
          "Access"
        ],
        "summary": "Get Access Level list",
        "description": "Gets a list of Access Levels in Revelation helpdesk",
        "operationId": "GetAccessLevels",
        "parameters": [
          {
            "x-ms-summary": "Access level type",
            "description": "0 = External, 1 = Internal, 2 = Both",
            "in": "query",
            "name": "typeId",
            "type": "integer",
            "default": "2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessLevelEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/User/Team": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get Team list",
        "description": "Gets a list of Teams in Revelation helpdesk",
        "operationId": "GetTeams",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/User/Country": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get Country list",
        "description": "Gets a list of Countries in Revelation helpdesk",
        "operationId": "GetCountries",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CountryEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/User/State": {
      "get": {
        "tags": [
          "State"
        ],
        "summary": "Get State list",
        "description": "Gets a list of States in Revelation helpdesk",
        "operationId": "GetStates",
        "parameters": [
          {
            "in": "query",
            "x-ms-summary": "Country",
            "description": "Country",
            "name": "countryId",
            "type": "integer",
            "format": "int32",
            "default": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/User/Type": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "GetUserTypes",
        "summary": "Gets a list of User types",
        "description": "Gets a list of User Types in Revelation helpdesk",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Int32StringTuple"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/User/Role": {
      "get": {
        "tags": [
          "State"
        ],
        "summary": "Get Roles",
        "description": "Gets a list of Roles in Revelation helpdesk",
        "operationId": "GetRoles",
        "parameters": [
          {
            "in": "query",
            "x-ms-summary": "Type",
            "description": "Type",
            "name": "typeId",
            "type": "integer",
            "format": "int32",
            "default": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/User/Find": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Find a single User in Revelation helpdesk",
        "operationId": "FindUser",
        "summary": "Find a user",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ContactSearchInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactResponseEntity"
            }
          }
        }
      }
    },
    "/Client": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get Client list",
        "description": "Gets a list of Clients in Revelation helpdesk",
        "operationId": "GetClients",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      },
      "post": {
        "responses": {
          "500": {
            "description": "Error",
            "schema": {
              "type": "string"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClientResponseEntity"
            }
          }
        },
        "summary": "Create Client",
        "description": "Create a new Client (Company) in Revelation helpdesk",
        "operationId": "CreateClient",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ClientEntity"
            }
          }
        ]
      }
    },
    "/Client/Type": {
      "get": {
        "tags": [
          "Client Type"
        ],
        "summary": "Get Client Type list",
        "description": "Gets a list of Client Types in Revelation helpdesk",
        "operationId": "GetClientTypes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientTypeEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Client/ByType/{clientTypeId}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get Client list by type",
        "description": "Gets a list of Clients by Type in Revelation helpdesk",
        "operationId": "GetClientsByType",
        "parameters": [
          {
            "x-ms-summary": "Client Type Id",
            "description": "Client Type",
            "in": "path",
            "name": "clientTypeId",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Office/{Id}": {
      "get": {
        "tags": [
          "Office"
        ],
        "summary": "Get a Office",
        "description": "Get an existing Office in Revelation helpdesk",
        "operationId": "GetOffice",
        "parameters": [
          {
            "x-ms-summary": "Id",
            "description": "Id",
            "in": "path",
            "name": "Id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-url-encoding": "single"
          }
        ],
        "x-ms-visibility": "internal",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OfficeEntity"
              }
            }
          }
        }
      }
    },
    "/Office": {
      "get": {
        "tags": [
          "Office"
        ],
        "summary": "Get Office list",
        "description": "Get a list of Offices in Revelation helpdesk",
        "operationId": "GetOffices",
        "parameters": [
          {
            "x-ms-summary": "Company Id",
            "description": "Company Id",
            "in": "query",
            "name": "companyId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "x-ms-visibility": "internal",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OfficeResponseEntity"
              }
            }
          }
        }
      },
      "post": {
        "responses": {
          "500": {
            "description": "Error",
            "schema": {
              "type": "string"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OfficeResponseEntity"
            }
          }
        },
        "summary": "Create Office",
        "description": "Create a new Office in Revelation helpdesk",
        "operationId": "CreateOffice",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OfficeEntity"
            }
          }
        ]
      }
    },
    "/Asset": {
      "get": {
        "tags": [
          "Asset"
        ],
        "description": "Gets a list of Assets by Client / Location or User ID",
        "operationId": "GetAssets",
        "summary": "Gets a list of Assets",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "x-ms-summary": "Client",
            "in": "query",
            "name": "companyId",
            "description": "Client",
            "type": "integer",
            "format": "int32",
            "x-ms-dynamic-values": {
              "operationId": "GetClients",
              "value-path": "id",
              "value-title": "company_Name"
            }
          },
          {
            "x-ms-summary": "Location",
            "in": "query",
            "name": "locationId",
            "description": "Location",
            "type": "integer",
            "format": "int32"
          },
          {
            "x-ms-summary": "User",
            "in": "query",
            "name": "contactId",
            "description": "User",
            "type": "integer",
            "format": "int32"
          }
        ],
        "x-ms-visibility": "internal",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetEntity"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Asset"
        ],
        "description": "Create a new Asset",
        "operationId": "CreateAsset",
        "summary": "Create Asset",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AssetEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssetResponseEntity"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Asset"
        ],
        "description": "Update an existing Asset",
        "operationId": "UpdateAsset",
        "summary": "Update Asset",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AssetUpdateEntity"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/Asset/Device": {
      "get": {
        "tags": [
          "Asset"
        ],
        "summary": "Get Device list",
        "description": "Gets a list of active Asset Devices in Revelation helpdesk",
        "operationId": "GetDevice",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeviceEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Asset/Manufacturer": {
      "get": {
        "tags": [
          "Asset"
        ],
        "summary": "Get Manufacturer list",
        "description": "Gets a list of active Asset Manufacturers in Revelation helpdesk",
        "operationId": "GetManufacturers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManufEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Asset/Model": {
      "get": {
        "tags": [
          "Asset"
        ],
        "summary": "Get Model list",
        "description": "Gets a list of active Asset Model in Revelation helpdesk",
        "operationId": "GetModels",
        "parameters": [
          {
            "x-ms-summary": "Manufacturer Id",
            "description": "Manufacturer Id",
            "in": "query",
            "name": "manufId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModelEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Asset/Processor": {
      "get": {
        "tags": [
          "Asset"
        ],
        "summary": "Get Processor list",
        "description": "Gets a list of active Asset Processor in Revelation helpdesk",
        "operationId": "GetProcessors",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessorEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Asset/OS": {
      "get": {
        "tags": [
          "Asset"
        ],
        "summary": "Get OS list",
        "description": "Gets a list of active Asset OS in Revelation helpdesk",
        "operationId": "GetOSlist",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OSEntity"
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Asset/Field": {
      "get": {
        "tags": [
          "Asset"
        ],
        "x-ms-visibility": "internal",
        "operationId": "GetAssetFields",
        "description": "Get a list of assets fields to search by",
        "summary": "Get a list of assets fields to search by",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetFieldEntity"
              }
            }
          }
        }
      }
    },
    "/Asset/Search": {
      "post": {
        "tags": [
          "Asset"
        ],
        "description": "Search for existing Assets in Revelation helpdesk",
        "operationId": "SearchAsset",
        "summary": "Search for Assets",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AssetSearchInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetResponseEntity"
              }
            }
          }
        }
      }
    },
    "/Asset/{id}": {
      "get": {
        "tags": [
          "Asset"
        ],
        "description": "Get an existing Asset in Revelation helpdesk",
        "operationId": "GetAsset",
        "summary": "Get an existing Asset",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "x-ms-summary": "Asset Id",
            "description": "Asset Id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssetEntity"
            }
          }
        }
      }
    },
    "/Ticket/{id}": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "description": "Get an existing Ticket by ID in Revelation helpdesk",
        "operationId": "GetTicket",
        "summary": "Get an existing Ticket",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "x-ms-summary": "Ticket #",
            "description": "Ticket #",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TicketResponseEntity"
            }
          }
        }
      }
    },
    "/Ticket/Status": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "description": "Gets a list of Ticket statuses",
        "operationId": "GetStatusList",
        "summary": "Gets a list of Ticket statuses",
        "parameters": [
          {
            "x-ms-summary": "Status Type",
            "description": "Status Type",
            "in": "query",
            "name": "statusTypeId",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "call_Status": {
                    "description": "Status Name",
                    "x-ms-summary": "Status Name",
                    "type": "string"
                  },
                  "status_Abbrev": {
                    "description": "Status Abbreviation",
                    "x-ms-summary": "Status Abbreviation",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Ticket": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "description": "Log a new Ticket in Revelation helpdesk",
        "operationId": "LogTicket",
        "summary": "Log a new Ticket",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TicketEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TicketResponseEntity"
            }
          }
        }
      }
    },
    "/Ticket/Action/Type": {
      "get": {
        "tags": [
          "Action"
        ],
        "description": "Get a list of action types",
        "operationId": "GetActionTypes",
        "summary": "Get a list of action typest",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "x-ms-visibility": "internal",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Ticket/Status/Type": {
      "get": {
        "tags": [
          "Status"
        ],
        "description": "Get a list of status types",
        "operationId": "GetStatusTypes",
        "summary": "Get a list of status types",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "x-ms-visibility": "internal",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Ticket/Type": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "description": "Get a list of Ticket types",
        "operationId": "GetTicketTypes",
        "summary": "Get a list of Ticket types",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentTypeId",
            "x-ms-summary": "Parent Type Id",
            "description": "Parent Type Id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "x-ms-visibility": "internal",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "format": "int32",
                  "type": "integer"
                },
                "Call_Type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ticket"
        ],
        "operationId": "SetTicketType",
        "summary": "Set Ticket Type",
        "description": "Sets the Ticket Type of an existing Ticket",
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CallTypeInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Ticket/Action": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "description": "Add an action to an existing ticket in Revelation helpdesk",
        "operationId": "AddAction",
        "summary": "Add an action",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ActionInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Ticket/Reassign": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "description": "Reassign a ticket in Revelation helpdesk",
        "operationId": "Reassign",
        "summary": "Reassign a Ticket",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ReassignInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Ticket/SetStatus": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "description": "Change the Status of a Ticket in Revelation helpdesk",
        "operationId": "SetStatus",
        "summary": "Set Ticket Status",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SetStatusInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Ticket/PrioritySet": {
      "get": {
        "tags": [
          "Priority"
        ],
        "x-ms-visibility": "internal",
        "summary": "Gets a list of Priorities",
        "operationId": "GetPrioritySets",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrioritySetEntity"
              }
            }
          }
        }
      }
    },
    "/Ticket/Priority": {
      "get": {
        "tags": [
          "Priority"
        ],
        "x-ms-visibility": "internal",
        "summary": "Get a list of Priority Sets",
        "description": "Get a list of Priority Sets",
        "operationId": "GetPriorities",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "prioritySetId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PriorityEntity"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ticket"
        ],
        "operationId": "SetPriority",
        "summary": "Set Ticket Priority",
        "description": "Set the Priority of an existing Ticket",
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PriorityInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Ticket/Schema": {
      "get": {
        "tags": [
          "DynamicSchemas"
        ],
        "summary": "GetTicketSchema",
        "description": "Get Ticket Schema",
        "operationId": "GetTicketSchema",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Client/Schema": {
      "get": {
        "tags": [
          "DynamicSchemas"
        ],
        "summary": "GetClientSchema",
        "operationId": "GetClientSchema",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden: You do not have pemission to access this resource.",
            "schema": {
              "type": "string"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Asset/Schema": {
      "get": {
        "tags": [
          "DynamicSchemas"
        ],
        "summary": "GetAssetSchema",
        "operationId": "GetAssetSchema",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/User/Schema": {
      "get": {
        "tags": [
          "DynamicSchemas"
        ],
        "summary": "Get Contact Schema",
        "description": "Get Contact Schema",
        "operationId": "GetUserSchema",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Office/Schema": {
      "get": {
        "tags": [
          "DynamicSchemas"
        ],
        "summary": "Get Office Schema",
        "description": "Get Office Schema",
        "operationId": "GetOfficeSchema",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Project/Schema": {
      "get": {
        "tags": [
          "DynamicSchemas"
        ],
        "summary": "Get Project Schema",
        "description": "Get Project Schema",
        "operationId": "GetProjectSchema",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/Webhook/Ticket/Created": {
      "post": {
        "description": "This operation is triggered when a Ticket is logged.",
        "operationId": "TicketLoggedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        },
        "summary": "When a Ticket is logged",
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for Ticket created Webhook",
        "schema": {
          "$ref": "#/definitions/TicketResponseEntity"
        }
      }
    },
    "/Webhook/Ticket/Updated": {
      "post": {
        "description": "This operation is triggered when a Ticket is updated (action added).",
        "summary": "When a Ticket is updated",
        "x-ms-trigger": "single",
        "operationId": "TicketUpdatedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }

      },
      "x-ms-notification-content": {
        "description": "Details for Ticket created Webhook",
        "schema": {
          "$ref": "#/definitions/ActionResponseEntity"
        }
      }
    },
    "/Webhook/Ticket/Deleted": {
      "post": {
        "description": "This operation is triggered when a Ticket is deleted",
        "summary": "When a Ticket is deleted",
        "x-ms-trigger": "single",
        "operationId": "TicketDeletedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }

      },
      "x-ms-notification-content": {
        "description": "Details for Ticket created Webhook",
        "schema": {
          "$ref": "#/definitions/TicketResponseEntity"
        }
      }
    },
    "/Webhook/Ticket/Closed": {
      "post": {
        "description": "This operation is triggered when a Ticket is closed",
        "summary": "When a Ticket is closed",
        "x-ms-trigger": "single",
        "operationId": "TicketClosedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }

      },
      "x-ms-notification-content": {
        "description": "Details for Ticket created Webhook",
        "schema": {
          "$ref": "#/definitions/TicketResponseEntity"
        }
      }
    },
    "/Webhook/Ticket/Reopened": {
      "post": {
        "description": "This operation is triggered when a Ticket is reopened",
        "summary": "When a Ticket is reopened",
        "x-ms-trigger": "single",
        "operationId": "TicketReopenedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }

      },
      "x-ms-notification-content": {
        "description": "Details for Ticket created Webhook",
        "schema": {
          "$ref": "#/definitions/TicketResponseEntity"
        }
      }
    },
    "/Webhook/Ticket/Atrisk": {
      "post": {
        "description": "This operation is triggered when a Ticket is at risk",
        "summary": "When a Ticket is at risk",
        "x-ms-trigger": "single",
        "operationId": "TicketAtRiskWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }

      },
      "x-ms-notification-content": {
        "description": "Details for Ticket created Webhook",
        "schema": {
          "$ref": "#/definitions/TicketResponseEntity"
        }
      }
    },
    "/Webhook/Ticket/Due": {
      "post": {
        "description": "This operation is triggered when a Ticket is due",
        "summary": "When a Ticket is due",
        "x-ms-trigger": "single",
        "operationId": "TicketDueWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }

      },
      "x-ms-notification-content": {
        "description": "Details for Ticket created Webhook",
        "schema": {
          "$ref": "#/definitions/TicketResponseEntity"
        }
      }
    },
    "/Webhook/Client/Created": {
      "post": {
        "description": "This operation is triggered when a Client is created",
        "summary": "When a Client is created",
        "x-ms-trigger": "single",
        "operationId": "ClientCreatedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }
      },
      "x-ms-notification-content": {
        "description": "Details for Client created Webhook",
        "schema": {
          "$ref": "#/definitions/ClientResponseEntity"
        }
      }
    },
    "/Webhook/Client/Updated": {
      "post": {
        "description": "This operation is triggered when a Client is updated",
        "summary": "When a Client is updated",
        "x-ms-trigger": "single",
        "operationId": "ClientUpdatedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }
      },
      "x-ms-notification-content": {
        "description": "Details for Client updated Webhook",
        "schema": {
          "$ref": "#/definitions/ClientResponseEntity"
        }
      }
    },
    "/Webhook/Office/Created": {
      "post": {
        "description": "This operation is triggered when an Office is created",
        "summary": "When a Office is created",
        "x-ms-trigger": "single",
        "operationId": "OfficeCreatedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }
      },
      "x-ms-notification-content": {
        "description": "Details for Office created Webhook",
        "schema": {
          "$ref": "#/definitions/OfficeResponseEntity"
        }
      }
    },
    "/Webhook/Office/Updated": {
      "post": {
        "description": "This operation is triggered when an Office is updated",
        "summary": "When a Office is updated",
        "x-ms-trigger": "single",
        "operationId": "OfficeUpdatedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }
      },
      "x-ms-notification-content": {
        "description": "Details for Office updated Webhook",
        "schema": {
          "$ref": "#/definitions/OfficeResponseEntity"
        }
      }
    },
    "/Webhook/User/Created": {
      "post": {
        "description": "This operation is triggered when an User is created",
        "summary": "When a User is created",
        "x-ms-trigger": "single",
        "operationId": "UserCreatedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }
      },
      "x-ms-notification-content": {
        "description": "Details for User created Webhook",
        "schema": {
          "$ref": "#/definitions/ContactResponseEntity"
        }
      }
    },
    "/Webhook/User/Updated": {
      "post": {
        "description": "This operation is triggered when an User is updated",
        "summary": "When a User is updated",
        "x-ms-trigger": "single",
        "operationId": "UserUpdatedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }
      },
      "x-ms-notification-content": {
        "description": "Details for User updated Webhook",
        "schema": {
          "$ref": "#/definitions/ContactResponseEntity"
        }
      }
    },
    "/Webhook/Asset/Created": {
      "post": {
        "description": "This operation is triggered when an Asset is created",
        "summary": "When a Asset is created",
        "x-ms-trigger": "single",
        "operationId": "AssetCreatedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }
      },
      "x-ms-notification-content": {
        "description": "Details for Asset created Webhook",
        "schema": {
          "$ref": "#/definitions/AssetResponseEntity"
        }
      }
    },
    "/Webhook/Asset/Updated": {
      "post": {
        "description": "This operation is triggered when an Asset is updated",
        "summary": "When a Asset is updated",
        "x-ms-trigger": "single",
        "operationId": "AssetUpdatedWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebhookBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          }
        }
      },
      "x-ms-notification-content": {
        "description": "Details for Asset updated Webhook",
        "schema": {
          "$ref": "#/definitions/AssetResponseEntity"
        }
      }
    }
  },
  "definitions": {
    "WebhookBody": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "title": "Webhook target URL",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        }
      }
    },
    "ActionResponseEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetTicketSchema",
        "value-path": "ActionResponseSchema"
      }
    },
    "TicketResponseEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetTicketSchema",
        "value-path": "TicketResponseSchema"
      }
    },
    "ClientResponseEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetClientSchema",
        "value-path": "ClientResponseSchema"
      }
    },
    "ClientEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetClientSchema",
        "value-path": "ClientSchema"
      }
    },
    "OfficeEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetOfficeSchema",
        "value-path": "OfficeSchema"
      }
    },
    "PriorityEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetTicketSchema",
        "value-path": "PrioritySchema"
      }
    },
    "PrioritySetEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetTicketSchema",
        "value-path": "PrioritySetSchema"
      }
    },
    "PriorityInfo": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetTicketSchema",
        "value-path": "PriorityInfo"
      }
    },
    "OfficeResponseEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetOfficeSchema",
        "value-path": "OfficeResponseSchema"
      }
    },
    "AssetEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetAssetSchema",
        "value-path": "AssetSchema"
      }
    },
    "AssetFieldEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetAssetSchema",
        "value-path": "AssetFieldSchema"
      }
    },
    "AssetResponseEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetAssetSchema",
        "value-path": "AssetResponseSchema"
      }
    },
    "AssetUpdateEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetAssetSchema",
        "value-path": "AssetUpdateSchema"
      }
    },
    "AssetSearchInfo": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetAssetSchema",
        "value-path": "AssetSearchInfo"
      }
    },
    "ContactSearchInfo": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetUserSchema",
        "value-path": "ContactSearchInfo"
      }
    },
    "ManufEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetAssetSchema",
        "value-path": "ManufSchema"
      }
    },
    "ModelEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetAssetSchema",
        "value-path": "ModelSchema"
      }
    },
    "DeviceEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetAssetSchema",
        "value-path": "DeviceSchema"
      }
    },
    "ProcessorEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetAssetSchema",
        "value-path": "ProcessorSchema"
      }
    },
    "OSEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetAssetSchema",
        "value-path": "OSSchema"
      }
    },
    "TicketEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetTicketSchema",
        "value-path": "TicketSchema"
      }
    },
    "ReassignInfo": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetTicketSchema",
        "value-path": "ReassignSchema"
      }
    },
    "ActionInfo": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetTicketSchema",
        "value-path": "ActionSchema"
      }
    },
    "SetStatusInfo": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetTicketSchema",
        "value-path": "SetStatusSchema"
      }
    },
    "SetClientInfo": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetTicketSchema",
        "value-path": "SetClientSchema"
      }
    },
    "ContactEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetUserSchema",
        "value-path": "ContactSchema"
      }
    },
    "ContactResponseEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetUserSchema",
        "value-path": "ContactResponseSchema"
      }
    },
    "ClientTypeEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetClientSchema",
        "value-path": "ClientTypeSchema"
      }
    },
    "ProjectEntity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetProjectSchema",
        "value-path": "ProjectSchema"
      }
    },
    "CallTypeInfo": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetTicketSchema",
        "value-path": "CallTypeInfo"
      }
    },
    "CountryEntity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "country_Cd": {
          "type": "string"
        },
        "country_Name": {
          "type": "string"
        }
      }
    },
    "StateEntity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "country_Id": {
          "format": "int32",
          "type": "integer"
        },
        "state_Name": {
          "type": "string"
        },
        "state_Cd": {
          "type": "string"
        }
      }
    },
    "AccessLevelEntity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "access_Name": {
          "type": "string"
        },
        "internal_Access": {
          "type": "boolean"
        },
        "show_In_Multi_Edit_Config": {
          "type": "boolean"
        },
        "order": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "TeamEntity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "dept_Name": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "view_Timesheet": {
          "type": "boolean"
        },
        "default_Bill_Time": {
          "type": "string"
        }
      }
    },
    "Int32StringTuple": {
      "type": "object",
      "properties": {
        "item1": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "item2": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RoleEntity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "host_Id": {
          "format": "int32",
          "type": "integer"
        },
        "role": {
          "type": "string"
        },
        "def_Bill_Rate": {
          "format": "double",
          "type": "number"
        },
        "client_Role": {
          "type": "boolean"
        },
        "active": {
          "type": "boolean"
        },
        "queue_Role": {
          "type": "boolean"
        }
      }
    },
    "WebhookCreatedResponse": {
      "type": "object",
      "description": "WebhookCreatedResponse",
      "properties": {
        "id": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        }
      },
      "title": "WebhookCreatedResponse"
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://revelationauth.azurewebsites.net/common/connect/authorize",
      "tokenUrl": "https://revelationauth.azurewebsites.net/common/connect/token",
      "scopes": {
        "openid profile Revelation.Api": "openid profile Revelation.Api"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": []
    }
  ],
  "tags": []
}
