{
  "swagger": "2.0",
  "info": {
    "title": "Alemba ITSM",
    "description": "Alemba Service Manager enhances your service delivery by streamlining your IT and Enterprise Service Management Processes. Create, read and update all ASM records including Incidents, Requests, Knowledge Articles and CMDB Items.",
    "contact": {
      "name": "Alemba Support",
      "url": "https://alemba.com/contact",
      "email": "info@alemba.com"
    },
    "version": "3.0.0"
  },
  "host": "alemba.com",
  "basePath": "/connector",
  "schemes": [
    "https"
  ],
  "parameters": {
    "entity_category": {
      "in": "query",
      "name": "categoryId",
      "type": "string",
      "required": true,
      "description": "Select an entity category.",
      "x-ms-summary": "Category",
      "x-ms-visibility": "important",
      "x-ms-dynamic-values": {
        "operationId": "GetCategories",
        "value-path": "id",
        "value-title": "name"
      }
    },
    "entity_type": {
      "in": "path",
      "name": "resource",
      "type": "string",
      "required": true,
      "description": "Select a Specific entity from the selected categeory.",
      "x-ms-summary": "Entity",
      "x-ms-visibility": "important",
      "x-ms-url-encoding": "single",
      "x-ms-dynamic-values": {
        "operationId": "GetEntityTypes",
        "value-path": "resource",
        "value-title": "name",
        "parameters": {
          "categoryId": {
            "parameter": "categoryId"
          }
        }
      }
    }
  },
  "paths": {
    "/execute/{resource}": {
      "get": {
        "operationId": "SearchResource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/entity_category"
          },
          {
            "$ref": "#/parameters/entity_type"
          },
          {
            "in": "query",
            "name": "$partition",
            "type": "string",
            "required": true,
            "description": "Select partition to search in.",
            "x-ms-summary": "Partition",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetLookupItems",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "resource": "partition"
              }
            }
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string",
            "required": true,
            "description": "Comma separated list of selected columns.",
            "x-ms-summary": "Select Columns",
            "x-ms-visibility": "important"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string",
            "description": "Filter expression for the search.",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "important"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string",
            "description": "Order by expression for results.",
            "x-ms-summary": "Order by",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer",
            "description": "Take top X records.",
            "x-ms-summary": "Top",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "string",
            "description": "Skip first X records.",
            "x-ms-summary": "Skip",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "$leftjoin",
            "type": "integer",
            "description": "Left join expression.",
            "x-ms-summary": "Left Join",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "$innerjoin",
            "type": "integer",
            "description": "Inner join expression.",
            "x-ms-summary": "Inner Join",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "$inlinecount",
            "type": "boolean",
            "description": "Should include line count?",
            "x-ms-summary": "Inlcude Line Count?",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results.",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetMethodResponseSchema",
                "parameters": {
                  "method": "Search",
                  "resource": {
                    "parameter": "resource"
                  }
                },
                "value-path": "properties"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetMethodResponseSchema",
                "parameters": {
                  "method": {
                    "value": "Search"
                  },
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation failed"
          }
        },
        "x-ms-visibility": "important",
        "description": "Searches for entity using advanced querying.",
        "summary": "Search Entity"
      },
      "post": {
        "operationId": "CreateResource",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/entity_category"
          },
          {
            "$ref": "#/parameters/entity_type"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Dynamic creation schema based on selected entity.",
            "x-ms-summary": "Create request body",
            "x-ms-visibility": "important",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetMethodPropertiesSchema",
                "parameters": {
                  "method": "Create",
                  "resource": {
                    "parameter": "resource"
                  }
                },
                "value-path": "properties"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetMethodPropertiesSchema",
                "parameters": {
                  "method": {
                    "value": "Create"
                  },
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created entity details.",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetMethodResponseSchema",
                "parameters": {
                  "method": "Create",
                  "resource": {
                    "parameter": "resource"
                  }
                },
                "value-path": "properties"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetMethodResponseSchema",
                "parameters": {
                  "method": {
                    "value": "Create"
                  },
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation failed"
          }
        },
        "x-ms-visibility": "important",
        "description": "Creates new entity.",
        "summary": "Create Entity"
      }
    },
    "/execute/{resource}/{id}": {
      "put": {
        "operationId": "UpdateResource",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/entity_category"
          },
          {
            "$ref": "#/parameters/entity_type"
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Id of the entity to update.",
            "x-ms-summary": "Entity Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Dynamic update schema based on the entity.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Update request body",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetMethodPropertiesSchema",
                "parameters": {
                  "method": "Update",
                  "resource": {
                    "parameter": "resource"
                  }
                },
                "value-path": "properties"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetMethodPropertiesSchema",
                "parameters": {
                  "method": {
                    "value": "Update"
                  },
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated entity details.",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetMethodResponseSchema",
                "parameters": {
                  "method": "Create",
                  "resource": {
                    "parameter": "resource"
                  }
                },
                "value-path": "properties"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetMethodResponseSchema",
                "parameters": {
                  "method": {
                    "value": "Create"
                  },
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation failed"
          }
        },
        "x-ms-visibility": "important",
        "description": "Update existing entity.",
        "summary": "Update Entity"
      }
    },
    "/execute/{resource}/{id}/{interaction}": {
      "put": {
        "operationId": "ResourceInteractions",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/entity_category"
          },
          {
            "$ref": "#/parameters/entity_type"
          },
          {
            "in": "path",
            "name": "interaction",
            "type": "string",
            "required": true,
            "description": "Select entity interaction.",
            "x-ms-summary": "Interaction",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetInteractionItems",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "resource": {
                  "parameter": "resource"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Id of the entity to interact with.",
            "x-ms-summary": "Entity Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "important",
            "description": "Dynamic schema based on entity interaction.",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetInteractionPropertiesSchema",
                "parameters": {
                  "interaction": {
                    "parameter": "interaction"
                  },
                  "resource": {
                    "parameter": "resource"
                  },
                  "categoryId": {
                    "parameter": "categoryId"
                  }
                },
                "value-path": "properties"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetInteractionPropertiesSchema",
                "parameters": {
                  "categoryId": {
                    "parameterReference": "categoryId"
                  },
                  "interaction": {
                    "parameterReference": "interaction"
                  },
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Interaction details.",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetMethodResponseSchema",
                "parameters": {
                  "method": "Create",
                  "resource": {
                    "parameter": "resource"
                  }
                },
                "value-path": "properties"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetMethodResponseSchema",
                "parameters": {
                  "method": {
                    "value": "Create"
                  },
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation failed"
          }
        },
        "x-ms-visibility": "important",
        "description": "Interact with existing entity.",
        "summary": "Interaction"
      }
    },
    "/webhook": {
      "post": {
        "description": "Registers event trigger.",
        "summary": "Event Trigger",
        "operationId": "WebhookTrigger",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Trigger parameters.",
            "x-ms-visibility": "important",
            "schema": {
              "type": "object",
              "required": [
                "PayloadUrl",
                "Events",
                "Active",
                "EntityType",
                "PayloadSelect"
              ],
              "properties": {
                "PayloadUrl": {
                  "type": "string",
                  "x-ms-summary": "Payload Url",
                  "description": "(Private) Trigger notification url.",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                },
                "Events": {
                  "type": "string",
                  "x-ms-summary": "Event handling",
                  "description": "Select if all or specific events should be handled.",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLookupItems",
                    "value-path": "id",
                    "value-title": "name",
                    "parameters": {
                      "resource": "trigger-event-handling"
                    }
                  }
                },
                "Active": {
                  "type": "boolean",
                  "default": true,
                  "x-ms-summary": "Trigger active?",
                  "description": "(Private) Sets trigger active state.",
                  "x-ms-visibility": "internal"
                },
                "EntityType": {
                  "type": "integer",
                  "x-ms-summary": "Entity",
                  "description": "Entity type, whos events should be handled.",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLookupItems",
                    "value-path": "id",
                    "value-title": "name",
                    "parameters": {
                      "resource": "trigger-entity"
                    }
                  }
                },
                "PayloadSelect": {
                  "type": "string",
                  "x-ms-summary": "Payload Columns",
                  "description": "List of columns to be returned with the trigger payload.",
                  "x-ms-visibility": "important"
                },
                "Secret": {
                  "type": "string",
                  "x-ms-summary": "Trigger Secret",
                  "description": "Will be returned on triggering event for optional validation.",
                  "x-ms-visibility": "advanced"
                },
                "PayloadFilter": {
                  "type": "string",
                  "x-ms-summary": "Trigger filter",
                  "description": "Filter expression for filtering events notifications.",
                  "x-ms-visibility": "advanced"
                },
                "IndividualTriggers": {
                  "type": "array",
                  "x-ms-summary": "Individual Trigger",
                  "description": "For individual events, select events to be notified for.",
                  "x-ms-visibility": "advanced",
                  "items": {
                    "type": "string",
                    "x-ms-summary": "Event",
                    "description": "Event to be notified for.",
                    "x-ms-dynamic-values": {
                      "operationId": "GetLookupItems",
                      "value-path": "id",
                      "value-title": "name",
                      "parameters": {
                        "resource": "trigger-event"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Operation Failed"
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Triggered event payload. Includes all colunms selected in payload columns",
        "schema": {
          "type": "object",
          "additionalProperties": true
        }
      }
    },
    "/lookup/type": {
      "get": {
        "operationId": "GetCategories",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource": { "type": "string" },
                  "id": { "type": "string" },
                  "name": { "type": "string" }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed"
          }
        },
        "x-ms-visibility": "internal",
        "description": "(Private) Gets all categories.",
        "summary": "Get base types"
      }
    },
    "/lookup/type/child": {
      "get": {
        "operationId": "GetEntityTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/entity_category"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource": { "type": "string" },
                  "id": { "type": "string" },
                  "name": { "type": "string" }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed"
          }
        },
        "x-ms-visibility": "internal",
        "description": "(Private) Gets all entities for a category.",
        "summary": "Get child types"
      }
    },
    "/lookup/resource/{resource}": {
      "get": {
        "operationId": "GetLookupItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/entity_type"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "string" },
                  "name": { "type": "string" }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed"
          }
        },
        "x-ms-visibility": "internal",
        "description": "(Private) Gets lookup values for a resource.",
        "summary": "Get Lookup Values"
      }
    },
    "/lookup/interaction/{resource}": {
      "get": {
        "operationId": "GetInteractionItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/entity_type"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "string" },
                  "name": { "type": "string" }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed"
          }
        },
        "x-ms-visibility": "internal",
        "description": "(Private) Gets available interactions for a resource.",
        "summary": "Get entity interactions"
      }
    },
    "/schema/properties/{resource}/{method}": {
      "get": {
        "operationId": "GetMethodPropertiesSchema",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/entity_type"
          },
          {
            "in": "path",
            "name": "method",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed"
          }
        },
        "x-ms-visibility": "internal",
        "description": "(Private) Gets parameters schema for a resource's method.",
        "summary": "Get method schema"
      }
    },
    "/schema/response/{resource}/{method}": {
      "get": {
        "operationId": "GetMethodResponseSchema",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/entity_type"
          },
          {
            "in": "path",
            "name": "method",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed"
          }
        },
        "x-ms-visibility": "internal",
        "description": "(Private) Gets response schema for a resource's method.",
        "summary": "Get method schema"
      }
    },
    "/schema/interaction/properties/{resource}/{interaction}": {
      "get": {
        "operationId": "GetInteractionPropertiesSchema",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/entity_category"
          },
          {
            "$ref": "#/parameters/entity_type"
          },
          {
            "in": "path",
            "name": "interaction",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed"
          }
        },
        "x-ms-visibility": "internal",
        "description": "(Private) Gets properties schema for a resource's interaction",
        "summary": "Get interaction schema"
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic",
      "description": "Basic Authorization header."
    }
  },
  "security": [
    {
      "basic": []
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.alemba.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://alemba.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;IT Operations"
    }
  ]
}