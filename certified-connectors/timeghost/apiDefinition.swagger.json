{
  "swagger": "2.0",
  "info": {
    "title": "timeghost",
    "description": "timeghost is a dedicated Microsoft 365 / Office 365 solution that integrates perfectly with your work environment. Generate time reports, invoices and other documents using the timeghost connector.",
    "version": "2.0",
    "contact": {
      "name": "timeghost Support",
      "url": "https://support.timeghost.io",
      "email": "support@timeghost.io"
    }
  },
  "host": "timeghost-api.azurewebsites.net",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/plain"
  ],
  "produces": [
    "application/json",
    "text/plain"
  ],
  "paths": {
    "/get/currentuser": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Current User",
        "description": "Returns the current User.",
        "operationId": "Get_Currentuser",
        "x-ms-visibility": "internal"
      }
    },
    "/get/workspaces/{workspace_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/WorkspaceResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Workspace by ID",
        "description": "Returns the workspace",
        "operationId": "Get_Workspace_ById",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "workspace-id",
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace_id",
            "x-ms-summary": "Workspace",
            "description": "Workspace Id",
            "in": "path",
            "required": true,
            "x-ms-url-encoding": "single",
            "type": "string"
          }
        ]
      }
    },
    "/get/clients/{clientid}/projects": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectsResponse"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Client Projects",
        "description": "Get all projects of one client in one workspace.",
        "operationId": "Get_Client_Projects",
        "parameters": [
          {
            "name": "workspace-id",
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            }
          },
          {
            "name": "clientid",
            "x-ms-summary": "Client",
            "description": "Client (or Client ID)",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "Get_Clients",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "workspace-id": {
                  "parameter": "workspace-id"
                }
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "x-ms-visibility": "advanced",
            "type": "string",
            "x-ms-summary": "Filter Query",
            "description": "An ODATA filter query to restrict the returned projects"
          }
        ]
      }
    },
    "/get/projects/{projectid}/tasks": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TasksResponse"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Project Tasks",
        "description": "Get all tasks of one project in one workspace.",
        "operationId": "Get_Project_Tasks",
        "parameters": [
          {
            "name": "workspace-id",
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            }
          },
          {
            "name": "clientid",
            "x-ms-summary": "Client",
            "description": "Client (or Client ID)",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Clients",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "workspace-id": {
                  "parameter": "workspace-id"
                }
              }
            }
          },
          {
            "name": "projectid",
            "x-ms-summary": "Project",
            "description": "Project (or Project ID)",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "Get_Client_Projects",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "clientid": {
                  "parameter": "clientid"
                },
                "workspace-id": {
                  "parameter": "workspace-id"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "Get_Client_Projects",
              "itemValuePath": "id",
              "itemTitlePath": "name",
              "parameters": {
                "clientid": {
                  "parameterReference": "clientid"
                },
                "workspace-id": {
                  "parameterReference": "workspace-id"
                }
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "x-ms-visibility": "advanced",
            "required": false,
            "type": "string",
            "x-ms-summary": "Filter Query",
            "description": "An ODATA filter query to restrict the returned tasks"
          }
        ]
      }
    },
    "/get/projects": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectsResponse"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Projects",
        "operationId": "Get_Projects",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "x-ms-visibility": "advanced",
            "type": "string",
            "x-ms-summary": "Filter Query",
            "description": "An ODATA filter query to restrict the returned projects"
          },
          {
            "name": "workspace-id",
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            }
          }
        ],
        "description": "Get all projects from a workspace."
      }
    },
    "/add/projects": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/ProjectsResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Add Project",
        "description": "Add a project to a workspace.",
        "operationId": "Add_Project",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ]
      }
    },
    "/update/projects/{ProjectId}": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/ProjectsResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Project",
        "description": "Update a project in a workspace.",
        "operationId": "Update_Project",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "ProjectId",
            "in": "path",
            "required": true,
            "x-ms-url-encoding": "single",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Projects",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "workspace-id": {
                  "parameter": "workspace-id"
                }
              }
            },
            "description": "Project (or Project ID)",
            "x-ms-summary": "Project"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ]
      }
    },
    "/get/times": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimesResponse"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Times",
        "description": "Get all times from a workspace.",
        "operationId": "Get_Times",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "$filter-date-range",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "today",
            "x-ms-summary": "Date range",
            "description": "Filter times by range",
            "enum": [
              "today",
              "yesterday",
              "this_week",
              "last_week",
              "this_month",
              "last_month",
              "this_year",
              "last_year",
              "all_time"
            ],
            "x-ms-enum-values": [
              {
                "displayName": "Today",
                "value": "today"
              },
              {
                "displayName": "Yesterday",
                "value": "yesterday"
              },
              {
                "displayName": "This Week",
                "value": "this_week"
              },
              {
                "displayName": "Last Week",
                "value": "last_week"
              },
              {
                "displayName": "This Month",
                "value": "this_month"
              },
              {
                "displayName": "Last Month",
                "value": "last_month"
              },
              {
                "displayName": "This Year",
                "value": "this_year"
              },
              {
                "displayName": "Last Year",
                "value": "last_year"
              },
              {
                "displayName": "All-Time",
                "value": "all_time"
              }
            ]
          },
          {
            "name": "$filter-user",
            "in": "query",
            "x-ms-summary": "Filter by User",
            "description": "Filter the times by user",
            "required": false,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Workspace_ById",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "users",
              "parameters": {
                "workspace-id": {
                  "parameter": "workspace-id"
                },
                "workspace_id": {
                  "parameter": "workspace-id"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "Get_Workspace_ById",
              "itemValuePath": "id",
              "itemTitlePath": "name",
              "itemsPath": "users",
              "parameters": {
                "workspace-id": {
                  "parameterReference": "workspace-id"
                },
                "workspace_id": {
                  "parameterReference": "workspace-id"
                }
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Filter Query",
            "description": "An ODATA filter query to restrict the returned times"
          }
        ]
      }
    },
    "/get/projects/{projectid}/times": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TasksResponse"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Project Times",
        "description": "Get all times of one project in one workspace.",
        "operationId": "Get_Project_Times",
        "parameters": [
          {
            "name": "workspace-id",
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            }
          },
          {
            "name": "clientid",
            "x-ms-summary": "Client",
            "description": "Client (or Client ID)",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Clients",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "workspace-id": {
                  "parameter": "workspace-id"
                }
              }
            }
          },
          {
            "name": "projectid",
            "x-ms-summary": "Project",
            "description": "Project (or Project ID)",
            "in": "path",
            "required": true,
            "x-ms-url-encoding": "single",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Client_Projects",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "clientid": {
                  "parameter": "clientid"
                },
                "workspace-id": {
                  "parameter": "workspace-id"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "Get_Client_Projects",
              "itemValuePath": "id",
              "itemTitlePath": "name",
              "parameters": {
                "clientid": {
                  "parameterReference": "clientid"
                },
                "workspace-id": {
                  "parameterReference": "workspace-id"
                }
              }
            }
          },
          {
            "name": "$filter-date-range",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "today",
            "x-ms-summary": "Date range",
            "description": "Filter times by range",
            "enum": [
              "today",
              "yesterday",
              "this_week",
              "last_week",
              "this_month",
              "last_month",
              "this_year",
              "last_year",
              "all_time"
            ],
            "x-ms-enum-values": [
              {
                "displayName": "Today",
                "value": "today"
              },
              {
                "displayName": "Yesterday",
                "value": "yesterday"
              },
              {
                "displayName": "This Week",
                "value": "this_week"
              },
              {
                "displayName": "Last Week",
                "value": "last_week"
              },
              {
                "displayName": "This Month",
                "value": "this_month"
              },
              {
                "displayName": "Last Month",
                "value": "last_month"
              },
              {
                "displayName": "This Year",
                "value": "this_year"
              },
              {
                "displayName": "Last Year",
                "value": "last_year"
              },
              {
                "displayName": "All-Time",
                "value": "all_time"
              }
            ]
          },
          {
            "name": "$filter-user",
            "in": "query",
            "x-ms-summary": "Filter by User",
            "description": "Filter the times by user",
            "required": false,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Workspace_ById",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "users",
              "parameters": {
                "workspace-id": {
                  "parameter": "workspace-id"
                },
                "workspace_id": {
                  "parameter": "workspace-id"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "Get_Workspace_ById",
              "itemValuePath": "id",
              "itemTitlePath": "name",
              "itemsPath": "users",
              "parameters": {
                "workspace-id": {
                  "parameterReference": "workspace-id"
                },
                "workspace_id": {
                  "parameterReference": "workspace-id"
                }
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Filter Query",
            "description": "An ODATA filter query to restrict the returned times"
          }
        ]
      }
    },
    "/get/clients/{clientid}/times": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TasksResponse"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Client Times",
        "description": "Get all times of one client in one workspace.",
        "operationId": "Get_Client_Times",
        "parameters": [
          {
            "name": "workspace-id",
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            }
          },
          {
            "name": "clientid",
            "x-ms-summary": "Client",
            "description": "Client (or Client ID)",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Clients",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "workspace-id": {
                  "parameter": "workspace-id"
                }
              }
            }
          },
          {
            "name": "$filter-date-range",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "today",
            "x-ms-summary": "Date range",
            "description": "Filter times by range",
            "enum": [
              "today",
              "yesterday",
              "this_week",
              "last_week",
              "this_month",
              "last_month",
              "this_year",
              "last_year",
              "all_time"
            ],
            "x-ms-enum-values": [
              {
                "displayName": "Today",
                "value": "today"
              },
              {
                "displayName": "Yesterday",
                "value": "yesterday"
              },
              {
                "displayName": "This Week",
                "value": "this_week"
              },
              {
                "displayName": "Last Week",
                "value": "last_week"
              },
              {
                "displayName": "This Month",
                "value": "this_month"
              },
              {
                "displayName": "Last Month",
                "value": "last_month"
              },
              {
                "displayName": "This Year",
                "value": "this_year"
              },
              {
                "displayName": "Last Year",
                "value": "last_year"
              },
              {
                "displayName": "All-Time",
                "value": "all_time"
              }
            ]
          },
          {
            "name": "$filter-user",
            "in": "query",
            "x-ms-summary": "Filter by User",
            "description": "Filter the times by user",
            "required": false,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Workspace_ById",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "users",
              "parameters": {
                "workspace-id": {
                  "parameter": "workspace-id"
                },
                "workspace_id": {
                  "parameter": "workspace-id"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "Get_Workspace_ById",
              "itemValuePath": "id",
              "itemTitlePath": "name",
              "itemsPath": "users",
              "parameters": {
                "workspace-id": {
                  "parameterReference": "workspace-id"
                },
                "workspace_id": {
                  "parameterReference": "workspace-id"
                }
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "x-ms-visibility": "advanced",
            "required": false,
            "type": "string",
            "x-ms-summary": "Filter Query",
            "description": "An ODATA filter query to restrict the returned times"
          }
        ]
      }
    },
    "/add/times": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/TimesResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Add Time",
        "description": "Add a time to a project within a workspace.",
        "operationId": "Add_Time",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Time"
            }
          }
        ]
      }
    },
    "/update/times/{TimeId}": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/TimesResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Time",
        "description": "Update a time in a workspace.",
        "operationId": "Update_Time",
        "parameters": [
          {
            "name": "TimeId",
            "in": "path",
            "required": true,
            "x-ms-url-encoding": "single",
            "type": "string",
            "description": "Unique ID of time to be updated",
            "x-ms-summary": "Time ID"
          },
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Time"
            }
          }
        ]
      }
    },
    "/add/tasks": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/TasksResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Add Task",
        "description": "Add a task to a workspace.",
        "operationId": "Add_Task",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ]
      }
    },
    "/update/tasks/{TaskId}": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/TasksResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Task",
        "description": "Update a task in a workspace.",
        "operationId": "Update_Task",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "TaskId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "Unique ID of the task",
            "x-ms-summary": "Task ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ]
      }
    },
    "/get/clients": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientsResponse"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Clients",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Filter Query",
            "description": "An ODATA filter query to restrict the returned clients"
          },
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          }
        ],
        "description": "Get all clients from a workspace.",
        "operationId": "Get_Clients"
      }
    },
    "/add/clients": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/ClientsResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Add Client",
        "description": "Add a client to a workspace.",
        "operationId": "Add_Client",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        ]
      }
    },
    "/update/clients/{ClientId}": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/ClientsResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Client",
        "description": "Update a client in a workspace.",
        "operationId": "Update_Client",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "ClientId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "Get_Clients",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "workspace-id": {
                  "parameter": "workspace-id"
                }
              }
            },
            "x-ms-summary": "Client",
            "description": "Client (or Client ID)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        ]
      }
    },
    "/get/groups": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupsResponse"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Workspace Groups",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          }
        ],
        "description": "Get all groups from a workspace.",
        "operationId": "Get_Groups"
      }
    },
    "/add/groups": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/GroupsResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Add Group",
        "description": "Add a group to a workspace.",
        "operationId": "Add_Group",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ]
      }
    },
    "/update/groups/{GroupId}": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/GroupsResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Group",
        "description": "Update a group in a workspace.",
        "operationId": "Update_Group",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "Get_Groups",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "workspace-id": {
                  "parameter": "workspace-id"
                }
              }
            },
            "x-ms-summary": "Group",
            "description": "Group (or Group ID)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ]
      }
    },
    "/get/tags": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagsResponse"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Time Tags",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "x-ms-visibility": "advanced",
            "type": "string",
            "default": "tagType eq 1",
            "x-ms-summary": "Filter Query",
            "description": "An ODATA filter query to restrict the returned projects",
            "enum": [
              "tagType eq 1"
            ]
          }
        ],
        "description": "Get all time tags from a workspace.",
        "operationId": "Get_Time_Tags"
      }
    },
    "/add/tags": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagsResponse"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Add Time Tag",
        "description": "Add a time tag to a workspace.",
        "operationId": "Add_Time_Tag",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeTag"
            }
          }
        ]
      }
    },
    "/update/tags/{TagId}": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagsResponse"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Time Tag",
        "description": "Update a time tag in a workspace.",
        "operationId": "Update_Time_Tag",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "TagId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "Get_Time_Tags",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "workspace-id": {
                  "parameter": "workspace-id"
                },
                "$filter": "tagType eq 1"
              }
            },
            "x-ms-summary": "Tag",
            "description": "Tag (or Tag ID)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeTag"
            }
          }
        ]
      }
    },
    "/add/customfeedevent": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/CustomFeedEventResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Add Custom Feed Event",
        "description": "Add an event to the users feed. Entry is automatically deleted after 180 days.",
        "operationId": "Add_CustomFeedEvent",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomFeedEvent"
            }
          }
        ]
      }
    },
    "/update/customfeedevent/{EventId}": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/CustomFeedEventResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Custom Feed Event",
        "description": "Update a custom feed entry in a workspace.",
        "operationId": "Update_CustomFeedEvent",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "EventId",
            "in": "path",
            "required": true,
            "x-ms-url-encoding": "single",
            "type": "string",
            "description": "Custom Feed Event ID",
            "x-ms-summary": "ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomFeedEvent"
            }
          }
        ]
      }
    },
    "/delete/{ItemType}/{ItemId}": {
      "delete": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Delete Item",
        "description": "Delete an item from a workspace.",
        "operationId": "Delete_Item",
        "parameters": [
          {
            "name": "ItemType",
            "in": "path",
            "required": true,
            "x-ms-url-encoding": "single",
            "type": "string",
            "enum": [
              "projects",
              "tasks",
              "times",
              "clients",
              "tags",
              "customfeedevent"
            ],
            "x-ms-enum-values": [
              {
                "displayName": "Project",
                "value": "projects"
              },
              {
                "displayName": "Task",
                "value": "tasks"
              },
              {
                "displayName": "Time",
                "value": "times"
              },
              {
                "displayName": "Client",
                "value": "clients"
              },
              {
                "displayName": "Tag",
                "value": "tags"
              },
              {
                "displayName": "Custom Feed Event",
                "value": "customfeedevent"
              }
            ],
            "x-ms-summary": "Item Type",
            "description": "Type of item that will be deleted"
          },
          {
            "name": "ItemId",
            "in": "path",
            "required": true,
            "x-ms-url-encoding": "single",
            "type": "string",
            "x-ms-summary": "Item ID",
            "description": "ID of the item that will be deleted"
          },
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          }
        ]
      }
    },
    "/Create_Excel_Report": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/ExcelResponse"
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Create Times Excel Report",
        "description": "Returns an Excel file containing a report of the specified time.",
        "operationId": "Create_Excel_Report",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "$filter-date-range",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "today",
            "x-ms-summary": "Date range",
            "description": "Filter times by range",
            "enum": [
              "today",
              "yesterday",
              "this_week",
              "last_week",
              "this_month",
              "last_month",
              "this_year",
              "last_year"
            ],
            "x-ms-enum-values": [
              {
                "displayName": "Today",
                "value": "today"
              },
              {
                "displayName": "Yesterday",
                "value": "yesterday"
              },
              {
                "displayName": "This Week",
                "value": "this_week"
              },
              {
                "displayName": "Last Week",
                "value": "last_week"
              },
              {
                "displayName": "This Month",
                "value": "this_month"
              },
              {
                "displayName": "Last Month",
                "value": "last_month"
              },
              {
                "displayName": "This Year",
                "value": "this_year"
              },
              {
                "displayName": "Last Year",
                "value": "last_year"
              }
            ]
          },
          {
            "name": "$filter-user",
            "in": "query",
            "x-ms-summary": "Filter by User",
            "description": "Filter the times by user",
            "required": false,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Workspace_ById",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "users",
              "parameters": {
                "workspace-id": {
                  "parameter": "workspace-id"
                },
                "workspace_id": {
                  "parameter": "workspace-id"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "Get_Workspace_ById",
              "itemValuePath": "id",
              "itemTitlePath": "name",
              "itemsPath": "users",
              "parameters": {
                "workspace-id": {
                  "parameterReference": "workspace-id"
                },
                "workspace_id": {
                  "parameterReference": "workspace-id"
                }
              }
            }
          },
          {
            "name": "groupedByProject",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Grouped by Project",
            "description": "Project times are divided into workbooks"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "description": "Start date for Excel report (overwrites date range) format: yyyy-MM-ddTHH:mm:ss.SSSZ",
            "x-ms-summary": "Start Date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "description": "End date for Excel report (overwrites date range) format: yyyy-MM-ddTHH:mm:ss.SSSZ",
            "x-ms-summary": "End Date"
          }
        ]
      }
    },
    "/register_webhook/clients": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/ClientsResponse"
        },
        "description": "Client"
      },
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {}
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Client Trigger",
        "description": "If a client is created, changed or deleted in timeghost, this trigger runs.",
        "operationId": "ClientChanges",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "workspace-id",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            },
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the webhook so that it can be found in the settings in timeghost.",
                  "title": "Name of the webhook",
                  "x-ms-visibility": "advanced",
                  "default": "Power Automate Client Trigger"
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "default": "clients"
                },
                "events": {
                  "description": "Select the events to listen to",
                  "x-ms-summary": "Run on",
                  "x-ms-visibility": "advanced",
                  "type": "array",
                  "default": [
                    "add",
                    "update",
                    "delete"
                  ],
                  "items": {
                    "type": "string",
                    "enum": [
                      "add",
                      "update",
                      "delete"
                    ],
                    "x-ms-enum-values": [
                      {
                        "displayName": "New client added",
                        "value": "add"
                      },
                      {
                        "displayName": "Existing client updated",
                        "value": "update"
                      },
                      {
                        "displayName": "Client deleted",
                        "value": "delete"
                      }
                    ]
                  }
                },
                "active": {
                  "type": "boolean",
                  "description": "active",
                  "title": "",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "internal",
                  "default": true
                },
                "config": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "url",
                      "x-ms-visibility": "internal",
                      "x-ms-notification-url": true,
                      "title": ""
                    },
                    "basicAuth": {
                      "type": "object",
                      "properties": {
                        "userName": {
                          "type": "string",
                          "description": "userName",
                          "title": "Basic-Auth: Username",
                          "x-ms-visibility": "internal"
                        },
                        "pass": {
                          "type": "string",
                          "description": "pass",
                          "title": "Basic-Auth: Passwort",
                          "x-ms-visibility": "internal"
                        }
                      },
                      "description": "basicAuth"
                    }
                  },
                  "description": "config",
                  "required": [
                    "url"
                  ]
                }
              },
              "required": [
                "config",
                "active",
                "entity",
                "name"
              ]
            }
          }
        ]
      }
    },
    "/register_webhook/tags": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/TagsResponse"
        },
        "description": "Tag"
      },
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {}
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Tag Trigger",
        "description": "If a tag is created, changed or deleted in timeghost, this trigger runs.",
        "operationId": "TagChanges",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "workspace-id",
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the webhook so that it can be found in the settings in timeghost.",
                  "title": "Name of the webhook",
                  "x-ms-visibility": "advanced",
                  "default": "Power-Automate Tag Trigger"
                },
                "events": {
                  "description": "Select the events to listen to",
                  "x-ms-summary": "Run on",
                  "x-ms-visibility": "advanced",
                  "type": "array",
                  "default": [
                    "add",
                    "update",
                    "delete"
                  ],
                  "items": {
                    "type": "string",
                    "enum": [
                      "add",
                      "update",
                      "delete"
                    ],
                    "x-ms-enum-values": [
                      {
                        "displayName": "New tag added",
                        "value": "add"
                      },
                      {
                        "displayName": "Existing tag updated",
                        "value": "update"
                      },
                      {
                        "displayName": "Tag deleted",
                        "value": "delete"
                      }
                    ]
                  }
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "default": "tags"
                },
                "active": {
                  "type": "boolean",
                  "description": "active",
                  "title": "",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "internal",
                  "default": true
                },
                "config": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "url",
                      "x-ms-visibility": "internal",
                      "x-ms-notification-url": true,
                      "title": ""
                    },
                    "basicAuth": {
                      "type": "object",
                      "properties": {
                        "userName": {
                          "type": "string",
                          "description": "userName",
                          "title": "Basic-Auth: Username",
                          "x-ms-visibility": "internal"
                        },
                        "pass": {
                          "type": "string",
                          "description": "pass",
                          "title": "Basic-Auth: Passwort",
                          "x-ms-visibility": "internal"
                        }
                      },
                      "description": "basicAuth"
                    }
                  },
                  "description": "config",
                  "required": [
                    "url"
                  ]
                }
              },
              "required": [
                "config",
                "active",
                "entity",
                "name"
              ]
            }
          }
        ]
      }
    },
    "/register_webhook/projects": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/ProjectsResponse"
        },
        "description": "Project"
      },
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {}
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Project Trigger",
        "description": "If a project is created, changed or deleted in timeghost, this trigger runs.",
        "operationId": "ProjectChanges",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "workspace-id",
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the webhook so that it can be found in the settings in timeghost.",
                  "title": "Name of the webhook",
                  "x-ms-visibility": "advanced",
                  "default": "Power-Automate Project Trigger"
                },
                "events": {
                  "description": "Select the events to listen to",
                  "x-ms-summary": "Run on",
                  "x-ms-visibility": "advanced",
                  "type": "array",
                  "default": [
                    "add",
                    "update",
                    "delete"
                  ],
                  "items": {
                    "type": "string",
                    "enum": [
                      "add",
                      "update",
                      "delete"
                    ],
                    "x-ms-enum-values": [
                      {
                        "displayName": "New project added",
                        "value": "add"
                      },
                      {
                        "displayName": "Existing project updated",
                        "value": "update"
                      },
                      {
                        "displayName": "Project deleted",
                        "value": "delete"
                      }
                    ]
                  }
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "default": "projects"
                },
                "active": {
                  "type": "boolean",
                  "description": "active",
                  "title": "",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "internal",
                  "default": true
                },
                "config": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "url",
                      "x-ms-visibility": "internal",
                      "x-ms-notification-url": true,
                      "title": ""
                    },
                    "basicAuth": {
                      "type": "object",
                      "properties": {
                        "userName": {
                          "type": "string",
                          "description": "userName",
                          "title": "Basic-Auth: Username",
                          "x-ms-visibility": "internal"
                        },
                        "pass": {
                          "type": "string",
                          "description": "pass",
                          "title": "Basic-Auth: Passwort",
                          "x-ms-visibility": "internal"
                        }
                      },
                      "description": "basicAuth"
                    }
                  },
                  "description": "config",
                  "required": [
                    "url"
                  ]
                }
              },
              "required": [
                "config",
                "active",
                "entity",
                "name"
              ]
            }
          }
        ]
      }
    },
    "/register_webhook/tasks": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/TasksResponse"
        },
        "description": "Task"
      },
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {}
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Task Trigger",
        "description": "If a task is created, changed or deleted in timeghost, this trigger runs.",
        "operationId": "TaskChanges",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "workspace-id",
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the webhook so that it can be found in the settings in timeghost.",
                  "title": "Name of the webhook",
                  "x-ms-visibility": "advanced",
                  "default": "Power-Automate Task Trigger"
                },
                "events": {
                  "description": "Select the events to listen to",
                  "x-ms-summary": "Run on",
                  "x-ms-visibility": "advanced",
                  "type": "array",
                  "default": [
                    "add",
                    "update",
                    "delete"
                  ],
                  "items": {
                    "type": "string",
                    "enum": [
                      "add",
                      "update",
                      "delete"
                    ],
                    "x-ms-enum-values": [
                      {
                        "displayName": "New task added",
                        "value": "add"
                      },
                      {
                        "displayName": "Existing task updated",
                        "value": "update"
                      },
                      {
                        "displayName": "Task deleted",
                        "value": "delete"
                      }
                    ]
                  }
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "default": "tasks"
                },
                "active": {
                  "type": "boolean",
                  "description": "active",
                  "title": "",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "internal",
                  "default": true
                },
                "config": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "url",
                      "x-ms-visibility": "internal",
                      "x-ms-notification-url": true,
                      "title": ""
                    },
                    "basicAuth": {
                      "type": "object",
                      "properties": {
                        "userName": {
                          "type": "string",
                          "description": "userName",
                          "title": "Basic-Auth: Username",
                          "x-ms-visibility": "internal"
                        },
                        "pass": {
                          "type": "string",
                          "description": "pass",
                          "title": "Basic-Auth: Passwort",
                          "x-ms-visibility": "internal"
                        }
                      },
                      "description": "basicAuth"
                    }
                  },
                  "description": "config",
                  "required": [
                    "url"
                  ]
                }
              },
              "required": [
                "config",
                "active",
                "entity",
                "name"
              ]
            }
          }
        ]
      }
    },
    "/register_webhook/times": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/TimesResponse"
        },
        "description": "Time"
      },
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {}
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Time Trigger",
        "description": "If a time is created, changed or deleted in timeghost, this trigger runs.",
        "operationId": "TimeChanges",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "workspace-id",
            "description": "Enter the workspace in which your data is stored",
            "x-ms-summary": "Workspace",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Get_Currentuser",
              "value-path": "id",
              "value-collection": "workspaces",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the webhook so that it can be found in the settings in timeghost.",
                  "title": "Name of the webhook",
                  "x-ms-visibility": "advanced",
                  "default": "Power-Automate Time Trigger"
                },
                "events": {
                  "description": "Select the events to listen to",
                  "x-ms-summary": "Run on",
                  "x-ms-visibility": "advanced",
                  "type": "array",
                  "default": [
                    "add",
                    "update",
                    "delete"
                  ],
                  "items": {
                    "type": "string",
                    "enum": [
                      "add",
                      "update",
                      "delete"
                    ],
                    "x-ms-enum-values": [
                      {
                        "displayName": "New time added",
                        "value": "add"
                      },
                      {
                        "displayName": "Existing time updated",
                        "value": "update"
                      },
                      {
                        "displayName": "Time deleted",
                        "value": "delete"
                      }
                    ]
                  }
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "default": "times"
                },
                "active": {
                  "type": "boolean",
                  "description": "active",
                  "title": "",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "internal",
                  "default": true
                },
                "config": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "url",
                      "x-ms-visibility": "internal",
                      "x-ms-notification-url": true,
                      "title": ""
                    },
                    "basicAuth": {
                      "type": "object",
                      "properties": {
                        "userName": {
                          "type": "string",
                          "description": "userName",
                          "title": "Basic-Auth: Username",
                          "x-ms-visibility": "internal"
                        },
                        "pass": {
                          "type": "string",
                          "description": "pass",
                          "title": "Basic-Auth: Passwort",
                          "x-ms-visibility": "internal"
                        }
                      },
                      "description": "basicAuth"
                    }
                  },
                  "description": "config",
                  "required": [
                    "url"
                  ]
                }
              },
              "required": [
                "config",
                "active",
                "entity",
                "name"
              ]
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "ProjectsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "ID",
          "description": "Unique ID of the project"
        },
        "deleted": {
          "type": "boolean",
          "x-ms-summary": "Deleted",
          "description": "Indicates whether the project is marked as deleted"
        },
        "created": {
          "type": "string",
          "x-ms-summary": "Created",
          "format": "date-time",
          "description": "Indicates when the project was created"
        },
        "modified": {
          "type": "string",
          "x-ms-summary": "Modified",
          "format": "date-time",
          "description": "Indicates when the project was changed"
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status",
          "description": "Indicates whether the data record was just created, updated or deleted"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Projects' name"
        },
        "client": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "ID",
              "description": "Unique ID of the client of this project"
            },
            "name": {
              "type": "string",
              "x-ms-summary": "Clients' name",
              "description": "Clients' name"
            }
          }
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description",
          "description": "Description of the project"
        },
        "color": {
          "type": "string",
          "x-ms-summary": "Color",
          "description": "Color of the project. eg '#0000FF'"
        },
        "billable": {
          "type": "boolean",
          "description": "Indicates whether the project is marked as billable",
          "x-ms-summary": "Billable"
        },
        "completed": {
          "type": "boolean",
          "description": "Indicates whether the project is marked as completed",
          "x-ms-summary": "Completed"
        },
        "estimation": {
          "type": "number",
          "format": "double",
          "description": "The estimated budget of the project",
          "x-ms-summary": "Estimation"
        },
        "taskBasedEstimation": {
          "type": "boolean",
          "description": "The budget is task-dependent.",
          "x-ms-summary": "Task Based Estimation"
        },
        "users": {
          "x-ms-summary": "Users",
          "description": "Users of the project",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-ms-summary": "User ID",
                "description": "Unique ID of the user of this project"
              },
              "name": {
                "type": "string",
                "x-ms-summary": "Users' name",
                "description": "Users' name"
              }
            }
          }
        }
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Projects' name",
          "title": "Name"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description",
          "description": "Description of the project"
        },
        "client": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "ID",
              "description": "Client (or Client ID)",
              "title": "Client",
              "x-ms-dynamic-values": {
                "operationId": "Get_Clients",
                "value-path": "id",
                "value-title": "name",
                "parameters": {
                  "workspace-id": {
                    "parameter": "workspace-id"
                  }
                }
              }
            }
          },
          "description": "The client of this project",
          "required": [
            "id"
          ]
        },
        "color": {
          "type": "string",
          "x-ms-summary": "Color",
          "description": "Color of the project eg. '#0000FF'",
          "default": "#0000FF"
        },
        "billable": {
          "type": "boolean",
          "description": "Indicates whether the project is marked as billable",
          "x-ms-summary": "Billable",
          "title": "Billable",
          "default": false
        },
        "completed": {
          "type": "boolean",
          "description": "Indicates whether the project is marked as completed",
          "x-ms-summary": "Completed",
          "title": "Completed",
          "default": false
        },
        "taskBasedEstimation": {
          "type": "boolean",
          "description": "The budget is task-dependent.",
          "x-ms-summary": "Task based estimation",
          "title": "Task Based Estimation",
          "default": false
        },
        "estimation": {
          "type": "number",
          "format": "double",
          "description": "The estimated budget of the project",
          "x-ms-summary": "Estimation",
          "default": 0
        },
        "private": {
          "type": "boolean",
          "description": "Set the project to public or private.",
          "x-ms-summary": "Private",
          "default": false
        },
        "users": {
          "x-ms-visibility": "advanced",
          "title": "Users",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-ms-summary": "User ID",
                "description": "User (or User ID)",
                "title": "User",
                "x-ms-dynamic-values": {
                  "operationId": "Get_Workspace_ById",
                  "value-path": "id",
                  "value-title": "name",
                  "value-collection": "users",
                  "parameters": {
                    "workspace-id": {
                      "parameter": "workspace-id"
                    },
                    "workspace_id": {
                      "parameter": "workspace-id"
                    }
                  }
                },
                "x-ms-dynamic-list": {
                  "operationId": "Get_Workspace_ById",
                  "itemValuePath": "id",
                  "itemTitlePath": "name",
                  "itemsPath": "users",
                  "parameters": {
                    "workspace-id": {
                      "parameterReference": "workspace-id"
                    },
                    "workspace_id": {
                      "parameterReference": "workspace-id"
                    }
                  }
                }
              },
              "role": {
                "type": "number",
                "default": 0,
                "x-ms-summary": "Role in project",
                "description": "Role in project",
                "title": "Role",
                "enum": [
                  0,
                  1
                ],
                "x-ms-enum-values": [
                  {
                    "displayName": "User",
                    "value": 0
                  },
                  {
                    "displayName": "Manager",
                    "value": 1
                  }
                ]
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "required": [
        "client",
        "completed",
        "billable",
        "name",
        "taskBasedEstimation"
      ]
    },
    "ClientsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "ID",
          "description": "Unique ID of the client"
        },
        "deleted": {
          "type": "boolean",
          "x-ms-summary": "Deleted",
          "description": "Indicates whether the client is marked as deleted"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Clients' name"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description",
          "description": "Description of the client"
        },
        "created": {
          "type": "string",
          "x-ms-summary": "Created",
          "format": "date-time",
          "description": "Indicates when the client was created"
        },
        "modified": {
          "type": "string",
          "x-ms-summary": "Modified",
          "format": "date-time",
          "description": "Indicates when the client was changed"
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status",
          "description": "Indicates whether the data record was just created, updated or deleted"
        }
      }
    },
    "Client": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Clients' name",
          "title": "Name"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description",
          "description": "Description of the client",
          "title": "Description"
        }
      },
      "required": [
        "name"
      ]
    },
    "TimesResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "ID",
          "description": "Unique ID of the time"
        },
        "deleted": {
          "type": "boolean",
          "x-ms-summary": "Deleted",
          "description": "Indicates whether the time is marked as deleted"
        },
        "billable": {
          "type": "boolean",
          "description": "Indicates whether the time is marked as billable",
          "x-ms-summary": "Billable"
        },
        "client": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "Client ID",
              "description": "Unique ID of the client of this time"
            },
            "name": {
              "type": "string",
              "x-ms-summary": "Clients' name",
              "description": "Clients' name"
            }
          }
        },
        "project": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "Project ID",
              "description": "Unique ID of the project of this time"
            },
            "name": {
              "type": "string",
              "x-ms-summary": "Projects' name",
              "description": "Projects' name"
            }
          }
        },
        "task": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "Task ID",
              "description": "Unique ID of the task of this time"
            },
            "name": {
              "type": "string",
              "x-ms-summary": "Tasks' name",
              "description": "Tasks' name"
            }
          }
        },
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "User ID",
              "description": "Unique ID of the user of this time"
            },
            "name": {
              "type": "string",
              "x-ms-summary": "Users' name",
              "description": "Users' name"
            }
          }
        },
        "timeDiff": {
          "type": "number",
          "x-ms-summary": "Duration",
          "description": "The duration of the time entry"
        },
        "start": {
          "type": "string",
          "x-ms-summary": "Start",
          "format": "date-time",
          "description": "The start-date and start-time of the time entry"
        },
        "end": {
          "type": "string",
          "x-ms-summary": "End",
          "format": "date-time",
          "description": "The end-date and end-time of the time entry"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-ms-summary": "Tag ID",
                "description": "Unique ID of the tag of this time"
              },
              "name": {
                "type": "string",
                "x-ms-summary": "Tags' name",
                "description": "Tags' name"
              }
            }
          }
        },
        "created": {
          "type": "string",
          "x-ms-summary": "Created",
          "format": "date-time",
          "description": "Indicates when the time was created"
        },
        "modified": {
          "type": "string",
          "x-ms-summary": "Modified",
          "format": "date-time",
          "description": "Indicates when the time was changed"
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status",
          "description": "Indicates whether the data record was just created, updated or deleted"
        }
      }
    },
    "Time": {
      "type": "object",
      "properties": {
        "client": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "ID",
              "description": "Client (or Client ID)",
              "title": "Client",
              "x-ms-dynamic-values": {
                "operationId": "Get_Clients",
                "value-path": "id",
                "value-title": "name",
                "parameters": {
                  "workspace-id": {
                    "parameter": "workspace-id"
                  }
                }
              }
            }
          },
          "description": "The client of this time",
          "required": [
            "id"
          ]
        },
        "project": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "ID",
              "description": "Project (or Project ID)",
              "title": "Project",
              "x-ms-dynamic-values": {
                "operationId": "Get_Client_Projects",
                "value-path": "id",
                "value-title": "name",
                "parameters": {
                  "clientid": {
                    "parameter": "client.id"
                  },
                  "workspace-id": {
                    "parameter": "workspace-id"
                  }
                }
              },
              "x-ms-dynamic-list": {
                "operationId": "Get_Client_Projects",
                "itemValuePath": "id",
                "itemTitlePath": "name",
                "parameters": {
                  "clientid": {
                    "parameterReference": "body/client/id"
                  },
                  "workspace-id": {
                    "parameterReference": "workspace-id"
                  }
                }
              }
            }
          },
          "description": "The projet of this time",
          "required": [
            "id"
          ]
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "The name of this time entry (task name)"
        },
        "start": {
          "type": "string",
          "x-ms-summary": "Start",
          "format": "date-time",
          "description": "The start-date and start-time of the time entry"
        },
        "end": {
          "type": "string",
          "x-ms-summary": "End",
          "format": "date-time",
          "description": "The end-date and end-time of the time entry"
        },
        "billable": {
          "type": "boolean",
          "description": "Indicates whether the time is marked as billable",
          "default": false,
          "x-ms-summary": "Billable"
        },
        "tags": {
          "x-ms-summary": "Tags",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-ms-summary": "ID",
                "description": "Tag (or Tag ID)",
                "title": "Tag",
                "x-ms-dynamic-values": {
                  "operationId": "Get_Time_Tags",
                  "value-path": "id",
                  "value-title": "name",
                  "parameters": {
                    "workspace-id": {
                      "parameter": "workspace-id"
                    },
                    "$filter": "tagType eq 1"
                  }
                }
              }
            },
            "description": "The tag of this time",
            "required": [
              "id"
            ]
          }
        },
        "user": {
          "x-ms-visibility": "advanced",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "ID",
              "description": "User (or User ID) - if blank, current user is set",
              "title": "User",
              "x-ms-dynamic-values": {
                "operationId": "Get_Workspace_ById",
                "value-path": "id",
                "value-title": "name",
                "value-collection": "users",
                "parameters": {
                  "workspace-id": {
                    "parameter": "workspace-id"
                  },
                  "workspace_id": {
                    "parameter": "workspace-id"
                  }
                }
              },
              "x-ms-dynamic-list": {
                "operationId": "Get_Workspace_ById",
                "itemValuePath": "id",
                "itemTitlePath": "name",
                "itemsPath": "users",
                "parameters": {
                  "workspace-id": {
                    "parameterReference": "workspace-id"
                  },
                  "workspace_id": {
                    "parameterReference": "workspace-id"
                  }
                }
              }
            }
          },
          "required": [
            "id"
          ]
        }
      },
      "required": [
        "client",
        "project",
        "name",
        "start",
        "end",
        "billable"
      ]
    },
    "TasksResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "ID",
          "description": "Unique ID of the task"
        },
        "deleted": {
          "type": "boolean",
          "x-ms-summary": "Deleted",
          "description": "Indicates whether the task is marked as deleted"
        },
        "created": {
          "type": "string",
          "x-ms-summary": "Created",
          "format": "date-time",
          "description": "Indicates when the task was created"
        },
        "modified": {
          "type": "string",
          "x-ms-summary": "Modified",
          "format": "date-time",
          "description": "Indicates when the task was changed"
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status",
          "description": "Indicates whether the data record was just created, updated or deleted"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Tasks' Name"
        },
        "client": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "Client ID",
              "description": "Unique ID of the client of this task"
            },
            "name": {
              "type": "string",
              "x-ms-summary": "Clients' Name",
              "description": "Clients' Name"
            }
          }
        },
        "project": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "Project ID",
              "description": "Unique ID of the project of this task"
            },
            "name": {
              "type": "string",
              "x-ms-summary": "Projects' name",
              "description": "Projects' name"
            }
          }
        },
        "estimation": {
          "type": "number",
          "format": "double",
          "description": "The estimated budget of the task",
          "x-ms-summary": "Estimation"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "client": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "ID",
              "description": "Client (or Client ID)",
              "title": "Client",
              "x-ms-dynamic-values": {
                "operationId": "Get_Clients",
                "value-path": "id",
                "value-title": "name",
                "parameters": {
                  "workspace-id": {
                    "parameter": "workspace-id"
                  }
                }
              }
            }
          },
          "description": "The client of this task",
          "required": [
            "id"
          ]
        },
        "project": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "ID",
              "description": "Project (or Project ID)",
              "title": "Project",
              "x-ms-dynamic-values": {
                "operationId": "Get_Client_Projects",
                "value-path": "id",
                "value-title": "name",
                "parameters": {
                  "clientid": {
                    "parameter": "client.id"
                  },
                  "workspace-id": {
                    "parameter": "workspace-id"
                  }
                }
              },
              "x-ms-dynamic-list": {
                "operationId": "Get_Client_Projects",
                "itemValuePath": "id",
                "itemTitlePath": "name",
                "parameters": {
                  "clientid": {
                    "parameterReference": "body/client/id"
                  },
                  "workspace-id": {
                    "parameterReference": "workspace-id"
                  }
                }
              }
            }
          },
          "description": "The projet of this task",
          "required": [
            "id"
          ]
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Tasks' name",
          "title": "Name"
        },
        "estimation": {
          "type": "number",
          "format": "double",
          "description": "The estimated budget of the task",
          "x-ms-summary": "Estimation (hours)",
          "default": 0
        }
      },
      "required": [
        "client",
        "project",
        "name"
      ]
    },
    "GroupsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "ID",
          "description": "Unique ID of the group"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Tags' name"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-ms-summary": "User ID",
                "description": "Unique ID of the user"
              },
              "name": {
                "type": "string",
                "x-ms-summary": "Name",
                "description": "User-Name"
              }
            }
          }
        }
      }
    },
    "Group": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Group name"
        },
        "users": {
          "type": "array",
          "x-ms-summary": "User",
          "description": "User",
          "title": "User",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-ms-summary": "ID",
                "description": "User (or User ID)",
                "title": "User",
                "x-ms-dynamic-values": {
                  "operationId": "Get_Workspace_ById",
                  "value-path": "id",
                  "value-title": "name",
                  "value-collection": "users",
                  "parameters": {
                    "workspace-id": {
                      "parameter": "workspace-id"
                    },
                    "workspace_id": {
                      "parameter": "workspace-id"
                    }
                  }
                },
                "x-ms-dynamic-list": {
                  "operationId": "Get_Workspace_ById",
                  "itemValuePath": "id",
                  "itemTitlePath": "name",
                  "itemsPath": "users",
                  "parameters": {
                    "workspace-id": {
                      "parameterReference": "workspace-id"
                    },
                    "workspace_id": {
                      "parameterReference": "workspace-id"
                    }
                  }
                }
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "required": [
        "name",
        "users"
      ]
    },
    "TagsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "ID",
          "description": "Unique ID of the tag"
        },
        "deleted": {
          "type": "boolean",
          "x-ms-summary": "Deleted",
          "description": "Indicates whether the tag is marked as deleted"
        },
        "created": {
          "type": "string",
          "x-ms-summary": "Created",
          "format": "date-time",
          "description": "Indicates when the tag was created"
        },
        "modified": {
          "type": "string",
          "x-ms-summary": "Modified",
          "format": "date-time",
          "description": "Indicates when the tag was changed"
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status",
          "description": "Indicates whether the data record was just created, updated or deleted"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Tags' name"
        }
      }
    },
    "TimeTag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Tags' name"
        },
        "tagType": {
          "type": "integer",
          "x-ms-summary": "Name",
          "description": "tagType",
          "title": "tagType",
          "format": "int32",
          "x-ms-visibility": "internal",
          "default": 1,
          "enum": [
            1
          ]
        }
      },
      "required": [
        "name",
        "tagType"
      ]
    },
    "CustomFeedEvent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Entries' name"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description",
          "description": "Entries' description"
        },
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "x-ms-summary": "ID",
              "description": "User (or User ID)",
              "title": "User",
              "x-ms-dynamic-values": {
                "operationId": "Get_Workspace_ById",
                "value-path": "id",
                "value-title": "name",
                "value-collection": "users",
                "parameters": {
                  "workspace-id": {
                    "parameter": "workspace-id"
                  },
                  "workspace_id": {
                    "parameter": "workspace-id"
                  }
                }
              },
              "x-ms-dynamic-list": {
                "operationId": "Get_Workspace_ById",
                "itemValuePath": "id",
                "itemTitlePath": "name",
                "itemsPath": "users",
                "parameters": {
                  "workspace-id": {
                    "parameterReference": "workspace-id"
                  },
                  "workspace_id": {
                    "parameterReference": "workspace-id"
                  }
                }
              }
            }
          },
          "required": [
            "id"
          ]
        },
        "start": {
          "type": "string",
          "x-ms-summary": "Start",
          "format": "date-time",
          "description": "The start-date and start-time of the feed entry"
        },
        "end": {
          "type": "string",
          "x-ms-summary": "End",
          "format": "date-time",
          "description": "The end-date and end-time of the feed entry"
        },
        "imageUrl": {
          "type": "string",
          "x-ms-summary": "Icon Url",
          "description": "An icon Url, which is displayed in the feed entry. Best use 96px96px and https."
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Url",
          "description": "Url to an external address. E.g. a detail page. This link in the feed can be opened via the context menu."
        },
        "category": {
          "type": "string",
          "x-ms-summary": "Category",
          "description": "Use a value that can be filtered later in the interface. For example 'Planner'."
        }
      },
      "required": [
        "name",
        "start",
        "end",
        "user"
      ]
    },
    "CustomFeedEventResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "ID",
          "description": "Unique ID of the custom feed event"
        },
        "deleted": {
          "type": "boolean",
          "x-ms-summary": "Deleted",
          "description": "Indicates whether the custom feed event is marked as deleted"
        },
        "created": {
          "type": "string",
          "x-ms-summary": "Created",
          "format": "date-time",
          "description": "Indicates when the custom feed event was created"
        },
        "modified": {
          "type": "string",
          "x-ms-summary": "Modified",
          "format": "date-time",
          "description": "Indicates when the custom feed event was changed"
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status",
          "description": "Indicates whether the data record was just created, updated or deleted"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Custom Feed Events' name"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description",
          "description": "Entries' description"
        },
        "start": {
          "type": "string",
          "x-ms-summary": "Start",
          "format": "date-time",
          "description": "The start-date and start-time of the feed entry"
        },
        "end": {
          "type": "string",
          "x-ms-summary": "End",
          "format": "date-time",
          "description": "The end-date and end-time of the feed entry"
        },
        "imageUrl": {
          "type": "string",
          "x-ms-summary": "Icon Url",
          "description": "An icon Url, which is displayed in the feed entry. Best use 96px96px and https."
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Url",
          "description": "Url to an external address. E.g. a detail page. This link in the feed can be opened via the context menu."
        },
        "category": {
          "type": "string",
          "x-ms-summary": "Category",
          "description": "This value can be used to filter the feeds in the interface."
        }
      }
    },
    "ExcelResponse": {
      "type": "string",
      "x-ms-summary": "Excel file",
      "description": "Excel file"
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "ID",
          "description": "Unique ID of the user"
        },
        "deleted": {
          "type": "boolean",
          "x-ms-summary": "Deleted",
          "description": "Indicates whether the tag is marked as deleted"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "E-Mail",
          "description": "User's email adress"
        },
        "defaultWorkspace": {
          "type": "string",
          "x-ms-summary": "Default workspace ID",
          "description": "The workspace Id of the default workspace of the user"
        },
        "workspaces": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-ms-summary": "Workspace ID",
                "description": "Unique ID of the workspace"
              },
              "name": {
                "type": "string",
                "x-ms-summary": "Workspace-Name",
                "description": "Workspace-Name"
              }
            }
          }
        }
      }
    },
    "WorkspaceResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "ID",
          "description": "Unique ID of the user"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Workspace name"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-ms-summary": "User ID",
                "description": "Unique ID of the user"
              },
              "name": {
                "type": "string",
                "x-ms-summary": "Name",
                "description": "User-Name"
              },
              "email": {
                "type": "string",
                "x-ms-summary": "E-Mail",
                "description": "Users' email"
              }
            }
          }
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2_auth": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://timeghost.io"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://timeghost.io/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity;Business Intelligence"
    }
  ]
}
