{
  "basePath": "/v1",
  "consumes": [],
  "definitions": {
    "AdaptiveCard": {
      "properties": {
        "$schema": {
          "example": "https://adaptivecards.io/schemas/adaptive-card.json",
          "description": "The Adaptive Card Schema from https://adaptivecards.io. Must be set to 'https://adaptivecards.io/schemas/adaptive-card.json'",
          "type": "string",
          "x-ms-summary": "Adaptive Card Schema"
        },
        "actions": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "x-ms-summary": "Adaptive Card Actions",
          "description": "An array of adaptive card actions."
        },
        "body": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "x-ms-summary": "Adaptive Card Body",
          "description": "An array of components containing various containers and elements of the adaptive card body."
        },
        "type": {
          "example": "AdaptiveCard",
          "type": "string",
          "description": "The Adaptive Card Type. Must be set to 'AdaptiveCard.'",
          "x-ms-summary": "Adaptive Card Type"
        },
        "version": {
          "example": "1.2",
          "type": "string",
          "x-ms-summary": "Adaptive Card Version",
          "description": "One of the available versions from https://adaptivecards.io. The elements used in the adaptive card are subject to the adaptive card version set within this result."
        }
      },
      "required": [
        "$schema",
        "type",
        "version"
      ],
      "type": "object"
    },
    "AttachmentsRequestBody": {
      "properties": {
        "additionalParameters": {
          "additionalProperties": true,
          "default": {},
          "description": "A JSON object describing the additional fields to send with POST request",
          "example": {
            "recordId": 123,
            "recordType": "Ticket",
            "title": "Screenshot of the connectwise login issue"
          },
          "type": "object"
        },
        "apiRequestHeaders": {
          "additionalProperties": true,
          "default": {},
          "description": "A JSON object describing the headers to send with POST request such as Authorization",
          "example": {
            "Authorization": "Basic Zm9vOmJhcgo=",
            "Authorization2": "Bearer ABC123",
            "additionalHeader1": "additionalHeader1Value"
          },
          "type": "object"
        },
        "apiUrl": {
          "description": "The API URL to send the attachments and data to.",
          "example": "https://{connectwiseSite}/v4_6_release/apis/3.0/system/documents",
          "type": "string",
          "x-ms-summary": "API URL"
        },
        "attachmentUrl": {
          "description": "The URL which contains the attachment content to send to the API URL",
          "example": "https://otto.bot/assets/images/logo/logo.png",
          "type": "string",
          "x-ms-summary": "Attachment URL"
        },
        "filename": {
          "description": "The file name of the attachment",
          "example": "screenshot-123.png",
          "type": "string",
          "x-ms-summary": "Attachment File Name"
        }
      },
      "required": [
        "attachmentUrl",
        "apiUrl",
        "filename",
        "additionalParameters",
        "apiRequestHeaders"
      ],
      "type": "object"
    },
    "Requestbody": {
      "properties": {
        "adaptiveCard": {
          "$ref": "#/definitions/AdaptiveCard"
        },
        "renderPreformattedText": {
          "description": "A boolean field to let Otto render the result as provided to the user. When this flag is enabled, Otto skips markdown, adaptive card processing of the sent result. Example scenarios include rendering tabular, csv formatted text file results.",
          "example": false,
          "type": "boolean",
          "x-ms-summary": "Render Preformatted Text"
        },
        "text": {
          "description": "A markdown supported text field. Otto parses the markdown before rendering the content to the user.",
          "example": "This is a **markdown** supported text.",
          "title": "Text",
          "type": "string",
          "x-ms-summary": "Text"
        },
        "endRequest": {
          "example": true,
          "title": "End Request",
          "description": "A boolean field which instructs Otto to expect multiple responses throughout this request. Set this to false to send multiple responses to Otto throughout the execution of this request. Set the value to false if it's the final response.",
          "type": "boolean",
          "x-ms-summary": "End Request"
        }
      },
      "required": [
        "text",
        "endRequest"
      ],
      "type": "object"
    },
    "Response": {
      "properties": {
        "message": {
          "example": "Successfully sent the result to the user.",
          "type": "string",
          "description": "The result message from Otto when an action is executed.",
          "x-ms-summary": "Result Message"
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    }
  },
  "host": "api.otto.bot",
  "info": {
    "description": "Otto is an easy-to-train chatbot which answers questions and automates the tasks you need done, while never forgetting, never leaving the organization, and working 24/7/365 to help you get more accomplished every single day. AI and automation solutions allow you to get more tasks done every day with more productivity, lower costs, without the constraint of time.",
    "title": "Otto.bot",
    "version": "1.0.0",
    "contact": {
      "name": "Otto.bot",
      "url": "https://otto.bot",
      "email": "support@otto.bot"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://otto.bot"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://otto.bot/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI;Productivity"
    }
  ],
  "parameters": {},
  "paths": {
    "/attachments": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Send file attachments and data to a URL using multipart/form-data encoding. This API is created to support execution flows where the built-in HTTP request connector cannot easily handle multipart/formdata\n",
        "operationId": "SendAttachmentsToUrl",
        "parameters": [
          {
            "description": "Request parameters",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AttachmentsRequestBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully sent the attachments and request data."
          },
          "400": {
            "description": "An error occured while processing the request. This could be due to any of the following.\n- Missing attachmentUrl, apiUrl, filename, apiRequestHeaders or additionalParameters fields\n- Incorrect attachmentUrl or apiUrl.\n"
          }
        },
        "summary": "Send file attachments to any URL",
        "tags": [
          "Otto"
        ]
      }
    },
    "/skills/results": {
      "post": {
        "description": "Send one or more responses to Otto during the execution of a skill",
        "operationId": "ReturnResultsToBot",
        "parameters": [
          {
            "description": "The absolute URL sent from Otto when the skill is triggered. This value is unique per request and is available in the request body.",
            "in": "query",
            "name": "returnResultURL",
            "required": true,
            "type": "string",
            "x-ms-summary": "Return Result URL"
          },
          {
            "description": "Result details",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Requestbody"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully sent the result to the user.",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "One or more required property is missing from request body or is invalid."
          },
          "401": {
            "description": "Invalid API Key"
          }
        },
        "summary": "Return results to bot",
        "tags": [
          "Otto"
        ]
      }
    }
  },
  "produces": [],
  "responses": {},
  "schemes": [
    "https"
  ],
  "security": [
    {
      "API Key": []
    }
  ],
  "securityDefinitions": {
    "API Key": {
      "in": "header",
      "name": "x-otto-bot-key",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "APIs used to interact with Otto",
      "name": "Otto"
    }
  ]
}