{
  "swagger": "2.0",
  "info": {
    "title": "Projectplace",
    "description": "Get work done across projects and teams. Projectplace lets you plan, collaborate and track progress of all projects and assignments in an easy and user-friendly way.",
    "contact": {
      "name": "Projectplace support",
      "url": "https://success.planview.com/Projectplace/Projectplace_Support",
      "email": "support@projectplace.com"
    },
    "version": "1.0"
  },
  "host": "service.projectplace.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "x-ms-connector-metadata": [
      {
        "propertyName": "Website",
        "propertyValue": "https://www.planview.com/products-solutions/products/projectplace/"
      },
      {
        "propertyName": "Privacy policy",
        "propertyValue": "https://www.planview.com/trust/privacy/"
      },
      {
        "propertyName": "Categories",
        "propertyValue": "Productivity;Collaboration"
      }
    ],
  "paths": {
    "/v1/external_notifications/0/hooks/set_power_hook": {
      "x-ms-notification-content": {
        "title": "When a card is created",
        "description": "Triggers when a card is created on the defined board",
        "schema": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "description": "Describes the action that triggered the event",
              "title": "Action"
            },
            "user": {
              "type": "string",
              "title": "User",
              "description": "The user who triggered the event"
            },
            "card_url": {
              "type": "string",
              "title": "Card Url",
              "description": "A link to the card URL"
            },
            "card_name": {
              "type": "string",
              "title": "Card Name",
              "description": "The name of the card"
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "The current column the card is placed in"
            },
            "board_name": {
              "type": "string",
              "title": "Board Name",
              "description": "The name of the Board where the card lives"
            },
            "board_id": {
              "type": "integer",
              "title": "Board ID",
              "description": "The unique id of the board."
            },
            "card_id": {
              "type": "integer",
              "description": "The unique ID of the card",
              "title": "Card ID",
              "format": "int64"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "success"
          }
        },
        "summary": "When a card is created",
        "description": "Triggers when a card is created on the defined board",
        "operationId": "set_webhook_card_create",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "card_create": {
                  "type": "boolean",
                  "default": true,
                  "title": "When a card is created",
                  "description": "Triggers when a card is created on the defined board",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "internal"
                },
                "webhook": {
                  "type": "string",
                  "description": "webhook",
                  "x-ms-visibility": "internal",
                  "title": "",
                  "x-ms-notification-url": true
                },
                "board_id": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Board",
                  "description": "The id of the Board that the card belongs to",
                  "x-ms-dynamic-values": {
                    "operationId": "list_boards",
                    "value-path": "board",
                    "value-title": "name"
                  }
                }
              },
              "required": [
                "webhook",
                "card_create",
                "board_id"
              ]
            }
          }
        ]
      }
    },
    "/v1/external_notifications/1/hooks/set_power_hook": {
      "x-ms-notification-content": {
        "summary": "When a card's properties are changed",
        "description": "Triggers when one of the card's properties are changed",
        "schema": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "description": "Describes the action that triggered the event",
              "title": "Action"
            },
            "user": {
              "type": "string",
              "title": "User",
              "description": "The user who triggered the event"
            },
            "card_url": {
              "type": "string",
              "title": "Card Url",
              "description": "A link to the card URL"
            },
            "card_name": {
              "type": "string",
              "title": "Card Name",
              "description": "The name of the card"
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "The current column the card is placed in"
            },
            "board_name": {
              "type": "string",
              "title": "Board Name",
              "description": "The name of the Board where the card lives"
            },
            "board_id": {
              "type": "integer",
              "title": "Board ID",
              "description": "The unique id of the board."
            },
            "card_id": {
              "type": "integer",
              "description": "The unique ID of the card",
              "title": "Card ID",
              "format": "int64"
            },
            "due_date": {
              "type": "string",
              "title": "Due Date",
              "description": "The due date of the card"
            },
            "assignee_email": {
              "type": "string",
              "title": "Assignee email",
              "description": "The email of the card's assignee"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "success"
          }
        },
        "summary": "When a card's properties are changed",
        "description": "Triggers when one of the card's properties are changed",
        "operationId": "set_webhook_properties_change",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "card_blocked": {
                  "type": "boolean",
                  "default": true,
                  "title": "When a card is blocked",
                  "description": "Triggers when a card is blocked",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "important"
                },
                "card_unblock": {
                  "type": "boolean",
                  "default": true,
                  "title": "When a card block is removed",
                  "description": "Triggers when a card block is removed",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "important"
                },
                "status_change": {
                  "type": "boolean",
                  "default": true,
                  "title": "When a card changes column",
                  "description": "Triggers when a card is moved to another column on the",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "important"
                },
                "card_done": {
                  "type": "boolean",
                  "default": true,
                  "title": "When a card status changes to done",
                  "description": "Triggers when a card is set to done by moving it to the rightmost column on the board",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "important"
                },
                "description_changed": {
                  "type": "boolean",
                  "default": true,
                  "title": "When the description of a card changes",
                  "description": "Triggers when the description of a card changes",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "important"
                },
                "due_date_changed": {
                  "type": "boolean",
                  "default": true,
                  "title": "When the due date of the a changes",
                  "description": "Triggers when the due date of a card changes",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "important"
                },
                "webhook": {
                  "type": "string",
                  "description": "webhook",
                  "x-ms-visibility": "internal",
                  "title": "",
                  "x-ms-notification-url": true
                },
                "board_id": {
                  "title": "Board",
                  "description": "The id of the Board that the card belongs to",
                  "type": "integer",
                  "format": "int64",
                  "x-ms-dynamic-values": {
                    "operationId": "list_boards",
                    "value-path": "board",
                    "value-title": "name"
                  }
                }
              },
              "required": [
                "webhook",
                "card_blocked",
                "card_unblock",
                "status_change",
                "card_done",
                "description_changed",
                "due_date_changed",
                "board_id"
              ]
            }
          }
        ]
      }
    },
    "/v1/external_notifications/2/hooks/set_power_hook": {
      "x-ms-notification-content": {
        "summary": "When a card is due",
        "description": "Triggers on the date that the card is due",
        "schema": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "description": "Describes the action that triggered the event",
              "title": "Action"
            },
            "user": {
              "type": "string",
              "title": "User",
              "description": "The user who triggered the event"
            },
            "card_url": {
              "type": "string",
              "title": "Card Url",
              "description": "A link to the card URL"
            },
            "card_name": {
              "type": "string",
              "title": "Card Name",
              "description": "The name of the card"
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "The current column the card is placed in"
            },
            "board_name": {
              "type": "string",
              "title": "Board Name",
              "description": "The name of the Board where the card lives"
            },
            "board_id": {
              "type": "integer",
              "title": "Board ID",
              "description": "The unique id of the board."
            },
            "card_id": {
              "type": "integer",
              "description": "The unique ID of the card",
              "title": "Card ID",
              "format": "int64"
            },
            "due_date": {
              "type": "string",
              "title": "Due Date",
              "description": "The due date of the card"
            },
            "assignee_email": {
              "type": "string",
              "title": "Assignee email",
              "description": "The email of the card's assignee"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "success"
          }
        },
        "summary": "When a card is due",
        "description": "Triggers on the date that the card is due",
        "operationId": "set_webhook_card_due_date",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "due_today": {
                  "type": "boolean",
                  "default": true,
                  "title": "When a card is due",
                  "description": "Triggers on the date that the card is due",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "internal"
                },
                "webhook": {
                  "type": "string",
                  "description": "webhook",
                  "x-ms-visibility": "internal",
                  "title": "",
                  "x-ms-notification-url": true
                },
                "board_id": {
                  "title": "Board",
                  "description": "The id of the Board that the card belongs to",
                  "type": "integer",
                  "format": "int64",
                  "x-ms-dynamic-values": {
                    "operationId": "list_boards",
                    "value-path": "board",
                    "value-title": "name"
                  }
                }
              },
              "required": [
                "webhook",
                "due_today",
                "board_id"
              ]
            }
          }
        ]
      }
    },
    "/v1/boards/{board_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "description": "access"
                },
                "activity_count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "activity_count"
                },
                "attachment_container_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "attachment_container_id"
                },
                "done_count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "done_count"
                },
                "email": {
                  "type": "string",
                  "description": "email"
                },
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "id"
                },
                "is_archived": {
                  "type": "boolean",
                  "description": "is_archived"
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int64",
                        "description": "display_order"
                      },
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      }
                    }
                  },
                  "description": "labels"
                },
                "mail_active": {
                  "type": "boolean",
                  "description": "mail_active"
                },
                "name": {
                  "type": "string",
                  "description": "name"
                },
                "progresses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int64",
                        "description": "display_order"
                      },
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "wip_limit": {
                        "type": "string",
                        "description": "wip_limit"
                      }
                    }
                  },
                  "description": "progresses"
                },
                "project": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "id"
                    },
                    "is_team_member_plus": {
                      "type": "boolean",
                      "description": "is_team_member_plus"
                    },
                    "is_team_member_plus_plan": {
                      "type": "boolean",
                      "description": "is_team_member_plus_plan"
                    },
                    "name": {
                      "type": "string",
                      "description": "name"
                    },
                    "type": {
                      "type": "string",
                      "description": "type"
                    }
                  },
                  "description": "project"
                },
                "project_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "project_id"
                },
                "project_step": {
                  "type": "string",
                  "description": "project_step"
                }
              }
            }
          }
        },
        "summary": "Get board information",
        "description": "Retrieves detailed information about the board",
        "operationId": "get_board_info",
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/v1/external_notifications/{board_id}/create_card": {
      "post": {
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "description": "Access rights",
                  "title": "Access"
                },
                "assignee": {
                  "type": "object",
                  "description": "The person who is assigned to the card",
                  "title": "Assignee"
                },
                "assignee_id": {
                  "type": "integer",
                  "description": "The id of the person who is assigned the card",
                  "title": "Assignee Id"
                },
                "board_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The ID of the board",
                  "title": "Board Id"
                },
                "board_name": {
                  "type": "string",
                  "description": "The name of the board",
                  "title": "Board Name"
                },
                "direct_url": {
                  "type": "string",
                  "description": "The card's direct URL",
                  "title": "Direct URL"
                },
                "due_date": {
                  "type": "string",
                  "title": "Due date",
                  "description": "The due date of the card"
                },
                "estimated_time": {
                  "type": "string",
                  "description": "Estimated time for completion",
                  "title": "Estimated time"
                },
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The ID of the card",
                  "title": "Card ID"
                },
                "is_blocked": {
                  "type": "boolean",
                  "description": "Is the card is",
                  "title": "Is Blocked"
                },
                "is_blocked_reason": {
                  "type": "string",
                  "description": "The blocking reason - if blocked",
                  "title": "Blocking reason"
                },
                "is_done": {
                  "type": "boolean",
                  "description": "Is the card done",
                  "title": "Is Done"
                },
                "is_template": {
                  "type": "boolean",
                  "description": "Is a template card",
                  "title": "Is template"
                },
                "label_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The id of the label",
                  "title": "Label id"
                },
                "planlet_id": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Planlet id",
                  "description": "The id of the planlet"
                },
                "reported_time": {
                  "type": "string",
                  "title": "Reported time",
                  "description": "How much time was reported for the card"
                },
                "title": {
                  "type": "string",
                  "description": "The card's title",
                  "title": "Title"
                }
              }
            }
          }
        },
        "summary": "Create Card",
        "description": "Creates a new card with the parameters provided",
        "operationId": "create_card",
        "parameters": [
          {
            "name": "board_id",
            "description": "The id of the Board where the card should be created",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-dynamic-values": {
              "operationId": "list_boards",
              "value-path": "board",
              "value-title": "name"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Board"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "column_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The column where the card should be created",
                  "title": "Column",
                  "x-ms-dynamic-values": {
                    "operationId": "get_board_info",
                    "value-path": "id",
                    "value-collection": "progresses",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "board_id"
                      }
                    }
                  }
                },
                "title": {
                  "type": "string",
                  "description": "The title of the created card",
                  "title": "Card Title"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the created card",
                  "title": "Card Description"
                },
                "assignee_email": {
                  "type": "string",
                  "description": "The person that will be assigned to the created card",
                  "title": "Assignee",
                  "x-ms-dynamic-values": {
                    "operationId": "list_members",
                    "value-path": "email",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "board_id"
                      }
                    }
                  }
                },
                "planlet_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The activity the Card should be associated with",
                  "title": "Activity",
                  "x-ms-dynamic-values": {
                    "operationId": "get_planlets",
                    "value-path": "id",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "board_id"
                      }
                    }
                  }
                },
                "due_date": {
                  "type": "string",
                  "description": "The due date of the created card",
                  "title": "Due date",
                  "format": "date"
                },
                "label_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The label of the created card",
                  "title": "Label",
                  "x-ms-dynamic-values": {
                    "operationId": "get_board_info",
                    "value-path": "id",
                    "value-collection": "labels",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "board_id"
                      }
                    }
                  }
                }
              },
              "required": [
                "title"
              ]
            }
          }
        ]
      }
    },
    "/v1/external_notifications/{board_id}/move_card": {
      "post": {
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "description": "Access rights",
                  "title": "Access"
                },
                "assignee_id": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Assignee id",
                  "description": "The ID of the person the card assigned to"
                },
                "board_id": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Board id",
                  "description": "The ID of the board"
                },
                "board_name": {
                  "type": "string",
                  "title": "Board name",
                  "description": "The name of the board"
                },
                "column_id": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Column id",
                  "description": "The id of the column the card is on"
                },
                "column_name": {
                  "type": "string",
                  "title": "Column name",
                  "description": "The name of the column"
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The description on the card"
                },
                "direct_url": {
                  "type": "string",
                  "title": "Direct URL",
                  "description": "The direct URL of the card"
                },
                "due_date": {
                  "type": "string",
                  "title": "Due date",
                  "description": "The due date of the card"
                },
                "estimated_time": {
                  "type": "string",
                  "title": "Estimate time",
                  "description": "The estimated time of the card"
                },
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "title": "id",
                  "description": "The id of the card"
                },
                "is_blocked": {
                  "type": "boolean",
                  "title": "Blocked",
                  "description": "Is the card blocked"
                },
                "is_blocked_reason": {
                  "type": "string",
                  "title": "Blocked reason",
                  "description": "The reason the card is blocked"
                },
                "is_done": {
                  "type": "boolean",
                  "title": "Is done",
                  "description": "Is the card done"
                },
                "is_template": {
                  "type": "boolean",
                  "title": "Is template",
                  "description": "Is a template card"
                },
                "label_id": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Label Id",
                  "description": "The id of the card's label"
                },
                "label_name": {
                  "type": "string",
                  "title": "Label name",
                  "description": "The name of the label"
                },
                "planlet_id": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Planlet id",
                  "description": "The id of the planlet"
                },
                "reported_time": {
                  "type": "string",
                  "title": "Reported time",
                  "description": "The time reported for this card"
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of the card"
                }
              }
            }
          }
        },
        "summary": "Move card to another column",
        "description": "Move a card on the selected board",
        "operationId": "move_card",
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "description": "The id of the Board where the card should be created",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "operationId": "list_boards",
              "value-path": "board",
              "value-title": "name"
            },
            "format": "int64",
            "x-ms-summary": "Board"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "card_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The card to be moved",
                  "title": "Card"
                },
                "card_title": {
                  "type": "string",
                  "description": "The title of the card to be moved",
                  "title": "Card title"
                },
                "column_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The column where the card should be moved to",
                  "title": "Column",
                  "x-ms-dynamic-values": {
                    "operationId": "get_board_info",
                    "value-path": "id",
                    "value-collection": "progresses",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "board_id"
                      }
                    }
                  }
                }
              },
              "required": [
                "card_id"
              ]
            }
          }
        ]
      }
    },
    "/v2/board/{board_id}/cards": {
      "get": {
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "id"
                  },
                  "title": {
                    "type": "string",
                    "description": "title"
                  }
                }
              }
            }
          }
        },
        "summary": "Get cards on board",
        "description": "Returns the list of cards on a board",
        "operationId": "get_cards",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ]
      }
    },
    "/v1/external_notifications/lists/list_boards": {
      "get": {
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "board": {
                    "type": "integer",
                    "format": "int64",
                    "description": "board"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "project_id"
                  }
                }
              }
            }
          }
        },
        "summary": "Lists the boards the user have access to",
        "description": "Lists the boards that are part of the projects the user have access to",
        "operationId": "list_boards",
        "parameters": [],
        "x-ms-visibility": "internal"
      }
    },
    "/v1/external_notifications/{board_id}/list_planlets": {
      "get": {
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "id"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get the Planlets that exists on a board",
        "description": "Retrieves a list of Planlets that are connected to the specific board",
        "operationId": "get_planlets",
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/v1/external_notifications/{board_id}/list_members": {
      "get": {
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "description": "avatar"
                  },
                  "email": {
                    "type": "string",
                    "description": "email"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "first_name"
                  },
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "id"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last_name"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "role": {
                    "type": "string",
                    "description": "role"
                  },
                  "type": {
                    "type": "string",
                    "description": "type"
                  }
                }
              }
            }
          }
        },
        "summary": "Lists the members that have access to the board",
        "description": "Lists the members that have access to the board specified",
        "operationId": "list_members",
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "x-ms-visibility": "internal"
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://service.projectplace.com/oauth2/authorize",
      "tokenUrl": "https://service.projectplace.com/oauth2/access_token",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2_auth": []
    }
  ],
  "tags": []
}