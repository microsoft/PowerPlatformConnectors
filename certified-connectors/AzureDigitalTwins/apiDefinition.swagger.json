{
  "swagger": "2.0",
  "info": {
    "title": "AzureDigitalTwins",
    "description": "Azure Digital Twins is an Internet of Things (IoT) platform that enables you to create a digital representation of real-world things, places, business processes, and people. With this connector you will be able to interact with the ADT APIs.",
    "version": "1.0"
  },
  "host": "digitaltwins.azure.net",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/digitaltwins/{twinid}": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "description": "Results From the Twin.",
                  "title": "Result"
                }
              }
            }
          }
        },
        "summary": "Get Twin by Id",
        "description": "Retrieves a digital twin.",
        "operationId": "GetTwinById",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "delete": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Delete Twin",
        "description": "Deletes the Twin.",
        "operationId": "DeleteTwin",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "put": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Create new Twins",
        "operationId": "AddTwin",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Value for the Twin.",
                  "title": "Value"
                }
              }
            }
          }
        ],
        "description": "Creates a new Twin based on the message body."
      },
      "patch": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Twin",
        "description": "Update Twin Integer Properties.",
        "operationId": "UpdateTwinIntProp",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/integerUpdate"
          }
        ]
      }
    },
    "/digitaltwins/stringupdate/{twinid}": {
      "patch": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Twin",
        "description": "Update Twin String Properties.",
        "operationId": "UpdateTwinStringProp",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/stringUpdate"
          }
        ]
      }
    },
    "/digitaltwins/booleanupdate/{twinid}": {
      "patch": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Twin",
        "description": "Update Twin Boolean Properties.",
        "operationId": "UpdateTwinBooleanProp",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/booleanUpdate"
          }
        ]
      }
    },
    "/digitaltwins/{twinid}/components/{componentPath}": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "description": "Results From the Twin.",
                  "title": "Result"
                }
              }
            }
          }
        },
        "summary": "Get Component",
        "description": "Get Component for DigitalTwins.",
        "operationId": "GetComponent",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentPath",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "patch": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Twins - DigitalTwins UpdateComponent",
        "description": "Update Components integer property for Twins.",
        "operationId": "UpdateComponentIntProp",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentPath",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/integerUpdate"
          }
        ]
      }
    },
    "/digitaltwins/{twinid}/components/stringupdate/{componentPath}": {
      "patch": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Twins - DigitalTwins UpdateComponent",
        "description": "Update Components with String property for Twins.",
        "operationId": "UpdateComponentStringProp",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentPath",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/stringUpdate"
          }
        ]
      }
    },
    "/digitaltwins/{twinid}/components/booleanupdate/{componentPath}": {
      "patch": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Twins - DigitalTwins UpdateComponent",
        "description": "Update Components with Boolean property for Twins.",
        "operationId": "UpdateComponentBooleanProp",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentPath",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/booleanUpdate"
          }
        ]
      }
    },
    "/digitaltwins/{twinid}/relationships/{relationshipId}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TwinRelationship"
            }
          }
        },
        "summary": "Get Relationship by Id",
        "description": "Retrieve relationship by Twin id.",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationshipId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          }
        ],
        "operationId": "GetRelationshipById"
      },
      "delete": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Delete Twins Relationship",
        "description": "Deletes the Relationship from the Twin.",
        "operationId": "DeleteRelationship",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationshipId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "put": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Add Relationship",
        "description": "Add relationship to twin.",
        "operationId": "AddRelationship",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationshipId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Value for the Twin.",
                  "title": "Value"
                }
              }
            }
          }
        ]
      },
      "patch": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationshipId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/integerUpdate"
          }
        ],
        "summary": "Twins - DigitalTwins UpdateRelationship",
        "description": "Updates the integer property in Twin Relationships.",
        "operationId": "UpdateRelationshipIntProp"
      }
    },
    "/digitaltwins/{twinid}/relationships/stringupdate/{relationshipId}": {
      "patch": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationshipId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/stringUpdate"
          }
        ],
        "summary": "Twins - DigitalTwins UpdateRelationship",
        "description": "Updates the string property in Twin Relationships.",
        "operationId": "UpdateRelationshipStringProp"
      }
    },"/digitaltwins/{twinid}/relationships/booleanupdate/{relationshipId}": {
      "patch": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationshipId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/booleanUpdate"
          }
        ],
        "summary": "Twins - DigitalTwins UpdateRelationship",
        "description": "Updates the string property in Twin Relationships.",
        "operationId": "UpdateRelationshipBooleanProp"
      }
    },
    "/digitaltwins/{twinid}/incomingrelationships": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "description": "The collection of Incoming relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IncomingRelationship"
                  }
                },
                "nextLink": {
                  "description": "URL to get the next page of Incoming Relationship.",
                  "type": "string"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "operationId": "ListIncomingRelationships",
        "summary": "Twins - DigitalTwins ListIncomingRelationships",
        "description": "Retrieve Incoming Relationships.",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/digitaltwins/{twinid}/telemetry": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Send Telemetry Inputs.",
                  "title": "Telemetry Request"
                }
              }
            }
          }
        ],
        "summary": "Twins - DigitalTwins SendTelemetry",
        "description": "Send Telemetry Inputs.",
        "operationId": "SendTelemetry"
      }
    },
    "/digitaltwins/{twinid}/components/{componentPath}/telemetry": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Twins - DigitalTwins SendComponentTelemetry",
        "operationId": "SendComponentTelemetry",
        "description": "Send Component Telemetry.",
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentPath",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Send Component Telemetry Inputs.",
                  "title": "Component Telemetry Request"
                }
              }
            }
          }
        ]
      }
    },
    "/digitaltwins/{twinid}/relationships": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "description": "The collection of twin relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TwinRelationship"
                  }
                },
                "nextLink": {
                  "description": "URL to get the next page of Twin Relationship.",
                  "type": "string"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "twinid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "summary": "Twins - DigitalTwins ListRelationships",
        "operationId": "ListRelationships",
        "description": "Lists Digital Twins Relationships."
      }
    },
    "/query": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Results From the Twin.",
                  "title": "Value"
                },
                "continuationToken": {
                  "type": "string",
                  "description": "Link to get next set of items.",
                  "title": "Continuation Token"
                }
              }
            }
          }
        },
        "summary": "Query API",
        "description": "Uses raw query to return results.",
        "operationId": "QueryTwins",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2020-10-31",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "Query the Twins."
                },
                "continuationToken": {
                  "type": "string",
                  "description": "Link to get next set of items."
                }
              }
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "IncomingRelationship": {
      "type": "object",
      "properties": {
        "$sourceId": {
          "type": "string",
          "description": "Source Id."
        },
        "$relationshipId": {
          "type": "string",
          "description": "Relationship Id."
        },
        "$relationshipName": {
          "type": "string",
          "description": "Relationship Name."
        },
        "$relationshipLink": {
          "type": "string",
          "description": "Relationship Link."
        }
      }
    },
    "TwinRelationship": {
      "type": "object",
      "properties": {
        "$sourceId": {
          "type": "string",
          "description": "Source Id."
        },
        "$relationshipId": {
          "type": "string",
          "description": "Relationship Id."
        },
        "$targetId": {
          "type": "string",
          "description": "Target Id."
        },
        "$relationshipName": {
          "type": "string",
          "description": "Relationship Name."
        },
        "$etag": {
          "type": "string",
          "description": "E Tag Link."
        },
        "additionalProperties": {
          "type": "string",
          "description": "Property Values."
        }
      }
    }
  },
  "parameters": {
    "integerUpdate": {
      "name": "body",
      "in": "body",
      "required": false,
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "op": {
              "type": "string",
              "description": "Request Operation."
            },
            "path": {
              "type": "string",
              "description": "Path of the property that need to be updated."
            },
            "value": {
              "type": "integer",
              "format": "int32",
              "description": "Value that need to be updated."
            }
          }
        }
      }
    },
    "stringUpdate": {
      "name": "body",
      "in": "body",
      "required": false,
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "op": {
              "type": "string",
              "description": "Request Operation."
            },
            "path": {
              "type": "string",
              "description": "Path of the property that need to be updated."
            },
            "value": {
              "type": "string",
              "description": "Value that need to be updated."
            }
          }
        }
      }
    },
    "booleanUpdate": {
      "name": "body",
      "in": "body",
      "required": false,
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "op": {
              "type": "string",
              "description": "Request Operation."
            },
            "path": {
              "type": "string",
              "description": "Path of the property that need to be updated."
            },
            "value": {
              "type": "boolean",
              "description": "Value that need to be updated."
            }
          }
        }
      }
    }
  },
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2_auth": []
    }
  ],
  "tags": []
}