{
    "basePath": "/",
    "consumes": [],
    "definitions": {
        "DownloadDocumentRequest": {
            "properties": {
                "documentId": {
                    "description": "Unique identifier of the document to download.",
                    "title": "Document",
                    "type": "string"
                }
            },
            "required": [
                "documentId"
            ],
            "type": "object"
        },
        "ExecuteFlowRequest": {
            "properties": {
                "flowId": {
                    "description": "The flow to execute.",
                    "title": "Flow",
                    "type": "string",
                    "x-ms-dynamic-values": {
                        "operationId": "GetFlows",
                        "parameters": {},
                        "value-path": "flowId",
                        "value-title": "displayName"
                    }
                },
                "executionData": {
                    "type": "object",
                    "x-ms-dynamic-schema": {
                        "operationId": "GetFlowSchema",
                        "parameters": {
                            "flowId": {
                                "parameter": "flowId"
                            }
                        }
                    },
                    "x-ms-dynamic-properties": {
                        "operationId": "GetFlowSchema",
                        "parameters": {
                            "flowId": {
                                "parameterReference": "req/flowId"
                            }
                        }
                    }
                },
                "priority": {
                    "description": "The priority of the flow execution. Higher priority means that this flow will be executed before other flows that are queued with a lower priority in the same project.",
                    "title": "Priority",
                    "type": "integer",
                    "format": "int32",
                    "x-ms-visibility": "advanced"
                }
            },
            "required": [
                "flowId",
                "executionData"
            ],
            "type": "object"
        },
        "FlowExecutionResponse": {
            "properties": {
                "executionId": {
                    "description": "Execution unique identifier.",
                    "title": "Execution",
                    "type": "string"
                },
                "message": {
                    "title": "Message",
                    "type": "string"
                },
                "status": {
                    "title": "Status",
                    "type": "string"
                },
                "flowExecutionPanelUrl": {
                    "title": "Flow Execution Pane URL",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FlowResponse": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "flowId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetDocumentsRequest": {
            "properties": {
                "executionId": {
                    "description": "Unique identifier of the execution to get the documents from.",
                    "title": "Execution",
                    "type": "string"
                }
            },
            "required": [
                "executionId"
            ],
            "type": "object"
        },
        "GetExecutionStatusRequest": {
            "properties": {
                "executionId": {
                    "description": "Unique identifier of the execution to get the execution status from.",
                    "title": "Execution",
                    "type": "string"
                }
            },
            "required": [
                "executionId"
            ],
            "type": "object"
        },
        "GetDocumentsResponse": {
            "properties": {
                "contentType": {
                    "title": "Content Type",
                    "type": "string"
                },
                "documentId": {
                    "title": "Document",
                    "type": "string"
                },
                "documentName": {
                    "title": "Document Name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportRequest": {
            "properties": {
                "recordType": {
                    "description": "The record type to do the export for.",
                    "title": "Record Type",
                    "type": "string",
                    "enum": [
                        "Flow",
                        "Template",
                        "DataSet"
                    ],
                    "x-ms-enum-values": [
                        {
                            "displayName": "Flow",
                            "value": "Flow"
                        },
                        {
                            "displayName": "Template",
                            "value": "Template"
                        },
                        {
                            "displayName": "Data Set",
                            "value": "DataSet"
                        }
                    ]
                },
                "exportMode": {
                    "description": "Select All if you want all records to be exported, and Select if you want to select which records to export.",
                    "title": "Export Mode",
                    "type": "string",
                    "enum": [
                        "All",
                        "Select"
                    ],
                    "x-ms-enum-values": [
                        {
                            "displayName": "All",
                            "value": "All"
                        },
                        {
                            "displayName": "Select Records",
                            "value": "Select"
                        }
                    ],
                    "default": "All"
                },
                "records": {
                    "type": "object",
                    "x-ms-dynamic-schema": {
                        "operationId": "GetRecordsSchema",
                        "parameters": {
                            "exportMode": {
                                "parameter": "exportMode"
                            },
                            "recordType": {
                                "parameter": "recordType"
                            }
                        }
                    },
                    "x-ms-dynamic-properties": {
                        "operationId": "GetRecordsSchema",
                        "parameters": {
                            "exportMode": {
                                "parameterReference": "req/exportMode"
                            },
                            "recordType": {
                                "parameterReference": "req/recordType"
                            }
                        }
                    }
                },
                "includeAllDependencies": {
                    "description": "Set to 'Yes' to include all record dependencies in the export, 'No' otherwise.",
                    "title": "Include All Dependencies",
                    "type": "boolean",
                    "default": true
                },
                "includeTemplateHistory": {
                    "description": "Set to 'Yes' to to include template history if the package contains templates, 'No' otherwise.",
                    "title": "Include Template History",
                    "type": "boolean",
                    "x-ms-visibility": "advanced",
                    "default": false
                },
                "includeSamples": {
                    "description": "Set to 'Yes' to include data set samples if the package contains data sets, 'No' otherwise.",
                    "title": "Include Samples",
                    "type": "boolean",
                    "x-ms-visibility": "advanced",
                    "default": false
                }
            },
            "required": [
                "recordType",
                "includeAllDependencies",
                "exportMode"
            ],
            "type": "object"
        },
        "BackupRequest": {
            "properties": {
                "includeHistory": {
                    "description": "Set to 'Yes' to to include history, 'No' otherwise.",
                    "title": "Include History",
                    "type": "boolean",
                    "default": false
                },
                "00000000-0000-0000-0000-000000000000": {
                    "description": "Set to 'Yes' to to include history, 'No' otherwise.",
                    "title": "Include History",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": [
                "includeHistory"
            ],
            "type": "object"
        }
    },
    "host": "powerapps.xpertdoc.com",
    "info": {
        "description": "Smart Flows provides business users with robust yet user-friendly features to simplify, optimize and automate business-critical document processes. From a single, intuitive platform, you are empowered to create simple or complex document templates, capture customer information and data, store and manage enterprise content, electronically sign documents, in batches or through automated flows, resulting in accelerated document processes, increased productivity and reduced dependence on IT.",
        "title": "Experlogix Smart Flows",
        "version": "1.0",
        "contact": {
            "name": "Experlogix Support",
            "url": "https://support.experlogix.com",
            "email": "support@experlogix.com"
        }
    },
    "x-ms-connector-metadata": [
        {
            "propertyName": "Website",
            "propertyValue": "https://www.experlogix.com"
        },
        {
            "propertyName": "Privacy policy",
            "propertyValue": "https://www.experlogix.com/privacy-policy/"
        },
        {
            "propertyName": "Categories",
            "propertyValue": "Communication;Productivity"
        }
    ],
    "parameters": {},
    "paths": {
        "/api/Documents": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get documents from a flow execution.",
                "operationId": "GetDocuments",
                "parameters": [
                    {
                        "in": "body",
                        "name": "req",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetDocumentsRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/GetDocumentsResponse"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get Documents",
                "tags": [
                    "Documents"
                ]
            }
        },
        "/api/ExecutionStatus": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get the status of an execution.",
                "operationId": "GetExecutionStatus",
                "parameters": [
                    {
                        "in": "body",
                        "name": "req",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetExecutionStatusRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FlowExecutionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get Execution Status",
                "tags": [
                    "Flows"
                ]
            }
        },
        "/api/DownloadDocument": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Downloads the document from an execution.",
                "operationId": "DownloadDocument",
                "parameters": [
                    {
                        "in": "body",
                        "name": "req",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DownloadDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "binary",
                            "title": "Document Content",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Download Document",
                "tags": [
                    "Documents"
                ]
            }
        },
        "/api/ExecuteFlow": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Execute a Flow.",
                "operationId": "ExecuteFlow",
                "parameters": [
                    {
                        "in": "body",
                        "name": "req",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExecuteFlowRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FlowExecutionResponse"
                        }
                    },
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FlowExecutionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Execute Flow",
                "tags": [
                    "Flows"
                ]
            }
        },
        "/api/ExecutionProgress": {
            "get": {
                "description": "Get the progress of an execution.",
                "operationId": "GetExecutionProgress",
                "parameters": [
                    {
                        "in": "query",
                        "name": "executionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "timeout",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "startTime",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FlowExecutionResponse"
                        }
                    },
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FlowExecutionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get Flow Schema",
                "tags": [
                    "Flows"
                ],
                "x-ms-visibility": "internal"
            }
        },
        "/api/Flows": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get the flows from the project.",
                "operationId": "GetFlows",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/FlowResponse"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get Flows",
                "tags": [
                    "Flows"
                ],
                "x-ms-visibility": "internal"
            }
        },
        "/api/FlowSchema": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get the schema for the provided flow.",
                "operationId": "GetFlowSchema",
                "parameters": [
                    {
                        "in": "query",
                        "name": "flowId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get Flow Schema",
                "tags": [
                    "Flows"
                ],
                "x-ms-visibility": "internal"
            }
        },
        "/api/RecordsSchema": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get the records for the provided type and mode.",
                "operationId": "GetRecordsSchema",
                "parameters": [
                    {
                        "in": "query",
                        "name": "exportMode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "recordType",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get Records Schema",
                "tags": [
                    "ImportExport"
                ],
                "x-ms-visibility": "internal"
            }
        },
        "/api/Export": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create an export package.",
                "operationId": "ExportPackage",
                "parameters": [
                    {
                        "in": "body",
                        "name": "req",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "binary",
                            "title": "Package Content",
                            "type": "string"
                        }
                        },
                        "400": {
                            "description": "Bad Request"
                        },
                        "401": {
                            "description": "Unauthorized"
                        }
                },
                "summary": "Export Package",
                "tags": [
                    "ImportExport"
                ]
            }
        },
        "/api/Import": {
            "post": {
                "summary": "Import Package",
                "description": "Imports the package in the project.",
                "operationId": "ImportPackage",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "package",
                        "in": "formData",
                        "description": "The package to be imported.",
                        "required": true,
                        "type": "file",
                        "x-ms-summary": "Package"
                    },
                    {
                        "name": "overwriteExisting",
                        "in": "query",
                        "description": "Determines whether to overwrite existing records.",
                        "required": true,
                        "type": "boolean",
                        "default": true,
                        "x-ms-summary": "Overwrite Existing"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File imported successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "ImportExport"
                ]
            }
        },
        "/api/Backup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create a backup package.",
                "operationId": "BackupPackage",
                "parameters": [
                    {
                        "in": "body",
                        "name": "req",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "binary",
                            "title": "Package Content",
                            "type": "string"
                        }
                        },
                        "400": {
                            "description": "Bad Request"
                        },
                        "401": {
                            "description": "Unauthorized"
                        }
                },
                "summary": "Backup Package",
                "tags": [
                    "ImportExport"
                ]
            }
        },
        "/api/Restore": {
            "post": {
                "summary": "Restore Package",
                "description": "Restores the package in the project.",
                "operationId": "RestorePackage",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "package",
                        "in": "formData",
                        "description": "The package to be restored.",
                        "required": true,
                        "type": "file",
                        "x-ms-summary": "Package"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup restored successfully."
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "ImportExport"
                ]
            }
        }
    },
    "produces": [],
    "responses": {},
    "schemes": [
        "https"
    ],
    "security": [],
    "securityDefinitions": {},
    "swagger": "2.0",
    "tags": []
}
