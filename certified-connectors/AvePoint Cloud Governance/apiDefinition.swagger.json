{
  "swagger": "2.0",
  "info": {
    "title": "AvePoint Cloud Governance",
    "description": "Automate provisioning, management, and lifecycle for Teams, Groups, Communities, and Sites.  Connect to AvePoint Cloud Governance to execute additional actions in Microsoft 365 such as creation of new content, add users, and update information in lists.",
    "contact": {
      "name": "AvePoint Support",
      "url": "http://www.avepoint.com/support",
      "email": "support@avepoint.com"
    },
    "version": "1.0"
  },
  "host": "go-api.avepointonlineservices.com",
  "basePath": "/admin",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/flow/hooks/{id}": {
      "delete": {
        "tags": [
          "Flow"
        ],
        "summary": "Delete web hook",
        "description": "Delete web hook by id.",
        "operationId": "Flow_DeleteHookById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Web Hook Id",
            "description": "Id of the web hook."
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/hooks/errortask/created": {
      "x-ms-notification-content": {
        "description": "This operation triggers when an error task is generated.",
        "schema": {
          "$ref": "#/definitions/FlowErrorTaskCreatedHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When an error task is generated",
        "description": "This operation triggers when an error task is generated.",
        "operationId": "Flow_CreateHookForErrorTaskCreated",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/errortask/retried": {
      "x-ms-notification-content": {
        "description": "This operation triggers when the retry action is performed on an error task.",
        "schema": {
          "$ref": "#/definitions/FlowTaskCompletedHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When an error task is retried",
        "description": "This operation triggers when the retry action is performed on an error task.",
        "operationId": "Flow_CreateHookForErrorTaskRetried",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/request/cancelled": {
      "x-ms-notification-content": {
        "description": "This operation triggers when a request is canceled.",
        "schema": {
          "$ref": "#/definitions/FlowRequestHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When a request is canceled",
        "description": "This operation triggers when a request is canceled.",
        "operationId": "Flow_CreateHookForRequestCancelled",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/request/completed": {
      "x-ms-notification-content": {
        "description": "This operation triggers when a request is completed.",
        "schema": {
          "$ref": "#/definitions/FlowRequestHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When a request is completed",
        "description": "This operation triggers when a request is completed.",
        "operationId": "Flow_CreateHookForRequestCompleted",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/request/submitted": {
      "x-ms-notification-content": {
        "description": "This operation triggers when a request is submitted.",
        "schema": {
          "$ref": "#/definitions/FlowRequestHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When a request is submitted",
        "description": "This operation triggers when a request is submitted.",
        "operationId": "Flow_CreateHookForRequestSubmitted",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/task/approved": {
      "x-ms-notification-content": {
        "description": "This operation triggers when a request is approved.",
        "schema": {
          "$ref": "#/definitions/FlowTaskCompletedHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When a request is approved",
        "description": "This operation triggers when a request is approved.",
        "operationId": "Flow_CreateHookForTaskApproved",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/task/autoimport": {
      "x-ms-notification-content": {
        "description": "This operation triggers when an import process with pre-defined governance details is completed.",
        "schema": {
          "$ref": "#/definitions/FlowAutoImportHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When an import process with pre-defined governance details is completed",
        "description": "This operation triggers when an import process with pre-defined governance details is completed.",
        "operationId": "Flow_CreateHookForFullyAutoImportCompleted",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/task/confirm": {
      "x-ms-notification-content": {
        "description": "This operation triggers when an end user completes a governance details confirmation task for a workspace.",
        "schema": {
          "$ref": "#/definitions/FlowAutoImportHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When an end user completes a governance details confirmation task",
        "description": "This operation triggers when an end user completes a governance details confirmation task for a workspace.",
        "operationId": "Flow_CreateHookForConfirmDetailCompleted",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/task/created": {
      "x-ms-notification-content": {
        "description": "This operation triggers when an approval task is assigned.",
        "schema": {
          "$ref": "#/definitions/FlowTaskCreatedHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When an approval task is assigned",
        "description": "This operation triggers when an approval task is assigned.",
        "operationId": "Flow_CreateHookForTaskCreated",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/task/rejected": {
      "x-ms-notification-content": {
        "description": "This operation triggers when a request is rejected.",
        "schema": {
          "$ref": "#/definitions/FlowTaskCompletedHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When a request is rejected",
        "description": "This operation triggers when a request is rejected.",
        "operationId": "Flow_CreateHookForTaskRejected",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/task/renewal/completed": {
      "x-ms-notification-content": {
        "description": "This operation triggers when a renewal task is completed.",
        "schema": {
          "$ref": "#/definitions/FlowRenewalHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When a renewal task is completed",
        "description": "This operation triggers when a renewal task is completed.",
        "operationId": "Flow_CreateHookForRenewalTaskCompleted",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/task/renewal/exception": {
      "x-ms-notification-content": {
        "description": "This operation triggers when a renewal process encounters an exception.",
        "schema": {
          "$ref": "#/definitions/FlowRenewalExceptionHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When a renewal process encounters an exception",
        "description": "This operation triggers when a renewal process encounters an exception.",
        "operationId": "Flow_CreateHookForRenewalTaskException",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/task/renewal/overdue": {
      "x-ms-notification-content": {
        "description": "This operation triggers when a renewal task is overdue.",
        "schema": {
          "$ref": "#/definitions/FlowRenewalTaskHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When a renewal task is overdue",
        "description": "This operation triggers when a renewal task is overdue.",
        "operationId": "Flow_CreateHookForRenewalTaskOverdue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/hooks/task/skipped": {
      "x-ms-notification-content": {
        "description": "This operation triggers when the skip action is performed on an error task.",
        "schema": {
          "$ref": "#/definitions/FlowTaskCompletedHookMessage"
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "When an error task is skipped",
        "description": "This operation triggers when the skip action is performed on an error task.",
        "operationId": "Flow_CreateHookForErrorTaskSkipped",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigge Url",
                  "description": "Url of trigger.",
                  "x-ms-notification-url": true
                },
                "triggerType": {
                  "enum": [
                    "None",
                    "RequestSubmitted",
                    "RequestCompleted",
                    "RequestCancelled",
                    "TaskCreated",
                    "TaskApproved",
                    "TaskRejected",
                    "ErrorTaskCreated",
                    "TaskRetried",
                    "TaskSkipped",
                    "RenewalSuccess",
                    "RenewalException",
                    "RenewalOverdue",
                    "FullyAutoImportSuccess",
                    "ConfirmDetailSuccess"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal",
                  "x-ms-summary": "Trigger Type",
                  "description": "Type of trigger."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/flow/objectstatus": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get object status",
        "description": "Get all statuses of object.",
        "operationId": "Flow_GetObjectStatus",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StringModel"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/objecttypes": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get object types",
        "description": "Get all types of object.",
        "operationId": "Flow_ObjectTypes",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StringModel"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/office365/actiontypes": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get office365 action types",
        "description": "Get office365 action types.",
        "operationId": "Flow_GetOffice365ActionTypes",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StringModel"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/office365/settings": {
      "put": {
        "tags": [
          "Flow"
        ],
        "summary": "Update Microsoft 365 settings",
        "description": "Update Microsoft 365 settings.",
        "operationId": "Flow_UpdateOffice365Setting",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actionType",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Flow_GetOffice365ActionTypes",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-summary": "Action Type",
            "description": "Specify an action type."
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "Flow_GetUpdateOffice365SettingSchema",
                "value-path": "schema",
                "parameters": {
                  "actionType": {
                    "parameter": "actionType"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/flow/office365/sharingdomainrestrictionmodes": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get sharing domain restriction modes",
        "description": "Get sharing domain restriction modes.",
        "operationId": "Flow_GetSharingDomainRestrictionModes",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StringModel"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/requests/{requestId}": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get a request",
        "description": "Get details of a request.",
        "operationId": "Flow_GetRequestById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "serviceType",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Flow_GetServiceTypes",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-summary": "Service Type",
            "description": "Type of the service."
          },
          {
            "in": "query",
            "name": "serviceId",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Flow_GetServiceNamesByType",
              "value-path": "id",
              "parameters": {
                "serviceType": {
                  "parameter": "serviceType"
                }
              },
              "value-title": "name"
            },
            "x-ms-summary": "Service Name",
            "description": "Name of the service."
          },
          {
            "in": "path",
            "name": "requestId",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Request ID",
            "description": "Unique ID of the request."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "x-ms-dynamic-schema": {
                "operationId": "Flow_GetViewRequestSchema",
                "value-path": "schema",
                "parameters": {
                  "serviceId": {
                    "parameter": "serviceId"
                  },
                  "serviceType": {
                    "parameter": "serviceType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/flow/requests": {
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "Submit a request",
        "description": "Submit a request for a specific service.",
        "operationId": "Flow_SubmitRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "serviceType",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Flow_GetServiceTypes",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-summary": "Service Type",
            "description": "Type of the service."
          },
          {
            "in": "query",
            "name": "serviceId",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Flow_GetServiceNamesByType",
              "value-path": "id",
              "parameters": {
                "serviceType": {
                  "parameter": "serviceType"
                }
              },
              "value-title": "name"
            },
            "x-ms-summary": "Service Name",
            "description": "Name of the service."
          },
          {
            "in": "query",
            "name": "DelegateUserPrincipalName",
            "type": "string",
            "x-ms-summary": "Requester Username",
            "description": "Username of the requester."
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "Flow_GetSubmitRequestSchema",
                "value-path": "schema",
                "parameters": {
                  "serviceId": {
                    "parameter": "serviceId"
                  },
                  "serviceType": {
                    "parameter": "serviceType"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Flow"
        ],
        "summary": "Update a request",
        "description": "Update an existing request.",
        "operationId": "Flow_EditRequest",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "serviceType",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Flow_GetServiceTypes",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-summary": "Service Type",
            "description": "Type of the service."
          },
          {
            "in": "query",
            "name": "serviceId",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Flow_GetServiceNamesByType",
              "value-path": "id",
              "parameters": {
                "serviceType": {
                  "parameter": "serviceType"
                }
              },
              "value-title": "name"
            },
            "x-ms-summary": "Service Name",
            "description": "Name of the service."
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "Request ID",
            "description": "Unique ID of the request."
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "Flow_GetUpdateRequestSchema",
                "value-path": "schema",
                "parameters": {
                  "serviceId": {
                    "parameter": "serviceId"
                  },
                  "serviceType": {
                    "parameter": "serviceType"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/flow/schema/request/submit": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get submitting request schema",
        "description": "Get schema for submitting request.",
        "operationId": "Flow_GetSubmitRequestSchema",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "serviceId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Service ID",
            "description": "Unique ID of the service."
          },
          {
            "in": "query",
            "name": "serviceType",
            "required": true,
            "type": "string",
            "enum": [
              "CustomService",
              "CreateTeams"
            ],
            "x-ms-summary": "Service Type",
            "description": "Type of the service."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FlowSchemaResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/schema/request/update": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get updating request schema",
        "description": "Get schema for updating request.",
        "operationId": "Flow_GetUpdateRequestSchema",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "serviceId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Service ID",
            "description": "Unique ID of the service."
          },
          {
            "in": "query",
            "name": "serviceType",
            "required": true,
            "type": "string",
            "enum": [
              "CustomService",
              "CreateTeams"
            ],
            "x-ms-summary": "Service Type",
            "description": "Type of the service."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FlowSchemaResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/schema/request/view": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get viewing request schema",
        "description": "Get schema for viewing request.",
        "operationId": "Flow_GetViewRequestSchema",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "serviceId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Service ID",
            "description": "Unique ID of the service."
          },
          {
            "in": "query",
            "name": "serviceType",
            "required": true,
            "type": "string",
            "enum": [
              "CustomService",
              "CreateTeams"
            ],
            "x-ms-summary": "Service Type",
            "description": "Type of the service."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FlowSchemaResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/schema/updateoffice365": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get update office365 setting schema",
        "description": "Get schema for update office365 setting.",
        "operationId": "Flow_GetUpdateOffice365SettingSchema",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actionType",
            "required": true,
            "type": "string",
            "enum": [
              "UpdateSiteExternalDomain"
            ],
            "x-ms-summary": "Flow_TitleCase_Office365ActionType",
            "description": "Flow_Office365ActionType_Des"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FlowSchemaResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/schema/workspace": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get view request schema",
        "description": "Get schema for workspace.",
        "operationId": "Flow_GetWorkspaceSchema",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceType",
            "type": "string",
            "enum": [
              "All",
              "Site",
              "Group",
              "Teams"
            ],
            "x-ms-summary": "Workspace Type",
            "description": "Type of workspace."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FlowSchemaResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/schema/workspace/actions": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get workspace actions schema",
        "description": "Get schema for workspace actions.",
        "operationId": "Flow_GetWorkspaceActionsSchema",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceType",
            "required": true,
            "type": "string",
            "enum": [
              "Site",
              "Group",
              "Teams"
            ],
            "x-ms-summary": "Workspace Type",
            "description": "Select a workspace type."
          },
          {
            "in": "query",
            "name": "workspaceAction",
            "required": true,
            "type": "string",
            "enum": [
              "RestartRenewal"
            ],
            "x-ms-summary": "Action Type",
            "description": "Choose how to manage a workspace."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FlowSchemaResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/services": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get service names",
        "description": "Get service names by specific type.",
        "operationId": "Flow_GetServiceNamesByType",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "serviceType",
            "type": "string",
            "enum": [
              "CustomService",
              "CreateTeams"
            ],
            "x-ms-summary": "Service Type",
            "description": "Type of the service."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StringModel"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/servicetypes": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get service types",
        "description": "Get supported service types.",
        "operationId": "Flow_GetServiceTypes",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StringModel"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/workspace": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "List workspaces",
        "description": "Retrieve a list of workspaces managed by Cloud Governance.",
        "operationId": "Flow_ListWorkspace",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceType",
            "type": "string",
            "default": "All",
            "x-ms-dynamic-values": {
              "operationId": "Flow_ObjectTypes",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-summary": "Workspace Type",
            "description": "Filter by the workspace type."
          },
          {
            "in": "query",
            "name": "primaryContact",
            "type": "string",
            "default": "",
            "x-ms-summary": "Primary Workspace Contact",
            "description": "Filter by the primary workspace contact."
          },
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "default": "All",
            "x-ms-dynamic-values": {
              "operationId": "Flow_GetObjectStatus",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Workspace Status",
            "description": "Filter by the workspace status."
          },
          {
            "in": "query",
            "name": "urlorIdorEmail",
            "type": "string",
            "default": "",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Workspace URL or E-mail Address",
            "description": "Filter by the workspace URL or e-mail address."
          },
          {
            "in": "query",
            "name": "secondaryContact",
            "type": "string",
            "default": "",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Secondary Workspace Contact",
            "description": "Filter by the secondary workspace contact."
          },
          {
            "in": "query",
            "name": "top",
            "type": "integer",
            "format": "int32",
            "default": 2000,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Workspace Count",
            "description": "Number of workspaces to retrieve (default = 2000, maximum = 3000)."
          },
          {
            "in": "query",
            "name": "nextLink",
            "type": "string",
            "default": "",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Next Token",
            "description": "Use the next token to retrieve remaining workspaces that have not been listed here."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "x-ms-dynamic-schema": {
                "operationId": "Flow_GetWorkspaceSchema",
                "value-path": "schema",
                "parameters": {
                  "workspaceType": {
                    "parameter": "workspaceType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/flow/workspace/actionobjecttypes": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get workspace action object types",
        "description": "Get workspace action object types.",
        "operationId": "Flow_GetWorkspaceActionObjectTypes",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StringModel"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/flow/workspace/actions": {
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "Manage a workspace",
        "description": "Manage an AvePoint Cloud Governance managed workspace.",
        "operationId": "Flow_WorkspaceActions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceType",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Flow_GetWorkspaceActionObjectTypes",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-summary": "Workspace Type",
            "description": "Select a workspace type."
          },
          {
            "in": "query",
            "name": "workspaceAction",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Flow_GetWorkspaceActionTypes",
              "value-path": "id",
              "parameters": {
                "workspaceType": {
                  "parameter": "workspaceType"
                }
              },
              "value-title": "name"
            },
            "x-ms-summary": "Action Type",
            "description": "Choose how to manage a workspace."
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "Flow_GetWorkspaceActionsSchema",
                "value-path": "schema",
                "parameters": {
                  "workspaceType": {
                    "parameter": "workspaceType"
                  },
                  "workspaceAction": {
                    "parameter": "workspaceAction"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/flow/workspace/actiontypes": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get workspace action types",
        "description": "Get workspace action types.",
        "operationId": "Flow_GetWorkspaceActionTypes",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspaceType",
            "required": true,
            "type": "string",
            "enum": [
              "Site",
              "Group",
              "Teams"
            ],
            "x-ms-summary": "Workspace Type",
            "description": "Select a workspace type."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StringModel"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "x-ms-visibility": "internal"
      }
    }
  },
  "definitions": {
    "CreateWebHookModel": {
      "required": [
        "url"
      ],
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Trigge Url",
          "description": "Url of trigger.",
          "x-ms-notification-url": true
        },
        "triggerType": {
          "enum": [
            "None",
            "RequestSubmitted",
            "RequestCompleted",
            "RequestCancelled",
            "TaskCreated",
            "TaskApproved",
            "TaskRejected",
            "ErrorTaskCreated",
            "TaskRetried",
            "TaskSkipped",
            "RenewalSuccess",
            "RenewalException",
            "RenewalOverdue",
            "FullyAutoImportSuccess",
            "ConfirmDetailSuccess"
          ],
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Trigger Type",
          "description": "Type of trigger."
        }
      }
    },
    "FlowErrorTaskCreatedHookMessage": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string",
          "x-ms-summary": "Request Summary",
          "description": "Summary of the request."
        },
        "taskId": {
          "type": "string",
          "x-ms-summary": "Task ID",
          "description": "Unique ID of the task."
        },
        "taskLink": {
          "type": "string",
          "x-ms-summary": "Task Link",
          "description": "Link of the task."
        },
        "assigneeDisplayName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Assignee Display Name",
          "description": "Display name of the task assignee."
        },
        "assigneeIdentityName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Assignee Username",
          "description": "Username of the task assignee."
        },
        "message": {
          "type": "string",
          "x-ms-summary": "Error Details",
          "description": "Details of the error task."
        },
        "requestId": {
          "type": "string",
          "x-ms-summary": "Request Ticket Number",
          "description": "Ticket number of the request."
        },
        "requestGuid": {
          "type": "string",
          "x-ms-summary": "Request ID",
          "description": "Unique ID of the request."
        },
        "requesterIdentityName": {
          "type": "string",
          "x-ms-summary": "Requester Username",
          "description": "Username of the requester."
        },
        "requester": {
          "type": "string",
          "x-ms-summary": "Requester Display Name",
          "description": "Display name of the requester."
        },
        "serviceType": {
          "type": "string",
          "x-ms-summary": "Service Type",
          "description": "Type of the service."
        },
        "triggerTime": {
          "type": "string",
          "x-ms-summary": "Trigger Time",
          "description": "The time that this trigger works."
        },
        "objectUrl": {
          "type": "string",
          "x-ms-summary": "Site URL",
          "description": "URL of the site."
        },
        "objectId": {
          "type": "string",
          "x-ms-summary": "Workspace ID",
          "description": "Unique ID of the workspace."
        }
      }
    },
    "FlowTaskCompletedHookMessage": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string",
          "x-ms-summary": "Request Summary",
          "description": "Summary of the request."
        },
        "taskId": {
          "type": "string",
          "x-ms-summary": "Task ID",
          "description": "Unique ID of the task."
        },
        "taskLink": {
          "type": "string",
          "x-ms-summary": "Task Link",
          "description": "Link of the task."
        },
        "approverDisplayName": {
          "type": "string",
          "x-ms-summary": "Approver Display Name",
          "description": "Display name of the approver."
        },
        "approverIdentityName": {
          "type": "string",
          "x-ms-summary": "Approver Username",
          "description": "Username of the approver."
        },
        "requestId": {
          "type": "string",
          "x-ms-summary": "Request Ticket Number",
          "description": "Ticket number of the request."
        },
        "requestGuid": {
          "type": "string",
          "x-ms-summary": "Request ID",
          "description": "Unique ID of the request."
        },
        "requesterIdentityName": {
          "type": "string",
          "x-ms-summary": "Requester Username",
          "description": "Username of the requester."
        },
        "requester": {
          "type": "string",
          "x-ms-summary": "Requester Display Name",
          "description": "Display name of the requester."
        },
        "serviceType": {
          "type": "string",
          "x-ms-summary": "Service Type",
          "description": "Type of the service."
        },
        "triggerTime": {
          "type": "string",
          "x-ms-summary": "Trigger Time",
          "description": "The time that this trigger works."
        },
        "objectUrl": {
          "type": "string",
          "x-ms-summary": "Site URL",
          "description": "URL of the site."
        },
        "objectId": {
          "type": "string",
          "x-ms-summary": "Workspace ID",
          "description": "Unique ID of the workspace."
        }
      }
    },
    "FlowRequestHookMessage": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string",
          "x-ms-summary": "Request Summary",
          "description": "Summary of the request."
        },
        "requestId": {
          "type": "string",
          "x-ms-summary": "Request Ticket Number",
          "description": "Ticket number of the request."
        },
        "requestGuid": {
          "type": "string",
          "x-ms-summary": "Request ID",
          "description": "Unique ID of the request."
        },
        "requesterIdentityName": {
          "type": "string",
          "x-ms-summary": "Requester Username",
          "description": "Username of the requester."
        },
        "requester": {
          "type": "string",
          "x-ms-summary": "Requester Display Name",
          "description": "Display name of the requester."
        },
        "serviceType": {
          "type": "string",
          "x-ms-summary": "Service Type",
          "description": "Type of the service."
        },
        "serviceName": {
          "type": "string",
          "x-ms-summary": "Service Name",
          "description": "Name of the service."
        },
        "serviceId": {
          "type": "string",
          "x-ms-summary": "Service ID",
          "description": "Unique ID of the service."
        },
        "triggerTime": {
          "type": "string",
          "x-ms-summary": "Trigger Time",
          "description": "The time that this trigger works."
        },
        "objectUrl": {
          "type": "string",
          "x-ms-summary": "Site URL",
          "description": "URL of the site."
        },
        "objectId": {
          "type": "string",
          "x-ms-summary": "Workspace ID",
          "description": "Unique ID of the workspace."
        }
      }
    },
    "FlowAutoImportHookMessage": {
      "type": "object",
      "properties": {
        "autoImportProfileName": {
          "type": "string",
          "x-ms-summary": "Automatic Import Profile",
          "description": "Name of the automatic import profile."
        },
        "objectId": {
          "type": "string",
          "x-ms-summary": "Workspace ID",
          "description": "Unique ID of the workspace."
        },
        "objectTitle": {
          "type": "string",
          "x-ms-summary": "Workspace Name",
          "description": "Name of the workspace."
        },
        "objectType": {
          "type": "string",
          "x-ms-summary": "Workspace Type",
          "description": "Type of workspace."
        },
        "groupEmail": {
          "type": "string",
          "x-ms-summary": "Workspace E-mail Address",
          "description": "E-mail address of the workspace."
        },
        "triggerTime": {
          "type": "string",
          "x-ms-summary": "Trigger Time",
          "description": "The time that this trigger works."
        },
        "objectUrl": {
          "type": "string",
          "x-ms-summary": "Site URL",
          "description": "URL of the site."
        }
      }
    },
    "FlowTaskCreatedHookMessage": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string",
          "x-ms-summary": "Request Summary",
          "description": "Summary of the request."
        },
        "taskId": {
          "type": "string",
          "x-ms-summary": "Task ID",
          "description": "Unique ID of the task."
        },
        "taskLink": {
          "type": "string",
          "x-ms-summary": "Task Link",
          "description": "Link of the task."
        },
        "assigneeDisplayName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Assignee Display Name",
          "description": "Display name of the task assignee."
        },
        "assigneeIdentityName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Assignee Username",
          "description": "Username of the task assignee."
        },
        "requestId": {
          "type": "string",
          "x-ms-summary": "Request Ticket Number",
          "description": "Ticket number of the request."
        },
        "requestGuid": {
          "type": "string",
          "x-ms-summary": "Request ID",
          "description": "Unique ID of the request."
        },
        "requesterIdentityName": {
          "type": "string",
          "x-ms-summary": "Requester Username",
          "description": "Username of the requester."
        },
        "requester": {
          "type": "string",
          "x-ms-summary": "Requester Display Name",
          "description": "Display name of the requester."
        },
        "serviceType": {
          "type": "string",
          "x-ms-summary": "Service Type",
          "description": "Type of the service."
        },
        "triggerTime": {
          "type": "string",
          "x-ms-summary": "Trigger Time",
          "description": "The time that this trigger works."
        },
        "objectUrl": {
          "type": "string",
          "x-ms-summary": "Site URL",
          "description": "URL of the site."
        },
        "objectId": {
          "type": "string",
          "x-ms-summary": "Workspace ID",
          "description": "Unique ID of the workspace."
        }
      }
    },
    "FlowRenewalHookMessage": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "x-ms-summary": "Workspace ID",
          "description": "Unique ID of the workspace."
        },
        "objectTitle": {
          "type": "string",
          "x-ms-summary": "Workspace Name",
          "description": "Name of the workspace."
        },
        "objectType": {
          "type": "string",
          "x-ms-summary": "Workspace Type",
          "description": "Type of workspace."
        },
        "groupEmail": {
          "type": "string",
          "x-ms-summary": "Workspace E-mail Address",
          "description": "E-mail address of the workspace."
        },
        "phaseStartTime": {
          "type": "string",
          "x-ms-summary": "Renewal Process Start Time",
          "description": "Start time of the renewal process."
        },
        "renewalProfileName": {
          "type": "string",
          "x-ms-summary": "Renewal Profile",
          "description": "Name of the renewal profile."
        },
        "triggerTime": {
          "type": "string",
          "x-ms-summary": "Trigger Time",
          "description": "The time that this trigger works."
        },
        "objectUrl": {
          "type": "string",
          "x-ms-summary": "Site URL",
          "description": "URL of the site."
        }
      }
    },
    "FlowRenewalExceptionHookMessage": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "x-ms-summary": "Workspace ID",
          "description": "Unique ID of the workspace."
        },
        "objectTitle": {
          "type": "string",
          "x-ms-summary": "Workspace Name",
          "description": "Name of the workspace."
        },
        "objectType": {
          "type": "string",
          "x-ms-summary": "Workspace Type",
          "description": "Type of workspace."
        },
        "groupEmail": {
          "type": "string",
          "x-ms-summary": "Workspace E-mail Address",
          "description": "E-mail address of the workspace."
        },
        "phaseStartTime": {
          "type": "string",
          "x-ms-summary": "Renewal Process Start Time",
          "description": "Start time of the renewal process."
        },
        "dueDate": {
          "type": "string",
          "x-ms-summary": "Renewal Process Due Date",
          "description": "Due date of the renewal process."
        },
        "assigneeDisplayName": {
          "type": "string",
          "x-ms-summary": "Renewal Task Assignee Display Name",
          "description": "Display name of the renewal task assignee."
        },
        "assigneeIdentityName": {
          "type": "string",
          "x-ms-summary": "Renewal Task Assignee Username",
          "description": "Username of the renewal task assignee."
        },
        "renewalProfileName": {
          "type": "string",
          "x-ms-summary": "Renewal Profile",
          "description": "Name of the renewal profile."
        },
        "taskLink": {
          "type": "string",
          "x-ms-summary": "Renewal Task Link",
          "description": "Link of the renewal task."
        },
        "message": {
          "type": "string",
          "x-ms-summary": "Renewal Error Details",
          "description": "Details of the renewal exception."
        },
        "triggerTime": {
          "type": "string",
          "x-ms-summary": "Trigger Time",
          "description": "The time that this trigger works."
        },
        "objectUrl": {
          "type": "string",
          "x-ms-summary": "Site URL",
          "description": "URL of the site."
        }
      }
    },
    "FlowRenewalTaskHookMessage": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "x-ms-summary": "Workspace ID",
          "description": "Unique ID of the workspace."
        },
        "objectTitle": {
          "type": "string",
          "x-ms-summary": "Workspace Name",
          "description": "Name of the workspace."
        },
        "objectType": {
          "type": "string",
          "x-ms-summary": "Workspace Type",
          "description": "Type of workspace."
        },
        "groupEmail": {
          "type": "string",
          "x-ms-summary": "Workspace E-mail Address",
          "description": "E-mail address of the workspace."
        },
        "phaseStartTime": {
          "type": "string",
          "x-ms-summary": "Renewal Process Start Time",
          "description": "Start time of the renewal process."
        },
        "dueDate": {
          "type": "string",
          "x-ms-summary": "Renewal Process Due Date",
          "description": "Due date of the renewal process."
        },
        "assigneeDisplayName": {
          "type": "string",
          "x-ms-summary": "Renewal Task Assignee Display Name",
          "description": "Display name of the renewal task assignee."
        },
        "assigneeIdentityName": {
          "type": "string",
          "x-ms-summary": "Renewal Task Assignee Username",
          "description": "Username of the renewal task assignee."
        },
        "renewalProfileName": {
          "type": "string",
          "x-ms-summary": "Renewal Profile",
          "description": "Name of the renewal profile."
        },
        "taskLink": {
          "type": "string",
          "x-ms-summary": "Renewal Task Link",
          "description": "Link of the renewal task."
        },
        "triggerTime": {
          "type": "string",
          "x-ms-summary": "Trigger Time",
          "description": "The time that this trigger works."
        },
        "objectUrl": {
          "type": "string",
          "x-ms-summary": "Site URL",
          "description": "URL of the site."
        }
      }
    },
    "StringModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Office365FlowSetting": {
      "required": [
        "actionType"
      ],
      "type": "object",
      "properties": {
        "actionType": {
          "format": "int32",
          "default": 0,
          "type": "integer",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Action Type",
          "description": "Specify an action type."
        }
      }
    },
    "FlowRequest": {
      "required": [
        "serviceType"
      ],
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Service Id",
          "description": "Id of the requested service."
        },
        "serviceType": {
          "format": "int32",
          "default": 0,
          "type": "integer",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Service Type",
          "description": "Type of the requested service."
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Request ID",
          "description": "Unique ID of the request."
        },
        "ticketNumber": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "x-ms-summary": "Request Ticket Number",
          "description": "Ticket number of the request."
        },
        "requester": {
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Requester Username",
          "description": "Username of the requester."
        },
        "requesterDisplayName": {
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Requester Display Name",
          "description": "Requester Display Name"
        },
        "summary": {
          "maxLength": 255,
          "type": "string",
          "x-ms-summary": "Request Summary",
          "description": "Summary of the request."
        },
        "department": {
          "type": "string",
          "x-ms-summary": "Department",
          "description": "Department that the request belongs to."
        },
        "notesToApprovers": {
          "maxLength": 1000,
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Notes to Approvers",
          "description": "Additional notes to approvers."
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "FlowSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "FlowSchemaResponse": {
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "#/definitions/FlowSchema"
        }
      }
    },
    "Workspace": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "x-ms-summary": "Workspace ID",
          "description": "Unique ID of the workspace."
        },
        "Name": {
          "type": "string",
          "x-ms-summary": "Workspace Name",
          "description": "Name of the workspace."
        },
        "Description": {
          "type": "string",
          "x-ms-summary": "Workspace Description",
          "description": "Description of the workspace."
        },
        "Status": {
          "type": "string",
          "x-ms-summary": "Workspace Status",
          "description": "Status of the workspace."
        },
        "Type": {
          "type": "string",
          "x-ms-summary": "Workspace Type",
          "description": "Type of workspace."
        },
        "Url": {
          "type": "string",
          "x-ms-summary": "Site URL",
          "description": "URL of the site."
        },
        "Email": {
          "type": "string",
          "x-ms-summary": "Workspace E-mail Address",
          "description": "E-mail address of the workspace."
        },
        "PolicyName": {
          "type": "string",
          "x-ms-summary": "Policy",
          "description": "Name of the policy."
        },
        "PrimaryContact": {
          "type": "string",
          "x-ms-summary": "Primary Workspace Contact Username",
          "description": "Username of the primary workspace contact."
        },
        "PrimaryContactDisplayName": {
          "type": "string",
          "x-ms-summary": "Primary Workspace Contact Display Name",
          "description": "Display name of the primary workspace contact."
        },
        "SecondaryContact": {
          "type": "string",
          "x-ms-summary": "Secondary Workspace Contact Username",
          "description": "Username of the secondary workspace contact."
        },
        "SecondaryContactDisplayName": {
          "type": "string",
          "x-ms-summary": "Secondary Workspace Contact Display Name",
          "description": "Display name of the secondary workspace contact."
        },
        "PrimaryAdministrators": {
          "type": "string",
          "x-ms-summary": "Primary Site Collection Administrator Username",
          "description": "Username of the primary site collection administrator."
        },
        "PrimaryAdministratorDisplayNames": {
          "type": "string",
          "x-ms-summary": "Primary Site Collection Administrator Display Name",
          "description": "Display name of the primary site collection administrator."
        },
        "AdditionalAdministrators": {
          "type": "string",
          "x-ms-summary": "Additional Site Collection Administrator",
          "description": "Username of the additional site collection administrator."
        },
        "AdditionalAdministratorDisplayNames": {
          "type": "string",
          "x-ms-summary": "Additional Site Collection Administrator Display Name",
          "description": "Display name of the additional site collection administrator."
        },
        "Phase": {
          "type": "string",
          "x-ms-summary": "Phase",
          "description": "The workspace's current phase."
        },
        "PhaseAssigneeDisplayNames": {
          "type": "string",
          "x-ms-summary": "Task Assignee Display Name",
          "description": "Display name of the current phase task assignee."
        },
        "PhaseAssignees": {
          "type": "string",
          "x-ms-summary": "Task Assignee Username",
          "description": "Username of the current phase task assignee."
        },
        "PhaseProfileName": {
          "type": "string",
          "x-ms-summary": "Renewal Profile",
          "description": "Name of the renewal profile."
        },
        "PhaseStartTime": {
          "type": "string",
          "x-ms-summary": "Phase Start Time",
          "description": "Start time of the current phase."
        },
        "RenewalDueDate": {
          "type": "string",
          "x-ms-summary": "Renewal Process Due Date",
          "description": "Due date of the renewal process."
        },
        "NextRenewalDate": {
          "type": "string",
          "x-ms-summary": "Next Renewal Date",
          "description": "Date of next renewal process."
        },
        "Privacy": {
          "type": "string",
          "x-ms-summary": "Privacy",
          "description": "Privacy of the workspace."
        },
        "AssociateHubTitle": {
          "type": "string",
          "x-ms-summary": "Associated Hub",
          "description": "Name of the associated hub."
        },
        "GeoLocation": {
          "type": "string",
          "x-ms-summary": "Geo Location",
          "description": "Geo location where the workspace is stored."
        },
        "StorageLimit": {
          "type": "string",
          "x-ms-summary": "Storage Limit (GB)",
          "description": "Maximum storage for the site."
        },
        "StorageUsed": {
          "type": "string",
          "x-ms-summary": "Storage Used (GB)",
          "description": "Storage used by the site."
        },
        "SiteSharing": {
          "type": "string",
          "x-ms-summary": "Site External Sharing",
          "description": "External sharing status of the site."
        },
        "GroupSharing": {
          "type": "string",
          "x-ms-summary": "Group/Team External Sharing",
          "description": "External sharing status of the group/team."
        },
        "WorkspaceClassification": {
          "type": "string",
          "x-ms-summary": "Classification",
          "description": "Classification of the workspace."
        },
        "ClaimStatus": {
          "type": "string",
          "x-ms-summary": "Claim Status",
          "description": "Status of the workspace contact election process."
        },
        "CreatedTime": {
          "type": "string",
          "x-ms-summary": "Created Time",
          "description": "Created time of the workspace."
        },
        "LeaseExpirationTime": {
          "type": "string",
          "x-ms-summary": "Lease Expiration Time",
          "description": "Lease expiration time of the workspace."
        },
        "InactivityThresholdTime": {
          "type": "string",
          "x-ms-summary": "Inactivity Threshold Time",
          "description": "Inactivity threshold time of the workspace."
        },
        "LastRenewalTime": {
          "type": "string",
          "x-ms-summary": "Last Renewal Time",
          "description": "Last renewal time of the workspace."
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "WorkspacePageResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "type": "string",
          "x-ms-summary": "Next Token",
          "description": "Use the next token to retrieve remaining workspaces that have not been listed here."
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "Basic": {
      "type": "basic",
      "description": "Authenticated by UserPrincipalName and ClientSecret."
    }
  },
  "security": [
    {
      "Basic": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.avepoint.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "http://www.avepoint.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity"
    }
  ]
}
