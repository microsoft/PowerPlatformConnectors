{
  "swagger": "2.0",
  "info": {
    "title": "Sociabble",
    "description": "Sociabble delivers top of the line enterprise social media solutions for employee advocacy, social selling, internal communication and Employee Engagement. Employees are better informed, improve their digital footprint.",
    "version": "1.0",
	"contact": {
      "name": "Sociabble Support",
      "url": "https://www.sociabble.com",
      "email": "support@sociabble.com"
    }
  },
  "host": "apigateway.sociabble.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/alerts/": {
      "post": {
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "summary": "Send an alert to an audience or a user",
        "description": "Send an alert to an audience or a user - Sociabble Standard",
        "operationId": "SendAlertRequest",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "alertText": {
                  "type": "string",
                  "description": "The text for the alert",
                  "title": "Alert Text"
                },
                "alertTitle": {
                  "type": "string",
                  "description": "The title for the alert",
                  "title": "Alert Title"
                },
                "startDate": {
                  "format": "date-time",
                  "description": "The date to which the alert is going to be sent",
                  "type": "string",
                  "title": "Start date "
                },
                "endDate": {
                  "format": "date-time",
                  "description": "The date to which the alert should not be visible anymore",
                  "type": "string",
                  "title": "End date "
                },
                "audienceId": {
                  "description": "The unique identifier of the audience if you wand send the alert to many users",
                  "type": "string",
                  "title": "Audience",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAudiences",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "username": {
                  "description": "The username of the user if you want send the alert to one user",
                  "type": "string",
                  "title": "Username"
                },
                "isMandatory": {
                  "description": "If you want users confirm that they read the alert",
                  "type": "boolean",
                  "title": "Is mandatory ?"
                },
                "sendSMS": {
                  "description": "If you want send an sms to users.This parameter is optional and only accessible for Premium subscriptions",
                  "type": "boolean",
                  "title": "Send SMS ?"
                }
              },
              "required": [
                "alertText",
                "alertTitle"
              ]
            }
          }
        ]
      }
    },
    "/companies/audiences": {
      "get": {
        "responses": {
          "200": {
            "description": "An array of audiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id",
                    "title": "Id"
                  },
                  "name": {
                    "type": "string",
                    "description": "name",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all audiences",
        "operationId": "GetAudiences",
        "parameters": [],
        "description": "Get all audiences - Sociabble Basic"
      }
    },
    "/channels": {
      "get": {
        "responses": {
          "200": {
            "description": "An array of channels",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id",
                    "title": "Id"
                  },
                  "name": {
                    "type": "string",
                    "description": "name",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get channels",
        "operationId": "GetChannels",
        "parameters": [],
        "description": "Get channels - Sociabble Basic"
      }
    },
    "/categories": {
      "get": {
        "summary": "Get all categories",
        "description": "Get all categories - Sociabble Basic",
        "operationId": "GetCategories",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The unique identifier of the category",
                    "type": "string",
                    "title": "Id"
                  },
                  "name": {
                    "description": "The name of the category",
                    "type": "string",
                    "title": "Name"
                  },
                  "backgroundColor": {
                    "description": "The background color of the category",
                    "type": "string",
                    "title": "Background color"
                  },
                  "textColor": {
                    "description": "The text color of the category",
                    "type": "string",
                    "title": "Text color"
                  },
                  "shouldFillBackground": {
                    "description": "If the background color should fill all the background, the value is true. If the background color should be used in border only mode, the value is false",
                    "type": "boolean",
                    "title": "Shoud fill background"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/internalnews": {
      "post": {
        "responses": {
          "201": {
            "description": "An internal news",
            "schema": {
              "$ref": "#/definitions/InternalContent"
            }
          }
        },
        "summary": "Create an internal news",
        "operationId": "CreateInternalNews",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternalContentCreation"
            }
          }
        ],
        "description": "Create an internal news - Sociabble Basic"
      }
    },
    "/content/external": {
      "post": {
        "responses": {
          "201": {
            "description": "An external content",
            "schema": {
              "$ref": "#/definitions/ExternalContent"
            }
          }
        },
        "summary": "Create an external content",
        "description": "Create an external content - Sociabble Basic",
        "operationId": "CreateExternalContent",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalContentCreation"
            }
          }
        ]
      }
    },
    "/content/Cta/Suggest": {
      "post": {
        "responses": {
          "201": {
            "description": "A call to action to suggest content",
            "schema": {
              "$ref": "#/definitions/CtaSuggestContent"
            }
          }
        },
        "summary": "Create a call to action that suggests users to create content",
        "description": "Create a call to action that suggests users to create content - Sociabble Basic",
        "operationId": "CtaSuggestContentCreation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CtaSuggestContentCreation"
            }
          }
        ]
      }
    },
    "/content/Cta/Invitation": {
      "post": {
        "responses": {
          "201": {
            "description": "Creates a call to action invitation",
            "schema": {
              "$ref": "#/definitions/CtaInvitationContent"
            }
          }
        },
        "summary": "Create a call to action that suggests users to invite other users",
        "description": "Create a call to action that suggests users to invite other users. - Sociabble Basic",
        "operationId": "CtaInvitationContentCreation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CtaInvitationContentCreation"
            }
          }
        ]
      }
    },
    "/content/Cta/Mobile": {
      "post": {
        "responses": {
          "201": {
            "description": "Creates a call to action mobile",
            "schema": {
              "$ref": "#/definitions/CtaMobileContent"
            }
          }
        },
        "summary": "Create a call to action that suggests users to install mobile apps",
        "description": "Create a call to action that suggests users to install mobile apps. - Sociabble Basic",
        "operationId": "CtaMobileContentCreation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CtaMobileContentCreation"
            }
          }
        ]
      }
    },
    "/content/Cta/Event": {
      "post": {
        "responses": {
          "201": {
            "description": "A call to action that informs user for en event",
            "schema": {
              "$ref": "#/definitions/CtaEventContent"
            }
          }
        },
        "summary": "Create a call to action that informs user for an event",
        "description": "Create a call to action that informs user for an event - Sociabble Basic",
        "operationId": "CtaEventCreation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CtaEventCreation"
            }
          }
        ]
      }
    },
    "/users/{username}/badges/": {
      "post": {
        "responses": {
          "204": {
            "description": "default"
          }
        },
        "summary": "Assign a badge to a user",
        "description": "Assign a badge to a user - Sociabble Basic",
        "operationId": "AssignBadgeToUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The username of the user",
            "x-ms-summary": "Username",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "badgeId": {
                  "type": "string",
                  "description": "The badge to be assigned",
                  "title": "Badge",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAllBadges",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "level": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The badge level to be assigned",
                  "title": "Level",
                  "x-ms-dynamic-list": {
                    "operationId": "GetBadgeLevels",
                    "itemValuePath": "level",
                    "itemTitlePath": "name",
                    "parameters": {
                      "badgeId": {
                        "parameterReference": "body/badgeId"
                      }
                    }
                  }
                }
              },
              "required": [
                "badgeId",
                "level"
              ]
            }
          }
        ]
      }
    },
    "/users/{username}/customactions/": {
      "post": {
        "responses": {
          "204": {
            "description": "default"
          }
        },
        "summary": "Assign a custom action to a user",
        "description": "Assign a custom action to a user - Sociabble Basic",
        "operationId": "AssignCustomActionToUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The username of the user",
            "x-ms-summary": "Username",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "isEngaging": {
                  "type": "boolean",
                  "description": "If the custom action should be considered as engaging, choose yes",
                  "title": "Is engaging ?"
                },
                "isInternal": {
                  "type": "boolean",
                  "description": "If the custom action should be considered as an internal action, choose yes",
                  "title": "Is internal ?"
                },
                "points": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of points earned by the user",
                  "title": "Points"
                },
                "contents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "language",
                      "isDefault",
                      "notificationText",
                      "title"
                    ],
                    "properties": {
                      "language": {
                        "$ref": "#/definitions/LanguageBehavior"
                      },
                      "isDefault": {
                        "type": "boolean",
                        "description": "If this language is the default, choose yes",
                        "title": "Is the default language?"
                      },
                      "title": {
                        "type": "string",
                        "description": "Write a title for the custom action",
                        "title": "Title"
                      },
                      "description": {
                        "type": "string",
                        "description": "Write a small description for the custom action",
                        "title": "Description"
                      },
                      "notificationText": {
                        "type": "string",
                        "description": "Write a small text to be sent as a notification to the user",
                        "title": "Notification"
                      }
                    }
                  },
                  "description": "Custom action",
                  "title": "Custom action"
                }
              },
              "required": [
                "contents"
              ]
            }
          }
        ]
      }
    },
    "/badges": {
      "get": {
        "responses": {
          "200": {
            "description": "An array of badges",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id",
                    "title": "Id"
                  },
                  "name": {
                    "type": "string",
                    "description": "name",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all badges",
        "description": "Get all badges - Sociabble Basic",
        "operationId": "GetAllBadges",
        "parameters": []
      }
    },
    "/badges/{badgeId}/levels": {
      "get": {
        "responses": {
          "200": {
            "description": "An array of badge levels",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "badgeId": {
                    "type": "string",
                    "description": "badgeId",
                    "title": "Badge Id"
                  },
                  "level": {
                    "type": "integer",
                    "format": "int32",
                    "description": "level",
                    "title": "Level"
                  },
                  "name": {
                    "type": "string",
                    "description": "name",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get badge levels",
        "description": "Get badge levels - Sociabble Basic",
        "operationId": "GetBadgeLevels",
        "parameters": [
          {
            "name": "badgeId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "A unique identifier of a badge",
            "x-ms-summary": "Badge Id"
          }
        ]
      }
    },
    "/medias": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UploadMediaResponse"
            }
          }
        },

        "deprecated": true,
        "summary": "Upload a media (deprecated)",
        "description": "Upload a media (media or mediaUrl in form-data) to use during the creation of an internal news (deprecated) - Sociabble Basic",
        "operationId": "UploadMedia",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "type": "string",
            "enum": [
              "private",
              "public"
            ],
            "x-ms-summary": "Media Visibility",
            "name": "mediaVisibility",
            "description": "This represents the visibility of a media. If the media is not intended to be publicly visible (for exemple linked to an internal news that can't be shared) the value should be private",
            "required": true
          },
          {
            "in": "formData",
            "x-ms-summary": "Media URL",
            "name": "mediaUrl",
            "description": "The url of the media to upload. You can either specify media or mediaUrl but not both",
            "type": "string"
          },
          {
            "in": "formData",
            "x-ms-summary": "Folder Id",
            "name": "folderId",
            "description": "The unique identifier of the media drive folder in which the media should be uploaded into. This parameter is optional and only accessible for Standard subscriptions",
            "type": "string"
          },
          {
            "in": "formData",
            "x-ms-summary": "Media",
            "name": "media",
            "description": "The media to upload. You can either specify media or mediaUrl but not both",
            "type": "file"
          }
        ]
      }
    },
    "/medias/ByStream": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UploadMediaResponse"
            }
          }
        },
        "summary": "Upload a Media From a File",
        "description": "Upload a media from a file to use during the creation of a content - Sociabble Basic",
        "operationId": "UploadMediaByStream",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "type": "string",
            "enum": [
              "private",
              "public"
            ],
            "x-ms-summary": "Media Visibility",
            "name": "mediaVisibility",
            "description": "This represents the visibility of a media. If the media is not intended to be publicly visible (for exemple linked to an internal news that can't be shared) the value should be private",
            "required": true
          },
          {
            "in": "formData",
            "x-ms-summary": "Media",
            "name": "media",
            "description": "The media stream to upload.",
            "type": "file",
            "required": true
          }
        ]
      }
    },
    "/medias/ByUrl": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UploadMediaResponse"
            }
          }
        },
        "summary": "Upload a Media From an URL",
        "description": "Upload a media from an URL to use during the creation of a content - Sociabble Basic",
        "operationId": "UploadMediaByUrl",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "type": "string",
            "enum": [
              "private",
              "public"
            ],
            "x-ms-summary": "Media Visibility",
            "name": "mediaVisibility",
            "description": "This represents the visibility of a media. If the media is not intended to be publicly visible (for exemple linked to an internal news that can't be shared) the value should be private",
            "required": true
          },
          {
            "in": "formData",
            "x-ms-summary": "Media URL",
            "name": "mediaUrl",
            "description": "The url of the media to upload.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/medias/ByStreamByFolder": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UploadMediaResponse"
            }
          }
        },
        "summary": "Upload a Media From a File Into a Media Drive's folder",
        "description": "Upload a Media From a File Into a Media Drive's folder and to use during the creation of a content - Sociabble Standard",
        "operationId": "UploadMediaByStreamByFolder",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "type": "string",
            "enum": [
              "private",
              "public"
            ],
            "x-ms-summary": "Media Visibility",
            "name": "mediaVisibility",
            "description": "This represents the visibility of a media. If the media is not intended to be publicly visible (for exemple linked to an internal news that can't be shared) the value should be private",
            "required": true
          },
          {
            "in": "formData",
            "x-ms-summary": "Folder Id",
            "name": "folderId",
            "description": "The unique identifier of the media drive folder in which the media should be uploaded into. This parameter is optional and only accessible for Standard subscriptions",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetMediaDriveFolders",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "folders"
            },
            "required": true



          },
          {
            "in": "formData",
            "x-ms-summary": "Media",
            "name": "media",
            "description": "The media stream to upload. ",
            "type": "file",
            "required": true
          }
        ]
      }
    },
    "/medias/ByUrlByFolder": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UploadMediaResponse"
            }
          }
        },
        "summary": "Upload a Media From an URL Into a Media Drive's folder",
        "description": "Upload a Media From an URL Into a Media Drive's folder and to use during the creation of a content - Sociabble Standard",
        "operationId": "UploadMediaByUrlByFolder",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "type": "string",
            "enum": [
              "private",
              "public"
            ],
            "x-ms-summary": "Media Visibility",
            "name": "mediaVisibility",
            "description": "This represents the visibility of a media. If the media is not intended to be publicly visible (for exemple linked to an internal news that can't be shared) the value should be private",
            "required": true
          },
          {
            "in": "formData",
            "x-ms-summary": "Folder Id",
            "name": "folderId",
            "description": "The unique identifier of the media drive folder in which the media should be uploaded into. This parameter is optional and only accessible for Standard subscriptions",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetMediaDriveFolders",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "folders"
            },
            "required": true

          },
          {
            "in": "formData",
            "x-ms-summary": "Media URL",
            "name": "mediaUrl",
            "description": "The url of the media to upload.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/segmentations": {
      "get": {
        "responses": {
          "200": {
            "description": "An array of segmentation groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "userCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "userCount"
                  },
                  "creationDate": {
                    "type": "string",
                    "description": "creationDate"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "creatorFirstname": {
                    "type": "string",
                    "description": "creatorFirstname"
                  },
                  "creatorLastname": {
                    "type": "string",
                    "description": "creatorLastname"
                  }
                }
              }
            }
          }
        },
        "summary": "Get segmentation groups",
        "description": "Get segmentation groups - Sociabble Standard",
        "operationId": "GetSegmentationGroups",
        "parameters": [],
        "x-ms-visibility": "internal"
      }
    },
    "/segmentations/{segmentationId}/groups": {
      "get": {
        "responses": {
          "200": {
            "description": "An array of groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "userCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "userCount"
                  },
                  "creationDate": {
                    "type": "string",
                    "description": "creationDate"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "creatorFirstname": {
                    "type": "string",
                    "description": "creatorFirstname"
                  },
                  "creatorLastname": {
                    "type": "string",
                    "description": "creatorLastname"
                  },
                  "isTerminalNode": {
                    "type": "boolean",
                    "description": "isTerminalNode"
                  }
                }
              }
            }
          }
        },
        "summary": "Get groups for a segmentation",
        "operationId": "GetGroupsSegmentation",
        "description": "Get groups for a segmentation - Sociabble Standard",
        "parameters": [
          {
            "name": "segmentationId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single"
          }
        ],
        "x-ms-visibility": "internal"
      },
      "put": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Assign a group to users",
        "description": "Assign a group to users",
        "operationId": "AssignGroupUsers",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "segmentationId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetSegmentationGroups",
              "value-path": "id",
              "value-title": "name"
            },
            "description": "Choose a segmentation",
            "x-ms-summary": "Segmentation",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "assignments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "assignedUserEmail": {
                        "type": "string",
                        "description": "The username of the user",
                        "title": "User"
                      },
                      "groupId": {
                        "type": "string",
                        "description": "The group to be assigned",
                        "title": "Group",
                        "x-ms-dynamic-values": {
                          "operationId": "GetGroupsSegmentation",
                          "value-path": "id",
                          "value-title": "name",
                          "parameters": {
                            "segmentationId": {
                              "parameter": "segmentationId"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Assignment",
                  "title": "Assignment"
                }
              }
            }
          }
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/mediafolders": {
      "get": {
        "deprecated": true,
        "responses": {
          "200": {
            "description": "An array of folders",
            "schema": {
              "type": "object",
              "properties": {
                "folders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique identifier of the folder",
                        "title": "Id"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the folder",
                        "title": "Name"
                      }
                    }
                  },
                  "description": "folders"
                }
              }
            }
          }
        },
        "summary": "Get Media Drive folders (deprecated)",
        "description": "Get Media Drive folders (deprecated). - Sociabble Standard",
        "operationId": "GetMediaFolders",
        "parameters": [
          {
            "name": "culture",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The culture in which you want the default folders to be returned",
            "x-ms-summary": "Culture"
          }
        ]
      }
    },
    "/mediafolders/{folderId}/medias": {
      "post": {
        "deprecated": true,
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Upload a file to a Media Drive folder",
        "description": "Upload a file to a Media Drive folder - Sociabble Standard",
        "operationId": "UploadFileFolder",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "media",
            "in": "formData",
            "required": true,
            "type": "file",
            "x-ms-media-kind": "image",
            "description": "The media to be uploaded",
            "x-ms-summary": "Media"
          },
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetMediaFolders",
              "value-path": "id",
              "value-collection": "folders",
              "value-title": "name"
            },
            "description": "Choose a folder",
            "x-ms-summary": "Folder,",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/mediadrive": {
      "get": {
        "summary": "Get Media Drive folders",
        "description": "Get Media Drive folders - Sociabble Standard",
        "operationId": "GetMediaDriveFolders",
        "parameters": [
          {
            "in": "query",
            "name": "culture",
            "x-ms-summary": "Culture",
            "description": "The language in which the labels are returned",
            "type": "string",
            "default": "en"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of folders",
            "schema": {
              "$ref": "#/definitions/GetFoldersResponse"
            }
          }
        }
      }
    }
  },
  "x-ms-connector-metadata": [
      {
        "propertyName": "Website",
        "propertyValue": "https://www.sociabble.com"
      },
      {
        "propertyName": "Privacy policy",
        "propertyValue": "https://www.sociabble.com/fr/privacy-policy/"
      },
      {
        "propertyName": "Categories",
        "propertyValue": "Website"
      }
    ],
    "definitions": {
      "MyNewsDisplayBehavior": {
        "description": "Define the behavior regarding the display of a content in \"My News\"",
        "enum": [
          "default",
          "always",
          "never"
        ],
        "type": "string",
        "title": "My News Display"
      },
      "LanguageBehavior": {
        "description": "The language of the content.",
        "type": "string",
        "title": "Language",
        "x-ms-enum-values": [
          {"value": "af" , "displayName":"Afrikaans"},
          {"value": "ar" , "displayName":"Arabic"},
          {"value": "bn" , "displayName":"Bengali"},
          {"value": "bs" , "displayName":"Bosnian"},
          {"value": "pt-BR" , "displayName":"Brazilian Portuguese"},
          {"value": "bg" , "displayName":"Bulgarian"},
          {"value": "ca" , "displayName":"Catalan"},
          {"value": "zh-Hans" , "displayName":"Chinese (Simplified)"},
          {"value": "zh-Hant" , "displayName":"Chinese (Traditional)"},
          {"value": "hr" , "displayName":"Croatian"},
          {"value": "cs" , "displayName":"Czech"},
          {"value": "da" , "displayName":"Danish"},
          {"value": "nl" , "displayName":"Dutch"},
          {"value": "en" , "displayName":"English"},
          {"value": "et" , "displayName":"Estonian"},
          {"value": "fil" , "displayName":"Filipino"},
          {"value": "fi" , "displayName":"Finnish"},
          {"value": "fr" , "displayName":"French"},
          {"value": "de" , "displayName":"German"},
          {"value": "el" , "displayName":"Greek"},
          {"value": "he" , "displayName":"Hebrew"},
          {"value": "hi" , "displayName":"Hindi"},
          {"value": "hu" , "displayName":"Hungarian"},
          {"value": "is" , "displayName":"Icelandic"},
          {"value": "id" , "displayName":"Indonesian"},
          {"value": "it" , "displayName":"Italian"},
          {"value": "ja" , "displayName":"Japanese"},
          {"value": "sw" , "displayName":"Kiswahili"},
          {"value": "ko" , "displayName":"Korean"},
          {"value": "lv" , "displayName":"Latvian"},
          {"value": "lt" , "displayName":"Lithuanian"},
          {"value": "ms" , "displayName":"Malay"},
          {"value": "mt" , "displayName":"Maltese"},
          {"value": "nb" , "displayName":"Norwegian"},
          {"value": "fa" , "displayName":"Persian"},
          {"value": "pl" , "displayName":"Polish"},
          {"value": "pt" , "displayName":"Portuguese"},
          {"value": "ro" , "displayName":"Romanian"},
          {"value": "ru" , "displayName":"Russian"},
          {"value": "sr" , "displayName":"Serbian"},
          {"value": "sk" , "displayName":"Slovak"},
          {"value": "sl" , "displayName":"Slovenian"},
          {"value": "es" , "displayName":"Spanish"},
          {"value": "sv" , "displayName":"Swedish"},
          {"value": "ta" , "displayName":"Tamil"},
          {"value": "th" , "displayName":"Thai"},
          {"value": "tr" , "displayName":"Turkish"},
          {"value": "uk" , "displayName":"Ukrainian"},
          {"value": "ur" , "displayName":"Urdu"},
          {"value": "vi" , "displayName":"Vietnamese"},
          {"value": "cy" , "displayName":"Welsh"}
        ],
        "enum": [
          "af",
          "ar",
          "bn",
          "bs",
          "pt-BR",
          "bg",
          "ca",
          "zh-Hans",
          "zh-Hant",
          "hr",
          "cs",
          "da",
          "nl",
          "en",
          "et",
          "fil",
          "fi",
          "fr",
          "de",
          "el",
          "he",
          "hi",
          "hu",
          "is",
          "id",
          "it",
          "ja",
          "sw",
          "ko",
          "lv",
          "lt",
          "ms",
          "mt",
          "nb",
          "fa",
          "pl",
          "pt",
          "ro",
          "ru",
          "sr",
          "sk",
          "sl",
          "es",
          "sv",
          "ta",
          "th",
          "tr",
          "uk",
          "ur",
          "vi",
          "cy"
        ]
      },
      "ContentTypeDiscriminator": {
        "enum": [
          "None",
          "InternalNews",
          "Quiz",
          "Survey",
          "ContentForSharing",
          "Cta",
          "Live",
          "SocialNetworkContent",
          "AdminExternalContent",
          "PersonalisedTile",
          "Poll",
          "UserContent",
          "SupportMyCause"
        ],
        "type": "string",
        "description": "Represents the type of the content<p>Members:</p><ul><li><i>None</i> - The type is undefined, this can happen when a new type of content was introduced but not supported yet</li><li><i>InternalNews</i> - This represents an internal news</li><li><i>Quiz</i> - This represents a quiz</li><li><i>Survey</i> - This represents a survey</li><li><i>ContentForSharing</i> - This represents a content for sharing purpose with multiple content</li><li><i>Cta</i> - This represents a call to action</li><li><i>Live</i> - This represents a live video</li><li><i>SocialNetworkContent</i> - This represents a content fetched from social networks</li><li><i>AdminExternalContent</i> - This represents a content fetched from a web link created by an admin</li><li><i>PersonalisedTile</i> - This represents a personalised (html) tile</li><li><i>Poll</i> - This represents a survey created by a user</li><li><i>UserContent</i> - This represents a content created by a user</li><li><i>SupportMyCause</i> - This represents a project support my cause</li></ul>"
      },
      "CtaContentTypeDiscriminator": {
        "enum": [
          "None",
          "SuggestContent",
          "Mobile",
          "Invitation",
          "Event"
        ],
        "type": "string",
        "description": "Represents the type of a call to action content<p>Members:</p><ul><li><i>None</i> - The type is undefined, it should not be used</li><li><i>SuggestContent</i> - This represents a call to action that suggests users to create content</li><li><i>Mobile</i> - This represents a call to action that suggests users to install mobile apps</li><li><i>Invitation</i> - This represents a call to action that suggests users to invite other users</li><li><i>Event</i> - This represents a call to action that suggests users to check out an external link (exemple : an external event)</li></ul>"
      },
      "ContentCategory": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of the category",
            "type": "string",
            "title": "Category Id"
          },
          "name": {
            "description": "The name of the category",
            "type": "string",
            "title": "Category name"
          },
          "backgroundColor": {
            "description": "The background color of the category",
            "type": "string",
            "title": "Category background color"
          },
          "textColor": {
            "description": "The text color of the category",
            "type": "string",
            "title": "Category text color"
          },
          "shouldFillBackground": {
            "description": "If the background color should fill all the background, the value is true. If the background color should be used in border only mode, the value is false",
            "type": "boolean",
            "title": "Should fill background"
          }
        }
      },
      "ContentChannel": {
        "description": "Represents a channel associated with a content",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of the channel",
            "type": "string",
            "title": "Channel Id"
          },
          "name": {
            "description": "The name of the channel",
            "type": "string",
            "title": "Channel name"
          },
          "image": {
            "description": "The image url of the channel",
            "type": "string",
            "title": "Channel image"
          },
          "backgroundColor": {
            "description": "The background color of the channel in case there is no image",
            "type": "string",
            "title": "Channel background color"
          }
        }
      },
      "ContentImage": {
        "description": "Represents an image associated with a content",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the image",
            "type": "string",
            "title": "Content image Id"
          },
          "short": {
            "description": "A short hash that can be used to ask transformation on the image",
            "type": "string",
            "title": "Content image short"
          },
          "url": {
            "description": "The image url",
            "type": "string",
            "title": "Content image url"
          },
          "order": {
            "format": "int32",
            "description": "If there are multiple image associated with the content, an order can be specified",
            "type": "integer",
            "title": "Content image order"
          }
        }
      },
      "InternalContent": {
        "description": "Represents an internal news",
        "type": "object",
        "properties": {
          "discriminator": {
            "$ref": "#/definitions/ContentTypeDiscriminator"
          },
          "id": {
            "description": "The unique identifier of the content",
            "type": "string",
            "title": "Id"
          },
          "date": {
            "format": "date-time",
            "description": "The publication date for the content",
            "type": "string",
            "title": "Publication date"
          },
          "internalUrl": {
            "description": "The url to view the content",
            "type": "string",
            "title": "Internal URL"
          },
          "channelIds": {
            "description": "An array containing all unique identifiers of the channels where the content appears. Deprecated: The property Channels should be used instead",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "channels": {
            "title": "Channels",
            "description": "An array containing all channels where the content appears",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentChannel"
            }
          },
          "audienceId": {
            "description": "The unique identifier of the audience Deprecated: This property will always be empty or null",
            "type": "string",
            "title": "Audience Id"
          },
          "categories": {
            "title": "Categories",
            "description": "The categories associated with the content",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentCategory"
            }
          },
          "likeNumber": {
            "format": "int32",
            "description": "The number of times users clicked \"like\"",
            "type": "integer",
            "title": "Like number"
          },
          "commentNumber": {
            "format": "int32",
            "description": "The number of times users wrote a comment",
            "type": "integer",
            "title": "Comment number"
          },
          "clickNumber": {
            "format": "int32",
            "description": "The number of times users clicked on the content",
            "type": "integer",
            "title": "Click number"
          },
          "hasBeenRead": {
            "description": "If the content has been already read the value is yes",
            "type": "boolean",
            "title": "Content has been read"
          },
          "contents": {
            "title": "Contents",
            "description": "An array containing the content in different languages",
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalizedInternalContent"
            }
          }
        }
      },
      "InternalContentCreation": {
        "description": "Represents a request to create an internal content",
        "required": [
          "contents",
          "channelIds"
        ],
        "type": "object",
        "properties": {
          "channelIds": {
            "title": "Channel",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Choose a channel that the content will be published to",
              "x-ms-dynamic-values": {
                "operationId": "GetChannels",
                "value-path": "id",
                "value-title": "name"
              }
            }
          },
          "categoryIds": {
            "title": "Category",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Choose a category that the content will be tagged with",
              "title": "Category",
              "x-ms-dynamic-values": {
                "operationId": "GetCategories",
                "value-path": "id",
                "value-title": "name"
              }
            }
          },
          "audienceId": {
            "description": "The unique identifier of the audience",
            "type": "string",
            "title": "Audience Id",
            "x-ms-dynamic-values": {
              "operationId": "GetAudiences",
              "value-path": "id",
              "value-title": "name"
            }
          },
          "publicationStartDate": {
            "format": "date-time",
            "description": "The date at which the content should be displayed",
            "type": "string",
            "title": "Publication start date"
          },
          "publicationEndDate": {
            "format": "date-time",
            "description": "The date at which the content should not be displayed anymore",
            "type": "string",
            "title": "Publication end date"
          },
          "myNewsDisplay": {
            "$ref": "#/definitions/MyNewsDisplayBehavior"
          },
          "shouldPinTopOfMyNews": {
            "description": "If you want the content to be pinned at the top of \"My News\", choose yes",
            "type": "boolean",
            "title": "Should pin at the top of My News ?"
          },
          "pinOfMyNewsStartDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be pinned at the top of \"My News\"",
            "type": "string",
            "title": "Start date pin at the top of My News"
          },
          "pinOfMyNewsEndDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be unpinned from \"My News\"",
            "type": "string",
            "title": "End date pin at the top of My News"
          },
          "shouldPinTopOfSelectedChannels": {
            "description": "If you want the content to be pinned at the top of the selected channels, choose yes",
            "type": "boolean",
            "title": "Should pin at the top of selected channels ?"
          },
          "pinTopOfSelectedChannelsStartDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be pinned at the top of the selected channels",
            "type": "string",
            "title": "Start date pin at the top of selected channels"
          },
          "pinTopOfSelectedChannelsEndDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be unpinned from selected channels",
            "type": "string",
            "title": "End date pin at the top of selected channels"
          },
          "contents": {
            "title": "Contents",
            "description": "An array containing the content in different languages",
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalizedInternalContentCreation"
            }
          },
          "areCommentsAuthorized": {
            "description": "If the content can be commented, choose yes",
            "type": "boolean",
            "title": "Are comments authorized ?"
          },
          "shouldNotifyUsers": {
            "description": "If a notification should be sent to users when content is available, choose yes",
            "type": "boolean",
            "title": "Should notify users ?"
          },
          "isMustReadContent": {
            "description": "If you want users explicitely mark the content as read, choose yes",
            "type": "boolean",
            "title": "Is must read ?"
          }
        }
      },
      "ExternalContent": {
        "type": "object",
        "properties": {
          "discriminator": {
            "$ref": "#/definitions/ContentTypeDiscriminator"
          },
          "id": {
            "description": "The unique identifier of the content",
            "type": "string",
            "title": "Id"
          },
          "date": {
            "format": "date-time",
            "description": "The publication date for the content",
            "type": "string",
            "title": "Publication date"
          },
          "internalUrl": {
            "description": "The url to view the content",
            "type": "string",
            "title": "Internal URL"
          },
          "channelIds": {
            "description": "An array containing all unique identifiers of the channels where the content appears. Deprecated: The property Channels should be used instead",
            "type": "array",
            "items": {
              "type": "string",
              "description": "channel",
              "title": "channel"
            }
          },
          "channels": {
            "title": "Channels",
            "description": "An array containing all channels where the content appears",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentChannel"
            }
          },
          "audienceId": {
            "description": "The unique identifier of the audience. Deprecated: This property will always be empty or null",
            "type": "string",
            "title": "Audience Id"
          },
          "categories": {
            "title": "Categories",
            "description": "The categories associated with the content",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentCategory"
            }
          },
          "likeNumber": {
            "format": "int32",
            "description": "The number of times users clicked \"like\"",
            "type": "integer",
            "title": "Like number"
          },
          "commentNumber": {
            "format": "int32",
            "description": "The number of times users wrote a comment",
            "type": "integer",
            "title": "Comment number"
          },
          "clickNumber": {
            "format": "int32",
            "description": "The number of times users clicked on the content",
            "type": "integer",
            "title": "Click number"
          },
          "hasBeenRead": {
            "description": "If the content has been already read the value is yes",
            "type": "boolean",
            "title": "Content has been read"
          },
          "contents": {
            "title": "Contents",
            "description": "An array containing the content in different languages",
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalizedExternalContent"
            }
          },
          "contentUrl": {
            "description": "The link pointing to an external source",
            "type": "string",
            "title": "Content url"
          },
          "isShareable": {
            "description": "If the content can be shared on external networks, choose yes",
            "type": "boolean",
            "title": "Is content shareable ?"
          },
          "isOfficialContent": {
            "description": "If the content should be considered as official, choose yes",
            "type": "boolean",
            "title": "Is content official ?"
          },
          "areCommentsAuthorized": {
            "description": "If the content can be commented, choose yes",
            "type": "boolean",
            "title": "Are comments authorized ?"
          }
        }
      },
      "ExternalContentCreation": {
        "description": "Represents a request to create an internal content",
        "required": [
          "contents",
          "contentUrl",
          "channelIds"
        ],
        "type": "object",
        "properties": {
          "channelIds": {
            "title": "Channel",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Choose a channel that the content will be published to",
              "x-ms-dynamic-values": {
                "operationId": "GetChannels",
                "value-path": "id",
                "value-title": "name"
              }
            }
          },
          "categoryIds": {
            "title": "Category",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Choose a category that the content will be tagged with",
              "x-ms-dynamic-values": {
                "operationId": "GetCategories",
                "value-path": "id",
                "value-title": "name"
              }
            }
          },
          "audienceId": {
            "description": "The unique identifier of the audience",
            "type": "string",
            "title": "Audience Id",
            "x-ms-dynamic-values": {
              "operationId": "GetAudiences",
              "value-path": "id",
              "value-title": "name"
            }
          },
          "publicationStartDate": {
            "format": "date-time",
            "description": "The date at which the content should be displayed",
            "type": "string",
            "title": "Publication start date"
          },
          "publicationEndDate": {
            "format": "date-time",
            "description": "The date at which the content should not be displayed anymore",
            "type": "string",
            "title": "Publication end date"
          },
          "myNewsDisplay": {
            "$ref": "#/definitions/MyNewsDisplayBehavior"
          },
          "shouldPinTopOfMyNews": {
            "description": "If you want the content to be pinned at the top of \"My News\", choose yes",
            "type": "boolean",
            "title": "Should pin at the top of My News ?"
          },
          "pinOfMyNewsStartDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be pinned at the top of \"My News\"",
            "type": "string",
            "title": "Start date pin at the top of My News"
          },
          "pinOfMyNewsEndDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be unpinned from \"My News\"",
            "type": "string",
            "title": "End date pin at the top of My News"
          },
          "shouldPinTopOfSelectedChannels": {
            "description": "If you want the content to be pinned at the top of the selected channels, choose yes",
            "type": "boolean",
            "title": "Should pin at the top of selected channels ?"
          },
          "pinTopOfSelectedChannelsStartDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be pinned at the top of the selected channels",
            "type": "string",
            "title": "Start date pin at the top of selected channels"
          },
          "pinTopOfSelectedChannelsEndDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be unpinned from selected channels",
            "type": "string",
            "title": "End date pin at the top of selected channels"
          },
          "contents": {
            "title": "Contents",
            "description": "An array containing the content in different languages",
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalizedExternalContentCreation"
            }
          },
          "contentUrl": {
            "description": "The link pointing to an external source",
            "type": "string",
            "title": "Content URL"
          },
          "isShareable": {
            "description": "If the content can be shared on external networks, choose yes",
            "type": "boolean",
            "title": "Is content shareable ?"
          },
          "isOfficialContent": {
            "description": "If the content should be considered as official, choose yes",
            "type": "boolean",
            "title": "Is an official content ?"
          },
          "areCommentsAuthorized": {
            "description": "If the content can be commented, choose yes",
            "type": "boolean",
            "title": "Are comments authorized ?"
          },
          "shouldNotifyUsers": {
            "description": "If a notification should be sent to users when content is available, choose yes",
            "type": "boolean",
            "title": "Should notify users ?"
          },
          "isMustReadContent": {
            "description": "If you want users explicitely mark the content as read, choose yes",
            "type": "boolean",
            "title": "Is a must read content ?"
          }
        }
      },
      "CtaSuggestContentCreation":{
        "description": "Represents a request to create a call to action that suggests users to create content",
        "required": [
          "discriminator",
          "contents",
          "channelIds",
          "ctaDiscriminator"
        ],
        "type": "object",
        "properties": {
          "discriminator": {
            "description": "Represents the type of the content",
            "type": "string",
            "title": "ContentTypeCreationDiscriminatorstring",
            "default":"Cta",
            "x-ms-visibility": "internal"
          },
          "channelIds": {
            "title": "Channel",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Choose a channel that the content will be published to",
              "x-ms-dynamic-values": {
                "operationId": "GetChannels",
                "value-path": "id",
                "value-title": "name"
              }
            }
          },
          "categoryIds": {
            "title": "Category",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Choose a category that the content will be tagged with",
              "title": "Category",
              "x-ms-dynamic-values": {
                "operationId": "GetCategories",
                "value-path": "id",
                "value-title": "name"
              }
            }
          },
          "audienceId": {
            "description": "The unique identifier of the audience",
            "type": "string",
            "title": "Audience Id",
            "x-ms-dynamic-values": {
              "operationId": "GetAudiences",
              "value-path": "id",
              "value-title": "name"
            }
          },
          "publicationStartDate": {
            "format": "date-time",
            "description": "The date at which the content should be displayed",
            "type": "string",
            "title": "Publication start date"
          },
          "publicationEndDate": {
            "format": "date-time",
            "description": "The date at which the content should not be displayed anymore",
            "type": "string",
            "title": "Publication end date"
          },
          "myNewsDisplay": {
            "$ref": "#/definitions/MyNewsDisplayBehavior"
          },
          "shouldPinTopOfMyNews": {
            "description": "If you want the content to be pinned at the top of \"My News\", choose yes",
            "type": "boolean",
            "title": "Should pin at the top of My News ?"
          },
          "pinOfMyNewsStartDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be pinned at the top of \"My News\"",
            "type": "string",
            "title": "Start date pin at the top of My News"
          },
          "pinOfMyNewsEndDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be unpinned from \"My News\"",
            "type": "string",
            "title": "End date pin at the top of My News"
          },
          "shouldPinTopOfSelectedChannels": {
            "description": "If you want the content to be pinned at the top of the selected channels, choose yes",
            "type": "boolean",
            "title": "Should pin at the top of selected channels ?"
          },
          "pinTopOfSelectedChannelsStartDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be pinned at the top of the selected channels",
            "type": "string",
            "title": "Start date pin at the top of selected channels"
          },
          "pinTopOfSelectedChannelsEndDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be unpinned from selected channels",
            "type": "string",
            "title": "End date pin at the top of selected channels"
          },
          "ctaDiscriminator": {
            "description": "Represents the type of a call to action content",
            "type": "string",
            "title": "CtaContentTypeCreationDiscriminator",
            "default":"SuggestContent",
            "x-ms-visibility": "internal"
          },
          "contents": {
            "title": "Contents",
            "description": "An array containing the call to action in different languages",
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalizedBaseCtaContentCreation"
            }
          }

        }
      },
      "CtaInvitationContentCreation":{
        "description": "Represents a call to action that suggests users to invite other users. This is only available when users are authorized to send invitation",
        "required": [
          "discriminator",
          "contents",
          "channelIds",
          "ctaDiscriminator"
        ],
        "type": "object",
        "properties": {
          "discriminator": {
            "description": "Represents the type of the content",
            "type": "string",
            "title": "ContentTypeCreationDiscriminatorstring",
            "default":"Cta",
            "x-ms-visibility": "internal"
          },
          "channelIds": {
            "title": "Channel",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Choose a channel that the content will be published to",
              "x-ms-dynamic-values": {
                "operationId": "GetChannels",
                "value-path": "id",
                "value-title": "name"
              }
            }
          },
          "categoryIds": {
            "title": "Category",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Choose a category that the content will be tagged with",
              "title": "Category",
              "x-ms-dynamic-values": {
                "operationId": "GetCategories",
                "value-path": "id",
                "value-title": "name"
              }
            }
          },
          "audienceId": {
            "description": "The unique identifier of the audience",
            "type": "string",
            "title": "Audience Id",
            "x-ms-dynamic-values": {
              "operationId": "GetAudiences",
              "value-path": "id",
              "value-title": "name"
            }
          },
          "publicationStartDate": {
            "format": "date-time",
            "description": "The date at which the content should be displayed",
            "type": "string",
            "title": "Publication start date"
          },
          "publicationEndDate": {
            "format": "date-time",
            "description": "The date at which the content should not be displayed anymore",
            "type": "string",
            "title": "Publication end date"
          },
          "myNewsDisplay": {
            "$ref": "#/definitions/MyNewsDisplayBehavior"
          },
          "shouldPinTopOfMyNews": {
            "description": "If you want the content to be pinned at the top of \"My News\", choose yes",
            "type": "boolean",
            "title": "Should pin at the top of My News ?"
          },
          "pinOfMyNewsStartDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be pinned at the top of \"My News\"",
            "type": "string",
            "title": "Start date pin at the top of My News"
          },
          "pinOfMyNewsEndDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be unpinned from \"My News\"",
            "type": "string",
            "title": "End date pin at the top of My News"
          },
          "shouldPinTopOfSelectedChannels": {
            "description": "If you want the content to be pinned at the top of the selected channels, choose yes",
            "type": "boolean",
            "title": "Should pin at the top of selected channels ?"
          },
          "pinTopOfSelectedChannelsStartDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be pinned at the top of the selected channels",
            "type": "string",
            "title": "Start date pin at the top of selected channels"
          },
          "pinTopOfSelectedChannelsEndDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be unpinned from selected channels",
            "type": "string",
            "title": "End date pin at the top of selected channels"
          },
          "ctaDiscriminator": {
            "description": "Represents the type of a call to action content",
            "type": "string",
            "title": "CtaContentTypeCreationDiscriminator",
            "default":"Invitation",
            "x-ms-visibility": "internal"
          },
          "contents": {
            "title": "Contents",
            "description": "An array containing the call to action in different languages",
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalizedBaseCtaContentCreation"
            }
          }

        }
      },
      "CtaMobileContentCreation":{
        "description": "Represents a call to action that suggests users to invite other users. This is only available when users are authorized to send invitation",
        "required": [
          "discriminator",
          "contents",
          "channelIds",
          "ctaDiscriminator"
        ],
        "type": "object",
        "properties": {
          "discriminator": {
            "description": "Represents the type of the content",
            "type": "string",
            "title": "ContentTypeCreationDiscriminatorstring",
            "default":"Cta",
            "x-ms-visibility": "internal"
          },
          "channelIds": {
            "title": "Channel",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Choose a channel that the content will be published to",
              "x-ms-dynamic-values": {
                "operationId": "GetChannels",
                "value-path": "id",
                "value-title": "name"
              }
            }
          },
          "categoryIds": {
            "title": "Category",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Choose a category that the content will be tagged with",
              "title": "Category",
              "x-ms-dynamic-values": {
                "operationId": "GetCategories",
                "value-path": "id",
                "value-title": "name"
              }
            }
          },
          "audienceId": {
            "description": "The unique identifier of the audience",
            "type": "string",
            "title": "Audience Id",
            "x-ms-dynamic-values": {
              "operationId": "GetAudiences",
              "value-path": "id",
              "value-title": "name"
            }
          },
          "publicationStartDate": {
            "format": "date-time",
            "description": "The date at which the content should be displayed",
            "type": "string",
            "title": "Publication start date"
          },
          "publicationEndDate": {
            "format": "date-time",
            "description": "The date at which the content should not be displayed anymore",
            "type": "string",
            "title": "Publication end date"
          },
          "myNewsDisplay": {
            "$ref": "#/definitions/MyNewsDisplayBehavior"
          },
          "shouldPinTopOfMyNews": {
            "description": "If you want the content to be pinned at the top of \"My News\", choose yes",
            "type": "boolean",
            "title": "Should pin at the top of My News ?"
          },
          "pinOfMyNewsStartDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be pinned at the top of \"My News\"",
            "type": "string",
            "title": "Start date pin at the top of My News"
          },
          "pinOfMyNewsEndDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be unpinned from \"My News\"",
            "type": "string",
            "title": "End date pin at the top of My News"
          },
          "shouldPinTopOfSelectedChannels": {
            "description": "If you want the content to be pinned at the top of the selected channels, choose yes",
            "type": "boolean",
            "title": "Should pin at the top of selected channels ?"
          },
          "pinTopOfSelectedChannelsStartDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be pinned at the top of the selected channels",
            "type": "string",
            "title": "Start date pin at the top of selected channels"
          },
          "pinTopOfSelectedChannelsEndDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be unpinned from selected channels",
            "type": "string",
            "title": "End date pin at the top of selected channels"
          },
          "ctaDiscriminator": {
            "description": "Represents the type of a call to action content",
            "type": "string",
            "title": "CtaContentTypeCreationDiscriminator",
            "default":"Mobile",
            "x-ms-visibility": "internal"
          },
          "contents": {
            "title": "Contents",
            "description": "An array containing the call to action in different languages",
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalizedBaseCtaContentCreation"
            }
          }

        }
      },
      "CtaEventCreation":{
        "description": "Represents a request to create a call to action that informs users to an event",
        "required": [
          "discriminator",
          "contents",
          "channelIds",
          "ctaDiscriminator"
        ],
        "type": "object",
        "properties": {
          "discriminator": {
            "description": "Represents the type of the content",
            "type": "string",
            "title": "ContentTypeCreationDiscriminatorstring",
            "default":"Cta",
            "x-ms-visibility": "internal"
          },
          "ctaDiscriminator": {
            "description": "Represents the type of a call to action content",
            "type": "string",
            "title": "CtaContentTypeCreationDiscriminator",
            "default":"Event",
            "x-ms-visibility": "internal"
          },
          "channelIds": {
            "title": "Channel",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Choose a channel that the content will be published to",
              "x-ms-dynamic-values": {
                "operationId": "GetChannels",
                "value-path": "id",
                "value-title": "name"
              }
            }
          },
          "audienceId": {
            "description": "The unique identifier of the audience",
            "type": "string",
            "title": "Audience Id",
            "x-ms-dynamic-values": {
              "operationId": "GetAudiences",
              "value-path": "id",
              "value-title": "name"
            }
          },
          "categoryIds": {
            "title": "Category",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Choose a category that the content will be tagged with",
              "title": "Category",
              "x-ms-dynamic-values": {
                "operationId": "GetCategories",
                "value-path": "id",
                "value-title": "name"
              }
            }
          },
          "link": {
            "description": "The link pointing to an external source",
            "type": "string",
            "title": "Website link"
          },
          "awardedBonus": {
            "description": "The number of points that a user can earn by clicking the call to action",
            "type": "integer",
            "title": "Bonus awarded"
          },
          "contents": {
            "title": "Contents",
            "description": "An array containing the call to action in different languages",
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalizedCtaEventContentCreation"
            }
          },
          "shouldDisplayTitle": {
            "description": "This indicates whether the title should be visible or not",
            "type": "boolean",
            "title": "Should display title ?"
          },
          "shouldDisplayButton": {
            "description": "This indicates whether the button should be visible or not",
            "type": "boolean",
            "title": "Should display button ?"
          },
          "publicationStartDate": {
            "format": "date-time",
            "description": "The date at which the content should be displayed",
            "type": "string",
            "title": "Publication start date"
          },
          "publicationEndDate": {
            "format": "date-time",
            "description": "The date at which the content should not be displayed anymore",
            "type": "string",
            "title": "Publication end date"
          },
          "myNewsDisplay": {
            "$ref": "#/definitions/MyNewsDisplayBehavior"
          },
          "shouldPinTopOfMyNews": {
            "description": "If you want the content to be pinned at the top of \"My News\", choose yes",
            "type": "boolean",
            "title": "Should pin at the top of My News ?"
          },
          "pinOfMyNewsStartDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be pinned at the top of \"My News\"",
            "type": "string",
            "title": "Start date pin at the top of My News"
          },
          "pinOfMyNewsEndDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be unpinned from \"My News\"",
            "type": "string",
            "title": "End date pin at the top of My News"
          },
          "shouldPinTopOfSelectedChannels": {
            "description": "If you want the content to be pinned at the top of the selected channels, choose yes",
            "type": "boolean",
            "title": "Should pin at the top of selected channels ?"
          },
          "pinTopOfSelectedChannelsStartDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be pinned at the top of the selected channels",
            "type": "string",
            "title": "Start date pin at the top of selected channels"
          },
          "pinTopOfSelectedChannelsEndDate": {
            "format": "date-time",
            "description": "The date at which you want the content to be unpinned from selected channels",
            "type": "string",
            "title": "End date pin at the top of selected channels"
          }

        }
      },
      "LocalizedExternalContentCreation": {
        "required": [
          "description",
          "language",
          "isDefault",
          "title"
        ],
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/definitions/LanguageBehavior"
          },
          "isDefault": {
            "description": "If the language should be considered as default, choose yes",
            "type": "boolean",
            "title": "Is the language default ?"
          },
          "title": {
            "description": "The title",
            "type": "string",
            "title": "Title"
          },
          "description": {
            "description": "The content",
            "type": "string",
            "title": "Description"
          },
          "proposedCommentForSharing": {
            "description": "A comment that will be proposed to users when sharing",
            "type": "string",
            "title": "Proposed comment"
          },
          "mediaId": {
            "description": "The unique identifier of the previously uploaded media that should be linked to the content",
            "type": "string",
            "title": "Media Id"
          }
        }
      },
      "LocalizedExternalContent": {
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/definitions/LanguageBehavior"
          },
          "isDefault": {
            "description": "If the language should be considered as default, choose yes",
            "type": "boolean",
            "title": "Is the default language?"
          },
          "title": {
            "description": "The title",
            "type": "string",
            "title": "Title"
          },
          "description": {
            "description": "The content",
            "type": "string",
            "title": "Description"
          },
          "proposedCommentForSharing": {
            "description": "A comment that will be proposed to users when sharing",
            "type": "string",
            "title": "Proposed comment"
          },
          "mediaId": {
            "description": "The unique identifier of the previously uploaded media that should be linked to the content",
            "type": "string",
            "title": "Media Id"
          },
          "image": {
            "$ref": "#/definitions/ContentImage"
          }
        }
      },
      "LocalizedInternalContent": {
        "required": [
          "description",
          "language",
          "summary",
          "title"
        ],
        "type": "object",
        "properties": {
          "language": {
            "description": "The language of the content",
            "type": "string",
            "title": "Language"
          },
          "isDefault": {
            "description": "If the language should be considered as default, choose yes",
            "type": "boolean",
            "title": "Is the default language?"
          },
          "title": {
            "description": "The title",
            "type": "string",
            "title": "Title"
          },
          "summary": {
            "description": "A short summary of the content",
            "type": "string",
            "title": "Summary"
          },
          "description": {
            "description": "The content",
            "type": "string",
            "title": "Description"
          },
          "mediaIds": {
            "description": "An array containing the unique identifiers of the previously uploaded medias that are linked to the content. Deprecated: The property Medias should be used instead",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "medias": {
            "title": "Medias",
            "description": "The images of the content",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentImage"
            }
          }
        }
      },
      "LocalizedInternalContentCreation": {
        "required": [
          "description",
          "language",
          "isDefault",
          "summary",
          "title"
        ],
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/definitions/LanguageBehavior"
          },
          "isDefault": {
            "description": "If the language should be considered as default, choose yes",
            "type": "boolean",
            "title": "Is the default language?"
          },
          "title": {
            "description": "The title",
            "type": "string",
            "title": "Title"
          },
          "summary": {
            "description": "A short summary of the content",
            "type": "string",
            "title": "Summary"
          },
          "description": {
            "description": "The content",
            "type": "string",
            "title": "Description"
          },
          "mediaIds": {
            "description": "An array containing the unique identifiers of the previously uploaded medias that are linked to the content",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LocalizedBaseCtaContent": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "The language of the call to action"
          },
          "isDefault": {
            "type": "boolean",
            "description": "If the content language is the default, the value is true"
          },
          "title": {
            "type": "string",
            "description": "The title of the call to action"
          },
          "summary": {
            "type": "string",
            "description": "The summary of the call to action"
          },
          "image": {
            "$ref": "#/definitions/ContentImage"
          },
          "titleForegroundColor": {
            "type": "string",
            "description": "The foreground color of the title"
          },
          "backgroundColor": {
            "type": "string",
            "description": "The background color of the call to action"
          }
        },
        "additionalProperties": false
      },
      "LocalizedBaseCtaContentCreation": {
        "required": [
          "language",
          "isDefault",
          "title"
        ],
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/definitions/LanguageBehavior"
          },
          "isDefault": {
            "type": "boolean",
            "description": "If the content language should be the default, choose yes",
            "title": "Is default language?"
          },
          "title": {
            "type": "string",
            "description": "The title of the call to action",
            "title": "Title"
          },
          "summary": {
            "type": "string",
            "description": "The summary of the call to action",
            "title": "Summary"
          },
          "mediaId": {
            "type": "string",
            "description": "The unique identifier of the previously uploaded media that should be linked to the content",
            "format": "uuid",
            "title": "Set your image"
          },
          "titleForegroundColor": {
            "type": "string",
            "description": "The foreground color of the title",
            "title": "Title/Summary foreground color"
          },
          "backgroundColor": {
            "type": "string",
            "description": "The background color of the call to action",
            "title": "Background color"
          }
        }
      },
      "LocalizedCtaEventContent": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "The language of the call to action"
          },
          "isDefault": {
            "type": "boolean",
            "description": "If the content language is the default, the value is true"
          },
          "title": {
            "type": "string",
            "description": "The title of the call to action"
          },
          "summary": {
            "type": "string",
            "description": "The summary of the call to action"
          },
          "image": {
            "$ref": "#/definitions/ContentImage"
          },
          "titleForegroundColor": {
            "type": "string",
            "description": "The foreground color of the title"
          },
          "backgroundColor": {
            "type": "string",
            "description": "The background color of the call to action"
          },
          "headerText": {
            "type": "string",
            "description": "The text of the header"
          },
          "buttonText": {
            "type": "string",
            "description": "The text of the button"
          },
          "headerForegroundColor": {
            "type": "string",
            "description": "The foreground color of the header"
          },
          "headerBackgroundColor": {
            "type": "string",
            "description": "The background color of the header"
          },
          "buttonForegroundColor": {
            "type": "string",
            "description": "The foreground color of the button"
          },
          "buttonBackgroundColor": {
            "type": "string",
            "description": "The background color of the button"
          },
          "summaryForegroundColor": {
            "type": "string",
            "description": "The foreground color of the summary"
          }
        }
      },
      "LocalizedCtaEventContentCreation": {
        "required": [
          "language",
          "isDefault",
          "title",
          "buttonText"
        ],
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/definitions/LanguageBehavior"
          },
          "isDefault": {
            "type": "boolean",
            "description": "If the content language should be the default, choose yes",
            "title": "Is default language?"
          },
          "headerText": {
            "type": "string",
            "description": "The text of the header of the call to action",
            "title": "Header text"
          },
          "title": {
            "type": "string",
            "description": "The title of the call to action",
            "title": "Title"
          },
          "summary": {
            "type": "string",
            "description": "The summary of the call to action",
            "title": "Summary"
          },
          "buttonText": {
            "type": "string",
            "description": "The text of the button",
            "title": "Button text"
          },
          "mediaId": {
            "type": "string",
            "description": "The unique identifier of the previously uploaded media that should be linked to the content",
            "format": "uuid",
            "title": "Set your image"
          },
          "headerForegroundColor": {
            "type": "string",
            "description": "The foreground color of the header",
            "title": "Header foreground color"
          },
          "headerBackgroundColor": {
            "type": "string",
            "description": "The background color of the header",
            "title": "Header background color"
          },
          "titleForegroundColor": {
            "type": "string",
            "description": "The foreground color of the title",
            "title": "Title foreground color"
          },
          "summaryForegroundColor": {
            "type": "string",
            "description": "The foreground color of the summary",
            "title": "Summary foreground color"
          },
          "backgroundColor": {
            "type": "string",
            "description": "The background color of the call to action",
            "title": "Background color"
          },
          "buttonForegroundColor": {
            "type": "string",
            "description": "The foreground color of the button",
            "title": "Button background color"
          },
          "buttonBackgroundColor": {
            "type": "string",
            "description": "The foreground color of the button",
            "title": "Button background color"
          }
        }
      },
      "GetFoldersResponse": {
        "type": "object",
        "properties": {
          "folders": {
            "description": "An array of media folders",
            "type": "array",
            "items": {
              "$ref": "#/definitions/MediaFolder"
            }
          }
        }
      },
      "MediaFolder": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of the folder",
            "type": "string",
            "title": "Folder id"
          },
          "name": {
            "description": "The name of the folder",
            "type": "string",
            "title": "Folder name"
          },
          "canUploadInto": {
            "description": "If you can upload files in this folder, the value is yes",
            "type": "boolean",
            "title": "Can upload into folder"
          },
          "isGeneratedFolder": {
            "description": "If the folder is generated by the system, the value is yes",
            "type": "boolean",
            "title": "Can Upload into folder"
          }
        }
      },
      "UploadMediaResponse": {
        "type": "object",
        "properties": {
          "mediaId": {
            "description": "The unique identifier of the media",
            "type": "string",
            "title": "Media Id"
          },
          "url": {
            "description": "The media url",
            "type": "string",
            "title": "Media url"
          }
        }
      },
      "CtaSuggestContent":{
        "type": "object",
        "properties": {
          "ctaDiscriminator": {
            "$ref": "#/definitions/CtaContentTypeDiscriminator"
          },
          "discriminator": {
            "$ref": "#/definitions/ContentTypeDiscriminator"
          },
          "id": {
            "type": "string",
            "description": "The unique identifier of the content",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "description": "The publication date for the content",
            "format": "date-time"
          },
          "internalUrl": {
            "type": "string",
            "description": "The url to view the content"
          },
          "channelIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "An array containing all unique identifiers of the channels where the content appears<p>Deprecated: The property Channels should be used instead</p>"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentChannel"
            },
            "description": "An array containing all channels where the content appears"
          },
          "audienceId": {
            "type": "string",
            "description": "The unique identifier of the audience<p>Deprecated: This property will always be empty or null</p>",
            "format": "uuid"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentCategory"
            },
            "description": "The categories associated with the content"
          },
          "likeNumber": {
            "type": "integer",
            "description": "The number of times users clicked \"like\"",
            "format": "int32"
          },
          "commentNumber": {
            "type": "integer",
            "description": "The number of times users wrote a comment",
            "format": "int32"
          },
          "clickNumber": {
            "type": "integer",
            "description": "The number of times users clicked on the content",
            "format": "int32"
          },
          "hasBeenRead": {
            "type": "boolean",
            "description": "If the content has been already read the value is yes"
          },
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalizedBaseCtaContent"
            },
            "description": "An array containing the call to action in different languages"
          }
        }
      },
      "CtaInvitationContent":{
        "type": "object",
        "properties": {
          "ctaDiscriminator": {
            "$ref": "#/definitions/CtaContentTypeDiscriminator"
          },
          "discriminator": {
            "$ref": "#/definitions/ContentTypeDiscriminator"
          },
          "id": {
            "type": "string",
            "description": "The unique identifier of the content",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "description": "The publication date for the content",
            "format": "date-time"
          },
          "internalUrl": {
            "type": "string",
            "description": "The url to view the content"
          },
          "channelIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "An array containing all unique identifiers of the channels where the content appears<p>Deprecated: The property Channels should be used instead</p>"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentChannel"
            },
            "description": "An array containing all channels where the content appears"
          },
          "audienceId": {
            "type": "string",
            "description": "The unique identifier of the audience<p>Deprecated: This property will always be empty or null</p>",
            "format": "uuid"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentCategory"
            },
            "description": "The categories associated with the content"
          },
          "likeNumber": {
            "type": "integer",
            "description": "The number of times users clicked \"like\"",
            "format": "int32"
          },
          "commentNumber": {
            "type": "integer",
            "description": "The number of times users wrote a comment",
            "format": "int32"
          },
          "clickNumber": {
            "type": "integer",
            "description": "The number of times users clicked on the content",
            "format": "int32"
          },
          "hasBeenRead": {
            "type": "boolean",
            "description": "If the content has been already read the value is yes"
          },
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalizedBaseCtaContent"
            },
            "description": "An array containing the call to action in different languages"
          }
        }
      },
      "CtaMobileContent":{
        "type": "object",
        "properties": {
          "ctaDiscriminator": {
            "$ref": "#/definitions/CtaContentTypeDiscriminator"
          },
          "discriminator": {
            "$ref": "#/definitions/ContentTypeDiscriminator"
          },
          "id": {
            "type": "string",
            "description": "The unique identifier of the content",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "description": "The publication date for the content",
            "format": "date-time"
          },
          "internalUrl": {
            "type": "string",
            "description": "The url to view the content"
          },
          "channelIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "An array containing all unique identifiers of the channels where the content appears<p>Deprecated: The property Channels should be used instead</p>"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentChannel"
            },
            "description": "An array containing all channels where the content appears"
          },
          "audienceId": {
            "type": "string",
            "description": "The unique identifier of the audience<p>Deprecated: This property will always be empty or null</p>",
            "format": "uuid"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentCategory"
            },
            "description": "The categories associated with the content"
          },
          "likeNumber": {
            "type": "integer",
            "description": "The number of times users clicked \"like\"",
            "format": "int32"
          },
          "commentNumber": {
            "type": "integer",
            "description": "The number of times users wrote a comment",
            "format": "int32"
          },
          "clickNumber": {
            "type": "integer",
            "description": "The number of times users clicked on the content",
            "format": "int32"
          },
          "hasBeenRead": {
            "type": "boolean",
            "description": "If the content has been already read the value is yes"
          },
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalizedBaseCtaContent"
            },
            "description": "An array containing the call to action in different languages"
          }
        }
      },
      "CtaEventContent":{
        "type": "object",
        "properties": {
          "discriminator": {
            "$ref": "#/definitions/ContentTypeDiscriminator"
          },
          "id": {
            "type": "string",
            "description": "The unique identifier of the content",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "description": "The publication date for the content",
            "format": "date-time"
          },
          "internalUrl": {
            "type": "string",
            "description": "The url to view the content"
          },
          "channelIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "An array containing all unique identifiers of the channels where the content appears<p>Deprecated: The property Channels should be used instead</p>"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentChannel"
            },
            "description": "An array containing all channels where the content appears"
          },
          "audienceId": {
            "type": "string",
            "description": "The unique identifier of the audience<p>Deprecated: This property will always be empty or null</p>",
            "format": "uuid"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContentCategory"
            },
            "description": "The categories associated with the content"
          },
          "likeNumber": {
            "type": "integer",
            "description": "The number of times users clicked \"like\"",
            "format": "int32"
          },
          "commentNumber": {
            "type": "integer",
            "description": "The number of times users wrote a comment",
            "format": "int32"
          },
          "clickNumber": {
            "type": "integer",
            "description": "The number of times users clicked on the content",
            "format": "int32"
          },
          "hasBeenRead": {
            "type": "boolean",
            "description": "If the content has been already read the value is yes"
          },

          "awardedBonus": {
            "type": "integer",
            "description": "The number of points that a user can earn by clicking the call to action",
            "format": "int32"
          },
          "link": {
            "type": "string",
            "description": "The link pointing to an external source"
          },
          "shouldDisplayButton": {
            "type": "boolean",
            "description": "This indicates whether the button should be visible or not"
          },
          "shouldDisplayTitle": {
            "type": "boolean",
            "description": "This indicates whether the title should be visible or not"
          },
          "ctaDiscriminator": {
            "$ref": "#/definitions/CtaContentTypeDiscriminator"
          },
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalizedCtaEventContent"
            },
            "description": "An array containing the call to action in different languages"
          }
        }
      }
    },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "X-Sociabble-SubscriptionKey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}