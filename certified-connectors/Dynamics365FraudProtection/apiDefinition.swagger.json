{
  "swagger": "2.0",
  "info": {
    "title": "Dynamics 365 Fraud Protection",
    "description": "Microsoft Dynamics 365 Fraud Protection provides merchants the capability to obtain risk assessment on fraudulent activity associated with e-commerce purchases, fraudulent account sign up and sign in attempts in their online store",
    "contact": {
      "name": "Microsoft",
      "url": "https://dynamics.microsoft.com/ai/fraud-protection/",
      "email": "dfpconnector@microsoft.com"
    },
    "version": "v1.0"
  },
  "schemes": [
    "https"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://docs.microsoft.com/fraud-protection-rest/api/fraud-protection-rest/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://docs.microsoft.com/dynamics365/fraud-protection/data-processing-protection/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI"
    }
  ],
  "paths": {
    "/v1.0/action/account/create": {
      "post": {
        "tags": [
          "AccountProtection_v1"
        ],
        "summary": "Provides risk assessment for account creation attempt",
        "description": "This event sends information and context about an incoming new Account Creation attempt. The response contains a decision for the Account Creation",
        "operationId": "AccountProtection_v1_AccountCreation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "content type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Contains information and context about an incoming new Account Creation event for a risk evaluation",
            "x-ms-summary": "Body",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountCreateResponseSuccessDetails"
            },
            "examples": {
              "application/json": {
                "enrichment": {
                  "calculatedFeatures": {
                    "emailDomain": "EMAIL_DOMAIN_EXAMPLE",
                    "emailPattern": "EMAIL_PATTERN_EXAMPLE"
                  },
                  "deviceAttributes": {
                    "trueIp": "IP_ADDRESS_EXAMPLE",
                    "proxyIp": "PROXY_IP_EXAMPLE",
                    "realtimeTimezoneOffset": "REALTIME_TIMEZONE_OFFSET_EXAMPLE",
                    "sld": "SLD_EXAMPLE",
                    "timeZone": "TIMEZONE_EXAMPLE",
                    "proxyLastDetected": "PROXY_LAST_DETECTED_EXAMPLE",
                    "deviceId": "DEVICE_ID_EXAMPLE",
                    "deviceCountryCode": "COUNTRY_CODE_EXAMPLE",
                    "deviceState": "STATE_EXAMPLE",
                    "deviceCity": "CITY_EXAMPLE",
                    "devicePostalCode": "POSTAL_CODE_EXAMPLE",
                    "deviceAsn": "ASN_EXAMPLE",
                    "platform": "PLATFORM_EXAMPLE",
                    "browserUserAgentLanguages": "USER_AGENT_LANGUAGES_EXAMPLE",
                    "browserUserAgent": "USER_AGENT_EXAMPLE",
                    "tcpDistance": "TCP_DISTANCE_EXAMPLE",
                    "carrier": "CARRIER_EXAMPLE",
                    "ipRoutingType": "IP_ROUTING_TYPE_EXAMPLE",
                    "proxy": "PROXY_EXAMPLE",
                    "proxyType": "PROXY_TYPE_EXAMPLE",
                    "userAgentPlatform": "USER_AGENT_PLATFORM_EXAMPLE",
                    "userAgentBrowser": "USER_AGENT_BROWSER_EXAMPLE",
                    "userAgentOperatingSystem": "USER_AGENT_OPERATING_SYSTEM_EXAMPLE",
                    "sdkType": "SDK_TYPE_EXAMPLE",
                    "dataNetworkType": "DATA_NETWORK_TYPE_EXAMPLE",
                    "localIpv4": "LOCAL_IPV4_EXAMPLE",
                    "isDeviceEmulator": "IS_DEVICE_EMULATOR_EXAMPLE",
                    "isDeviceRooted": "IS_DEVICE_ROOTED_EXAMPLE",
                    "isWifiEnabled": "IS_WIFI_ENABLED_EXAMPLE",
                    "deviceSystemVersion": "DEVICE_SYSTEM_VERSION_EXAMPLE",
                    "deviceModelName": "DEVICE_MODEL_NAME_EXAMPLE",
                    "localIpv6": "LOCAL_IPV6_EXAMPLE"
                  }
                },
                "resultDetails": [
                  {
                    "decision": "Approve",
                    "challengeType": null,
                    "reasons": [
                      "EXAMPLE_REASON"
                    ],
                    "rule": "Deciding RuleSet Friendly-Name",
                    "clauseName": "rule clause friendly-name",
                    "supportMessages": null,
                    "other": null,
                    "scores": [
                      {
                        "scoreType": "Bot",
                        "scoreValue": 900,
                        "reason": "BOT_SCORE_REASON_EXAMPLE"
                      },
                      {
                        "scoreType": "Risk",
                        "scoreValue": 500,
                        "reason": "RISK_SCORE_REASON_EXAMPLE"
                      }
                    ],
                    "ruleEvaluations": [
                      {
                        "rule": "Considered RuleSet Friendly-Name",
                        "clauseNames": []
                      },
                      {
                        "rule": "Deciding RuleSet Friendly-Name",
                        "clauseNames": [
                          "rule clause friendly-name"
                        ]
                      }
                    ]
                  }
                ],
                "transactionReferenceId": "<Some GUID>",
                "name": "AP.AccountCreation.Response.Success",
                "version": "<version string, e.g. 1.0>",
                "code": "<http status-code string, e.g. 200>",
                "description": "OK"
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/observe/account/create/status": {
      "post": {
        "tags": [
          "AccountProtection_v1"
        ],
        "summary": "Updates the status of account creation",
        "description": "This event sends an update of the status of an Account Creation, for example, if the Account Creation has been canceled. This is a data ingestion event only",
        "operationId": "AccountProtection_v1_AccountCreationStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "content type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Contains information and context about the status of an Account Creation",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationStatusActivity.AccountCreationStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.ResponseSuccess"
            },
            "examples": {
              "application/json": {
                "name": "AP.AccountCreation.Status.Response.Success",
                "version": "<version string, e.g. 1.0>",
                "code": "<http status-code string, e.g. 200>",
                "description": "OK"
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/action/account/login": {
      "post": {
        "tags": [
          "AccountProtection_v1"
        ],
        "summary": "Provides risk assessment for account login attempt",
        "description": "This event sends information and context about an incoming new Account Login attempt. The response contains a decision for the Account Login",
        "operationId": "AccountProtection_v1_AccountLogin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "content type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Contains information and context about an incoming new Account Login event for a risk evaluation",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.ResponseSuccessDetails"
            },
            "examples": {
              "application/json": {
                "resultDetails": [
                  {
                    "decision": "Approve",
                    "challengeType": null,
                    "reasons": [
                      "EXAMPLE_REASON"
                    ],
                    "rule": "Deciding RuleSet Friendly-Name",
                    "clauseName": "rule clause friendly-name",
                    "supportMessages": null,
                    "other": null,
                    "scores": [
                      {
                        "scoreType": "Bot",
                        "scoreValue": 900,
                        "reason": "BOT_SCORE_REASON_EXAMPLE"
                      },
                      {
                        "scoreType": "Risk",
                        "scoreValue": 500,
                        "reason": "RISK_SCORE_REASON_EXAMPLE"
                      }
                    ],
                    "ruleEvaluations": [
                      {
                        "rule": "Considered RuleSet Friendly-Name",
                        "clauseNames": []
                      },
                      {
                        "rule": "Deciding RuleSet Friendly-Name",
                        "clauseNames": [
                          "rule clause friendly-name"
                        ]
                      }
                    ]
                  }
                ],
                "transactionReferenceId": "<Some GUID>",
                "enrichment": {
                  "deviceAttributes": {
                    "trueIp": "IP_ADDRESS_EXAMPLE",
                    "proxyIp": "PROXY_IP_EXAMPLE",
                    "realtimeTimezoneOffset": "REALTIME_TIMEZONE_OFFSET_EXAMPLE",
                    "sld": "SLD_EXAMPLE",
                    "timeZone": "TIMEZONE_EXAMPLE",
                    "proxyLastDetected": "PROXY_LAST_DETECTED_EXAMPLE",
                    "deviceId": "DEVICE_ID_EXAMPLE",
                    "deviceCountryCode": "COUNTRY_CODE_EXAMPLE",
                    "deviceState": "STATE_EXAMPLE",
                    "deviceCity": "CITY_EXAMPLE",
                    "devicePostalCode": "POSTAL_CODE_EXAMPLE",
                    "deviceAsn": "ASN_EXAMPLE",
                    "platform": "PLATFORM_EXAMPLE",
                    "browserUserAgentLanguages": "USER_AGENT_LANGUAGES_EXAMPLE",
                    "browserUserAgent": "USER_AGENT_EXAMPLE",
                    "tcpDistance": "TCP_DISTANCE_EXAMPLE",
                    "carrier": "CARRIER_EXAMPLE",
                    "ipRoutingType": "IP_ROUTING_TYPE_EXAMPLE",
                    "proxy": "PROXY_EXAMPLE",
                    "proxyType": "PROXY_TYPE_EXAMPLE",
                    "userAgentPlatform": "USER_AGENT_PLATFORM_EXAMPLE",
                    "userAgentBrowser": "USER_AGENT_BROWSER_EXAMPLE",
                    "userAgentOperatingSystem": "USER_AGENT_OPERATING_SYSTEM_EXAMPLE",
                    "sdkType": "SDK_TYPE_EXAMPLE",
                    "dataNetworkType": "DATA_NETWORK_TYPE_EXAMPLE",
                    "localIpv4": "LOCAL_IPV4_EXAMPLE",
                    "isDeviceEmulator": "IS_DEVICE_EMULATOR_EXAMPLE",
                    "isDeviceRooted": "IS_DEVICE_ROOTED_EXAMPLE",
                    "isWifiEnabled": "IS_WIFI_ENABLED_EXAMPLE",
                    "deviceSystemVersion": "DEVICE_SYSTEM_VERSION_EXAMPLE",
                    "deviceModelName": "DEVICE_MODEL_NAME_EXAMPLE",
                    "localIpv6": "LOCAL_IPV6_EXAMPLE"
                  }
                },
                "name": "AP.AccountLogin.Response.Success",
                "version": "<version string, e.g. 1.0>",
                "code": "<http status-code string, e.g. 200>",
                "description": "OK"
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/observe/account/login/status": {
      "post": {
        "tags": [
          "AccountProtection_v1"
        ],
        "summary": "Updates the status of account login",
        "description": "This event sends an update of the status of an Account Login, for example, if the Account login has been canceled. This is a data ingestion event only",
        "operationId": "AccountProtection_v1_AccountLoginStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "content type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Contains information and context about the status of an Account Login",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginStatusActivity.AccountLoginStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.ResponseSuccess"
            },
            "examples": {
              "application/json": {
                "name": "AP.AccountLogin.Status.Response.Success",
                "version": "<version string, e.g. 1.0>",
                "code": "<http status-code string, e.g. 200>",
                "description": "OK"
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/observe/account/update/{UserId}": {
      "post": {
        "tags": [
          "AccountProtection_v1"
        ],
        "summary": "Updates account information for account protection",
        "description": "This event updates or creates user account information for account protection service, for example, Add Payment Instrument, Add Address, or any other user attribute. This is a data ingestion event only",
        "operationId": "AccountProtection_v1_AccountUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "UserId",
            "description": "user Id for account update",
            "required": true,
            "type": "string",
            "x-ms-summary": "User Id"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "content type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Updates or creates User account information, such as Add Payment Instrument, Add Address, or any\r\nother user attribute.",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.ResponseSuccess"
            },
            "examples": {
              "application/json": {
                "name": "AP.AccountUpdate.Response.Success",
                "version": "<version string, e.g. 1.0>",
                "code": "<http status-code string, e.g. 200>",
                "description": "OK"
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/label/account/create/{UserId}": {
      "post": {
        "tags": [
          "AccountProtection_v1"
        ],
        "summary": "Updates fraud label information for account protection",
        "description": "This event sends an update of the label. This is a data ingestion event only",
        "operationId": "AccountProtection_v1_Label",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "UserId",
            "description": "user Id for label Api",
            "required": true,
            "type": "string",
            "x-ms-summary": "User Id"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "Contect Type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Contains information and context about label event",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.LabelActivity.Label"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.ResponseSuccess"
            },
            "examples": {
              "application/json": {
                "name": "AP.Label.Response.Success",
                "version": "<version string, e.g. 1.0>",
                "code": "<http status-code string, e.g. 200>",
                "description": "OK"
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/action/assessment/{assessment-api-name}": {
      "post": {
        "tags": [
          "Assessment_v1"
        ],
        "summary": "Provides risk assessment for custom events",
        "description": "This event allows you to send a structure of their own choosing, triggered by conditions of their own choosing for rule-evaluation. The response contains a decision for the event",
        "operationId": "Assessment_v1_Assessment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "assessment-api-name",
            "description": "api name of assessment",
            "required": true,
            "type": "string",
            "x-ms-summary": "Assessment Api Name"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Contains information and context about an incoming new assessment event for a risk evaluation",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.V1.Assessment.AssessmentActivity.AssessmentWrapper"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.ResponseSuccessDetails"
            },
            "examples": {
              "application/json": {
                "resultDetails": [
                  {
                    "decision": "Challenge",
                    "challengeType": "2FA-Employee-Contact",
                    "reasons": [
                      "Redeem full point-balance"
                    ],
                    "rule": "REDEEMLOYALTYPOINTS-RuleSet2",
                    "clauseName": "Full-points needs confirmation clause3",
                    "supportMessages": null,
                    "other": null,
                    "scores": null,
                    "ruleEvaluations": [
                      {
                        "rule": "REDEEMLOYALTYPOINTS-EMEA-RuleSet1",
                        "clauseNames": []
                      },
                      {
                        "rule": "REDEEMLOYALTYPOINTS-GLOBAL-RuleSet2",
                        "clauseNames": [
                          "Full-points needs confirmation clause3"
                        ]
                      }
                    ]
                  }
                ],
                "transactionReferenceId": "<Some GUID>",
                "enrichment": {},
                "name": "redeemLoyaltyPoints.Success",
                "version": "<version string, e.g. 1.0>",
                "code": "<http status-code string, e.g. 200>",
                "description": "OK"
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/merchantservices/events/BankEvent": {
      "post": {
        "tags": [
          "PurchaseProtection_v1"
        ],
        "summary": "Updates bank authorization information",
        "description": "This event conveys if a purchase transaction sent to the bank was approved or rejected for bank authorization or bank charge/settlement. This is a data ingestion event only",
        "operationId": "PurchaseProtection_v1_BankEvent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Provides information about a purchase transaction that was sent to the bank as being approved or\r\nrejected when the transaction was settled.",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.BankEventActivity.BankEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.BankEventActivity.BankEventResponseWrapper"
            },
            "examples": {
              "application/json": {
                "resultDetails": {}
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/merchantservices/events/Chargeback": {
      "post": {
        "tags": [
          "PurchaseProtection_v1"
        ],
        "summary": "Updates confirmed fraud information",
        "description": "This event sends information about a previous purchase that the customer disputed with their bank as fraud. This is\r\na data ingestion event only. Many merchants send these events using bulk data upload",
        "operationId": "PurchaseProtection_v1_ChargebackEvent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Provides information about a previous purchase that the customer disputed with their bank as fraud.",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.ChargebackActivity.Chargeback"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.ChargebackActivity.ChargebackResponseWrapper"
            },
            "examples": {
              "application/json": {
                "resultDetails": {}
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/merchantservices/events/Label": {
      "post": {
        "tags": [
          "PurchaseProtection_v1"
        ],
        "summary": "Updates fraud label information for purchase protection",
        "description": "This event sends an update of the label. This is a data ingestion event only",
        "operationId": "PurchaseProtection_v1_Label",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Contains information and context about the status of a sign up",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.LabelActivity.Label"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.LabelActivity.LabelResponseWrapper"
            },
            "examples": {
              "application/json": {
                "resultDetails": {}
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/merchantservices/events/Purchase": {
      "post": {
        "tags": [
          "PurchaseProtection_v1"
        ],
        "summary": "Provides risk assessment for online purchase transaction",
        "description": "This event sends information and context about an incoming new purchase transaction. The response contains a decision to either approve or reject the purchase transaction and the appropriate Merchant ID (MID) the merchant should send in the authorization call to their bank",
        "operationId": "PurchaseProtection_v1_PurchaseEvent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Contains information and context about an incoming new purchase transaction for a risk evaluation,\r\nincluding product details.",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseWrapper"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.PurchaseActivity.PurchaseResponseWrapper"
            },
            "examples": {
              "application/json": {
                "resultDetails": {
                  "MerchantRuleDecision": "APPROVED",
                  "MIDFlag": "Possible values Control | Standard | Trusted",
                  "RiskScore": 70,
                  "ReasonCodes": "Reason codes for this decision and score",
                  "PolicyApplied": "Policies applied to get the decision",
                  "RuleEvaluations": [
                    {
                      "rule": "SampleRule1",
                      "clauseNames": []
                    },
                    {
                      "rule": "SampleRule2",
                      "clauseNames": [
                        "SampleClause"
                      ]
                    }
                  ],
                  "ClauseName": "SampleClause",
                  "DeviceAttributes": {
                    "UserAgentType": "browser_computer",
                    "BrowserUserAgentLanguages": "en-US,en;q=0.8,zh-Hans-CN;q=0.5,zh-Hans;q=0.3",
                    "BrowserUserAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18363",
                    "Carrier": "Microsoft",
                    "DeviceCity": "redmond",
                    "DeviceCountryCode": "us",
                    "CookieEnabled": "yes",
                    "JavaScriptEnabled": "yes",
                    "DeviceId": "a29f5d96-4f6e-848e-bf13-45f1162dfc3b",
                    "MimeTypesCount": "4",
                    "Platform": "Win32",
                    "FontsCount": "110",
                    "Plugins": "plugin_flash=false&plugin_windows_media_player=false&plugin_adobe_acrobat=false&plugin_silverlight=false&plugin_quicktime=false&plugin_shockwave=false&plugin_realplayer=false&plugin_vlc_player=false&plugin_devalvr=false&plugin_svg_viewer=false&plugin_java=false",
                    "PluginsCount": "3",
                    "DevicePostalCode": "98052",
                    "ScreenResolution": "2250x1500",
                    "DeviceState": "washington",
                    "TimeZoneOffset": "-480",
                    "TrueIp": "100.0.0.000",
                    "Proxy": "yes"
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/merchantservices/events/PurchaseStatus": {
      "post": {
        "tags": [
          "PurchaseProtection_v1"
        ],
        "summary": "Updates status of a online purchase transaction",
        "description": "This event sends an update of the status of a purchase, for example, if the purchase has been canceled. This is a data ingestion event only",
        "operationId": "PurchaseProtection_v1_PurchaseStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Contains information and context about an incoming new purchase transaction for a risk evaluation,\r\nincluding product details.",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseStatusActivity.PurchaseStatusWrapper"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.PurchaseStatusActivity.PurchaseStatusResponseWrapper"
            },
            "examples": {
              "application/json": {
                "resultDetails": {}
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/merchantservices/events/Refund": {
      "post": {
        "tags": [
          "PurchaseProtection_v1"
        ],
        "summary": "Updates refund information",
        "description": "This event sends information about a previous purchase transaction being refunded. This is a data ingestion event only. Many merchants send these events using bulk data upload",
        "operationId": "PurchaseProtection_v1_RefundEvent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Provides information about a previous purchase transaction being refunded.",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.RefundActivity.Refund"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.RefundActivity.RefundResponseWrapper"
            },
            "examples": {
              "application/json": {
                "resultDetails": {}
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v1.0/merchantservices/events/UpdateAccount": {
      "post": {
        "tags": [
          "PurchaseProtection_v1"
        ],
        "summary": "Updates account information for purchase protection",
        "description": "This event updates or creates user account information for purchase protection service, for example, Add Payment Instrument, Add Address, or any other user attribute. This is a data ingestion event only",
        "operationId": "PurchaseProtection_v1_UpdateAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type"
          },
          {
            "in": "header",
            "name": "x-ms-correlation-id",
            "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.",
            "type": "string",
            "x-ms-summary": "Correlation Id"
          },
          {
            "in": "header",
            "name": "x-ms-dfpenvid",
            "description": "EnvironmentId",
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "body",
            "name": "body",
            "x-ms-summary": "Body",
            "description": "Updates or creates User account information, such as Add Payment Instrument, Add Address, or any\r\nother user attribute.",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.UpdateAccountActivity.User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.UpdateAccountActivity.UpdateAccountResponseWrapper"
            },
            "examples": {
              "application/json": {
                "resultDetails": {
                  "DeviceAttributes": {
                    "UserAgentType": "browser_computer",
                    "BrowserUserAgentLanguages": "en-US,en;q=0.8,zh-Hans-CN;q=0.5,zh-Hans;q=0.3",
                    "BrowserUserAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18363",
                    "Carrier": "Microsoft",
                    "DeviceCity": "redmond",
                    "DeviceCountryCode": "us",
                    "CookieEnabled": "yes",
                    "JavaScriptEnabled": "yes",
                    "DeviceId": "a29f5d96-4f6e-848e-bf13-45f1162dfc3b",
                    "MimeTypesCount": "4",
                    "Platform": "Win32",
                    "FontsCount": "110",
                    "Plugins": "plugin_flash=false&plugin_windows_media_player=false&plugin_adobe_acrobat=false&plugin_silverlight=false&plugin_quicktime=false&plugin_shockwave=false&plugin_realplayer=false&plugin_vlc_player=false&plugin_devalvr=false&plugin_svg_viewer=false&plugin_java=false",
                    "PluginsCount": "3",
                    "DevicePostalCode": "98052",
                    "ScreenResolution": "2250x1500",
                    "DeviceState": "washington",
                    "TimeZoneOffset": "-480",
                    "TrueIp": "100.0.0.000",
                    "Proxy": "yes"
                  }
                }
              }
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
            },
            "headers": {
              "x-ms-correlation-id": {
                "description": "A unqiue, per-request Correlation-Id helpful in tracing runtime issues.  Echoes the input header if supplied, else randomly generated.",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreation": {
      "description": "Account Creation payload",
      "required": [
        "device",
        "metadata",
        "name",
        "version"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The event name. Should be 'AP.AccountCreation'",
          "type": "string"
        },
        "version": {
          "description": "The payload version. Should be \"0.5\"",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationMetadata"
        },
        "device": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationDeviceContext"
        },
        "user": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationUser"
        },
        "phone": {
          "description": "The list of user phone numbers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationPhone"
          }
        },
        "email": {
          "description": "The list of user emails.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationEmail"
          }
        },
        "ssoAuthenticationProvider": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationSSOAuthenticationProvider"
        },
        "address": {
          "description": "The list of user's addresses.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationAddress"
          }
        },
        "paymentInstruments": {
          "description": "The list of user's payment instruments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationPaymentInstruments"
          }
        },
        "marketingContext": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationMarketingContext"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationAddress": {
      "description": "N/A",
      "required": [
        "addressType"
      ],
      "type": "object",
      "properties": {
        "addressType": {
          "description": "Address Type. The values are:'Primary'|'Billing'|'Shipping'|'Alternative'. defaults to 'Primary'.",
          "enum": [
            "Primary",
            "Billing",
            "Shipping",
            "Alternative"
          ],
          "type": "string"
        },
        "firstName": {
          "description": "The user-provided first name associated with the address.",
          "type": "string"
        },
        "lastName": {
          "description": "The user-provided last name associated with the address.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The user-provided phone number associated with the address.",
          "type": "string"
        },
        "street1": {
          "description": "The first row that was provided for the address.",
          "type": "string"
        },
        "street2": {
          "description": "The second row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "street3": {
          "description": "The third row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "city": {
          "description": "The city that was provided for the address.",
          "type": "string"
        },
        "state": {
          "description": "The state or province that was provided for the address.",
          "type": "string"
        },
        "district": {
          "description": "The district that was provided for the address.",
          "type": "string"
        },
        "zipCode": {
          "description": "The postal code that was provided for the address.",
          "type": "string"
        },
        "countryRegion": {
          "description": "The Country/Region code that was provided for the address. The value should be a two-letter ISO CountryRegion code (for example, US).",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationDeviceContext": {
      "description": "N/A",
      "required": [
        "deviceContextId"
      ],
      "type": "object",
      "properties": {
        "deviceContextId": {
          "description": "The customer's device ID, as provided and mastered by DFP Device Fingerprinting Service.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The customer's IP address.",
          "type": "string"
        },
        "provider": {
          "description": "The provider of device info. Possible values are 'DFPFingerprinting'|'Merchant'|'Unknown'. If not specified, the default is 'DFPFingerprinting'.",
          "enum": [
            "DFPFingerprinting",
            "Merchant",
            "Unknown"
          ],
          "type": "string"
        },
        "externalDeviceId": {
          "description": "The customer's device ID, as provided and mastered by the merchant.",
          "type": "string"
        },
        "externalDeviceType": {
          "description": "The customer's device type, as provided and mastered by the merchant. Possible values are 'Mobile' , 'Computer' , 'MerchantHardware' , 'Tablet' , 'GameConsole'.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationEmail": {
      "description": "N/A",
      "required": [
        "emailType",
        "emailValue"
      ],
      "type": "object",
      "properties": {
        "emailType": {
          "description": "The values are:'Primary', 'Alternative'",
          "enum": [
            "Primary",
            "Alternative"
          ],
          "type": "string"
        },
        "emailValue": {
          "description": "The user's email address. This value is case-insensitive.",
          "type": "string"
        },
        "isEmailValidated": {
          "description": "A True/False value that indicates whether the user-provided email address has been verified as owned by the user.",
          "type": "boolean"
        },
        "emailValidatedDate": {
          "format": "date-time",
          "description": "The validation date of the user email. The format is ISO 8601.",
          "type": "string"
        },
        "isEmailUsername": {
          "description": "The email can be used as user name, defaults to False.",
          "type": "boolean"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationMarketingContext": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "campaignType": {
          "description": "The marketing campaign type. Possible values are 'Direct', 'Email' , 'Referral' , 'PaidSearch', 'OrganicSearch', 'Advertising', 'SocialNetwork' , 'General Marketing', 'Unknown',  'Other'.",
          "enum": [
            "Unknown",
            "Direct",
            "Email",
            "Referral",
            "PaidSearch",
            "OrganicSearch",
            "Advertising",
            "SocialNetwork",
            "GeneralMarketing",
            "Other"
          ],
          "type": "string"
        },
        "trafficSourceReferrer": {
          "description": "The source of this user if known.\r\nIf via existing user referral, provide the original MerchantUserId of the referrer.",
          "type": "string"
        },
        "trafficSourceReferralLink": {
          "format": "uri",
          "description": "The source of this user if known.\r\nIf via other campaign types instead of existing user referral, provide the source URL link.",
          "type": "string"
        },
        "trafficSourceReferralSite": {
          "description": "The source site of the traffic. Possible values are 'Facebook', 'Instagram', 'Twitter', 'Bing', 'Google', 'Pinterest', 'WhatsApp', etc.",
          "type": "string"
        },
        "incentiveType": {
          "description": "The incentive type for the new user. Possible values are 'None' , 'CashBack' , 'Discount' , 'FreeTrial' , 'BonusPoints' , 'Gift' , 'Unknown', 'Other'.",
          "enum": [
            "None",
            "Cashback",
            "Discount",
            "FreeTrial",
            "BonusPoints",
            "Gift",
            "Unknown",
            "Other"
          ],
          "type": "string"
        },
        "incentiveOffer": {
          "description": "The exact incentive offer name. Examples: $5 off on first order, free shipping, 5000 points.",
          "type": "string"
        },
        "campaignStartDate": {
          "format": "date-time",
          "description": "The date of the campaign starting on the incentive collection.",
          "type": "string"
        },
        "campaignEndDate": {
          "format": "date-time",
          "description": "The date of the campaign expiration on the incentive collection.",
          "type": "string"
        },
        "incentiveQuantitiyLimit": {
          "description": "The incentive quantity limit set by merchant. i.e., max on three 5000 points per user per day.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationMetadata": {
      "description": "N/A",
      "required": [
        "customerLocalDate",
        "merchantTimeStamp",
        "signUpId",
        "trackingId"
      ],
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "The identifier of the Account Creation event.",
          "type": "string"
        },
        "signUpId": {
          "description": "The identifier of the Account Creation event. Can match trackingId.",
          "type": "string"
        },
        "assessmentType": {
          "description": "Indicates the assessment type for the event. Possible values are 'Evaluate' | 'Protect'.\r\nIf not specified, the default is 'Protect'.",
          "enum": [
            "Evaluate",
            "Protect"
          ],
          "type": "string"
        },
        "customerLocalDate": {
          "format": "date-time",
          "description": "The creation date of the Account Creation event, in the customer's local time zone. The format is ISO 8601.",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationPaymentInstruments": {
      "description": "N/A",
      "required": [
        "merchantPaymentInstrumentId",
        "type"
      ],
      "type": "object",
      "properties": {
        "merchantPaymentInstrumentId": {
          "description": "The identifier of the payment instrument. This information is provided by the merchant.",
          "type": "string"
        },
        "type": {
          "description": "The type of payment. Possible values are: 'Other'|'CreditCard'|'DirectDebit'|'PayPal'|'MobileBilling'|'OnlineBankTransfer' |'Invoice' |'MerchantGiftCard'|'MerchantWallet'|'CashOnDelivery'|'Paytm'|'CCAvenue'.",
          "enum": [
            "Other",
            "CreditCard",
            "DirectDebit",
            "PayPal",
            "MobileBilling",
            "OnlineBankTransfer",
            "Invoice",
            "MerchantGiftCard",
            "MerchantWallet",
            "CashOnDelivery",
            "Paytm",
            "CCAvenue"
          ],
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "description": "The date of the first entry for the payment instrument in the merchant's system. The format is ISO 8601.",
          "type": "string"
        },
        "updateDate": {
          "format": "date-time",
          "description": "The date of the last update for the payment instrument in the merchant's system. Should not be older than creationDate. The format is ISO 8601.",
          "type": "string"
        },
        "state": {
          "description": "The current state of the PI in merchant's system. Possible values are: 'Active'|'Blocked'|'Expired'",
          "enum": [
            "Active",
            "Blocked",
            "Expired"
          ],
          "type": "string"
        },
        "cardType": {
          "description": "This attribute is used only for payments of the Credit/Debit Card type. Possible values are: 'Visa'|'Mastercard'|'Amex'|'ACH'|'SEPA'|'UnionPay'|'Inicis'|'MobileBillingCarrier'|'Discover'|'AllPay'|'JCB' |'DiscoverDiners'.",
          "enum": [
            "Visa",
            "Mastercard",
            "Amex",
            "ACH",
            "SEPA",
            "UnionPay",
            "Inicis",
            "MobileBillingCarrier",
            "Discover",
            "AllPay",
            "JCB",
            "DiscoverDiners"
          ],
          "type": "string"
        },
        "holderName": {
          "description": "The name of the payment instrument's user. This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "bin": {
          "description": "The Credit/Debit card bin. This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "expirationDate": {
          "description": "The expiration date for the payment instrument in the merchant's system. The format is ISO 8601. This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "lastFourDigits": {
          "description": "The last four digits of the Credit/Debit card. This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationAddress"
        },
        "email": {
          "description": "The email address associated with the payment instrument. This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "billingAgreementId": {
          "description": "This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "payerId": {
          "description": "This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "payerStatus": {
          "description": "A value that indicates whether PayPal has verified the payer. This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "addressStatus": {
          "description": "A value that indicates whether PayPal has verified the payer's address. This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "imei": {
          "description": "This attribute is used only for payments of the Mobilepayment type.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationPhone": {
      "description": "N/A",
      "required": [
        "phoneNumber",
        "phoneType"
      ],
      "type": "object",
      "properties": {
        "phoneType": {
          "description": "The values are: 'Primary'|'Alternative', default to 'Primary'.",
          "enum": [
            "Primary",
            "Alternative"
          ],
          "type": "string"
        },
        "phoneNumber": {
          "description": "The user's phone number. The format should be the country/region code followed by a hyphen (-) and then the phone number (for example, for the US, +1-1234567890).",
          "type": "string"
        },
        "isPhoneNumberValidated": {
          "description": "A True/False value that indicates whether the user-provided phone number has been verified as owned by the user.",
          "type": "boolean"
        },
        "phoneNumberValidatedDate": {
          "format": "date-time",
          "description": "The validation date of the user phone number. The format is ISO 8601.",
          "type": "string"
        },
        "isPhoneUsername": {
          "description": "The phone number can be used as user name, defaults to False.",
          "type": "boolean"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationSSOAuthenticationProvider": {
      "description": "N/A",
      "required": [
        "authenticationProvider",
        "displayName"
      ],
      "type": "object",
      "properties": {
        "authenticationProvider": {
          "description": "The user's single sign-on (SSO) authentication provider, if different from the merchant's. Possible valuse are 'MSA'|'Facebook'|'PSN'|'MerchantAuth'|'Google'.",
          "type": "string"
        },
        "displayName": {
          "description": "The user's single sign-on (SSO) authentication provider, if different from the merchant's. Possible valuse are 'MSA'|'Facebook'|'PSN'|'MerchantAuth'|'Google'.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationActivity.AccountCreationUser": {
      "description": "N/A",
      "required": [
        "username"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "description": "The user identifier. This information is provided by the merchant.",
          "type": "string"
        },
        "userType": {
          "description": "The user's profile type. Possible values are 'Consumer'|'Developer'|'Seller'|'Publisher'|'Tenant'.",
          "enum": [
            "Consumer",
            "Developer",
            "Seller",
            "Publisher",
            "Tenant"
          ],
          "type": "string"
        },
        "username": {
          "description": "The user-provided user name.",
          "type": "string"
        },
        "firstName": {
          "description": "The user-provided first name on the account.",
          "type": "string"
        },
        "lastName": {
          "description": "The user-provided last name on the account.",
          "type": "string"
        },
        "countryRegion": {
          "description": "The user's CountryRegion. The value should be a two-letter ISO CountryRegion code (for example, US).",
          "type": "string"
        },
        "zipCode": {
          "description": "The user's postal code.",
          "type": "string"
        },
        "timeZone": {
          "description": "The user's time zone.",
          "type": "string"
        },
        "language": {
          "description": "The user's language and territory (for example, EN-US).",
          "type": "string"
        },
        "membershipId": {
          "description": "The membership ID, if the user already has an existing membership with the merchant.",
          "type": "string"
        },
        "isMembershipIdUsername": {
          "description": "membershipId can be used as user name, defaults to False.",
          "type": "boolean"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationStatusActivity.AccountCreationStatus": {
      "description": "Account Creation Status payload",
      "required": [
        "metadata",
        "name",
        "statusDetails",
        "version"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The event name. Should be 'AP.AccountCreation.Status'",
          "type": "string"
        },
        "version": {
          "description": "The payload version. Should be \"0.5\"",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationStatusActivity.AccountCreationStatusMetadata"
        },
        "statusDetails": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationStatusActivity.AccountCreationStatusDetails"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationStatusActivity.AccountCreationStatusDetails": {
      "description": "N/A",
      "required": [
        "statusDate",
        "statusType"
      ],
      "type": "object",
      "properties": {
        "statusType": {
          "description": "The type of status: 'Approved'|'Rejected'|'Pending'.",
          "enum": [
            "Approved",
            "Rejected",
            "Pending"
          ],
          "type": "string"
        },
        "reasonType": {
          "description": "The type of reason: 'None'|'ChallengeAbandoned'|'ChallengeFailed'|'ChallengePassed'|'ChallengePending'|'ReviewFailed'|'ReviewPassed'|'ReviewPendinge'. Defaults to 'None'.",
          "enum": [
            "None",
            "ChallengeAbandoned",
            "ChallengeFailed",
            "ChallengePassed",
            "ChallengePending",
            "ReviewFailed",
            "ReviewPassed",
            "ReviewPending"
          ],
          "type": "string"
        },
        "challengeType": {
          "description": "The type of review status: 'SMS'|'Email'|'Phone'|'Other'|'None'. Defaults to 'None'.",
          "enum": [
            "None",
            "SMS",
            "Email",
            "Phone",
            "Captcha",
            "Other"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "date-time",
          "description": "The date and time when the status was applied. The format is ISO 8601.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountCreationStatusActivity.AccountCreationStatusMetadata": {
      "description": "N/A",
      "required": [
        "merchantTimeStamp",
        "signUpId",
        "trackingId",
        "userId"
      ],
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "The identifier of the Account Creation Status event.",
          "type": "string"
        },
        "signUpId": {
          "description": "The identifier of the Account Creation event.",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event.",
          "type": "string"
        },
        "userId": {
          "description": "The user identifier. This information is provided by the merchant.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLogin": {
      "description": "Account Login payload",
      "required": [
        "device",
        "metadata",
        "name",
        "version"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The event name. Should be 'AP.AccountLogin'",
          "type": "string"
        },
        "version": {
          "description": "The payload version. Should be \"0.5\"",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLoginMetadata"
        },
        "device": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLoginDeviceContext"
        },
        "user": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLoginUser"
        },
        "ssoAuthenticationProvider": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLoginSSOAuthenticationProvider"
        },
        "recentUpdate": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLoginRecentUpdate"
        },
        "marketingContext": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLoginMarketingContext"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLoginDeviceContext": {
      "description": "N/A",
      "required": [
        "deviceContextId"
      ],
      "type": "object",
      "properties": {
        "deviceContextId": {
          "description": "The customer's device ID, as provided and mastered by DFP Device Fingerprinting Service.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The customer's IP address.",
          "type": "string"
        },
        "provider": {
          "description": "The provider of device info. Possible values are 'DFPFingerprinting'|'Merchant'|'Unknown'. If not specified, the default is 'DFPFingerprinting'.",
          "enum": [
            "DFPFingerprinting",
            "Merchant",
            "Unknown"
          ],
          "type": "string"
        },
        "externalDeviceId": {
          "description": "The customer's device ID, as provided and mastered by the merchant.",
          "type": "string"
        },
        "externalDeviceType": {
          "description": "The customer's device type, as provided and mastered by the merchant. Possible values are 'Mobile' , 'Computer' , 'MerchantHardware' , 'Tablet' , 'GameConsole'.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLoginMarketingContext": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "campaignType": {
          "description": "The marketing campaign type. Possible values are 'Direct', 'Email' , 'Referral' , 'PaidSearch', 'OrganicSearch', 'Advertising', 'SocialNetwork' , 'General Marketing', 'Unknown',  'Other'.",
          "enum": [
            "Unknown",
            "Direct",
            "Email",
            "Referral",
            "PaidSearch",
            "OrganicSearch",
            "Advertising",
            "SocialNetwork",
            "GeneralMarketing",
            "Other"
          ],
          "type": "string"
        },
        "trafficSourceReferrer": {
          "description": "The source of this user if known.\r\nIf via existing user referral, provide the original MerchantUserId of the referrer.",
          "type": "string"
        },
        "trafficSourceReferralLink": {
          "format": "uri",
          "description": "The source of this user if known.\r\nIf via other campaign types instead of existing user referral, provide the source URL link.",
          "type": "string"
        },
        "trafficSourceReferralSite": {
          "description": "The source site of the traffic. Possible values are 'Facebook', 'Instagram', 'Twitter', 'Bing', 'Google', 'Pinterest', 'WhatsApp', etc.",
          "type": "string"
        },
        "incentiveType": {
          "description": "The incentive type for the new user. Possible values are 'None' , 'CashBack' , 'Discount' , 'FreeTrial' , 'BonusPoints' , 'Gift' , 'Unknown', 'Other'.",
          "enum": [
            "None",
            "Cashback",
            "Discount",
            "FreeTrial",
            "BonusPoints",
            "Gift",
            "Unknown",
            "Other"
          ],
          "type": "string"
        },
        "incentiveOffer": {
          "description": "The exact incentive offer name. Examples: $5 off on first order, free shipping, 5000 points.",
          "type": "string"
        },
        "campaignStartDate": {
          "format": "date-time",
          "description": "The date of the campaign starting on the incentive collection.",
          "type": "string"
        },
        "campaignEndDate": {
          "format": "date-time",
          "description": "The date of the campaign expiration on the incentive collection.",
          "type": "string"
        },
        "incentiveQuantitiyLimit": {
          "description": "The incentive quantity limit set by merchant. i.e., max on three 5000 points per user per day.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLoginMetadata": {
      "description": "N/A",
      "required": [
        "customerLocalDate",
        "loginId",
        "merchantTimeStamp",
        "trackingId"
      ],
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "The identifier of the Login event.",
          "type": "string"
        },
        "loginId": {
          "description": "The identifier of the Login event. Can match trackingId.",
          "type": "string"
        },
        "assessmentType": {
          "description": "Indicates the assessment type for the event. Possible values are 'Evaluate' | 'Protect'.\r\nIf not specified, the default is 'Protect'.",
          "enum": [
            "Protect",
            "Evaluate"
          ],
          "type": "string"
        },
        "customerLocalDate": {
          "format": "date-time",
          "description": "The login date of the Account Login event, in the customer's local time zone. The format is ISO 8601.",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLoginRecentUpdate": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "lastPhoneNumberUpdateDate": {
          "format": "date-time",
          "description": "Most recent update or create date/time of any phone number.",
          "type": "string"
        },
        "lastEmailUpdateDate": {
          "format": "date-time",
          "description": "Most recent update or create date/time of any email.",
          "type": "string"
        },
        "lastAddressUpdateDate": {
          "format": "date-time",
          "description": "Most recent update or create date/time of any address.",
          "type": "string"
        },
        "lastPaymentInstrumentUpdateDate": {
          "format": "date-time",
          "description": "Most recent update or create date/time of any PaymentInstrument.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLoginSSOAuthenticationProvider": {
      "description": "N/A",
      "required": [
        "authenticationProvider",
        "displayName"
      ],
      "type": "object",
      "properties": {
        "authenticationProvider": {
          "description": "The user's single sign-on (SSO) authentication provider, if different from the merchant's. Possible valuse are 'MSA'|'Facebook'|'PSN'|'MerchantAuth'|'Google'.",
          "type": "string"
        },
        "displayName": {
          "description": "The user's single sign-on (SSO) authentication provider, if different from the merchant's. Possible valuse are 'MSA'|'Facebook'|'PSN'|'MerchantAuth'|'Google'.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginActivity.AccountLoginUser": {
      "description": "N/A",
      "required": [
        "userId",
        "username"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "description": "The user identifier. This information is provided by the merchant.",
          "type": "string"
        },
        "userType": {
          "description": "The user's profile type. Possible values are 'Consumer'|'Developer'|'Seller'|'Publisher'|'Tenant'.",
          "enum": [
            "Consumer",
            "Developer",
            "Seller",
            "Publisher",
            "Tenant"
          ],
          "type": "string"
        },
        "username": {
          "description": "The user-provided user name.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginStatusActivity.AccountLoginStatus": {
      "description": "Account Login Status payload",
      "required": [
        "metadata",
        "name",
        "statusDetails",
        "version"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The event name. Should be 'AP.AccountLogin.Status'",
          "type": "string"
        },
        "version": {
          "description": "The payload version. Should be \"0.5\"",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginStatusActivity.AccountLoginStatusMetadata"
        },
        "statusDetails": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginStatusActivity.AccountLoginStatusDetails"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginStatusActivity.AccountLoginStatusDetails": {
      "description": "N/A",
      "required": [
        "statusDate",
        "statusType"
      ],
      "type": "object",
      "properties": {
        "statusType": {
          "description": "The type of status: 'Approved'|'Rejected'|'Pending'.",
          "enum": [
            "Approved",
            "Rejected",
            "Pending"
          ],
          "type": "string"
        },
        "reasonType": {
          "description": "The type of reason: 'None'|'ChallengeAbandoned'|'ChallengeFailed'|'ChallengePassed'|'ChallengePending'|'ReviewFailed'|'ReviewPassed'|'ReviewPendinge'. Defaults to 'None'.",
          "enum": [
            "None",
            "ChallengeAbandoned",
            "ChallengeFailed",
            "ChallengePassed",
            "ChallengePending",
            "ReviewFailed",
            "ReviewPassed",
            "ReviewPending"
          ],
          "type": "string"
        },
        "challengeType": {
          "description": "The type of review status: 'SMS'|'Email'|'Phone'|'Other'|'None'. Defaults to 'None'.",
          "enum": [
            "None",
            "SMS",
            "Email",
            "Phone",
            "Captcha",
            "Other"
          ],
          "type": "string"
        },
        "statusDate": {
          "format": "date-time",
          "description": "The date and time when the status was applied. The format is ISO 8601.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountLoginStatusActivity.AccountLoginStatusMetadata": {
      "description": "N/A",
      "required": [
        "loginId",
        "merchantTimeStamp",
        "trackingId",
        "userId"
      ],
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "The identifier of the Account Login Status event.",
          "type": "string"
        },
        "loginId": {
          "description": "The identifier of the Account Login event.",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event.",
          "type": "string"
        },
        "userId": {
          "description": "The user identifier. This information is provided by the merchant.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdate": {
      "description": "Account Update payload",
      "required": [
        "device",
        "metadata",
        "name",
        "version"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The event name. Should be 'AP.AccountUpdate'",
          "type": "string"
        },
        "version": {
          "description": "The payload version. Should be \"0.5\"",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateMetadata"
        },
        "device": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateDeviceContext"
        },
        "user": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateUser"
        },
        "phone": {
          "description": "The list of user phone numbers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdatePhone"
          }
        },
        "email": {
          "description": "The list of user emails.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateEmail"
          }
        },
        "ssoAuthenticationProvider": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateSSOAuthenticationProvider"
        },
        "address": {
          "description": "The list of user's addresses.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateAddress"
          }
        },
        "paymentInstruments": {
          "description": "The list of user's payment instruments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdatePaymentInstruments"
          }
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateAddress": {
      "description": "N/A",
      "required": [
        "addressType"
      ],
      "type": "object",
      "properties": {
        "addressType": {
          "description": "Address Type. The values are:'Primary'|'Billing'|'Shipping'|'Alternative'. defaults to 'Primary'.",
          "enum": [
            "Primary",
            "Billing",
            "Shipping",
            "Alternative"
          ],
          "type": "string"
        },
        "firstName": {
          "description": "The user-provided first name associated with the address.",
          "type": "string"
        },
        "lastName": {
          "description": "The user-provided last name associated with the address.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The user-provided phone number associated with the address.",
          "type": "string"
        },
        "street1": {
          "description": "The first row that was provided for the address.",
          "type": "string"
        },
        "street2": {
          "description": "The second row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "street3": {
          "description": "The third row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "city": {
          "description": "The city that was provided for the address.",
          "type": "string"
        },
        "state": {
          "description": "The state or province that was provided for the address.",
          "type": "string"
        },
        "district": {
          "description": "The district that was provided for the address.",
          "type": "string"
        },
        "zipCode": {
          "description": "The postal code that was provided for the address.",
          "type": "string"
        },
        "countryRegion": {
          "description": "The Country/Region code that was provided for the address. The value should be a two-letter ISO CountryRegion code (for example, US).",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateDeviceContext": {
      "description": "N/A",
      "required": [
        "deviceContextId"
      ],
      "type": "object",
      "properties": {
        "deviceContextId": {
          "description": "The customer's device ID, as provided and mastered by DFP Device Fingerprinting Service.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The customer's IP address.",
          "type": "string"
        },
        "provider": {
          "description": "The provider of device info. Possible values are 'DFPFingerprinting'|'Merchant'|'Unknown'. If not specified, the default is 'DFPFingerprinting'.",
          "enum": [
            "DFPFingerprinting",
            "Merchant",
            "Unknown"
          ],
          "type": "string"
        },
        "externalDeviceId": {
          "description": "The customer's device ID, as provided and mastered by the merchant.",
          "type": "string"
        },
        "externalDeviceType": {
          "description": "The customer's device type, as provided and mastered by the merchant. Possible values are 'Mobile' , 'Computer' , 'MerchantHardware' , 'Tablet' , 'GameConsole'.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateEmail": {
      "description": "N/A",
      "required": [
        "emailType",
        "emailValue"
      ],
      "type": "object",
      "properties": {
        "emailType": {
          "description": "The values are:'Primary', 'Alternative'",
          "enum": [
            "Primary",
            "Alternative"
          ],
          "type": "string"
        },
        "emailValue": {
          "description": "The user's email address. This value is case-insensitive.",
          "type": "string"
        },
        "isEmailValidated": {
          "description": "A True/False value that indicates whether the user-provided email address has been verified as owned by the user.",
          "type": "boolean"
        },
        "emailValidatedDate": {
          "format": "date-time",
          "description": "The validation date of the user email. The format is ISO 8601.",
          "type": "string"
        },
        "isEmailUsername": {
          "description": "The email can be used as user name, defaults to False.",
          "type": "boolean"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateMetadata": {
      "description": "N/A",
      "required": [
        "accountUpdateId",
        "customerLocalDate",
        "merchantTimeStamp",
        "trackingId"
      ],
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "The identifier of the Account Update event.",
          "type": "string"
        },
        "accountUpdateId": {
          "description": "The identifier of the Account Update event. Can match trackingId.",
          "type": "string"
        },
        "assessmentType": {
          "description": "Indicates the assessment type for the event. Possible values are 'Evaluate' | 'Protect'.\r\nIf not specified, the default is 'Protect'.",
          "type": "string"
        },
        "customerLocalDate": {
          "format": "date-time",
          "description": "The creation date of the Account Update event, in the customer's local time zone. The format is ISO 8601.",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdatePaymentInstruments": {
      "description": "N/A",
      "required": [
        "merchantPaymentInstrumentId",
        "type"
      ],
      "type": "object",
      "properties": {
        "merchantPaymentInstrumentId": {
          "description": "The identifier of the payment instrument. This information is provided by the merchant.",
          "type": "string"
        },
        "type": {
          "description": "The type of payment. Possible values are: 'Other'|'CreditCard'|'DirectDebit'|'PayPal'|'MobileBilling'|'OnlineBankTransfer' |'Invoice' |'MerchantGiftCard'|'MerchantWallet'|'CashOnDelivery'|'Paytm'|'CCAvenue'.",
          "enum": [
            "Other",
            "CreditCard",
            "DirectDebit",
            "PayPal",
            "MobileBilling",
            "OnlineBankTransfer",
            "Invoice",
            "MerchantGiftCard",
            "MerchantWallet",
            "CashOnDelivery",
            "Paytm",
            "CCAvenue"
          ],
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "description": "The date of the first entry for the payment instrument in the merchant's system. The format is ISO 8601.",
          "type": "string"
        },
        "updateDate": {
          "format": "date-time",
          "description": "The date of the last update for the payment instrument in the merchant's system. Should not be older than creationDate. The format is ISO 8601.",
          "type": "string"
        },
        "state": {
          "description": "The current state of the PI in merchant's system. Possible values are: 'Active'|'Blocked'|'Expired'",
          "enum": [
            "Active",
            "Blocked",
            "Expired"
          ],
          "type": "string"
        },
        "cardType": {
          "description": "This attribute is used only for payments of the Credit/Debit Card type. Possible values are: 'Visa'|'Mastercard'|'Amex'|'ACH'|'SEPA'|'UnionPay'|'Inicis'|'MobileBillingCarrier'|'Discover'|'AllPay'|'JCB' |'DiscoverDiners'.",
          "enum": [
            "Visa",
            "Mastercard",
            "Amex",
            "ACH",
            "SEPA",
            "UnionPay",
            "Inicis",
            "MobileBillingCarrier",
            "Discover",
            "AllPay",
            "JCB",
            "DiscoverDiners"
          ],
          "type": "string"
        },
        "holderName": {
          "description": "The name of the payment instrument's user. This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "bin": {
          "description": "The Credit/Debit card bin. This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "expirationDate": {
          "description": "The expiration date for the payment instrument in the merchant's system. The format is ISO 8601. This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "lastFourDigits": {
          "description": "The last four digits of the Credit/Debit card. This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateAddress"
        },
        "email": {
          "description": "The email address associated with the payment instrument. This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "billingAgreementId": {
          "description": "This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "payerId": {
          "description": "This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "payerStatus": {
          "description": "A value that indicates whether PayPal has verified the payer. This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "addressStatus": {
          "description": "A value that indicates whether PayPal has verified the payer's address. This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "imei": {
          "description": "This attribute is used only for payments of the Mobilepayment type.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdatePhone": {
      "description": "N/A",
      "required": [
        "phoneNumber",
        "phoneType"
      ],
      "type": "object",
      "properties": {
        "phoneType": {
          "description": "The values are: 'Primary'|'Alternative', default to 'Primary'.",
          "enum": [
            "Primary",
            "Alternative"
          ],
          "type": "string"
        },
        "phoneNumber": {
          "description": "The user's phone number. The format should be the country/region code followed by a hyphen (-) and then the phone number (for example, for the US, +1-1234567890).",
          "type": "string"
        },
        "isPhoneNumberValidated": {
          "description": "A True/False value that indicates whether the user-provided phone number has been verified as owned by the user.",
          "type": "boolean"
        },
        "phoneNumberValidatedDate": {
          "format": "date-time",
          "description": "The validation date of the user phone number. The format is ISO 8601.",
          "type": "string"
        },
        "isPhoneUsername": {
          "description": "The phone number can be used as user name, defaults to False.",
          "type": "boolean"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateSSOAuthenticationProvider": {
      "description": "N/A",
      "required": [
        "authenticationProvider",
        "displayName"
      ],
      "type": "object",
      "properties": {
        "authenticationProvider": {
          "description": "The user's single sign-on (SSO) authentication provider, if different from the merchant's. Possible valuse are 'MSA'|'Facebook'|'PSN'|'MerchantAuth'|'Google'.",
          "type": "string"
        },
        "displayName": {
          "description": "The user's single sign-on (SSO) authentication provider, if different from the merchant's. Possible valuse are 'MSA'|'Facebook'|'PSN'|'MerchantAuth'|'Google'.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.AccountUpdateActivity.AccountUpdateUser": {
      "description": "N/A",
      "required": [
        "username"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "description": "The user identifier. This information is provided by the merchant.",
          "type": "string"
        },
        "userType": {
          "description": "The user's profile type. Possible values are 'Consumer'|'Developer'|'Seller'|'Publisher'|'Tenant'.",
          "enum": [
            "Consumer",
            "Developer",
            "Seller",
            "Publisher",
            "Tenant"
          ],
          "type": "string"
        },
        "username": {
          "description": "The user-provided user name.",
          "type": "string"
        },
        "firstName": {
          "description": "The user-provided first name on the account.",
          "type": "string"
        },
        "lastName": {
          "description": "The user-provided last name on the account.",
          "type": "string"
        },
        "countryRegion": {
          "description": "The user's CountryRegion. The value should be a two-letter ISO CountryRegion code (for example, US).",
          "type": "string"
        },
        "zipCode": {
          "description": "The user's postal code.",
          "type": "string"
        },
        "timeZone": {
          "description": "The user's time zone.",
          "type": "string"
        },
        "language": {
          "description": "The user's language and territory (for example, EN-US).",
          "type": "string"
        },
        "membershipId": {
          "description": "The membership ID, if the user already has an existing membership with the merchant.",
          "type": "string"
        },
        "isMembershipIdUsername": {
          "description": "membershipId can be used as user name, defaults to False.",
          "type": "boolean"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.LabelActivity.Label": {
      "description": "Label payload",
      "required": [
        "label",
        "metadata",
        "name",
        "version"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The event name. Should be 'AP.Label'",
          "type": "string"
        },
        "version": {
          "description": "The payload version. Should be \"0.5\"",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.LabelActivity.LabelMetadata"
        },
        "label": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.LabelActivity.LabelDetails"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.LabelActivity.LabelDetails": {
      "description": "N/A",
      "required": [
        "eventTimeStamp",
        "labelObjectId",
        "labelObjectType",
        "labelState"
      ],
      "type": "object",
      "properties": {
        "eventTimeStamp": {
          "format": "date-time",
          "description": "The date and time of the event. Possible values: Chargeback Date or Review Date. The format is ISO 8601.",
          "type": "string"
        },
        "labelObjectType": {
          "description": "This field indicates the type of label: 'Purchase'|'AccountCreation'|'AccountLogin'|'AccountUpdate'|'CustomFraudEvaluation'|'Account'|'PaymentInstrument'|'Email'.",
          "enum": [
            "Purchase",
            "AccountCreation",
            "AccountLogin",
            "AccountUpdate",
            "CustomFraudEvaluation",
            "Account",
            "PaymentInstrument",
            "Email"
          ],
          "type": "string"
        },
        "labelObjectId": {
          "description": "This is an identifier field for the object: PurchaseId, AccountCreationId, AccountLoginId, AccountUpdateId, UserId, MerchantPaymentInstrumentId, or Email.",
          "type": "string"
        },
        "labelSource": {
          "description": "This field represents the source of the label: 'CustomerEscalation'|'Chargeback'|'TC40_SAFE'|'ManualReview'|'Refund'|'OfflineAnalysis'|'AccountProtectionReview'.",
          "enum": [
            "CustomerEscalation",
            "Chargeback",
            "TC40_SAFE",
            "ManualReview",
            "Refund",
            "OfflineAnalysis",
            "AccountProtectionReview"
          ],
          "type": "string"
        },
        "labelState": {
          "description": "This field indicates the current status of the label: 'InquiryAccepted'|'Fraud'|'Disputed'|'Reversed'|'Abuse'|'ResubmittedRequest'|'AccountCompromised'|'AccountNotCompromised'.",
          "enum": [
            "InquiryAccepted",
            "Fraud",
            "Disputed",
            "Reversed",
            "Abuse",
            "ResubmittedRequest",
            "AccountCompromised",
            "AccountNotCompromised"
          ],
          "type": "string"
        },
        "labelReasonCode": {
          "description": "This field indicates the reason codes associated with each type of label: 'ProcessorResponseCode'|'BankResponseCode'|'FraudRefund'|'AccountTakeOver'|'PaymentInstrumentFraud'|'AccountFraud'|'Abuse'|'FriendlyFraud'|'AccountCredentialsLeaked'|'PassedAccountProtectionChecks'",
          "enum": [
            "ProcessorResponseCode",
            "BankResponseCode",
            "FraudRefund",
            "AccountTakeOver",
            "PaymentInstrumentFraud",
            "AccountFraud",
            "Abuse",
            "FriendlyFraud",
            "AccountCredentialsLeaked",
            "PassedAccountProtectionChecks"
          ],
          "type": "string"
        },
        "processor": {
          "description": "The name of the bank or payment processor that is generating the TC40 or SAFE information.",
          "type": "string"
        },
        "effectiveStartDate": {
          "format": "date-time",
          "description": "The date from which this label is effective. The format is ISO 8601.",
          "type": "string"
        },
        "effectiveEndDate": {
          "format": "date-time",
          "description": "The end date for this label. The format is ISO 8601. Must not be older than effectiveStartDate.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.LabelActivity.LabelMetadata": {
      "description": "N/A",
      "required": [
        "merchantTimeStamp",
        "trackingId",
        "userId"
      ],
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "The unique ID for each event/record.",
          "type": "string"
        },
        "userId": {
          "description": "The user identifier. This information is provided by the merchant.",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountCreateEnrichment": {
      "description": "A class represent the enrichment features for Account Create assessment",
      "type": "object",
      "properties": {
        "deviceAttributes": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.DeviceAttributes"
        },
        "calculatedFeatures": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.CalculatedFeatures"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountCreateResponseSuccessDetails": {
      "description": "Response Object for Dynamics Fraud Protection AccountCreate API",
      "type": "object",
      "properties": {
        "name": {
          "description": "N/A",
          "type": "string"
        },
        "version": {
          "description": "N/A",
          "type": "string"
        },
        "code": {
          "description": "N/A",
          "type": "string"
        },
        "description": {
          "description": "N/A",
          "type": "string"
        },
        "resultDetails": {
          "description": "AssessmentResultDetail collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.ResultDetail"
          }
        },
        "transactionReferenceId": {
          "description": "Unique id to identify individual transactions",
          "type": "string",
          "readOnly": true
        },
        "enrichment": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountCreateEnrichment"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionEnrichment": {
      "description": "A class representing the enrichment features",
      "type": "object",
      "properties": {
        "deviceAttributes": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.DeviceAttributes"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError": {
      "description": "Account Protection Error Response Object",
      "type": "object",
      "properties": {
        "name": {
          "description": "N/A",
          "type": "string"
        },
        "version": {
          "description": "N/A",
          "type": "string"
        },
        "code": {
          "description": "N/A",
          "type": "string"
        },
        "description": {
          "description": "N/A",
          "type": "string"
        },
        "isRetryable": {
          "description": "N/A",
          "type": "boolean"
        },
        "message": {
          "description": "N/A",
          "type": "string"
        },
        "otherErrors": {
          "description": "N/A",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionResponseError"
          }
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.CalculatedFeatures": {
      "description": "A class representing the features calculated during assessment",
      "type": "object",
      "properties": {
        "emailDomain": {
          "description": "Domain of email parsed from assessment payload",
          "type": "string"
        },
        "emailPattern": {
          "description": "Pattern of email handle calculated from the email. All upper case letters in the email prefix are replaced with 'U', lower case letters replaced with 'I', digits replaced with 'd'. \r\nRepeated 'I' and 'U's are collapsed, and the remaining characters are left unchanged. For example, the email 'kAyla.277@contoso.com' would return the email pattern 'lUl.ddd'",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.DeviceAttributes": {
      "description": "A class representing the features derived from the user's device attributes.",
      "type": "object",
      "properties": {
        "trueIp": {
          "description": "True IP address of device identified by device fingerprinting",
          "type": "string"
        },
        "proxyIp": {
          "description": "Proxy IP address of device proxy identified by device fingerprinting",
          "type": "string"
        },
        "realtimeTimezoneOffset": {
          "description": "Timezone offset that takes daylight saving schedule into consideration",
          "type": "string"
        },
        "sld": {
          "description": "Second Level Domain related to true IP",
          "type": "string"
        },
        "timeZone": {
          "description": "TimeZone offset with respect to Greenwich Mean Time",
          "type": "string"
        },
        "proxyLastDetected": {
          "description": "The most recent date when the device IP is identified to be active proxy",
          "type": "string"
        },
        "deviceId": {
          "description": "Unique deviceid generated by device fingerprinting",
          "type": "string"
        },
        "deviceCountryCode": {
          "description": "Device location country of true IP",
          "type": "string"
        },
        "deviceState": {
          "description": "Device location state of true IP",
          "type": "string"
        },
        "deviceCity": {
          "description": "Device location city of true IP",
          "type": "string"
        },
        "devicePostalCode": {
          "description": "Device location postal code of true IP",
          "type": "string"
        },
        "deviceAsn": {
          "description": "ASN of device identified by device fingerprinting",
          "type": "string"
        },
        "platform": {
          "description": "Operating system platform of device",
          "type": "string"
        },
        "browserUserAgentLanguages": {
          "description": "Languages stored in the user agent",
          "type": "string"
        },
        "browserUserAgent": {
          "description": "Browser used in the session",
          "type": "string"
        },
        "tcpDistance": {
          "description": "Number of network hops in connection",
          "type": "string"
        },
        "carrier": {
          "description": "ISP of the identified true IP",
          "type": "string"
        },
        "ipRoutingType": {
          "description": "Routing type of IP",
          "type": "string"
        },
        "proxy": {
          "description": "Flag that determines if the caller is a proxy",
          "type": "string"
        },
        "proxyType": {
          "description": "Type of the proxy if detected",
          "type": "string"
        },
        "userAgentPlatform": {
          "description": "Browser version",
          "type": "string"
        },
        "userAgentBrowser": {
          "description": "Browser family",
          "type": "string"
        },
        "userAgentOperatingSystem": {
          "description": "Operating system version",
          "type": "string"
        },
        "sdkType": {
          "description": "The SDK used by the device to make the call (Android, iOS, or Web)",
          "type": "string"
        },
        "dataNetworkType": {
          "description": "The type of network used (Wifi or Mobile). For Android and iOS devices.",
          "type": "string"
        },
        "localIpv4": {
          "description": "The device's local IPV4 address. For Android and iOS devices.",
          "type": "string"
        },
        "isDeviceEmulator": {
          "description": "Indicates whether the device is emulated. For Android and iOS devices.",
          "type": "string"
        },
        "isDeviceRooted": {
          "description": "Indicates whether the device has been rooted. For Android and iOS devices.",
          "type": "string"
        },
        "isWifiEnabled": {
          "description": "Indicates whether the device's wifi is enabled or disabled. For Android devices.",
          "type": "string"
        },
        "deviceSystemVersion": {
          "description": "The current version of the operating system. For iOS devices.",
          "type": "string"
        },
        "deviceModelName": {
          "description": "The device model name. For iOS devices.",
          "type": "string"
        },
        "localIpv6": {
          "description": "The device's local IPV6 address. For iOS devices.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.ResponseSuccess": {
      "description": "Dynamics Fraud Protection Success Object",
      "type": "object",
      "properties": {
        "name": {
          "description": "N/A",
          "type": "string"
        },
        "version": {
          "description": "N/A",
          "type": "string"
        },
        "code": {
          "description": "N/A",
          "type": "string"
        },
        "description": {
          "description": "N/A",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.ResponseSuccessDetails": {
      "description": "Response Object for Dynamics Fraud Protection APIs",
      "type": "object",
      "properties": {
        "name": {
          "description": "N/A",
          "type": "string"
        },
        "version": {
          "description": "N/A",
          "type": "string"
        },
        "code": {
          "description": "N/A",
          "type": "string"
        },
        "description": {
          "description": "N/A",
          "type": "string"
        },
        "resultDetails": {
          "description": "AssessmentResultDetail collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.ResultDetail"
          }
        },
        "transactionReferenceId": {
          "description": "Unique id to identify individual transactions",
          "type": "string",
          "readOnly": true
        },
        "enrichment": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.AccountProtectionEnrichment"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.ResultDetail": {
      "description": "AssessmentResultDetail",
      "type": "object",
      "properties": {
        "decision": {
          "description": "The type of the decision made",
          "enum": [
            "Approve",
            "Reject",
            "Challenge",
            "Review"
          ],
          "type": "string"
        },
        "challengeType": {
          "description": "The type of challenge",
          "type": "string"
        },
        "reasons": {
          "description": "A list of reasons",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rule": {
          "description": "The rule that the payload matched",
          "type": "string"
        },
        "clauseName": {
          "description": "The rule-clause friendly-name that made the decision",
          "type": "string"
        },
        "supportMessages": {
          "description": "List of messages that support the decision",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "other": {
          "description": "any additional data",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "scores": {
          "description": "List of different scores",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.Score"
          }
        },
        "ruleEvaluations": {
          "description": "The path of rulesets consulted to arrive at this decision",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.RuleEvaluation"
          }
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.RuleEvaluation": {
      "description": "A record of ruleset execution on the way to a",
      "type": "object",
      "properties": {
        "rule": {
          "description": "The ruleset's friendly name",
          "type": "string"
        },
        "clauseNames": {
          "description": "The clause(s) this rule fired, in order, with the last being the final deicion reached",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.AccountProtection.Response.Score": {
      "description": "Score object",
      "type": "object",
      "properties": {
        "scoreType": {
          "description": "The score type",
          "enum": [
            "Bot",
            "Risk"
          ],
          "type": "string"
        },
        "scoreValue": {
          "format": "double",
          "description": "the score value. Max value is 999",
          "type": "number"
        },
        "reason": {
          "description": "The reason for the score value",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.ApiResponse.AuthErrorResponse": {
      "description": "Used for swagger docs only. Response object for an activity request that is unauthorized",
      "type": "object",
      "properties": {
        "statusCode": {
          "format": "int32",
          "description": "Status code for this error response",
          "type": "integer"
        },
        "message": {
          "description": "Message explaining the error response",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse": {
      "type": "object",
      "properties": {
        "errorType": {
          "description": "Gets or sets the error type",
          "type": "string"
        },
        "message": {
          "description": "Gets or sets the non-localized message of an error",
          "type": "string"
        },
        "retryable": {
          "description": "Gets or sets a value indicating whether the non-localized message of an error",
          "type": "boolean"
        },
        "otherErrors": {
          "description": "Gets or sets a list of additional error objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.ApiResponse.ErrorResponse"
          }
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.V1.Assessment.AssessmentActivity.AssessmentExampleType": {
      "description": "The AssessmentUser object can have custom properties.",
      "type": "object",
      "properties": {
        "amount": {
          "format": "int32",
          "description": "Example field.",
          "type": "integer"
        },
        "available": {
          "format": "int32",
          "description": "Example field.",
          "type": "integer"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.V1.Assessment.AssessmentActivity.AssessmentMetadata": {
      "description": "N/A",
      "required": [
        "merchantTimeStamp",
        "trackingId"
      ],
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "The identifier of the Account Creation event.",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.V1.Assessment.AssessmentActivity.AssessmentUser": {
      "description": "The AssessmentUser object can have custom properties.",
      "type": "object",
      "properties": {
        "userId": {
          "description": "The user identifier. This information is provided by the merchant.",
          "type": "string"
        },
        "countryRegion": {
          "description": "The user's CountryRegion. The value should be a two-letter ISO CountryRegion code (for example, US).",
          "type": "string"
        },
        "zipCode": {
          "description": "The user's postal code.",
          "type": "string"
        },
        "timeZone": {
          "description": "The user's time zone.",
          "type": "string"
        },
        "language": {
          "description": "The user's language and territory (for example, EN-US).",
          "type": "string"
        },
        "sampleString": {
          "description": "This is an example of how the User type can be extended.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.Models.V1.Assessment.AssessmentActivity.AssessmentWrapper": {
      "required": [
        "name",
        "version"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The assessment event name. The name should match the API name during assessment creation and the `{assessment-API-name} of the URL.",
          "type": "string"
        },
        "version": {
          "description": "The payload version. Should be \"1.0\"",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.V1.Assessment.AssessmentActivity.AssessmentMetadata"
        },
        "user": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.V1.Assessment.AssessmentActivity.AssessmentUser"
        },
        "isEmployee": {
          "description": "Example on primitive type.",
          "type": "boolean"
        },
        "pointRedemption": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.Models.V1.Assessment.AssessmentActivity.AssessmentExampleType"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.BankEventActivity.BankEvent": {
      "type": "object"
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.BankEventActivity.BankEventResponseWrapper": {
      "description": "Result details",
      "type": "object",
      "properties": {
        "resultDetails": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.BankEventActivity.BankEvent"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.ChargebackActivity.Chargeback": {
      "type": "object"
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.ChargebackActivity.ChargebackResponseWrapper": {
      "description": "Result details",
      "type": "object",
      "properties": {
        "resultDetails": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.ChargebackActivity.Chargeback"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.LabelActivity.Label": {
      "type": "object"
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.LabelActivity.LabelResponseWrapper": {
      "description": "Result details",
      "type": "object",
      "properties": {
        "resultDetails": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.LabelActivity.Label"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.PurchaseActivity.PurchaseResponseWrapper": {
      "description": "Result details",
      "type": "object",
      "properties": {
        "resultDetails": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.PurchaseActivity.PurchaseWrapper"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.PurchaseActivity.PurchaseWrapper": {
      "description": "Purchase response payload",
      "required": [
        "purchaseId"
      ],
      "type": "object",
      "properties": {
        "riskScore": {
          "format": "int32",
          "description": "Risk score calculated by Fraud Protection risk models in the range from -1 to 1000.  -1 indicates an error determining a risk score.",
          "type": "integer"
        },
        "merchantRuleDecision": {
          "description": "Decision made by the Merchant Rules after getting Risk Score for a transaction. Possible values 'Approve' | 'Reject'",
          "type": "string"
        },
        "ruleEvaluations": {
          "description": "Contains the name of the rules evaluated to come to a decision.",
          "type": "array",
          "items": {}
        },
        "clauseName": {
          "description": "Contains the name of the clause that gave the decision.",
          "type": "string"
        },
        "midFlag": {
          "description": "Recommended Merchant ID (MID) flag. Possible values 'Program' | 'Standard' | 'Control'",
          "type": "string"
        },
        "reasonCodes": {
          "description": "Reason codes explaining the decision.",
          "type": "string"
        },
        "policyApplied": {
          "description": "The name of the merchant rule or default rule that lead to the merchant rule decision.",
          "type": "string"
        },
        "bankName": {
          "description": "Bank (issuer) which DFP called for this transaction.",
          "type": "string"
        },
        "hashedEvaluationId": {
          "description": "HashedEvaluationId as computed by DFP",
          "type": "string"
        },
        "diagnostics": {
          "description": "Diagnostic objects keyed by namespace",
          "type": "object",
          "additionalProperties": {}
        },
        "purchaseId": {
          "description": "Transaction (or purchase/order) identifier in merchant system.",
          "type": "string"
        },
        "deviceAttributes": {
          "description": "Device attributes from DFP Fingerprinting",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "succeeded": {
          "description": "Is request successful",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.PurchaseStatusActivity.PurchaseStatus": {
      "type": "object"
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.PurchaseStatusActivity.PurchaseStatusResponseWrapper": {
      "description": "Result details",
      "type": "object",
      "properties": {
        "resultDetails": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.PurchaseStatusActivity.PurchaseStatus"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.RefundActivity.Refund": {
      "type": "object"
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.RefundActivity.RefundResponseWrapper": {
      "description": "Result details",
      "type": "object",
      "properties": {
        "resultDetails": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.RefundActivity.Refund"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.UpdateAccountActivity.UpdateAccount": {
      "description": "UpdateAccount response payload",
      "type": "object",
      "properties": {
        "deviceAttributes": {
          "description": "Device attributes from DFP Fingerprinting",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "succeeded": {
          "description": "Is request successful",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.UpdateAccountActivity.UpdateAccountResponseWrapper": {
      "description": "Result details",
      "type": "object",
      "properties": {
        "resultDetails": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.MerchantResponse.Models.UpdateAccountActivity.UpdateAccount"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.BankEventActivity.BankEvent": {
      "description": "Bank event payload",
      "required": [
        "_metadata",
        "bankEventId",
        "purchaseId",
        "type"
      ],
      "type": "object",
      "properties": {
        "bankEventId": {
          "description": "A unique string identifying this Bank Event",
          "type": "string"
        },
        "type": {
          "description": "Bank Event Type. Possible values 'Auth' | 'AuthCancel' | 'ChargeReversal' | 'Charge'",
          "type": "string"
        },
        "bankEventTimestamp": {
          "format": "date-time",
          "description": "Timestamp from Bank",
          "type": "string"
        },
        "status": {
          "description": "Possible values 'Approved' | 'Unknown' | 'Declined'",
          "type": "string"
        },
        "bankResponseCode": {
          "description": "Bank code on response",
          "type": "string"
        },
        "paymentProcessor": {
          "description": "Processor name. Possible values 'FDC' | 'Adyen' | 'TSYS' | 'WorldPay' | 'Chase' | 'Stripe' | 'PayPal'",
          "type": "string"
        },
        "mrn": {
          "description": "Merchant Reference Number, used to identify the transaction from the merchant side",
          "type": "string"
        },
        "mid": {
          "description": "Merchant ID (MID) sent to the bank and/or received back from it.",
          "type": "string"
        },
        "merchantPaymentInstrumentId": {
          "description": "The identifier of the payment instrument. This information is provided by the merchant.",
          "type": "string"
        },
        "paymentMethod": {
          "description": "Groupings/categories of payment methods. Possible values are CARD, CASH, DIRECTDEBIT, E-WALLET, MOBILE, E-BANKING, INVOICE, VOUCHERS",
          "type": "string"
        },
        "cardType": {
          "description": "The type of payment. Possible values are VISA , MASTERCARD , AMEX , ACH , SEPA , UNIONPAY , INICIS , MOBILEBILLINGCARRIER , DISCOVER , ALLPAY , JCB , DISCOVERDINERS",
          "type": "string"
        },
        "updatedPI": {
          "description": "Used different PI than the one in Purchase",
          "type": "boolean"
        },
        "cvvVerify": {
          "description": "Indicates whether CVV verification is available and/or sucessfully verified. Y = Successfully verified, N = Did not successfully vefified, U = Unavailable, A = Available, but no verification",
          "type": "string"
        },
        "avsVerify": {
          "description": "Indicates whether addres verification is available and/or sucessfully verified. Y = Successfully verified, N = Did not successfully vefified, U = Unavailable, A = Available, but no verification",
          "type": "string"
        },
        "cavVerify": {
          "description": "Indicates whether cardholder authentication verification is available and/or sucessfully verified. Y = Successfully verified, N = Did not successfully vefified, U = Unavailable, A = Available, but no verification",
          "type": "string"
        },
        "authResultCode": {
          "description": "Bank response from the authorization decision. Possible values are APPROVE, DECLINE, PENDING",
          "type": "string"
        },
        "authResultText": {
          "description": "Reasons for the authorization decision; especially for declined or pending transactions. Possible values are MISMATCH_CVV, MISMATCH_ADDRESS, MISMATCH_EXPIRATIONDATE, NOACCOUNT, INVALIDPIN, LOWFUND, OVERLIMIT SUSPICIOUSACCOUNT",
          "type": "string"
        },
        "purchaseId": {
          "description": "A unique string identifying the purchase",
          "type": "string"
        },
        "threeDS": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.BankEventActivity.BankEventPurchase3DS"
        },
        "_metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.BankEventActivity.MetadataWrapper"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.BankEventActivity.BankEventPurchase3DS": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "isThreeDSAuth": {
          "description": "A True/False value that indicates whether this transaction is authenticated via 3DS.",
          "type": "boolean"
        },
        "messageCategory": {
          "description": "Identifies the category of the message for a specific use case. Values accepted: 01 = PA, 02 = NPA, 03-79 = Reserved for EMVCo future use (values invalid until defined by EMVCo), 80-99 = Reserved for DS use",
          "type": "string"
        },
        "deviceChannel": {
          "description": "Indicates the type of channel interface being used to initiate the transaction. Values accepted: 01 = App-based (APP), 02 = Browser (BRW), 03 = 3DS Requestor Initiated (3RI), 04-79 = Reserved for EMVCo future use (values invalid until defined by EMVCo), 80-99 = Reserved for DS use",
          "type": "string"
        },
        "threeDSServerTransId": {
          "description": "Universally unique transaction identifier assigned by the 3DS Server to identify a single transaction.",
          "type": "string"
        },
        "threeDSRequestorAuthenticationInd": {
          "type": "string"
        },
        "threeDSRequestorChallengeInd": {
          "description": "Indicates whether a challenge is requested for this transaction. Values accepted: 01 = No preference, 02 = No challenge requested, 03 = Challenge requested (3DS Requestor preference), 04 = Challenge requested (Mandate), 05 = No challenge requested (transactional risk analysis is already performed), 06 = No challenge requested (Data share only), 07 = No challenge requested (strong consumer authentication is already performed), 08 = No challenge requested (utilise whitelist exemption if no challenge required), 09 = Challenge requested (whitelist prompt requested if challenge required)",
          "type": "string"
        },
        "threeRIInd": {
          "description": "Indicates the type of 3RI request. Values accepted: 01 = Recurring transaction, 02 = Instalment transaction, 03 = Add card, 04 = Maintain card information, 05 = Account verification, 06 = Split,delayed shipment, 07 = Top-up, 08 = Mail Order, 09 = Telephone Order, 10 = Whitelist status check, 11 = Other payment, 12-79 = Reserved for EMVCo future use (values invalid until defined by EMVCo), 80-99 = Reserved for DS use",
          "type": "string"
        },
        "threeDSReqPriorAuthMethod": {
          "description": "Mechanism used by the Cardholder to previously authenticate to the 3DS Requestor. Values accepted: 01 = Frictionless authentication occurred by ACS, 02 = Cardholder challenge occurred by ACS, 03 = AVS verified, 04 = Other issuer methods, 05-79 = Reserved for EMVCo future use (values invalid until defined by EMVCo), 80-99 = Reserved for DS use",
          "type": "string"
        },
        "transStatus": {
          "description": "Indicates whether a transaction qualifies as an authenticated transaction or account verification. Values accepted: Y = Authentication Verification Successful, N = Not Authenticated,Account Not Verified; Transaction denied, U = Authentication, Account Verification Could Not Be Performed; Technical or other problem, as indicated in ARes or RReq, A = Attempts Processing Performed; Not Authenticated, Verified, but a proof of attempted authentication,verification is provided, C = Challenge Required; Additional authentication is required using the CReq,CRes, D = Challenge Required; Decoupled Authentication confirmed, R = Authentication,Account Verification Rejected; Issuer is rejecting authentication, verification and request that authorisation not be attempted, I = Informational Only; 3DS Requestor challenge preference acknowledged.",
          "type": "string"
        },
        "transStatusReason": {
          "description": "Provides information on why the Transaction Status field has the specified value. Values accepted: 01 = Card authentication failed, 02 = Unknown Device, 03 = Unsupported Device, 04 = Exceeds authentication frequency limit, 05 = Expired card, 06 = Invalid card number, 07 = Invalid transaction, 08 = No Card record, 09 = Security failure, 10 = Stolen card, 11 = Suspected fraud, 12 = Transaction not permitted to cardholder, 13 = Cardholder not enrolled in service, 14 = Transaction timed out at the ACS, 15 = Low confidence, 16 = Medium confidence , 17 = High confidence, 18 = Very High confidence, 19 = Exceeds ACS maximum challenges, 20 = Non-Payment transaction not supported, 21 = 3RI transaction not supported, 22 = ACS technical issue, 23 = Decoupled Authentication required by ACS but not requested by 3DS Requestor, 24 = 3DS Requestor Decoupled Max Expiry Time exceeded, 25 = Decoupled Authentication was provided insufficient time to authenticate cardholder. ACS will not make attempt, 26 = Authentication attempted but not performed by the cardholder, 27-79 = Reserved for EMVCo future use (values invalid until defined by EMVCo), 80-99 = Reserved for DS use",
          "type": "string"
        },
        "threeDSCompInd": {
          "description": "Indicates whether the 3DS Method successfully completed. Values accepted: Y = Successfully completed, N = Did not successfully complete, U = Unavailabl 3DS Method URL was not present in the PRes message data for the card range associated with the Cardholder Account Number.",
          "type": "string"
        },
        "acsChallengeMandated": {
          "description": "Indication of whether a challenge is required for the transaction to be authorised due to local/regional mandates or other variable. Values accepted: Y = Challenge is mandated, N = Challenge is not mandated",
          "type": "string"
        },
        "eci": {
          "description": "Electronic Commerce Indicator (ECI). Payment System-specific value provided by the ACS or DS to indicate the results of the attempt to authenticate the Cardholder. Values accepted: 02 (MasterCard)/05 (Visa)= successful authentication 01 (MasterCard)/06/07 (Visa) = all others",
          "type": "string"
        },
        "shipNameIndicator": {
          "description": "Indicates if the Cardholder Name on the account is identical to the shipping Name used for this transaction. Values accepted: 01 = Account Name identical to shipping Name, 02 = Account Name different than shipping Name",
          "type": "string"
        },
        "challengeCompletionInd": {
          "description": "Indicator of the state of the ACS challenge cycle and whether the challenge has completed or will require additional messages. Values accepted: Y = Challenge completed, and no further challenge message exchanges are required, N = Challenge not completed and additional challenge message exchanges are required",
          "type": "string"
        },
        "chAccPwChangeInd": {
          "description": "Indicates the length of time since the cardholder's account with the 3DS Requestor had a password change or account reset. Values accepted: 01 = No change, 02 = Changed during this transaction, 03 = Less than 30 days, 04 = 30-60 days, 05 = More than 60 days",
          "type": "string"
        },
        "chAccAgeInd": {
          "description": "Length of time that the cardholder has had the account with the 3DS Requestor. Values accepted: 01 = No account (guest check-out), 02 = Created during this transaction, 03 = Less than 30 days, 04 = 30-60 days, 05 = More than 60 day",
          "type": "string"
        },
        "provisionAttemptsDay": {
          "description": "Number of Add Card attempts in the last 24 hours. Length: maximum 3 characters Example values: 2, 02, 002",
          "type": "string"
        },
        "exemptionRaised": {
          "description": "PSD2 exemption requests, Y - exempted, N - Not exempted",
          "type": "string"
        },
        "suspiciousAccActivity": {
          "description": "Indicates whether the 3DS Requestor has experienced suspicious activity (including previous fraud) on the cardholder account. Values accepted: 01 = No suspicious activity has been observed, 02 = Suspicious activity has been observed",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.BankEventActivity.MetadataWrapper": {
      "description": "Metadata properties for the payload",
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "TrackingId for the event",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.ChargebackActivity.Chargeback": {
      "description": "Chargeback payload",
      "required": [
        "_metadata",
        "chargebackId",
        "purchaseId"
      ],
      "type": "object",
      "properties": {
        "chargebackId": {
          "description": "A unique string identifying this chargeback event",
          "type": "string"
        },
        "reason": {
          "description": "Reason provided by bank",
          "type": "string"
        },
        "status": {
          "description": "Possible values 'Inquiry' | 'Accepted' | 'Disputed' | 'Reversed' | 'ResubmittedRequest'",
          "type": "string"
        },
        "bankEventTimestamp": {
          "format": "date-time",
          "description": "Timestamp from Bank",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "The chargeback amount",
          "type": "number"
        },
        "currency": {
          "description": "Currency used for chargeback amount.",
          "type": "string"
        },
        "purchaseId": {
          "description": "The original Purchase Id",
          "type": "string"
        },
        "userId": {
          "description": "A unique string identifying the User",
          "type": "string"
        },
        "_metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.ChargebackActivity.MetadataWrapper"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.ChargebackActivity.MetadataWrapper": {
      "description": "Metadata properties for the payload",
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "TrackingId for the event",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.LabelActivity.Label": {
      "description": "A set of risk metadata labels to apply to entities",
      "required": [
        "_metadata",
        "labelObjectId",
        "labelObjectType"
      ],
      "type": "object",
      "properties": {
        "labelObjectType": {
          "description": "EntityName to which this label entity applies. If set to Email, the User id is looked-up from an email LabelObjectId. Possible values are PURCHASE , SIGNUP , CUSTOMFRAUDEVALUATION , ACCOUNT , PI , EMAIL",
          "type": "string"
        },
        "labelObjectId": {
          "description": "The Id value within the LabelObjectType to which this label entity applies.",
          "type": "string"
        },
        "labelSource": {
          "description": "The authority issuing this label's LabelReasonCodes or LabelState. Possible values 'CustomerEscalation' | 'Chargeback' | 'TC40_SAFE' | 'ManualReview' | 'Refund' | 'OfflineAnalysis'",
          "type": "string"
        },
        "labelReasonCodes": {
          "type": "string"
        },
        "labelState": {
          "description": "If the LabelSource has state-transitions, the current state of this label.  Ex. \"Accepted\" to mean a prior fraud suspicion has been cleared. Possible values 'Inquiry' | 'Accepted' | 'Fraud' | 'Disputed' | 'Reversed' | 'ResubmittedRequest'",
          "type": "string"
        },
        "processor": {
          "description": "The specific LabelSource institution issuing the LabelReasonCodes.",
          "type": "string"
        },
        "eventTimeStamp": {
          "format": "date-time",
          "description": "The event's ultimate creation as reported from LabelSource/Processor. Format is ISO8601.",
          "type": "string"
        },
        "effectiveStartDate": {
          "format": "date-time",
          "description": "The beginning of when this Label applies in Merchant time-zone (if different from MerchantLocalDate). Format is ISO8601.",
          "type": "string"
        },
        "effectiveEndDate": {
          "format": "date-time",
          "description": "The end of when this Label applies in Merchant time-zone or null for not-applicable/indeterminate. Format is ISO8601.",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "The monetary amount this label pertains to, e.g. of a partial refund.  Units given by Currency field.",
          "type": "number"
        },
        "currency": {
          "description": "Which currency the Amount is in, e.g. \"USD\"",
          "type": "string"
        },
        "_metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.LabelActivity.MetadataWrapper"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.LabelActivity.MetadataWrapper": {
      "description": "Metadata properties for the payload",
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "TrackingId for the event",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.MetadataWrapper": {
      "description": "Metadata properties for the payload",
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "TrackingId for the event",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseAddress": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "street1": {
          "description": "The first row that was provided for the address.",
          "type": "string"
        },
        "street2": {
          "description": "The second row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "street3": {
          "description": "The third row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "city": {
          "description": "The city that was provided for the address.",
          "type": "string"
        },
        "state": {
          "description": "The state or province that was provided for the address.",
          "type": "string"
        },
        "district": {
          "description": "The district that was provided for the address.",
          "type": "string"
        },
        "zipCode": {
          "description": "The postal code that was provided for the address.",
          "type": "string"
        },
        "country": {
          "description": "The country/region code that was provided for the address. The value should be a two-letter ISO country/region code (for example, US).",
          "type": "string"
        },
        "firstName": {
          "description": "First Name provided with the address",
          "type": "string"
        },
        "lastName": {
          "description": "Last Name provided with the address",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone Number provided with the address",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseCloudBusiness": {
      "description": "N/A",
      "required": [
        "organizationId"
      ],
      "type": "object",
      "properties": {
        "organizationId": {
          "description": "The unique identifier for the cloud service or organization.",
          "type": "string"
        },
        "companyName": {
          "description": "The cloud service name.",
          "type": "string"
        },
        "companyType": {
          "description": "The cloud company type.",
          "type": "string"
        },
        "companySize": {
          "format": "int32",
          "description": "The cloud company size.",
          "type": "integer"
        },
        "entityId": {
          "description": "The unique identifier for the legal entity under the organization.",
          "type": "string"
        },
        "primaryContactFirstName": {
          "description": "The first name of the primary contact for the business.",
          "type": "string"
        },
        "primaryContactLastName": {
          "description": "The last name of the primary contact for the business.",
          "type": "string"
        },
        "primaryContactEmail": {
          "description": "The email address of the primary contact for the business.",
          "type": "string"
        },
        "primaryContactPhoneNumber": {
          "description": "The phone number of the primary contact for the business.",
          "type": "string"
        },
        "subscriptionCount": {
          "format": "int32",
          "description": "The total number of subscriptions available.",
          "type": "integer"
        },
        "companyAddress": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseCloudBusinessAddress"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseCloudBusinessAddress": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "street1": {
          "description": "The first row that was provided for the address.",
          "type": "string"
        },
        "street2": {
          "description": "The second row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "street3": {
          "description": "The third row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "city": {
          "description": "The city that was provided for the address.",
          "type": "string"
        },
        "state": {
          "description": "The state or province that was provided for the address.",
          "type": "string"
        },
        "district": {
          "description": "The district that was provided for the address.",
          "type": "string"
        },
        "zipCode": {
          "description": "The postal code that was provided for the address.",
          "type": "string"
        },
        "country": {
          "description": "The country/region code that was provided for the address. The value should be a two-letter ISO country/region code (for example, US).",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseDeviceContext": {
      "description": "N/A",
      "required": [
        "deviceContextId"
      ],
      "type": "object",
      "properties": {
        "deviceContextId": {
          "description": "The customer's fingerprinting session ID, or the event ID if the session is not available.",
          "type": "string"
        },
        "provider": {
          "description": "The provider of device info. Possible values are 'DFPFingerPrinting' | 'Merchant'. If using the DFP Fingerprinting JS script, you must pass 'DFPFingerPrinting' for all data to get properly connected.",
          "type": "string"
        },
        "deviceContextDC": {
          "description": "DEPRECATED: No longer needed for DFP Fingerprinting.  The datacenter storing the customer's DFP Fingerprinting session (provided by the DFP Fingerprinting JS script).",
          "type": "string"
        },
        "externalDeviceId": {
          "description": "The customer's device ID, as provided and mastered by the merchant.",
          "type": "string"
        },
        "externalDeviceType": {
          "description": "The customer's device type, as provided and mastered by the merchant. Possible values 'Mobile' | 'Computer' | 'MerchantHardware' | 'Tablet' | 'GameConsole'",
          "type": "string"
        },
        "ipAddress": {
          "description": "Customer's IP address (provided by Merchant)",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseOrganization": {
      "description": "N/A",
      "required": [
        "name",
        "organizationId"
      ],
      "type": "object",
      "properties": {
        "organizationId": {
          "description": "The unique identifier for the merchant or organization.",
          "type": "string"
        },
        "name": {
          "description": "The name of the organization",
          "type": "string"
        },
        "zipCode": {
          "description": "The zipcode at where the organization is located",
          "type": "string"
        },
        "state": {
          "description": "The state at where the organization is located",
          "type": "string"
        },
        "countryISO": {
          "description": "The countryISO at where the organization is located",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchasePaymentInstrument": {
      "description": "N/A",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "merchantPaymentInstrumentId": {
          "description": "The identifier of the payment instrument. This information is provided by the merchant.",
          "type": "string"
        },
        "paymentMethod": {
          "description": "The top-level payment method category. Possible values are CARD, CASH, DIRECTDEBIT, E-WALLET, MOBILE, E-BANKING, INVOICE, VOUCHERS",
          "type": "string"
        },
        "type": {
          "description": "The type of payment. Possible values 'CreditCard' | 'DirectDebit' | 'PayPal' | 'MobileBilling' | 'OnlineBankTransfer' | 'Invoice' | 'MerchantGiftCard' | 'MerchantWallet' | 'CashOnDelivery' | 'Paytm' | 'CCAvenue'",
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "description": "The date of the first entry for the payment instrument in the merchant's system. The format is ISO 8601.",
          "type": "string"
        },
        "updateDate": {
          "format": "date-time",
          "description": "The date of the last update for the payment instrument in the merchant's system. The format is ISO 8601.",
          "type": "string"
        },
        "paymentCheckoutProvider": {
          "description": "The eWallet checkout provider.",
          "type": "string"
        },
        "isLowLiabilityPIType": {
          "description": "A True/False value indicating whether the payment method is a low liability.",
          "type": "boolean"
        },
        "state": {
          "description": "The current state of the PI in merchant's system. Possible values 'Active' | 'Inactive'",
          "type": "string"
        },
        "cardType": {
          "description": "This attribute is used only for payments of the Credit/Debit Card type. The network the card is provided from. Possible values 'Visa' | 'Mastercard' | 'Amex' | 'ACH' | 'SEPA' | 'UnionPay' | 'Inicis' | 'MobileBillingCarrier' | 'Discover' | 'AllPay' | 'JCB' | 'DiscoverDiners'",
          "type": "string"
        },
        "holderName": {
          "description": "The name of the payment instrument's user. This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "holderCompanyName": {
          "description": "Name of the organization providing the business or company card (for business purchases only).",
          "type": "string"
        },
        "settlementApprovalRequired": {
          "description": "A True/False value inidcating whether or not approval was required for a SEPA transaction.",
          "type": "boolean"
        },
        "bin": {
          "description": "This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "binName": {
          "description": "The BIN display name.",
          "type": "string"
        },
        "binCountryISO": {
          "description": "The ISO country code associated with the BIN.",
          "type": "string"
        },
        "binCardType": {
          "description": "The BIN card type. Possible values are DEBIT, CREDIT, PREPAID, FLEET, CREDITDEBIT",
          "type": "string"
        },
        "binCardAssociation": {
          "description": "The BIN card association. Some possible values are VISA, MASTERCARD, AMEX, DISCOVER, MAESTRO, JCB, UNIONPAY, DINERSCLUB",
          "type": "string"
        },
        "binBankGroup": {
          "description": "The BIN bank group.",
          "type": "string"
        },
        "expirationDate": {
          "description": "The expiration date for the payment instrument in the merchant's system. The format is ISO 8601. This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "lastFourDigits": {
          "description": "This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "email": {
          "description": "The email address associated with the payment instrument. This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "billingAgreementId": {
          "description": "This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "payerId": {
          "description": "This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "payerStatus": {
          "description": "A value that indicates whether PayPal has verified the payer. This attribute is used only for payments of the Paypal type. Possible values 'Verified' | 'Unverified'",
          "type": "string"
        },
        "addressStatus": {
          "description": "A value that indicates whether PayPal has verified the payer's address. This attribute is used only for payments of the Paypal type. Possible values 'Confirmed' | 'Unconfirmed'",
          "type": "string"
        },
        "imei": {
          "description": "This attribute is used only for payments of the Mobilepayment type.",
          "type": "string"
        },
        "currency": {
          "description": "Currency code for the selected payment instrument.",
          "type": "string"
        },
        "isInternationalMoneyTransfer": {
          "description": "A True/False value indicating whether an international money transfer occurred.",
          "type": "boolean"
        },
        "bankIdentifierCode": {
          "description": "Bank Identifier Code (BIC or SWIFT code)",
          "type": "string"
        },
        "bankName": {
          "description": "The bank name",
          "type": "string"
        },
        "bankZipCode": {
          "description": "The bank zip code",
          "type": "string"
        },
        "bankState": {
          "description": "The bank state",
          "type": "string"
        },
        "bankCountryISO": {
          "description": "The bank ISO country",
          "type": "string"
        },
        "paymentCollectionDate": {
          "format": "date-time",
          "description": "The estimated date for payment collection (primarily used for payment service providers).",
          "type": "string"
        },
        "instantPaymentSettlement": {
          "description": "A True/False value indicating bank redirects (used to support CSV payments).",
          "type": "boolean"
        },
        "autoCaptureEnabled": {
          "description": "A True/False value indicating whether the payment was automatically captured for card payments. For redirect payments this is simply an indicator to the partner bank whether to withdraw funds automatically or not.",
          "type": "boolean"
        },
        "accountType": {
          "description": "Indicates the type of account to charge for the transaction. UNSPECIFIED is the default. CHEQUE_ACCOUNT uses the card as a debit card. CREDIT_FACILITY uses the card as a credit card.",
          "type": "string"
        },
        "authorizationType": {
          "description": "The authorization type. Mastercard and Visa now require merchants to define authorization attempts as either a pre-authorization or a final-authorization. Possible values are PRE_AUTHORIZATION, FINAL_AUTHORIZATION",
          "type": "string"
        },
        "authorizationResultCode": {
          "description": "Bank response from the authorization decision. Possible values are APPROVE, DECLINE, PENDING",
          "type": "string"
        },
        "authorizationResultText": {
          "description": "Reasons for the authorization decision; especially for declined or pending transactions. Possible values are MISMATCH_CVV, MISMATCH_ADDRESS, MISMATCH_EXPIRATIONDATE, NOACCOUNT, INVALIDPIN, LOWFUND, OVERLIMIT SUSPICIOUSACCOUNT",
          "type": "string"
        },
        "acquirerId": {
          "description": "Acquiring institution identification code.",
          "type": "string"
        },
        "acquirerCountryISO": {
          "description": "Acquiring institution country code",
          "type": "string"
        },
        "cvvVerify": {
          "description": "Indicates whether CVV verification is available and/or sucessfully verified. Y = Successfully verified, N = Did not successfully vefified, U = Unavailable, A = Available, but no verification",
          "type": "string"
        },
        "avsVerify": {
          "description": "Indicates whether addres verification is available and/or sucessfully verified. Y = Successfully verified, N = Did not successfully vefified, U = Unavailable, A = Available, but no verification",
          "type": "string"
        },
        "cavVerify": {
          "description": "Indicates whether cardholder authentication verification is available and/or sucessfully verified. Y = Successfully verified, N = Did not successfully vefified, U = Unavailable, A = Available, but no verification",
          "type": "string"
        },
        "piInputMethod": {
          "description": "N/A",
          "type": "string"
        },
        "encryptedCreditCardNumber": {
          "description": "The hashed or encrypted credit card number.",
          "type": "string"
        },
        "purchaseAmount": {
          "format": "double",
          "description": "Total purchase amount using this PI for the transaction",
          "type": "number"
        },
        "billingAddress": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchasePaymentInstrumentAddress"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchasePaymentInstrumentAddress": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "street1": {
          "description": "The first row that was provided for the address.",
          "type": "string"
        },
        "street2": {
          "description": "The second row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "street3": {
          "description": "The third row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "city": {
          "description": "The city that was provided for the address.",
          "type": "string"
        },
        "state": {
          "description": "The state or province that was provided for the address.",
          "type": "string"
        },
        "district": {
          "description": "The district that was provided for the address.",
          "type": "string"
        },
        "zipCode": {
          "description": "The postal code that was provided for the address.",
          "type": "string"
        },
        "country": {
          "description": "The country/region code that was provided for the address. The value should be a two-letter ISO country/region code (for example, US).",
          "type": "string"
        },
        "firstName": {
          "description": "First Name provided with the address",
          "type": "string"
        },
        "lastName": {
          "description": "Last Name provided with the address",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone Number provided with the address",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseProduct": {
      "description": "N/A",
      "required": [
        "productId"
      ],
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product identifier in merchant system.",
          "type": "string"
        },
        "productName": {
          "description": "User-readable product name.",
          "type": "string"
        },
        "type": {
          "description": "Type of product sold. Possible values 'Digital' | 'Physical'",
          "type": "string"
        },
        "sku": {
          "description": "Product SKU",
          "type": "string"
        },
        "category": {
          "description": "Category of product. Possible values 'Subscription' | 'Game' | 'GameConsumable' | 'GameDLC' | 'HardwareDevice' | 'HardwareAccessory' | 'SoftwareToken' | 'SoftwareDirectEntitlement' | 'ClothingShoes' | 'RecreationalEquipment' | 'Jewelry' | 'Hotel' | 'Ticket' | 'VehicleRental' | 'GiftCard' | 'Movies' | 'Music' | 'GarageIndustrial' | 'HomeGarden' | 'Tools' | 'Books' | 'HealthBeauty' | 'Furniture' | 'Toys' | 'FoodGrocery'",
          "type": "string"
        },
        "merchantProductCategory": {
          "description": "Category of product as defined by the merchant in their system",
          "type": "string"
        },
        "market": {
          "description": "Market in which product is offered",
          "type": "string"
        },
        "productBrand": {
          "description": "Brand name of the product",
          "type": "string"
        },
        "buyItAgainOrder": {
          "description": "True when users re-order a previous order (not just a product from that order)",
          "type": "boolean"
        },
        "preOrderAvailabilityDate": {
          "format": "date-time",
          "description": "When the product was first available for preorder",
          "type": "string"
        },
        "salesPrice": {
          "format": "double",
          "description": "Price of item sold (not including tax). Provided by the Merchant.",
          "type": "number"
        },
        "currency": {
          "description": "Currency used for sales price. Provided by the Merchant.",
          "type": "string"
        },
        "cogs": {
          "format": "double",
          "description": "Cost of Goods Sold - raw material cost of item. Provided by the Merchant.",
          "type": "number"
        },
        "isRecurring": {
          "description": "Indicates if product is recurring subscription.",
          "type": "boolean"
        },
        "isFree": {
          "description": "Indicates if product is offered for free.",
          "type": "boolean"
        },
        "language": {
          "description": "Language in which product is described.",
          "type": "string"
        },
        "purchasePrice": {
          "format": "double",
          "description": "Price for line item at the purchase.",
          "type": "number"
        },
        "margin": {
          "format": "double",
          "description": "Margin gained by sale of item.",
          "type": "number"
        },
        "quantity": {
          "format": "int32",
          "description": "Quantity of item purchased",
          "type": "integer"
        },
        "isPreorder": {
          "description": "Indicates if the product is offered for preorder.",
          "type": "boolean"
        },
        "shippingMethod": {
          "description": "Indicates the method used to ship the product. Possible values 'InStorePickup' | 'Standard' | 'Express' | 'DirectEntitlement' | 'DigitalToken'",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchasePurchase3DS": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "isThreeDSAuth": {
          "description": "A True/False value that indicates whether this transaction is authenticated via 3DS.",
          "type": "boolean"
        },
        "messageCategory": {
          "description": "Identifies the category of the message for a specific use case. Values accepted: 01 = PA, 02 = NPA, 03-79 = Reserved for EMVCo future use (values invalid until defined by EMVCo), 80-99 = Reserved for DS use",
          "type": "string"
        },
        "deviceChannel": {
          "description": "Indicates the type of channel interface being used to initiate the transaction. Values accepted: 01 = App-based (APP), 02 = Browser (BRW), 03 = 3DS Requestor Initiated (3RI), 04-79 = Reserved for EMVCo future use (values invalid until defined by EMVCo), 80-99 = Reserved for DS use",
          "type": "string"
        },
        "threeDSServerTransId": {
          "description": "Universally unique transaction identifier assigned by the 3DS Server to identify a single transaction.",
          "type": "string"
        },
        "threeDSRequestorAuthenticationInd": {
          "type": "string"
        },
        "threeDSRequestorChallengeInd": {
          "description": "Indicates whether a challenge is requested for this transaction. Values accepted: 01 = No preference, 02 = No challenge requested, 03 = Challenge requested (3DS Requestor preference), 04 = Challenge requested (Mandate), 05 = No challenge requested (transactional risk analysis is already performed), 06 = No challenge requested (Data share only), 07 = No challenge requested (strong consumer authentication is already performed), 08 = No challenge requested (utilise whitelist exemption if no challenge required), 09 = Challenge requested (whitelist prompt requested if challenge required)",
          "type": "string"
        },
        "threeRIInd": {
          "description": "Indicates the type of 3RI request. Values accepted: 01 = Recurring transaction, 02 = Instalment transaction, 03 = Add card, 04 = Maintain card information, 05 = Account verification, 06 = Split,delayed shipment, 07 = Top-up, 08 = Mail Order, 09 = Telephone Order, 10 = Whitelist status check, 11 = Other payment, 12-79 = Reserved for EMVCo future use (values invalid until defined by EMVCo), 80-99 = Reserved for DS use",
          "type": "string"
        },
        "threeDSReqPriorAuthMethod": {
          "description": "Mechanism used by the Cardholder to previously authenticate to the 3DS Requestor. Values accepted: 01 = Frictionless authentication occurred by ACS, 02 = Cardholder challenge occurred by ACS, 03 = AVS verified, 04 = Other issuer methods, 05-79 = Reserved for EMVCo future use (values invalid until defined by EMVCo), 80-99 = Reserved for DS use",
          "type": "string"
        },
        "transStatus": {
          "description": "Indicates whether a transaction qualifies as an authenticated transaction or account verification. Values accepted: Y = Authentication Verification Successful. N = Not Authenticated,Account Not Verified; Transaction denied. U = Authentication, Account Verification Could Not Be Performed; Technical or other problem, as indicated in ARes or RReq. A = Attempts Processing Performed; Not Authenticated, Verified, but a proof of attempted authentication,verification is provided. C = Challenge Required; Additional authentication is required using the CReq,CRes. D = Challenge Required; Decoupled Authentication confirmed. R = Authentication,Account Verification Rejected; Issuer is rejecting authentication, verification and request that authorisation not be attempted. I = Informational Only; 3DS Requestor challenge preference acknowledged.",
          "type": "string"
        },
        "transStatusReason": {
          "description": "Provides information on why the Transaction Status field has the specified value. Values accepted: 01 = Card authentication failed, 02 = Unknown Device, 03 = Unsupported Device, 04 = Exceeds authentication frequency limit, 05 = Expired card, 06 = Invalid card number, 07 = Invalid transaction, 08 = No Card record, 09 = Security failure, 10 = Stolen card, 11 = Suspected fraud, 12 = Transaction not permitted to cardholder, 13 = Cardholder not enrolled in service, 14 = Transaction timed out at the ACS, 15 = Low confidence, 16 = Medium confidence , 17 = High confidence, 18 = Very High confidence, 19 = Exceeds ACS maximum challenges, 20 = Non-Payment transaction not supported, 21 = 3RI transaction not supported, 22 = ACS technical issue, 23 = Decoupled Authentication required by ACS but not requested by 3DS Requestor, 24 = 3DS Requestor Decoupled Max Expiry Time exceeded, 25 = Decoupled Authentication was provided insufficient time to authenticate cardholder. ACS will not make attempt, 26 = Authentication attempted but not performed by the cardholder, 27-79 = Reserved for EMVCo future use (values invalid until defined by EMVCo), 80-99 = Reserved for DS use",
          "type": "string"
        },
        "threeDSCompInd": {
          "description": "Indicates whether the 3DS Method successfully completed. Values accepted: Y = Successfully completed, N = Did not successfully complete, U = Unavailabl 3DS Method URL was not present in the PRes message data for the card range associated with the Cardholder Account Number.",
          "type": "string"
        },
        "acsChallengeMandated": {
          "description": "Indication of whether a challenge is required for the transaction to be authorised due to local/regional mandates or other variable. Values accepted: Y = Challenge is mandated, N = Challenge is not mandated",
          "type": "string"
        },
        "eci": {
          "description": "Electronic Commerce Indicator (ECI). Payment System-specific value provided by the ACS or DS to indicate the results of the attempt to authenticate the Cardholder. Values accepted: 02 (MasterCard)/05 (Visa)= successful authentication 01 (MasterCard)/06/07 (Visa) = all others",
          "type": "string"
        },
        "shipNameIndicator": {
          "description": "Indicates if the Cardholder Name on the account is identical to the shipping Name used for this transaction. Values accepted: 01 = Account Name identical to shipping Name, 02 = Account Name different than shipping Name",
          "type": "string"
        },
        "challengeCompletionInd": {
          "description": "Indicator of the state of the ACS challenge cycle and whether the challenge has completed or will require additional messages. Values accepted: Y = Challenge completed, and no further challenge message exchanges are required, N = Challenge not completed and additional challenge message exchanges are required",
          "type": "string"
        },
        "chAccPwChangeInd": {
          "description": "Indicates the length of time since the cardholder's account with the 3DS Requestor had a password change or account reset. Values accepted: 01 = No change, 02 = Changed during this transaction, 03 = Less than 30 days, 04 = 30-60 days, 05 = More than 60 days",
          "type": "string"
        },
        "chAccAgeInd": {
          "description": "Length of time that the cardholder has had the account with the 3DS Requestor. Values accepted: 01 = No account (guest check-out), 02 = Created during this transaction, 03 = Less than 30 days, 04 = 30-60 days, 05 = More than 60 day",
          "type": "string"
        },
        "provisionAttemptsDay": {
          "description": "Number of Add Card attempts in the last 24 hours. Length: maximum 3 characters Example values: 2, 02, 002",
          "type": "string"
        },
        "exemptionRaised": {
          "description": "PSD2 exemption requests, Y - exempted, N - Not exempted",
          "type": "string"
        },
        "suspiciousAccActivity": {
          "description": "Indicates whether the 3DS Requestor has experienced suspicious activity (including previous fraud) on the cardholder account. Values accepted: 01 = No suspicious activity has been observed, 02 = Suspicious activity has been observed",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchasePurchaseExternalDeviceAttributes": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "httpSignature": {
          "description": "The digital signature of the HTTP message.",
          "type": "string"
        },
        "httpUserAgent": {
          "description": "The request header used to identify the application, operating system, vendor, and/or version.",
          "type": "string"
        },
        "browserHeader": {
          "description": "The full list of request headers sent by the browser.",
          "type": "string"
        },
        "browserResolution": {
          "description": "The browser resolution.",
          "type": "string"
        },
        "browserLanguage": {
          "description": "The browser default language preference.",
          "type": "string"
        },
        "tcpSignature": {
          "description": "The TCP application signature.",
          "type": "string"
        },
        "sslSignature": {
          "description": "The SSL signature.",
          "type": "string"
        },
        "enabledCookies": {
          "description": "A True/False value that indicates whether cookies are enabled.",
          "type": "boolean"
        },
        "enabledFlash": {
          "description": "A True/False value that indicates whether Flash is enabled.",
          "type": "boolean"
        },
        "enabledJavaScript": {
          "description": "A True/False value that indicates whether javascript is enabled.",
          "type": "boolean"
        },
        "screenAspectRatio": {
          "description": "The aspect ratio of the browser.",
          "type": "string"
        },
        "screenColorDepth": {
          "description": "The color depth of the screen.",
          "type": "string"
        },
        "screenResolution": {
          "description": "Resolution of device screen in pixels",
          "type": "string"
        },
        "siteHostName": {
          "description": "The site's hostname.",
          "type": "string"
        },
        "os": {
          "description": "The device operating system.",
          "type": "string"
        },
        "oSFonts": {
          "description": "The operating system's default font.",
          "type": "string"
        },
        "deviceProcessor": {
          "description": "The device processor.",
          "type": "string"
        },
        "sessionId": {
          "description": "The unique session ID.",
          "type": "string"
        },
        "trueIp": {
          "description": "True IP address of device identified by device fingerprinting",
          "type": "string"
        },
        "proxyIp": {
          "description": "IP address of proxy device.",
          "type": "string"
        },
        "deviceId": {
          "description": "Unique GUID per device generated by device fingerprinting",
          "type": "string"
        },
        "timeZone": {
          "description": "Offset of the local time zone, in hours, with respect to GMT",
          "type": "string"
        },
        "userAgentDetails": {
          "description": "Additional user agent or browser details.",
          "type": "string"
        },
        "appVersion": {
          "description": "Application version.",
          "type": "string"
        },
        "browserPackagesList": {
          "description": "List of packages installed on the device.",
          "type": "string"
        },
        "buildManufacturer": {
          "description": "Manufacturer of the device.",
          "type": "string"
        },
        "buildModel": {
          "description": "End-user visibile name for the end product.",
          "type": "string"
        },
        "buildSdkVersion": {
          "description": "Build version.",
          "type": "string"
        },
        "dataNetworkType": {
          "description": "Type of mobile data network.",
          "type": "string"
        },
        "deviceModelName": {
          "description": "Device model.",
          "type": "string"
        },
        "deviceSystemName": {
          "description": "Device name of the machine.",
          "type": "string"
        },
        "deviceSystemVersion": {
          "description": "Device version.",
          "type": "string"
        },
        "isBluetoothEnabled": {
          "description": "A True/False value that indicates whether bluetooth has been enabled.",
          "type": "boolean"
        },
        "simNetworkCountryISO": {
          "description": "ISO country code for the mobile service provider.",
          "type": "string"
        },
        "simNetworkType": {
          "description": "Mobile network type.",
          "type": "string"
        },
        "systemUpTime": {
          "description": "The duration of time that the device has been working and available.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseStore": {
      "description": "N/A",
      "required": [
        "storeId"
      ],
      "type": "object",
      "properties": {
        "storeId": {
          "description": "Store identifier in merchant system",
          "type": "string"
        },
        "storeName": {
          "description": "Store name in merchant system",
          "type": "string"
        },
        "terminalId": {
          "description": "The unique identifier for the point of sale terminal",
          "type": "string"
        },
        "terminalName": {
          "description": "The point of sale terminal name",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseStoreAddress"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseStoreAddress": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "street1": {
          "description": "The first row that was provided for the address.",
          "type": "string"
        },
        "street2": {
          "description": "The second row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "street3": {
          "description": "The third row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "city": {
          "description": "The city that was provided for the address.",
          "type": "string"
        },
        "state": {
          "description": "The state or province that was provided for the address.",
          "type": "string"
        },
        "district": {
          "description": "The district that was provided for the address.",
          "type": "string"
        },
        "zipCode": {
          "description": "The postal code that was provided for the address.",
          "type": "string"
        },
        "country": {
          "description": "The country/region code that was provided for the address. The value should be a two-letter ISO country/region code (for example, US).",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverview": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "airlineIncluded": {
          "description": "A True/False value indicating whether airfare is included.",
          "type": "boolean"
        },
        "carRentalIncluded": {
          "description": "A True/False value indicating whether a car rental is included.",
          "type": "boolean"
        },
        "lodgingIncluded": {
          "description": "A True/False value indicating whether lodging is included.",
          "type": "boolean"
        },
        "travelType": {
          "description": "The travel category or type.",
          "type": "string"
        },
        "isRoundTrip": {
          "description": "A True/False value indicating whether the travel is round trip.",
          "type": "boolean"
        },
        "isDiscountOffered": {
          "description": "A True/False value indicating whether a discount was offered.",
          "type": "boolean"
        },
        "isPackagedTour": {
          "description": "A True/False value indicating whether this was a packaged tour.",
          "type": "boolean"
        },
        "issueDateTime": {
          "format": "date-time",
          "description": "The date and time when the tickets were issued.",
          "type": "string"
        },
        "travelDateTime": {
          "format": "date-time",
          "description": "The travel start date and time.",
          "type": "string"
        },
        "returnDateTime": {
          "format": "date-time",
          "description": "The travel end or return date and time.",
          "type": "string"
        },
        "bookingType": {
          "description": "The booking type. Some possible valuees are WEBSITE, AGENT",
          "type": "string"
        },
        "webUrl": {
          "description": "The URL where the travel was booked.",
          "type": "string"
        },
        "fromCity": {
          "description": "The city where the customer is travelling from.",
          "type": "string"
        },
        "fromState": {
          "description": "The state where the customer is travelling from.",
          "type": "string"
        },
        "fromCountryISO": {
          "description": "The ISO country where the customer is travelling from.",
          "type": "string"
        },
        "fromZipCode": {
          "description": "The zip code where the customer is travelling from.",
          "type": "string"
        },
        "toCity": {
          "description": "The city where the customer is travelling to.",
          "type": "string"
        },
        "toState": {
          "description": "The state where the customer is travelling to.",
          "type": "string"
        },
        "toCountryISO": {
          "description": "The ISO country where the customer is travelling to.",
          "type": "string"
        },
        "toZipCode": {
          "description": "The zip code where the customer is travelling to.",
          "type": "string"
        },
        "flightDetails": {
          "description": "List of items of type FlightDetails",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewFlightDetails"
          }
        },
        "lodgingDetails": {
          "description": "List of items of type LodgingDetails",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewLodgingDetails"
          }
        },
        "carRentalDetails": {
          "description": "List of items of type CarRental",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewCarRental"
          }
        },
        "travelAgent": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewTravelAgent"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewCarRental": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "pickupLocation": {
          "description": "The car rental pickup location.",
          "type": "string"
        },
        "pickupDateTime": {
          "format": "date-time",
          "description": "The car rental pickup date and time.",
          "type": "string"
        },
        "dropOffLocation": {
          "description": "The car rental drop-off location.",
          "type": "string"
        },
        "dropOffDateTime": {
          "format": "date-time",
          "description": "The car rental drop-off date and time",
          "type": "string"
        },
        "discountProgram": {
          "description": "The discount program applied to the car rental order.",
          "type": "string"
        },
        "carType": {
          "description": "The car type or category.",
          "type": "string"
        },
        "isPrepaid": {
          "description": "A True/False value indicating whether the car rental was prepaid.",
          "type": "boolean"
        },
        "insuranceIncluded": {
          "description": "A True/False value indicating whether insurance was included.",
          "type": "boolean"
        },
        "contactEmail": {
          "description": "The car renter's email address.",
          "type": "string"
        },
        "contactPhoneNumber": {
          "description": "The car renter's phone number.",
          "type": "string"
        },
        "pickupAddress": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewCarRentalAddress"
        },
        "dropOffAddress": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewCarRentalAddress"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewCarRentalAddress": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "street1": {
          "description": "The first row that was provided for the address.",
          "type": "string"
        },
        "street2": {
          "description": "The second row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "street3": {
          "description": "The third row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "city": {
          "description": "The city that was provided for the address.",
          "type": "string"
        },
        "state": {
          "description": "The state or province that was provided for the address.",
          "type": "string"
        },
        "district": {
          "description": "The district that was provided for the address.",
          "type": "string"
        },
        "zipCode": {
          "description": "The postal code that was provided for the address.",
          "type": "string"
        },
        "country": {
          "description": "The country/region code that was provided for the address. The value should be a two-letter ISO country/region code (for example, US).",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewFlightDetails": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "ticketNumber": {
          "description": "The unique ticket number.",
          "type": "string"
        },
        "placeOfIssue": {
          "description": "The location where the ticket was issued.",
          "type": "string"
        },
        "isRestrictedTicket": {
          "description": "A True/False value indicating whether the ticket is restricted.",
          "type": "boolean"
        },
        "rewardsOrVoucherApplied": {
          "description": "A True/False value indicating whether rewards or vouchers were applied to the order.",
          "type": "boolean"
        },
        "totalRewardsApplied": {
          "format": "int32",
          "description": "The total rewards which were applied to the order.",
          "type": "integer"
        },
        "totalFees": {
          "format": "double",
          "description": "The total fees applied to the order.",
          "type": "number"
        },
        "purchaserProfileType": {
          "description": "The customer's profile or membership type. Possiblee values are CORPORATE, INDIVIDUAL",
          "type": "string"
        },
        "isThirdParty": {
          "description": "A True/False value indicating whether the order was placed through a third party site.",
          "type": "boolean"
        },
        "isPurchaserFrequentFlyer": {
          "description": "A True/False value indicating whether the order was placed through a third party site.",
          "type": "boolean"
        },
        "passengerCount": {
          "format": "int32",
          "description": "The total number of passengers.",
          "type": "integer"
        },
        "numberOfStops": {
          "format": "int32",
          "description": "The number of stops or layovers for the flight.",
          "type": "integer"
        },
        "flightSegments": {
          "description": "List of items of type FlightSegment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewFlightDetailsFlightSegment"
          }
        },
        "passengers": {
          "description": "List of items of type Passenger",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewFlightDetailsPassenger"
          }
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewFlightDetailsFlightSegment": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "airlineCode": {
          "description": "The airline code.",
          "type": "string"
        },
        "airlineName": {
          "description": "The airline name.",
          "type": "string"
        },
        "operatedBy": {
          "description": "The organization operating the flight.",
          "type": "string"
        },
        "flightNumber": {
          "description": "The flight number.",
          "type": "string"
        },
        "departureDateTime": {
          "format": "date-time",
          "description": "The departure date and time.",
          "type": "string"
        },
        "arrivalDateTime": {
          "format": "date-time",
          "description": "The arrival date and time.",
          "type": "string"
        },
        "fromAirportCode": {
          "description": "The airport code where the flight is flying from.",
          "type": "string"
        },
        "fromAirportCity": {
          "description": "The airport city where the customer is travelling from.",
          "type": "string"
        },
        "fromAirportState": {
          "description": "The  airport state where the customer is travelling from.",
          "type": "string"
        },
        "fromAirportZipcode": {
          "description": "The airport zip code where the customer is travelling from.",
          "type": "string"
        },
        "fromAirportCountryISO": {
          "description": "The airport ISO country where the customer is travelling from.",
          "type": "string"
        },
        "toAirportCode": {
          "description": "The airport code where the flight is flying to.",
          "type": "string"
        },
        "toAirportCity": {
          "description": "The airport city where the customer is travelling to.",
          "type": "string"
        },
        "toAirportState": {
          "description": "The airport state where the customer is travelling to.",
          "type": "string"
        },
        "toAirportZipcode": {
          "description": "The airport zip code where the customer is travelling to.",
          "type": "string"
        },
        "toAirportCountryISO": {
          "description": "The airport ISO country where the customer is travelling to.",
          "type": "string"
        },
        "travelClass": {
          "description": "The seat class or cabin.",
          "type": "string"
        },
        "segmentSequence": {
          "format": "int32",
          "description": "The sequence number of the given flight leg (e.g. 2 for the second leg of the flight)",
          "type": "integer"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewFlightDetailsPassenger": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "The passenger first name.",
          "type": "string"
        },
        "lastName": {
          "description": "The passenger last name.",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewLodgingDetails": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "folioNumber": {
          "description": "The unique identifier of the lodging property.",
          "type": "string"
        },
        "checkInDate": {
          "format": "date-time",
          "description": "The check-in date for the lodging stay.",
          "type": "string"
        },
        "checkOutDate": {
          "format": "date-time",
          "description": "The check-out date for the lodging stay.",
          "type": "string"
        },
        "reservationConfirmed": {
          "description": "A True/False value indicating whether the reservation has been confirmed.",
          "type": "boolean"
        },
        "membershipDetails": {
          "description": "Additional details on the customer's membership status.",
          "type": "string"
        },
        "discountProgram": {
          "description": "The discount program applied to the lodging order.",
          "type": "string"
        },
        "adultCount": {
          "format": "int32",
          "description": "The number of adults included in the stay.",
          "type": "integer"
        },
        "kidCount": {
          "format": "int32",
          "description": "The number of kids included in the stay.",
          "type": "integer"
        },
        "nightsCount": {
          "format": "int32",
          "description": "The number of nights included in the stay.",
          "type": "integer"
        },
        "roomCount": {
          "format": "int32",
          "description": "The number of rooms included in the stay.",
          "type": "integer"
        },
        "bedType": {
          "description": "The bed type or category.",
          "type": "string"
        },
        "roomType": {
          "description": "The room type or category.",
          "type": "string"
        },
        "paymentDescription": {
          "description": "Additional details on the loding payment.",
          "type": "string"
        },
        "facility": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewLodgingDetailsFacility"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewLodgingDetailsFacility": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "name": {
          "description": "The facility name.",
          "type": "string"
        },
        "type": {
          "description": "The facility type.",
          "type": "string"
        },
        "contactPhoneNumber": {
          "description": "The phone number used to contact the facility.",
          "type": "string"
        },
        "contactEmail": {
          "description": "The email address used to contact the facility.",
          "type": "string"
        },
        "dailyRoomRate": {
          "format": "double",
          "description": "The daily room rate for the facility.",
          "type": "number"
        },
        "currency": {
          "description": "The currency supported by the facility.",
          "type": "string"
        },
        "dailyRoomTaxAmount": {
          "format": "double",
          "description": "The daily room tax amount charged by the facility.",
          "type": "number"
        },
        "address": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewLodgingDetailsFacilityAddress"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewLodgingDetailsFacilityAddress": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "street1": {
          "description": "The first row that was provided for the address.",
          "type": "string"
        },
        "street2": {
          "description": "The second row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "street3": {
          "description": "The third row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "city": {
          "description": "The city that was provided for the address.",
          "type": "string"
        },
        "state": {
          "description": "The state or province that was provided for the address.",
          "type": "string"
        },
        "district": {
          "description": "The district that was provided for the address.",
          "type": "string"
        },
        "zipCode": {
          "description": "The postal code that was provided for the address.",
          "type": "string"
        },
        "country": {
          "description": "The country/region code that was provided for the address. The value should be a two-letter ISO country/region code (for example, US).",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewTravelAgent": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "agencyCode": {
          "description": "The travel agency code.",
          "type": "string"
        },
        "agencyName": {
          "description": "The travel agency name.",
          "type": "string"
        },
        "agentCode": {
          "description": "N/A",
          "type": "string"
        },
        "agencyLocation": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewTravelAgentAddress"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverviewTravelAgentAddress": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "agencyContactPhone": {
          "description": "N/A",
          "type": "string"
        },
        "agencyContactEmail": {
          "description": "N/A",
          "type": "string"
        },
        "street1": {
          "description": "The first row that was provided for the address.",
          "type": "string"
        },
        "street2": {
          "description": "The second row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "street3": {
          "description": "The third row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "city": {
          "description": "The city that was provided for the address.",
          "type": "string"
        },
        "state": {
          "description": "The state or province that was provided for the address.",
          "type": "string"
        },
        "district": {
          "description": "The district that was provided for the address.",
          "type": "string"
        },
        "zipCode": {
          "description": "The postal code that was provided for the address.",
          "type": "string"
        },
        "country": {
          "description": "The country/region code that was provided for the address. The value should be a two-letter ISO country/region code (for example, US).",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseUser": {
      "description": "N/A",
      "required": [
        "userId"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "description": "The user identifier. This information is provided by the merchant.",
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "description": "The creation date of the user account. The format is ISO 8601.",
          "type": "string"
        },
        "updateDate": {
          "format": "date-time",
          "description": "The date when user data was last changed. The format is ISO 8601.",
          "type": "string"
        },
        "firstName": {
          "description": "The user-provided first name on the account.",
          "type": "string"
        },
        "lastName": {
          "description": "The user-provided last name on the account.",
          "type": "string"
        },
        "country": {
          "description": "The user's country or region. The value should be a two-letter ISO country/region code (for example, US).",
          "type": "string"
        },
        "zipCode": {
          "description": "The user's postal code.",
          "type": "string"
        },
        "timeZone": {
          "description": "The user's time zone.",
          "type": "string"
        },
        "language": {
          "description": "The user's language and territory (for example, EN-US).",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The user's phone number. The format should be the country/region code followed by a hyphen (-) and then the phone number (for example, for the US, +1-1234567890).",
          "type": "string"
        },
        "email": {
          "description": "The user's email address. This value is case-insensitive.",
          "type": "string"
        },
        "membershipId": {
          "description": "The membership ID, if the user already has an existing membership with the merchant.",
          "type": "string"
        },
        "profileType": {
          "description": "The user's profile type. Possible values 'Consumer' | 'Seller' | 'Publisher' | 'Tenant' | 'Developer'",
          "type": "string"
        },
        "profileName": {
          "description": "The profile name, depending on profileType.",
          "type": "string"
        },
        "authenticationProvider": {
          "description": "The user's authentication provider, if different from the merchant's. Possible valuse 'MSA' | 'Facebook' | 'PSN' | 'MerchantAuth' | 'Google'",
          "type": "string"
        },
        "authenticationMethod": {
          "description": "The way in which the customer was authenticated prior/during purchase. Some possible values are PASSWORD-BASED, MULTI-FACTOR, BIOMETRIC, TOKEN-BASED,",
          "type": "string"
        },
        "displayName": {
          "description": "The user's display name. Example: Xbox gamertag value",
          "type": "string"
        },
        "isEmailValidated": {
          "description": "A True/False value that indicates whether the user-provided email address has been verified as owned by the user.",
          "type": "boolean"
        },
        "emailValidatedDate": {
          "format": "date-time",
          "description": "The validation date of the user email. The format is ISO 8601.",
          "type": "string"
        },
        "isPhoneNumberValidated": {
          "description": "A True/False value that indicates whether the user-provided phone number has been verified as owned by the user.",
          "type": "boolean"
        },
        "phoneNumberValidatedDate": {
          "format": "date-time",
          "description": "The validation date of the user phone number. The format is ISO 8601.",
          "type": "string"
        },
        "membershipType": {
          "description": "The customer's membership status or type. Different levels in paid can be specified such as Premium, Executive. Possible values are FREE, PAID, PREMIUM",
          "type": "string"
        },
        "loginInputMethod": {
          "description": "The way in which the customer input their credentials. Possible values are MANUALINPUT, AUTOFILL, SCRIPT, COPYPASTE, SELECTPROFILE",
          "type": "string"
        },
        "lastPasswordUpdatedDate": {
          "format": "date-time",
          "description": "When the customer's password was last updated.",
          "type": "string"
        },
        "firstPurchaseDate": {
          "format": "date-time",
          "description": "When the customer made their first purchase",
          "type": "string"
        },
        "loginChallengeType": {
          "description": "The type of challenge-response test that was initiated. Possible valuees are TEXT SMS, PHONE SMS, EMAIL PIN, CAPTCHA",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseWrapper": {
      "description": "Purchase Contract payload",
      "required": [
        "_metadata",
        "merchantLocalDate",
        "purchaseId"
      ],
      "type": "object",
      "properties": {
        "purchaseId": {
          "description": "Transaction (or purchase/order) identifier in merchant system.",
          "type": "string"
        },
        "assessmentType": {
          "description": "Indicates the assessment type for the event. Possible values are 'Evaluate' or 'Protect'. If not specified, default is 'Protect'",
          "type": "string"
        },
        "originalOrderId": {
          "description": "Original Order identifier in merchant system for payments for recurring billing like monthly subscriptions.",
          "type": "string"
        },
        "customerLocalDate": {
          "format": "date-time",
          "description": "Purchase creation date as per customer local time-zone. Format is ISO8601",
          "type": "string"
        },
        "merchantLocalDate": {
          "format": "date-time",
          "description": "Purchase creation date as per Merchant time-zone. Format is ISO8601",
          "type": "string"
        },
        "merchantIdentifier": {
          "description": "Merchant identifier (MID) for the bank",
          "type": "string"
        },
        "merchantCategoryCode": {
          "description": "Merchant Category Code (MCC) for the bank",
          "type": "string"
        },
        "merchantBusinessType": {
          "description": "Merchant Business Type for this purchase",
          "type": "string"
        },
        "merchantBusinessSegment": {
          "description": "Merchant Business Segment for this purchase",
          "type": "string"
        },
        "isTest": {
          "description": "Signifies that the purchase is a test purchase",
          "type": "boolean"
        },
        "isFreeProductIncluded": {
          "description": "Signifies if a free product is part of this purchase",
          "type": "boolean"
        },
        "isRecurringCharge": {
          "description": "Signifies if the purchase is a recurring charge",
          "type": "boolean"
        },
        "isGuestCheckout": {
          "description": "Signifies if the purchase is being made via gueest checkout",
          "type": "boolean"
        },
        "isPostAuthCheck": {
          "description": "Signifies if the purchase is being sent to DFP post Bank Auth",
          "type": "boolean"
        },
        "isRetryOrder": {
          "description": "Signifies if the purchase is a retry of a previously failed attempt",
          "type": "boolean"
        },
        "recurringChargeFrequencyInDays": {
          "format": "int32",
          "description": "Number of days after which the charge recurs",
          "type": "integer"
        },
        "recurringChargeStartDate": {
          "format": "date-time",
          "description": "Start date for this purchase, if recurring",
          "type": "string"
        },
        "recurringChargeEndDate": {
          "format": "date-time",
          "description": "End date for this purchase, if recurring",
          "type": "string"
        },
        "isPostpaid": {
          "description": "Signifies if the purchase is post paid",
          "type": "boolean"
        },
        "distinctItemCount": {
          "format": "double",
          "description": "Count of unique products sold as part of the purchase",
          "type": "number"
        },
        "totalItemCount": {
          "format": "double",
          "description": "Total count of products sold as part of the purchase",
          "type": "number"
        },
        "orderType": {
          "description": "Type of order, for example, Take Out",
          "type": "string"
        },
        "discountAmount": {
          "format": "double",
          "description": "Discount provided on the original purchase before deriving the total amount",
          "type": "number"
        },
        "tipAmount": {
          "format": "double",
          "description": "Tip provided on the purchase",
          "type": "number"
        },
        "totalAmount": {
          "format": "double",
          "description": "Total amount charged to the customer; tax and shipping included. Discounts and coupons can be optionally included; there is currently no separate field for them. Provided by the Merchant.",
          "type": "number"
        },
        "salesTax": {
          "format": "double",
          "description": "Sales tax charged for the transaction. Provided by the Merchant.",
          "type": "number"
        },
        "currency": {
          "description": "Currency of the original purchase in ISO 4217 code format (USD, GBP, etc).",
          "type": "string"
        },
        "shippingMethod": {
          "description": "Indicates the method used to ship the purchase. Possible values 'InStorePickup' | 'Standard' | 'Express' | 'DirectEntitlement' | 'DigitalToken'",
          "type": "string"
        },
        "transactionProcessingOrder": {
          "description": "The order in which the fraud assessment was made during the transaction flow. Possible values are PREAUTHORIZATION, POSTAUTHORIZATION, BEFORE3DS, AFTER3DS",
          "type": "string"
        },
        "recurringSubscriptionId": {
          "description": "The unique ID for the recurring charge",
          "type": "string"
        },
        "recurringChargeSequence": {
          "description": "The nth (1, 2, 3...) time the recurring charge has occurred for this customer.",
          "type": "string"
        },
        "midName": {
          "description": "The merchant name associated with the MID (merchant identifier).",
          "type": "string"
        },
        "transactionDescription": {
          "description": "The transaction processing type. Possilbe values are SUBSCRIPTIONFEE, DELAYEDCHARGES, NOSHOW, DEPOSIT",
          "type": "string"
        },
        "shippingEmail": {
          "description": "The user's shipping email address",
          "type": "string"
        },
        "customData": {
          "description": "Key-value pairs that can be passed in for the use of rules, etc. Learn more at https://docs.microsoft.com/dynamics365/fraud-protection/schema#download-sample-data",
          "type": "object",
          "additionalProperties": {}
        },
        "shippingDate": {
          "format": "date-time",
          "description": "The date that the order was shipped",
          "type": "string"
        },
        "orderInitiatedChannel": {
          "description": "The channel where the transaction was created (for example: 'AppStore', 'Web', 'MobileWeb', 'App', 'InGamePurchase')",
          "type": "string"
        },
        "orderInitiatedChannelName": {
          "description": "The App Name or Web URL where the transaction was created",
          "type": "string"
        },
        "orderInitiatedChannelRegionORCountry": {
          "description": "The market where the transaction was created (for example: App market)",
          "type": "string"
        },
        "merchantBusinessSegmentL2": {
          "description": "The second level business or industry segment",
          "type": "string"
        },
        "lastUpdateYear": {
          "format": "int32",
          "description": "Year when the item was updated the last time",
          "type": "integer"
        },
        "user": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseUser"
        },
        "deviceContext": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseDeviceContext"
        },
        "externalDeviceAttributes": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchasePurchaseExternalDeviceAttributes"
        },
        "paymentInstrumentList": {
          "description": "List of items of type PaymentInstrument",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchasePaymentInstrument"
          }
        },
        "organizationLevel1": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseOrganization"
        },
        "organizationLevel2": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseOrganization"
        },
        "organizationLevel3": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseOrganization"
        },
        "threeDS": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchasePurchase3DS"
        },
        "productList": {
          "description": "List of items of type Product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseProduct"
          }
        },
        "shippingAddress": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseAddress"
        },
        "store": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseStore"
        },
        "recipientUser": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseUser"
        },
        "travelOverview": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseTravelOverview"
        },
        "cloudBusiness": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.PurchaseCloudBusiness"
        },
        "_metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseActivity.MetadataWrapper"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseStatusActivity.MetadataWrapper": {
      "description": "Metadata properties for the payload",
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "TrackingId for the event",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.PurchaseStatusActivity.PurchaseStatusWrapper": {
      "description": "Purchase Status payload",
      "required": [
        "_metadata",
        "purchaseId",
        "statusDate",
        "statusType"
      ],
      "type": "object",
      "properties": {
        "purchaseId": {
          "description": "Transaction (or purchase/order) identifier in merchant system.",
          "type": "string"
        },
        "statusType": {
          "description": "The type of the status. Possible values 'Approved' | 'Pending' | 'Rejected' | 'Failed' | 'Canceled'",
          "type": "string"
        },
        "statusDate": {
          "format": "date-time",
          "description": "The DateTime when this status was applied",
          "type": "string"
        },
        "reason": {
          "description": "Reason of the status transition. Possible values 'RuleEngine' | 'MerchantOverride' | 'ChallengeSolved' | 'ChallengeFailed' | 'CustomerRequest' | 'FufillmentFailed' | 'InlineManualReview_General' | 'InlineManualReview_Fraud' | 'InlineManualReview_AccountCompromise' | 'OfflineManualReview_General' | 'OfflineManualReview_Fraud' | 'OfflineManualReview_AccountCompromise' | 'Safelist' | 'Blocklist'",
          "type": "string"
        },
        "_metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.PurchaseStatusActivity.MetadataWrapper"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.RefundActivity.MetadataWrapper": {
      "description": "Metadata properties for the payload",
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "TrackingId for the event",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.RefundActivity.Refund": {
      "description": "Refund payload",
      "required": [
        "_metadata",
        "purchaseId",
        "refundId"
      ],
      "type": "object",
      "properties": {
        "refundId": {
          "description": "A unique string identifying this refund event",
          "type": "string"
        },
        "reason": {
          "description": "User provided reason. Possible values 'FraudRefund' | 'CustomerRequest' | 'NonFraudRefund'",
          "type": "string"
        },
        "status": {
          "description": "Possible values 'Approved' | 'Declined' | 'Unknown'",
          "type": "string"
        },
        "bankEventTimestamp": {
          "format": "date-time",
          "description": "Timestamp from Bank",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "The refund amount",
          "type": "number"
        },
        "currency": {
          "description": "Currency used for sales price amount.",
          "type": "string"
        },
        "userId": {
          "description": "A unique string identifying the User",
          "type": "string"
        },
        "purchaseId": {
          "description": "The original Purchase Id",
          "type": "string"
        },
        "_metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.RefundActivity.MetadataWrapper"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.UpdateAccountActivity.MetadataWrapper": {
      "description": "Metadata properties for the payload",
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "TrackingId for the event",
          "type": "string"
        },
        "merchantTimeStamp": {
          "format": "date-time",
          "description": "TimeStamp for the event",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.UpdateAccountActivity.User": {
      "description": "Update Account payload",
      "required": [
        "_metadata",
        "userId"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "description": "The user identifier. This information is provided by the merchant.",
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "description": "The creation date of the user account. The format is ISO 8601.",
          "type": "string"
        },
        "updateDate": {
          "format": "date-time",
          "description": "The date when user data was last changed. The format is ISO 8601.",
          "type": "string"
        },
        "firstName": {
          "description": "The user-provided first name on the account.",
          "type": "string"
        },
        "lastName": {
          "description": "The user-provided last name on the account.",
          "type": "string"
        },
        "country": {
          "description": "The user's country or region. The value should be a two-letter ISO country/region code (for example, US).",
          "type": "string"
        },
        "zipCode": {
          "description": "The user's postal code.",
          "type": "string"
        },
        "timeZone": {
          "description": "The user's time zone.",
          "type": "string"
        },
        "language": {
          "description": "The user's language and territory (for example, EN-US).",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The user's phone number. The format should be the country/region code followed by a hyphen (-) and then the phone number (for example, for the US, +1-1234567890).",
          "type": "string"
        },
        "email": {
          "description": "The user's email address. This value is case-insensitive.",
          "type": "string"
        },
        "membershipId": {
          "description": "The membership ID, if the user already has an existing membership with the merchant.",
          "type": "string"
        },
        "profileType": {
          "description": "The user's profile type. Possible values 'Consumer' | 'Seller' | 'Publisher' | 'Tenant' | 'Developer'",
          "type": "string"
        },
        "profileName": {
          "description": "The profile name, depending on profileType.",
          "type": "string"
        },
        "authenticationProvider": {
          "description": "The user's authentication provider, if different from the merchant's. Possible valuse 'MSA' | 'Facebook' | 'PSN' | 'MerchantAuth' | 'Google'",
          "type": "string"
        },
        "authenticationMethod": {
          "description": "The way in which the customer was authenticated prior/during purchase. Some possible values are PASSWORD-BASED, MULTI-FACTOR, BIOMETRIC, TOKEN-BASED,",
          "type": "string"
        },
        "displayName": {
          "description": "The user's display name. Example: Xbox gamertag value",
          "type": "string"
        },
        "isEmailValidated": {
          "description": "A True/False value that indicates whether the user-provided email address has been verified as owned by the user.",
          "type": "boolean"
        },
        "emailValidatedDate": {
          "format": "date-time",
          "description": "The validation date of the user email. The format is ISO 8601.",
          "type": "string"
        },
        "isPhoneNumberValidated": {
          "description": "A True/False value that indicates whether the user-provided phone number has been verified as owned by the user.",
          "type": "boolean"
        },
        "phoneNumberValidatedDate": {
          "format": "date-time",
          "description": "The validation date of the user phone number. The format is ISO 8601.",
          "type": "string"
        },
        "membershipType": {
          "description": "The customer's membership status or type. Different levels in paid can be specified such as Premium, Executive. Possible values are FREE, PAID, PREMIUM",
          "type": "string"
        },
        "loginInputMethod": {
          "description": "The way in which the customer input their credentials. Possible values are MANUALINPUT, AUTOFILL, SCRIPT, COPYPASTE, SELECTPROFILE",
          "type": "string"
        },
        "lastPasswordUpdatedDate": {
          "format": "date-time",
          "description": "When the customer's password was last updated.",
          "type": "string"
        },
        "firstPurchaseDate": {
          "format": "date-time",
          "description": "When the customer made their first purchase",
          "type": "string"
        },
        "loginChallengeType": {
          "description": "The type of challenge-response test that was initiated. Possible valuees are TEXT SMS, PHONE SMS, EMAIL PIN, CAPTCHA",
          "type": "string"
        },
        "addressList": {
          "description": "List of items of type UserAddress",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.UpdateAccountActivity.UserAddress"
          }
        },
        "paymentInstrumentList": {
          "description": "List of items of type UserPaymentInstrument",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.UpdateAccountActivity.UserPaymentInstrument"
          }
        },
        "deviceContext": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.UpdateAccountActivity.UserDeviceContext"
        },
        "_metadata": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.UpdateAccountActivity.MetadataWrapper"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.UpdateAccountActivity.UserAddress": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "type": {
          "description": "Possible values 'Shipping' | 'Billing' | 'Signup'",
          "type": "string"
        },
        "firstName": {
          "description": "The user-provided first name associated with the address.",
          "type": "string"
        },
        "lastName": {
          "description": "The user-provided last name associated with the address.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The user-provided phone number associated with the address.",
          "type": "string"
        },
        "street1": {
          "description": "The first row that was provided for the address.",
          "type": "string"
        },
        "street2": {
          "description": "The second row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "street3": {
          "description": "The third row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "city": {
          "description": "The city that was provided for the address.",
          "type": "string"
        },
        "state": {
          "description": "The state or province that was provided for the address.",
          "type": "string"
        },
        "district": {
          "description": "The district that was provided for the address.",
          "type": "string"
        },
        "zipCode": {
          "description": "The postal code that was provided for the address.",
          "type": "string"
        },
        "country": {
          "description": "The country/region code that was provided for the address. The value should be a two-letter ISO country/region code (for example, US).",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.UpdateAccountActivity.UserDeviceContext": {
      "description": "N/A",
      "required": [
        "deviceContextId"
      ],
      "type": "object",
      "properties": {
        "deviceContextId": {
          "description": "The customer's fingerprinting session ID, or the event ID if the session is not available.",
          "type": "string"
        },
        "ipAddress": {
          "description": "Customer's IP address (provided by Merchant)",
          "type": "string"
        },
        "provider": {
          "description": "The provider of device info. Possible values are 'DFPFingerPrinting' | 'Merchant'. If using the DFP Fingerprinting JS script, you must pass 'DFPFingerPrinting' for all data to get properly connected.",
          "type": "string"
        },
        "deviceContextDC": {
          "description": "DEPRECATED: No longer needed for DFP Fingerprinting.  The datacenter storing the customer's DFP Fingerprinting session (provided by the DFP Fingerprinting JS script).",
          "type": "string"
        },
        "externalDeviceId": {
          "description": "The customer's device ID, as provided and mastered by the merchant.",
          "type": "string"
        },
        "externalDeviceType": {
          "description": "The customer's device type, as provided and mastered by the merchant. Possible values 'Mobile' | 'Computer' | 'MerchantHardware' | 'Tablet' | 'GameConsole'",
          "type": "string"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.UpdateAccountActivity.UserPaymentInstrument": {
      "description": "N/A",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "merchantPaymentInstrumentId": {
          "description": "The identifier of the payment instrument. This information is provided by the merchant.",
          "type": "string"
        },
        "paymentMethod": {
          "description": "The top-level payment method category. Possible values are CARD, CASH, DIRECTDEBIT, E-WALLET, MOBILE, E-BANKING, INVOICE, VOUCHERS",
          "type": "string"
        },
        "type": {
          "description": "The type of payment. Possible values 'CreditCard' | 'DirectDebit' | 'PayPal' | 'MobileBilling' | 'OnlineBankTransfer' | 'Invoice' | 'MerchantGiftCard' | 'MerchantWallet' | 'CashOnDelivery' | 'Paytm' | 'CCAvenue'",
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "description": "The date of the first entry for the payment instrument in the merchant's system. The format is ISO 8601.",
          "type": "string"
        },
        "updateDate": {
          "format": "date-time",
          "description": "The date of the last update for the payment instrument in the merchant's system. The format is ISO 8601.",
          "type": "string"
        },
        "paymentCheckoutProvider": {
          "description": "The eWallet checkout provider.",
          "type": "string"
        },
        "isLowLiabilityPIType": {
          "description": "A True/False value indicating whether the payment method is a low liability.",
          "type": "boolean"
        },
        "state": {
          "description": "The current state of the PI in merchant's system. Possible values 'Active' | 'Inactive'",
          "type": "string"
        },
        "cardType": {
          "description": "This attribute is used only for payments of the Credit/Debit Card type. The network the card is provided from. Possible values 'Visa' | 'Mastercard' | 'Amex' | 'ACH' | 'SEPA' | 'UnionPay' | 'Inicis' | 'MobileBillingCarrier' | 'Discover' | 'AllPay' | 'JCB' | 'DiscoverDiners'",
          "type": "string"
        },
        "holderName": {
          "description": "The name of the payment instrument's user. This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "holderCompanyName": {
          "description": "Name of the organization providing the business or company card (for business purchases only).",
          "type": "string"
        },
        "settlementApprovalRequired": {
          "description": "A True/False value inidcating whether or not approval was required for a SEPA transaction.",
          "type": "boolean"
        },
        "bin": {
          "description": "This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "binName": {
          "description": "The BIN display name.",
          "type": "string"
        },
        "binCountryISO": {
          "description": "The ISO country code associated with the BIN.",
          "type": "string"
        },
        "binCardType": {
          "description": "The BIN card type. Possible values are DEBIT, CREDIT, PREPAID, FLEET, CREDITDEBIT",
          "type": "string"
        },
        "binCardAssociation": {
          "description": "The BIN card association. Some possible values are VISA, MASTERCARD, AMEX, DISCOVER, MAESTRO, JCB, UNIONPAY, DINERSCLUB",
          "type": "string"
        },
        "binBankGroup": {
          "description": "The BIN bank group.",
          "type": "string"
        },
        "expirationDate": {
          "description": "The expiration date for the payment instrument in the merchant's system. The format is ISO 8601. This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "lastFourDigits": {
          "description": "This attribute is used only for payments of the Credit/Debit Card type.",
          "type": "string"
        },
        "email": {
          "description": "The email address associated with the payment instrument. This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "billingAgreementId": {
          "description": "This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "payerId": {
          "description": "This attribute is used only for payments of the Paypal type.",
          "type": "string"
        },
        "payerStatus": {
          "description": "A value that indicates whether PayPal has verified the payer. This attribute is used only for payments of the Paypal type. Possible values 'Verified' | 'Unverified'",
          "type": "string"
        },
        "addressStatus": {
          "description": "A value that indicates whether PayPal has verified the payer's address. This attribute is used only for payments of the Paypal type. Possible values 'Confirmed' | 'Unconfirmed'",
          "type": "string"
        },
        "imei": {
          "description": "This attribute is used only for payments of the Mobilepayment type.",
          "type": "string"
        },
        "currency": {
          "description": "Currency code for the selected payment instrument.",
          "type": "string"
        },
        "isInternationalMoneyTransfer": {
          "description": "A True/False value indicating whether an international money transfer occurred.",
          "type": "boolean"
        },
        "bankIdentifierCode": {
          "description": "Bank Identifier Code (BIC or SWIFT code)",
          "type": "string"
        },
        "bankName": {
          "description": "The bank name",
          "type": "string"
        },
        "bankZipCode": {
          "description": "The bank zip code",
          "type": "string"
        },
        "bankState": {
          "description": "The bank state",
          "type": "string"
        },
        "bankCountryISO": {
          "description": "The bank ISO country",
          "type": "string"
        },
        "paymentCollectionDate": {
          "format": "date-time",
          "description": "The estimated date for payment collection (primarily used for payment service providers).",
          "type": "string"
        },
        "instantPaymentSettlement": {
          "description": "A True/False value indicating bank redirects (used to support CSV payments).",
          "type": "boolean"
        },
        "autoCaptureEnabled": {
          "description": "A True/False value indicating whether the payment was automatically captured for card payments. For redirect payments this is simply an indicator to the partner bank whether to withdraw funds automatically or not.",
          "type": "boolean"
        },
        "accountType": {
          "description": "Indicates the type of account to charge for the transaction. UNSPECIFIED is the default. CHEQUE_ACCOUNT uses the card as a debit card. CREDIT_FACILITY uses the card as a credit card.",
          "type": "string"
        },
        "authorizationType": {
          "description": "The authorization type. Mastercard and Visa now require merchants to define authorization attempts as either a pre-authorization or a final-authorization. Possible values are PRE_AUTHORIZATION, FINAL_AUTHORIZATION",
          "type": "string"
        },
        "authorizationResultCode": {
          "description": "Bank response from the authorization decision. Possible values are APPROVE, DECLINE, PENDING",
          "type": "string"
        },
        "authorizationResultText": {
          "description": "Reasons for the authorization decision; especially for declined or pending transactions. Possible values are MISMATCH_CVV, MISMATCH_ADDRESS, MISMATCH_EXPIRATIONDATE, NOACCOUNT, INVALIDPIN, LOWFUND, OVERLIMIT SUSPICIOUSACCOUNT",
          "type": "string"
        },
        "acquirerId": {
          "description": "Acquiring institution identification code.",
          "type": "string"
        },
        "acquirerCountryISO": {
          "description": "Acquiring institution country code",
          "type": "string"
        },
        "cvvVerify": {
          "description": "Indicates whether CVV verification is available and/or sucessfully verified. Y = Successfully verified, N = Did not successfully vefified, U = Unavailable, A = Available, but no verification",
          "type": "string"
        },
        "avsVerify": {
          "description": "Indicates whether addres verification is available and/or sucessfully verified. Y = Successfully verified, N = Did not successfully vefified, U = Unavailable, A = Available, but no verification",
          "type": "string"
        },
        "cavVerify": {
          "description": "Indicates whether cardholder authentication verification is available and/or sucessfully verified. Y = Successfully verified, N = Did not successfully vefified, U = Unavailable, A = Available, but no verification",
          "type": "string"
        },
        "piInputMethod": {
          "description": "N/A",
          "type": "string"
        },
        "encryptedCreditCardNumber": {
          "description": "The hashed or encrypted credit card number.",
          "type": "string"
        },
        "billingAddress": {
          "$ref": "#/definitions/Microsoft.DynamicsFraudProtection.v1.Models.UpdateAccountActivity.UserPaymentInstrumentAddress"
        }
      }
    },
    "Microsoft.DynamicsFraudProtection.v1.Models.UpdateAccountActivity.UserPaymentInstrumentAddress": {
      "description": "N/A",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "First Name provided with the address",
          "type": "string"
        },
        "lastName": {
          "description": "Last Name provided with the address",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone Number provided with the address",
          "type": "string"
        },
        "street1": {
          "description": "The first row that was provided for the address.",
          "type": "string"
        },
        "street2": {
          "description": "The second row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "street3": {
          "description": "The third row that was provided for the address. (This value can be blank.)",
          "type": "string"
        },
        "city": {
          "description": "The city that was provided for the address.",
          "type": "string"
        },
        "state": {
          "description": "The state or province that was provided for the address.",
          "type": "string"
        },
        "district": {
          "description": "The district that was provided for the address.",
          "type": "string"
        },
        "zipCode": {
          "description": "The postal code that was provided for the address.",
          "type": "string"
        },
        "country": {
          "description": "The country/region code that was provided for the address. The value should be a two-letter ISO country/region code (for example, US).",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {
        ".default": ".default"
      }
    }
  },
  "host": "merchanty-6b925ca8-d372-4245-bc5a-94b5fdb6c067.api.dfp.dynamics.com",
  "basePath": "/",
  "security": [
    {
      "oauth2_auth": [
        ".default"
      ]
    }
  ]
}