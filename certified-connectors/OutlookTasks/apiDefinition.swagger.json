{
  "swagger": "2.0",
  "info": {
    "x-ms-deployment-version": "1.0.0",
    "version": "1.0.0",
    "title": "Outlook Tasks",
    "description": "Outlook Tasks service lets you create, read, synchronize, update and delete your tasks that are secured by Azure Active Directory in Office 365 or a Microsoft account.",
    "x-ms-api-annotation": {
      "status": "Production"
    }
  },
  "host": "outlook.office.com",
  "basePath": "/api/v2.0",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/me/taskfolders": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "List all task folders",
        "description": "Returns a list of all the task folders in your mailbox.",
        "operationId": "GetAllTaskFolders_V2",
        "parameters": [
          {
            "$ref": "#/parameters/OdataQueryOption-$filter-TaskFolder"
          },
          {
            "$ref": "#/parameters/OdataQueryOption-$top"
          },
          {
            "$ref": "#/parameters/OdataQueryOption-$skip"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/OdataCollection<TaskFolder>"
          }
        },
        "x-ms-api-annotation": {
          "family": "GetAllTaskFolders",
          "revision": 2,
          "status": "Preview"
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a task folder",
        "description": "This operation creates a new task folder in the default task group (`My Tasks`) in your mailbox.",
        "operationId": "CreateTaskFolder_V2",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskFolder"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/TaskFolder"
          }
        },
        "x-ms-api-annotation": {
          "family": "CreateTaskFolder",
          "revision": 2,
          "status": "Preview"
        }
      }
    },
    "/v1/me/taskfolders('{folder_id}')": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get a task folder",
        "description": "This operation gets a specific task folder.",
        "operationId": "GetTaskFolder",
        "parameters": [
          {
            "$ref": "#/parameters/folder_id"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TaskFolder"
          }
        },
        "x-ms-api-annotation": {
          "family": "GetTaskFolder",
          "revision": 1,
          "status": "Preview"
        }
      },
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update a task folder",
        "description": "This operation is used to modify an existing task folder.",
        "operationId": "UpdateTaskFolder",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/folder_id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskFolder"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TaskFolder"
          }
        },
        "x-ms-api-annotation": {
          "family": "UpdateTaskFolder",
          "revision": 1,
          "status": "Preview"
        }
      }
    },
    "/v2/me/taskgroups": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "List all task groups",
        "description": "Returns a list of all the task groups in your mailbox.",
        "operationId": "GetAllTaskGroups_V2",
        "parameters": [
          {
            "$ref": "#/parameters/OdataQueryOption-$filter-TaskGroup"
          },
          {
            "$ref": "#/parameters/OdataQueryOption-$top"
          },
          {
            "$ref": "#/parameters/OdataQueryOption-$skip"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/OdataCollection<TaskGroup>"
          }
        },
        "x-ms-api-annotation": {
          "family": "GetAllTaskGroups",
          "revision": 2,
          "status": "Preview"
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a task group",
        "description": "This operation creates a new task group in your mailbox.",
        "operationId": "CreateTaskGroup_V2",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/TaskGroup"
          }
        },
        "x-ms-api-annotation": {
          "family": "CreateTaskGroup",
          "revision": 2,
          "status": "Preview"
        }
      }
    },
    "/v1/me/taskgroups('{group_id}')": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get a task group",
        "description": "This operation gets a specific task group.",
        "operationId": "GetTaskGroup_V1",
        "parameters": [
          {
            "$ref": "#/parameters/group_id"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TaskGroup"
          }
        },
        "x-ms-api-annotation": {
          "family": "GetTaskGroup",
          "revision": 1,
          "status": "Preview"
        }
      },
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update a task group",
        "description": "This operation is used to modify an existing task group.",
        "operationId": "UpdateTaskGroup_V1",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/group_id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TaskGroup"
          }
        },
        "x-ms-api-annotation": {
          "family": "UpdateTaskGroup",
          "revision": 1,
          "status": "Preview"
        }
      }
    },
    "/v2/me/taskgroups('{group_id}')/taskfolders": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "List task folders in group",
        "description": "Returns a list of all the task folders in the specified task group in your mailbox.",
        "operationId": "GetTaskFoldersInGroup_V2",
        "parameters": [
          {
            "$ref": "#/parameters/group_id"
          },
          {
            "$ref": "#/parameters/OdataQueryOption-$filter-TaskFolder"
          },
          {
            "$ref": "#/parameters/OdataQueryOption-$top"
          },
          {
            "$ref": "#/parameters/OdataQueryOption-$skip"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/OdataCollection<TaskFolder>"
          }
        },
        "x-ms-api-annotation": {
          "family": "GetTaskFoldersInGroup",
          "revision": 2,
          "status": "Preview"
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a task folder in a task group",
        "description": "This operation creates a new task folder in the specified task group in your mailbox.",
        "operationId": "CreateTaskFolderInGroup_V2",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/group_id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskFolder"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/TaskFolder"
          }
        },
        "x-ms-api-annotation": {
          "family": "CreateTaskFolderInGroup",
          "revision": 2,
          "status": "Preview"
        }
      }
    },
    "/v2/me/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "List all tasks",
        "description": "Returns a list of all your tasks in your mailbox.",
        "operationId": "GetAllTasks_V2",
        "parameters": [
          {
            "$ref": "#/parameters/OdataQueryOption-$filter-Task"
          },
          {
            "$ref": "#/parameters/OdataQueryOption-$top"
          },
          {
            "$ref": "#/parameters/OdataQueryOption-$skip"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/OdataCollection<TaskOS>"
          }
        },
        "x-ms-api-annotation": {
          "family": "GetAllTasks",
          "revision": 2,
          "status": "Preview"
        }
      }
    },
    "/v2/me/taskfolders('{folder_id}')/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "List tasks in folder",
        "description": "Returns a list of all your tasks in the specified task folder in your mailbox.",
        "operationId": "GetTasksInFolder_V2",
        "parameters": [
          {
            "$ref": "#/parameters/folder_id"
          },
          {
            "$ref": "#/parameters/OdataQueryOption-$filter-Task"
          },
          {
            "$ref": "#/parameters/OdataQueryOption-$top"
          },
          {
            "$ref": "#/parameters/OdataQueryOption-$skip"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/OdataCollection<TaskOS>"
          }
        },
        "x-ms-api-annotation": {
          "family": "GetTasksInFolder",
          "revision": 2,
          "status": "Preview"
        }
      }
    },
    "/v3/me/tasks": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a task",
        "description": "This operation creates a new task in the default task folder (`Tasks`) in your mailbox.",
        "operationId": "CreateTask_V3",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create-TaskOS"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/TaskOS"
          }
        },
        "x-ms-api-annotation": {
          "family": "CreateTask",
          "revision": 3,
          "status": "Preview"
        }
      }
    },
    "/v3/me/taskfolders('{folder_id}')/tasks": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a task in folder",
        "description": "This operation creates a new task in the specified task folder in your mailbox.",
        "operationId": "CreateTaskInFolder_V3",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/folder_id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create-TaskOS"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/TaskOS"
          }
        },
        "x-ms-api-annotation": {
          "family": "CreateTaskInFolder",
          "revision": 3,
          "status": "Preview"
        }
      }
    },
    "/v2/me/tasks('{task_id}')": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get a task",
        "description": "This operation gets a specific task.",
        "operationId": "GetTask_V2",
        "parameters": [
          {
            "$ref": "#/parameters/task_id"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TaskOS"
          }
        },
        "x-ms-api-annotation": {
          "family": "GetTask",
          "revision": 2,
          "status": "Preview"
        }
      },
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update a task",
        "description": "This operation is used to modify an existing task.",
        "operationId": "UpdateTask_V2",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/task_id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patch-TaskOS"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TaskOS"
          }
        },
        "x-ms-api-annotation": {
          "family": "UpdateTask",
          "revision": 2,
          "status": "Preview"
        }
      }
    },
    "/v1/me/tasks('{task_id}')": {
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete a task",
        "description": "This operation will delete an existing task.",
        "operationId": "DeleteTask_V1",
        "parameters": [
          {
            "$ref": "#/parameters/task_id"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204-NoContent"
          }
        },
        "x-ms-api-annotation": {
          "family": "DeleteTask",
          "revision": 1,
          "status": "Preview"
        }
      }
    },
    "/v2/me/tasks('{task_id}')/complete": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Complete a task",
        "description": "Completes a task and sets the `CompletedDateTime` property to the current date, and `Status` property to `Completed`.",
        "operationId": "CompleteTask_V2",
        "parameters": [
          {
            "$ref": "#/parameters/task_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "title": "An array containing the single Task that was completed.",
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 1,
                  "items": {
                    "$ref": "#/definitions/TaskOS"
                  }
                }
              }
            }
          }
        },
        "x-ms-api-annotation": {
          "family": "CompleteTask",
          "revision": 2,
          "status": "Preview"
        }
      }
    }
  },
  "definitions": {
    "TaskFolder": {
      "description": "An Outlook task folder.",
      "type": "object",
      "required": [
        "Name"
      ],
      "properties": {
        "@odata.id": {
          "type": "string",
          "x-ms-visibility": "internal",
          "readOnly": true
        },
        "Id": {
          "title": "Id",
          "description": "Unique identifier of the task folder.",
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "title": "Name",
          "description": "Name of the task folder.",
          "type": "string"
        },
        "ChangeKey": {
          "type": "string",
          "x-ms-visibility": "internal",
          "readOnly": true
        },
        "IsDefaultFolder": {
          "x-ms-summary": "Is Default",
          "description": "True if this is the default task folder.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "readOnly": true
        },
        "ParentGroupKey": {
          "x-ms-summary": "Parent Group Key",
          "description": "Unique GUID identifier for the task folder's parent group.",
          "type": "string",
          "x-ms-visibility": "internal",
          "readOnly": true
        }
      },
      "x-ms-test-value": {
        "Name": "test folder"
      }
    },
    "TaskGroup": {
      "description": "An Outlook task group.",
      "type": "object",
      "required": [
        "Name"
      ],
      "properties": {
        "@odata.id": {
          "type": "string",
          "x-ms-visibility": "internal",
          "readOnly": true
        },
        "Id": {
          "title": "Id",
          "description": "Unique identifier of the task group.",
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "title": "Name",
          "description": "Name of the task group.",
          "type": "string"
        },
        "ChangeKey": {
          "type": "string",
          "x-ms-visibility": "internal",
          "readOnly": true
        },
        "IsDefaultGroup": {
          "x-ms-summary": "Is Default",
          "description": "True if default task group.",
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "readOnly": true
        },
        "GroupKey": {
          "description": "Unique GUID identifier for the task group.",
          "type": "string",
          "x-ms-visibility": "internal",
          "readOnly": true
        }
      },
      "x-ms-test-value": {
        "Name": "test group"
      }
    },
    "TaskOS": {
      "description": "An Outlook task object.",
      "type": "object",
      "required": [
        "Subject"
      ],
      "properties": {
        "@odata.id": {
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "internal"
        },
        "@odata.etag": {
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "internal"
        },
        "Id": {
          "title": "Id",
          "description": "Unique identifier of the task.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "important"
        },
        "ChangeKey": {
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "internal"
        },
        "ParentFolderId": {
          "title": "Parent Folder Id",
          "description": "The unique id of the folder in which this task is located.",
          "type": "string",
          "readOnly": true
        },
        "AssignedTo": {
          "title": "Assigned To",
          "description": "Name of the person who has been assigned the task.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced"
        },
        "Owner": {
          "title": "Owner",
          "description": "Name of the person who created the task.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced"
        },
        "CreatedDateTime": {
          "title": "Created",
          "description": "The date and time when the task was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-ms-visibility": "advanced"
        },
        "LastModifiedDateTime": {
          "title": "Last Modified Date-Time",
          "description": "The date and time when this task was last modified.",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-ms-visibility": "advanced"
        },
        "HasAttachments": {
          "title": "Has attachments",
          "description": "True if this task has attachments.",
          "type": "boolean",
          "readOnly": true,
          "x-ms-visibility": "advanced"
        },
        "Status": {
          "$ref": "#/definitions/TaskOS-Status"
        },
        "Subject": {
          "$ref": "#/definitions/TaskOS-Subject"
        },
        "Body": {
          "title": "Body",
          "description": "Task body that typically contains information about the task.",
          "type": "object",
          "properties": {
            "ContentType": {
              "title": "Content Type",
              "description": "The format of the `Content` field. Usually it is `HTML`, but may be `Text` when no body was yet specified for this task.",
              "type": "string",
              "enum": [
                "Text",
                "HTML"
              ],
              "x-ms-visibility": "advanced"
            },
            "Content": {
              "title": "Content",
              "description": "The text or HTML content.",
              "type": "string"
            }
          }
        },
        "Categories": {
          "$ref": "#/definitions/TaskOS-Categories"
        },
        "Importance": {
          "$ref": "#/definitions/TaskOS-Importance"
        },
        "Sensitivity": {
          "$ref": "#/definitions/TaskOS-Sensitivity"
        },
        "StartDateTime": {
          "title": "Start",
          "description": "The date and time when the task is to begin.",
          "type": "object",
          "x-ms-visibility": "advanced",
          "properties": {
            "DateTime": {
              "title": "Date",
              "description": "Format: YYYY-MM-DD.",
              "type": "string"
            },
            "TimeZone": {
              "$ref": "#/definitions/DateTimeTimeZone-TimeZone"
            }
          }
        },
        "DueDateTime": {
          "title": "Due",
          "description": "The date the task is to be finished.",
          "type": "object",
          "x-ms-visibility": "advanced",
          "properties": {
            "DateTime": {
              "title": "Date",
              "description": "Format: YYYY-MM-DD.",
              "type": "string"
            },
            "TimeZone": {
              "$ref": "#/definitions/DateTimeTimeZone-TimeZone"
            }
          }
        },
        "CompletedDateTime": {
          "title": "Completed",
          "description": "The date and time when the task was finished.",
          "type": "object",
          "x-ms-visibility": "advanced",
          "properties": {
            "DateTime": {
              "title": "Date & Time",
              "description": "UTC Format: YYYY-MM-DDThh:mm:ssZ.",
              "type": "string"
            },
            "TimeZone": {
              "$ref": "#/definitions/DateTimeTimeZone-TimeZone"
            }
          }
        },
        "IsReminderOn": {
          "$ref": "#/definitions/TaskOS-IsReminderOn"
        },
        "ReminderDateTime": {
          "title": "Reminder",
          "description": "The date and time for a reminder alert of the task to occur. This only applies when 'Is reminder on' is set to true.",
          "type": "object",
          "x-ms-visibility": "advanced",
          "properties": {
            "DateTime": {
              "title": "Date & Time",
              "description": "UTC Format: YYYY-MM-DDThh:mm:ssZ.",
              "type": "string"
            },
            "TimeZone": {
              "$ref": "#/definitions/DateTimeTimeZone-TimeZone"
            }
          }
        }
      }
    },
    "TaskOS-Status": {
      "title": "Status",
      "description": "Indicates state or progress of the task.",
      "type": "string",
      "enum": [
        "NotStarted",
        "InProgress",
        "Completed",
        "WaitingOnOthers",
        "Deferred"
      ],
      "x-ms-enum-values": [
        {
          "value": "NotStarted",
          "displayName": "Not Started"
        },
        {
          "value": "InProgress",
          "displayName": "In Progress"
        },
        {
          "value": "Completed",
          "displayName": "Completed"
        },
        {
          "value": "WaitingOnOthers",
          "displayName": "Waiting on Others"
        },
        {
          "value": "Deferred",
          "displayName": "Deferred"
        }
      ],
      "x-ms-visibility": "important"
    },
    "TaskOS-Subject": {
      "title": "Subject",
      "description": "Brief description or title of the task.",
      "type": "string",
      "x-ms-visibility": "important"
    },
    "TaskOS-Categories": {
      "title": "Categories",
      "description": "Collection of category names associated with the task.",
      "type": "array",
      "items": {
        "title": "Category",
        "description": "Associated with the task.",
        "type": "string"
      },
      "x-ms-visibility": "advanced"
    },
    "TaskOS-Importance": {
      "title": "Importance",
      "description": "The importance of this task.",
      "type": "string",
      "enum": [
        "Low",
        "Normal",
        "High"
      ],
      "x-ms-enum-values": [
        {
          "value": "Low",
          "displayName": "Low"
        },
        {
          "value": "Normal",
          "displayName": "Normal"
        },
        {
          "value": "High",
          "displayName": "High"
        }
      ],
      "x-ms-visibility": "advanced"
    },
    "TaskOS-Sensitivity": {
      "title": "Sensitivity",
      "description": "Indicates the level of privacy for this task.",
      "type": "string",
      "enum": [
        "Normal",
        "Personal",
        "Private",
        "Confidential"
      ],
      "x-ms-enum-values": [
        {
          "value": "Normal",
          "displayName": "Normal"
        },
        {
          "value": "Personal",
          "displayName": "Personal"
        },
        {
          "value": "Private",
          "displayName": "Private"
        },
        {
          "value": "Confidential",
          "displayName": "Confidential"
        }
      ],
      "x-ms-visibility": "advanced"
    },
    "TaskOS-IsReminderOn": {
      "title": "Is reminder on",
      "description": "True if an alert is set to remind the user of the task.",
      "type": "boolean",
      "x-ms-visibility": "advanced"
    },
    "create-TaskOS": {
      "type": "object",
      "required": [
        "Subject"
      ],
      "properties": {
        "Status": {
          "$ref": "#/definitions/TaskOS-Status"
        },
        "Subject": {
          "$ref": "#/definitions/TaskOS-Subject"
        },
        "Body": {
          "$ref": "#/definitions/request-TaskOS-Body"
        },
        "Categories": {
          "$ref": "#/definitions/TaskOS-Categories"
        },
        "Importance": {
          "$ref": "#/definitions/TaskOS-Importance"
        },
        "Sensitivity": {
          "$ref": "#/definitions/TaskOS-Sensitivity"
        },
        "StartDateTime": {
          "$ref": "#/definitions/request-TaskOS-StartDateTime"
        },
        "DueDateTime": {
          "$ref": "#/definitions/request-TaskOS-DueDateTime"
        },
        "CompletedDateTime": {
          "$ref": "#/definitions/request-TaskOS-CompletedDateTime"
        },
        "IsReminderOn": {
          "$ref": "#/definitions/TaskOS-IsReminderOn"
        },
        "ReminderDateTime": {
          "$ref": "#/definitions/request-TaskOS-ReminderDateTime"
        }
      }
    },
    "patch-TaskOS": {
      "type": "object",
      "properties": {
        "Status": {
          "$ref": "#/definitions/TaskOS-Status"
        },
        "Subject": {
          "$ref": "#/definitions/TaskOS-Subject"
        },
        "Body": {
          "$ref": "#/definitions/request-TaskOS-Body"
        },
        "Categories": {
          "$ref": "#/definitions/TaskOS-Categories"
        },
        "Importance": {
          "$ref": "#/definitions/TaskOS-Importance"
        },
        "Sensitivity": {
          "$ref": "#/definitions/TaskOS-Sensitivity"
        },
        "StartDateTime": {
          "$ref": "#/definitions/request-TaskOS-StartDateTime"
        },
        "DueDateTime": {
          "$ref": "#/definitions/request-TaskOS-DueDateTime"
        },
        "CompletedDateTime": {
          "$ref": "#/definitions/request-TaskOS-CompletedDateTime"
        },
        "IsReminderOn": {
          "$ref": "#/definitions/TaskOS-IsReminderOn"
        },
        "ReminderDateTime": {
          "$ref": "#/definitions/request-TaskOS-ReminderDateTime"
        }
      }
    },
    "request-TaskOS-Body": {
      "title": "Body",
      "description": "Task body that typically contains information about the task.",
      "type": "object",
      "required": [
        "ContentType"
      ],
      "properties": {
        "ContentType": {
          "title": "Content Type",
          "description": "Default to HTML when editing to mimic the format.",
          "type": "string",
          "enum": [
            "Text",
            "HTML"
          ],
          "x-ms-enum-values": [
            {
              "value": "Text",
              "displayName": "Text"
            },
            {
              "value": "HTML",
              "displayName": "Html"
            }
          ],
          "default": "HTML",
          "x-ms-visibility": "internal"
        },
        "Content": {
          "title": "Html",
          "description": "The HTML content for the body of the task.",
          "type": "string",
          "format": "html"
        }
      }
    },
    "request-TaskOS-StartDateTime": {
      "title": "Start",
      "description": "The date and time when the task is to begin.",
      "type": "object",
      "required": [
        "DateTime",
        "TimeZone"
      ],
      "properties": {
        "DateTime": {
          "title": "Date",
          "description": "Format: YYYY-MM-DD.",
          "type": "string",
          "format": "date"
        },
        "TimeZone": {
          "$ref": "#/definitions/request-DateTimeTimeZone-TimeZone"
        }
      },
      "x-ms-visibility": "advanced"
    },
    "request-TaskOS-DueDateTime": {
      "title": "Due",
      "description": "The date the task is to be finished.",
      "type": "object",
      "required": [
        "DateTime",
        "TimeZone"
      ],
      "properties": {
        "DateTime": {
          "title": "Date",
          "description": "Format: YYYY-MM-DD.",
          "type": "string",
          "format": "date"
        },
        "TimeZone": {
          "$ref": "#/definitions/request-DateTimeTimeZone-TimeZone"
        }
      },
      "x-ms-visibility": "advanced"
    },
    "request-TaskOS-CompletedDateTime": {
      "title": "Completed",
      "description": "The date and time when the task was finished.",
      "type": "object",
      "required": [
        "DateTime",
        "TimeZone"
      ],
      "properties": {
        "DateTime": {
          "title": "Date",
          "description": "Format: YYYY-MM-DD.",
          "type": "string",
          "format": "date"
        },
        "TimeZone": {
          "$ref": "#/definitions/request-DateTimeTimeZone-TimeZone"
        }
      },
      "x-ms-visibility": "advanced"
    },
    "request-TaskOS-ReminderDateTime": {
      "title": "Reminder",
      "description": "The date and time for a reminder alert of the task to occur. This only applies when 'Is reminder on' is set to true.",
      "type": "object",
      "x-ms-visibility": "advanced",
      "properties": {
        "DateTime": {
          "title": "Date & Time",
          "description": "Format: YYYY-MM-DDThh:mm:ss.",
          "type": "string"
        },
        "TimeZone": {
          "$ref": "#/definitions/request-DateTimeTimeZone-TimeZone"
        }
      }
    },
    "DateTimeTimeZone-TimeZone": {
      "title": "Time Zone",
      "description": "The time zone in which the `DateTime` field is expressed.",
      "type": "string",
      "externalDocs": {
        "url": "https://docs.microsoft.com/en-us/previous-versions/office/office-365-api/api/version-2.0/complex-types-for-mail-contacts-calendar#DateTimeTimeZoneV2"
      }
    },
    "request-DateTimeTimeZone-TimeZone": {
      "title": "Time Zone",
      "description": "Time zone to use for the `DateTime` field.",
      "type": "string",
      "externalDocs": {
        "url": "https://docs.microsoft.com/en-us/previous-versions/office/office-365-api/api/version-2.0/complex-types-for-mail-contacts-calendar#DateTimeTimeZoneV2"
      },
      "enum": [
        "UTC",
        "Dateline Standard Time",
        "Samoa Standard Time",
        "Hawaiian Standard Time",
        "Alaskan Standard Time",
        "Pacific Standard Time",
        "Mountain Standard Time",
        "Mountain Standard Time (Mexico)",
        "US Mountain Standard Time",
        "Canada Central Standard Time",
        "Central Standard Time (Mexico)",
        "Central Standard Time",
        "Central America Standard Time",
        "US Eastern Standard Time",
        "Eastern Standard Time",
        "SA Pacific Standard Time",
        "Pacific SA Standard Time",
        "Central Brazilian Standard Time",
        "SA Western Standard Time",
        "Atlantic Standard Time",
        "Newfoundland Standard Time",
        "Greenland Standard Time",
        "SA Eastern Standard Time",
        "E. South America Standard Time",
        "Mid-Atlantic Standard Time",
        "Cape Verde Standard Time",
        "Azores Standard Time",
        "GMT Standard Time",
        "Greenwich Standard Time",
        "W. Europe Standard Time",
        "Central Europe Standard Time",
        "Romance Standard Time",
        "Central European Standard Time",
        "W. Central Africa Standard Time",
        "GTB Standard Time",
        "Egypt Standard Time",
        "South Africa Standard Time",
        "FLE Standard Time",
        "Israel Standard Time",
        "E. Europe Standard Time",
        "Namibia Standard Time",
        "Arabic Standard Time",
        "Arab Standard Time",
        "Russian Standard Time",
        "E. Africa Standard Time",
        "Iran Standard Time",
        "Arabian Standard Time",
        "Azerbaijan Standard Time",
        "Georgian Standard Time",
        "Caucasus Standard Time",
        "Afghanistan Standard Time",
        "Ekaterinburg Standard Time",
        "West Asia Standard Time",
        "India Standard Time",
        "Nepal Standard Time",
        "N. Central Asia Standard Time",
        "Central Asia Standard Time",
        "Sri Lanka Standard Time",
        "Myanmar Standard Time",
        "SE Asia Standard Time",
        "North Asia Standard Time",
        "China Standard Time",
        "North Asia East Standard Time",
        "Singapore Standard Time",
        "W. Australia Standard Time",
        "Taipei Standard Time",
        "Tokyo Standard Time",
        "Korea Standard Time",
        "Yakutsk Standard Time",
        "Cen. Australia Standard Time",
        "AUS Central Standard Time",
        "E. Australia Standard Time",
        "AUS Eastern Standard Time",
        "West Pacific Standard Time",
        "Tasmania Standard Time",
        "Vladivostok Standard Time",
        "Central Pacific Standard Time",
        "New Zealand Standard Time",
        "Fiji Standard Time",
        "Tonga Standard Time"
      ],
      "x-ms-enum-values": [
        {
          "value": "UTC",
          "displayName": "(UTC) Coordinated Universal Time"
        },
        {
          "value": "Dateline Standard Time",
          "displayName": "(GMT-12:00) International Date Line West"
        },
        {
          "value": "Samoa Standard Time",
          "displayName": "(GMT-11:00) Midway Island, Samoa"
        },
        {
          "value": "Hawaiian Standard Time",
          "displayName": "(GMT-10:00) Hawaii"
        },
        {
          "value": "Alaskan Standard Time",
          "displayName": "(GMT-09:00) Alaska"
        },
        {
          "value": "Pacific Standard Time",
          "displayName": "(GMT-08:00) Pacific Time (US and Canada); Tijuana"
        },
        {
          "value": "Mountain Standard Time",
          "displayName": "(GMT-07:00) Mountain Time (US and Canada)"
        },
        {
          "value": "Mountain Standard Time (Mexico)",
          "displayName": "(GMT-07:00) Chihuahua, La Paz, Mazatlan"
        },
        {
          "value": "US Mountain Standard Time",
          "displayName": "(GMT-07:00) Arizona"
        },
        {
          "value": "Canada Central Standard Time",
          "displayName": "(GMT-06:00) Saskatchewan"
        },
        {
          "value": "Central Standard Time (Mexico)",
          "displayName": "(GMT-06:00) Guadalajara, Mexico City, Monterrey"
        },
        {
          "value": "Central Standard Time",
          "displayName": "(GMT-06:00) Central Time (US and Canada)"
        },
        {
          "value": "Central America Standard Time",
          "displayName": "(GMT-06:00) Central America"
        },
        {
          "value": "US Eastern Standard Time",
          "displayName": "(GMT-05:00) Indiana (East)"
        },
        {
          "value": "Eastern Standard Time",
          "displayName": "(GMT-05:00) Eastern Time (US and Canada)"
        },
        {
          "value": "SA Pacific Standard Time",
          "displayName": "(GMT-05:00) Bogota, Lima, Quito"
        },
        {
          "value": "Pacific SA Standard Time",
          "displayName": "(GMT-04:00) Santiago"
        },
        {
          "value": "Central Brazilian Standard Time",
          "displayName": "(GMT-04:00) Manaus"
        },
        {
          "value": "SA Western Standard Time",
          "displayName": "(GMT-04:00) Caracas, La Paz"
        },
        {
          "value": "Atlantic Standard Time",
          "displayName": "(GMT-04:00) Atlantic Time (Canada)"
        },
        {
          "value": "Newfoundland Standard Time",
          "displayName": "(GMT-03:30) Newfoundland and Labrador"
        },
        {
          "value": "Greenland Standard Time",
          "displayName": "(GMT-03:00) Greenland"
        },
        {
          "value": "SA Eastern Standard Time",
          "displayName": "(GMT-03:00) Buenos Aires, Georgetown"
        },
        {
          "value": "E. South America Standard Time",
          "displayName": "(GMT-03:00) Brasilia"
        },
        {
          "value": "Mid-Atlantic Standard Time",
          "displayName": "(GMT-02:00) Mid-Atlantic"
        },
        {
          "value": "Cape Verde Standard Time",
          "displayName": "(GMT-01:00) Cape Verde Islands"
        },
        {
          "value": "Azores Standard Time",
          "displayName": "(GMT-01:00) Azores"
        },
        {
          "value": "GMT Standard Time",
          "displayName": "(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London"
        },
        {
          "value": "Greenwich Standard Time",
          "displayName": "(GMT) Casablanca, Monrovia"
        },
        {
          "value": "W. Europe Standard Time",
          "displayName": "(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna"
        },
        {
          "value": "Central Europe Standard Time",
          "displayName": "(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague"
        },
        {
          "value": "Romance Standard Time",
          "displayName": "(GMT+01:00) Brussels, Copenhagen, Madrid, Paris"
        },
        {
          "value": "Central European Standard Time",
          "displayName": "(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb"
        },
        {
          "value": "W. Central Africa Standard Time",
          "displayName": "(GMT+01:00) West Central Africa"
        },
        {
          "value": "GTB Standard Time",
          "displayName": "(GMT+02:00) Athens, Bucharest, Istanbul"
        },
        {
          "value": "Egypt Standard Time",
          "displayName": "(GMT+02:00) Cairo"
        },
        {
          "value": "South Africa Standard Time",
          "displayName": "(GMT+02:00) Harare, Pretoria"
        },
        {
          "value": "FLE Standard Time",
          "displayName": "(GMT+02:00) Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius"
        },
        {
          "value": "Israel Standard Time",
          "displayName": "(GMT+02:00) Jerusalem"
        },
        {
          "value": "E. Europe Standard Time",
          "displayName": "(GMT+02:00) Minsk"
        },
        {
          "value": "Namibia Standard Time",
          "displayName": "(GMT+02:00) Windhoek"
        },
        {
          "value": "Arabic Standard Time",
          "displayName": "(GMT+03:00) Baghdad"
        },
        {
          "value": "Arab Standard Time",
          "displayName": "(GMT+03:00) Kuwait, Riyadh"
        },
        {
          "value": "Russian Standard Time",
          "displayName": "(GMT+03:00) Moscow, St. Petersburg, Volgograd"
        },
        {
          "value": "E. Africa Standard Time",
          "displayName": "(GMT+03:00) Nairobi"
        },
        {
          "value": "Iran Standard Time",
          "displayName": "(GMT+03:30) Tehran"
        },
        {
          "value": "Arabian Standard Time",
          "displayName": "(GMT+04:00) Abu Dhabi, Muscat"
        },
        {
          "value": "Azerbaijan Standard Time",
          "displayName": "(GMT+04:00) Baku"
        },
        {
          "value": "Georgian Standard Time",
          "displayName": "(GMT+04:00) Tblisi"
        },
        {
          "value": "Caucasus Standard Time",
          "displayName": "(GMT+04:00) Yerevan"
        },
        {
          "value": "Afghanistan Standard Time",
          "displayName": "(GMT+04:30) Kabul"
        },
        {
          "value": "Ekaterinburg Standard Time",
          "displayName": "(GMT+05:00) Ekaterinburg"
        },
        {
          "value": "West Asia Standard Time",
          "displayName": "(GMT+05:00) Islamabad, Karachi, Tashkent"
        },
        {
          "value": "India Standard Time",
          "displayName": "(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi"
        },
        {
          "value": "Nepal Standard Time",
          "displayName": "(GMT+05:45) Kathmandu"
        },
        {
          "value": "N. Central Asia Standard Time",
          "displayName": "(GMT+06:00) Almaty, Novosibirsk"
        },
        {
          "value": "Central Asia Standard Time",
          "displayName": "(GMT+06:00) Astana, Dhaka"
        },
        {
          "value": "Sri Lanka Standard Time",
          "displayName": "(GMT+06:00) Sri Jayawardenepura"
        },
        {
          "value": "Myanmar Standard Time",
          "displayName": "(GMT+06:30) Yangon (Rangoon)"
        },
        {
          "value": "SE Asia Standard Time",
          "displayName": "(GMT+07:00) Bangkok, Hanoi, Jakarta"
        },
        {
          "value": "North Asia Standard Time",
          "displayName": "(GMT+07:00) Krasnoyarsk"
        },
        {
          "value": "China Standard Time",
          "displayName": "(GMT+08:00) Beijing, Chongqing, Hong Kong SAR, Urumqi"
        },
        {
          "value": "North Asia East Standard Time",
          "displayName": "(GMT+08:00) Irkutsk, Ulaanbaatar"
        },
        {
          "value": "Singapore Standard Time",
          "displayName": "(GMT+08:00) Kuala Lumpur, Singapore"
        },
        {
          "value": "W. Australia Standard Time",
          "displayName": "(GMT+08:00) Perth"
        },
        {
          "value": "Taipei Standard Time",
          "displayName": "(GMT+08:00) Taipei"
        },
        {
          "value": "Tokyo Standard Time",
          "displayName": "(GMT+09:00) Osaka, Sapporo, Tokyo"
        },
        {
          "value": "Korea Standard Time",
          "displayName": "(GMT+09:00) Seoul"
        },
        {
          "value": "Yakutsk Standard Time",
          "displayName": "(GMT+09:00) Yakutsk"
        },
        {
          "value": "Cen. Australia Standard Time",
          "displayName": "(GMT+09:30) Adelaide"
        },
        {
          "value": "AUS Central Standard Time",
          "displayName": "(GMT+09:30) Darwin"
        },
        {
          "value": "E. Australia Standard Time",
          "displayName": "(GMT+10:00) Brisbane"
        },
        {
          "value": "AUS Eastern Standard Time",
          "displayName": "(GMT+10:00) Canberra, Melbourne, Sydney"
        },
        {
          "value": "West Pacific Standard Time",
          "displayName": "(GMT+10:00) Guam, Port Moresby"
        },
        {
          "value": "Tasmania Standard Time",
          "displayName": "(GMT+10:00) Hobart"
        },
        {
          "value": "Vladivostok Standard Time",
          "displayName": "(GMT+10:00) Vladivostok"
        },
        {
          "value": "Central Pacific Standard Time",
          "displayName": "(GMT+11:00) Magadan, Solomon Islands, New Caledonia"
        },
        {
          "value": "New Zealand Standard Time",
          "displayName": "(GMT+12:00) Auckland, Wellington"
        },
        {
          "value": "Fiji Standard Time",
          "displayName": "(GMT+12:00) Fiji Islands, Kamchatka, Marshall Islands"
        },
        {
          "value": "Tonga Standard Time",
          "displayName": "(GMT+13:00) Nuku'alofa"
        }
      ]
    },
    "@odata.nextLink": {
      "type": "string",
      "x-ms-visibility": "internal",
      "title": "OData nextLink"
    }
  },
  "parameters": {
    "OdataQueryOption-$top": {
      "in": "query",
      "name": "$top",
      "type": "integer",
      "required": false,
      "minimum": 0,
      "x-ms-visibility": "advanced",
      "description": "The number of items in the queried collection to be included in the result.",
      "x-ms-summary": "Top Items"
    },
    "OdataQueryOption-$skip": {
      "in": "query",
      "name": "$skip",
      "required": false,
      "type": "integer",
      "minimum": 0,
      "x-ms-visibility": "advanced",
      "description": "The number of items in the queried collection that are to be skipped and not included in the result. This is applied before the $top option.",
      "x-ms-summary": "Skip Items"
    },
    "OdataQueryOption-$filter-Task": {
      "x-ms-summary": "Filter Items",
      "description": "OData $filter. e.g. To return only incomplete tasks: `Status ne 'Completed'`.\ne.g. Search by subject: `contains(Subject, 'some text')`.\ne.g. Return tasks that have been modified after a certain date: `LastModifiedDateTime gt 2020-03-27T19:00:00z`.\nCommon filterable properties: Subject, Status, Categories, Importance, Sensitivity, CreatedDateTime, LastModifiedDateTime, StartDateTime, DueDateTime, CompletedDateTime, HasAttachments.",
      "in": "query",
      "name": "$filter",
      "required": false,
      "type": "string"
    },
    "OdataQueryOption-$filter-TaskFolder": {
      "x-ms-summary": "Filter Items",
      "description": "OData $filter. e.g. `contains(Name, 'custom')`.\nFilterable properties: Name.",
      "in": "query",
      "name": "$filter",
      "required": false,
      "type": "string"
    },
    "OdataQueryOption-$filter-TaskGroup": {
      "x-ms-summary": "Filter Items",
      "description": "OData $filter. e.g. `contains(Name, 'custom')`.\nFilterable properties: Name.",
      "in": "query",
      "name": "$filter",
      "required": false,
      "type": "string"
    },
    "attachment_id": {
      "in": "path",
      "name": "attachment_id",
      "type": "string",
      "required": true,
      "description": "The programatic ID of an attachment, unique in the user's mailbox.",
      "x-ms-summary": "Attachment ID",
      "x-ms-url-encoding": "single"
    },
    "folder_id": {
      "in": "path",
      "name": "folder_id",
      "type": "string",
      "required": true,
      "description": "The default 'Tasks' well-known folder name, or a programatic ID of a task folder, unique in the user's mailbox.",
      "x-ms-summary": "Task Folder ID",
      "x-ms-url-encoding": "single",
      "x-ms-test-value": "Tasks",
      "x-ms-dynamic-values": {
        "operationId": "GetAllTaskFolders_V2",
        "value-collection": "value",
        "value-title": "Name",
        "value-path": "Id"
      }
    },
    "group_id": {
      "in": "path",
      "name": "group_id",
      "type": "string",
      "required": true,
      "description": "The programatic ID of a task group, unique in the user's mailbox.",
      "x-ms-summary": "Task Group ID",
      "x-ms-url-encoding": "single",
      "x-ms-dynamic-values": {
        "operationId": "GetAllTaskGroups_V2",
        "value-collection": "value",
        "value-title": "Name",
        "value-path": "Id"
      }
    },
    "task_id": {
      "in": "path",
      "name": "task_id",
      "type": "string",
      "required": true,
      "description": "The programatic task ID, unique in the user's mailbox.",
      "x-ms-summary": "Task ID",
      "x-ms-url-encoding": "single"
    }
  },
  "responses": {
    "204-NoContent": {
      "description": "Operation Successful - No Content"
    },
    "TaskFolder": {
      "description": "Operation Successful",
      "schema": {
        "$ref": "#/definitions/TaskFolder"
      }
    },
    "OdataCollection<TaskFolder>": {
      "description": "Operation Successful",
      "schema": {
        "type": "object",
        "properties": {
          "@odata.nextLink": {
            "$ref": "#/definitions/@odata.nextLink"
          },
          "value": {
            "title": "The Task Folder entities of the operation.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/TaskFolder"
            }
          }
        }
      }
    },
    "TaskGroup": {
      "description": "Operation Successful",
      "schema": {
        "$ref": "#/definitions/TaskGroup"
      }
    },
    "OdataCollection<TaskGroup>": {
      "description": "Operation Successful",
      "schema": {
        "type": "object",
        "properties": {
          "@odata.nextLink": {
            "$ref": "#/definitions/@odata.nextLink"
          },
          "value": {
            "title": "The Task Group entities of the operation.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/TaskGroup"
            }
          }
        }
      }
    },
    "TaskOS": {
      "description": "Operation Successful",
      "schema": {
        "$ref": "#/definitions/TaskOS"
      }
    },
    "OdataCollection<TaskOS>": {
      "description": "Operation Successful",
      "schema": {
        "type": "object",
        "properties": {
          "@odata.nextLink": {
            "$ref": "#/definitions/@odata.nextLink"
          },
          "value": {
            "title": "The Task entities of the operation.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/TaskOS"
            }
          }
        }
      }
    }
  }
}