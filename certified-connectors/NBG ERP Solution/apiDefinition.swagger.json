{
  "swagger": "2.0",
  "info": {
    "contact": {
	  "name": "National Bank of Greece",
      "url": "https://developer.nbg.gr/",
      "email": "developer@nbg.gr"
    },
    "description": "Start integrating your application with our Bank and give your client the options to:1.  View their account details, balances and statements2.  View their card details, balances and statements3. Send money to any account",
    "title": "NBG ERP Solution",
    "version": "1.0"
  },
  "host": "services.nbg.gr",
  "basePath": "/apis/erpapi/v2.2",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/account/accounts_full": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "It returns all the user's accounts.",
        "operationId": "AccountAccountsFull",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestAccountsFullRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list with all the domestic accounts of the user",
            "schema": {
              "$ref": "#/definitions/ResponseAccountFullList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "List of accounts with details",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/beneficiaries": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns the beneficiaries of a user account (userId) based on the given Iban, which must belong to a user account.",
        "operationId": "AccountBeneficiaries",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestIbanBicRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StringResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "NBG Account beneficiaries masked",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/bic": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns the BIC code, given an Iban. This call is also accessible through **\"Client Credentials\"** authentication.",
        "operationId": "AccountBic",
        "parameters": [
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random guid "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox ID "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestIbanBicRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Account BIC",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/check_iban": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns if the given Iban is valid or not",
        "operationId": "AccountCheckIban",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestIbanBicRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseBoolean"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "IBAN account check",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/cobeneficiaries": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns the co-beneficiaries and their order, based on the given account.",
        "operationId": "AccountCobeneficiaries",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestCoBeneficiaryRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseAccountBeneficiaryList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "My NBG Account co-beneficiaries",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/currencies": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns all the currencies codes and their symbols",
        "operationId": "AccountCurrencies",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCurrencyList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Currencies",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/details": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "The account should belong to the user (userId) who is asking the question. The account should be 11 digits, the format that the NBG uses to describe an account.",
        "operationId": "AccountDetails",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestBalanceRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseBalanceDetails"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Account details",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/get_holdings": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns holdings for an account",
        "operationId": "AccountGetHoldings",
        "parameters": [
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "The unique name of your Sandbox",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Get holdings request",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGetHoldingsRequest_"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseGetHoldings"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Get holdings",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/iban_info": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "If the Iban is valid, it returns the Iban's BIC and the beneficiaries",
        "operationId": "AccountIbanInfo",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestIbanBicRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseIbanInfoResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "IBAN information",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/multiple_accounts_details": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "The range of accounts should belong to the user (userId) who is asking the question. The range of accounts should be 11 digits, the format that the NBG uses to describe an account.",
        "operationId": "MultipleAccountsDetails",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestMultipleBalancesRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMultipleBalancesDetails"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Retrieve Account details for a range of Accounts",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/rates": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns the interest rates",
        "operationId": "AccountRates",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestInterestScaleRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseInterestScaleClientResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Rates",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/statements": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns the account's transactions of the logged in user based on the given 11-digit account. Transactions are returned based on the dateFrom, dateTo fields.",
        "operationId": "AccountStatements",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestStatementRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseTransactionList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Statements",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/transaction_types": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns all the NBG transaction Types (e.g. \"10\" for \"Deposit\")",
        "operationId": "AccountTransactionTypes",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCodeDescriptionList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Account transaction types",
        "tags": [
          "Account"
        ]
      }
    },
    "/account/types": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns all the NBG account Types ",
        "operationId": "AccountTypes",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCodeDescriptionList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Account types",
        "tags": [
          "Account"
        ]
      }
    },
    "/bank/banks_bic": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns a list of domestic and foreign bank details. The search is based on the country code (Get country code from the \"Get countries\" call), the city, the name of the bank, the branch. Mandatory fields are country code and city.",
        "operationId": "BankBanksBic",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RequestBanksBicRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseBanksBicList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Get banks BIC",
        "tags": [
          "Bank"
        ]
      }
    },
    "/bank/countries": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns all countries. Country code is a two-letter (ISO 3166-1 alpha-2)",
        "operationId": "BankCountries",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCountriesList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Get countries",
        "tags": [
          "Bank"
        ]
      }
    },
    "/bank/info": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "It returns a specific bank's details, e.g. city, address",
        "operationId": "BankInfo",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestBankRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseBankData"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Bank information",
        "tags": [
          "Bank"
        ]
      }
    },
    "/card/card_expenses": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Calculate the expenses of a non-NBG credit card payment",
        "operationId": "CardCardExpenses",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResponseIbComissionAmRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseIbComissionAmResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Card transaction expenses",
        "tags": [
          "Card"
        ]
      }
    },
    "/card/connected_accounts": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns connected accounts for a debit card",
        "operationId": "CardConnectedAccounts",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DebitCardAccountCmsRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DebitCardConnectedAccountCmsResponse_"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Connected accounts for debit card",
        "tags": [
          "Card"
        ]
      }
    },
    "/card/details": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the details for a specific card",
        "operationId": "CardDetails",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestCardDetailsRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCardDetailsResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Card details",
        "tags": [
          "Card"
        ]
      }
    },
    "/card/pay": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Execute a payment to a NBG card",
        "operationId": "CardPay",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestCreditCardPaymentRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCreditCardPaymentResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Pay a NBG credit card",
        "tags": [
          "Card"
        ]
      }
    },
    "/card/pay_other": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Execute a payment to a non-NBG credit card",
        "operationId": "CardPayOther",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "The id of your whitelist sandbox",
            "in": "header",
            "name": "whitelist_sandbox_id",
            "required": false,
            "type": "string",
			"x-ms-summary": "White List Sandbox Id"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestCreditCardOtherPayRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCreditCardOtherPayResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Pay a non-NBG credit card",
        "tags": [
          "Card"
        ]
      }
    },
    "/card/pay_other_status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Check the status for a non-NBG credit card payment",
        "operationId": "CardPayOtherStatus",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "The id of your whitelist sandbox",
            "in": "header",
            "name": "whitelist_sandbox_id",
            "required": false,
            "type": "string",
			"x-ms-summary": "White List Sandbox Id"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestOtherCreditCardPayStatusRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseOtherCreditCardPayStatusResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Fetch non-NBG credit card payment status",
        "tags": [
          "Card"
        ]
      }
    },
    "/card/statement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Fetch statements for a specific card",
        "operationId": "CardStatement",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestCardStatementRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCardStatementResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Card statement",
        "tags": [
          "Card"
        ]
      }
    },
    "/cards/fetch": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Fetch information for user's cards",
        "operationId": "CardsFetch",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestCardsFetchRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCardsFetchResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "List of cards",
        "tags": [
          "Cards"
        ]
      }
    },
    "/exchange/accounts_full": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "It returns all the user's exchange accounts.",
        "operationId": "ExchangeAccountsFull",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestAccountsFullRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseAccountFullList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "List of exchange accounts with details",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/exchange/beneficiaries": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns the beneficiaries of a user exchange account based on the given account, which must belong to a user account.",
        "operationId": "ExchangeBeneficiaries",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestCoBeneficiaryRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseAccountBeneficiaryList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Get masked account beneficiaries",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/exchange/details": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "The account should belong to the user (userId) who is asking the question. The account should be 11 digits, the format that the NBG uses to describe an account.",
        "operationId": "ExchangeDetails",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestBalanceRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseBalanceDetails"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Account details",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/exchange/statements": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns the exchange account's transactions of the logged in user based on the given 11-digit account. Transactions are returned based on the dateFrom, dateTo fields.",
        "operationId": "ExchangeStatements",
        "parameters": [
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestStatementRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseTransactionList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Statements",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/files/delete": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Deletes a file.",
        "operationId": "DeleteFile",
        "parameters": [
          {
            "description": "The unique name of your Sandbox",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Delete File Request",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestDeleteFileRequest_"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseDeleteResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Deletes a file",
        "tags": [
          "Files"
        ],
        "x-codegen-request-body-name": "request"
      }
    },
    "/files/details": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieves a file's metadata. This action can be used in order to be informed of a file number of chunks that is separated in order to download them.",
        "operationId": "GetFile",
        "parameters": [
          {
            "description": "The unique name of your Sandbox",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Get File Details Request",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGetFileDetailsRequest_"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseGetFileDetailsResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Retrieves a file's metadata",
        "tags": [
          "Files"
        ],
        "x-codegen-request-body-name": "request"
      }
    },
    "/files/download": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Downloads a file by specifying chunk by chunk. If the file is separated only in one chunk just specify chunkPart 1. If file is separated in more that one chunk, this action should be invoked multiple times.",
        "operationId": "DownloadFile",
        "parameters": [
          {
            "description": "The unique name of your Sandbox",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Get File Request",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGetFileRequest_"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseGetFileResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Downloads a file",
        "tags": [
          "Files"
        ],
        "x-codegen-request-body-name": "request"
      }
    },
    "/files/get_file_list": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "The user file list is returned.",
        "operationId": "GetFileList",
        "parameters": [
          {
            "description": "The unique name of your Sandbox",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Get File List Request",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGetFileListRequest_"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseGetFileListResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Gets file list",
        "tags": [
          "Files"
        ],
        "x-codegen-request-body-name": "request"
      }
    },
    "/files/initiate_upload": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Initiates upload request. The response object contains information about the chunks (and their size) that the initial file should be separated. Moreover the file identifier is returned.",
        "operationId": "InitiateUpload",
        "parameters": [
          {
            "description": "The unique name of your Sandbox",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Upload Initiation Request",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestUploadInitiationRequest_"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseUploadInitiationResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Initiates upload request",
        "tags": [
          "Files"
        ],
        "x-codegen-request-body-name": "request"
      }
    },
    "/files/upload": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Uploads chunk. The upload action is invoked only after the /files/upload-initiation endpoint. The fileId and the chunk size are returned in the /files/upload-initiation endpoint.",
        "operationId": "UploadChunk",
        "parameters": [
          {
            "description": "The unique name of your Sandbox",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Upload Request",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestUploadRequest_"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseUploadResponse"
            }
          },
          "308": {
            "description": "Range"
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Upload chunk",
        "tags": [
          "Files"
        ],
        "x-codegen-request-body-name": "request"
      }
    },
    "/sandbox/{sandbox_id}": {
      "get": {
        "description": "Exports Sandbox data specified by sandbox id.",
        "operationId": "SandboxDownloadSandbox",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
		    "description": "Sandbox",
            "in": "path",
            "name": "sandbox_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Sandbox Id ",
			"x-ms-url-encoding": "single"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseSandbox"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Export a sandbox",
        "tags": [
          "Sandbox"
        ]
      },
      "delete": {
        "description": "Deletes the Sandbox specified by sandbox id.",
        "operationId": "SandboxDeleteSandbox",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
		    "description": "Sandbox",
            "in": "path",
            "name": "sandbox_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Sandbox Id ",
			"x-ms-url-encoding": "single"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseBoolean"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Delete a sandbox",
        "tags": [
          "Sandbox"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "A Sandbox with default data is created. Simply call by providing an \u201cid\u201d as your sandbox id and naming it almost anything you like. Moreover you should provide the name (userId) of the user that is going to be created in the default data. The 'userId' must be the same as the username of the logged in user in the NBG Technology Hub.",
        "operationId": "SandboxCreateSandbox",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
		    "description": "Sandbox Id",
            "in": "path",
            "name": "sandbox_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Sandbox Id ",
			"x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseBoolean"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Create a sandbox",
        "tags": [
          "Sandbox"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Imports sandbox data specified by sandbox id.",
        "operationId": "SandboxUpdateSandbox",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {            
		    "description": "Sandbox Id",
            "in": "path",
            "name": "sandbox_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Sandbox Id ",
			"x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestUpdateSandboxRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseBoolean"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Import a sandbox",
        "tags": [
          "Sandbox"
        ]
      }
    },
    "/sandbox/{sandbox_id}/approve": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "The call is used when the user wants to approve pending transactions made by a corporate user (e.g. B2).",
        "operationId": "SandboxApprove",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
		    "description": "Sandbox",
            "in": "path",
            "name": "sandbox_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Sandbox Id ",
			"x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SandboxApproveTransactionsRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseBoolean"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Approve pending transactions",
        "tags": [
          "Sandbox"
        ]
      }
    },
    "/sandbox/{sandbox_id}/customdata": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "The call is used to fill the sandbox data model with data given by the user to the body request. The sandbox must have been created by \"Create sandbox\" and in case it does not exist, it returns an exception. Each time this endpoint is called, the sandbox will be emptied and filled with user data.",
        "operationId": "SandboxCustomData",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
		    "description": "Sandbox",
            "in": "path",
            "name": "sandbox_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Sandbox Id ",
			"x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SandboxCustomDataRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseSandbox"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Import custom data",
        "tags": [
          "Sandbox"
        ]
      }
    },
    "/transfers/add_user_whitelist_actions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Endpoint that adds a new exception for a user. The WhiteListActionId field matches the whiteListActionId one from the Get available whitelist actions call. The whiteListActionField field matches an ActionField from the AvailableWhitelistActions and or the UserWhiteListActionField models. For a whitelisted account the value field is an account(request example)**Supported Operators:**-- Equal-- LessThan-- LessThanOrEqual-- GreaterThan-- GreaterThanOrEqual",
        "operationId": "TransfersAddUserWhitelistActions",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestAddUserWhiteListActionsPayload"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddWhiteListResponsePayload"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Add User Whitelist action",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/calculate_expences": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns the expenses for a transfer",
        "operationId": "TransfersCalculateExpences",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestTransferExpencesComissionsRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseTransferExpencesComissionsResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Expenses",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/calculate_massive_expences": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Calculates and returns the commission for a massive transfer. In case of error, the property 'hasErrors' will be true and the property 'error' will contain an explanation in each transfer record Possible errors are any combination of IBAN",
        "operationId": "TransfersCalculateMassiveExpences",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestMassiveTransfersExpensesRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMassiveTransfersExpensesResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Massive transfers expenses",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/cancel_remittance_gpp": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Cancels a remittance",
        "operationId": "TransfersCancelRemittanceGpp",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestAmountTransferCancelDomRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseAmountTransferCancelDomResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Cancel",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/duplicate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "An indication whether the transfer was made again on the same day.",
        "operationId": "TransfersDuplicate",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericTransferRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseDuplicateQueryResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Check for duplicate transfer",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/genericTransferOptions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns transfer options for transfers to 'third parties'. For transfers to domestic Banks an IBAN must be provided (ETE is excluded). For Transfers to International Banks provide either an IBAN or an Account number.",
        "operationId": "TransfersGenericTransferOptions",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "(Only for sandbox.) User role. Set to \"true\" for Corporate Users",
            "in": "header",
            "name": "CORPORATE",
            "required": false,
            "type": "string",
            "x-ms-summary": "Used for Corporate Users"
          },
          {
            "description": "(Only for sandbox.) Authorization level of corporate user. Select from values \"A\", \"B\" or \"C\"",
            "in": "header",
            "name": "authorization_level",
            "required": false,
            "type": "string",
            "x-ms-summary": "Authorization level"
          },
          {
            "description": "(Only for sandbox.) Number of approvals required for corporate user. Select from values \"1\", \"2\" or \"3\"",
            "in": "header",
            "name": "number_of_approvals",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of Approvals"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericTransferOptionsRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseGenericTransferOptionsResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Transfer Options",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/generic_transfer": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns transfer details",
        "operationId": "TransfersGenericTransfer",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "(**Only for sandbox**) User role. Set to \"true\" for Corporate Users",
            "in": "header",
            "name": "CORPORATE",
            "required": false,
            "type": "string",
            "x-ms-summary": "For Corporate Users"
          },
          {
            "description": "(**Only for sandbox**) Authorization level of corporate user. Select from values \"A\", \"B\" or \"C\"",
            "in": "header",
            "name": "authorization_level",
            "required": false,
            "type": "string",
            "x-ms-summary": "Authorization level"
          },
          {
            "description": "(**Only for sandbox**) Number of approvals required for corporate user. Select from values \"1\", \"2\" or \"3\"",
            "in": "header",
            "name": "number_of_approvals",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of Approvals"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericTransferRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseGenericTransferResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Transfer",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/get_available_whitelist_actions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "GetAvailableWhitelistActions",
        "description": "Contains the pre-defined WhiteList Actions. Using this endpoint the user is able to retrieve a list with all the available White List Actions as well as the rules fields that are applicable to each type of action. The rules determine whether a user will be allowed to set an exception for that type of action.",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetAvailableWhitelistActionsResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Get available whitelist actions",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/get_massPayments_file_details": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns a list of Details from a Mass Payment file. Submit a value in the field transId found in the response data of get_massPayments_files.",
        "operationId": "MassPaymentsFileDetails",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "The unique name of your Sandbox",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Mass Payments Files Request",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetMassPaymentsFileDetailsRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetMassPaymentsFilesAllResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Retrieve Details of Mass Payment file",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/get_massPayments_files": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns a list of Mass Payments files of the user. In more detail, you can submit the from-to dates in the request body  and a status to narrow your results. Alternatively you can request all the files by providing a Date value and a status with an empty string as value.",
        "operationId": "MassPaymentsFiles",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "The unique name of your Sandbox",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Mass Payments Files Request",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetMassPaymentsFilesRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetMassPaymentsFilesAllResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Retrieve Mass Payments files",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/get_user_whitelist_actions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Informational endpoint that will respond with the available exceptions set by the user. For each Field its ID and the corresponding Application ID are also included. If a specific action is identified, only those (exceptions) related to this action are returned. If the pumping of the inactive exceptions is not determined, only the active ones are returned.",
        "operationId": "TransfersGetUserWhitelistActions",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetUserWhiteListActionsRequestPayload"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetUserWhitelistActionsResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Get user whitelist actions",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/massive": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns massive transfer details",
        "operationId": "TransfersMassive",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestMassiveTransfersRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMassiveTransfersResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Massive money for domestic transfers",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/massive_status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns the status of a massive transfer (e.g. if it has succeeded/failed)",
        "operationId": "TransfersMassiveStatus",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestMassiveTransfersStatusRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMassiveTransfersStatusResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Massive money transfers status",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/pay_file_credit": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Execute multiple transactions from a file. Accepted file formats**:** **XML**, **CSV**.",
        "operationId": "PayFileCredit",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "The unique name of your Sandbox",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Pay Credit File Request",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RequestPayFileCreditRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponsePayFileCreditResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Execute Mass Transfers file",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/process_file": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "If the api call Transfers/validate_file returns that the file is valid, then the file is converted into a list of Transfers.",
        "operationId": "TransfersProcessFile",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestVerifyRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseProcessResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Converts the file into a list of transfers",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/remittance_categories": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns the remittance categories ",
        "operationId": "TransfersRemittanceCategories",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCodeDescriptionList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Remittance categories",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/remittance_execution_types": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns the foreign remittance execution types",
        "operationId": "TransfersRemittanceExecutionTypes",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCodeDescriptionList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Remittance execution types",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/remittance_imported_goods": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns the remittance of imported goods",
        "operationId": "TransfersRemittanceImportedGoods",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestImportedGoodsRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCodeDescriptionList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Remittance imported goods",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/remittance_query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns information about a remittance",
        "operationId": "TransfersRemittanceQuery",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestRemittanceQueryRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseRemittanceQueryResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Remittance information",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/remittance_types": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns all the possible remittance types ",
        "operationId": "TransfersRemittanceTypes",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCodeDescriptionList"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Remittance types",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/remove_user_whitelist_action": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Endpoint that removes an exception for a user. By selecting the exception that the user wants to cancel, the exception is considered inactive.",
        "operationId": "TransfersRemoveUserWhitelistAction",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveWhiteListBaseRequestPayload"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RemoveWhiteListResponsePayload"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Remove User Whitelist action",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/retrieve_massTransfers_outcome_credit": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieves the outcome of a list of transfers that were submitted as a file. User can retrieve the outcome file as a  **CSV**, **JSON**, **XML** or **PDF** file format.",
        "operationId": "RetrieveOutcomeFileCredit",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "The unique name of your Sandbox",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Retrieve Outcome File Request",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestResultPayCreditWithFileRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseResultPayCreditWithFileResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Retrieve Mass Transfers Outcome",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/validate_file": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "The validation is the same with the one internet banking does before the user uploads the file (typing, valid IBAN, reasoning format, etc.). If an entry contains an error, an exception will be returned with the error.",
        "operationId": "TransfersValidateFile",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestVerifyRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseValidateResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Checks validation of file csv or xml",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/verify_file_credit": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validates a file that contains data for multiple transfers. Accepted file formats**:** **XML**, **CSV**.",
        "operationId": "VerifyFileCredit",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "The unique name of your Sandbox",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "description": "Validate Credit File Request",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RequestVerifyFileCreditRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseVerifyFileCreditResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "Mass Transfers file validation",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/user/available_limit_amounts": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Finds user\u2019s available amount limits (e.g. ATM cash withdrawals)",
        "operationId": "UserAvailableLimitAmounts",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseCCAvailableAmountResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "User's money limits",
        "tags": [
          "User"
        ]
      }
    },
    "/user/bank": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Finds logged in user\u2019s bank info",
        "operationId": "UserBank",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestGenericRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseBankResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "User's bank info",
        "tags": [
          "User"
        ]
      }
    },
    "/user/current": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Finds logged in user info (e.g. userId)",
        "operationId": "UserCurrent",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid "
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RequestGenericRequest_"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseGetCurrentUserResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "User's info",
        "tags": [
          "User"
        ]
      }
    },
    "/user/surname": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Finds user\u2019s basic info (e.g. name, address etc)",
        "operationId": "UserSurname",
        "parameters": [
          {
            "description": "Client ID",
            "in": "header",
            "name": "Client-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Client Id "
          },
          {
            "description": "A guid that uniquely identifies your request",
            "in": "header",
            "name": "Request-Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "A random Guid"
          },
          {
            "description": "Sandbox ID",
            "in": "header",
            "name": "sandbox_id",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sandbox Id "
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestFindSurnameRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseFindSurnameResponse"
            }
          },
          "default": {
            "description": "Error Response"
          }
        },
        "summary": "User's basic info",
        "tags": [
          "User"
        ]
      }
    }
  },
  "definitions": {
    "AccountBeneficiary": {
      "properties": {
        "name": {
          "description": "Cobeneficiary name",
          "type": "string"
        },
        "order": {
          "description": "Cobeneficiary order in the list",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountFull": {
      "properties": {
        "account": {
          "description": "The NBG account number (e.g. 11 digits)",
          "type": "string"
        },
        "accountType": {
          "description": "Code for account type, e.g. <code>10</code> for ...",
          "type": "string"
        },
        "alias": {
          "description": "Friendly name",
          "type": "string"
        },
        "allowConnect": {
          "description": "Connection indicator",
          "type": "string"
        },
        "allowCredit": {
          "description": "Account credit indicator",
          "type": "string"
        },
        "allowDebit": {
          "description": "Account debit indicator",
          "type": "string"
        },
        "availableBalance": {
          "description": "Available balance",
          "format": "double",
          "type": "number"
        },
        "currency": {
          "description": "Currency, 3-letter code , e.g. <code>EUR</code>",
          "type": "string"
        },
        "features": {
          "$ref": "#/definitions/AccountFull_features"
        },
        "flag": {
          "description": "TBD",
          "type": "string"
        },
        "iban": {
          "description": "Account IBAN.",
          "type": "string"
        },
        "indicators": {
          "description": "Account other indicators",
          "type": "string"
        },
        "isOwnAccount": {
          "description": "Whether the account belongs to the user",
          "type": "boolean"
        },
        "ledgerAccount": {
          "description": "Special account",
          "type": "string"
        },
        "ledgerBalance": {
          "description": "Ledger balance",
          "format": "double",
          "type": "number"
        },
        "newMoneyBalance": {
          "description": "Available balance for transfer abroad",
          "format": "double",
          "type": "number"
        },
        "numberOfMandates": {
          "description": "Number of mandates",
          "format": "int32",
          "type": "integer"
        },
        "overdraftLimit": {
          "description": "Overdraft limit",
          "format": "double",
          "type": "number"
        },
        "product": {
          "description": "Account product code",
          "type": "string"
        },
        "serialNo": {
          "description": "Just the serial number of this entry",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountFull_features": {
      "properties": {
        "beneficiaries": {
          "description": "Cobeneficiaries",
          "type": "boolean"
        },
        "cheques": {
          "description": "Cheques",
          "type": "boolean"
        },
        "mandates": {
          "description": "Mandates",
          "type": "boolean"
        },
        "otherInfo": {
          "description": "Other information",
          "type": "boolean"
        },
        "rates": {
          "description": "Rates",
          "type": "boolean"
        },
        "statement": {
          "description": "Statements",
          "type": "boolean"
        },
        "transfer": {
          "description": "Transfer",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AddWhiteListResponse": {
      "additionalProperties": false,
      "properties": {
        "Id": {
          "description": "Id of the user whitelist that was created/updated",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "succeeded": {
          "description": "Success Indication",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AddWhiteListResponsePayload": {
      "additionalProperties": false,
      "example": {
        "executionTime": 0,
        "payload": {
          "id": "0b019785-4a0f-4e02-9ec0-279ca5a78f4d",
          "succeeded": true
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/AddWhiteListResponse"
        }
      },
      "type": "object"
    },
    "AllHoldingsList": {
      "properties": {
        "allHoldings": {
          "items": {
            "$ref": "#/definitions/HoldingDetails"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AmountTransferCancelDomResponse": {
      "properties": {
        "account": {
          "description": "Account",
          "type": "string"
        },
        "accountingBalance": {
          "description": "Accounting balance",
          "format": "double",
          "type": "number"
        },
        "amount": {
          "description": "Amount",
          "format": "double",
          "type": "number"
        },
        "availableBalance": {
          "description": "Available balance",
          "format": "double",
          "type": "number"
        },
        "remittanceNumber": {
          "description": "Remittance number",
          "type": "string"
        },
        "tanCheck": {
          "description": "The confirmation code of the tanNumber",
          "type": "string"
        },
        "transactionDate": {
          "description": "Transaction date",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BalanceDetails": {
      "properties": {
        "accType": {
          "description": "Account type code (e.g.\"3003\")",
          "type": "string"
        },
        "account": {
          "description": "The NBG account number (e.g. 11 digits).",
          "type": "string"
        },
        "accountType": {
          "description": "Code for account type, e.g. <code>10</code> for ...",
          "type": "string"
        },
        "alias": {
          "description": "Friendly name",
          "type": "string"
        },
        "allowConnect": {
          "description": "Connection indicator",
          "type": "string"
        },
        "allowCredit": {
          "description": "Account credit indicator (A two digits string XY where if X=1 then credit is allowed from the user  and if \u00ce\u00a5=1 then credit is allowed from a third user)",
          "type": "string"
        },
        "allowDebit": {
          "description": "Account debit indicator(if 1 debit is allowed)",
          "type": "string"
        },
        "availableBalance": {
          "description": "Available balance",
          "format": "double",
          "type": "number"
        },
        "availableLimitAmount": {
          "description": "Available overdraft amount",
          "format": "double",
          "type": "number"
        },
        "chequeReservation": {
          "description": "Reservation from cheques",
          "format": "double",
          "type": "number"
        },
        "createDate": {
          "description": "Account creation date",
          "format": "date-time",
          "type": "string"
        },
        "currency": {
          "description": "Currency, 3-letter code , e.g. <code>EUR</code>",
          "type": "string"
        },
        "deptReservation": {
          "description": "Other reservation",
          "format": "double",
          "type": "number"
        },
        "excessLimitAmount": {
          "description": "Overdraft limit amount exceeded",
          "format": "double",
          "type": "number"
        },
        "expirationDate": {
          "description": "Account expiration date",
          "format": "date-time",
          "type": "string"
        },
        "features": {
          "$ref": "#/definitions/AccountFull_features"
        },
        "freeChequeAmnt": {
          "description": "Amount free from cheques",
          "format": "double",
          "type": "number"
        },
        "iban": {
          "description": "Nicely formatted IBAN.",
          "type": "string"
        },
        "indicators": {
          "description": "Other indicators",
          "type": "string"
        },
        "interestAccrued": {
          "description": "Accrued interest",
          "format": "double",
          "type": "number"
        },
        "interestPeriod": {
          "description": "Interest period",
          "type": "string"
        },
        "interestRate": {
          "description": "Interest rate",
          "format": "double",
          "type": "number"
        },
        "interestScale": {
          "description": "Interest rate scale",
          "type": "string"
        },
        "irisAccount": {
          "description": "IRIS account number (e.g. 4370140994)",
          "type": "string"
        },
        "irisBalance": {
          "description": "IRIS account balance",
          "format": "double",
          "type": "number"
        },
        "isOwnAccount": {
          "description": "Whether the account belongs to the user",
          "type": "boolean"
        },
        "lastTransactionDate": {
          "description": "Last transaction date",
          "format": "date-time",
          "type": "string"
        },
        "ledgerAccount": {
          "description": "Special account",
          "type": "string"
        },
        "ledgerBalance": {
          "description": "Ledger balance",
          "format": "double",
          "type": "number"
        },
        "mandatesNumber": {
          "description": "Number of mandates",
          "format": "int32",
          "type": "integer"
        },
        "newMoneyBalance": {
          "description": "Available balance for transfer abroad",
          "format": "double",
          "type": "number"
        },
        "overdraftLimit": {
          "description": "Overdraft limit",
          "format": "double",
          "type": "number"
        },
        "product": {
          "description": "Account product code",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BankData": {
      "properties": {
        "bankAddress": {
          "description": "Bank's address (e.g. 3-5 RUE PAUL DUEZ)",
          "type": "string"
        },
        "bankBic": {
          "description": "Bank's BIC (e.g. PSSTFRPPLIL)",
          "type": "string"
        },
        "bankBranch": {
          "description": "Bank's branch",
          "type": "string"
        },
        "bankCity": {
          "description": "Bank's city (e.g. LILLE)",
          "type": "string"
        },
        "bankCountry": {
          "description": "Bank's country (e.g. FRANCE)",
          "type": "string"
        },
        "bankTitle": {
          "description": "Bank's title (e.g. LA BANQUE POSTALE)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BankResponse": {
      "properties": {
        "bankBic": {
          "description": "Bank's BIC (e.g. ETHNGRAA)",
          "type": "string"
        },
        "bankTitle": {
          "description": "Bank's title",
          "type": "string"
        },
        "code": {
          "description": "Bank's code",
          "type": "string"
        },
        "name": {
          "description": "Bank name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CCAvailableAmountResponse": {
      "properties": {
        "domesticRemittance": {
          "description": "Domestic Remittance limit",
          "format": "double",
          "type": "number"
        },
        "foreignRemittance": {
          "description": "Foreign Remittance limit",
          "format": "double",
          "type": "number"
        },
        "lastCalcDate": {
          "format": "date-time",
          "type": "string"
        },
        "newCash": {
          "format": "double",
          "type": "number"
        },
        "newMoney": {
          "format": "double",
          "type": "number"
        },
        "newMoneyEpend": {
          "format": "double",
          "type": "number"
        },
        "newMoneyPerc": {
          "format": "double",
          "type": "number"
        },
        "nextCalcDate": {
          "format": "date-time",
          "type": "string"
        },
        "withdraw": {
          "description": "Withdraw limit",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CachableDataInfo": {
      "properties": {
        "notes": {
          "description": "Extra notes about execution process",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "source": {
          "description": "The source where the data was retrieved from",
          "type": "string"
        },
        "strategy": {
          "description": "The Strategy that was used to retrieve data",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Card": {
      "properties": {
        "alias": {
          "description": "Card friendly name",
          "type": "string"
        },
        "color": {
          "description": "Card color (e.g. wearables)",
          "type": "string"
        },
        "creditBalance": {
          "description": "Credit balance",
          "format": "double",
          "type": "number"
        },
        "creditLimit": {
          "description": "creditLimit",
          "format": "double",
          "type": "number"
        },
        "currency": {
          "description": "currency",
          "type": "string"
        },
        "delayAmount": {
          "description": "delayAmount",
          "type": "number"
        },
        "delayDate": {
          "description": "delayDate",
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "description": "expirationDate",
          "format": "date-time",
          "type": "string"
        },
        "features": {
          "$ref": "#/definitions/Card_features"
        },
        "futureDueAmount": {
          "description": "futureDueAmount",
          "format": "double",
          "type": "number"
        },
        "issuedBy": {
          "description": "Card issuer",
          "type": "string"
        },
        "kind": {
          "description": "Card kind (e.g. \"\u00ce\u0161\u00ce\u2018\u00ce\u00a1\u00ce\u00a4\u00ce\u2018\")",
          "type": "string"
        },
        "ledgerBalance": {
          "description": "ledgerBalance",
          "format": "double",
          "type": "number"
        },
        "limitATM": {
          "description": "limitATM",
          "format": "double",
          "type": "number"
        },
        "limitINT": {
          "description": "limitINT",
          "format": "double",
          "type": "number"
        },
        "limitPOS": {
          "description": "limitPOS",
          "format": "double",
          "type": "number"
        },
        "microtagType": {
          "description": "\u00ce\u0153icrotag",
          "type": "string"
        },
        "minimumPayment": {
          "description": "minimumPayment",
          "format": "double",
          "type": "number"
        },
        "number": {
          "description": "Card number",
          "type": "string"
        },
        "paymentDate": {
          "description": "paymentDate",
          "format": "date-time",
          "type": "string"
        },
        "productName": {
          "description": "Card product name (e.g. VISA PREPAID)",
          "type": "string"
        },
        "statementAddress": {
          "description": "statementAddress",
          "type": "string"
        },
        "statementAddressCity": {
          "description": "statementAddressCity",
          "type": "string"
        },
        "statementAmount": {
          "description": "statementAmount",
          "format": "double",
          "type": "number"
        },
        "statementDate": {
          "description": "statementDate",
          "format": "date-time",
          "type": "string"
        },
        "statementDeliver": {
          "description": "statementDeliver",
          "type": "string"
        },
        "statementEmail": {
          "description": "statementEmail",
          "format": "email",
          "type": "string"
        },
        "status": {
          "description": "status",
          "type": "string"
        },
        "type": {
          "description": "Card type (e.g. PCV)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardDetailsResponse": {
      "properties": {
        "card": {
          "$ref": "#/definitions/Card"
        }
      },
      "type": "object"
    },
    "CardStatementResponse": {
      "properties": {
        "cardNumber": {
          "description": "Card number",
          "type": "string"
        },
        "creditLimit": {
          "description": "Card credit limit",
          "format": "double",
          "type": "number"
        },
        "endLedgerBalance": {
          "description": "End Ledger Balance",
          "format": "double",
          "type": "number"
        },
        "endTimestamp": {
          "description": "End date",
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "description": "Card expiration date",
          "format": "date-time",
          "type": "string"
        },
        "finalLedgerBalance": {
          "description": "Final Ledger Balance",
          "format": "double",
          "type": "number"
        },
        "productName": {
          "description": "Card product (e.g. VISA, MASTERCARD)",
          "type": "string"
        },
        "responseCode": {
          "description": "Response Code",
          "type": "string"
        },
        "responseMessage": {
          "description": "Response Message",
          "type": "string"
        },
        "startLedgerBalance": {
          "description": "Start Ledger Balance",
          "format": "double",
          "type": "number"
        },
        "startTimestamp": {
          "description": "Start date",
          "format": "date-time",
          "type": "string"
        },
        "transactions": {
          "description": "Card list of transactions",
          "items": {
            "$ref": "#/definitions/CardTransaction"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CardTransaction": {
      "properties": {
        "amount": {
          "description": "Transaction's amount",
          "format": "double",
          "type": "number"
        },
        "cardNumber": {
          "description": "Transaction's card number",
          "type": "string"
        },
        "creditDebitFlag": {
          "description": "If it is Credit\"or \"Debit\" transaction",
          "type": "string"
        },
        "ledgerBalance": {
          "description": "Ledger balance",
          "format": "double",
          "type": "number"
        },
        "reasonText": {
          "description": "Transaction's reason (e.g. Amazon Marketplace)",
          "type": "string"
        },
        "serialNum": {
          "description": "List serial number",
          "type": "string"
        },
        "tranDate": {
          "description": "Transaction's date",
          "format": "date-time",
          "type": "string"
        },
        "transactionDateTime": {
          "description": "Transaction's date and time",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Card_features": {
      "properties": {
        "canBeCanceled": {
          "description": "Card can be cancelled",
          "type": "boolean"
        },
        "canBeUpdated": {
          "description": "Card can be updated",
          "type": "boolean"
        },
        "hasAccounts": {
          "description": "Card has accounts",
          "type": "boolean"
        },
        "hasAlerts": {
          "description": "Card has alerts",
          "type": "boolean"
        },
        "hasLimitSet": {
          "description": "Card has a set limit",
          "type": "boolean"
        },
        "hasOtherInfo": {
          "description": "Card has other information",
          "type": "boolean"
        },
        "quickCredit": {
          "$ref": "#/definitions/Card_features_quickCredit"
        },
        "supportsQuickDebit": {
          "description": "Card supports Quick Debit",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Card_features_quickCredit": {
      "properties": {
        "accountCurrency": {
          "description": "Currency, 3-letter code, e.g. <code>EUR</code>",
          "type": "string"
        },
        "canBeInactive": {
          "description": "Card can be inactive",
          "type": "boolean"
        },
        "hasComission": {
          "description": "Card has commission",
          "type": "boolean"
        },
        "isAmountRetreived": {
          "description": "True if the amount is retrieved",
          "type": "boolean"
        },
        "isDeferred": {
          "description": "If <code>true</code> this transaction is deferred.",
          "type": "boolean"
        },
        "supportsQuickCredit": {
          "description": "Card supports Quick Credit",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CardsFetchResponse": {
      "properties": {
        "cards": {
          "items": {
            "$ref": "#/definitions/Card"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CodeDescription": {
      "properties": {
        "code": {
          "description": "Code",
          "type": "string"
        },
        "description": {
          "description": "Code's description",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommissionInfo": {
      "additionalProperties": false,
      "description": "Commission information",
      "properties": {
        "agentCommission": {
          "description": "Agent commission",
          "example": 0,
          "format": "double",
          "type": "number"
        },
        "bankTitle": {
          "description": "Bank's title",
          "type": "string"
        },
        "depositor": {
          "description": "Depositor",
          "type": "string"
        },
        "deptExpences": {
          "description": "Dept expenses",
          "example": 0,
          "format": "double",
          "type": "number"
        },
        "exchangeProfit": {
          "description": "Exchange profit",
          "example": 0,
          "format": "double",
          "type": "number"
        },
        "nbgCommission": {
          "description": "NBG commission",
          "example": 0.2,
          "format": "double",
          "type": "number"
        },
        "nonStpExpences": {
          "description": "Non stp expenses",
          "example": 0,
          "format": "double",
          "type": "number"
        },
        "otherBankCommission": {
          "description": "Other bank commission",
          "example": 0,
          "format": "double",
          "type": "number"
        },
        "sumCommission": {
          "description": "Sum commission",
          "example": 0,
          "format": "double",
          "type": "number"
        },
        "urgentExpences": {
          "description": "Urgent expenses",
          "example": 0,
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreditCardOtherPayResponse": {
      "properties": {
        "accountingBalance": {
          "description": "Accounting balance",
          "format": "double",
          "type": "number"
        },
        "amount": {
          "description": "Payment amount",
          "format": "double",
          "type": "number"
        },
        "availableBalance": {
          "description": "Account available balance after payment",
          "format": "double",
          "type": "number"
        },
        "bankCode": {
          "description": "Bank code",
          "type": "string"
        },
        "beneficiary": {
          "description": "Name of beneficiary",
          "type": "string"
        },
        "comissionDias": {
          "description": "Dias commission amount",
          "format": "double",
          "type": "number"
        },
        "comissionEte": {
          "description": "ETE commission amount",
          "format": "double",
          "type": "number"
        },
        "creditCardNumber": {
          "description": "Credit card number",
          "type": "string"
        },
        "creditCardPublishBank": {
          "description": "Credit card's bank",
          "type": "string"
        },
        "debitAccount": {
          "description": "Account that was debited",
          "type": "string"
        },
        "deferred": {
          "$ref": "#/definitions/DeferredRequest"
        },
        "isDeferred": {
          "description": "If <code>true</code> this transaction is deferred.",
          "type": "boolean"
        },
        "orderNo": {
          "description": "Transaction identifier",
          "type": "string"
        },
        "tanCheck": {
          "description": "The confirmation code of the tanNumber",
          "type": "string"
        },
        "transactionDate": {
          "description": "Date of the transaction",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditCardPaymentResponse": {
      "properties": {
        "amount": {
          "description": "Payment amount",
          "format": "double",
          "type": "number"
        },
        "availableBalance": {
          "description": "Account available balance after payment",
          "format": "double",
          "type": "number"
        },
        "creditCardNumber": {
          "description": "Number of credited card",
          "type": "string"
        },
        "debitAccount": {
          "description": "Account that was debited",
          "type": "string"
        },
        "deferred": {
          "$ref": "#/definitions/DeferredRequest"
        },
        "isDeferred": {
          "description": "If <code>true</code> this transaction is deferred.",
          "type": "boolean"
        },
        "tanCheck": {
          "description": "The confirmation code of the tanNumber",
          "type": "string"
        },
        "transactionDate": {
          "description": "Date of the transaction",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditTransferDetails": {
      "properties": {
        "account": {
          "description": "User's account",
          "type": "string"
        },
        "names": {
          "description": "Names",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Currency": {
      "properties": {
        "code": {
          "description": "Currency code(e.g. 070)",
          "type": "string"
        },
        "literal": {
          "description": "Currency symbol  (e.g. EUR)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DebitCardAccount": {
      "properties": {
        "account": {
          "description": "Account number",
          "type": "string"
        },
        "accountType": {
          "description": "Account type",
          "type": "string"
        },
        "accountTypeB": {
          "description": "Account type B",
          "format": "double",
          "type": "number"
        },
        "availableBalance": {
          "description": "Available balance",
          "format": "double",
          "type": "number"
        },
        "currency": {
          "description": "Account currency",
          "type": "string"
        },
        "description": {
          "description": "account description",
          "type": "string"
        },
        "expirationOverdraftDate": {
          "description": "Expiration overdraft date",
          "format": "date-time",
          "type": "string"
        },
        "freeChequeAmount": {
          "description": "Free check amount",
          "format": "double",
          "type": "number"
        },
        "iban": {
          "description": "Account IBAN",
          "type": "string"
        },
        "isConnected": {
          "description": "Is connected",
          "type": "string"
        },
        "ledgerBalance": {
          "description": "Ledger balance",
          "format": "double",
          "type": "number"
        },
        "maxSequence": {
          "description": "Max sequence",
          "format": "int32",
          "type": "integer"
        },
        "overdraftLimit": {
          "description": "Overdraft limit",
          "format": "double",
          "type": "number"
        },
        "sequence": {
          "description": "Sequence",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "Type",
          "type": "string"
        },
        "updTimeStamp": {
          "description": "Update timestamp",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DebitCardAccountCms": {
      "properties": {
        "accountAvailableBalance": {
          "description": "Available balance",
          "format": "double",
          "type": "number"
        },
        "accountCurrencyISO": {
          "description": "Account currency (ISO)",
          "type": "string"
        },
        "accountDescription": {
          "description": "Account description",
          "type": "string"
        },
        "accountFreeChequeLimit": {
          "description": "Free cheque limit",
          "format": "double",
          "type": "number"
        },
        "accountIban": {
          "description": "Account IBAN",
          "type": "string"
        },
        "accountIsConnectedFlag": {
          "description": "Account is connected",
          "type": "string"
        },
        "accountLedgerBalance": {
          "description": "Ledger balance",
          "format": "double",
          "type": "number"
        },
        "accountNumber": {
          "description": "Account number (11 digit NBG)",
          "type": "string"
        },
        "accountOverdraftExpirationDate": {
          "description": "Overdraft expiration date",
          "type": "string"
        },
        "accountOverdraftLimit": {
          "description": "Overdraft limit",
          "format": "double",
          "type": "number"
        },
        "accountPrimaryFlag": {
          "description": "Account primary flag",
          "type": "string"
        },
        "accountProductDescirption": {
          "description": "Account product description",
          "type": "string"
        },
        "accountSequenceNumber": {
          "description": "Account sequence number",
          "type": "string"
        },
        "accountType": {
          "description": "Account type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DebitCardAccountCmsRequest": {
      "example": {
        "header": {
          "ID": "86e18850-17c8-497e-b42f-0e46214988ee",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "cardNumber": "4589120000000001",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/DebitCardAccountCmsRequestPayload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "DebitCardAccountCmsRequestPayload": {
      "properties": {
        "cardNumber": {
          "description": "Card number",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "cardNumber",
        "userId"
      ],
      "type": "object"
    },
    "DebitCardConnectedAccountCmsResponse": {
      "properties": {
        "accounts": {
          "description": "Accounts",
          "items": {
            "$ref": "#/definitions/DebitCardAccount"
          },
          "type": "array"
        },
        "connectedAccountsList": {
          "description": "List of connected accounts",
          "items": {
            "$ref": "#/definitions/DebitCardAccountCms"
          },
          "type": "array"
        },
        "dataStoreTime": {
          "description": "Data store time",
          "format": "date-time",
          "type": "string"
        },
        "extraInfo": {
          "$ref": "#/definitions/CachableDataInfo"
        },
        "responseCode": {
          "description": "Response code",
          "type": "string"
        },
        "responseMessage": {
          "description": "Response message",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DebitCardConnectedAccountCmsResponse_": {
      "example": {
        "executionTime": 0,
        "payload": {
          "accounts": [
            {
              "account": "13775498226",
              "accountType": "10",
              "accountTypeB": 0,
              "availableBalance": 2601.35,
              "currency": "EUR",
              "description": "1377549822",
              "expirationOverdraftDate": "0001-01-01T00:00:00Z",
              "freeChequeAmount": 0,
              "iban": "GR8601101370000013775498226",
              "ledgerBalance": 2938.26,
              "maxSequence": 0,
              "overdraftLimit": 0,
              "sequence": 0,
              "type": "1",
              "updTimeStamp": "0001-01-01T00:00:00Z"
            }
          ],
          "connectedAccountsList": [
            {
              "accountAvailableBalance": 2601.35,
              "accountCurrencyISO": "EUR",
              "accountDescription": "1377549822",
              "accountFreeChequeLimit": 0,
              "accountIban": "GR8601101370000013775498226",
              "accountLedgerBalance": 2938.26,
              "accountNumber": "13775498226",
              "accountOverdraftExpirationDate": "0001-01-01T00:00:00.000Z",
              "accountOverdraftLimit": 0,
              "accountPrimaryFlag": "Y",
              "accountProductDescirption": "\u0395\u0398\u039d\u0399\u039a\u0397 \u03a0\u0391\u0399\u0394\u03a9\u039d",
              "accountSequenceNumber": "1.0",
              "accountType": "10"
            }
          ],
          "responseCode": "0",
          "responseMessage": "          "
        }
      },
      "properties": {
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "payload": {
          "$ref": "#/definitions/DebitCardConnectedAccountCmsResponse"
        }
      },
      "type": "object"
    },
    "DeferredDetails": {
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeferredHistoryExecution": {
      "additionalProperties": false,
      "properties": {
        "executionStatus": {
          "type": "string"
        },
        "executionTime": {
          "format": "date-time",
          "type": "string"
        },
        "externalId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeferredRequest": {
      "properties": {
        "deferredDate": {
          "description": "Date for the deferred transaction or the first occurrence of the deferred transaction.",
          "format": "date-time",
          "type": "string"
        },
        "deferredFrequency": {
          "description": "Period (not frequency) for deferred transfer.",
          "format": "int32",
          "type": "integer"
        },
        "deferredName": {
          "description": "Name of the deferred transaction.",
          "type": "string"
        },
        "deferredTotalPayments": {
          "description": "How many times will the deferred transfer trigger.",
          "format": "int32",
          "type": "integer"
        },
        "isDeferred": {
          "description": "If <code>true</code> this transaction is deferred.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DeferredTransactionInfo": {
      "additionalProperties": false,
      "properties": {
        "amount": {
          "description": "Amount",
          "format": "double",
          "type": "number"
        },
        "cancelationDate": {
          "description": "Cancellation Date",
          "format": "date-time",
          "type": "string"
        },
        "channel": {
          "description": "Channel",
          "example": "REM_MASS_H",
          "type": "string"
        },
        "createdDate": {
          "description": "Created Date",
          "example": "2020-10-06T16:44:33.66363+03:00",
          "format": "date-time",
          "type": "string"
        },
        "creditAccount": {
          "description": "Credit Account",
          "type": "string"
        },
        "debitAccount": {
          "description": "Debit Account",
          "example": "67890123456",
          "type": "string"
        },
        "description": {
          "description": "Description of file",
          "example": "\u0391\u03a1\u03a7\u0395\u0399\u039f MassiveTransfers_ETE.csv",
          "type": "string"
        },
        "details": {
          "description": "Details",
          "items": {
            "$ref": "#/definitions/DeferredDetails"
          },
          "type": "array"
        },
        "executionDate": {
          "description": "Execution Date",
          "example": "2020-10-06T00:00:00+03:00",
          "format": "date-time",
          "type": "string"
        },
        "frequency": {
          "description": "Payment frequency",
          "example": 99,
          "format": "int32",
          "type": "integer"
        },
        "historical": {
          "description": "Historical",
          "items": {
            "$ref": "#/definitions/DeferredHistoryExecution"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of file",
          "example": "MassiveTransfers_ETE.csv",
          "type": "string"
        },
        "rowsNum": {
          "description": "Rows Number",
          "example": 3,
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "description": "Status (0:Pending, 1:Completed, 2:Failed, 3:Cancelled by user, 4:Partially executed)",
          "example": "0",
          "type": "string"
        },
        "totalAmount": {
          "description": "Total Amount",
          "example": 60,
          "format": "double",
          "type": "number"
        },
        "totalPayments": {
          "description": "Total payments",
          "example": 1,
          "format": "int32",
          "type": "integer"
        },
        "transId": {
          "description": "Registered Id upon completion",
          "example": "8396555922",
          "type": "string"
        },
        "trnId": {
          "description": "Transaction Id",
          "example": "8396555922426550045",
          "type": "string"
        },
        "trnNo": {
          "description": "Transaction Number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DuplicateQueryResponse": {
      "properties": {
        "amount": {
          "description": "Transaction amount",
          "format": "double",
          "type": "number"
        },
        "beneficiaryBic": {
          "description": "BIC of bank account beneficiary",
          "type": "string"
        },
        "currency": {
          "description": "Currency(ISO)",
          "type": "string"
        },
        "debitAccount": {
          "description": "Debit account",
          "type": "string"
        },
        "debitAccountIBAN": {
          "description": "Debit account(IBAN)",
          "type": "string"
        },
        "hasDuplicate": {
          "description": "Indication of whether the transaction has occured again in the same day: 0:NO, 1:YES",
          "type": "boolean"
        },
        "receiverAcc": {
          "description": "Receiver account",
          "type": "string"
        },
        "receiverGR": {
          "description": "Name of account beneficiary",
          "type": "string"
        },
        "tranId": {
          "description": "Transaction Id",
          "type": "string"
        },
        "transactionDate": {
          "description": "Transaction timestamp",
          "format": "date-time",
          "type": "string"
        },
        "userId": {
          "description": "User Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ErrorResponse": {
      "example": {
        "exception": {
          "cat": "Business",
          "code": 20,
          "desc": "Incorrect Json Format",
          "id": "02A7470B-0FDE-4EB4-A1E1-662BEDE4434B",
          "sev": "Error"
        },
        "executionTime": 0
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "FileStatusEnum": {
      "description": "File status",
      "enum": [
        "WaitingForUpload",
        "WaitingForMerge",
        "MergingChunks",
        "Completed",
        "Deleted",
        "Immutable"
      ],
      "type": "string"
    },
    "FindSurnameResponse": {
      "description": "Client details",
      "properties": {
        "creditTransferDetails": {
          "$ref": "#/definitions/CreditTransferDetails"
        },
        "municipalityEn": {
          "description": "Municipality, English",
          "type": "string"
        },
        "municipalityGr": {
          "description": "Municipality, Greek",
          "type": "string"
        },
        "numberEn": {
          "description": "Number, English",
          "type": "string"
        },
        "numberGr": {
          "description": "Number, Greek",
          "type": "string"
        },
        "pPoGr": {
          "description": "Zipcode, Greek",
          "type": "string"
        },
        "poEn": {
          "description": "Zipcode, English",
          "type": "string"
        },
        "streetEn": {
          "description": "Street name, English",
          "type": "string"
        },
        "streetGr": {
          "description": "Street name, Greek",
          "type": "string"
        },
        "surnameEn": {
          "description": "User Username, English.",
          "type": "string"
        },
        "surnameGr": {
          "description": "User Username, Greek.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GenericTransferRequest": {
      "description": "This class is intended to unify all money transfer types under one service.",
      "properties": {
        "amount": {
          "description": "Transfered amount",
          "format": "double",
          "type": "number"
        },
        "approvalId": {
          "description": "Approval Id",
          "type": "string"
        },
        "auxInfo": {
          "description": "AuxInfo",
          "type": "string"
        },
        "beneficiaryBankTitle": {
          "description": "Beneficiary Bank Title. Only used for logging",
          "type": "string"
        },
        "beneficiaryBic": {
          "description": "Beneficiary BIC.",
          "type": "string"
        },
        "comments": {
          "description": "Comment for this transfer. Use only capital letters. Special characters not allowed",
          "type": "string"
        },
        "currency": {
          "description": "Currency, 3-letter code, e.g. <code>EUR</code>",
          "type": "string"
        },
        "debitAccount": {
          "description": "The NBG account number (e.g. 11 digits) to debit (transfer from)",
          "type": "string"
        },
        "debitAccountCurrency": {
          "description": "Currency, 3-letter code, e.g. <code>EUR</code>",
          "type": "string"
        },
        "deferred": {
          "$ref": "#/definitions/RequestCreditCardPaymentRequest_payload_deferred"
        },
        "destCountry": {
          "description": "Destination country of transaction",
          "type": "string"
        },
        "expenses": {
          "description": "Who pays the transaction commission",
          "enum": [
            "SHA",
            "BEN",
            "OUR"
          ],
          "type": "string"
        },
        "foreignExecType": {
          "description": "Remittance execution type (from table)",
          "type": "string"
        },
        "isSmsOtp": {
          "description": "True when OTP is required",
          "type": "boolean"
        },
        "massFlag": {
          "description": "MassFlag",
          "type": "string"
        },
        "onlineSend": {
          "type": "boolean"
        },
        "reason": {
          "description": "Reason (Uppercase up to 140 characters)",
          "type": "string"
        },
        "receiverAcc": {
          "description": "Receiver account",
          "type": "string"
        },
        "receiverAccType": {
          "description": "Account type",
          "enum": [
            "IBAN",
            "TEXT"
          ],
          "type": "string"
        },
        "receiverAddrGR": {
          "description": "Receiver address",
          "type": "string"
        },
        "receiverGR": {
          "description": "Receiver",
          "type": "string"
        },
        "remCategory": {
          "description": "Remittance category",
          "type": "string"
        },
        "remImportedGood": {
          "$ref": "#/definitions/RequestGenericTransferRequest_payload_remImportedGood"
        },
        "remType": {
          "description": "Remittance type (from table)",
          "type": "string"
        },
        "sellerID": {
          "description": "Seller ID",
          "type": "string"
        },
        "sellerSubID": {
          "description": "Seller sub Id",
          "type": "string"
        },
        "sellerTradingName": {
          "description": "Seller name",
          "type": "string"
        },
        "senderRefNum": {
          "description": "Sender reference number",
          "type": "string"
        },
        "systBic": {
          "description": "Clearance system BIC",
          "type": "string"
        },
        "systCode": {
          "description": "Clearance system code",
          "type": "string"
        },
        "systCountry": {
          "description": "Clearance system destination country",
          "type": "string"
        },
        "systType": {
          "description": "Clearance system (values from table, null for NO CLEARANCE SYSTEM)",
          "type": "string"
        },
        "tanNumber": {
          "description": "OTP for the transaction",
          "type": "string"
        },
        "transferType": {
          "description": "The client designates the desired type of transfer.",
          "enum": [
            "OWN",
            "NBG",
            "OTHER"
          ],
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        },
        "userRegion": {
          "description": "User's region",
          "type": "string"
        }
      },
      "required": [
        "amount",
        "beneficiaryBic",
        "debitAccount",
        "reason",
        "receiverAcc",
        "userId"
      ],
      "type": "object"
    },
    "GenericTransferResponse": {
      "properties": {
        "availableBalance": {
          "description": "Available balance",
          "format": "double",
          "type": "number"
        },
        "bankTitle": {
          "description": "Full bank title",
          "type": "string"
        },
        "beneficiaries": {
          "description": "Credit account beneficiaries (Applies only to transfers inside NBG)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "currency": {
          "description": "Currency, 3-letter code, e.g. <code>EUR</code>.",
          "type": "string"
        },
        "debitAccount": {
          "description": "The NBG account number (e.g. 11 digits) to debit (transfer from)",
          "type": "string"
        },
        "debitAmountOut": {
          "description": "Sum of transaction and total comision amounts",
          "format": "double",
          "type": "number"
        },
        "debtorIBAN": {
          "description": "Debit's account IBAN",
          "type": "string"
        },
        "debtorName": {
          "description": "Name of the debit's account beneficiary",
          "type": "string"
        },
        "deferredDate": {
          "description": "Date for the deferred transaction or the first occurence of the deferred transaction.",
          "format": "date-time",
          "type": "string"
        },
        "deferredFrequency": {
          "description": "Period (not frequency) for deferred transfer.",
          "format": "int32",
          "type": "integer"
        },
        "deferredName": {
          "description": "Name of the deferred transaction.",
          "type": "string"
        },
        "deferredTotalPayments": {
          "description": "How many times will the deferred transfer trigger.",
          "format": "int32",
          "type": "integer"
        },
        "deptExpencesOut": {
          "description": "Debtor expenses.",
          "format": "double",
          "type": "number"
        },
        "eteComissionOut": {
          "description": "NBG commission",
          "format": "double",
          "type": "number"
        },
        "exchangeProfitOut": {
          "description": "Exchange profit out",
          "format": "double",
          "type": "number"
        },
        "exchangeRateOut": {
          "description": "Exchange rate",
          "format": "double",
          "type": "number"
        },
        "isDeferred": {
          "description": "If <code>true</code> this transaction is deferred.",
          "type": "boolean"
        },
        "isDuplicate": {
          "description": "If true this transaction is duplicate.",
          "type": "boolean"
        },
        "ledgerBalance": {
          "description": "Ledger balance",
          "format": "double",
          "type": "number"
        },
        "netAmountOut": {
          "description": "Transaction amount",
          "format": "double",
          "type": "number"
        },
        "nonStpExpencesOut": {
          "description": "Non stp expenses.",
          "format": "double",
          "type": "number"
        },
        "onlineExpensesOut": {
          "description": "Expenses for online transfer.",
          "format": "double",
          "type": "number"
        },
        "refNo": {
          "description": "Reference number in IFTI700000985671 form. Only for non NBG transfers",
          "type": "string"
        },
        "referenceNumber": {
          "description": "Reference number in 70000098567 form",
          "type": "string"
        },
        "remType": {
          "description": "If equals to \"RNB\" then the remittance is to NBG.If equals to \"ROT\" then the remittance is to other bank",
          "type": "string"
        },
        "requestId": {
          "description": "Transfer request id",
          "type": "string"
        },
        "requiresApproval": {
          "description": "If <code>true</code> this transaction requires approval.",
          "type": "boolean"
        },
        "sumComissionOut": {
          "description": "Total commission amount",
          "format": "double",
          "type": "number"
        },
        "tanCheck": {
          "description": "The confirmation code of the tanNumber",
          "type": "string"
        },
        "transactionDate": {
          "description": "The exact timestamp of this transaction, as the server perceived it.",
          "format": "date-time",
          "type": "string"
        },
        "transferAmount": {
          "description": "Transferred amount.",
          "format": "double",
          "type": "number"
        },
        "urgentExpencesOut": {
          "description": "Expenses for urgent transfer.",
          "format": "double",
          "type": "number"
        },
        "valeur": {
          "description": "Date when transaction amount debited or credited",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAvailableWhitelistActionsResponse": {
      "example": {
        "executionTime": 0,
        "payload": [
          {
            "actionFields": [
              {
                "action": "Transfer",
                "applicationId": "446cbb56-4fd7-472f-9d00-56c7f8e495e8",
                "dataType": "String",
                "descriptionEl": "ERP Generic transfer - Debtor account",
                "descriptionEn": "ERP Generic transfer - Debtor account",
                "fieldType": "TrustedParticipantId",
                "id": "41925102-b348-45c8-a31b-24b2a31971e5",
                "mandatory": 1
              }
            ],
            "whiteListAction": {
              "action": "Transfer",
              "applicationId": "446cbb56-4fd7-472f-9d00-56c7f8e495e8",
              "code": "01",
              "descriptionEl": "ERP Generic Transfer",
              "descriptionEn": "ERP Generic Transfer",
              "id": "4589a40d-a522-4783-bc77-16d6c8f5259d",
              "nameEl": "ERP Generic Transfer",
              "nameEn": "ERP Generic Transfer"
            }
          }
        ]
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "items": {
            "$ref": "#/definitions/WhiteListActionDescription"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetCurrentUserResponse": {
      "properties": {
        "IsCorporate": {
          "description": "If the logged in user is corporate",
          "type": "boolean"
        },
        "smsOtpMobile": {
          "description": "The masked smsotp phone number of the logged in user (ie. 693****234)",
          "type": "string"
        },
        "userId": {
          "description": "The userId of the logged in user",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetMassPaymentsFileDetailsRequest": {
      "additionalProperties": false,
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "transId": "8396555922",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestGetMassPaymentsFileDetailsRequest_payload"
        }
      },
      "type": "object",
      "required": [
        "header"
      ]
    },
    "GetMassPaymentsFilesAllResponse": {
      "additionalProperties": false,
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/GetMassPaymentsFilesAllResponse_"
        }
      },
      "type": "object"
    },
    "GetMassPaymentsFilesAllResponse_": {
      "properties": {
        "trans": {
          "items": {
            "$ref": "#/definitions/DeferredTransactionInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetMassPaymentsFilesRequest": {
      "additionalProperties": false,
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "counter": 3,
          "fromDate": "2020-01-01T12:25:46.559Z",
          "status": "0",
          "toDate": "2020-12-24T12:25:46.559Z",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestGetMassPaymentsFilesRequest_payload"
        }
      },
      "type": "object",
      "required": [
        "header"
      ]
    },
    "GetUserWhiteListActions": {
      "properties": {
        "includeInactiveWhitelists": {
          "description": "Indication of pumping inactive whitelists",
          "type": "boolean"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "GetUserWhiteListActionsRequestPayload": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "includeInactiveWhitelists": true,
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/GetUserWhiteListActions"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "GetUserWhitelistActionsResponse": {
      "additionalProperties": false,
      "example": {
        "executionTime": 0,
        "payload": [
          {
            "actionFields": [
              {
                "id": "0aafb3b1-c27e-424c-92aa-8b5b7af09e38",
                "operator": "Equal",
                "value": "GR7701720110005011000009849",
                "whiteListActionField": "41925102-b348-45c8-a31b-24b2a31971e5"
              }
            ],
            "id": "0b019785-4a0f-4e02-9ec0-279ca5a78f4d",
            "whiteListAction": "4589a40d-a522-4783-bc77-16d6c8f5259d"
          }
        ]
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "description": "User Exceptions",
          "items": {
            "$ref": "#/definitions/UserWhiteListActionDescription"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "HoldingDetails": {
      "properties": {
        "action": {
          "description": "Action",
          "type": "string"
        },
        "atermId": {
          "description": "Aterm Id",
          "type": "string"
        },
        "authUser": {
          "description": "Auth user",
          "type": "string"
        },
        "branchAcc": {
          "description": "Branch account",
          "type": "string"
        },
        "branchSnd": {
          "description": "Branch snd",
          "type": "string"
        },
        "channel": {
          "description": "Channel",
          "type": "string"
        },
        "date": {
          "description": "Holding date",
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "description": "expirationDate",
          "format": "date-time",
          "type": "string"
        },
        "holdAmount": {
          "description": "Holding amount",
          "format": "double",
          "type": "number"
        },
        "holdDescription": {
          "description": "Description",
          "type": "string"
        },
        "holdKey": {
          "description": "Hold key",
          "type": "string"
        },
        "holdReason": {
          "description": "Reason",
          "type": "string"
        },
        "holdType": {
          "description": "Type of holding. (48 = card holding, 59 = remittance holding)",
          "type": "string"
        },
        "initHoldAmount": {
          "description": "Init hold amount",
          "format": "double",
          "type": "number"
        },
        "ledgerBalance": {
          "description": "Ledger Balance",
          "format": "double",
          "type": "number"
        },
        "operationId": {
          "description": "Operation Id",
          "type": "string"
        },
        "partHoldAmount": {
          "description": "Part hold amount",
          "format": "double",
          "type": "number"
        },
        "timestamp": {
          "description": "Timestamp",
          "type": "string"
        },
        "timestampPart": {
          "description": "Timestamp part",
          "type": "string"
        },
        "transId": {
          "description": "Transaction id",
          "type": "string"
        },
        "trnumb": {
          "description": "Transaction number",
          "type": "string"
        },
        "trtime": {
          "description": "Transaction time",
          "format": "date-time",
          "type": "string"
        },
        "userId": {
          "description": "User id",
          "type": "string"
        },
        "wsid": {
          "description": "WS Id",
          "type": "string"
        },
        "yphresia": {
          "description": "service",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IbComissionAmResponse": {
      "properties": {
        "amount": {
          "description": "Amount of the commission",
          "format": "double",
          "type": "number"
        },
        "amountAgent": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IbanInfoResponse": {
      "properties": {
        "beneficiaries": {
          "description": "The NBG IBAN beneficiaries",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "bic": {
          "description": "The IBAN's bic if valid",
          "type": "string"
        },
        "isValidIban": {
          "description": "True if the IBAN is valid",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InterestScale": {
      "properties": {
        "from": {
          "description": "Amount from (lower bound).",
          "format": "double",
          "type": "number"
        },
        "rate": {
          "description": "Relevant interest rate.",
          "format": "double",
          "type": "number"
        },
        "to": {
          "description": "Amount to (upper bound).",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "InterestScaleClientResponse": {
      "properties": {
        "interestScales": {
          "description": "Interest rate scale",
          "items": {
            "$ref": "#/definitions/InterestScale"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MassiveTransferExpenseRecord": {
      "properties": {
        "comission": {
          "description": "The transfer record commission",
          "format": "double",
          "type": "number"
        },
        "error": {
          "description": "Error text",
          "type": "string"
        },
        "transfer": {
          "$ref": "#/definitions/GenericTransferRequest"
        }
      },
      "type": "object"
    },
    "MassiveTransferStatusRecord": {
      "properties": {
        "amount": {
          "description": "Massive transfer record amount",
          "format": "double",
          "type": "number"
        },
        "beneficiary": {
          "description": "Massive transfer record beneficiary",
          "type": "string"
        },
        "creditIBAN": {
          "description": "Massive transfer record credit iban",
          "type": "string"
        },
        "debitIBAN": {
          "description": "Massive transfer record debit iban",
          "type": "string"
        },
        "error": {
          "description": "If the massive transfer record has failed the error text",
          "type": "string"
        },
        "externalSystem": {
          "description": "External system (RNB/ROT)",
          "type": "string"
        },
        "reason": {
          "description": "Massive transfer record reason",
          "type": "string"
        },
        "referenceNumber": {
          "description": "If the massive transfer succeedded the reference number id",
          "type": "string"
        },
        "succedded": {
          "description": "Massive transfer status (success=1, failed=0)",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MassiveTransfersExpensesResponse": {
      "properties": {
        "amount": {
          "description": "Total net amount for all transfers",
          "format": "double",
          "type": "number"
        },
        "comission": {
          "description": "Total commission amount for all transfers",
          "format": "double",
          "type": "number"
        },
        "count": {
          "description": "The number of transfers with commission amount",
          "format": "int32",
          "type": "integer"
        },
        "hasErrors": {
          "description": "True if any transfer record has any error",
          "type": "boolean"
        },
        "records": {
          "description": "List of transfer records with their commission amount or error",
          "items": {
            "$ref": "#/definitions/MassiveTransferExpenseRecord"
          },
          "type": "array"
        },
        "total": {
          "description": "Total amount to be charged for all transfers",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "MassiveTransfersResponse": {
      "properties": {
        "tanCheck": {
          "description": "The confirmation code of the tanNumber",
          "type": "string"
        },
        "transactionDate": {
          "description": "Transaction date",
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "description": "Transaction id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MassiveTransfersStatusResponse": {
      "properties": {
        "records": {
          "description": "Massive transfers status",
          "items": {
            "$ref": "#/definitions/MassiveTransferStatusRecord"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "OtherCreditCardPayStatusResponse": {
      "properties": {
        "account": {
          "description": "Account that was debited",
          "type": "string"
        },
        "amount": {
          "description": "Payment amount",
          "format": "double",
          "type": "number"
        },
        "beneficiary": {
          "description": "Name of beneficiary",
          "type": "string"
        },
        "creditCard": {
          "description": "Credit card number",
          "type": "string"
        },
        "orderNo": {
          "description": "Transaction Identifier",
          "type": "string"
        },
        "paymentDate": {
          "description": "Date of payment",
          "format": "date-time",
          "type": "string"
        },
        "paymentStatus": {
          "description": "Status of payment",
          "type": "string"
        },
        "publishBank": {
          "description": "Credit card's bank",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PayFileRecordRequest": {
      "additionalProperties": false,
      "properties": {
        "accountType": {
          "description": "Account type",
          "example": "IBAN",
          "type": "string"
        },
        "accountTypeValid": {
          "description": "Flag indicating the validation of account type",
          "example": true,
          "type": "boolean"
        },
        "amount": {
          "description": "Amount",
          "example": 60.6,
          "format": "double",
          "type": "number"
        },
        "amountValid": {
          "description": "Flag indicating the validation of amount",
          "example": true,
          "type": "boolean"
        },
        "bankTitle": {
          "description": "Bank's title",
          "type": "string"
        },
        "beneficiary": {
          "description": "Beneficiary name",
          "type": "string"
        },
        "beneficiaryAddress": {
          "description": "Beneficiary address",
          "type": "string"
        },
        "beneficiaryAddressValid": {
          "description": "Flag indicating the validation of beneficiary address",
          "example": false,
          "type": "boolean"
        },
        "beneficiaryValid": {
          "description": "Flag indicating the validation of beneficiary",
          "example": true,
          "type": "boolean"
        },
        "bicCode": {
          "description": "Bank's BIC code",
          "example": "ETHNGRAA",
          "type": "string"
        },
        "bicCodeValid": {
          "description": "Flag indicating the validation of bank's BIC code",
          "example": true,
          "type": "boolean"
        },
        "charges": {
          "description": "Charges. Possible returned values are SHA (Shared expenses), BEN (Beneficiary expenses) or OUR (Debtor expenses)",
          "example": "OUR",
          "type": "string"
        },
        "chargesValid": {
          "description": "Flag indicating the validation of charges amount",
          "example": true,
          "type": "boolean"
        },
        "commissionInfo": {
          "$ref": "#/definitions/CommissionInfo"
        },
        "creditorBeneficiaries": {
          "description": "Array of creditor beneficiaries name",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "currency": {
          "description": "Currency",
          "example": "EUR",
          "type": "string"
        },
        "currencyValid": {
          "description": "Flag indicating the validation of currency",
          "example": true,
          "type": "boolean"
        },
        "debitAccount": {
          "description": "Debit account",
          "example": "GR4701100120000001200119673",
          "type": "string"
        },
        "debitAccountCharges": {
          "description": "Debit account charges",
          "example": "GR4701100120000001200119673",
          "type": "string"
        },
        "debitAccountChargesValid": {
          "description": "Flag indicating the validation of debit account charges",
          "example": true,
          "type": "boolean"
        },
        "debitAccountValid": {
          "description": "Flag indicating the validation of debit account",
          "example": true,
          "type": "boolean"
        },
        "differentAccountValid": {
          "description": "Flag indicating the validation of different account",
          "example": true,
          "type": "boolean"
        },
        "emergency": {
          "description": "Emergency flag",
          "type": "boolean"
        },
        "error": {
          "description": "Error message",
          "type": "string"
        },
        "iban": {
          "description": "IBAN",
          "example": "GR9601106780000067890123458",
          "type": "string"
        },
        "ibanValid": {
          "description": "Flag indicating the validation of IBAN",
          "example": true,
          "type": "boolean"
        },
        "importedGood": {
          "description": "Imported good",
          "type": "string"
        },
        "importedGoodValid": {
          "description": "Flag indicating the validation of imported good",
          "example": true,
          "type": "boolean"
        },
        "reason": {
          "description": "Transfer's reason",
          "example": "TEST REASON",
          "type": "string"
        },
        "reasonValid": {
          "description": "Flag indicating the validation of reason",
          "example": true,
          "type": "boolean"
        },
        "remCategory": {
          "description": "Remittance category",
          "type": "string"
        },
        "remCategoryValid": {
          "description": "Flag indicating the validation of remittance category",
          "example": true,
          "type": "boolean"
        },
        "remType": {
          "description": "Remittance Type",
          "type": "string"
        },
        "remTypeValid": {
          "description": "Flag indicating the validation of remittance type",
          "example": true,
          "type": "boolean"
        },
        "serialNum": {
          "description": "Serial number",
          "type": "string"
        },
        "sysBic": {
          "description": "Sys BIC",
          "type": "string"
        },
        "sysBicValid": {
          "description": "Flag indicating the validation of sys BIC",
          "example": false,
          "type": "boolean"
        },
        "sysCode": {
          "description": "Sys code",
          "type": "string"
        },
        "sysCodeValid": {
          "description": "Flag indicating the validation of sys code",
          "example": false,
          "type": "boolean"
        },
        "sysCountry": {
          "description": "Sys country",
          "type": "string"
        },
        "sysCountryValid": {
          "description": "Flag indicating the validation of sys country",
          "example": false,
          "type": "boolean"
        },
        "sysType": {
          "description": "Sys type",
          "type": "string"
        },
        "sysTypeValid": {
          "description": "Flag indicating the validation of sys type",
          "example": false,
          "type": "boolean"
        },
        "totalCommission": {
          "description": "Total commission amount",
          "example": 0.2,
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "PayFileRecordRequest_": {
      "additionalProperties": false,
      "properties": {
        "accountType": {
          "description": "Account type",
          "example": "IBAN",
          "type": "string"
        },
        "amount": {
          "description": "Amount",
          "example": 60.6,
          "format": "double",
          "type": "number"
        },
        "bankTitle": {
          "description": "Bank's title",
          "type": "string"
        },
        "beneficiary": {
          "description": "Beneficiary name",
          "type": "string"
        },
        "beneficiary2": {
          "description": "Second beneficiary name",
          "type": "string"
        },
        "beneficiary3": {
          "description": "Third beneficiary name",
          "type": "string"
        },
        "beneficiaryAddress": {
          "description": "Beneficiary address",
          "type": "string"
        },
        "bicCode": {
          "description": "Bank's BIC code",
          "example": "ETHNGRAA",
          "type": "string"
        },
        "charges": {
          "description": "Charges. Possible returned values are SHA (Shared expenses), BEN (Beneficiary expenses) or OUR (Debtor expenses)",
          "example": "OUR",
          "type": "string"
        },
        "commissionInfo": {
          "$ref": "#/definitions/CommissionInfo"
        },
        "creditorBeneficiaries": {
          "description": "Array of creditor beneficiaries name",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "currency": {
          "description": "Currency",
          "example": "EUR",
          "type": "string"
        },
        "debitAccount": {
          "description": "Debit account",
          "example": "GR4701100120000001200119673",
          "type": "string"
        },
        "debitAccountCharges": {
          "description": "Debit account charges",
          "example": "GR4701100120000001200119673",
          "type": "string"
        },
        "debitAmount": {
          "description": "Debit amount",
          "example": 0.2,
          "format": "double",
          "type": "number"
        },
        "emergency": {
          "description": "Emergency flag",
          "type": "boolean"
        },
        "error": {
          "description": "Error message",
          "type": "string"
        },
        "iban": {
          "description": "IBAN",
          "example": "GR9601106780000067890123458",
          "type": "string"
        },
        "importedGood": {
          "description": "Imported good",
          "type": "string"
        },
        "msgCode": {
          "description": "Message code",
          "example": "0",
          "type": "string"
        },
        "netAmount": {
          "description": "Net amount",
          "example": 0.2,
          "format": "double",
          "type": "number"
        },
        "orderNo": {
          "description": "Order number",
          "type": "integer"
        },
        "reason": {
          "description": "Transfer's reason",
          "example": "TEST REASON",
          "type": "string"
        },
        "remCategory": {
          "description": "Remittance category",
          "type": "string"
        },
        "remType": {
          "description": "Remittance Type",
          "type": "string"
        },
        "serialNum": {
          "description": "Serial number",
          "type": "string"
        },
        "sumCommission": {
          "description": "Sum commission amount",
          "example": 0.2,
          "format": "double",
          "type": "number"
        },
        "sysBic": {
          "description": "Sys BIC",
          "type": "string"
        },
        "sysCode": {
          "description": "Sys code",
          "type": "string"
        },
        "sysCountry": {
          "description": "Sys country",
          "type": "string"
        },
        "sysType": {
          "description": "Sys type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProcessResponse": {
      "properties": {
        "transfers": {
          "description": "Transfers",
          "items": {
            "$ref": "#/definitions/GenericTransferRequest"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RemittanceQueryResponse": {
      "properties": {
        "amount": {
          "description": "Amount",
          "format": "double",
          "type": "number"
        },
        "cancelCode": {
          "description": "CAN = Cancelled (the remittance is still on NBG), REC = Recall (the remittance is on OTHERBANK), ERRO = Error (\u03a5\u03a0\u0391\u03a1\u03a7\u0395\u0399 \u0397\u0394\u0397 \u0391\u0399\u03a4\u0397\u039c\u0391 \u0391\u039a\u03a5\u03a1\u03a9\u03a3\u0397\u03a3)",
          "type": "string"
        },
        "cancelFees": {
          "description": "Remittance cancellation fee when the remittance is still on NBG (CAN)",
          "format": "double",
          "type": "number"
        },
        "cancelText": {
          "description": "Instruction text for remittance cancellation",
          "type": "string"
        },
        "charges": {
          "description": "The total expenses amount",
          "type": "string"
        },
        "chargesAmnt": {
          "description": "Charges amount",
          "format": "double",
          "type": "number"
        },
        "chargesXT": {
          "format": "double",
          "type": "number"
        },
        "cmdCRA": {
          "type": "string"
        },
        "comission": {
          "description": "Commission",
          "format": "double",
          "type": "number"
        },
        "countryPay": {
          "type": "string"
        },
        "credAccType": {
          "description": "Credit agent account type",
          "type": "string"
        },
        "credAccount": {
          "description": "Credit account",
          "type": "string"
        },
        "credAccountIBAN": {
          "description": "Credit account IBAN",
          "type": "string"
        },
        "credAddrLine1": {
          "description": "Credit address 1",
          "type": "string"
        },
        "credAddrLine2": {
          "description": "Credit address 2",
          "type": "string"
        },
        "credAgent": {
          "description": "Credit Agent",
          "type": "string"
        },
        "credAgent1": {
          "description": "Credit Agent1",
          "type": "string"
        },
        "credAgent2": {
          "description": "Credit Agent2",
          "type": "string"
        },
        "credAgentAcc": {
          "description": "Credit agent account",
          "type": "string"
        },
        "credAgentBranch": {
          "description": "Credit agent branch",
          "type": "string"
        },
        "credCRA": {
          "type": "string"
        },
        "credIdentif": {
          "description": "Credit Identifier",
          "type": "string"
        },
        "credName": {
          "description": "Credit name",
          "type": "string"
        },
        "credName1": {
          "description": "Credit name 1",
          "type": "string"
        },
        "credName2": {
          "description": "Credit name 2",
          "type": "string"
        },
        "currBenefit": {
          "format": "double",
          "type": "number"
        },
        "currRate": {
          "description": "Current rate",
          "format": "double",
          "type": "number"
        },
        "currency": {
          "description": "Currency, 3-letter code , e.g. <code>EUR</code>",
          "type": "string"
        },
        "dateCancel": {
          "description": "Cancelation date",
          "format": "date-time",
          "type": "string"
        },
        "datePost": {
          "description": "Date post",
          "format": "date-time",
          "type": "string"
        },
        "dateSwmsg": {
          "format": "date-time",
          "type": "string"
        },
        "debtAccount": {
          "description": "Debit account",
          "type": "string"
        },
        "debtAccountIBAN": {
          "description": "Debit account IBAN",
          "type": "string"
        },
        "debtAddrLine1": {
          "description": "Debtor address 1",
          "type": "string"
        },
        "debtAddrLine2": {
          "description": "Debtor address 2",
          "type": "string"
        },
        "debtAgent": {
          "description": "Debit Agent",
          "type": "string"
        },
        "debtAgentBranch": {
          "description": "Debit agent branch",
          "type": "string"
        },
        "debtIdentif": {
          "description": "Debtor Identifier",
          "type": "string"
        },
        "debtName": {
          "description": "Debtor name",
          "type": "string"
        },
        "department": {
          "description": "Department",
          "type": "string"
        },
        "endToendId": {
          "description": "EndToEnd Identifier",
          "type": "string"
        },
        "indCancel": {
          "type": "string"
        },
        "indDebtIBAN": {
          "type": "string"
        },
        "indPost": {
          "type": "string"
        },
        "indRecall": {
          "type": "string"
        },
        "indSwmsg": {
          "type": "string"
        },
        "info1": {
          "description": "Info1",
          "type": "string"
        },
        "info2": {
          "description": "Info2",
          "type": "string"
        },
        "info3": {
          "description": "Info3",
          "type": "string"
        },
        "info4": {
          "description": "Info4",
          "type": "string"
        },
        "info5": {
          "description": "Info5",
          "type": "string"
        },
        "info6": {
          "description": "Info6",
          "type": "string"
        },
        "instrAmount": {
          "format": "double",
          "type": "number"
        },
        "intermBank": {
          "description": "Intermediate bank name",
          "type": "string"
        },
        "issueBranch": {
          "description": "Issue branch",
          "type": "string"
        },
        "issueDate": {
          "description": "Issuance date",
          "format": "date-time",
          "type": "string"
        },
        "issueTime": {
          "description": "Issue time",
          "type": "string"
        },
        "message": {
          "description": "Message",
          "type": "string"
        },
        "mid": {
          "description": "MID",
          "type": "string"
        },
        "nbgId": {
          "description": "NBG Id",
          "type": "string"
        },
        "nonSTP": {
          "description": "NonSTP",
          "type": "string"
        },
        "notSTPAmnt": {
          "format": "double",
          "type": "number"
        },
        "priority": {
          "description": "Priority",
          "type": "string"
        },
        "procStatus": {
          "type": "string"
        },
        "product": {
          "description": "Product code",
          "type": "string"
        },
        "recallFees": {
          "description": "Remittance cancellation fee when the remittance is on the other bank (REC)",
          "format": "double",
          "type": "number"
        },
        "receiverBank": {
          "description": "Receiver bank name",
          "type": "string"
        },
        "receiverCity": {
          "description": "Receiver city",
          "type": "string"
        },
        "receiverTitle": {
          "description": "Receiver bank title",
          "type": "string"
        },
        "reference": {
          "description": "Remittance reference number",
          "type": "string"
        },
        "remType": {
          "description": "RNB:ETE2ETE, ROT:ETE2OTHERBANK, RIS:SEPA2ETE, RIW:SWIFT2ETE",
          "type": "string"
        },
        "remittanceInfo": {
          "description": "Remittance information",
          "type": "string"
        },
        "senderBank": {
          "description": "Sender bank name",
          "type": "string"
        },
        "senderCity": {
          "description": "Sender city",
          "type": "string"
        },
        "senderTitle": {
          "description": "Sender bank title",
          "type": "string"
        },
        "text": {
          "description": "Text",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "timePost": {
          "description": "Time post",
          "type": "string"
        },
        "timeSwmsg": {
          "type": "string"
        },
        "valeur": {
          "description": "Date when transaction amount debited or credited",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RemoveWhiteListBaseRequest": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "Id of user whitelist that is removed.",
          "format": "uuid",
          "type": "string"
        },
        "isSmsOtp": {
          "description": "True when OTP is required",
          "type": "boolean"
        },
        "tanNumber": {
          "description": "OTP for the transaction",
          "type": "string"
        },
        "userId": {
          "description": "User Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RemoveWhiteListBaseRequestPayload": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "id": "4589a40d-a522-4783-bc77-16d6c8f5259d",
          "isSmsOtp": true,
          "tanNumber": "smsotp",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RemoveWhiteListBaseRequest"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RemoveWhiteListResponse": {
      "additionalProperties": false,
      "properties": {
        "succeeded": {
          "description": "Success Indication",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RemoveWhiteListResponsePayload": {
      "additionalProperties": false,
      "example": {
        "executionTime": 0,
        "payload": {
          "succeeded": true
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/RemoveWhiteListResponse"
        }
      },
      "type": "object"
    },
    "RequestAccountsFullRequest": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "ownAccounts": true,
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestAccountsFullRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestAccountsFullRequest_header": {
      "properties": {
        "ID": {
          "description": "Insert a new Uuid for every call",
          "type": "string",
          "title": ""
        },
        "application": {
          "description": "Your Client ID",
          "type": "string"
        }
      },
      "required": [
        "ID",
        "application"
      ],
      "type": "object"
    },
    "RequestAccountsFullRequest_payload": {
      "properties": {
        "ownAccounts": {
          "description": "User own accounts",
          "type": "boolean"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "RequestAddUserWhiteListAction": {
      "additionalProperties": false,
      "properties": {
        "fieldValues": {
          "description": "The conditions set for the fields supported by white list action",
          "items": {
            "$ref": "#/definitions/UserWhiteListActionFieldAdd"
          },
          "type": "array"
        },
        "isSmsOtp": {
          "description": "True when OTP is required",
          "type": "boolean"
        },
        "tanNumber": {
          "description": "OTP for the transaction",
          "type": "string"
        },
        "userId": {
          "description": "Globally Unique Identifier regarding the exception",
          "type": "string"
        },
        "whiteListActionId": {
          "description": "Id of the corresponding whitelist action",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "fieldValues"
      ],
      "type": "object"
    },
    "RequestAddUserWhiteListActionsPayload": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "fieldValues": [
            {
              "operator": "Equal",
              "value": "GR7701720110005011000009849",
              "whiteListActionField": "41925102-b348-45c8-a31b-24b2a31971e5"
            }
          ],
          "isSmsOtp": true,
          "tanNumber": "smsotp",
          "userId": "User1",
          "whiteListActionId": "4589a40d-a522-4783-bc77-16d6c8f5259d"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestAddUserWhiteListAction"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestAmountTransferCancelDomRequest": {
      "example": {
        "header": {
          "ID": "20674374-8bec-4ed5-908d-e91f9917725e",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "account": "67890123456",
          "amount": 1.5,
          "cancelAccepted": true,
          "comments": "CANCEL REMITTANCE",
          "currency": "EUR",
          "isSmsOtp": true,
          "remittanceNumber": "70033205000",
          "tanNumber": "smsotp",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestAmountTransferCancelDomRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestAmountTransferCancelDomRequest_payload": {
      "properties": {
        "account": {
          "description": "Account",
          "type": "string"
        },
        "actionForCancel": {
          "description": "Action for cancel",
          "type": "string"
        },
        "amount": {
          "description": "Amount",
          "format": "double",
          "type": "number"
        },
        "cancelAccepted": {
          "description": "Cancel accepted",
          "type": "boolean"
        },
        "comments": {
          "description": "Comments",
          "type": "string"
        },
        "currency": {
          "description": "Currency, 3-letter code , e.g. <code>EUR</code>",
          "type": "string"
        },
        "externalRequestType": {
          "description": "External request type",
          "type": "string"
        },
        "isSmsOtp": {
          "description": "True when OTP is required",
          "type": "boolean"
        },
        "remittanceNumber": {
          "description": "Remittance number",
          "type": "string"
        },
        "tanNumber": {
          "description": "OTP for the transaction",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "account",
        "amount",
        "remittanceNumber",
        "tanNumber",
        "userId"
      ],
      "type": "object"
    },
    "RequestBalanceRequest": {
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestBalanceRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestBalanceRequest_payload": {
      "properties": {
        "account": {
          "description": "The NBG account number (e.g. 11 digits)",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "account",
        "userId"
      ],
      "type": "object"
    },
    "RequestBankRequest": {
      "example": {
        "header": {
          "ID": "112e77f2-8abb-43df-ba3d-257a111e9791",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "bic": "ETHNGRAA",
          "country": "GR",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestBankRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestBankRequest_payload": {
      "properties": {
        "bic": {
          "description": "Bank's BIC",
          "type": "string"
        },
        "country": {
          "description": "Bank's country code (e.g. GR)",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "RequestBanksBicRequest": {
      "example": {
        "header": {
          "ID": "112e77f2-8abb-43df-ba3d-257a111e9791",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "branch": "LONDON",
          "city": "LONDON",
          "countryCode": "GB",
          "title": "HSBC",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestBanksBicRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestBanksBicRequest_payload": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "branch": "LONDON",
          "city": "LONDON",
          "countryCode": "GB",
          "title": "HSBC",
          "userId": "User1"
        }
      },
      "properties": {
        "branch": {
          "description": "Branch of bank to search for",
          "type": "string"
        },
        "city": {
          "description": "City name to search for",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code to search for (2 letter code)",
          "type": "string"
        },
        "title": {
          "description": "Bank name to search for",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "city",
        "countryCode",
        "userId"
      ],
      "type": "object"
    },
    "RequestCardDetailsRequest": {
      "example": {
        "header": {
          "ID": "86e18850-17c8-497e-b42f-0e46214988ee",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "cardNumber": "4917910000000001",
          "type": "CC",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestCardDetailsRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestCardDetailsRequest_payload": {
      "properties": {
        "cardNumber": {
          "description": "Card number (16 digits)",
          "type": "string"
        },
        "type": {
          "description": "Card type (i.e. CC or DC)",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "cardNumber",
        "type",
        "userId"
      ],
      "type": "object"
    },
    "RequestCardStatementRequest": {
      "example": {
        "header": {
          "ID": "86e18850-17c8-497e-b42f-0e46214988ee",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "cardNumber": "4917910000000001",
          "fromDate": "2020-02-25T14:53:56.819+0000",
          "toDate": "2020-02-26T14:53:56.819+0000",
          "type": "CC",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestCardStatementRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestCardStatementRequest_payload": {
      "properties": {
        "cardNumber": {
          "description": "Card number (16 digits)",
          "type": "string"
        },
        "fromDate": {
          "description": "Starting date to search transactions for",
          "format": "date-time",
          "type": "string"
        },
        "toDate": {
          "description": "End date to search transactions for",
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "description": "Card type (i.e. CC or DC)",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "cardNumber",
        "fromDate",
        "toDate",
        "type",
        "userId"
      ],
      "type": "object"
    },
    "RequestCardsFetchRequest": {
      "example": {
        "header": {
          "ID": "86e18850-17c8-497e-b42f-0e46214988ee",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "fetchTypes": [
            "CC",
            "DC"
          ],
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestCardsFetchRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestCardsFetchRequest_payload": {
      "properties": {
        "fetchTypes": {
          "description": "Credit card type (e.g. 'DC')",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "RequestCoBeneficiaryRequest": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "account": "67890123456",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestCoBeneficiaryRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestCoBeneficiaryRequest_payload": {
      "properties": {
        "account": {
          "description": "The NBG account number (e.g. 11 digits)",
          "type": "string"
        },
        "parameter": {
          "description": "Parameter",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "account",
        "userId"
      ],
      "type": "object"
    },
    "RequestCreditCardOtherPayRequest": {
      "example": {
        "header": {
          "ID": "86e18850-17c8-497e-b42f-0e46214988ee",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "account": "67890123456",
          "amount": 1,
          "bankCode": "011",
          "beneficiary": "DIMITRIOS DIMITRIOU",
          "creditCardNumber": "4917910000000001",
          "deferred": {
            "isDeferred": false
          },
          "isSmsOtp": true,
          "tanNumber": "smsotp",
          "type": "otherBank",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestCreditCardOtherPayRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestCreditCardOtherPayRequest_payload": {
      "properties": {
        "account": {
          "description": "Account to be debited",
          "type": "string"
        },
        "amount": {
          "description": "Payment amount",
          "format": "double",
          "type": "number"
        },
        "bankCode": {
          "description": "Bank code",
          "type": "string"
        },
        "bankDescription": {
          "description": "Bank description",
          "type": "string"
        },
        "beneficiary": {
          "description": "Name of beneficiary",
          "type": "string"
        },
        "creditCardNumber": {
          "description": "Credit card number",
          "type": "string"
        },
        "deferred": {
          "$ref": "#/definitions/RequestCreditCardPaymentRequest_payload_deferred"
        },
        "isSmsOtp": {
          "description": "True when OTP is required",
          "type": "boolean"
        },
        "tanNumber": {
          "description": "Set to \"smsotp\" to receive an OTP for your transaction. Once you receive your otp, pass it as input to this field.",
          "type": "string"
        },
        "type": {
          "description": "Card type",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "account",
        "amount",
        "bankCode",
        "bankDescription",
        "beneficiary",
        "creditCardNumber",
        "tanNumber",
        "userId"
      ],
      "type": "object"
    },
    "RequestCreditCardPaymentRequest": {
      "example": {
        "header": {
          "ID": "86e18850-17c8-497e-b42f-0e46214988ee",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "account": "67890123456",
          "amount": 1,
          "creditCardNumber": "4917910000000001",
          "deferred": {
            "isDeferred": false
          },
          "isSmsOtp": true,
          "myCard": true,
          "tanNumber": "smsotp",
          "type": "CC",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestCreditCardPaymentRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestCreditCardPaymentRequest_payload": {
      "properties": {
        "account": {
          "description": "Account to be debited",
          "type": "string"
        },
        "amount": {
          "description": "Amount of payment",
          "format": "double",
          "type": "number"
        },
        "creditCardNumber": {
          "description": "Credit card number to be credited",
          "type": "string"
        },
        "deferred": {
          "$ref": "#/definitions/RequestCreditCardPaymentRequest_payload_deferred"
        },
        "isSmsOtp": {
          "description": "True when OTP is required",
          "type": "boolean"
        },
        "myCard": {
          "description": "Whether the card is owned by the user",
          "type": "boolean"
        },
        "tanNumber": {
          "description": "Set to \"smsotp\" to receive an OTP for your transaction. Once you receive your otp, pass it as input to this field.",
          "type": "string"
        },
        "type": {
          "description": "Type of payment",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "account",
        "amount",
        "creditCardNumber",
        "myCard",
        "userId"
      ],
      "type": "object"
    },
    "RequestCreditCardPaymentRequest_payload_deferred": {
      "properties": {
        "deferredDate": {
          "description": "Date for the deferred transaction or the first occurrence of the deferred transaction.",
          "format": "date-time",
          "type": "string"
        },
        "deferredFrequency": {
          "description": "Period (not frequency) for deferred transfer.",
          "format": "int32",
          "type": "integer"
        },
        "deferredName": {
          "description": "Name of the deferred transaction.",
          "type": "string"
        },
        "deferredTotalPayments": {
          "description": "How many times will the deferred transfer trigger.",
          "format": "int32",
          "type": "integer"
        },
        "isDeferred": {
          "description": "If <code>true</code> this transaction is deferred.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RequestDeleteFileRequest_": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "fileId": "72d64ac6-c991-4c63-a117-f45ce9b70a24",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestDeleteFileRequest__payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestDeleteFileRequest__payload": {
      "properties": {
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "fileId",
        "userId"
      ],
      "type": "object"
    },
    "RequestFindSurnameRequest": {
      "example": {
        "header": {
          "ID": "53bc0392-2933-48ae-8879-bf53d3d1ac84",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestFindSurnameRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestFindSurnameRequest_payload": {
      "properties": {
        "addressRequired": {
          "type": "boolean"
        },
        "creditAccounts": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "creditorRequired": {
          "type": "boolean"
        },
        "debtorRequired": {
          "type": "boolean"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "RequestGenericRequest": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestGenericRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestGenericRequest_": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {}
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestGenericRequest_payload_"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestGenericRequest_payload": {
      "properties": {
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "RequestGenericRequest_payload_": {
      "type": "object"
    },
    "RequestGenericTransferOptionsRequest": {
      "additionalProperties": false,
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "amount": 150,
          "bankBic": "ETHNGRAA",
          "currency": "EUR",
          "iban": "GR2801100800000001234567890",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestGenericTransferOptionsRequest_payload"
        }
      },
      "type": "object",
      "required": [
        "header",
        "payload"
      ]
    },
    "RequestGenericTransferOptionsRequest_payload": {
      "additionalProperties": false,
      "properties": {
        "account": {
          "description": "Beneficiary Account Number",
          "example": "1234567891",
          "type": "string",
          "title": ""
        },
        "amount": {
          "description": "Transaction Amount",
          "example": 150,
          "format": "double",
          "type": "number"
        },
        "bankBic": {
          "description": "Beneficiary Bank's BIC",
          "example": "ABCDGRA0",
          "type": "string"
        },
        "currency": {
          "description": "Transaction Currency",
          "example": "EUR",
          "type": "string"
        },
        "iban": {
          "description": "Beneficiary IBAN",
          "example": "GR0899999990000000000000001",
          "type": "string"
        },
        "internationalBankBic": {
          "description": "Beneficiary International Bank's BIC. For International transfers if an IBAN is provided then the value should be null. If an account is provided then the value should be the Bank's BIC.",
          "example": "PSSTFRPPLIL",
          "type": "string"
        },
        "payCode": {
          "description": "9 digit Pay Code. If an IBAN is provided then the value should be null. For international transfers if an account is provided then the value is set only if paySystem is provided, else it's default value is null.",
          "type": "string"
        },
        "paySystem": {
          "description": "Pay System. If an IBAN is provided then the value should be null. For international transfers if an account is provided then the value should be one of the following (AU,CC,FW,NZ,ZA) else it's default value is null.",
          "example": "",
          "type": "string"
        },
        "userID": {
          "description": "Username of the logged in user",
          "example": "User1",
          "type": "string"
        }
      },
      "required": [
        "amount",
        "bankBic",
        "userID"
      ],
      "type": "object"
    },
    "RequestGenericTransferRequest": {
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestGenericTransferRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestGenericTransferRequest_payload": {
      "description": "This class is intended to unify all money transfer types under one service.",
      "properties": {
        "allowDuplicate": {
          "description": "If true allows the same transfer to be executed. Accepted values: **true** or **null**",
          "type": "boolean"
        },
        "amount": {
          "description": "Transfered amount",
          "format": "double",
          "type": "number"
        },
        "approvalId": {
          "description": "Approval Id",
          "type": "string"
        },
        "auxInfo": {
          "description": "AuxInfo",
          "type": "string"
        },
        "beneficiaryBic": {
          "description": "Beneficiary BIC.",
          "type": "string"
        },
        "currency": {
          "description": "Currency, 3-letter code, e.g. <code>EUR</code>",
          "type": "string"
        },
        "debitAccount": {
          "description": "The NBG account number (e.g. 11 digits) to debit (transfer from)",
          "type": "string"
        },
        "debitAccountCurrency": {
          "description": "Currency, 3-letter code, e.g. <code>EUR</code>",
          "type": "string"
        },
        "deferred": {
          "$ref": "#/definitions/RequestCreditCardPaymentRequest_payload_deferred"
        },
        "destCountry": {
          "description": "Destination country of transaction",
          "type": "string"
        },
        "emergency": {
          "description": "Emergency transfer",
          "type": "boolean"
        },
        "expenses": {
          "description": "Who pays the transaction commission",
          "enum": [
            "SHA",
            "BEN",
            "OUR"
          ],
          "type": "string"
        },
        "foreignExecType": {
          "description": "Remittance execution type (from table)",
          "type": "string"
        },
        "instantSend": {
          "description": "For SEPA instant payments",
          "type": "boolean"
        },
        "isSmsOtp": {
          "description": "True when OTP is required",
          "type": "boolean"
        },
        "massFlag": {
          "description": "MassFlag",
          "type": "string"
        },
        "onlineSend": {
          "description": "Online send for domestic banks",
          "type": "boolean"
        },
        "reason": {
          "description": "Reason (Uppercase up to 140 characters)",
          "type": "string"
        },
        "receiverAcc": {
          "description": "Receiver account (IBAN or TEXT)",
          "type": "string"
        },
        "receiverAccType": {
          "description": "Receiver account type",
          "enum": [
            "IBAN",
            "TEXT"
          ],
          "type": "string"
        },
        "receiverAddrGR": {
          "description": "Receiver address. Required for non nbg transfers.",
          "type": "string"
        },
        "receiverCityGR": {
          "description": "Receiver city. Required for non nbg transfers.",
          "type": "string"
        },
        "receiverGR": {
          "description": "Receiver name. Only capital letters allowed.",
          "type": "string"
        },
        "remCategory": {
          "description": "Remittance category",
          "type": "string"
        },
        "remImportedGood": {
          "$ref": "#/definitions/RequestGenericTransferRequest_payload_remImportedGood"
        },
        "remType": {
          "description": "Remittance type (from table)",
          "type": "string"
        },
        "sellerID": {
          "description": "Seller ID",
          "type": "string"
        },
        "sellerSubID": {
          "description": "Seller sub Id",
          "type": "string"
        },
        "sellerTradingName": {
          "description": "Seller name",
          "type": "string"
        },
        "senderRefNum": {
          "description": "Sender reference number",
          "type": "string"
        },
        "systBic": {
          "description": "Clearance system BIC",
          "type": "string"
        },
        "systCode": {
          "description": "Clearance system code",
          "type": "string"
        },
        "systCountry": {
          "description": "Clearance system destination country",
          "type": "string"
        },
        "systType": {
          "description": "Clearance system (values from table, null for NO CLEARANCE SYSTEM)",
          "type": "string"
        },
        "tanNumber": {
          "description": "OTP for the transaction",
          "type": "string"
        },
        "transferType": {
          "description": "The client designates the desired type of transfer.",
          "enum": [
            "OWN",
            "NBG",
            "OTHER"
          ],
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "amount",
        "beneficiaryBic",
        "debitAccount",
        "reason",
        "receiverAcc",
        "userId"
      ],
      "type": "object"
    },
    "RequestGenericTransferRequest_payload_remImportedGood": {
      "properties": {
        "code": {
          "description": "Code",
          "type": "string"
        },
        "description": {
          "description": "Code's description",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestGetFileDetailsRequest_": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "fileId": "72d64ac6-c991-4c63-a117-f45ce9b70a24",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestGetFileDetailsRequest__payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestGetFileDetailsRequest__payload": {
      "properties": {
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "fileId",
        "userId"
      ],
      "type": "object"
    },
    "RequestGetFileListRequest_": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "dateFrom": "2018-02-02T00:00:00Z",
          "dateTo": "2020-02-02T00:00:00Z",
          "folderId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "limit": 5,
          "offset": 0,
          "systemTags": [
            "SystemTag1",
            "SystemTag2"
          ],
          "userId": "User1",
          "userTags": [
            "Tag1",
            "Tag2",
            "Tag3"
          ]
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestGetFileListRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestGetFileListRequest_payload": {
      "properties": {
        "dateFrom": {
          "description": "Date indicating the starting point from which the system should return files",
          "format": "date-time",
          "type": "string"
        },
        "dateTo": {
          "description": "Date indicating the ending point by which the system should return files",
          "format": "date-time",
          "type": "string"
        },
        "folderId": {
          "description": "Folder ID",
          "format": "uuid",
          "type": "string"
        },
        "limit": {
          "description": "Limit indicator of max returning files",
          "type": "integer"
        },
        "offset": {
          "description": "Offset",
          "type": "integer"
        },
        "systemTags": {
          "description": "System Tags",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        },
        "userTags": {
          "description": "User Tags",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "RequestGetFileRequest_": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "chunkPart": 1,
          "fileId": "7d66145b-f9b5-4202-855f-d7d09cfc95a1",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestGetFileRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestGetFileRequest_payload": {
      "properties": {
        "chunkPart": {
          "description": "File chunk part",
          "type": "integer"
        },
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "RequestGetHoldingsPayload": {
      "properties": {
        "account": {
          "description": "NBG account",
          "type": "string"
        },
        "system": {
          "description": "System. (Default value: 'E')",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "account",
        "system",
        "userId"
      ],
      "type": "object"
    },
    "RequestGetHoldingsRequest_": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "account": "67890123458",
          "system": "E",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestGetHoldingsPayload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestGetMassPaymentsFileDetailsRequest_payload": {
      "additionalProperties": false,
      "properties": {
        "transId": {
          "description": "transaction id of the file",
          "example": "8396555922",
          "type": "string"
        },
        "userID": {
          "description": "Username of the logged in user",
          "example": "User1",
          "type": "string"
        }
      },
      "required": [
        "userID"
      ],
      "type": "object"
    },
    "RequestGetMassPaymentsFilesRequest_payload": {
      "additionalProperties": false,
      "properties": {
        "counter": {
          "description": "Total of records returned. If provided witn an empty string it returns all results.",
          "example": 3,
          "type": "integer"
        },
        "fromDate": {
          "description": "A Starting point in time to fetch information. This field is required in order to get results.",
          "example": "2020-01-01T12:25:46.559Z",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The Status of files. Can be one of the following (0:Pending,1:Completed,2:Failed,3:Cancelled by user,4:Partially executed) or use a \"[space]\" as a value to fetch all records.",
          "example": "0",
          "type": "string"
        },
        "toDate": {
          "description": "An Ending point in time to fetch information.You can also set null to this field if you do not wish an ending point in time.",
          "example": "2020-12-24T12:25:46.559Z",
          "format": "date-time",
          "type": "string"
        },
        "userID": {
          "description": "Username of the logged in user",
          "example": "User1",
          "type": "string"
        }
      },
      "required": [
        "fromDate",
        "status",
        "userID"
      ],
      "type": "object"
    },
    "RequestIbanBicRequest": {
      "example": {
        "header": {
          "ID": "689df461-01f2-4ffa-9060-4202053850b3",
          "application": "ba76c80b-e972-47ae-a2b0-5be1df40799e"
        },
        "payload": {
          "iban": "GR5301106780000067890123456",
          "userId": "voutsasva"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestIbanBicRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestIbanBicRequest_payload": {
      "properties": {
        "iban": {
          "description": "Account IBAN",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "iban",
        "userId"
      ],
      "type": "object"
    },
    "RequestImportedGoodsRequest": {
      "example": {
        "header": {
          "ID": "20674374-8bec-4ed5-908d-e91f9917725e",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestImportedGoodsRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestImportedGoodsRequest_payload": {
      "properties": {
        "code": {
          "description": "Imported goods code",
          "type": "string"
        },
        "description": {
          "description": "Imported goods description",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestInterestScaleRequest": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "account": "67890123456",
          "interestScale": 538,
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestInterestScaleRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestInterestScaleRequest_payload": {
      "properties": {
        "account": {
          "description": "Account number",
          "type": "string"
        },
        "interestScale": {
          "description": "Interest rate scale",
          "type": "string"
        },
        "irisAccount": {
          "description": "IRIS account number",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "account",
        "interestScale",
        "userId"
      ],
      "type": "object"
    },
    "RequestMassiveTransfersExpensesRequest": {
      "example": {
        "header": {
          "ID": "20674374-8bec-4ed5-908d-e91f9917725e",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "transfers": [
            {
              "amount": 1,
              "beneficiaryBic": "ETHNGRAA",
              "currency": "EUR",
              "debitAccount": "67890123456",
              "expenses": "OUR",
              "isSmsOtp": true,
              "reason": "TRANSFER REASON",
              "receiverAcc": "GR5301106780000067890123456",
              "receiverAccType": "IBAN",
              "receiverGR": "USER 2",
              "tanNumber": "smsotp",
              "transferType": "NBG",
              "userId": "User1"
            },
            {
              "amount": 1,
              "beneficiaryBic": "ETHNGRAA",
              "currency": "EUR",
              "debitAccount": "67890123456",
              "expenses": "OUR",
              "isSmsOtp": true,
              "reason": "TRANSFER REASON",
              "receiverAcc": "GR5301106780000067890123456",
              "receiverAccType": "IBAN",
              "receiverGR": "USER 2",
              "tanNumber": "smsotp",
              "transferType": "NBG",
              "userId": "User1"
            }
          ],
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestMassiveTransfersExpensesRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestMassiveTransfersExpensesRequest_payload": {
      "properties": {
        "transfers": {
          "description": "List of massive transfer records for commission calculation",
          "items": {
            "$ref": "#/definitions/RequestGenericTransferRequest_payload"
          },
          "type": "array"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "RequestMassiveTransfersRequest": {
      "example": {
        "header": {
          "ID": "20674374-8bec-4ed5-908d-e91f9917725e",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "isSmsOtp": true,
          "tanNumber": "smsotp",
          "transfers": [
            {
              "amount": 1,
              "beneficiaryBic": "ETHNGRAA",
              "currency": "EUR",
              "debitAccount": "67890123456",
              "expenses": "OUR",
              "isSmsOtp": true,
              "reason": "TRANSFER REASON",
              "receiverAcc": "GR5301106780000067890123456",
              "receiverAccType": "IBAN",
              "receiverGR": "USER 2",
              "tanNumber": "smsotp",
              "transferType": "NBG",
              "userId": "User1"
            },
            {
              "amount": 1,
              "beneficiaryBic": "ETHNGRAA",
              "currency": "EUR",
              "debitAccount": "67890123456",
              "expenses": "OUR",
              "isSmsOtp": true,
              "reason": "TRANSFER REASON",
              "receiverAcc": "GR5301106780000067890123456",
              "receiverAccType": "IBAN",
              "receiverGR": "USER 2",
              "tanNumber": "smsotp",
              "transferType": "NBG",
              "userId": "User1"
            }
          ],
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestMassiveTransfersRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestMassiveTransfersRequest_payload": {
      "properties": {
        "isSmsOtp": {
          "description": "True when OTP is required",
          "type": "boolean"
        },
        "tanNumber": {
          "description": "OTP for the transaction.",
          "type": "string"
        },
        "transfers": {
          "description": "List of transfer records for massive transfers",
          "items": {
            "$ref": "#/definitions/RequestGenericTransferRequest_payload"
          },
          "type": "array"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "RequestMassiveTransfersStatusRequest": {
      "example": {
        "header": {
          "ID": "20674374-8bec-4ed5-908d-e91f9917725e",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "transactionId": "6271548000",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestMassiveTransfersStatusRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestMassiveTransfersStatusRequest_payload": {
      "properties": {
        "transactionId": {
          "description": "Massive transfers transaction id",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "transactionId",
        "userId"
      ],
      "type": "object"
    },
    "RequestMultipleBalancesRequest": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "accounts": [
            "67890123456",
            "67890126543"
          ],
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestMultipleBalancesRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestMultipleBalancesRequest_payload": {
      "properties": {
        "accounts": {
          "description": "The range of NBG accounts numbers (e.g. 11 digits)",
          "items": {
            "example": "[\"account1\",\"account2\"]",
            "type": "string"
          },
          "type": "array"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "accounts",
        "userId"
      ],
      "type": "object"
    },
    "RequestOtherCreditCardPayStatusRequest": {
      "example": {
        "header": {
          "ID": "86e18850-17c8-497e-b42f-0e46214988ee",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "account": "67890123456",
          "orderNo": "72648777100157512808",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestOtherCreditCardPayStatusRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestOtherCreditCardPayStatusRequest_payload": {
      "properties": {
        "account": {
          "description": "Account that was debited",
          "type": "string"
        },
        "orderNo": {
          "description": "Transaction identifier",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "account",
        "orderNo",
        "userId"
      ],
      "type": "object"
    },
    "RequestPayFileCreditRequest": {
      "additionalProperties": false,
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "debitAccount": 4054685740,
          "fileId": "aff060be-0c53-48e9-9962-519812ee0865",
          "fileName": "MassiveTransfersETE.csv",
          "fileType": "CSV",
          "isPayRoll": false,
          "isSmsOtp": true,
          "tanNumber": "smsotp",
          "totalAmount": 60,
          "totalRecords": 3,
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestPayFileCreditRequest_payload"
        }
      },
      "type": "object",
      "required": [
        "header"
      ]
    },
    "RequestPayFileCreditRequest_payload": {
      "additionalProperties": false,
      "properties": {
        "debitAccount": {
          "description": "Debit account",
          "type": "string"
        },
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        },
        "fileName": {
          "description": "File name",
          "type": "string"
        },
        "fileType": {
          "description": "File format. Available file formats are XML, CSV",
          "type": "string"
        },
        "isPayroll": {
          "description": "Payroll flag",
          "type": "boolean"
        },
        "isSmsOtp": {
          "description": "SMS OTP flag",
          "type": "boolean"
        },
        "tanNumber": {
          "description": "Code received via SMS/Viber",
          "type": "string"
        },
        "totalAmount": {
          "description": "Total net amount of file's records",
          "format": "double",
          "type": "number"
        },
        "totalRecords": {
          "description": "Total number of file's records",
          "format": "int32",
          "type": "integer"
        },
        "userID": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "debitAccount",
        "fileId",
        "fileName",
        "fileType",
        "tanNumber",
        "totalAmount",
        "totalRecords",
        "userID"
      ],
      "type": "object"
    },
    "RequestRemittanceQueryRequest": {
      "example": {
        "header": {
          "ID": "e204e9f9-776d-40a3-bf46-a44a5f3a2a9d",
          "application": "8585820c-d0da-4be0-9471-3b4b22617510"
        },
        "payload": {
          "cancelFeesRequired": true,
          "remType": "RNB",
          "tranId": "12345678901234567890",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestRemittanceQueryRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestRemittanceQueryRequest_payload": {
      "properties": {
        "cancelFeesRequired": {
          "description": "If  cancellation fees are required to be returned on the response",
          "type": "boolean"
        },
        "remType": {
          "description": "RNB(Remittance to NBG), ROT(=Remittance to OTHERBANK)",
          "type": "string"
        },
        "tranId": {
          "description": "Remittance transaction id",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "remType",
        "tranId",
        "userId"
      ],
      "type": "object"
    },
    "RequestResultPayCreditWithFileRequest": {
      "additionalProperties": false,
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestResultPayCreditWithFileRequest_payload"
        }
      },
      "type": "object",
      "required": [
        "header"
      ]
    },
    "RequestResultPayCreditWithFileRequest_payload": {
      "additionalProperties": false,
      "properties": {
        "fileFormat": {
          "description": "File format of the outcome file. Available file formats are CSV, JSON, XML or PDF",
          "type": "string"
        },
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        },
        "transactionFileId": {
          "description": "Transaction ID",
          "type": "string"
        },
        "userID": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "fileFormat",
        "fileId",
        "userID"
      ],
      "type": "object"
    },
    "RequestStatementRequest": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "account": "67890123456",
          "dateFrom": "2020-02-25T14:53:56.510+0000",
          "dateTo": "2020-02-26T14:53:56.510+0000",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestStatementRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestStatementRequest_payload": {
      "properties": {
        "account": {
          "description": "The NBG account number (e.g. 11 digits).",
          "type": "string"
        },
        "dateFrom": {
          "description": "From date to fetch statements",
          "format": "date-time",
          "type": "string"
        },
        "dateTo": {
          "description": "To date to fetch statements",
          "format": "date-time",
          "type": "string"
        },
        "system": {
          "description": "The system to query for statements ('E' or null for deposits, 'S' for foreign currency accounts)",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "account",
        "dateFrom",
        "dateTo",
        "userId"
      ],
      "type": "object"
    },
    "RequestTransferExpencesComissionsRequest": {
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestTransferExpencesComissionsRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestTransferExpencesComissionsRequest_payload": {
      "properties": {
        "amount": {
          "description": "The transfer amount",
          "format": "double",
          "type": "number"
        },
        "beneficiaryBic": {
          "description": "Bank\u00e2\u20ac\u2122s BIC code when the account number is NOT in IBAN format",
          "type": "string"
        },
        "debitAccount": {
          "description": "The NBG account number (e.g. 11 digits)",
          "type": "string"
        },
        "debitAccountCurrency": {
          "description": "Currency, 3-letter code, e.g. <code>EUR</code>",
          "type": "string"
        },
        "expenses": {
          "description": "Who pays the transaction commission",
          "enum": [
            "SHA",
            "BEN",
            "OUR"
          ],
          "type": "string"
        },
        "massFlag": {
          "description": "MassFlag",
          "type": "string"
        },
        "onlineSend": {
          "description": "Online send for domestic banks, valid for ATTIGRAA, CRBAGRAA, ERBKGRAA, PIRBGRAA",
          "type": "boolean"
        },
        "reason": {
          "description": "Transfer's reason (Uppercase up to 140 characters)",
          "type": "string"
        },
        "receiver": {
          "description": "Receiver name",
          "type": "string"
        },
        "receiverAcc": {
          "description": "Receiver account",
          "type": "string"
        },
        "receiverAccType": {
          "description": "Receiver account type",
          "enum": [
            "IBAN",
            "TEXT"
          ],
          "type": "string"
        },
        "receiverAddr": {
          "description": "Receiver address",
          "type": "string"
        },
        "remCategory": {
          "description": "Remittance category",
          "type": "string"
        },
        "remCurrency": {
          "description": "Remittance's currency",
          "type": "string"
        },
        "remType": {
          "description": "Remittance type (from table)",
          "type": "string"
        },
        "senderRefnum": {
          "description": "Sender reference number",
          "type": "string"
        },
        "systBic": {
          "description": "Clearance system BIC",
          "type": "string"
        },
        "systCode": {
          "description": "Clearance system code",
          "type": "string"
        },
        "systCountry": {
          "description": "Clearance system destination country",
          "type": "string"
        },
        "systType": {
          "description": "Clearance system (values from table, null for NO CLEARANCE SYSTEM)",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "debitAccount",
        "expenses",
        "receiverAcc",
        "remCurrency",
        "userId"
      ],
      "type": "object"
    },
    "RequestUpdateSandboxRequest": {
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestUpdateSandboxRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestUpdateSandboxRequest_payload": {
      "properties": {
        "sandbox": {
          "$ref": "#/definitions/RequestUpdateSandboxRequest_payload_sandbox"
        },
        "userId": {
          "description": "User ID",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestUpdateSandboxRequest_payload_sandbox": {
      "properties": {
        "sanboxId": {
          "description": "Sandbox's Id",
          "type": "string"
        },
        "users": {
          "description": "Sandbox's list of users",
          "items": {
            "$ref": "#/definitions/Sandbox_users"
          },
          "type": "array"
        },
        "version": {
          "description": "Sandbox's version",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RequestUploadInitiationRequest_": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "fileDescription": "test file description",
          "fileIcon": "string",
          "fileName": "testFile.csv",
          "fileSize": 1,
          "folderId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "metadata": "string",
          "userId": "User1",
          "userTags": [
            "Tag1",
            "Tag2",
            "Tag3"
          ]
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestUploadInitiationRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestUploadInitiationRequest_payload": {
      "properties": {
        "fileDescription": {
          "description": "File description",
          "type": "string"
        },
        "fileIcon": {
          "description": "File icon in base64 format",
          "format": "byte",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
          "type": "string"
        },
        "fileName": {
          "description": "File name",
          "type": "string"
        },
        "fileSize": {
          "description": "File size",
          "format": "int64",
          "type": "integer"
        },
        "folderId": {
          "description": "Folder ID",
          "format": "uuid",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        },
        "userTags": {
          "items": {
            "description": "User Tags",
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "fileName",
        "fileSize",
        "userId"
      ],
      "type": "object"
    },
    "RequestUploadRequest_": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "chunkPart": 1,
          "fileContent": "SGVsbG8=",
          "fileId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestUploadRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestUploadRequest_payload": {
      "properties": {
        "chunkPart": {
          "description": "File chunk part",
          "type": "integer"
        },
        "fileContent": {
          "description": "File Content in base64 format",
          "format": "byte",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
          "type": "string"
        },
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "chunkPart",
        "fileContent",
        "fileId",
        "userId"
      ],
      "type": "object"
    },
    "RequestVerifyFileCreditRequest": {
      "additionalProperties": false,
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "account": 4054685740,
          "fileId": "72d64ac6-c991-4c63-a117-f45ce9b70a24",
          "fileType": "CSV",
          "isPayroll": false,
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestVerifyFileCreditRequest_payload"
        }
      },
      "type": "object",
      "required": [
        "header"
      ]
    },
    "RequestVerifyFileCreditRequest_payload": {
      "additionalProperties": false,
      "properties": {
        "account": {
          "description": "User debit account",
          "type": "string"
        },
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        },
        "fileType": {
          "description": "File format. Available file formats are XML, CSV",
          "type": "string"
        },
        "isPayroll": {
          "description": "Payroll flag",
          "type": "boolean"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "account",
        "fileId",
        "fileType",
        "userId"
      ],
      "type": "object"
    },
    "RequestVerifyRequest": {
      "example": {
        "header": {
          "ID": "20674374-8bec-4ed5-908d-e91f9917725e",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "content": "R1I5NjAxMTA2NzgwMDAwMDY3ODkwMTIzNDU4OzAsMDE7RVVSO1RFU1QxDQpHUjk2MDExMDY3ODAwMDAwNjc4OTAxMjM0NTg7MCwwMjtFVVI7VEVTVDINCkdSOTYwMTEwNjc4MDAwMDA2Nzg5MDEyMzQ1ODswLDAzO0VVUjtURVNUMw0K",
          "debitAccount": "67890123456",
          "fileType": "CSV",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/RequestVerifyRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "RequestVerifyRequest_payload": {
      "properties": {
        "content": {
          "description": "Contents of the file",
          "format": "byte",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
          "type": "string"
        },
        "debitAccount": {
          "description": "User's debit account",
          "type": "string"
        },
        "fileType": {
          "description": "File format. Available file formats are XML, CSV",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "ResponseAccountBeneficiaryList": {
      "example": {
        "executionTime": 0,
        "payload": [
          {
            "name": "DIMITRIOS DIMITRIOU",
            "order": "1"
          },
          {
            "name": "KONSTANTINOS PAPADOPOULOS",
            "order": "2"
          }
        ]
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "items": {
            "$ref": "#/definitions/AccountBeneficiary"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResponseAccountFullList": {
      "example": {
        "executionTime": 0,
        "payload": [
          {
            "account": 8000497787,
            "accountType": "2800",
            "alias": "Sight Account",
            "allowConnect": "1",
            "allowCredit": "11",
            "allowDebit": "1",
            "availableBalance": 100000.12,
            "currency": "EUR",
            "features": {
              "beneficiaries": true,
              "cheques": true,
              "mandates": true,
              "otherInfo": true,
              "rates": true,
              "statement": true,
              "transfer": true
            },
            "flag": "0",
            "iban": "GR2801100800000001234567890",
            "isOwnAccount": true,
            "ledgerAccount": "430",
            "ledgerBalance": 100000.12,
            "newMoneyBalance": 0,
            "numberOfMandates": 0,
            "overdraftLimit": 0,
            "product": "728005",
            "serialNo": "1"
          },
          {
            "account": "1234567891",
            "accountType": "3000",
            "alias": "Account",
            "allowConnect": "1",
            "allowCredit": "11",
            "allowDebit": "1",
            "availableBalance": 500000.12,
            "currency": "EUR",
            "features": {
              "beneficiaries": true,
              "cheques": true,
              "mandates": true,
              "otherInfo": true,
              "rates": true,
              "statement": true,
              "transfer": true
            },
            "flag": "0",
            "iban": "GR2801100800000001234567891",
            "isOwnAccount": true,
            "ledgerAccount": "430",
            "ledgerBalance": 500000.12,
            "newMoneyBalance": 0,
            "numberOfMandates": 0,
            "overdraftLimit": 0,
            "product": "430000MI",
            "serialNo": "2"
          }
        ]
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "items": {
            "$ref": "#/definitions/AccountFull"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResponseAmountTransferCancelDomResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "account": "67890123456",
          "accountingBalance": 10000,
          "amount": 1,
          "availableBalance": 10000,
          "remittanceNumber": "70033159790",
          "transactionDate": "2020-02-25T14:53:57.006+0000"
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/AmountTransferCancelDomResponse"
        }
      },
      "type": "object"
    },
    "ResponseBalanceDetails": {
      "example": {
        "executionTime": 0,
        "payload": {
          "accType": "3003",
          "account": "1234567890",
          "accountType": "3000",
          "allowConnect": "1",
          "allowCredit": "11",
          "allowDebit": "1",
          "availableBalance": 100000.12,
          "availableLimitAmount": 0,
          "chequeReservation": 0,
          "createDate": "2020-02-25T14:53:56.639+0000",
          "currency": "EUR",
          "deptReservation": 0,
          "excessLimitAmount": 0,
          "expirationDate": "2021-02-24T14:53:56.639+0000",
          "features": {
            "beneficiaries": true,
            "cheques": true,
            "mandates": true,
            "otherInfo": true,
            "rates": true,
            "statement": true,
            "transfer": true
          },
          "freeChequeAmnt": 0,
          "iban": "GR2801100800000001234567890",
          "interestAccrued": 0,
          "interestPeriod": "0",
          "interestRate": 0,
          "interestScale": 538,
          "irisBalance": 0,
          "isOwnAccount": true,
          "lastTransactionDate": "2020-02-25T14:53:56.639+0000",
          "ledgerAccount": "430",
          "ledgerBalance": 100000.12,
          "mandatesNumber": 0,
          "newMoneyBalance": 0,
          "overdraftLimit": 0,
          "product": "430000MI"
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/BalanceDetails"
        }
      },
      "type": "object"
    },
    "ResponseBankData": {
      "example": {
        "executionTime": 0,
        "payload": {
          "bankAddress": "AIOLOU STREET 86",
          "bankBic": "ETHNGRAA",
          "bankCity": "ATHENS",
          "bankCountry": "GREECE",
          "bankTitle": "NATIONAL BANK OF GREECE S.A."
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/BankData"
        }
      },
      "type": "object"
    },
    "ResponseBankResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "bankBic": "ETHNGRAA",
          "bankTitle": "\u0395\u0398\u039d\u0399\u039a\u0397 \u03a4\u03a1\u0391\u03a0\u0395\u0396\u0391",
          "code": "011",
          "name": "\u0395\u0398\u039d\u0399\u039a\u0397 \u03a4\u03a1\u0391\u03a0\u0395\u0396\u0391"
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/BankResponse"
        }
      },
      "type": "object"
    },
    "ResponseBanksBicList": {
      "example": {
        "executionTime": 0,
        "payload": [
          {
            "bankAddress": "A60 QUEEN VICTORIA STREET",
            "bankBic": "HBUKGB4194R",
            "bankBranch": "(CITY OF LONDON BRANCH (401160))",
            "bankCity": "LONDON",
            "bankCountry": "UNITED KINGDOM",
            "bankTitle": "HSBC BANK PLC"
          },
          {
            "bankBic": "MIDLGB2192K",
            "bankBranch": "(LONDON RSCE DWP)",
            "bankCity": "LONDON",
            "bankCountry": "UNITED KINGDOM",
            "bankTitle": "HSBC BANK PLC"
          }
        ]
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "items": {
            "$ref": "#/definitions/BankData"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResponseBoolean": {
      "example": {
        "executionTime": 0,
        "payload": true
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ResponseCCAvailableAmountResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "domesticRemittance": 49992,
          "foreignRemittance": 2000,
          "newCash": 0,
          "newMoney": 0,
          "newMoneyEpend": 0,
          "newMoneyPerc": 0,
          "withdraw": 5000
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/CCAvailableAmountResponse"
        }
      },
      "type": "object"
    },
    "ResponseCardDetailsResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "card": {
            "color": "NONE",
            "creditBalance": 0,
            "creditLimit": 0,
            "delayAmount": 10,
            "delayDate": "2020-02-25T14:53:56.840+0000",
            "expirationDate": "08/2022",
            "features": {
              "canBeCanceled": false,
              "canBeUpdated": false,
              "hasAccounts": false,
              "hasAlerts": true,
              "hasLimitSet": false,
              "hasOtherInfo": true,
              "quickCredit": {
                "accountCurrency": "EUR",
                "canBeInactive": false,
                "hasComission": false,
                "isAmountRetreived": false,
                "isDeferred": false,
                "supportsQuickCredit": false
              },
              "supportsQuickDebit": false
            },
            "futureDueAmount": 100,
            "issuedBy": "NBG",
            "kind": "\u00ce\u0161\u00ce\u2018\u00ce\u00a1\u00ce\u00a4\u00ce\u2018",
            "ledgerBalance": 0,
            "limitATM": 600,
            "limitINT": 0,
            "limitPOS": 1000,
            "microtagType": "NONE",
            "minimumPayment": 15,
            "number": "1234567890123456",
            "paymentDate": "2020-02-25T14:53:56.830+0000",
            "productName": "VISA PREPAID",
            "statementAddress": "PYROU 62",
            "statementAddressCity": "ATHENS",
            "statementAmount": 0,
            "statementDate": "2013-07-12T00:00:00.000+0000",
            "statementDeliver": "1",
            "statementEmail": "G.TSIAMTSOURIS@GMAIL.COM",
            "status": "1",
            "type": "PCV"
          }
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/CardDetailsResponse"
        }
      },
      "type": "object"
    },
    "ResponseCardStatementResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "cardNumber": "1234567890123456",
          "creditLimit": 0,
          "endLedgerBalance": 0,
          "endTimestamp": "2020-02-25T14:53:56.828+0000",
          "expirationDate": "2022-08-30T21:00:00.000+0000",
          "finalLedgerBalance": 0,
          "productName": "VISA PREPAID",
          "startLedgerBalance": 0,
          "startTimestamp": "2020-02-25T14:53:56.828+0000",
          "transactions": [
            {
              "amount": -1,
              "cardNumber": "1234567890123456",
              "creditDebitFlag": "Debit",
              "ledgerBalance": 1499,
              "reasonText": "Transaction's reason (e.g. Amazon Marketplace)",
              "serialNum": "1",
              "tranDate": "2020-02-25T14:53:56.828+0000",
              "transactionDateTime": "2020-02-25T14:53:56.828+0000"
            },
            {
              "amount": -10,
              "cardNumber": "1234567890123456",
              "creditDebitFlag": "Debit",
              "ledgerBalance": 1500,
              "reasonText": "Transaction's reason (e.g. Amazon Marketplace)",
              "serialNum": "2",
              "tranDate": "2020-02-25T14:53:56.829+0000",
              "transactionDateTime": "2020-02-25T14:53:56.829+0000"
            }
          ]
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/CardStatementResponse"
        }
      },
      "type": "object"
    },
    "ResponseCardsFetchResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "cards": [
            {
              "creditBalance": 0,
              "creditLimit": 0,
              "delayAmount": 10,
              "delayDate": "2020-02-25T14:53:56.846+0000",
              "expirationDate": "08/2022",
              "features": {
                "canBeCanceled": false,
                "canBeUpdated": false,
                "hasAccounts": false,
                "hasAlerts": true,
                "hasLimitSet": false,
                "hasOtherInfo": true,
                "quickCredit": {
                  "canBeInactive": false,
                  "hasComission": false,
                  "isAmountRetreived": false,
                  "isDeferred": false,
                  "supportsQuickCredit": false
                },
                "supportsQuickDebit": false
              },
              "futureDueAmount": 100,
              "issuedBy": "NBG",
              "ledgerBalance": 0,
              "limitATM": 600,
              "limitINT": 0,
              "limitPOS": 1000,
              "minimumPayment": 15,
              "number": "1234567890123456",
              "paymentDate": "2020-02-25T14:53:56.846+0000",
              "productName": "VISA PREPAID",
              "statementAmount": 0,
              "status": "1",
              "type": "PCV"
            }
          ]
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/CardsFetchResponse"
        }
      },
      "type": "object"
    },
    "ResponseCodeDescriptionList": {
      "example": {
        "executionTime": 0,
        "payload": [
          {
            "code": "001",
            "description": "Code Description 1"
          },
          {
            "code": "002",
            "description": "Code Description 2"
          },
          {
            "code": "003",
            "description": "Code Description 3"
          }
        ]
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "items": {
            "$ref": "#/definitions/CodeDescription"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResponseCountriesList": {
      "example": {
        "executionTime": 0,
        "payload": [
          {
            "code": "CA",
            "description": "CANADA"
          },
          {
            "code": "CY",
            "description": "CYPRUS"
          },
          {
            "code": "FR",
            "description": "FRANCE"
          }
        ]
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "items": {
            "$ref": "#/definitions/CodeDescription"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResponseCreditCardOtherPayResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "accountingBalance": 1000,
          "amount": 5,
          "availableBalance": 981651.15,
          "bankCode": "ETHNGRAA",
          "beneficiary": "BENEFICIARY NAME",
          "comissionDias": 1,
          "comissionEte": 1,
          "creditCardNumber": "1234567890123456",
          "creditCardPublishBank": "Other bank",
          "debitAccount": 1234567890,
          "deferred": {
            "deferredDate": "2020-02-26T14:53:56.843+0000",
            "deferredFrequency": 1,
            "deferredName": "Deferred Payment",
            "deferredTotalPayments": 6,
            "isDeferred": true
          },
          "isDeferred": true,
          "orderNo": "1",
          "tanCheck": "smsotp",
          "transactionDate": "2020-02-25T14:53:56.844+0000"
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/CreditCardOtherPayResponse"
        }
      },
      "type": "object"
    },
    "ResponseCreditCardPaymentResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "amount": 5,
          "availableBalance": 981651.15,
          "creditCardNumber": "1234567890123456",
          "debitAccount": 1234567890,
          "deferred": {
            "deferredDate": "2020-02-26T14:53:56.842+0000",
            "deferredFrequency": 1,
            "deferredName": "Deferred Payment",
            "deferredTotalPayments": 6,
            "isDeferred": true
          },
          "isDeferred": true,
          "tanCheck": "smsotp",
          "transactionDate": "2020-02-25T14:53:56.843+0000"
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/CreditCardPaymentResponse"
        }
      },
      "type": "object"
    },
    "ResponseCurrencyList": {
      "example": {
        "executionTime": 0,
        "payload": [
          {
            "code": "001",
            "literal": "GRD"
          },
          {
            "code": "002",
            "literal": "USD"
          },
          {
            "code": "070",
            "literal": "EUR"
          }
        ]
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "items": {
            "$ref": "#/definitions/Currency"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResponseDeleteResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "success": true
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/ResponseDeleteResponse_payload"
        }
      },
      "type": "object"
    },
    "ResponseDeleteResponse_payload": {
      "properties": {
        "success": {
          "description": "Flag indicating if the file got deleted or not",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ResponseDuplicateQueryResponse": {
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/DuplicateQueryResponse"
        }
      },
      "type": "object"
    },
    "ResponseFindSurnameResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "numberGr": "11",
          "pPoGr": "15121",
          "poEn": "15121",
          "streetEn": "AIOLOU",
          "streetGr": "\u0391\u0399\u039f\u039b\u039f\u03a5",
          "surnameEn": "DIMITRIOS DIMITRIOU",
          "surnameGr": "\u0394\u0397\u039c\u0397\u03a4\u03a1\u0399\u039f\u03a3 \u0394\u0397\u039c\u0397\u03a4\u03a1\u0399\u039f\u03a5"
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/FindSurnameResponse"
        }
      },
      "type": "object"
    },
    "ResponseGenericTransferOptionsResponse": {
      "additionalProperties": false,
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/ResponseGenericTransferOptionsResponse_"
        }
      },
      "type": "object"
    },
    "ResponseGenericTransferOptionsResponse_": {
      "additionalProperties": false,
      "properties": {
        "addressRequired": {
          "description": "True if address is required",
          "type": "boolean"
        },
        "bankName": {
          "description": "Name of the Greek Bank, only for domestic transfers",
          "example": "",
          "type": "string"
        },
        "benAllowed": {
          "description": "True if charges are allowed to Beneficiary",
          "type": "boolean"
        },
        "benNameAcceptsGreek": {
          "description": "True if Beneficiary's Name accepts greek characters",
          "type": "boolean"
        },
        "city": {
          "description": "City of the Beneficiary's Bank",
          "example": "",
          "type": "string"
        },
        "country": {
          "description": "Country of the Beneficiary's Bank",
          "example": "",
          "type": "string"
        },
        "countryCode": {
          "description": "ISO Country Code of the beneficiary",
          "example": "",
          "type": "string"
        },
        "current247Allowed": {
          "description": "True if Instant Send is allowed, not through IB.",
          "type": "boolean"
        },
        "fxAllowed": {
          "description": "True if Foreighn Currency is allowed",
          "type": "boolean"
        },
        "ibanRequired": {
          "description": "True if IBAN is required",
          "type": "boolean"
        },
        "instantSendAllowed": {
          "description": "True if Instant Payment SEPA is allowed",
          "type": "boolean"
        },
        "internationalBankName": {
          "description": "Name of International Bank, only for foreighn transfers",
          "example": "",
          "type": "string"
        },
        "onlineSendAllowed": {
          "description": "True if Online Secd IRIS is allowed",
          "type": "boolean"
        },
        "owrAllowed": {
          "description": "True if charges are allowed to ordering Customer",
          "type": "boolean"
        },
        "reasonAcceptsGreek": {
          "description": "True if Reason accepts greek characters",
          "type": "boolean"
        },
        "streetAddress": {
          "description": "Address of the Beneficiary's Bank",
          "example": "",
          "type": "string"
        },
        "urgentAllowed": {
          "description": "True if Urgent Send is allowed",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ResponseGenericTransferResponse": {
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/GenericTransferResponse"
        }
      },
      "type": "object"
    },
    "ResponseGetCurrentUserResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "IsCorporate": false,
          "smsOtpMobile": "(697)****111",
          "userId": "User1"
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/GetCurrentUserResponse"
        }
      },
      "type": "object"
    },
    "ResponseGetFileDetailsResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "chunksUploaded": 1,
          "createdByUserId": "User1",
          "createdByUserRegistry": "IBank",
          "createdOn": "2018-02-02T00:00:00Z",
          "fileDescription": "My file 1",
          "fileId": "7d66145b-f9b5-4202-855f-d7d09cfc95a1",
          "fileName": "File1.txt",
          "fileSize": 10,
          "metadata": "customProperty :customerPropertyValue",
          "status": "Completed",
          "totalChunks": 1,
          "updatedOn": "2018-02-03T00:00:00Z",
          "userTags": [
            "PersonalFile"
          ]
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/ResponseGetFileDetailsResponse_payload"
        }
      },
      "type": "object"
    },
    "ResponseGetFileDetailsResponse_payload": {
      "properties": {
        "chunksUploaded": {
          "description": "Number of uploaded file chunks",
          "type": "integer"
        },
        "createdByUserId": {
          "description": "User ID",
          "type": "string"
        },
        "createdByUserRegistry": {
          "description": "User registry",
          "type": "string"
        },
        "createdOn": {
          "description": "File creation date",
          "format": "date-time",
          "type": "string"
        },
        "fileDescription": {
          "description": "File description",
          "type": "string"
        },
        "fileIcon": {
          "description": "File icon in base64 format",
          "format": "byte",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
          "type": "string"
        },
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        },
        "fileName": {
          "description": "File name",
          "type": "string"
        },
        "fileSize": {
          "description": "File size",
          "type": "integer"
        },
        "metadata": {
          "description": "Metadata",
          "type": "string"
        },
        "status": {
          "description": "Status e.g. Completed",
          "type": "string"
        },
        "statusReason": {
          "description": "Status reason",
          "type": "string"
        },
        "systemTags": {
          "description": "System tags",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "totalChunks": {
          "description": "Total file chunks",
          "type": "integer"
        },
        "updatedByUserId": {
          "description": "User ID",
          "type": "string"
        },
        "updatedByUserRegistry": {
          "description": "User registry",
          "type": "string"
        },
        "updatedOn": {
          "description": "File update date",
          "format": "date-time",
          "type": "string"
        },
        "userTags": {
          "description": "User tags",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResponseGetFileListResponse": {
      "example": {
        "executionTime": 0,
        "payload": [
          {
            "chunksUploaded": 1,
            "createdByUserId": "User1",
            "createdByUserRegistry": "IBank",
            "createdOn": "2018-02-02T00:00:00Z",
            "fileDescription": "My file 1",
            "fileId": "7d66145b-f9b5-4202-855f-d7d09cfc95a1",
            "fileName": "File1.txt",
            "fileSize": 10,
            "metadata": "customProperty :customerPropertyValue",
            "status": "Completed",
            "totalChunks": 1,
            "updatedOn": "2018-02-03T00:00:00Z",
            "userTags": [
              "PersonalFile"
            ]
          },
          {
            "chunksUploaded": 1,
            "createdByUserId": "User1",
            "createdByUserRegistry": "IBank",
            "createdOn": "2018-02-07T00:00:00Z",
            "fileDescription": "My file 2",
            "fileId": "4ef526c7-a0e5-407e-8a8d-bd8d70e2451d",
            "fileName": "File2.csv",
            "fileSize": 5,
            "metadata": "customProperty :customerPropertyValue",
            "status": "Completed",
            "totalChunks": 1,
            "updatedOn": "2018-02-08T00:00:00Z",
            "userTags": [
              "PersonalFile2"
            ]
          }
        ]
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/ResponseGetFileListResponse_payload_array"
        }
      },
      "type": "object"
    },
    "ResponseGetFileListResponse_object": {
      "properties": {
        "chunksUploaded": {
          "description": "Number of uploaded file chunks",
          "type": "integer"
        },
        "createdByUserId": {
          "description": "User ID",
          "type": "string"
        },
        "createdByUserRegistry": {
          "description": "User registry",
          "type": "string"
        },
        "createdOn": {
          "description": "File creation date",
          "format": "date-time",
          "type": "string"
        },
        "fileDescription": {
          "description": "File description",
          "type": "string"
        },
        "fileIcon": {
          "description": "File icon in base64 format",
          "format": "byte",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
          "type": "string"
        },
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        },
        "fileName": {
          "description": "File name",
          "type": "string"
        },
        "fileSize": {
          "description": "File size",
          "type": "integer"
        },
        "metadata": {
          "description": "Metadata",
          "type": "string"
        },
        "status": {
          "description": "Status e.g. Completed",
          "type": "string"
        },
        "statusReason": {
          "description": "Status reason",
          "type": "string"
        },
        "systemTags": {
          "description": "System tags",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "totalChunks": {
          "description": "Total file chunks",
          "type": "integer"
        },
        "updatedByUserId": {
          "description": "User ID",
          "type": "string"
        },
        "updatedByUserRegistry": {
          "description": "User registry",
          "type": "string"
        },
        "updatedOn": {
          "description": "File update date",
          "format": "date-time",
          "type": "string"
        },
        "userTags": {
          "description": "User tags",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResponseGetFileListResponse_payload_array": {
      "items": {
        "$ref": "#/definitions/ResponseGetFileListResponse_object"
      },
      "type": "array"
    },
    "ResponseGetFileResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "fileContent": "SGVsbG8="
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/ResponseGetFileResponse_payload"
        }
      },
      "type": "object"
    },
    "ResponseGetFileResponse_payload": {
      "properties": {
        "fileContent": {
          "description": "File content in base64 format",
          "format": "byte",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResponseGetHoldings": {
      "example": {
        "executionTime": 0,
        "payload": {
          "allHoldings": [
            {
              "action": "INTISO2",
              "atermId": "70401",
              "authUser": "02",
              "branchAcc": "067",
              "branchSnd": "704",
              "channel": "05",
              "date": "2021-03-29T00:00:00Z",
              "expirationDate": "2021-04-18T00:00:00Z",
              "holdAmount": 12.6,
              "holdDescription": "",
              "holdKey": "L08801IU3F20",
              "holdReason": "\u0391\u0393\u039f\u03a1\u0391 AVRAAM 5812;4165810001896195;00;0021452743 ;72402719",
              "holdType": "48",
              "initHoldAmount": 12.6,
              "ledgerBalance": -208.04,
              "operationId": "83112",
              "partHoldAmount": 0,
              "timestamp": "2021-03-29-20.52.48.282653",
              "timestampPart": "0001-01-01-00.00.00.000000",
              "transId": "1200",
              "trnumb": "001",
              "userId": "",
              "wsid": "02",
              "yphresia": "90"
            },
            {
              "action": "INTJS87",
              "atermId": "7001",
              "authUser": "",
              "branchAcc": "080",
              "branchSnd": "700",
              "channel": "06",
              "date": "2020-10-30T00:00:00+02:00",
              "expirationDate": "9999-12-31T00:00:00+02:00",
              "holdAmount": 14,
              "holdDescription": "",
              "holdKey": "70033199467",
              "holdReason": "\u0395\u039a\u0394\u039f\u03a3\u0397 \u0395\u039c\u0392\u0391\u03a3\u039c\u0391\u03a4\u039f\u03a3",
              "holdType": "59",
              "initHoldAmount": 14,
              "ledgerBalance": -3709.89,
              "operationId": "90003",
              "partHoldAmount": 0,
              "timestamp": "2020-10-30-17.39.55.268653",
              "timestampPart": "0001-01-01-00.00.00.000000",
              "transId": "2200",
              "trnumb": "",
              "userId": "User1",
              "wsid": "00000070001",
              "yphresia": ""
            }
          ]
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/AllHoldingsList"
        }
      },
      "type": "object"
    },
    "ResponseIbComissionAmRequest": {
      "example": {
        "header": {
          "ID": "86e18850-17c8-497e-b42f-0e46214988ee",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "account": "67890123456",
          "amount": 1,
          "branch": "700",
          "transactionId": "INTVCFO",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/ResponseIbComissionAmRequest_payload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "ResponseIbComissionAmRequest_payload": {
      "properties": {
        "account": {
          "description": "Account",
          "type": "string"
        },
        "amount": {
          "description": "Amount",
          "format": "double",
          "type": "number"
        },
        "branch": {
          "description": "Branch of bank to search for.",
          "type": "string"
        },
        "institutionId": {
          "description": "Institution Id",
          "type": "string"
        },
        "transactionId": {
          "description": "Transaction id",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "amount",
        "transactionId",
        "userId"
      ],
      "type": "object"
    },
    "ResponseIbComissionAmResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "amount": 5,
          "amountAgent": 0.2
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/IbComissionAmResponse"
        }
      },
      "type": "object"
    },
    "ResponseIbanInfoResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "beneficiaries": [
            "DI******S D********",
            "KO*********S P***********"
          ],
          "bic": "ETHNGRAAXXX",
          "isValidIban": true
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/IbanInfoResponse"
        }
      },
      "type": "object"
    },
    "ResponseInterestScaleClientResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "interestScales": [
            {
              "from": 0,
              "rate": 0.01,
              "to": 100000
            },
            {
              "from": 100000,
              "rate": 0.05,
              "to": 9999999999999
            }
          ]
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/InterestScaleClientResponse"
        }
      },
      "type": "object"
    },
    "ResponseMassiveTransfersExpensesResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "amount": 3,
          "comission": 1.2,
          "count": 2,
          "hasErrors": false,
          "records": [
            {
              "comission": 1,
              "error": "",
              "transfer": {
                "amount": 1,
                "beneficiaryBic": "ETHNGRAA",
                "currency": "EUR",
                "debitAccount": "67890123456",
                "expenses": "OUR",
                "reason": "TRANSFER REASON",
                "receiverAcc": "GR5301106780000067890123456",
                "receiverAccType": "IBAN",
                "receiverGR": "USER 2",
                "transferType": "NBG",
                "userId": "User1"
              }
            },
            {
              "comission": 0.2,
              "error": "",
              "transfer": {
                "amount": 2,
                "beneficiaryBic": "ETHNGRAA",
                "currency": "EUR",
                "debitAccount": "67890123456",
                "expenses": "OUR",
                "reason": "TRANSFER REASON",
                "receiverAcc": "GR5301106780000067890123456",
                "receiverAccType": "IBAN",
                "receiverGR": "USER 2",
                "transferType": "NBG",
                "userId": "User1"
              }
            }
          ],
          "total": 4.2
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/MassiveTransfersExpensesResponse"
        }
      },
      "type": "object"
    },
    "ResponseMassiveTransfersResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "tanCheck": "331",
          "transactionDate": "2020-02-25T14:53:57.003+0000",
          "transactionId": "4958338929"
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/MassiveTransfersResponse"
        }
      },
      "type": "object"
    },
    "ResponseMassiveTransfersStatusResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "records": [
            {
              "amount": 1,
              "creditIBAN": "GR5301106780000067890123456",
              "debitIBAN": "GR2801100800000067890123456",
              "error": "TO_EXECUTE",
              "externalSystem": "ROT",
              "reason": "TRANSFER REASON",
              "succedded": false
            },
            {
              "amount": 2,
              "creditIBAN": "GR5301106780000067890123456",
              "debitIBAN": "GR2801100800000067890123456",
              "error": "TO_EXECUTE",
              "externalSystem": "ROT",
              "reason": "TRANSFER REASON",
              "succedded": false
            }
          ]
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/MassiveTransfersStatusResponse"
        }
      },
      "type": "object"
    },
    "ResponseMessage": {
      "properties": {
        "cat": {
          "enum": [
            "Business",
            "Communication",
            "Technical",
            "Security"
          ],
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "sev": {
          "enum": [
            "Warning",
            "Error",
            "Info"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResponseMultipleBalancesDetails": {
      "example": {
        "executionTime": 0,
        "payload": [
          {
            "accType": "3003",
            "account": "67890123456",
            "accountType": "3000",
            "allowConnect": "1",
            "allowCredit": "11",
            "allowDebit": "1",
            "availableBalance": 100000.12,
            "availableLimitAmount": 0,
            "chequeReservation": 0,
            "createDate": "2020-02-25T14:53:56.639+0000",
            "currency": "EUR",
            "deptReservation": 0,
            "excessLimitAmount": 0,
            "expirationDate": "2021-02-24T14:53:56.639+0000",
            "features": {
              "beneficiaries": true,
              "cheques": true,
              "mandates": true,
              "otherInfo": true,
              "rates": true,
              "statement": true,
              "transfer": true
            },
            "freeChequeAmnt": 0,
            "iban": "GR2801100800000067890123456",
            "interestAccrued": 0,
            "interestPeriod": "0",
            "interestRate": 0,
            "interestScale": 538,
            "irisBalance": 0,
            "isOwnAccount": true,
            "lastTransactionDate": "2020-02-25T14:53:56.639+0000",
            "ledgerAccount": "430",
            "ledgerBalance": 100000.12,
            "mandatesNumber": 0,
            "newMoneyBalance": 0,
            "overdraftLimit": 0,
            "product": "430000MI"
          },
          {
            "accType": "3003",
            "account": "67890126543",
            "accountType": "3000",
            "allowConnect": "1",
            "allowCredit": "11",
            "allowDebit": "1",
            "availableBalance": 100000.12,
            "availableLimitAmount": 0,
            "chequeReservation": 0,
            "createDate": "2020-02-25T14:53:56.639+0000",
            "currency": "EUR",
            "deptReservation": 0,
            "excessLimitAmount": 0,
            "expirationDate": "2021-02-24T14:53:56.639+0000",
            "features": {
              "beneficiaries": true,
              "cheques": true,
              "mandates": true,
              "otherInfo": true,
              "rates": true,
              "statement": true,
              "transfer": true
            },
            "freeChequeAmnt": 0,
            "iban": "GR2801100800000067890126543",
            "interestAccrued": 0,
            "interestPeriod": "0",
            "interestRate": 0,
            "interestScale": 538,
            "irisBalance": 0,
            "isOwnAccount": true,
            "lastTransactionDate": "2020-02-25T14:53:56.639+0000",
            "ledgerAccount": "430",
            "ledgerBalance": 100000.12,
            "mandatesNumber": 0,
            "newMoneyBalance": 0,
            "overdraftLimit": 0,
            "product": "430000MI"
          }
        ]
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "items": {
            "$ref": "#/definitions/BalanceDetails"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResponseOtherCreditCardPayStatusResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "account": 1234567890,
          "amount": 5,
          "beneficiary": "BENEFICIARY NAME",
          "creditCard": "1234567890123456",
          "orderNo": "1",
          "paymentDate": "2020-02-25T14:53:56.845+0000",
          "paymentStatus": "Pending",
          "publishBank": "Other bank"
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/OtherCreditCardPayStatusResponse"
        }
      },
      "type": "object"
    },
    "ResponsePayFileCreditResponse": {
      "additionalProperties": false,
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/ResponsePayFileCreditResponse_payload"
        }
      },
      "type": "object"
    },
    "ResponsePayFileCreditResponse_payload": {
      "additionalProperties": false,
      "properties": {
        "chargesAccount": {
          "description": "Charges account",
          "type": "string"
        },
        "debitAccount": {
          "description": "Debit account",
          "example": "GR4701100120000001200119673",
          "type": "string"
        },
        "deferredFileId": {
          "description": "Deferred file id",
          "example": "4435540988",
          "type": "string"
        },
        "fileName": {
          "description": "File name",
          "example": "MassCredits_1019614.xml",
          "type": "string"
        },
        "fileType": {
          "description": "File type",
          "example": "text/csv",
          "type": "string"
        },
        "id": {
          "description": "Transaction ID",
          "example": "516515e3-820b-4bf7-b7fe-7d524f64ca19",
          "format": "uuid",
          "type": "string"
        },
        "isDuplicate": {
          "description": "Flag indicating if the file is a duplicate",
          "type": "boolean"
        },
        "records": {
          "description": "Records array",
          "items": {
            "$ref": "#/definitions/PayFileRecordRequest_"
          },
          "type": "array"
        },
        "requiresApproval": {
          "description": "Flag indicating if the file requires approval",
          "example": false,
          "type": "boolean"
        },
        "tanCheck": {
          "description": "Tan check received along with the OTP via SMS/Viber",
          "example": "433",
          "type": "string"
        },
        "totalAmount": {
          "description": "Total amount of file's records with commissions",
          "example": 0.6,
          "format": "double",
          "type": "number"
        },
        "totalCommission": {
          "description": "Total commission amount",
          "example": 0.6,
          "format": "double",
          "type": "number"
        },
        "totalFileAmount": {
          "description": "Total net amount of file's records",
          "example": 0.06,
          "format": "double",
          "type": "number"
        },
        "totalRecords": {
          "description": "Total number of file's records",
          "example": 3,
          "format": "int32",
          "type": "integer"
        },
        "totalSuccRecords": {
          "description": "Total successful records",
          "example": 3,
          "format": "int32",
          "type": "integer"
        },
        "transactionDate": {
          "description": "Transaction date",
          "example": "2020-10-06T16:44:33.9450956+03:00",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResponseProcessResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "transfers": [
            {
              "amount": 1,
              "beneficiaryBic": "ETHNGRAA",
              "currency": "EUR",
              "debitAccount": "67890123456",
              "debitAccountCurrency": "EUR",
              "deferred": {
                "isDeferred": false
              },
              "expenses": 2,
              "isSmsOtp": true,
              "onlineSend": true,
              "reason": "TRANSFER REASON",
              "receiverAcc": "GR5301106780000067890123456",
              "receiverAccType": 0,
              "receiverGR": "USER 2",
              "tanNumber": "smsotp",
              "transferType": 0,
              "userId": "User1"
            },
            {
              "amount": 2,
              "beneficiaryBic": "ETHNGRAA",
              "currency": "EUR",
              "debitAccount": "67890123456",
              "debitAccountCurrency": "EUR",
              "deferred": {
                "isDeferred": false
              },
              "expenses": 2,
              "isSmsOtp": true,
              "onlineSend": true,
              "reason": "TRANSFER REASON",
              "receiverAcc": "GR5301106780000067890123456",
              "receiverAccType": 1,
              "receiverGR": "USER 2",
              "tanNumber": "smsotp",
              "transferType": 0,
              "userId": "User1"
            }
          ]
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/ProcessResponse"
        }
      },
      "type": "object"
    },
    "ResponseRemittanceQueryResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "amount": 1.5,
          "cancelCode": "ERRO",
          "cancelFees": 0,
          "cancelText": "\u03a5\u03a0\u0391\u03a1\u03a7\u0395\u0399 \u0397\u0394\u0397 \u0391\u0399\u03a4\u0397\u039c\u0391 \u0391\u039a\u03a5\u03a1\u03a9\u03a3\u0397\u03a3",
          "channel": "INTER",
          "charges": "SHAR",
          "chargesAmnt": 0,
          "chargesXT": 1,
          "cmdCRA": "8186911014",
          "comission": 1,
          "countryPay": "GR",
          "credAccType": "I",
          "credAccountIBAN": "GR4601710400006040040030372",
          "credAddrLine1": "",
          "credAddrLine2": "",
          "credAgent": "PIRBGRAA",
          "credAgent1": "\u03a4\u03a1\u0391\u03a0\u0395\u0396\u0391 \u03a0\u0395\u0399\u03a1\u0391\u0399\u03a9\u03a3",
          "credAgent2": "",
          "credAgentAcc": "",
          "credAgentBranch": "",
          "credCRA": "",
          "credIdentif": "",
          "currBenefit": 0,
          "currRate": 1,
          "currency": "EUR",
          "dateCancel": "2020-02-25T14:53:57.005Z",
          "datePost": "2020-02-25T14:53:57.004+0000",
          "dateSwmsg": "2021-01-10T22:00:00Z",
          "debtAccount": "08000497787",
          "debtAccountIBAN": "GR5601100800000008000497787",
          "debtAddrLine1": "ODOS PLATONOS 62 17673",
          "debtAddrLine2": "",
          "debtAgent": "ETHNGRAA",
          "debtAgentBranch": "0700",
          "debtIdentif": "",
          "debtName": "DIMITRIOS DIMITRIOU ANDREAS",
          "department": "",
          "endToendId": "",
          "indCancel": " ",
          "indDebtIBAN": "1",
          "indPost": "1",
          "indRecall": " ",
          "indSwmsg": " ",
          "info1": "",
          "info2": "",
          "info3": "",
          "info4": "",
          "info5": "",
          "info6": "",
          "instrAmount": 1.5,
          "intermBank": "",
          "issueBranch": "700",
          "issueDate": "2020-02-25T14:53:57.004+0000",
          "issueTime": "14.31.14",
          "message": "",
          "mid": "LA1BB2738FB6DXSE",
          "nbgId": "70033159777",
          "nonSTP": "0",
          "notSTPAmnt": 0,
          "priority": "0",
          "procStatus": "W    ",
          "product": "100",
          "recallFees": 0,
          "receiverBank": "",
          "receiverCity": "ATHENS",
          "receiverTitle": "",
          "reference": "IFTI700332050001",
          "remType": "RNB",
          "remittanceInfo": "TRANSFER REASON",
          "senderBank": "PIRBGRAA",
          "senderCity": "",
          "senderTitle": "NATIONAL BANK OF GREECE S.A.",
          "text": [
            "\u039a\u03a9\u0394\u0399\u039a\u039f\u03a3 \u03a0\u03a1\u039f\u039c\u0397\u0398\u0395\u0399\u0391\u03a3  :",
            "\u0397 \u0395\u039d\u03a4\u039f\u039b\u0397 \u0395\u0393\u039a\u03a1\u0399\u0398\u0397\u039a\u0395 \u03a4\u0397\u039d 11.01.2021",
            "\u039b\u039f\u0393\u0399\u03a3\u03a4\u0399\u039a\u039f\u03a0\u039f\u0399\u0397\u03a3\u0397 \u0391\u03a0\u039f \u039a\u0395\u039d\u03a4\u03a1.\u03a5\u03a0\u0397\u03a1\u0395\u03a3\u0399\u0391 \u03a4\u0397\u039d: 11.01.2021-11.27.00",
            "POSTING MOP/ACCOUNT: DIAS-CT                 70361000071",
            "POSTING VALUE DATE:  12.01.2021",
            "\u0395\u03a7\u0395\u0399 \u039a\u0391\u03a4\u0391\u03a7\u03a9\u03a1\u0397\u0398\u0395\u0399 \u0391\u0399\u03a4\u0397\u039c\u0391 \u0391\u039a\u03a5\u03a1\u03a9\u03a3\u0397\u03a3 \u03a4\u0397\u039d 24.03.2021"
          ],
          "timePost": "11.27.00",
          "timeSwmsg": "11.27.38",
          "valeur": "2021-01-11T22:00:00Z"
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/RemittanceQueryResponse"
        }
      },
      "type": "object"
    },
    "ResponseResultPayCreditWithFileResponse": {
      "additionalProperties": false,
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/ResponseResultPayCreditWithFileResponse_payload"
        }
      },
      "type": "object"
    },
    "ResponseResultPayCreditWithFileResponse_payload": {
      "additionalProperties": false,
      "properties": {
        "fileId": {
          "description": "File ID of the outcome file",
          "example": "c7a24448-256b-46b0-b8c3-a418dff446ea",
          "format": "uuid",
          "type": "string"
        },
        "fileName": {
          "description": "Name of the outcome file",
          "example": "MassiveTransfers_6948064912.pdf",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResponseSandbox": {
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "description": "This should be a /definitions/Sandbox",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResponseString": {
      "example": {
        "executionTime": 0,
        "payload": "ETHNGRAA"
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResponseTransactionList": {
      "example": {
        "executionTime": 0,
        "payload": [
          {
            "accountingBalance": 999,
            "amount": -1,
            "amountEquivalent": -1,
            "branch": "700",
            "creditDebit": "Debit",
            "currency": "070",
            "date": "2019-01-14T15:50:49.000+0000",
            "description": "Sample Transfer",
            "externalSystem": "RNB",
            "reference": "28239237",
            "relatedAccount": "GR2801100800000001234567890",
            "relatedName": "DIMITRIOS DIMITRIOU ANDREAS",
            "serialNum": "2",
            "timestamp": "2019-01-14-17.50.49.667400",
            "trans": "10",
            "valeur": "2019-01-15T22:00:00.000+0000"
          },
          {
            "accountingBalance": 1000,
            "amount": -10,
            "amountEquivalent": -10,
            "branch": "700",
            "creditDebit": "Debit",
            "currency": "070",
            "date": "2019-01-14T15:50:49.000+0000",
            "description": "Sample Transfer",
            "externalSystem": "RNB",
            "reference": "55624813",
            "relatedAccount": "GR2801100800000001234567890",
            "relatedName": "DIMITRIOS DIMITRIOU ANDREAS",
            "serialNum": "1",
            "timestamp": "2019-01-14-17.50.49.667400",
            "trans": "10",
            "valeur": "2019-01-15T22:00:00.000+0000"
          }
        ]
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "items": {
            "$ref": "#/definitions/Transaction"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResponseTransferExpencesComissionsResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "creditAmountCurrency": 0,
          "debitAmount": 22,
          "deptExpences": 1,
          "eteComission": 1,
          "exchangeProfit": -1,
          "exchangeRate": -1,
          "netAmount": 10,
          "nonStpExpences": -1,
          "onlineExpences": -1,
          "sumComission": 12,
          "sumCommissionCurrency": 0,
          "urgentExpences": 10
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/TransferExpencesComissionsResponse"
        }
      },
      "type": "object"
    },
    "ResponseUploadInitiationResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "fileChunkSize": 1,
          "fileChunks": 1,
          "fileId": "b202d12d-467d-4dd2-8555-84cc8a128437"
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/ResponseUploadInitiationResponse_payload"
        }
      },
      "type": "object"
    },
    "ResponseUploadInitiationResponse_payload": {
      "properties": {
        "fileChunkSize": {
          "description": "File chunks size",
          "format": "int32",
          "type": "integer"
        },
        "fileChunks": {
          "description": "File chunks",
          "format": "int32",
          "type": "integer"
        },
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResponseUploadResponse": {
      "example": {
        "executionTime": 0,
        "payload": {
          "success": true
        }
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/ResponseUploadResponse_payload"
        }
      },
      "type": "object"
    },
    "ResponseUploadResponse_payload": {
      "properties": {
        "success": {
          "description": "Flag indicating if the file got uploaded or not",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ResponseValidateResponse": {
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/ValidateResponse"
        }
      },
      "type": "object"
    },
    "ResponseVerifyFileCreditResponse": {
      "additionalProperties": false,
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "example": 0,
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "$ref": "#/definitions/ResponseVerifyFileCreditResponse_payload"
        }
      },
      "type": "object"
    },
    "ResponseVerifyFileCreditResponse_payload": {
      "additionalProperties": false,
      "properties": {
        "account": {
          "description": "Account",
          "example": "4.05468574E+9",
          "type": "string"
        },
        "chargesAccount": {
          "description": "Charges account",
          "type": "string"
        },
        "commission": {
          "description": "Commission amount",
          "example": 0.6,
          "format": "double",
          "type": "number"
        },
        "commissionInfo": {
          "$ref": "#/definitions/CommissionInfo"
        },
        "debitAccount": {
          "description": "Debit account",
          "type": "string"
        },
        "error": {
          "description": "Error message",
          "type": "string"
        },
        "fileName": {
          "description": "File name",
          "example": "MassiveTransfersETE.csv",
          "type": "string"
        },
        "fileType": {
          "description": "File type",
          "example": "text/csv",
          "type": "string"
        },
        "hasErrors": {
          "description": "Error flag",
          "example": false,
          "type": "boolean"
        },
        "records": {
          "description": "Records array",
          "items": {
            "$ref": "#/definitions/PayFileRecordRequest"
          },
          "type": "array"
        },
        "sumAmClear": {
          "description": "Clear sum amount of file's records",
          "example": 60,
          "format": "double",
          "type": "number"
        },
        "sumAmTotal": {
          "description": "Total sum amount of file's records",
          "example": 60.6,
          "format": "double",
          "type": "number"
        },
        "totalRecords": {
          "description": "Number of total records",
          "example": 3,
          "format": "int32",
          "type": "integer"
        },
        "totalSuccRecords": {
          "description": "Total successful records",
          "example": 3,
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Sandbox": {
      "properties": {
        "deferredTrans": {
          "description": "Deferred transactions",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "files": {
          "description": "Sandbox's list of files",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "folders": {
          "description": "Sandbox's list of folders",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "sanboxId": {
          "description": "Sandbox's Id",
          "type": "string"
        },
        "users": {
          "description": "Sandbox's list of users",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "version": {
          "description": "Sandbox's version",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SandboxApproveTransactionsRequest": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "account": "67890123456",
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/SandboxApproveTransactionsRequestPayload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "SandboxApproveTransactionsRequestPayload": {
      "properties": {
        "account": {
          "description": "The NBG debit account number (e.g. 11 digits)",
          "type": "string"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "account",
        "userId"
      ],
      "type": "object"
    },
    "SandboxCustomDataRequest": {
      "example": {
        "header": {
          "ID": "f07991bf-cbbf-4289-9232-07cda197a992",
          "application": "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
        },
        "payload": {
          "accounts": [
            {
              "currency": "EUR",
              "iban": "GR5301106780000067890123999",
              "initialBalanceAmount": 5000000,
              "numOfCreditTransactions": 50,
              "numOfDebitTransactions": 100,
              "transactionsEndingDate": "2020-03-28T22:00:00.959+0000",
              "transactionsStartingDate": "2020-03-27T22:00:00.959+0000"
            },
            {
              "currency": "USD",
              "iban": "GR5301106780000067890123888",
              "initialBalanceAmount": 1000000,
              "numOfCreditTransactions": 40,
              "numOfDebitTransactions": 88,
              "transactionsEndingDate": "2020-02-28T22:00:00.959+0000",
              "transactionsStartingDate": "2020-02-01T22:00:00.959+0000"
            }
          ],
          "userId": "User1"
        }
      },
      "properties": {
        "header": {
          "$ref": "#/definitions/RequestAccountsFullRequest_header"
        },
        "payload": {
          "$ref": "#/definitions/SandboxCustomDataRequestPayload"
        }
      },
      "required": [
        "header",
        "payload"
      ],
      "type": "object"
    },
    "SandboxCustomDataRequestAccount": {
      "properties": {
        "currency": {
          "description": "Currency, 3-letter code , e.g. <code>EUR</code>",
          "type": "string"
        },
        "iban": {
          "description": "Account IBAN.",
          "type": "string"
        },
        "initialBalanceAmount": {
          "description": "Initial amount balance for account (Ledger and available)",
          "format": "double",
          "type": "number"
        },
        "numOfCreditTransactions": {
          "description": "Number of credit transactions to create.",
          "format": "int32",
          "type": "integer"
        },
        "numOfDebitTransactions": {
          "description": "Number of debit transactions to create.",
          "format": "int32",
          "type": "integer"
        },
        "transactionsEndingDate": {
          "description": "Transactions ending date (UTC)",
          "format": "date-time",
          "type": "string"
        },
        "transactionsStartingDate": {
          "description": "Transactions starting date (UTC)",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SandboxCustomDataRequestPayload": {
      "properties": {
        "accounts": {
          "description": "List of accounts to create",
          "items": {
            "$ref": "#/definitions/SandboxCustomDataRequestAccount"
          },
          "type": "array"
        },
        "userId": {
          "description": "Username of the logged in user",
          "type": "string"
        }
      },
      "required": [
        "userId"
      ],
      "type": "object"
    },
    "Sandbox_account": {
      "properties": {
        "account": {
          "description": "The NBG account number (e.g. 11 digits)",
          "type": "string"
        },
        "accountType": {
          "description": "Code for account type, e.g. <code>10</code> for \"\u03a4\u03b1\u03bc\u03b9\u03b5\u03c5\u03c4\u03ae\u03c1\u03b9\u03bf\"",
          "type": "string"
        },
        "alias": {
          "description": "Friendly name",
          "type": "string"
        },
        "allowConnect": {
          "description": "Connection indicator",
          "type": "string"
        },
        "allowCredit": {
          "description": "Account credit indicator",
          "type": "string"
        },
        "allowDebit": {
          "description": "Account debit indicator",
          "type": "string"
        },
        "availableBalance": {
          "description": "Available balance",
          "format": "double",
          "type": "number"
        },
        "currency": {
          "description": "Currency, 3-letter code, e.g. <code>EUR</code>",
          "type": "string"
        },
        "features": {
          "$ref": "#/definitions/AccountFull_features"
        },
        "flag": {
          "description": "TBD",
          "type": "string"
        },
        "iban": {
          "description": "Account IBAN.",
          "type": "string"
        },
        "indicators": {
          "description": "Account other indicators",
          "type": "string"
        },
        "isOwnAccount": {
          "description": "Whether the account belongs to the user",
          "type": "boolean"
        },
        "ledgerAccount": {
          "description": "Special account",
          "type": "string"
        },
        "ledgerBalance": {
          "description": "Ledger balance",
          "format": "double",
          "type": "number"
        },
        "newMoneyBalance": {
          "description": "Available balance for transfer abroad",
          "format": "double",
          "type": "number"
        },
        "numberOfMandates": {
          "description": "Number of mandates",
          "format": "int32",
          "type": "integer"
        },
        "overdraftLimit": {
          "description": "Overdraft limit",
          "format": "double",
          "type": "number"
        },
        "product": {
          "description": "Account product code",
          "type": "string"
        },
        "serialNo": {
          "description": "Just the serial number of this entry",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_accounts": {
      "properties": {
        "account": {
          "$ref": "#/definitions/Sandbox_account"
        },
        "beneficiaries": {
          "items": {
            "$ref": "#/definitions/Sandbox_beneficiaries"
          },
          "type": "array"
        },
        "deferred": {
          "items": {
            "$ref": "#/definitions/Sandbox_deferred"
          },
          "type": "array"
        },
        "deferredTrans": {
          "description": "Deferred transactions",
          "items": {
            "$ref": "#/definitions/deferredTrans"
          },
          "type": "array"
        },
        "details": {
          "$ref": "#/definitions/Sandbox_details_1"
        },
        "holdings": {
          "description": "List of holdings",
          "items": {
            "$ref": "#/definitions/HoldingDetails"
          },
          "type": "array"
        },
        "pending": {
          "items": {
            "$ref": "#/definitions/Sandbox_pending"
          },
          "type": "array"
        },
        "rates": {
          "items": {
            "$ref": "#/definitions/Sandbox_rates"
          },
          "type": "array"
        },
        "transactions": {
          "items": {
            "$ref": "#/definitions/Sandbox_transactions"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Sandbox_bank": {
      "properties": {
        "bankBic": {
          "description": "Bank's BIC (e.g. ETHNGRAA)",
          "type": "string"
        },
        "bankTitle": {
          "description": "Bank's title",
          "type": "string"
        },
        "code": {
          "description": "Bank's code",
          "type": "string"
        },
        "name": {
          "description": "Bank name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_beneficiaries": {
      "properties": {
        "name": {
          "description": "Cobeneficiary name",
          "type": "string"
        },
        "order": {
          "description": "Cobeneficiary order in the list",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_card": {
      "properties": {
        "alias": {
          "description": "Card friendly name",
          "type": "string"
        },
        "color": {
          "description": "Card color (e.g. wearables)",
          "type": "string"
        },
        "creditBalance": {
          "description": "Credit balance",
          "format": "double",
          "type": "number"
        },
        "creditLimit": {
          "description": "creditLimit",
          "format": "double",
          "type": "number"
        },
        "currency": {
          "description": "currency",
          "type": "string"
        },
        "delayAmount": {
          "description": "delayAmount",
          "type": "number"
        },
        "delayDate": {
          "description": "delayDate",
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "description": "expirationDate",
          "format": "date-time",
          "type": "string"
        },
        "features": {
          "$ref": "#/definitions/Card_features"
        },
        "futureDueAmount": {
          "description": "futureDueAmount",
          "format": "double",
          "type": "number"
        },
        "issuedBy": {
          "description": "Card issuer",
          "type": "string"
        },
        "kind": {
          "description": "Card kind (e.g. \"\u00ce\u0161\u00ce\u2018\u00ce\u00a1\u00ce\u00a4\u00ce\u2018\")",
          "type": "string"
        },
        "ledgerBalance": {
          "description": "ledgerBalance",
          "format": "double",
          "type": "number"
        },
        "limitATM": {
          "description": "limitATM",
          "format": "double",
          "type": "number"
        },
        "limitINT": {
          "description": "limitINT",
          "format": "double",
          "type": "number"
        },
        "limitPOS": {
          "description": "limitPOS",
          "format": "double",
          "type": "number"
        },
        "microtagType": {
          "description": "\u00ce\u0153icrotag",
          "type": "string"
        },
        "minimumPayment": {
          "description": "minimumPayment",
          "format": "double",
          "type": "number"
        },
        "number": {
          "description": "Card number",
          "type": "string"
        },
        "paymentDate": {
          "description": "paymentDate",
          "format": "date-time",
          "type": "string"
        },
        "productName": {
          "description": "Card product name (e.g. VISA PREPAID)",
          "type": "string"
        },
        "statementAddress": {
          "description": "statementAddress",
          "type": "string"
        },
        "statementAddressCity": {
          "description": "statementAddressCity",
          "type": "string"
        },
        "statementAmount": {
          "description": "statementAmount",
          "format": "double",
          "type": "number"
        },
        "statementDate": {
          "description": "statementDate",
          "format": "date-time",
          "type": "string"
        },
        "statementDeliver": {
          "description": "statementDeliver",
          "type": "string"
        },
        "statementEmail": {
          "description": "statementEmail",
          "format": "email",
          "type": "string"
        },
        "status": {
          "description": "status",
          "type": "string"
        },
        "type": {
          "description": "Card type (e.g. PCV)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_cards": {
      "properties": {
        "card": {
          "$ref": "#/definitions/Sandbox_card"
        },
        "transactions": {
          "items": {
            "$ref": "#/definitions/Sandbox_transactions_1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Sandbox_deferred": {
      "properties": {
        "amount": {
          "description": "Amount",
          "format": "double",
          "type": "number"
        },
        "cancellationDate": {
          "description": "Cancelation date",
          "format": "date-time",
          "type": "string"
        },
        "channel": {
          "description": "Channel",
          "type": "string"
        },
        "createdDate": {
          "description": "Created date",
          "format": "date-time",
          "type": "string"
        },
        "creditAccount": {
          "description": "Credit account",
          "type": "string"
        },
        "debitAccount": {
          "description": "Debit account",
          "type": "string"
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "details": {
          "description": "Details",
          "items": {
            "$ref": "#/definitions/Sandbox_details"
          },
          "type": "array"
        },
        "executionDate": {
          "description": "Execution date",
          "format": "date-time",
          "type": "string"
        },
        "frequency": {
          "description": "Frequency",
          "format": "int32",
          "type": "integer"
        },
        "future": {
          "description": "Future execution",
          "items": {
            "$ref": "#/definitions/Sandbox_future"
          },
          "type": "array"
        },
        "historical": {
          "description": "Execution history",
          "items": {
            "$ref": "#/definitions/Sandbox_historical"
          },
          "type": "array"
        },
        "history": {
          "$ref": "#/definitions/Sandbox_history"
        },
        "master": {
          "$ref": "#/definitions/Sandbox_history_master"
        },
        "name": {
          "description": "Transaction name",
          "type": "string"
        },
        "rowsNum": {
          "description": "Row number",
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "description": "Status",
          "type": "string"
        },
        "totalAmount": {
          "description": "Total amount",
          "format": "double",
          "type": "number"
        },
        "totalPayments": {
          "description": "Total payments",
          "format": "int32",
          "type": "integer"
        },
        "transId": {
          "description": "Transaction Id",
          "type": "string"
        },
        "trnId": {
          "type": "string"
        },
        "trnNo": {
          "description": "Transaction No",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_details": {
      "properties": {
        "field": {
          "description": "Field",
          "type": "string"
        },
        "id": {
          "description": "Id",
          "type": "string"
        },
        "value": {
          "description": "Value",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_details_1": {
      "properties": {
        "accType": {
          "description": "Account type code (e.g.\"3003\")",
          "type": "string"
        },
        "account": {
          "description": "The NBG account number (e.g. 11 digits).",
          "type": "string"
        },
        "accountType": {
          "description": "Code for account type, e.g. <code>10</code> for \"\u00ce\u00a4\u00ce\u00b1\u00ce\u00bc\u00ce\u00b9\u00ce\u00b5\u00cf\u2026\u00cf\u201e\u00ce\u00ae\u00cf\u0081\u00ce\u00b9\u00ce\u00bf\"",
          "type": "string"
        },
        "alias": {
          "description": "Friendly name",
          "type": "string"
        },
        "allowConnect": {
          "description": "Connection indicator",
          "type": "string"
        },
        "allowCredit": {
          "description": "Account credit indicator (A two digits string XY where if X=1 then credit is allowed from the user  and if \u00ce\u00a5=1 then credit is allowed from a third user)",
          "type": "string"
        },
        "allowDebit": {
          "description": "Account debit indicator(if 1 debit is allowed)",
          "type": "string"
        },
        "availableBalance": {
          "description": "Available balance",
          "format": "double",
          "type": "number"
        },
        "availableLimitAmount": {
          "description": "Available overdraft amount",
          "format": "double",
          "type": "number"
        },
        "chequeReservation": {
          "description": "Reservation from cheques",
          "format": "double",
          "type": "number"
        },
        "createDate": {
          "description": "Account creation date",
          "format": "date-time",
          "type": "string"
        },
        "currency": {
          "description": "Currency, 3-letter code , e.g. <code>EUR</code>",
          "type": "string"
        },
        "deptReservation": {
          "description": "Other reservation",
          "format": "double",
          "type": "number"
        },
        "excessLimitAmount": {
          "description": "Overdraft limit amount exceeded",
          "format": "double",
          "type": "number"
        },
        "expirationDate": {
          "description": "Account expiration date",
          "format": "date-time",
          "type": "string"
        },
        "features": {
          "$ref": "#/definitions/AccountFull_features"
        },
        "freeChequeAmnt": {
          "description": "Amount free from cheques",
          "format": "double",
          "type": "number"
        },
        "iban": {
          "description": "Nicely formatted IBAN.",
          "type": "string"
        },
        "indicators": {
          "description": "Other indicators",
          "type": "string"
        },
        "interestAccrued": {
          "description": "Accrued interest",
          "format": "double",
          "type": "number"
        },
        "interestPeriod": {
          "description": "Interest period",
          "type": "string"
        },
        "interestRate": {
          "description": "Interest rate",
          "format": "double",
          "type": "number"
        },
        "interestScale": {
          "description": "Interest rate scale",
          "type": "string"
        },
        "irisAccount": {
          "description": "IRIS account number (e.g. 4370140994)",
          "type": "string"
        },
        "irisBalance": {
          "description": "IRIS account balance",
          "format": "double",
          "type": "number"
        },
        "isOwnAccount": {
          "description": "Whether the account belongs to the user",
          "type": "boolean"
        },
        "lastTransactionDate": {
          "description": "Last transaction date",
          "format": "date-time",
          "type": "string"
        },
        "ledgerAccount": {
          "description": "Special account",
          "type": "string"
        },
        "ledgerBalance": {
          "description": "Ledger balance",
          "format": "double",
          "type": "number"
        },
        "mandatesNumber": {
          "description": "Number of mandates",
          "format": "int32",
          "type": "integer"
        },
        "newMoneyBalance": {
          "description": "Available balance for transfer abroad",
          "format": "double",
          "type": "number"
        },
        "overdraftLimit": {
          "description": "Overdraft limit",
          "format": "double",
          "type": "number"
        },
        "product": {
          "description": "Account product code",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_executionResult": {
      "properties": {
        "exception": {
          "$ref": "#/definitions/Sandbox_executionResult_exception"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/Sandbox_executionResult_exception"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Sandbox_executionResult_exception": {
      "properties": {
        "cat": {
          "enum": [
            "Business",
            "Communication",
            "Technical",
            "Security"
          ],
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "sev": {
          "enum": [
            "Warning",
            "Error",
            "Info"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_files": {
      "properties": {
        "createdByUserId": {
          "description": "User ID of the user that created the file",
          "type": "string"
        },
        "createdByUserRegistry": {
          "description": "Registry of user that created the file",
          "type": "string"
        },
        "createdOn": {
          "description": "Folder creation timestamp",
          "format": "date-time",
          "type": "string"
        },
        "fileContent": {
          "description": "File content in base64 format",
          "format": "byte",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
          "type": "string"
        },
        "fileDescription": {
          "description": "File description",
          "type": "string"
        },
        "fileIcon": {
          "description": "File icon in base64 format",
          "format": "byte",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
          "type": "string"
        },
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        },
        "fileName": {
          "description": "File name",
          "type": "string"
        },
        "fileSize": {
          "description": "Size of the file",
          "format": "int64",
          "type": "integer"
        },
        "fileStatus": {
          "$ref": "#/definitions/FileStatusEnum"
        },
        "folderId": {
          "description": "Folder ID that the current file is placed",
          "format": "uuid",
          "type": "string"
        },
        "metadata": {
          "description": "File metadata",
          "type": "string"
        },
        "systemTags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "totalChunks": {
          "description": "Total chunks of the file",
          "format": "int32",
          "type": "integer"
        },
        "updatedByUserId": {
          "description": "User ID of the user that updated the file",
          "type": "string"
        },
        "updatedByUserRegistry": {
          "description": "Registry of the user that updated the file",
          "type": "string"
        },
        "updatedOn": {
          "description": "Folder update timestamp",
          "format": "date-time",
          "type": "string"
        },
        "userTags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Sandbox_folders": {
      "properties": {
        "createdByUserId": {
          "description": "User ID of the user that created the folder",
          "type": "string"
        },
        "createdByUserRegistry": {
          "description": "Registry of user that created the folder",
          "type": "string"
        },
        "createdOn": {
          "description": "Folder creation timestamp",
          "format": "date-time",
          "type": "string"
        },
        "folderDescription": {
          "description": "Folder description",
          "type": "string"
        },
        "folderIcon": {
          "description": "Folder icon in base64 format",
          "format": "byte",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
          "type": "string"
        },
        "folderId": {
          "description": "Folder ID",
          "format": "uuid",
          "type": "string"
        },
        "folderName": {
          "description": "Folder name",
          "type": "string"
        },
        "subFolders": {
          "description": "Subfolders of the current folder",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "updatedByUserId": {
          "description": "User ID of the user that updated the folder",
          "type": "string"
        },
        "updatedByUserRegistry": {
          "description": "Registry of the user that updated the folder",
          "type": "string"
        },
        "updatedOn": {
          "description": "Folder update timestamp",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_future": {
      "properties": {
        "errorMessage": {
          "description": "Error message",
          "type": "string"
        },
        "executionStatus": {
          "description": "Execution status",
          "type": "string"
        },
        "executionTime": {
          "description": "Execution time",
          "format": "date-time",
          "type": "string"
        },
        "externalId": {
          "description": "External id",
          "type": "string"
        },
        "id": {
          "description": "Execution id",
          "type": "string"
        },
        "scheduleId": {
          "description": "Schedule id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_historical": {
      "properties": {
        "errorMessage": {
          "description": "Error message",
          "type": "string"
        },
        "executionStatus": {
          "description": "Execution status",
          "type": "string"
        },
        "executionTime": {
          "description": "Execution Time",
          "format": "date-time",
          "type": "string"
        },
        "externalId": {
          "description": "External Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_history": {
      "description": "History",
      "properties": {
        "execution": {
          "items": {
            "$ref": "#/definitions/Sandbox_historical"
          },
          "type": "array"
        },
        "master": {
          "$ref": "#/definitions/Sandbox_history_master"
        }
      },
      "type": "object"
    },
    "Sandbox_history_master": {
      "description": "Master",
      "properties": {
        "deletionDate": {
          "description": "Deletion date",
          "format": "date-time",
          "type": "string"
        },
        "deletionUserId": {
          "description": "Deletion user Id",
          "type": "string"
        },
        "executionDate": {
          "description": "Execution date",
          "format": "date-time",
          "type": "string"
        },
        "frequency": {
          "description": "Period for deferred transfer",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "originalExecutionDate": {
          "description": "Original execution date",
          "format": "date-time",
          "type": "string"
        },
        "originalTotalPayments": {
          "description": "Total payments",
          "type": "string"
        },
        "status": {
          "description": "Status",
          "type": "string"
        },
        "totalPayments": {
          "description": "Total payments",
          "type": "string"
        },
        "transactionName": {
          "description": "Transaction name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_pending": {
      "properties": {
        "actionUserId": {
          "description": "Action User Id",
          "type": "string"
        },
        "amount": {
          "description": "Amount",
          "format": "double",
          "type": "number"
        },
        "approvedCounter": {
          "description": "Approved counter",
          "format": "int32",
          "type": "integer"
        },
        "cancelledCounter": {
          "description": "Cancelled counter",
          "format": "int32",
          "type": "integer"
        },
        "counter": {
          "description": "Counter",
          "format": "int32",
          "type": "integer"
        },
        "creditIBAN": {
          "description": "Credit IBAN",
          "type": "string"
        },
        "currentAuthorizationLevel": {
          "description": "Current user authorization level",
          "type": "string"
        },
        "currentNumberOfApprovals": {
          "description": "Current number of approvals",
          "format": "int32",
          "type": "integer"
        },
        "debitIBAN": {
          "description": "Debit account IBAN",
          "type": "string"
        },
        "executionResult": {
          "$ref": "#/definitions/Sandbox_executionResult"
        },
        "id": {
          "description": "Item Id",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string"
        },
        "initialTimestamp": {
          "description": "Initial timestamp",
          "format": "date-time",
          "type": "string"
        },
        "initialUserAuthorizationLevel": {
          "description": "User authorization level",
          "type": "string"
        },
        "initialUserId": {
          "description": "Initial User Id",
          "type": "string"
        },
        "initialUserNumberOfApprovals": {
          "description": "Initial user number of approvals",
          "format": "int32",
          "type": "integer"
        },
        "isSmsOtp": {
          "description": "True when OTP is required",
          "type": "boolean"
        },
        "isUserInvolved": {
          "description": "True if user is involved",
          "type": "boolean"
        },
        "pendingCounter": {
          "description": "Pending counter",
          "format": "int32",
          "type": "integer"
        },
        "refNo": {
          "description": "RefNo",
          "type": "string"
        },
        "rejectReason": {
          "description": "Reject reason",
          "type": "string"
        },
        "rejectedCounter": {
          "description": "Rejected counter",
          "format": "int32",
          "type": "integer"
        },
        "rowNumber": {
          "description": "Row Number",
          "format": "int64",
          "type": "integer"
        },
        "serviceAction": {
          "description": "Service action",
          "type": "string"
        },
        "serviceAudit": {
          "description": "Service audit",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string"
        },
        "status": {
          "description": "Status",
          "type": "string"
        },
        "statusTimestamp": {
          "description": "Status Timestamp",
          "format": "date-time",
          "type": "string"
        },
        "statusUserId": {
          "description": "Status user Id",
          "type": "string"
        },
        "statusVersion": {
          "description": "Status version",
          "format": "int32",
          "type": "integer"
        },
        "summary": {
          "description": "Summary",
          "type": "string"
        },
        "tanNumber": {
          "description": "OTP for the transaction",
          "type": "string"
        },
        "userId": {
          "description": "User ID",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_rates": {
      "properties": {
        "from": {
          "description": "Amount from (lower bound).",
          "format": "double",
          "type": "number"
        },
        "rate": {
          "description": "Relevant interest rate.",
          "format": "double",
          "type": "number"
        },
        "to": {
          "description": "Amount to (upper bound).",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Sandbox_transactions": {
      "properties": {
        "accountingBalance": {
          "description": "Accounting balance",
          "format": "double",
          "type": "number"
        },
        "amount": {
          "description": "Amount of this transaction in the currency of the transaction",
          "format": "double",
          "type": "number"
        },
        "amountEquivalent": {
          "description": "Amount of this transaction in the currency of the Account",
          "format": "double",
          "type": "number"
        },
        "branch": {
          "description": "Bank's branch",
          "type": "string"
        },
        "creditDebit": {
          "description": "<code>\"Credit\"</code> or <code>\"Debit\"</code>",
          "type": "string"
        },
        "currency": {
          "description": "The currency of the transaction",
          "type": "string"
        },
        "date": {
          "description": "Date of this transaction (UTC)",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "Description of this transaction",
          "type": "string"
        },
        "externalSystem": {
          "description": "If equals to \"RNB\" then the remittance is to NBG.If equals to \"ROT\" then the remittance is to other bank",
          "type": "string"
        },
        "reference": {
          "description": "Transaction reference number (with the \"externalSystem\" combination is unique)",
          "type": "string"
        },
        "relatedAccount": {
          "description": "If it is a debit transaction then it is the credit account number.If it is a credit transaction then it is the debit account number.",
          "type": "string"
        },
        "relatedName": {
          "description": "Name of the counterparty",
          "type": "string"
        },
        "serialNum": {
          "description": "Just the serial number of this entry",
          "type": "string"
        },
        "timestamp": {
          "description": "Full date of this transaction (up to milliseconds) (Local Time)",
          "type": "string"
        },
        "trans": {
          "description": "Code for transaction type, e.g. <code>\"10\"</code> for \"\u00ce\u0161\u00ce\u00b1\u00cf\u201e\u00ce\u00ac\u00ce\u00b8\u00ce\u00b5\u00cf\u0192\u00ce\u00b7\"",
          "type": "string"
        },
        "transDescription": {
          "description": "Transaction Type Description",
          "type": "string"
        },
        "valeur": {
          "description": "Date when transaction amount debited or credited",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_transactions_1": {
      "properties": {
        "amount": {
          "description": "Transaction's amount",
          "format": "double",
          "type": "number"
        },
        "cardNumber": {
          "description": "Transaction's card number",
          "type": "string"
        },
        "creditDebitFlag": {
          "description": "If it is Credit\"or \"Debit\" transaction",
          "type": "string"
        },
        "ledgerBalance": {
          "description": "Ledger balance",
          "format": "double",
          "type": "number"
        },
        "reasonText": {
          "description": "Transaction's reason (e.g. Amazon Marketplace)",
          "type": "string"
        },
        "serialNum": {
          "description": "List serial number",
          "type": "string"
        },
        "tranDate": {
          "description": "Transaction's date",
          "format": "date-time",
          "type": "string"
        },
        "transactionDateTime": {
          "description": "Transaction's date and time",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sandbox_users": {
      "properties": {
        "accounts": {
          "items": {
            "$ref": "#/definitions/Sandbox_accounts"
          },
          "type": "array"
        },
        "availableWhiteListActions": {
          "description": "Array of available whitelist actions.",
          "items": {
            "$ref": "#/definitions/WhiteListActionDescription"
          },
          "type": "array"
        },
        "bank": {
          "$ref": "#/definitions/Sandbox_bank"
        },
        "cards": {
          "items": {
            "$ref": "#/definitions/Sandbox_cards"
          },
          "type": "array"
        },
        "files": {
          "description": "User Files.",
          "items": {
            "$ref": "#/definitions/files"
          },
          "type": "array"
        },
        "folders": {
          "description": "User Folders.",
          "items": {
            "$ref": "#/definitions/folders"
          },
          "type": "array"
        },
        "userId": {
          "description": "Username",
          "type": "string"
        },
        "userWhiteListActions": {
          "description": "User whitelist actions.",
          "items": {
            "$ref": "#/definitions/UserWhiteListActionsSbx"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "StringResponse": {
      "example": {
        "executionTime": 0,
        "payload": [
          "DI******S D********",
          "KO*********S P***********"
        ]
      },
      "properties": {
        "exception": {
          "$ref": "#/definitions/ResponseMessage"
        },
        "executionTime": {
          "format": "double",
          "type": "number"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "type": "array"
        },
        "payload": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Transaction": {
      "properties": {
        "accountingBalance": {
          "description": "Accounting balance",
          "format": "double",
          "type": "number"
        },
        "amount": {
          "description": "Amount of this transaction in the currency of the transaction",
          "format": "double",
          "type": "number"
        },
        "amountEquivalent": {
          "description": "Amount of this transaction in the currency of the Account",
          "format": "double",
          "type": "number"
        },
        "branch": {
          "description": "Bank's branch",
          "type": "string"
        },
        "creditDebit": {
          "description": "<code>\"Credit\"</code> or <code>\"Debit\"</code>",
          "type": "string"
        },
        "currency": {
          "description": "The currency of the transaction",
          "type": "string"
        },
        "date": {
          "description": "Date of this transaction (UTC)",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "Description of this transaction",
          "type": "string"
        },
        "externalSystem": {
          "description": "If equals to \"RNB\" then the remittance is to NBG.If equals to \"ROT\" then the remittance is to other bank",
          "type": "string"
        },
        "reference": {
          "description": "Transaction reference number (with the \"externalSystem\" combination is unique)",
          "type": "string"
        },
        "relatedAccount": {
          "description": "If it is a debit transaction then it is the credit account number. If it is a credit transaction then it is the debit account number.",
          "type": "string"
        },
        "relatedName": {
          "description": "Name of the counterparty",
          "type": "string"
        },
        "serialNum": {
          "description": "Just the serial number of this entry",
          "type": "string"
        },
        "timestamp": {
          "description": "Full date of this transaction (up to milliseconds) (Local Time)",
          "type": "string"
        },
        "trans": {
          "description": "Code for transaction type, e.g. <code>\"10\"</code> for \"\u00ce\u0161\u00ce\u00b1\u00cf\u201e\u00ce\u00ac\u00ce\u00b8\u00ce\u00b5\u00cf\u0192\u00ce\u00b7\"",
          "type": "string"
        },
        "transDescription": {
          "description": "Transaction Type Description",
          "type": "string"
        },
        "valeur": {
          "description": "Date when transaction amount debited or credited",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferExpencesComissionsResponse": {
      "properties": {
        "bankTitle": {
          "description": "Full bank title",
          "type": "string"
        },
        "creditAmountCurrency": {
          "description": "Credit amount in the currency of the account",
          "format": "double",
          "type": "number"
        },
        "debitAmount": {
          "description": "Total Transfer amount (transfer amount plus transfer commission)",
          "format": "double",
          "type": "number"
        },
        "deptExpences": {
          "description": "Paid by the sender (OUR costs)",
          "format": "double",
          "type": "number"
        },
        "eteComission": {
          "description": "Expected NBG Commission",
          "format": "double",
          "type": "number"
        },
        "exchangeProfit": {
          "description": "Foreign exchange rates commission",
          "format": "double",
          "type": "number"
        },
        "exchangeRate": {
          "description": "Exchange Rate",
          "format": "double",
          "type": "number"
        },
        "netAmount": {
          "description": "Transfer net amount",
          "format": "double",
          "type": "number"
        },
        "nonStpExpences": {
          "description": "NON STP expenses  (Non Straight Through Processing transaction costs)",
          "format": "double",
          "type": "number"
        },
        "onlineExpences": {
          "description": "IRIS Online expenses",
          "format": "double",
          "type": "number"
        },
        "sumComission": {
          "description": "Total commission",
          "format": "double",
          "type": "number"
        },
        "sumCommissionCurrency": {
          "description": "Total commissions to be collected in the currency of the account",
          "format": "double",
          "type": "number"
        },
        "urgentExpences": {
          "description": "Urgent expenses",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "UserWhiteListActionDescription": {
      "additionalProperties": false,
      "description": "User  Exception",
      "properties": {
        "actionFields": {
          "description": "Available Fields of Exception",
          "items": {
            "$ref": "#/definitions/UserWhiteListActionField"
          },
          "type": "array",
          "x-nullable": true
        },
        "id": {
          "description": "User whitelist action ID",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "whiteListAction": {
          "description": "Action",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "UserWhiteListActionField": {
      "additionalProperties": false,
      "description": "Values on a field supported for WhiteListed Action",
      "properties": {
        "id": {
          "description": "Globally Unique Identifier",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "operator": {
          "description": "Operator",
          "type": "string"
        },
        "value": {
          "description": "Acceptable value of the field (or set of valeus), depending on the operator",
          "type": "string",
          "x-nullable": true
        },
        "whiteListActionField": {
          "description": "Record key of matrix WhiteListActionField",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "operator"
      ],
      "type": "object"
    },
    "UserWhiteListActionFieldAdd": {
      "additionalProperties": false,
      "description": "Values on a field supported for WhiteListed Action",
      "properties": {
        "operator": {
          "description": "Operator",
          "type": "string"
        },
        "value": {
          "description": "Acceptable value of the field (or set of valeus), depending on the operator",
          "type": "string",
          "x-nullable": true
        },
        "whiteListActionField": {
          "description": "Record key of matrix WhiteListActionField",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "operator"
      ],
      "type": "object"
    },
    "UserWhiteListActionsSbx": {
      "additionalProperties": false,
      "properties": {
        "actionFields": {
          "description": "Available Fields of Exception",
          "items": {
            "$ref": "#/definitions/UserWhiteListActionField"
          },
          "type": "array",
          "x-nullable": true
        },
        "active": {
          "description": "User action active status.",
          "type": "boolean"
        },
        "id": {
          "description": "User whitelist action ID",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "whiteListAction": {
          "description": "Action",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ValidateResponse": {
      "properties": {
        "errors": {
          "description": "List of errors that the file contains",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "hasErrors": {
          "description": "True if file contains errors",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "WhiteListAction": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "description": "Action name. It will exist as an enum and will be shared by a package in all applications.E.g.: BillPayment, Transfer, LoanPayment, etc.. Every end point of each core api knows what energy it serves",
          "type": "string",
          "x-nullable": true
        },
        "applicationId": {
          "description": "Globally Unique Identifier of the client",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "code": {
          "description": "Action code (can be used by any application for extra filtering)",
          "type": "string",
          "x-nullable": true
        },
        "descriptionEl": {
          "description": "Description in greek",
          "type": "string",
          "x-nullable": true
        },
        "descriptionEn": {
          "description": "Description in english, for applications that have no translation from drupal",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Globally Unique Identifier",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "nameEl": {
          "description": "Action name in greek",
          "type": "string",
          "x-nullable": true
        },
        "nameEn": {
          "description": "Action name in english, for applications that have no translation from drupal",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "WhiteListActionDescription": {
      "additionalProperties": false,
      "properties": {
        "actionFields": {
          "description": "Available Action Fields",
          "items": {
            "$ref": "#/definitions/WhiteListActionField"
          },
          "type": "array",
          "x-nullable": true
        },
        "whiteListAction": {
          "$ref": "#/definitions/WhiteListAction"
        }
      },
      "type": "object"
    },
    "WhiteListActionField": {
      "additionalProperties": false,
      "description": "Available Action Fields",
      "properties": {
        "action": {
          "description": "Name of action for which the use of this field is supported",
          "type": "string",
          "x-nullable": true
        },
        "applicationId": {
          "description": "Globally Unique Identifier of the client",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "dataType": {
          "description": "Field Value Type.. Enum, string , int , decimal",
          "type": "string",
          "x-nullable": true
        },
        "descriptionEl": {
          "description": "Action Description in greek",
          "type": "string",
          "x-nullable": true
        },
        "descriptionEn": {
          "description": "Action Description in english, for applications that have no translation from drupal",
          "type": "string",
          "x-nullable": true
        },
        "fieldType": {
          "description": "Field semantics. Enum:Amount, SubjectId,TrustedParticipantId",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Globally Unique Identifier",
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "mandatory": {
          "description": "0: Value not required 1: Value required",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "deferredTrans": {
      "additionalProperties": false,
      "properties": {
        "amount": {
          "description": "Amount",
          "format": "double",
          "type": "number"
        },
        "cancelationDate": {
          "description": "Cancelation date",
          "format": "date-time",
          "type": "string"
        },
        "channel": {
          "description": "Channel",
          "type": "string"
        },
        "createdDate": {
          "description": "Created date",
          "format": "date-time",
          "type": "string"
        },
        "creditAccount": {
          "description": "Credit account",
          "type": "string"
        },
        "debitAccount": {
          "description": "Debit account",
          "type": "string"
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "details": {
          "description": "Details",
          "items": {
            "$ref": "#/definitions/DeferredDetails"
          },
          "type": "array"
        },
        "executionDate": {
          "description": "Execution date",
          "format": "date-time",
          "type": "string"
        },
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        },
        "frequency": {
          "description": "Frequency",
          "format": "int32",
          "type": "integer"
        },
        "future": {
          "description": "Future execution",
          "items": {
            "$ref": "#/definitions/Sandbox_future"
          },
          "type": "array"
        },
        "historical": {
          "description": "Historical",
          "items": {
            "$ref": "#/definitions/DeferredHistoryExecution"
          },
          "type": "array"
        },
        "history": {
          "$ref": "#/definitions/Sandbox_history"
        },
        "id": {
          "description": "Transaction ID",
          "format": "uuid",
          "type": "string"
        },
        "master": {
          "$ref": "#/definitions/Sandbox_history_master"
        },
        "name": {
          "description": "Transaction name",
          "type": "string"
        },
        "rowsNum": {
          "description": "Row number",
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "description": "Status",
          "type": "string"
        },
        "totalAmount": {
          "description": "Total amount",
          "format": "double",
          "type": "number"
        },
        "totalPayments": {
          "description": "Total payments",
          "format": "int32",
          "type": "integer"
        },
        "transId": {
          "description": "Transaction Id",
          "type": "string"
        },
        "trnId": {
          "type": "string"
        },
        "trnNo": {
          "description": "Transaction No",
          "type": "string"
        },
        "userId": {
          "description": "User ID",
          "type": "string"
        }
      },
      "type": "object"
    },
    "files": {
      "additionalProperties": false,
      "properties": {
        "fileId": {
          "description": "File ID",
          "format": "uuid",
          "type": "string"
        },
        "permissions": {
          "$ref": "#/definitions/permissions"
        }
      },
      "type": "object"
    },
    "folders": {
      "additionalProperties": false,
      "properties": {
        "folderId": {
          "description": "Folder ID",
          "format": "uuid",
          "type": "string"
        },
        "permissions": {
          "$ref": "#/definitions/permissions"
        }
      },
      "type": "object"
    },
    "permissions": {
      "properties": {
        "canAdd": {
          "description": "Add permission",
          "type": "boolean"
        },
        "canDelete": {
          "description": "Delete permission",
          "type": "boolean"
        },
        "canEditMetadata": {
          "description": "Edit permission",
          "type": "boolean"
        },
        "canMove": {
          "description": "Move permission",
          "type": "boolean"
        },
        "canShare": {
          "description": "Share permission",
          "type": "boolean"
        },
        "canView": {
          "description": "View permission",
          "type": "boolean"
        }
      },
      "type": "object"
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://my.nbg.gr/identity/connect/authorize",
      "tokenUrl": "https://my.nbg.gr/identity/connect/token",
      "scopes": {
        "i-bank-erp-api-v2 offline_access": "i-bank-erp-api-v2 offline_access"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "i-bank-erp-api-v2 offline_access"
      ]
    }
  ],
  "tags": [],
    "x-ms-connector-metadata": [
		{
		  "propertyName": "Website",
		  "propertyValue": "https://developer.nbg.gr"
		},
		{
		  "propertyName": "Privacy policy",
		  "propertyValue": "https://developer.nbg.gr/privacy"
		},
		{
		  "propertyName": "Categories",
		  "propertyValue": "Finance"
		}
	]
}