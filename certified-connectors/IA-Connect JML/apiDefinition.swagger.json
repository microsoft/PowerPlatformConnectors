{
  "swagger": "2.0",
  "info": {
    "title": "IA-Connect JML",
    "description": "IA-Connect is a Robotic Process Automation (RPA) platform which adds RPA functionality from the Cloud to on-premises virtual machines or over Citrix or Microsoft Remote Desktop (RDS) connections. This is the module for automating Joiner / Mover / Leaver processes.",
    "version": "9.2",
    "contact": {
      "name": "Ultima Labs",
      "url": "https://www.ultima.com/ultima-labs",
      "email": "IAConnect@ultima.com"
    }
  },
  "host": "DefinedInConnectionParameters",
  "basePath": "/IAConnectRESTClient",
  "schemes": [
    "https"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.ultima.com/ultima-labs"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.ultima.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "IT Operations;Productivity"
    }
  ],
  "paths": {
    "/PowerShellAutomation/RunActiveDirectoryPowerShellAutomationScript": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Run Active Directory PowerShell script",
        "description": "Runs a PowerShell script in the Active Directory runspace in the session where the IA-Connect Agent is running, where the script contents are passed to the IA-Connect Agent as part of the command. This is the recommended action for running your own custom Active Directory PowerShell code.",
        "parameters": [
          {
            "in": "body",
            "name": "RunActiveDirectoryPowerShellAutomationScript",
            "description": "Inputs for IA-Connect RunActiveDirectoryPowerShellAutomationScript action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellScriptContents": {
                  "type": "string",
                  "title": "PowerShell script contents",
                  "description": "The contents of the PowerShell script to execute in the Active Directory runspace. IA-Connect will execute this script as-is by passing directly to the PowerShell automation engine. No PowerShell script is actually created on-disk."
                },
                "IsNoResultAnError": {
                  "type": "boolean",
                  "default": false,
                  "title": "Is no result an error",
                  "description": "If no data is returned by the PowerShell command, does this suggest an error?"
                },
                "ReturnComplexTypes": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return complex types",
                  "description": "Should properties which have complex types (as opposed to a simple type such as System.String or System.Boolean or System.Date) be returned?"
                },
                "ReturnBooleanAsBoolean": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return boolean as boolean",
                  "description": "Should Boolean properties be returned as a Booleans? If false, these are returned as strings."
                },
                "ReturnNumericAsDecimal": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return numeric as decimal",
                  "description": "Should Numeric properties be returned as a Numerics? If false, these are returned as strings."
                },
                "ReturnDateAsDate": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return date as date",
                  "description": "Should Date properties be returned as a Dates? If false, these are returned as strings."
                },
                "PropertiesToReturnAsCollectionJSON": {
                  "type": "string",
                  "title": "Properties to return as collection",
                  "description": "Some properties (in the PowerShell return results) are collections of values (e.g. an array or table) and by default are not returned in the IA-Connect PowerShell response. This option allows you to specify which properties IA-Connect should attempt to return as a collection and can be entered in JSON or CSV format. For example: To return the EmailAddresses and MemberOf array properties, enter [{\"PropertyName\": \"EmailAddresses\"}, {\"PropertyName\": \"MemberOf\"}] (JSON format) or EmailAddresses,MemberOf (CSV format)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "PowerShellScriptContents",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "PowerShell output JSON",
                  "description": "The output of the PowerShell script, formatted as JSON."
                }
              }
            }
          }
        },
        "operationId": "RunActiveDirectoryPowerShellAutomationScript"
      }
    },
    "/PowerShellAutomation/OpenActiveDirectoryPowerShellRunspaceWithCredentials": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Connect to Active Directory with credentials",
        "description": "Allows you to specify an alternative account to use when running Active Directory PowerShell commands. This affects all Active Directory commands issued after this action. If you don't use this action then all Active Directory PowerShell commands will run as the user account the IA-Connect Agent is running as.",
        "parameters": [
          {
            "in": "body",
            "name": "OpenActiveDirectoryPowerShellRunspaceWithCredentials",
            "description": "Inputs for IA-Connect OpenActiveDirectoryPowerShellRunspaceWithCredentials action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Username": {
                  "type": "string",
                  "title": "Username",
                  "description": "The username of the account to use when running Active Directory commands. You can specify a username in the format 'DOMAIN\\username' (e.g. TESTDOMAIN\\admin) or 'username@domainFQDN' (e.g. admin@testdomain.local)."
                },
                "Password": {
                  "type": "string",
                  "format": "password",
                  "title": "Password",
                  "description": "The password of the account to use when running Active Directory commands."
                },
                "RemoteComputer": {
                  "type": "string",
                  "title": "Remote computer",
                  "description": "The name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) or member server to authenticate against and for all Active Directory actions to be passed to. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings. If a member server is entered (instead of a Domain Controler), that member server must have the Active Directory PowerShell modules / RSAT installed."
                },
                "UseSSL": {
                  "type": "boolean",
                  "default": false,
                  "title": "Use SSL",
                  "description": "Set to true to connect to the remote WSMan endpoint using SSL.",
                  "x-ms-visibility": "advanced"
                },
                "AlternativeTCPPort": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Alternative TCP port",
                  "description": "Set to an alternative TCP port if not using the default WSMan TCP/5985 (non-SSL) or TCP/5986 (SSL).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Username",
                "Password",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "OpenActiveDirectoryPowerShellRunspaceWithCredentialsResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "OpenActiveDirectoryPowerShellRunspaceWithCredentials"
      }
    },
    "/PowerShellAutomation/CloseActiveDirectoryPowerShellRunspace": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Disconnect from Active Directory",
        "description": "If you have used the action 'Open Active Directory PowerShell runspace with credentials' to run Active Directory PowerShell commands as an alternative user account or to an alternative domain, this action returns the IA-Connect Agent to the default behaviour of running Active Directory actions as the user account the IA-Connect Agent is running as.",
        "parameters": [
          {
            "in": "body",
            "name": "CloseActiveDirectoryPowerShellRunspace",
            "description": "Inputs for IA-Connect CloseActiveDirectoryPowerShellRunspace action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "CloseActiveDirectoryPowerShellRunspaceResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "CloseActiveDirectoryPowerShellRunspace"
      }
    },
    "/PowerShellAutomation/IsActiveDirectoryPowerShellRunspaceOpen": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Is connected to Active Directory",
        "description": "Reports if IA-Connect is connected to Active Directory. By default, IA-Connect is automatically connected to the Domain the computer running the IA-Connect Agent is a member of, using the account the IA-Connect Agent is running as. Use the action 'Connect to Active Directory with credentials' to connect using alternative credentials or to an alternative domain.",
        "parameters": [
          {
            "in": "body",
            "name": "IsActiveDirectoryPowerShellRunspaceOpen",
            "description": "Inputs for IA-Connect IsActiveDirectoryPowerShellRunspaceOpen action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryRunspaceOpen": {
                  "type": "boolean",
                  "title": "Connected to Active Directory",
                  "description": "Set to true if IA-Connect is connected to Active Directory. This should always return true since IA-Connect is automatically connected to the domain the computer running the Agent is a member of."
                },
                "ActiveDirectoryLocalPassthroughRunspace": {
                  "type": "boolean",
                  "title": "Local passthrough connection",
                  "description": "Set to true if IA-Connect is connected to the Domain the computer running the IA-Connect Agent is a member of, using the account the IA-Connect Agent is running as."
                },
                "ActiveDirectoryServer": {
                  "type": "string",
                  "title": "Active Directory server",
                  "description": "The Active Directory server connected to. If blank, IA-Connect is using the default Active Directory Domain Controller for the computer running the Agent, based on AD site settings."
                },
                "ActiveDirectoryDNSDomain": {
                  "type": "string",
                  "title": "Active Directory DNS domain",
                  "description": "The Active Directory DNS domain for the Domain IA-Connect is connected to. If blank, IA-Connect is using the default Active Directory Domain for the computer running the Agent. For example: mydomain.local."
                },
                "ActiveDirectoryDomainDN": {
                  "type": "string",
                  "title": "Active Directory domain DN",
                  "description": "The Active Directory domain DN for the Domain IA-Connect is connected to. If blank, IA-Connect is using the default Active Directory Domain for the computer running the Agent. For example: DC=mydomain,DC=local."
                },
                "AuthenticatedUsername": {
                  "type": "string",
                  "title": "Authenticated username",
                  "description": "The authenticated username IA-Connect is using for the connection to Active Directory. If blank, IA-Connect is using the account the IA-Connect Agent is running as."
                }
              }
            }
          }
        },
        "operationId": "IsActiveDirectoryPowerShellRunspaceOpen"
      }
    },
    "/PowerShellAutomation/OpenLocalPassthroughActiveDirectoryPowerShellRunspace": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Connect to default Active Directory domain",
        "description": "Connects the IA-Connect Agent to the Domain the computer running the IA-Connect Agent is a member of, using the account the IA-Connect Agent is running as (i.e. the default behaviour).",
        "parameters": [
          {
            "in": "body",
            "name": "OpenLocalPassthroughActiveDirectoryPowerShellRunspace",
            "description": "Inputs for IA-Connect OpenLocalPassthroughActiveDirectoryPowerShellRunspace action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "OpenLocalPassthroughActiveDirectoryPowerShellRunspaceResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "OpenLocalPassthroughActiveDirectoryPowerShellRunspace"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryAddADUser": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add Active Directory user",
        "description": "Creates a new Active Directory user account.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryAddADUser",
            "description": "Inputs for IA-Connect ActiveDirectoryAddADUser action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Name": {
                  "type": "string",
                  "title": "Name",
                  "description": "The name of the Active Directory user. This appears in the 'Name' column in AD users and computers and in the top of the User 'General' tab. This is not the user logon name."
                },
                "UserPrincipalName": {
                  "type": "string",
                  "title": "User Principal Name",
                  "description": "The user logon name in Active Directory. This generally should be in the format 'name@domainFQDN' (e.g. 'TestUser1@domain.local'). The user can logon using this format: name@domainFQDN."
                },
                "SamAccountName": {
                  "type": "string",
                  "title": "SAM account name",
                  "description": "The user logon name (pre-Windows 2000) in Active Directory. This is in the format 'name' (e.g. 'TestUser1'). The user can logon using this format: DOMAIN\\name."
                },
                "GivenName": {
                  "type": "string",
                  "title": "First name",
                  "description": "The optional user first name."
                },
                "SurName": {
                  "type": "string",
                  "title": "Last name",
                  "description": "The optional user last name."
                },
                "Path": {
                  "type": "string",
                  "title": "Path",
                  "description": "The Organizational Unit (OU) in which to store the user in Distinguished Name format (e.g. OU=Target OU,OU=London,DC=mydomain,DC=local), GUID format or as a path (e.g. MyUsers\\London). If this is left blank, the user will be created in the 'Users' OU."
                },
                "Description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The optional user description."
                },
                "DisplayName": {
                  "type": "string",
                  "title": "Display name",
                  "description": "The optional user display name."
                },
                "AccountPassword": {
                  "type": "string",
                  "format": "password",
                  "title": "Account password",
                  "description": "The user password or an IA-Connect stored password identifier. This must be specified and must meet the Active Directory password complexity rules. If this is a 'Stored' password, enter in the format {IAConnectPassword:StoredPasswordIdentifier} and set 'Account password is stored password' to true."
                },
                "AccountPasswordIsStoredPassword": {
                  "type": "boolean",
                  "default": false,
                  "title": "Account password is stored password",
                  "description": "Set to true if the account password is an IA-Connect stored password identifier, in the format {IAConnectPassword:StoredPasswordIdentifier}. This stored password could have been generated by the 'Generate password' action, for example."
                },
                "Enabled": {
                  "type": "boolean",
                  "default": true,
                  "title": "Enabled",
                  "description": "Set to true if you want the account enabled immediately after creation. Set to false for the account to start disabled. This option defaults to true."
                },
                "ChangePasswordAtLogon": {
                  "type": "boolean",
                  "default": true,
                  "title": "User must change password at next logon",
                  "description": "Set to true if you want to force the user to change their password when they login (i.e. the new password being set here is a one-time password to get the user logged-in). Set to false if this is the password the user will use until they manually change it. You cannot set this option to true at the same time as setting either 'User cannot change password' or 'Password never expires' to true."
                },
                "CannotChangePassword": {
                  "type": "boolean",
                  "default": false,
                  "title": "User cannot change password",
                  "description": "Set to true to stop the user from being able to change their password. Set to false if the user can change the password. You cannot set this option to true at the same time as setting 'User must change password at next login' to true."
                },
                "PasswordNeverExpires": {
                  "type": "boolean",
                  "default": false,
                  "title": "Password never expires",
                  "description": "Set to true if the password never expires (i.e. the user will never be prompted to change the password). Set to false if the password can expire as set in Active Directory Domain policy. You cannot set this option to true at the same time as setting 'User must change password at next login' to true."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Name",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "PowerShell output JSON",
                  "description": "The output of the PowerShell script, formatted as JSON."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryAddADUser"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryGetADUserByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Active Directory user",
        "description": "Returns the properties of a specified Active Directory user.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryGetADUserByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectoryGetADUserByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "FilterPropertyName": {
                  "type": "string",
                  "title": "Filter property name",
                  "description": "As an alternative to searching by identity, provide the name of the property to filter the users by. Common property names are: city, company, country, department, description, displayname, division, emailaddress, enabled, givenname, homedirectory, homedrive, homephone, initials, manager, office, organization, postalcode, profilepath, samaccountname, scriptpath, state, streetaddress, surname, title, userprincipalname."
                },
                "FilterPropertyComparison": {
                  "type": "string",
                  "default": "Equals",
                  "title": "Filter property comparison",
                  "description": "If searching by filter as an alternative to searching by identity, enter the type of comparison here (for example: If the filter property name is 'Alias', the comparison could be 'equals' or 'like'). If you wish to enter a raw filter (in OPATH format), choose a comparison type of 'Raw: Enter filter manually' and enter the full filter in the 'Filter property value' field.",
                  "enum": [
                    "Equals",
                    "Not equals",
                    "Like",
                    "Not like",
                    "Greater than",
                    "Less than",
                    "Raw"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "Equals",
                      "displayName": "Equals: Exact match"
                    },
                    {
                      "value": "Not equals",
                      "displayName": "Not equals: Not equals exact match"
                    },
                    {
                      "value": "Like",
                      "displayName": "Like: Equals with wildcards"
                    },
                    {
                      "value": "Not like",
                      "displayName": "Not like: Not equals with wildcards"
                    },
                    {
                      "value": "Greater than",
                      "displayName": "Greater than: Numeric comparison"
                    },
                    {
                      "value": "Less than",
                      "displayName": "Less than: Numeric comparison"
                    },
                    {
                      "value": "Raw",
                      "displayName": "Raw: Enter filter manually"
                    }
                  ]
                },
                "FilterPropertyValue": {
                  "type": "string",
                  "title": "Filter property value",
                  "description": "As an alternative to searching by identity, the value of the 'Filter property name' to filter the users by."
                },
                "SearchOUBase": {
                  "type": "string",
                  "title": "Search OU base",
                  "description": "The top-level Organization Unit (OU) to search under. If not specified, the entire domain is searched. The OU can be specified in Distinguished Name format (e.g. OU=Target OU,OU=London,DC=mydomain,DC=local), GUID format or as a path (e.g. MyUsers\\London)."
                },
                "Properties": {
                  "type": "string",
                  "title": "Properties to retrieve",
                  "description": "A comma separated list of additional user properties to retrieve. Common properties include: city, company, country, department, description, displayname, division, emailaddress, enabled, givenname, homedirectory, homedrive, homephone, initials, manager, office, organization, postalcode, profilepath, samaccountname, scriptpath, state, streetaddress, surname, title, userprincipalname. If you leave this field blank, a default set of properties are returned."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "PropertiesToReturnAsCollectionJSON": {
                  "type": "string",
                  "title": "Properties to return as collection",
                  "description": "Some properties (in the PowerShell return results) are collections of values (e.g. an array or table) and by default are not returned in the IA-Connect PowerShell response. This option allows you to specify which properties IA-Connect should attempt to return as a collection and can be entered in JSON or CSV format. For example: To return the EmailAddresses and MemberOf array properties, enter [{\"PropertyName\": \"EmailAddresses\"}, {\"PropertyName\": \"MemberOf\"}] (JSON format) or EmailAddresses,MemberOf (CSV format).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Search results JSON",
                  "description": "A list of users (and their requested properties) which match the search identity, in JSON format."
                },
                "CountOfUsersFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of users found",
                  "description": "The number of users found which match the search identity. Usually 0 or 1 if searching by identity, or 0 or more if searching by filter property."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryGetADUserByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryGetOUFromUserDN": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Active Directory OU from user DN",
        "description": "A utility function. Given an Active Directory user's Distinguished Name (DN), returns the Organizational Unit (OU) the user is located within.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryGetOUFromUserDN",
            "description": "Inputs for IA-Connect ActiveDirectoryGetOUFromUserDN action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserDN": {
                  "type": "string",
                  "title": "User DN",
                  "description": "The search user's Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserDN",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "UserOU": {
                  "type": "string",
                  "title": "User OU",
                  "description": "The Organizational Unit (OU) the user is located within."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryGetOUFromUserDN"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryGetDomainFQDNFromDN": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Active Directory domain FQDN from DN",
        "description": "A utility function. Given an Active Directory user's Distinguished Name (DN), returns the Active Directory domain containing the user.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryGetDomainFQDNFromDN",
            "description": "Inputs for IA-Connect ActiveDirectoryGetDomainFQDNFromDN action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DN": {
                  "type": "string",
                  "title": "User DN",
                  "description": "The search user's Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "DN",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "DomainFQDN": {
                  "type": "string",
                  "title": "Domain FQDN",
                  "description": "The Active Directory domain containing the user."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryGetDomainFQDNFromDN"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryGetADGroupByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Active Directory group",
        "description": "Returns the properties of a specified Active Directory group.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryGetADGroupByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectoryGetADGroupByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Identity",
                  "description": "The identity of the Active Directory group. You can specify a group by Distinguished Name (e.g. CN=Group1,OU=My Groups,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'Group1') or Name (e.g. 'Group1')."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Search results JSON",
                  "description": "A list of groups (and their requested properties) which match the search identity."
                },
                "CountOfGroupsFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of groups found",
                  "description": "The number of groups found which match the search identity. Usually 1."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryGetADGroupByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryAddADGroupMemberByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add Active Directory group member",
        "description": "Add an Active Directory user to an existing Active Directory group where the user and group are specified by identity.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryAddADGroupMemberByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectoryAddADGroupMemberByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "GroupIdentity": {
                  "type": "string",
                  "title": "Group identity",
                  "description": "The identity of the Active Directory group. You can specify a group by Distinguished Name (e.g. CN=Group1,OU=My Groups,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'Group1') or Name (e.g. 'Group1')."
                },
                "GroupName": {
                  "type": "string",
                  "title": "Group name",
                  "description": "As an alternative to searching by identity, the name of the Active Directory group."
                },
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryAddADGroupMemberByIdentityResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryAddADGroupMemberByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryAddADUserToMultipleADGroupsByName": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add Active Directory user to multiple groups by name",
        "description": "Add an Active Directory user to multiple existing Active Directory groups where the groups are specified by name. IA-Connect adds the user to as many groups as possible and reports on the outcome.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryAddADUserToMultipleADGroupsByName",
            "description": "Inputs for IA-Connect ActiveDirectoryAddADUserToMultipleADGroupsByName action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "GroupNamesJSON": {
                  "type": "string",
                  "title": "AD groups to add by name",
                  "description": "A list of the names of AD groups to add the user to, in JSON or CSV format. For example: [{\"GroupName\": \"Group 1\"}, {\"GroupName\": \"Group 2\"}] (JSON format) or Group 1,Group 2 (CSV format)."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "GroupNamesJSON",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ADGroupsAddedSuccessfully": {
                  "type": "integer",
                  "format": "int32",
                  "title": "AD groups added successfully",
                  "description": "The number of AD groups the user was successfully added to."
                },
                "ADGroupsFailedToAdd": {
                  "type": "integer",
                  "format": "int32",
                  "title": "AD groups failed to add",
                  "description": "The number of AD groups that the user failed to add to."
                },
                "AddADGroupsMasterErrorMessage": {
                  "type": "string",
                  "title": "Add AD groups error message",
                  "description": "If the user failed to add to some of the AD groups, this error message provides details of the problem."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryAddADUserToMultipleADGroupsByName"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryGetADUserGroupMembership": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Active Directory user group membership",
        "description": "Returns a list of Active Directory groups the specified user is a member of, minus the primary group (usually 'Domain users') since it technically isn't a membership.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryGetADUserGroupMembership",
            "description": "Inputs for IA-Connect ActiveDirectoryGetADUserGroupMembership action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "GroupMembershipJSON": {
                  "type": "string",
                  "title": "Group membership JSON",
                  "description": "The list of AD groups the user is a member of, in JSON format."
                },
                "CountOfGroupsFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of groups found",
                  "description": "The number of AD groups the user is a member of, minus the primary group (usually 'Domain users') which isn't counted."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryGetADUserGroupMembership"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryModifyADUserStringPropertyByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Modify Active Directory user string properties",
        "description": "Modify individual string property(s) of an Active Directory user. This allows you to modify very specific user settings, including custom properties. You can also set individual user properties to blank.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryModifyADUserStringPropertyByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectoryModifyADUserStringPropertyByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "PropertiesList": {
                  "type": "array",
                  "title": "Properties",
                  "description": "A optional additional collection of user properties and the values to assign to those properties.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Property": {
                        "type": "string"
                      },
                      "Value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "ReplaceValue": {
                  "type": "boolean",
                  "default": true,
                  "title": "Replace value",
                  "description": "Set to true to replace the values. Set to false to add the value. Adding will not work if the value already exists (this only impacts custom properties) whereas replace can be used to create a new value or replace an existing value."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryModifyADUserStringPropertyByIdentityResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryModifyADUserStringPropertyByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryModifyADUserBooleanPropertyByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Modify Active Directory user boolean property",
        "description": "Modify an individual boolean (true / false) property of an Active Directory user. This allows you to modify a very specific user setting, including custom properties.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryModifyADUserBooleanPropertyByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectoryModifyADUserBooleanPropertyByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "PropertyName": {
                  "type": "string",
                  "title": "Property name",
                  "description": "The name of the individual user property to modify. Common boolean properties are: enabled, mTSAllowLogon, msExchHideFromAddressLists."
                },
                "PropertyValue": {
                  "type": "boolean",
                  "default": false,
                  "title": "Property value",
                  "description": "The true / false value to assign to the specified property."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "PropertyName",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryModifyADUserBooleanPropertyByIdentityResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryModifyADUserBooleanPropertyByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryModifyADUserProperties": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Modify Active Directory common user properties",
        "description": "Modify common properties of an Active Directory user. You can only assign values to properties, not set them to blank. To set properties to blank, use the action 'Modify Active Directory user string properties'.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryModifyADUserProperties",
            "description": "Inputs for IA-Connect ActiveDirectoryModifyADUserProperties action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "City": {
                  "type": "string",
                  "title": "City",
                  "description": "The user's 'City' property (in the 'Address' tab in AD users and computers)."
                },
                "Company": {
                  "type": "string",
                  "title": "Company",
                  "description": "The user's 'Company' property (in the 'Organization' tab in AD users and computers)."
                },
                "Country": {
                  "type": "string",
                  "title": "Country",
                  "description": "The user's 'Country' property (in the 'Address' tab in AD users and computers). This must be a two character country code (e.g. GB for United Kingdon, US for United States, FR for France, ES for Spain, JP for Japan)."
                },
                "Department": {
                  "type": "string",
                  "title": "Department",
                  "description": "The user's 'Department' property (in the 'Organization' tab in AD users and computers)."
                },
                "Description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The user's 'Description' property (in the 'General' tab in AD users and computers)."
                },
                "DisplayName": {
                  "type": "string",
                  "title": "Display name",
                  "description": "The user's display name (in the 'General' tab in AD users and computers)."
                },
                "EmailAddress": {
                  "type": "string",
                  "title": "Email address",
                  "description": "The user's 'E-mail' property (in the 'General' tab in AD users and computers)."
                },
                "GivenName": {
                  "type": "string",
                  "title": "First name",
                  "description": "The user's first name (in the 'General' tab in AD users and computers)."
                },
                "HomePhone": {
                  "type": "string",
                  "title": "Home phone number",
                  "description": "The user's 'Home' phone number property (in the 'Telephones' tab in AD users and computers)."
                },
                "Initials": {
                  "type": "string",
                  "title": "Initials",
                  "description": "The user's initials (in the 'General' tab in AD users and computers)."
                },
                "IPPhone": {
                  "type": "string",
                  "title": "IP phone number",
                  "description": "The user's 'IP phone' property (in the 'Telephones' tab in AD users and computers)."
                },
                "Manager": {
                  "type": "string",
                  "title": "Manager",
                  "description": "The user's Manager property (in the 'Organization' tab in AD users and computers). You can specify a Manager in Distinguished Name format (e.g. CN=MrBig,OU=London,DC=mydomain,DC=local), GUID format, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123) or SAMAccountName (e.g. 'MrBig')."
                },
                "MobilePhone": {
                  "type": "string",
                  "title": "Mobile phone number",
                  "description": "The user's 'Mobile' phone number property (in the 'Telephones' tab in AD users and computers)."
                },
                "Notes": {
                  "type": "string",
                  "title": "Notes",
                  "description": "The user's 'Notes' property (in the 'Telephones' tab in AD users and computers)."
                },
                "Office": {
                  "type": "string",
                  "title": "Office",
                  "description": "The user's 'Office' property (in the 'General' tab in AD users and computers)."
                },
                "OfficePhone": {
                  "type": "string",
                  "title": "Telephone number (Office)",
                  "description": "The user's 'Telephone number' property (in the 'General' tab in AD users and computers)."
                },
                "PostalCode": {
                  "type": "string",
                  "title": "Postal code / Zip code",
                  "description": "The user's 'Zip/Postal Code' property (in the 'Address' tab in AD users and computers)."
                },
                "ProfilePath": {
                  "type": "string",
                  "title": "Profile path",
                  "description": "The user's 'Profile path' property (in the 'Profile' tab in AD users and computers)."
                },
                "ScriptPath": {
                  "type": "string",
                  "title": "Logon script",
                  "description": "The user's 'Logon script' property (in the 'Profile' tab in AD users and computers)."
                },
                "State": {
                  "type": "string",
                  "title": "State / province",
                  "description": "The user's 'State / province' property (in the 'Address' tab in AD users and computers)."
                },
                "StreetAddress": {
                  "type": "string",
                  "title": "Street address",
                  "description": "The user's 'Street address' property (in the 'Address' tab in AD users and computers)."
                },
                "Surname": {
                  "type": "string",
                  "title": "Last name",
                  "description": "The user's 'Last name' property (in the 'General' tab in AD users and computers)."
                },
                "Title": {
                  "type": "string",
                  "title": "Job title",
                  "description": "The user's 'Job title' property (in the 'Organization' tab in AD users and computers)."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryModifyADUserPropertiesResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryModifyADUserProperties"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryMoveADUserToOUByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Move Active Directory user to OU",
        "description": "Moves an Active Directory user to an existing Active Directory Organizational Unit (OU).",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryMoveADUserToOUByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectoryMoveADUserToOUByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "TargetPath": {
                  "type": "string",
                  "title": "Target path",
                  "description": "The path to the target Organization Unit (OU) in Distinguished Name format (e.g. OU=Target OU,OU=London,DC=mydomain,DC=local), GUID format or as a path (e.g. MyUsers\\London)."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "TargetPath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryMoveADUserToOUByIdentityResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryMoveADUserToOUByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryClearADUserAccountExpiration": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Clear Active Directory user account expiration",
        "description": "Clears the expiration date for an Active Directory account.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryClearADUserAccountExpiration",
            "description": "Inputs for IA-Connect ActiveDirectoryClearADUserAccountExpiration action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryClearADUserAccountExpirationResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryClearADUserAccountExpiration"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryDirSync": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Perform Active Directory DirSync",
        "description": "Performs a synchronisation between Active Directory (on-premises) and Azure Active Directory (cloud). This command must be issued to the server with the 'DirSync' role (i.e. the computer performing the synchronisation).",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryDirSync",
            "description": "Inputs for IA-Connect ActiveDirectoryDirSync action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "PolicyType": {
                  "type": "string",
                  "title": "Policy type",
                  "description": "The type of synchronisation to perform. Options are 'Delta' to perform a sync of changes since the last sync (the default option) and 'Initial' to perform a full sync (do not do this unless you know exactly what you are doing).",
                  "enum": [
                    "Delta",
                    "Initial"
                  ]
                },
                "ComputerName": {
                  "type": "string",
                  "title": "Computer name",
                  "description": "The server which has the 'DirSync' role (i.e. the computer performing the synchronisation)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "DirSync result JSON",
                  "description": "The result of the Active Directory sync operation, in JSON format."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryDirSync"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryRemoveADUserByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove Active Directory user",
        "description": "Removes a user from Active Directory.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryRemoveADUserByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectoryRemoveADUserByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryRemoveADUserByIdentityResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryRemoveADUserByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryResetADUserPasswordByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Reset Active Directory user password",
        "description": "Resets an Active Directory user's password with a new password.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryResetADUserPasswordByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectoryResetADUserPasswordByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "NewPassword": {
                  "type": "string",
                  "format": "password",
                  "title": "New password",
                  "description": "The new password. This must be specified and must meet the Active Directory password complexity rules."
                },
                "AccountPasswordIsStoredPassword": {
                  "type": "boolean",
                  "default": false,
                  "title": "Account password is stored password",
                  "description": "Set to true if the account password is an IA-Connect stored password identifier, in the format {IAConnectPassword:StoredPasswordIdentifier}. This stored password could have been generated by the 'Generate password' action, for example."
                },
                "ChangePasswordAtLogon": {
                  "type": "boolean",
                  "default": true,
                  "title": "User must change password at next logon",
                  "description": "Set to true if you want to force the user to change their password when they login (i.e. the new password being set here is a one-time password to get the user logged-in). Set to false if this is the password the user will use until they manually change it. You cannot set this option to true at the same time as setting either 'User cannot change password' or 'Password never expires' to true."
                },
                "CannotChangePassword": {
                  "type": "boolean",
                  "default": false,
                  "title": "User cannot change password",
                  "description": "Set to true to stop the user from being able to change their password. Set to false if the user can change the password. You cannot set this option to true at the same time as setting 'User must change password at next login' to true."
                },
                "PasswordNeverExpires": {
                  "type": "boolean",
                  "default": false,
                  "title": "Password never expires",
                  "description": "Set to true if the password never expires (i.e. the user will never be prompted to change the password). Set to false if the password can expire as set in Active Directory Domain policy. You cannot set this option to true at the same time as setting 'User must change password at next login' to true."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "NewPassword",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryResetADUserPasswordByIdentityResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryResetADUserPasswordByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectorySetADUserProtectedFromAccidentalDeletionByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set Active Directory user protected from accidental deletion",
        "description": "Sets an Active Directory account to be protected (or not protected) from accidental deletion. If you protect an account from accidental deletion, you cannot delete that account until you remove the protection.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectorySetADUserProtectedFromAccidentalDeletionByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectorySetADUserProtectedFromAccidentalDeletionByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "ProtectedFromAccidentalDeletion": {
                  "type": "boolean",
                  "default": false,
                  "title": "Protected from accidental deletion",
                  "description": "Set to true to protect a user from accidental deletion. Set to false to remove protection from accidental deletion."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "ProtectedFromAccidentalDeletion",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectorySetADUserProtectedFromAccidentalDeletionByIdentityResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectorySetADUserProtectedFromAccidentalDeletionByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryDisableADUserByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Disable Active Directory user account",
        "description": "Disables an Active Directory user account. If a user account is disabled, the user cannot logon.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryDisableADUserByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectoryDisableADUserByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryDisableADUserByIdentityResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryDisableADUserByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryEnableADUserByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Enable Active Directory user account",
        "description": "Enables an Active Directory user account. If the account is not disabled, this command does nothing.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryEnableADUserByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectoryEnableADUserByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryEnableADUserByIdentityResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryEnableADUserByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectorySetADUserHomeFolderByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Modify Active Directory user home folder",
        "description": "Sets the home folder / directory / drive for an Active Directory user.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectorySetADUserHomeFolderByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectorySetADUserHomeFolderByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "HomeDrive": {
                  "type": "string",
                  "title": "Home drive",
                  "description": "If the home directory / folder is on a network share, specify a drive letter which will be mapped to that location. The drive letter is typically a single character between 'F' and 'Z'. If the home directory / folder is local, leave this value blank. If you are setting the home directory / folder to blank, also leave this value blank."
                },
                "HomeDirectory": {
                  "type": "string",
                  "title": "Home directory",
                  "description": "Specify the path for the home folder / directory. If you are also specifying a home drive letter then the home drive will be mapped to this folder / directory. If you are setting the home directory / folder to blank, set this value to blank."
                },
                "CreateFolder": {
                  "type": "boolean",
                  "default": false,
                  "title": "Create folder",
                  "description": "Set to true if you want to create the home folder / directory if it doesn't exist."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "HomeDirectory",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectorySetADUserHomeFolderByIdentityResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectorySetADUserHomeFolderByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryCloneADUserGroups": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Clone Active Directory user group membership",
        "description": "Adds the destination Active Directory user to the same Active Directory groups that the first user is a member of, minus the primary group (usually 'Domain users') since it technically isn't a membership.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryCloneADUserGroups",
            "description": "Inputs for IA-Connect ActiveDirectoryCloneADUserGroups action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SourceUserIdentity": {
                  "type": "string",
                  "title": "Source user identity",
                  "description": "The identity of the source Active Directory user (the user to copy groups from). You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "DestinationUserIdentity": {
                  "type": "string",
                  "title": "Destination user identity",
                  "description": "The identity of the destination Active Directory user (the user to add the groups to). You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SourceUserIdentity",
                "DestinationUserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ADGroupsAddedSuccessfully": {
                  "type": "integer",
                  "format": "int32",
                  "title": "AD groups added successfully",
                  "description": "The number of AD groups the destination user was successfully added to."
                },
                "ADGroupsFailedToAdd": {
                  "type": "integer",
                  "format": "int32",
                  "title": "AD groups failed to add",
                  "description": "The number of AD groups that the destination user failed to add to."
                },
                "AddADGroupsMasterErrorMessage": {
                  "type": "string",
                  "title": "Add AD groups error message",
                  "description": "If the destination user failed to add to some of the AD groups, this error message provides details of the problem."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryCloneADUserGroups"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryCloneADUserProperties": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Clone Active Directory user properties",
        "description": "Configures the specified properties / attributes of the source Active Directory user to the destination Active Directory user.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryCloneADUserProperties",
            "description": "Inputs for IA-Connect ActiveDirectoryCloneADUserProperties action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SourceUserIdentity": {
                  "type": "string",
                  "title": "Source user identity",
                  "description": "The identity of the source Active Directory user (the user to copy attributes from). You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "DestinationUserIdentity": {
                  "type": "string",
                  "title": "Destination user identity",
                  "description": "The identity of the destination Active Directory user (the user to copy attributes to). You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "PropertiesToClone": {
                  "type": "string",
                  "title": "Properties to clone",
                  "description": "A comma separated list of user properties to copy from the source user to the destination user. Common properties to clone include: city, company, country, department, description, division, enabled, homedirectory, homedrive, homephone, manager, office, organization, postalcode, profilepath, scriptpath, state, streetaddress."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SourceUserIdentity",
                "DestinationUserIdentity",
                "PropertiesToClone",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryCloneADUserPropertiesResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryCloneADUserProperties"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryRemoveADUserFromMultipleADGroupsByName": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove Active Directory user from multiple groups by name",
        "description": "Removes an Active Directory user from multiple existing Active Directory groups where the groups are specified by name. IA-Connect removes the user from as many groups as possible and reports on the outcome.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryRemoveADUserFromMultipleADGroupsByName",
            "description": "Inputs for IA-Connect ActiveDirectoryRemoveADUserFromMultipleADGroupsByName action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "GroupNamesJSON": {
                  "type": "string",
                  "title": "AD groups to remove by name",
                  "description": "A list of the names of AD groups to remove the user from, in JSON or CSV format. For example: [{\"GroupName\": \"Group 1\"}, {\"GroupName\": \"Group 2\"}] (JSON format) or Group 1,Group 2 (CSV format)."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "GroupNamesJSON",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ADGroupsRemovedSuccessfully": {
                  "type": "integer",
                  "format": "int32",
                  "title": "AD groups removed successfully",
                  "description": "The number of AD groups the user was successfully removed from."
                },
                "ADGroupsFailedToRemove": {
                  "type": "integer",
                  "format": "int32",
                  "title": "AD groups failed to remove",
                  "description": "The number of AD groups that the user failed to remove from."
                },
                "RemoveADGroupsMasterErrorMessage": {
                  "type": "string",
                  "title": "Remove AD groups error message",
                  "description": "If the user failed to remove from some of the AD groups, this error message provides details of the problem."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryRemoveADUserFromMultipleADGroupsByName"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryRemoveADUserFromAllGroups": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove Active Directory user from all groups",
        "description": "Removes an Active Directory user from all of the Active Directory groups they are a member of. IA-Connect removes the user from as many groups as possible and reports on the outcome.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryRemoveADUserFromAllGroups",
            "description": "Inputs for IA-Connect ActiveDirectoryRemoveADUserFromAllGroups action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ADGroupsRemovedSuccessfully": {
                  "type": "integer",
                  "format": "int32",
                  "title": "AD groups removed successfully",
                  "description": "The number of AD groups the user was successfully removed from."
                },
                "ADGroupsFailedToRemove": {
                  "type": "integer",
                  "format": "int32",
                  "title": "AD groups failed to remove",
                  "description": "The number of AD groups that the user failed to remove from."
                },
                "RemoveADGroupsMasterErrorMessage": {
                  "type": "string",
                  "title": "Remove AD groups error message",
                  "description": "If the user failed to remove from some of the AD groups, this error message provides details of the problem."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryRemoveADUserFromAllGroups"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryCheckOUExists": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Check Active Directory OU exists",
        "description": "Reports if an Active Directory Organizational Unit (OU) exists.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryCheckOUExists",
            "description": "Inputs for IA-Connect ActiveDirectoryCheckOUExists action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "OUIdentity": {
                  "type": "string",
                  "title": "OU identity",
                  "description": "The path to the target Organization Unit (OU) in Distinguished Name format (e.g. OU=Target OU,OU=London,DC=mydomain,DC=local), GUID format or as a path (e.g. MyUsers\\London)."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "OUIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "OU properties as JSON",
                  "description": "The details of the located Organizational Unit (OU)."
                },
                "OUExists": {
                  "type": "boolean",
                  "title": "OU exists",
                  "description": "Set to true if the Organizational Unit (OU) exists, false if not."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryCheckOUExists"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryRemoveADGroupMemberByGroupIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove Active Directory group member",
        "description": "Removes an Active Directory user from an Active Directory group where the group is specified by identity.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryRemoveADGroupMemberByGroupIdentity",
            "description": "Inputs for IA-Connect ActiveDirectoryRemoveADGroupMemberByGroupIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "GroupIdentity": {
                  "type": "string",
                  "title": "Group identity",
                  "description": "The identity of the Active Directory group. You can specify a group by Distinguished Name (e.g. CN=Group1,OU=My Groups,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'Group1') or Name (e.g. 'Group1')."
                },
                "GroupName": {
                  "type": "string",
                  "title": "Group name",
                  "description": "As an alternative to searching by identity, the name of the Active Directory group."
                },
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryRemoveADGroupMemberByGroupIdentityResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryRemoveADGroupMemberByGroupIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryUnlockADAccountByIdentity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Unlock Active Directory account",
        "description": "Unlock an Active Directory account. If the account is not locked, this command does nothing.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryUnlockADAccountByIdentity",
            "description": "Inputs for IA-Connect ActiveDirectoryUnlockADAccountByIdentity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the Active Directory user. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact to perform the requested action. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectoryUnlockADAccountByIdentityResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryUnlockADAccountByIdentity"
      }
    },
    "/PowerShellAutomation/ActiveDirectorySetADServer": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set Active Directory server",
        "description": "Sets a specific Active Directory server to use for all further Active Directory actions.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectorySetADServer",
            "description": "Inputs for IA-Connect ActiveDirectorySetADServer action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "PredefinedADServerChoice": {
                  "type": "string",
                  "default": "Manual: Specify in AD server field",
                  "title": "Predefined AD server choice",
                  "description": "User PDC: The PDC emulator for the domain the currently logged in user belongs to will be used. Computer PDC: The PDC emulator for the domain the computer (on which the IA-Connect session is running on) belongs to will be used. Manual: Enter the Active Directory Domain Controller (DC) in the 'AD server' field. If this field is blank and the 'AD server' field has a value, that value will be used.",
                  "enum": [
                    "User PDC: PDC emulator of logged-in user domain",
                    "Computer PDC: PDC emulator of local computer domain",
                    "Manual: Specify in AD server field"
                  ]
                },
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "This field is only used if the 'Predefined AD server choice' is set to 'Manual' (or blank). The name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to contact for all further Active Directory actions. If left blank, the Active Directory Domain Controller (DC) is automatically determined using site settings."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectorySetADServerResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectorySetADServer"
      }
    },
    "/PowerShellAutomation/ActiveDirectoryGetDomainInfo": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Active Directory domain info",
        "description": "Retrieves information about an Active Directory domain.",
        "parameters": [
          {
            "in": "body",
            "name": "ActiveDirectoryGetDomainInfo",
            "description": "Inputs for IA-Connect ActiveDirectoryGetDomainInfo action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ADServer": {
                  "type": "string",
                  "title": "AD server",
                  "description": "The optional name or Fully Qualified Domain Name (FQDN) of an Active Directory Domain Controller (DC) to send the domain request to. The domain controller will then obtain the requested information for the specified domain."
                },
                "PredefinedIdentity": {
                  "type": "string",
                  "default": "Manual: Specify in Domain identity field",
                  "title": "Predefined Domain identity",
                  "description": "User: Information will be retrieved for the domain the currently logged in user belongs to. Computer: Information will be retrieved for the domain the computer (on which the IA-Connect session is running on) belongs to. Manual: Enter the Active Directory Domain in the 'Domain identity' field. If this field is blank and the 'Domain identity' field has a value, that value will be used.",
                  "enum": [
                    "User: Logged-in user domain",
                    "Computer: Local computer domain",
                    "Manual: Specify in Domain identity field"
                  ]
                },
                "Identity": {
                  "type": "string",
                  "title": "Domain identity",
                  "description": "This field is only used if the 'Predefined Domain identity' is set to 'Manual' (or blank). The identity of an Active Directory domain to retrieve domain information for. You can specify an Active Directory domain by Distinguished Name (e.g. DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-41432690-3719764436-1984117282), DNS domain name (e.g. mydomain.local) or NetBIOS name (e.g. MYDOMAIN)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "DistinguishedName": {
                  "type": "string",
                  "title": "Distinguished name",
                  "description": "The Distinguished Name (DN) of the domain."
                },
                "DNSRoot": {
                  "type": "string",
                  "title": "DNS root name",
                  "description": "The name of the top-level DNS root of the domain."
                },
                "DomainMode": {
                  "type": "string",
                  "title": "Domain mode",
                  "description": "The mode or level of the domain (e.g. Windows2003Domain or Windows2016Domain)."
                },
                "DomainSID": {
                  "type": "string",
                  "title": "Domain SID",
                  "description": "The Security Identifier (SID) of the domain."
                },
                "Forest": {
                  "type": "string",
                  "title": "Forest",
                  "description": "The name of the Active Directory forest (the top-most logical container)."
                },
                "InfrastructureMaster": {
                  "type": "string",
                  "title": "Infrastructure master",
                  "description": "The name of the Domain Controller (DC) with the infrastructure master role."
                },
                "NetBIOSName": {
                  "type": "string",
                  "title": "Domain NetBIOS name",
                  "description": "The NetBIOS name of the domain (e.g. MYDOMAIN)."
                },
                "ObjectGUID": {
                  "type": "string",
                  "title": "Domain GUID",
                  "description": "The GUID of the domain."
                },
                "PDCEmulator": {
                  "type": "string",
                  "title": "PDC emulator",
                  "description": "The name of the Domain Controller (DC) with the PDC emulator role."
                },
                "RIDMaster": {
                  "type": "string",
                  "title": "RID master",
                  "description": "The name of the Domain Controller (DC) with the RID master role."
                }
              }
            }
          }
        },
        "operationId": "ActiveDirectoryGetDomainInfo"
      }
    },
    "/PowerShellAutomation/OpenExchangePowerShellRunspace": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Connect to Microsoft Exchange",
        "description": "Connects IA-Connect to a Microsoft Exchange server. This action must be issued before running any other Exchange actions. If you specify a username and password, all subsequent Exchange actions will run as that account. If you don't specify a username and password, all subsequent Exchange actions will run as the user account the IA-Connect Agent is running as.",
        "parameters": [
          {
            "in": "body",
            "name": "OpenExchangePowerShellRunspace",
            "description": "Inputs for IA-Connect OpenExchangePowerShellRunspace action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Username": {
                  "type": "string",
                  "title": "Username",
                  "description": "The username of the account to use when running Exchange PowerShell commands. You can specify a username in the format 'DOMAIN\\username' (e.g. TESTDOMAIN\\admin) or 'username@domainFQDN' (e.g. admin@testdomain.local). If you don't specify a username and password, all subsequent Exchange actions will run as the user account the IA-Connect Agent is running as."
                },
                "Password": {
                  "type": "string",
                  "format": "password",
                  "title": "Password",
                  "description": "The password of the account to use when running Exchange PowerShell commands."
                },
                "ExchangeServerFQDN": {
                  "type": "string",
                  "title": "Exchange server FQDN",
                  "description": "The Fully Qualified Domain Name (FQDN) or hostname of the Microsoft Exchange server."
                },
                "UseSSL": {
                  "type": "boolean",
                  "default": false,
                  "title": "Use SSL",
                  "description": "Set to true if you wish to connect to the Microsoft Exchange server using HTTPS / SSL. This will encrypt all traffic but only works if the Exchange server is setup to accept PowerShell commands over SSL."
                },
                "ConnectionMethod": {
                  "type": "string",
                  "default": "Remote",
                  "title": "Connection method",
                  "description": "Which method should be used to connect to Microsoft Exchange. 'Local' imports the remote Exchange runspace locally and runs commands locally. 'Remote' runs directly in the remote Exchange runspace and may not be able to run generic PowerShell scripts due to security restrictions.",
                  "enum": [
                    "Local",
                    "Remote"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "Local",
                      "displayName": "Local: Remote Exchange runspace is imported locally"
                    },
                    {
                      "value": "Remote",
                      "displayName": "Remote: Commands run in remote Exchange runspace"
                    }
                  ]
                },
                "AuthenticationMechanism": {
                  "type": "string",
                  "default": "Kerberos",
                  "title": "Authentication mechanism",
                  "description": "The authentication mechanism to be used if connecting to a remote computer or running the script as an alternative user. Supported values are 'Basic', 'Credssp', 'Default', 'Digest', 'Kerberos' and 'Negotiate'.",
                  "enum": [
                    "Basic",
                    "CredSSP",
                    "Default",
                    "Digest",
                    "Kerberos",
                    "Negotiate"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ExchangeServerFQDN",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "OpenExchangePowerShellRunspaceResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "OpenExchangePowerShellRunspace"
      }
    },
    "/PowerShellAutomation/IsExchangePowerShellRunspaceOpen": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Is connected to Microsoft Exchange",
        "description": "Reports if IA-Connect is connected to a Microsoft Exchange server. Use the action 'Connect to Microsoft Exchange' to connect.",
        "parameters": [
          {
            "in": "body",
            "name": "IsExchangePowerShellRunspaceOpen",
            "description": "Inputs for IA-Connect IsExchangePowerShellRunspaceOpen action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeRunspaceOpen": {
                  "type": "boolean",
                  "title": "Connected to Microsoft Exchange",
                  "description": "Set to true if IA-Connect is connected to Microsoft Exchange."
                },
                "ExchangeConnectionMethod": {
                  "type": "string",
                  "title": "Exchange connection method",
                  "description": "Holds the current Exchange connection method: Local or Remote."
                }
              }
            }
          }
        },
        "operationId": "IsExchangePowerShellRunspaceOpen"
      }
    },
    "/PowerShellAutomation/RunExchangePowerShellAutomationScript": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Run Exchange PowerShell script",
        "description": "Runs a PowerShell script in the Exchange runspace in the session where the IA-Connect Agent is running, where the script contents are passed to the IA-Connect Agent as part of the command. This is the recommended action for running your own custom Exchange PowerShell code.",
        "parameters": [
          {
            "in": "body",
            "name": "RunExchangePowerShellAutomationScript",
            "description": "Inputs for IA-Connect RunExchangePowerShellAutomationScript action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellScriptContents": {
                  "type": "string",
                  "title": "PowerShell script contents",
                  "description": "The contents of the PowerShell script to execute in the Exchange runspace. IA-Connect will execute this script as-is by passing directly to the PowerShell automation engine. No PowerShell script is actually created on-disk."
                },
                "IsNoResultAnError": {
                  "type": "boolean",
                  "default": false,
                  "title": "Is no result an error",
                  "description": "If no data is returned by the PowerShell command, does this suggest an error?"
                },
                "ReturnComplexTypes": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return complex types",
                  "description": "Should properties which have complex types (as opposed to a simple type such as System.String or System.Boolean or System.Date) be returned?"
                },
                "ReturnBooleanAsBoolean": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return boolean as boolean",
                  "description": "Should Boolean properties be returned as a Booleans? If false, these are returned as strings."
                },
                "ReturnNumericAsDecimal": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return numeric as decimal",
                  "description": "Should Numeric properties be returned as a Numerics? If false, these are returned as strings."
                },
                "ReturnDateAsDate": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return date as date",
                  "description": "Should Date properties be returned as a Dates? If false, these are returned as strings."
                },
                "PropertiesToReturnAsCollectionJSON": {
                  "type": "string",
                  "title": "Properties to return as collection",
                  "description": "Some properties (in the PowerShell return results) are collections of values (e.g. an array or table) and by default are not returned in the IA-Connect PowerShell response. This option allows you to specify which properties IA-Connect should attempt to return as a collection and can be entered in JSON or CSV format. For example: To return the EmailAddresses and MemberOf array properties, enter [{\"PropertyName\": \"EmailAddresses\"}, {\"PropertyName\": \"MemberOf\"}] (JSON format) or EmailAddresses,MemberOf (CSV format)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "PowerShellScriptContents",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "PowerShell output JSON",
                  "description": "The output of the PowerShell script, formatted as JSON."
                }
              }
            }
          }
        },
        "operationId": "RunExchangePowerShellAutomationScript"
      }
    },
    "/PowerShellAutomation/CloseExchangePowerShellRunspace": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Disconnect from Microsoft Exchange",
        "description": "Disconnects IA-Connect from a Microsoft Exchange server (connected using the action 'Connect to Microsoft Exchange'). You will not be able to issue Microsoft Exchange PowerShell actions again until you reconnect.",
        "parameters": [
          {
            "in": "body",
            "name": "CloseExchangePowerShellRunspace",
            "description": "Inputs for IA-Connect CloseExchangePowerShellRunspace action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "CloseExchangePowerShellRunspaceResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "CloseExchangePowerShellRunspace"
      }
    },
    "/PowerShellAutomation/ExchangeGetMailbox": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve Microsoft Exchange mailbox details",
        "description": "Returns the properties of the specified Exchange mailbox. You can search by Identity or using a filter. An Identity search should return 0 or 1 results. A filter search could return 0 or more results.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeGetMailbox",
            "description": "Inputs for IA-Connect ExchangeGetMailbox action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange mailbox. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "FilterPropertyName": {
                  "type": "string",
                  "title": "Filter property name",
                  "description": "As an alternative to searching by identity, provide the name of the property to filter the mailboxes by. Common property names are: Name, Alias, PrimarySMTPAddress, DisplayName, SamAccountName. If using a filter, you also need to populate the 'Filter property comparison' and 'Filter property value' fields."
                },
                "FilterPropertyComparison": {
                  "type": "string",
                  "default": "Equals",
                  "title": "Filter property comparison",
                  "description": "If searching by filter as an alternative to searching by identity, enter the type of comparison here (for example: If the filter property name is 'Alias', the comparison could be 'equals' or 'like'). If you wish to enter a raw filter (in OPATH format), choose a comparison type of 'Raw: Enter filter manually' and enter the full filter in the 'Filter property value' field.",
                  "enum": [
                    "Equals",
                    "Not equals",
                    "Like",
                    "Not like",
                    "Greater than",
                    "Less than",
                    "Raw"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "Equals",
                      "displayName": "Equals: Exact match"
                    },
                    {
                      "value": "Not equals",
                      "displayName": "Not equals: Not equals exact match"
                    },
                    {
                      "value": "Like",
                      "displayName": "Like: Equals with wildcards"
                    },
                    {
                      "value": "Not like",
                      "displayName": "Not like: Not equals with wildcards"
                    },
                    {
                      "value": "Greater than",
                      "displayName": "Greater than: Numeric comparison"
                    },
                    {
                      "value": "Less than",
                      "displayName": "Less than: Numeric comparison"
                    },
                    {
                      "value": "Raw",
                      "displayName": "Raw: Enter filter manually"
                    }
                  ]
                },
                "FilterPropertyValue": {
                  "type": "string",
                  "title": "Filter property value",
                  "description": "If searching by filter as an alternative to searching by identity, enter the value of the filter property here (for example: If the filter property name is 'Alias', the filter property value might be 'JohnDoe')."
                },
                "RecipientTypeDetails": {
                  "type": "string",
                  "title": "Recipient type details",
                  "description": "The type of mailbox to search for. If this field is left blank, all types of mailbox will be included in the search.",
                  "enum": [
                    "DiscoveryMailbox",
                    "EquipmentMailbox",
                    "GroupMailbox",
                    "LegacyMailbox",
                    "LinkedMailbox",
                    "LinkedRoomMailbox",
                    "RoomMailbox",
                    "SchedulingMailbox",
                    "SharedMailbox",
                    "TeamMailbox",
                    "UserMailbox"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "DiscoveryMailbox",
                      "displayName": "Discovery Mailbox"
                    },
                    {
                      "value": "EquipmentMailbox",
                      "displayName": "Equipment Mailbox"
                    },
                    {
                      "value": "GroupMailbox",
                      "displayName": "Group Mailbox"
                    },
                    {
                      "value": "LegacyMailbox",
                      "displayName": "Legacy Mailbox"
                    },
                    {
                      "value": "LinkedMailbox",
                      "displayName": "Linked Mailbox"
                    },
                    {
                      "value": "LinkedRoomMailbox",
                      "displayName": "Linked Room Mailbox"
                    },
                    {
                      "value": "RoomMailbox",
                      "displayName": "Room Mailbox"
                    },
                    {
                      "value": "SchedulingMailbox",
                      "displayName": "Scheduling Mailbox"
                    },
                    {
                      "value": "SharedMailbox",
                      "displayName": "Shared Mailbox"
                    },
                    {
                      "value": "TeamMailbox",
                      "displayName": "Team Mailbox"
                    },
                    {
                      "value": "UserMailbox",
                      "displayName": "User Mailbox"
                    }
                  ]
                },
                "NoResultIsAnException": {
                  "type": "boolean",
                  "default": false,
                  "title": "Is no result an exception",
                  "description": "Set to true to raise an exception if no mailboxes are found. Set to false to simply report a count of 0 if no mailboxes are found. Note the 'false' option may not work when used with Identity in non-English languages so consider searching using filters instead.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Search results JSON",
                  "description": "A list of Exchange mailboxes (and their requested properties) which match the search identity, in JSON format."
                },
                "CountOfMailboxesFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of mailboxes found",
                  "description": "The number of Exchange mailboxes found which match the search identity or filter. 1 result is expected if searching by identity. 0 or more results are expected if searching by filter."
                }
              }
            }
          }
        },
        "operationId": "ExchangeGetMailbox"
      }
    },
    "/PowerShellAutomation/ExchangeDoesMailboxExist": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Does Microsoft Exchange mailbox exist",
        "description": "Returns whether the specified Exchange mailbox exists.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeDoesMailboxExist",
            "description": "Inputs for IA-Connect ExchangeDoesMailboxExist action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange mailbox. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "FilterPropertyName": {
                  "type": "string",
                  "title": "Filter property name",
                  "description": "As an alternative to searching by identity, provide the name of the property to filter the mailboxes by. Common property names are: Name, Alias, PrimarySMTPAddress, DisplayName, SamAccountName. If using a filter, you also need to populate the 'Filter property comparison' and 'Filter property value' fields."
                },
                "FilterPropertyComparison": {
                  "type": "string",
                  "default": "Equals",
                  "title": "Filter property comparison",
                  "description": "If searching by 'Filter property name' as an alternative to searching by identity, enter the type of comparison here (for example: If the filter property name is 'Alias', the comparison could be 'equals' or 'like'). If you wish to enter a raw filter (in OPATH format), choose a comparison type of 'Raw: Enter filter manually' and enter the full filter in the 'Filter property value' field.",
                  "enum": [
                    "Equals",
                    "Not equals",
                    "Like",
                    "Not like",
                    "Greater than",
                    "Less than",
                    "Raw"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "Equals",
                      "displayName": "Equals: Exact match"
                    },
                    {
                      "value": "Not equals",
                      "displayName": "Not equals: Not equals exact match"
                    },
                    {
                      "value": "Like",
                      "displayName": "Like: Equals with wildcards"
                    },
                    {
                      "value": "Not like",
                      "displayName": "Not like: Not equals with wildcards"
                    },
                    {
                      "value": "Greater than",
                      "displayName": "Greater than: Numeric comparison"
                    },
                    {
                      "value": "Less than",
                      "displayName": "Less than: Numeric comparison"
                    },
                    {
                      "value": "Raw",
                      "displayName": "Raw: Enter filter manually"
                    }
                  ]
                },
                "FilterPropertyValue": {
                  "type": "string",
                  "title": "Filter property value",
                  "description": "If searching by filter as an alternative to searching by identity, enter the value of the filter property here (for example: If the filter property name is 'Alias', the filter property value might be 'JohnDoe')."
                },
                "RecipientTypeDetails": {
                  "type": "string",
                  "title": "Recipient type details",
                  "description": "The type of mailbox to search for. If this field is left blank, all types of mailbox will be included in the search.",
                  "enum": [
                    "DiscoveryMailbox",
                    "EquipmentMailbox",
                    "GroupMailbox",
                    "LegacyMailbox",
                    "LinkedMailbox",
                    "LinkedRoomMailbox",
                    "RoomMailbox",
                    "SchedulingMailbox",
                    "SharedMailbox",
                    "TeamMailbox",
                    "UserMailbox"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "DiscoveryMailbox",
                      "displayName": "Discovery Mailbox"
                    },
                    {
                      "value": "EquipmentMailbox",
                      "displayName": "Equipment Mailbox"
                    },
                    {
                      "value": "GroupMailbox",
                      "displayName": "Group Mailbox"
                    },
                    {
                      "value": "LegacyMailbox",
                      "displayName": "Legacy Mailbox"
                    },
                    {
                      "value": "LinkedMailbox",
                      "displayName": "Linked Mailbox"
                    },
                    {
                      "value": "LinkedRoomMailbox",
                      "displayName": "Linked Room Mailbox"
                    },
                    {
                      "value": "RoomMailbox",
                      "displayName": "Room Mailbox"
                    },
                    {
                      "value": "SchedulingMailbox",
                      "displayName": "Scheduling Mailbox"
                    },
                    {
                      "value": "SharedMailbox",
                      "displayName": "Shared Mailbox"
                    },
                    {
                      "value": "TeamMailbox",
                      "displayName": "Team Mailbox"
                    },
                    {
                      "value": "UserMailbox",
                      "displayName": "User Mailbox"
                    }
                  ]
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "MailboxExists": {
                  "type": "boolean",
                  "title": "Mailbox exists",
                  "description": "True if the Exchange mailbox exists. False if the Exchange mailbox does not exist."
                }
              }
            }
          }
        },
        "operationId": "ExchangeDoesMailboxExist"
      }
    },
    "/PowerShellAutomation/ExchangeAddDistributionGroupMember": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add Microsoft Exchange member to distribution group",
        "description": "Add a member (for example a user) to an Exchange distribution group. If the member is already in the group, no action is taken.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeAddDistributionGroupMember",
            "description": "Inputs for IA-Connect ExchangeAddDistributionGroupMember action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Distribution group identity",
                  "description": "The identity of the distribution group to add to. You can specify a distribution group by Name, Alias, Distinguished Name (e.g. CN=MyGroup,OU=My Groups,DC=mydomain,DC=local), Email address or GUID."
                },
                "Member": {
                  "type": "string",
                  "title": "Member to add",
                  "description": "The identity of the member to add to the distribution group. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Member",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeAddDistributionGroupMemberResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ExchangeAddDistributionGroupMember"
      }
    },
    "/PowerShellAutomation/ExchangeRemoveDistributionGroupMember": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove Microsoft Exchange member from distribution group",
        "description": "Remove a member (for example a user) from an Exchange distribution group. If the member is not in the group, no action is taken.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeRemoveDistributionGroupMember",
            "description": "Inputs for IA-Connect ExchangeRemoveDistributionGroupMember action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Distribution group identity",
                  "description": "The identity of the distribution group to add to. You can specify a distribution group by Name, Alias, Distinguished Name (e.g. CN=MyGroup,OU=My Groups,DC=mydomain,DC=local), Email address or GUID."
                },
                "Member": {
                  "type": "string",
                  "title": "Member to remove",
                  "description": "The identity of the member to remove from the distribution group. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "BypassSecurityGroupManagerCheck": {
                  "type": "boolean",
                  "default": true,
                  "title": "Bypass security group manager check",
                  "description": "By default, if the IA-Connect Agent automation account is not an owner of the Distribution Group, it will be unable to modify the Distribution Group. Alternatively, you can set this option to true and this will remove that check, but it requires the automation account to be in the Exchange 'Organization Management' role group or have the 'Role Management' role assigned - this is a single role to give you permissions to modify any Exchange Distribution group instead of being an owner of all Distribution groups you need to modify."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Member",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeRemoveDistributionGroupMemberResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ExchangeRemoveDistributionGroupMember"
      }
    },
    "/PowerShellAutomation/ExchangeGetDistributionGroup": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve Microsoft Exchange distribution group details",
        "description": "Retrieve the details of a Microsoft Exchange Distribution group. You can search by Identity or using a filter. An Identity search should return 0 or 1 results. A filter search could return 0 or more results.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeGetDistributionGroup",
            "description": "Inputs for IA-Connect ExchangeGetDistributionGroup action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Distribution group identity",
                  "description": "The identity of the distribution group to search for. You can specify a distribution group by Name, Alias, Distinguished Name (e.g. CN=MyGroup,OU=My Groups,DC=mydomain,DC=local), Email address or GUID."
                },
                "FilterPropertyName": {
                  "type": "string",
                  "title": "Filter property name",
                  "description": "As an alternative to searching by identity, provide the name of the property to filter the distribution groups by. Common property names are: DisplayName, Name, GroupType, PrimarySMTPAddress. If using a filter, you also need to populate the 'Filter property comparison' and 'Filter property value' fields."
                },
                "FilterPropertyComparison": {
                  "type": "string",
                  "default": "Equals",
                  "title": "Filter property comparison",
                  "description": "If searching by filter as an alternative to searching by identity, enter the type of comparison here (for example: If the filter property name is 'Alias', the comparison could be 'equals' or 'like'). If you wish to enter a raw filter (in OPATH format), choose a comparison type of 'Raw: Enter filter manually' and enter the full filter in the 'Filter property value' field.",
                  "enum": [
                    "Equals",
                    "Not equals",
                    "Like",
                    "Not like",
                    "Greater than",
                    "Less than",
                    "Raw"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "Equals",
                      "displayName": "Equals: Exact match"
                    },
                    {
                      "value": "Not equals",
                      "displayName": "Not equals: Not equals exact match"
                    },
                    {
                      "value": "Like",
                      "displayName": "Like: Equals with wildcards"
                    },
                    {
                      "value": "Not like",
                      "displayName": "Not like: Not equals with wildcards"
                    },
                    {
                      "value": "Greater than",
                      "displayName": "Greater than: Numeric comparison"
                    },
                    {
                      "value": "Less than",
                      "displayName": "Less than: Numeric comparison"
                    },
                    {
                      "value": "Raw",
                      "displayName": "Raw: Enter filter manually"
                    }
                  ]
                },
                "FilterPropertyValue": {
                  "type": "string",
                  "title": "Filter property value",
                  "description": "If searching by filter as an alternative to searching by identity, enter the value of the filter property here (for example: If the filter property name is 'Alias', the filter property value might be 'JohnDoe')."
                },
                "NoResultIsAnException": {
                  "type": "boolean",
                  "default": false,
                  "title": "Is no result an exception",
                  "description": "Set to true to raise an exception if no distribution groups are found. Set to false to simply report a count of 0 if no distribution groups are found. Note the 'false' option may not work when used with Identity in non-English languages so consider searching using filters instead.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Search results JSON",
                  "description": "A list of Microsoft Exchange Online or Office 365 mailboxes (and their requested properties) which match the search identity, in JSON format."
                },
                "CountOfDistributionGroupsFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of distribution groups found",
                  "description": "The number of Microsoft Exchange distribution groups found which match the search identity or filter. Usually 1."
                }
              }
            }
          }
        },
        "operationId": "ExchangeGetDistributionGroup"
      }
    },
    "/PowerShellAutomation/ExchangeGetDistributionGroupMembers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Microsoft Exchange distribution group members",
        "description": "Retrieve a list of the members of a Microsoft Exchange Distribution group.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeGetDistributionGroupMembers",
            "description": "Inputs for IA-Connect ExchangeGetDistributionGroupMembers action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Distribution group identity",
                  "description": "The identity of the distribution group to search for. You can specify a distribution group by Name, Alias, Distinguished Name (e.g. CN=MyGroup,OU=My Groups,DC=mydomain,DC=local), Email address or GUID."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "DistributionGroupMembersJSON": {
                  "type": "string",
                  "title": "Distribution group members",
                  "description": "A list of members of the Exchange Distribution group, in JSON format."
                },
                "CountOfDistributionGroupsMembers": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of distribution groups members",
                  "description": "The number of members of the Microsoft Exchange distribution group."
                }
              }
            }
          }
        },
        "operationId": "ExchangeGetDistributionGroupMembers"
      }
    },
    "/PowerShellAutomation/ExchangeGetMailboxDistributionGroupMembership": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve Microsoft Exchange mailbox distribution group membership",
        "description": "Retrieve which distribution groups a mailbox is a member of.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeGetMailboxDistributionGroupMembership",
            "description": "Inputs for IA-Connect ExchangeGetMailboxDistributionGroupMembership action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange mailbox. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Search results JSON",
                  "description": "A list of Microsoft Exchange Online or Office 365 mailboxes (and their requested properties) which match the search identity, in JSON format."
                },
                "CountOfDistributionGroupsFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of distribution groups found",
                  "description": "The number of Microsoft Exchange distribution groups the mailbox is a member of."
                }
              }
            }
          }
        },
        "operationId": "ExchangeGetMailboxDistributionGroupMembership"
      }
    },
    "/PowerShellAutomation/ExchangeNewDistributionGroup": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create a new Microsoft Exchange distribution group",
        "description": "Creates a new Microsoft Exchange distribution group or mail-enabled security group.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeNewDistributionGroup",
            "description": "Inputs for IA-Connect ExchangeNewDistributionGroup action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Name": {
                  "type": "string",
                  "title": "Group name",
                  "description": "The unique name for the new group."
                },
                "Alias": {
                  "type": "string",
                  "title": "Alias",
                  "description": "The alias (also known as mail nickname) for the new group. If you don't specify a SMTP address, the alias will be used to generate the name component of the email address (e.g. alias@mydomain.com)."
                },
                "DisplayName": {
                  "type": "string",
                  "title": "Display name",
                  "description": "The display name of the group. This is visible in address lists."
                },
                "Notes": {
                  "type": "string",
                  "title": "Notes",
                  "description": "Optional notes about the object."
                },
                "ManagedBy": {
                  "type": "string",
                  "title": "Managed by",
                  "description": "The owner of the group. If you don't specify an owner, the user that created the group will become the owner. The owner can be a mailbox, mail user or mail-enabled security group. You can specify a mailbox by Name, Alias, Object Id (e.g. 01234567-0123-0123-0123-0123456789ab), Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "Members": {
                  "type": "string",
                  "title": "Members",
                  "description": "A comma separated list of members to add to the new group. You can specify members by Name, Alias, Distinguished Name (e.g. CN=MyGroup,OU=My Groups,DC=mydomain,DC=local), Email address or GUID."
                },
                "OrganizationalUnit": {
                  "type": "string",
                  "title": "Organizational unit",
                  "description": "The Organizational Unit (OU) in Active Directory in which to store the group. You can specify an OU in Distinguished Name format (e.g. OU=Target OU,OU=London,DC=mydomain,DC=local), GUID format or as a path (e.g. MyGroups\\London). If this is left blank, the group will be created in the 'Users' OU."
                },
                "PrimarySmtpAddress": {
                  "type": "string",
                  "title": "Primary SMTP address",
                  "description": "The primary return email address that is used for the new group."
                },
                "MemberDepartRestriction": {
                  "type": "string",
                  "default": "Open",
                  "title": "Member depart restriction",
                  "description": "Allows you to specify restrictions on a member leaving a distribution group. 'Open' is the default and allows members to leave the group without approval, 'Closed' restricts members from leaving the group. This option is ignored for security groups since users cannot remove themselves from security groups.",
                  "enum": [
                    "Open",
                    "Closed"
                  ]
                },
                "MemberJoinRestriction": {
                  "type": "string",
                  "default": "Closed",
                  "title": "Member join restriction",
                  "description": "Allows you to specify restrictions on a member joining a distribution group after it has been created. 'Open' allows members to join the group without approval, 'Closed' (the default) restricts members from joining the group, 'ApprovalRequired' allows a member to request joining the group and they are added if a group owner accepts the request. This option is ignored for security groups since users cannot add themselves to security groups.",
                  "enum": [
                    "Open",
                    "Closed",
                    "ApprovalRequired"
                  ]
                },
                "RequireSenderAuthenticationEnabled": {
                  "type": "boolean",
                  "default": false,
                  "title": "Require sender authentication",
                  "description": "Set to true to specify that the group will only accept messages from authenticated (internal) senders. Set to false to accept messages from all senders."
                },
                "Type": {
                  "type": "string",
                  "default": "Distribution",
                  "title": "Group type",
                  "description": "Specify the type of group to create. 'Distribution' is the default and creates a distribution group. 'Security' is used to create a mail-enabled security group.",
                  "enum": [
                    "Distribution",
                    "Security"
                  ]
                },
                "ErrorIfGroupAlreadyExists": {
                  "type": "boolean",
                  "default": true,
                  "title": "Exception if group already exists",
                  "description": "Should an exception occur if the group already exists? Set to false to simply do nothing if the group already exists (e.g. it has already been created). Set to true if the group already existing is an error (i.e. it was not expected to exist).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Name",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Action result JSON",
                  "description": "The output from the create distribution group action, in JSON format. This will typically hold the details of the created group."
                },
                "GroupAlreadyExists": {
                  "type": "boolean",
                  "title": "Group already exists",
                  "description": "If the group already exists (and 'Exception if group already exists' is set to false), this will be set to true to inform you that the group didn't actually get created because it already exists."
                },
                "NewGroupDN": {
                  "type": "string",
                  "title": "New group DN",
                  "description": "The Distinguished Name (DN) of the newly created group. This is a unique identifier for the group which could be used in further actions on this group."
                },
                "NewGroupGUID": {
                  "type": "string",
                  "title": "New group GUID",
                  "description": "The GUID of the newly created (enabled) group. This is a unique identifier for the group which could be used in further actions on this group."
                }
              }
            }
          }
        },
        "operationId": "ExchangeNewDistributionGroup"
      }
    },
    "/PowerShellAutomation/ExchangeRemoveDistributionGroup": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove Microsoft Exchange distribution group",
        "description": "Remove a Microsoft Exchange distribution group.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeRemoveDistributionGroup",
            "description": "Inputs for IA-Connect ExchangeRemoveDistributionGroup action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Distribution group identity",
                  "description": "The identity of the distribution group. You can specify a distribution group by Name, Alias, Distinguished Name (e.g. CN=MyGroup,OU=My Groups,DC=mydomain,DC=local), Email address or GUID."
                },
                "BypassSecurityGroupManagerCheck": {
                  "type": "boolean",
                  "default": true,
                  "title": "Bypass security group manager check",
                  "description": "By default, if the IA-Connect Agent automation account is not an owner of the Distribution Group, it will be unable to remove the Distribution Group. Alternatively, you can set this option to true and this will remove that check, but it requires the automation account to be in the Exchange 'Organization Management' role group or have the 'Role Management' role assigned - this is a single role to give you permissions to modify any Exchange Distribution group instead of being an owner of all Distribution groups you need to modify."
                },
                "ErrorIfGroupDoesNotExist": {
                  "type": "boolean",
                  "default": false,
                  "title": "Exception if group does not exist",
                  "description": "Should an exception occur if the group does not exist? Set to false to simply do nothing if the group doesn't exist (e.g. it may have already been deleted). Set to true if the group not existing is an error (i.e. it was expected to exist).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeRemoveDistributionGroupResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ExchangeRemoveDistributionGroup"
      }
    },
    "/PowerShellAutomation/ExchangeAddMailboxPermission": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add Microsoft Exchange mailbox permission to user",
        "description": "Assign mailbox permissions to a specifed mailbox user, user or security group.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeAddMailboxPermission",
            "description": "Inputs for IA-Connect ExchangeAddMailboxPermission action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange mailbox. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "User": {
                  "type": "string",
                  "title": "User",
                  "description": "The user to add to the mailbox permissions. You can specify a user by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "AccessRights": {
                  "type": "string",
                  "title": "Access rights",
                  "description": "The access rights to assign to the user's permissions on the mailbox. Available options are 'ChangeOwner', 'ChangePermission', 'DeleteItem', 'ExternalAccount', 'FullAccess' and 'ReadPermission'."
                },
                "AutoMapping": {
                  "type": "boolean",
                  "default": false,
                  "title": "Auto mapping",
                  "description": "If set to true, the mailbox and user account will have some additional properties set that will result in Outlook automatically opening the mailbox when logged-in as this user. This can take a few minutes to take effect. If set to false, the additional properties will not be set and Outlook will not automatically open the mailbox."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "User",
                "AccessRights",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeAddMailboxPermissionResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ExchangeAddMailboxPermission"
      }
    },
    "/PowerShellAutomation/ExchangeRemoveMailboxPermission": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove Microsoft Exchange mailbox permission from user",
        "description": "Remove mailbox permissions from a specifed mailbox user, user or security group.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeRemoveMailboxPermission",
            "description": "Inputs for IA-Connect ExchangeRemoveMailboxPermission action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange mailbox. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "User": {
                  "type": "string",
                  "title": "User",
                  "description": "The user to remove from the mailbox permissions. You can specify a user by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "AccessRights": {
                  "type": "string",
                  "title": "Access rights",
                  "description": "The access rights to remove from the user's permissions on the mailbox. Available options are 'ChangeOwner', 'ChangePermission', 'DeleteItem', 'ExternalAccount', 'FullAccess' and 'ReadPermission'."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "User",
                "AccessRights",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeRemoveMailboxPermissionResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ExchangeRemoveMailboxPermission"
      }
    },
    "/PowerShellAutomation/ExchangeDisableMailbox": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Disable the Microsoft Exchange mailbox for a user",
        "description": "Disable an existing Microsoft Exchange mailbox.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeDisableMailbox",
            "description": "Inputs for IA-Connect ExchangeDisableMailbox action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange mailbox. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Action result JSON",
                  "description": "The output from the disable mailbox action, in JSON format."
                }
              }
            }
          }
        },
        "operationId": "ExchangeDisableMailbox"
      }
    },
    "/PowerShellAutomation/ExchangeDisableRemoteMailbox": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Disable the Microsoft Exchange Online mailbox for a user",
        "description": "Disable an existing Microsoft Exchange Online or Office 365 (remote) mailbox. The request is sent via your on-premises Microsoft Exchange server.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeDisableRemoteMailbox",
            "description": "Inputs for IA-Connect ExchangeDisableRemoteMailbox action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange Online or Office 365 (remote) mailbox. You can specify a Microsoft Exchange Online or Office 365 (remote) mailbox by Active Directory object Id, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID or User Principal Name (UPN)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Action result JSON",
                  "description": "The output from the disable mailbox action, in JSON format."
                }
              }
            }
          }
        },
        "operationId": "ExchangeDisableRemoteMailbox"
      }
    },
    "/PowerShellAutomation/ExchangeEnableMailbox": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create a Microsoft Exchange mailbox for a user",
        "description": "Creates a Microsoft Exchange mailbox for an existing user who doesn't already have a mailbox.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeEnableMailbox",
            "description": "Inputs for IA-Connect ExchangeEnableMailbox action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the existing user you want to create a mailbox for. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "Alias": {
                  "type": "string",
                  "title": "Alias",
                  "description": "The Exchange alias (also known as mail nickname) for the user. If the email address policy is enabled, this will be used to generate the name component of the Primary SMTP email address (e.g. alias@mydomain.com). If the email address policy is not enabled, you may wish to set the primary SMTP address instead."
                },
                "DisplayName": {
                  "type": "string",
                  "title": "Display name",
                  "description": "The display name of the mailbox. This is visible in address lists."
                },
                "LinkedDomainController": {
                  "type": "string",
                  "title": "Linked Domain Controller",
                  "description": "If you are creating a linked mailbox, this allows you to specify the domain controller in the forest where the user account resides. Use the Fully Qualified Domain Name (FQDN) of the domain controller."
                },
                "LinkedMasterAccount": {
                  "type": "string",
                  "title": "Linked master account",
                  "description": "If you are creating a linked mailbox, this allows you to specify the account that the mailbox is linked to. You can specify the account by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID or Name (e.g. 'User1')."
                },
                "Database": {
                  "type": "string",
                  "title": "Database",
                  "description": "The Exchange database to contain the new database. You can specify the database by Distinguished Name, GUID or Name."
                },
                "PrimarySmtpAddress": {
                  "type": "string",
                  "title": "Primary SMTP address",
                  "description": "The primary return email address that is used for the recipient. You are unlikely to be able to set this if the 'Email address policy' is enabled so either use 'Alias' instead (and the policy will create the Primary SMTP address from the alias) or disable the email address policy."
                },
                "EmailAddressPolicyEnabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "Email address policy enabled",
                  "description": "Set to true if you want to automatically update email addresses based on the email address policy applied to this recipient. If the email address policy is enabled, this generally will impact your ability to set the primary SMTP address. Set to false to disable the feature, giving you full control to manually setting email addresses. Leave blank if you don't want to set this option (i.e. leave at the existing or default value)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Action result JSON",
                  "description": "The output from the enable mailbox action, in JSON format."
                },
                "NewMailboxDN": {
                  "type": "string",
                  "title": "New mailbox DN",
                  "description": "The Distinguished Name (DN) of the newly created (enabled) mailbox. This is a unique identifier for the mailbox which could be used in further actions on this mailbox."
                },
                "NewMailboxGUID": {
                  "type": "string",
                  "title": "New mailbox GUID",
                  "description": "The GUID of the newly created (enabled) mailbox. This is a unique identifier for the mailbox which could be used in further actions on this mailbox."
                }
              }
            }
          }
        },
        "operationId": "ExchangeEnableMailbox"
      }
    },
    "/PowerShellAutomation/ExchangeEnableRemoteMailbox": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Microsoft Exchange Online mailbox for a user",
        "description": "Creates a Microsoft Exchange Online or Office 365 (remote) mailbox for an existing user in on-premises Active Directory who doesn't already have a mailbox. The request is sent via your on-premises Microsoft Exchange server.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeEnableRemoteMailbox",
            "description": "Inputs for IA-Connect ExchangeEnableRemoteMailbox action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the existing user you want to create a mailbox for. You can specify a user by Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), GUID, SID (e.g. S-1-5-21-0123456789-0123456789-0123456789-0123), SAMAccountName (e.g. 'User1') or Name (e.g. 'User1')."
                },
                "Alias": {
                  "type": "string",
                  "title": "Alias",
                  "description": "The Exchange alias (also known as mail nickname) for the user. If the email address policy is enabled, this will be used to generate the name component of the Primary SMTP email address (e.g. alias@mydomain.com). If the email address policy is not enabled, you may wish to set the primary SMTP address instead."
                },
                "DisplayName": {
                  "type": "string",
                  "title": "Display name",
                  "description": "The display name of the mailbox. This is visible in address lists."
                },
                "RemoteRoutingAddress": {
                  "type": "string",
                  "title": "Remote routing address",
                  "description": "The SMTP address of the mailbox in Microsoft Exchange Online or Office 365 that this user is associated with."
                },
                "PrimarySmtpAddress": {
                  "type": "string",
                  "title": "Primary SMTP address",
                  "description": "The primary return email address that is used for the recipient. You are unlikely to be able to set this if the 'Email address policy' is enabled so either use 'Alias' instead or disable the email address policy."
                },
                "Archive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Create archive mailbox",
                  "description": "Set to true if you want to additionally create an archive mailbox in Microsoft Exchange Online or Office 365."
                },
                "EmailAddressPolicyEnabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "Email address policy enabled",
                  "description": "Set to true if you want to automatically update email addresses based on the email address policy applied to this recipient. If the email address policy is enabled, this generally will impact your ability to set the primary SMTP address. Set to false to disable the feature, giving you full control to manually setting email addresses. Leave blank if you don't want to set this option (i.e. leave at the existing or default value)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Action result JSON",
                  "description": "The output from the enable remote mailbox action, in JSON format."
                },
                "NewMailboxDN": {
                  "type": "string",
                  "title": "New mailbox DN",
                  "description": "The Distinguished Name (DN) of the newly created (enabled) mailbox. This is a unique identifier for the mailbox which could be used in further actions on this mailbox."
                },
                "NewMailboxGUID": {
                  "type": "string",
                  "title": "New mailbox GUID",
                  "description": "The GUID of the newly created (enabled) mailbox. This is a unique identifier for the mailbox which could be used in further actions on this mailbox."
                }
              }
            }
          }
        },
        "operationId": "ExchangeEnableRemoteMailbox"
      }
    },
    "/PowerShellAutomation/ExchangeGetRemoteMailbox": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve Microsoft Exchange Online mailbox details",
        "description": "Returns the properties of the specified Microsoft Exchange Online or Office 365 (remote) mailbox. The request is sent via your on-premises Microsoft Exchange server. You can search by Identity or using a filter. An Identity search should return 0 or 1 results. A filter search could return 0 or more results.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeGetRemoteMailbox",
            "description": "Inputs for IA-Connect ExchangeGetRemoteMailbox action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange Online or Office 365 (remote) mailbox. You can specify a Microsoft Exchange Online or Office 365 (remote) mailbox by Active Directory object Id, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID or User Principal Name (UPN)."
                },
                "FilterPropertyName": {
                  "type": "string",
                  "title": "Filter property name",
                  "description": "As an alternative to searching by identity, provide the name of the property to filter the mailboxes by. Common property names are: Name, Alias, PrimarySMTPAddress, DisplayName. If using a filter, you also need to populate the 'Filter property comparison' and 'Filter property value' fields."
                },
                "FilterPropertyComparison": {
                  "type": "string",
                  "default": "Equals",
                  "title": "Filter property comparison",
                  "description": "If searching by filter as an alternative to searching by identity, enter the type of comparison here (for example: If the filter property name is 'Alias', the comparison could be 'equals' or 'like'). If you wish to enter a raw filter (in OPATH format), choose a comparison type of 'Raw: Enter filter manually' and enter the full filter in the 'Filter property value' field.",
                  "enum": [
                    "Equals",
                    "Not equals",
                    "Like",
                    "Not like",
                    "Greater than",
                    "Less than",
                    "Raw"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "Equals",
                      "displayName": "Equals: Exact match"
                    },
                    {
                      "value": "Not equals",
                      "displayName": "Not equals: Not equals exact match"
                    },
                    {
                      "value": "Like",
                      "displayName": "Like: Equals with wildcards"
                    },
                    {
                      "value": "Not like",
                      "displayName": "Not like: Not equals with wildcards"
                    },
                    {
                      "value": "Greater than",
                      "displayName": "Greater than: Numeric comparison"
                    },
                    {
                      "value": "Less than",
                      "displayName": "Less than: Numeric comparison"
                    },
                    {
                      "value": "Raw",
                      "displayName": "Raw: Enter filter manually"
                    }
                  ]
                },
                "FilterPropertyValue": {
                  "type": "string",
                  "title": "Filter property value",
                  "description": "If searching by filter as an alternative to searching by identity, enter the value of the filter property here (for example: If the filter property name is 'Alias', the filter property value might be 'JohnDoe')."
                },
                "NoResultIsAnException": {
                  "type": "boolean",
                  "default": false,
                  "title": "Is no result an exception",
                  "description": "Set to true to raise an exception if no mailboxes are found. Set to false to simply report a count of 0 if no mailboxes are found. Note the 'false' option may not work when used with Identity in non-English languages so consider searching using filters instead.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Search results JSON",
                  "description": "A list of Microsoft Exchange Online or Office 365 mailboxes (and their requested properties) which match the search identity, in JSON format."
                },
                "CountOfMailboxesFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of mailboxes found",
                  "description": "The number of Microsoft Exchange Online or Office 365 mailboxes found which match the search identity or filter. Usually 1."
                }
              }
            }
          }
        },
        "operationId": "ExchangeGetRemoteMailbox"
      }
    },
    "/PowerShellAutomation/ExchangeDoesRemoteMailboxExist": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Does Microsoft Exchange Online mailbox exist",
        "description": "Returns whether the specified Microsoft Exchange Online or Office 365 (remote) mailbox exists. The request is sent via your on-premises Microsoft Exchange server.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeDoesRemoteMailboxExist",
            "description": "Inputs for IA-Connect ExchangeDoesRemoteMailboxExist action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange Online or Office 365 (remote) mailbox. You can specify a Microsoft Exchange Online or Office 365 (remote) mailbox by Active Directory object Id, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID or User Principal Name (UPN)."
                },
                "FilterPropertyName": {
                  "type": "string",
                  "title": "Filter property name",
                  "description": "As an alternative to searching by identity, provide the name of the property to filter the mailboxes by. Common property names are: Name, Alias, PrimarySMTPAddress, DisplayName. If using a filter, you also need to populate the 'Filter property comparison' and 'Filter property value' fields."
                },
                "FilterPropertyComparison": {
                  "type": "string",
                  "default": "Equals",
                  "title": "Filter property comparison",
                  "description": "If searching by filter as an alternative to searching by identity, enter the type of comparison here (for example: If the filter property name is 'Alias', the comparison could be 'equals' or 'like'). If you wish to enter a raw filter (in OPATH format), choose a comparison type of 'Raw: Enter filter manually' and enter the full filter in the 'Filter property value' field.",
                  "enum": [
                    "Equals",
                    "Not equals",
                    "Like",
                    "Not like",
                    "Greater than",
                    "Less than",
                    "Raw"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "Equals",
                      "displayName": "Equals: Exact match"
                    },
                    {
                      "value": "Not equals",
                      "displayName": "Not equals: Not equals exact match"
                    },
                    {
                      "value": "Like",
                      "displayName": "Like: Equals with wildcards"
                    },
                    {
                      "value": "Not like",
                      "displayName": "Not like: Not equals with wildcards"
                    },
                    {
                      "value": "Greater than",
                      "displayName": "Greater than: Numeric comparison"
                    },
                    {
                      "value": "Less than",
                      "displayName": "Less than: Numeric comparison"
                    },
                    {
                      "value": "Raw",
                      "displayName": "Raw: Enter filter manually"
                    }
                  ]
                },
                "FilterPropertyValue": {
                  "type": "string",
                  "title": "Filter property value",
                  "description": "If searching by filter as an alternative to searching by identity, enter the value of the filter property here (for example: If the filter property name is 'Alias', the filter property value might be 'JohnDoe')."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "MailboxExists": {
                  "type": "boolean",
                  "title": "Mailbox exists",
                  "description": "True if the Microsoft Exchange Online mailbox exists. False if the Microsoft Exchange Online mailbox does not exist."
                }
              }
            }
          }
        },
        "operationId": "ExchangeDoesRemoteMailboxExist"
      }
    },
    "/PowerShellAutomation/ExchangeNewRemoteMailbox": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Microsoft Exchange Online mailbox and user account",
        "description": "Create a mail-enabled user in on-premises Active Directory and create an associated remote mailbox in Microsoft Exchange Online or Office 365. Only use this action if the user doesn't exist in on-premises Active Directory. If the user already exists, use the action 'Create Microsoft Exchange Online mailbox for a user'. The request is sent via your on-premises Microsoft Exchange server.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeNewRemoteMailbox",
            "description": "Inputs for IA-Connect ExchangeNewRemoteMailbox action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FirstName": {
                  "type": "string",
                  "title": "First name",
                  "description": "The user's first name."
                },
                "LastName": {
                  "type": "string",
                  "title": "Last name",
                  "description": "The user's last name / surname."
                },
                "OnPremisesOrganizationalUnit": {
                  "type": "string",
                  "title": "Organizational unit",
                  "description": "The Organisation Unit (OU) in which to store the user in Distinguished Name format (e.g. OU=Target OU,OU=London,DC=mydomain,DC=local), GUID format or as a path (e.g. MyUsers\\London). If this is left blank, the user will be created in the 'Users' OU."
                },
                "Name": {
                  "type": "string",
                  "title": "Name",
                  "description": "The name of the Active Directory user. This appears in the 'Name' column in AD users and computers and in the top of the User 'General' tab. This is not the user logon name."
                },
                "DisplayName": {
                  "type": "string",
                  "title": "Display name",
                  "description": "The optional user display name."
                },
                "RemoteRoutingAddress": {
                  "type": "string",
                  "title": "Remote routing address",
                  "description": "Set this to override the SMTP address of the mailbox in Microsoft Exchange Online or Office 365 that this user is associated with. If you leave this field blank (the default), the remote routing address is automatically calculated based on your directory synchronisation between on-premises and Microsoft Exchange Online."
                },
                "Alias": {
                  "type": "string",
                  "title": "Alias",
                  "description": "The Exchange alias (also known as mail nickname) for the user. If the email address policy is enabled, this will be used to generate the name component of the Primary SMTP email address (e.g. alias@mydomain.com). If the email address policy is not enabled, you may wish to set the primary SMTP address instead."
                },
                "PrimarySmtpAddress": {
                  "type": "string",
                  "title": "Primary SMTP address",
                  "description": "The primary return email address that is used for the recipient. You are unlikely to be able to set this if the 'Email address policy' is enabled so either use 'Alias' instead (and the policy will create the Primary SMTP address from the alias) or disable the email address policy."
                },
                "UserPrincipalName": {
                  "type": "string",
                  "title": "User Principal Name",
                  "description": "The user logon name in Active Directory. This generally should be in the format 'name@domainFQDN' (e.g. 'TestUser1@domain.local'). The user can logon using this format: name@domainFQDN."
                },
                "SamAccountName": {
                  "type": "string",
                  "title": "SAM account name",
                  "description": "The user logon name (pre-Windows 2000) in Active Directory. This is in the format 'name' (e.g. 'TestUser1'). The user can logon using this format: DOMAIN\\name."
                },
                "Password": {
                  "type": "string",
                  "format": "password",
                  "title": "Account password",
                  "description": "The user password. This must be specified and must meet the Active Directory password complexity rules. If this is a 'Stored' password, enter in the format {IAConnectPassword:StoredPasswordIdentifier} and set 'Account password is stored password' to true."
                },
                "AccountPasswordIsStoredPassword": {
                  "type": "boolean",
                  "default": false,
                  "title": "Account password is stored password",
                  "description": "Set to true if the account password is an IA-Connect stored password identifier, in the format {IAConnectPassword:StoredPasswordIdentifier}. This stored password could have been generated by the 'Generate password' action, for example."
                },
                "ResetPasswordOnNextLogon": {
                  "type": "boolean",
                  "default": true,
                  "title": "User must change password at next logon",
                  "description": "Set to true if you want to force the user to change their password when they login (i.e. the new password being set here is a one-time password to get the user logged-in). Set to false if this is the password the user will use until they manually change it."
                },
                "SharedMailbox": {
                  "type": "boolean",
                  "default": false,
                  "title": "Is shared mailbox",
                  "description": "Set to true if the mailbox being created should be a shared mailbox."
                },
                "EmailAddressPolicyEnabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "Email address policy enabled",
                  "description": "Set to true if you want to automatically update email addresses based on the email address policy applied to this recipient. If the email address policy is enabled, this generally will impact your ability to set the primary SMTP address. Set to false to disable the feature, giving you full control to manually setting email addresses. Leave blank if you don't want to set this option (i.e. leave at the existing or default value)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Name",
                "UserPrincipalName",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Action result JSON",
                  "description": "The output from the new remote mailbox action, in JSON format."
                },
                "NewMailboxDN": {
                  "type": "string",
                  "title": "New mailbox DN",
                  "description": "The Distinguished Name (DN) of the newly created mailbox. This is a unique identifier for the mailbox which could be used in further actions on this mailbox."
                },
                "NewMailboxGUID": {
                  "type": "string",
                  "title": "New mailbox GUID",
                  "description": "The GUID of the newly created mailbox. This is a unique identifier for the mailbox which could be used in further actions on this mailbox."
                }
              }
            }
          }
        },
        "operationId": "ExchangeNewRemoteMailbox"
      }
    },
    "/PowerShellAutomation/ExchangeSetADServerToViewEntireForest": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set Exchange to view entire Active Directory forest",
        "description": "Specify whether the entire Active Directory forest (including sub-domains) is searched / viewed when performing Exchange actions. You may need to use this action if you have multiple linked domains.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeSetADServerToViewEntireForest",
            "description": "Inputs for IA-Connect ExchangeSetADServerToViewEntireForest action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ViewEntireForest": {
                  "type": "boolean",
                  "default": false,
                  "title": "View entire forest",
                  "description": "Set to true if you want to search the entire Active Directory forest, false if you only want to search the current Active Directory domain."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ViewEntireForest",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeSetADServerToViewEntireForestResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ExchangeSetADServerToViewEntireForest"
      }
    },
    "/PowerShellAutomation/ExchangeSetMailbox": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set the properties on a Microsoft Exchange mailbox",
        "description": "Set the properties of an existing Microsoft Exchange mailbox.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeSetMailbox",
            "description": "Inputs for IA-Connect ExchangeSetMailbox action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange mailbox. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "AccountDisabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "Account disabled",
                  "description": "Set to true if you want to disable the account, false if you want to enable the account or don't specify a value to leave the current setting untouched."
                },
                "Alias": {
                  "type": "string",
                  "title": "Alias",
                  "description": "The Exchange alias (also known as mail nickname) for the user. If the email address policy is enabled, this will be used to generate the name component of the Primary SMTP email address (e.g. alias@mydomain.com). If the email address policy is not enabled, you may wish to set the primary SMTP address instead. Leave blank if you don't want to change the current value."
                },
                "DisplayName": {
                  "type": "string",
                  "title": "Display name",
                  "description": "The display name of the mailbox. This is visible in address lists."
                },
                "PrimarySmtpAddress": {
                  "type": "string",
                  "title": "Primary SMTP address",
                  "description": "The primary return email address that is used for the recipient. You are unlikely to be able to set this if the 'Email address policy' is enabled so either use 'Alias' instead (and the policy will create the Primary SMTP address from the alias) or disable the email address policy. Leave blank if you don't want to change the current value."
                },
                "HiddenFromAddressListsEnabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "Hidden from address lists",
                  "description": "Set to true to hide the mailbox from address lists, false to show the mailbox in address lists or don't specify a value to leave the current setting untouched."
                },
                "CustomAttribute1": {
                  "type": "string",
                  "title": "Custom attribute 1",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute2": {
                  "type": "string",
                  "title": "Custom attribute 2",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute3": {
                  "type": "string",
                  "title": "Custom attribute 3",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute4": {
                  "type": "string",
                  "title": "Custom attribute 4",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute5": {
                  "type": "string",
                  "title": "Custom attribute 5",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute6": {
                  "type": "string",
                  "title": "Custom attribute 6",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute7": {
                  "type": "string",
                  "title": "Custom attribute 7",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute8": {
                  "type": "string",
                  "title": "Custom attribute 8",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute9": {
                  "type": "string",
                  "title": "Custom attribute 9",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute10": {
                  "type": "string",
                  "title": "Custom attribute 10",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute11": {
                  "type": "string",
                  "title": "Custom attribute 11",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute12": {
                  "type": "string",
                  "title": "Custom attribute 12",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute13": {
                  "type": "string",
                  "title": "Custom attribute 13",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute14": {
                  "type": "string",
                  "title": "Custom attribute 14",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute15": {
                  "type": "string",
                  "title": "Custom attribute 15",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "EmailAddressPolicyEnabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "Email address policy enabled",
                  "description": "Set to true if you want to automatically update email addresses based on the email address policy applied to this recipient. If the email address policy is enabled, this generally will impact your ability to set the primary SMTP address. Set to false to disable the feature, giving you full control to manually setting email addresses. Leave blank if you don't want to set this option (i.e. leave at the existing or default value)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeSetMailboxResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ExchangeSetMailbox"
      }
    },
    "/PowerShellAutomation/ExchangeSetMailboxEmailAddresses": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Modify a Microsoft Exchange mailbox email addresses",
        "description": "Modify the email addresses on a Microsoft Exchange mailbox. You can add, remove and replace primary and alias email addresses.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeSetMailboxEmailAddresses",
            "description": "Inputs for IA-Connect ExchangeSetMailboxEmailAddresses action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange mailbox. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "Alias": {
                  "type": "string",
                  "title": "Alias",
                  "description": "The Exchange alias (also known as mail nickname) for the user. If the email address policy is enabled, this will be used to generate the name component of the Primary SMTP email address (e.g. alias@mydomain.com). If the email address policy is not enabled, you may wish to set the primary SMTP address instead. Leave blank if you don't want to change the current value."
                },
                "PrimarySmtpAddress": {
                  "type": "string",
                  "title": "Primary SMTP address",
                  "description": "The primary return email address that is used for the recipient. You are unlikely to be able to set this if the 'Email address policy' is enabled so either use 'Alias' instead (and the policy will create the Primary SMTP address from the alias) or disable the email address policy. Leave blank if you don't want to change the current value."
                },
                "EmailAddressPolicyEnabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "Email address policy enabled",
                  "description": "Set to true if you want to automatically update email addresses based on the email address policy applied to this recipient. If the email address policy is enabled, this generally will impact your ability to set the primary SMTP address. Set to false to disable the feature, giving you full control to manually setting email addresses. Leave blank if you don't want to set this option (i.e. leave at the existing or default value)."
                },
                "EmailAddressesToAddList": {
                  "type": "array",
                  "title": "Email addresses to add",
                  "description": "A list of additional (non-primary) email addresses to assign to the mailbox.",
                  "items": {
                    "type": "string"
                  }
                },
                "ReplaceEmailAddresses": {
                  "type": "boolean",
                  "default": true,
                  "title": "Replace email addreses",
                  "description": "Set to true if you want the supplied list of email addresses to replace all existing email addresses (not including the Primary SMTP address). Set to false if you want the supplied list of email addresses to add to any existing addresses."
                },
                "EmailAddressesToRemoveList": {
                  "type": "array",
                  "title": "Email addresses to remove",
                  "description": "A list of additional (non-primary) email addresses to remove from the mailbox (if they are present). This only has a purpose if 'Replace email addreses' is set to false or if you aren't adding any email addresses.",
                  "items": {
                    "type": "string"
                  }
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "MailboxEmailAddresses": {
                  "type": "array",
                  "title": "Mailbox Email addresses",
                  "description": "The mailbox email addresses after the modify action was performed. The primary SMTP email address will appear as SMTP:emailaddress, secondary (proxy) SMTP email addresses will appear as smtp:emailaddress, X.400 email addresses will appear as x400:address and Exchange Unified Messaging (EUM) addresses as eum:address.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "operationId": "ExchangeSetMailboxEmailAddresses"
      }
    },
    "/PowerShellAutomation/ExchangeGetMailboxEmailAddresses": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve a Microsoft Exchange mailbox email addresses",
        "description": "Retrieves a list of all email addresses assigned to a Microsoft Exchange mailbox. This includes the primary SMTP address, proxy email addresses, X.400 addresses and EUM (Exchange Unified Messaging) addresses.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeGetMailboxEmailAddresses",
            "description": "Inputs for IA-Connect ExchangeGetMailboxEmailAddresses action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange mailbox. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "MailboxEmailAddresses": {
                  "type": "array",
                  "title": "Mailbox Email addresses",
                  "description": "The mailbox email addresses. The primary SMTP email address will appear as SMTP:emailaddress, secondary (proxy) SMTP email addresses will appear as smtp:emailaddress, X.400 email addresses will appear as x400:address and Exchange Unified Messaging (EUM) addresses as eum:address.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "operationId": "ExchangeGetMailboxEmailAddresses"
      }
    },
    "/PowerShellAutomation/ExchangeSetRemoteMailboxEmailAddresses": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Modify a Microsoft Exchange Online mailbox email addresses",
        "description": "Modify the email addresses on an an existing Microsoft Exchange Online or Office 365 (remote) mailbox. You can add, remove and replace primary and alias email addresses.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeSetRemoteMailboxEmailAddresses",
            "description": "Inputs for IA-Connect ExchangeSetRemoteMailboxEmailAddresses action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange Online or Office 365 (remote) mailbox. You can specify a Microsoft Exchange Online or Office 365 (remote) mailbox by Active Directory object Id, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID or User Principal Name (UPN)."
                },
                "Alias": {
                  "type": "string",
                  "title": "Alias",
                  "description": "The Exchange alias (also known as mail nickname) for the user. If the email address policy is enabled, this will be used to generate the name component of the Primary SMTP email address (e.g. alias@mydomain.com). If the email address policy is not enabled, you may wish to set the primary SMTP address instead. Leave blank if you don't want to change the current value."
                },
                "PrimarySmtpAddress": {
                  "type": "string",
                  "title": "Primary SMTP address",
                  "description": "The primary return email address that is used for the recipient. You are unlikely to be able to set this if the 'Email address policy' is enabled so either use 'Alias' instead (and the policy will create the Primary SMTP address from the alias) or disable the email address policy. Leave blank if you don't want to change the current value."
                },
                "EmailAddressPolicyEnabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "Email address policy enabled",
                  "description": "Set to true if you want to automatically update email addresses based on the email address policy applied to this recipient. If the email address policy is enabled, this generally will impact your ability to set the primary SMTP address. Set to false to disable the feature, giving you full control to manually setting email addresses. Leave blank if you don't want to set this option (i.e. leave at the existing or default value)."
                },
                "EmailAddressesToAddList": {
                  "type": "array",
                  "title": "Email addresses to add",
                  "description": "A list of additional (non-primary) email addresses to assign to the mailbox.",
                  "items": {
                    "type": "string"
                  }
                },
                "ReplaceEmailAddresses": {
                  "type": "boolean",
                  "default": true,
                  "title": "Replace email addreses",
                  "description": "Set to true if you want the supplied list of email addresses to replace all existing email addresses (not including the Primary SMTP address). Set to false if you want the supplied list of email addresses to add to any existing addresses."
                },
                "EmailAddressesToRemoveList": {
                  "type": "array",
                  "title": "Email addresses to remove",
                  "description": "A list of additional (non-primary) email addresses to remove from the mailbox (if they are present). This only has a purpose if 'Replace email addreses' is set to false or if you aren't adding any email addresses.",
                  "items": {
                    "type": "string"
                  }
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "MailboxEmailAddresses": {
                  "type": "array",
                  "title": "Mailbox Email addresses",
                  "description": "The mailbox email addresses after the modify action was performed. The primary SMTP email address will appear as SMTP:emailaddress, secondary (proxy) SMTP email addresses will appear as smtp:emailaddress, X.400 email addresses will appear as x400:address and Exchange Unified Messaging (EUM) addresses as eum:address.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "operationId": "ExchangeSetRemoteMailboxEmailAddresses"
      }
    },
    "/PowerShellAutomation/ExchangeGetRemoteMailboxEmailAddresses": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve a Microsoft Exchange Online mailbox email addresses",
        "description": "Retrieves a list of all email addresses assigned to an existing Microsoft Exchange Online or Office 365 (remote) mailbox. This includes the primary SMTP address, proxy email addresses, X.400 addresses and EUM (Exchange Unified Messaging) addresses.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeGetRemoteMailboxEmailAddresses",
            "description": "Inputs for IA-Connect ExchangeGetRemoteMailboxEmailAddresses action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange Online or Office 365 (remote) mailbox. You can specify a Microsoft Exchange Online or Office 365 (remote) mailbox by Active Directory object Id, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID or User Principal Name (UPN)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "MailboxEmailAddresses": {
                  "type": "array",
                  "title": "Mailbox Email addresses",
                  "description": "The mailbox email addresses. The primary SMTP email address will appear as SMTP:emailaddress, secondary (proxy) SMTP email addresses will appear as smtp:emailaddress, X.400 email addresses will appear as x400:address and Exchange Unified Messaging (EUM) addresses as eum:address.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "operationId": "ExchangeGetRemoteMailboxEmailAddresses"
      }
    },
    "/PowerShellAutomation/ExchangeResetMailboxAttributes": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Reset the properties on a Microsoft Exchange mailbox",
        "description": "Set the specified properties of an existing Microsoft Exchange mailbox to blank.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeResetMailboxAttributes",
            "description": "Inputs for IA-Connect ExchangeResetMailboxAttributes action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange mailbox. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "ResetCustomAttribute1": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 1",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute2": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 2",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute3": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 3",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute4": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 4",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute5": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 5",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute6": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 6",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute7": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 7",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute8": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 8",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute9": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 9",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute10": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 10",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute11": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 11",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute12": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 12",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute13": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 13",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute14": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 14",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute15": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 15",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeResetMailboxAttributesResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ExchangeResetMailboxAttributes"
      }
    },
    "/PowerShellAutomation/ExchangeResetRemoteMailboxAttributes": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Reset the properties on a Microsoft Exchange Online mailbox",
        "description": "Set the specified properties of an existing Microsoft Exchange Online or Office 365 (remote) mailbox to blank.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeResetRemoteMailboxAttributes",
            "description": "Inputs for IA-Connect ExchangeResetRemoteMailboxAttributes action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange Online or Office 365 (remote) mailbox. You can specify a Microsoft Exchange Online or Office 365 (remote) mailbox by Active Directory object Id, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID or User Principal Name (UPN)."
                },
                "ResetCustomAttribute1": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 1",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute2": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 2",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute3": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 3",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute4": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 4",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute5": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 5",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute6": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 6",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute7": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 7",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute8": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 8",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute9": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 9",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute10": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 10",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute11": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 11",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute12": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 12",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute13": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 13",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute14": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 14",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "ResetCustomAttribute15": {
                  "type": "boolean",
                  "default": false,
                  "title": "Reset Custom attribute 15",
                  "description": "Set to true if you want to reset the custom attribute field (set to a blank value)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeResetRemoteMailboxAttributesResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ExchangeResetRemoteMailboxAttributes"
      }
    },
    "/PowerShellAutomation/ExchangeSetRemoteMailbox": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set the properties on a Microsoft Exchange Online mailbox",
        "description": "Set the properties of an existing Microsoft Exchange Online or Office 365 (remote) mailbox. The request is sent via your on-premises Microsoft Exchange server.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeSetRemoteMailbox",
            "description": "Inputs for IA-Connect ExchangeSetRemoteMailbox action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange Online or Office 365 (remote) mailbox. You can specify a Microsoft Exchange Online or Office 365 (remote) mailbox by Active Directory object Id, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID or User Principal Name (UPN)."
                },
                "Alias": {
                  "type": "string",
                  "title": "Alias",
                  "description": "The Exchange alias (also known as mail nickname) for the user. If the email address policy is enabled, this will be used to generate the name component of the Primary SMTP email address (e.g. alias@mydomain.com). If the email address policy is not enabled, you may wish to set the primary SMTP address instead. Leave blank if you don't want to change the current value."
                },
                "DisplayName": {
                  "type": "string",
                  "title": "Display name",
                  "description": "The display name of the mailbox. This is visible in address lists. Leave blank if you don't want to change the current value."
                },
                "PrimarySmtpAddress": {
                  "type": "string",
                  "title": "Primary SMTP address",
                  "description": "The primary return email address that is used for the recipient. You are unlikely to be able to set this if the 'Email address policy' is enabled so either use 'Alias' instead (and the policy will create the Primary SMTP address from the alias) or disable the email address policy. Leave blank if you don't want to change the current value."
                },
                "Type": {
                  "type": "string",
                  "title": "Mailbox type",
                  "description": "The type of mailbox. Leave blank if you don't want to change the current value.",
                  "enum": [
                    "Regular",
                    "Room",
                    "Equipment",
                    "Shared"
                  ]
                },
                "HiddenFromAddressListsEnabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "Hidden from address lists",
                  "description": "Set to true to hide the mailbox from address lists, false to show the mailbox in address lists or don't specify a value to leave the current setting untouched."
                },
                "CustomAttribute1": {
                  "type": "string",
                  "title": "Custom attribute 1",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute2": {
                  "type": "string",
                  "title": "Custom attribute 2",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute3": {
                  "type": "string",
                  "title": "Custom attribute 3",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute4": {
                  "type": "string",
                  "title": "Custom attribute 4",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute5": {
                  "type": "string",
                  "title": "Custom attribute 5",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute6": {
                  "type": "string",
                  "title": "Custom attribute 6",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute7": {
                  "type": "string",
                  "title": "Custom attribute 7",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute8": {
                  "type": "string",
                  "title": "Custom attribute 8",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute9": {
                  "type": "string",
                  "title": "Custom attribute 9",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute10": {
                  "type": "string",
                  "title": "Custom attribute 10",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute11": {
                  "type": "string",
                  "title": "Custom attribute 11",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute12": {
                  "type": "string",
                  "title": "Custom attribute 12",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute13": {
                  "type": "string",
                  "title": "Custom attribute 13",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute14": {
                  "type": "string",
                  "title": "Custom attribute 14",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "CustomAttribute15": {
                  "type": "string",
                  "title": "Custom attribute 15",
                  "description": "A value for the custom attribute field. Leave blank if you don't want to specify a value. If you want to set the value to blank (i.e. it already has a value and you want to reset it), use the 'Reset' action.",
                  "x-ms-visibility": "advanced"
                },
                "EmailAddressPolicyEnabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "Email address policy enabled",
                  "description": "Set to true if you want to automatically update email addresses based on the email address policy applied to this recipient. If the email address policy is enabled, this generally will impact your ability to set the primary SMTP address. Set to false to disable the feature, giving you full control to manually setting email addresses. Leave blank if you don't want to set this option (i.e. leave at the existing or default value)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeSetRemoteMailboxResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ExchangeSetRemoteMailbox"
      }
    },
    "/PowerShellAutomation/ExchangeSetMailboxSendOnBehalfOfPermission": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set Exchange mailbox send on behalf of",
        "description": "Specify who can send on behalf of this existing mailbox.",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeSetMailboxSendOnBehalfOfPermission",
            "description": "Inputs for IA-Connect ExchangeSetMailboxSendOnBehalfOfPermission action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange mailbox. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "GrantSendOnBehalfTo": {
                  "type": "string",
                  "title": "Grant send on behalf to",
                  "description": "The identify of a user, group or mailbox that can send emails on behalf of this mailbox. You can specify a user by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "GrantSendOnBehalfTo",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeSetMailboxSendOnBehalfOfPermissionResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ExchangeSetMailboxSendOnBehalfOfPermission"
      }
    },
    "/PowerShellAutomation/ExchangeAddADPermission": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add Microsoft Exchange mailbox permission",
        "description": "Assign mailbox permissions to an Active Directory object (e.g. user or group).",
        "parameters": [
          {
            "in": "body",
            "name": "ExchangeAddADPermission",
            "description": "Inputs for IA-Connect ExchangeAddADPermission action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The identity of the Microsoft Exchange mailbox. You can specify a mailbox by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "User": {
                  "type": "string",
                  "title": "Active Directory object",
                  "description": "The active Directory object (e.g. user or group) to assign the permissions to. You can specify a user by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "AccessRights": {
                  "type": "string",
                  "title": "Access rights",
                  "description": "The access rights to assign to the user's permissions on the mailbox. Available options are 'AccessSystemSecurity', 'CreateChild', 'DeleteChild', 'ListChildren', 'Self', 'ReadProperty', 'WriteProperty', 'DeleteTree', 'ListObject', 'ExtendedRight', 'Delete', 'ReadControl', 'GenericExecute', 'GenericWrite', 'GenericRead', 'WriteDacl', 'WriteOwner', 'GenericAll' and 'Synchronize'."
                },
                "ExtendedRights": {
                  "type": "string",
                  "title": "Extended rights",
                  "description": "An optional extended right to assign to the user's permissions on the mailbox. Extended rights include 'Send As'."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "User",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ExchangeAddADPermissionResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "ExchangeAddADPermission"
      }
    },
    "/PowerShellAzureADv2/IsAzureADv2PowerShellModuleInstalled": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Is Azure AD v2 PowerShell module installed",
        "description": "Reports if the PowerShell modules required for Azure AD v2 are installed on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "IsAzureADv2PowerShellModuleInstalled",
            "description": "Inputs for IA-Connect IsAzureADv2PowerShellModuleInstalled action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AzureADv2PowerShellModuleInstalled": {
                  "type": "boolean",
                  "title": "Azure AD v2 PowerShell module is installed",
                  "description": "Set to true if the Azure AD v2 PowerShell modules are installed."
                }
              }
            }
          }
        },
        "operationId": "IsAzureADv2PowerShellModuleInstalled"
      }
    },
    "/PowerShellAzureADv2/OpenAzureADv2PowerShellRunspace": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Connect to Azure AD with credentials",
        "description": "Connects IA-Connect to Azure AD using the Azure AD v2 PowerShell modules. This action (or 'Connect to Azure AD with certificate') must be issued before running any other Azure AD v2 actions. This action either requires an account which doesn't use MFA (2FA) or you'll need to use the UI automation module to automate the 2FA component (i.e. the one-time password authentication popup). Alternatively, use the action 'Connect to Azure AD with certificate'.",
        "parameters": [
          {
            "in": "body",
            "name": "OpenAzureADv2PowerShellRunspace",
            "description": "Inputs for IA-Connect OpenAzureADv2PowerShellRunspace action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Username": {
                  "type": "string",
                  "title": "Username",
                  "description": "The username of the account to use when running Azure AD v2 PowerShell commands."
                },
                "Password": {
                  "type": "string",
                  "format": "password",
                  "title": "Password",
                  "description": "The password of the account to use when running Azure AD v2 PowerShell commands."
                },
                "TenantId": {
                  "type": "string",
                  "title": "Azure Tenant Id",
                  "description": "The optional Azure Tenant Id to connect to. If this is left blank, the default Tenant associated with the supplied user account is used.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Username",
                "Password",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "OpenAzureADv2PowerShellRunspaceResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "OpenAzureADv2PowerShellRunspace"
      }
    },
    "/PowerShellAzureADv2/OpenAzureADv2PowerShellRunspaceWithCertificate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Connect to Azure AD with certificate",
        "description": "Connects IA-Connect to Azure AD using the Azure AD v2 PowerShell modules. This action (or 'Connect to Azure AD with credentials') must be issued before running any other Azure AD v2 actions. This action requires an Azure Service Principal and Azure AD app registration with certificate to be setup in Azure AD before it will work, but has the advantage of not requiring MFA (2FA).",
        "parameters": [
          {
            "in": "body",
            "name": "OpenAzureADv2PowerShellRunspaceWithCertificate",
            "description": "Inputs for IA-Connect OpenAzureADv2PowerShellRunspaceWithCertificate action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ApplicationId": {
                  "type": "string",
                  "title": "Azure AD app registration Id",
                  "description": "The application Id of the Azure AD app registration which contains the certificate and has the required roles in Azure AD to perform the automation actions. This Azure AD app registration must have previously been setup by an administrator."
                },
                "CertificateThumbprint": {
                  "type": "string",
                  "title": "Certificate thumbprint",
                  "description": "The thumbprint of the certificate used for authentication. This certificate must have been previously created and exist both on the computer where IA-Connect is performing the automation actions and in the Azure AD app registration."
                },
                "TenantId": {
                  "type": "string",
                  "title": "Azure Tenant Id",
                  "description": "Azure Tenant Id to connect to. This must be specified when using certificates to authenticate."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ApplicationId",
                "CertificateThumbprint",
                "TenantId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "OpenAzureADv2PowerShellRunspaceWithCertificateResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "OpenAzureADv2PowerShellRunspaceWithCertificate"
      }
    },
    "/PowerShellAzureADv2/IsAzureADv2PowerShellRunspaceOpen": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Is connected to Azure AD",
        "description": "Reports if IA-Connect is connected to Azure using the Azure AD v2 PowerShell modules. Use one of the 'Connect to Azure AD' actions to connect.",
        "parameters": [
          {
            "in": "body",
            "name": "IsAzureADv2PowerShellRunspaceOpen",
            "description": "Inputs for IA-Connect IsAzureADv2PowerShellRunspaceOpen action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AzureADv2RunspaceOpen": {
                  "type": "boolean",
                  "title": "Azure AD v2 PowerShell runspace is open",
                  "description": "Set to true if IA-Connect is connected to Azure using the Azure AD v2 PowerShell modules."
                }
              }
            }
          }
        },
        "operationId": "IsAzureADv2PowerShellRunspaceOpen"
      }
    },
    "/PowerShellAzureADv2/RunAzureADv2PowerShellAutomationScript": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Run Azure AD PowerShell script",
        "description": "Runs a PowerShell script in the Azure AD v2 runspace in the session where the IA-Connect Agent is running, where the script contents are passed to the IA-Connect Agent as part of the command. This is the recommended action for running your own custom Azure AD v2 PowerShell code.",
        "parameters": [
          {
            "in": "body",
            "name": "RunAzureADv2PowerShellAutomationScript",
            "description": "Inputs for IA-Connect RunAzureADv2PowerShellAutomationScript action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellScriptContents": {
                  "type": "string",
                  "title": "PowerShell script contents",
                  "description": "The contents of the PowerShell script to execute in the Azure AD v2 runspace. IA-Connect will execute this script as-is by passing directly to the PowerShell automation engine. No PowerShell script is actually created on-disk."
                },
                "IsNoResultAnError": {
                  "type": "boolean",
                  "default": false,
                  "title": "Is no result an error",
                  "description": "If no data is returned by the PowerShell command, does this suggest an error?"
                },
                "ReturnComplexTypes": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return complex types",
                  "description": "Should properties which have complex types (as opposed to a simple type such as System.String or System.Boolean or System.Date) be returned?"
                },
                "ReturnBooleanAsBoolean": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return boolean as boolean",
                  "description": "Should Boolean properties be returned as a Booleans? If false, these are returned as strings."
                },
                "ReturnNumericAsDecimal": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return numeric as decimal",
                  "description": "Should Numeric properties be returned as a Numerics? If false, these are returned as strings."
                },
                "ReturnDateAsDate": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return date as date",
                  "description": "Should Date properties be returned as a Dates? If false, these are returned as strings."
                },
                "PropertiesToReturnAsCollectionJSON": {
                  "type": "string",
                  "title": "Properties to return as collection",
                  "description": "Some properties (in the PowerShell return results) are collections of values (e.g. an array or table) and by default are not returned in the IA-Connect PowerShell response. This option allows you to specify which properties IA-Connect should attempt to return as a collection and can be entered in JSON or CSV format. For example: To return the EmailAddresses and MemberOf array properties, enter [{\"PropertyName\": \"EmailAddresses\"}, {\"PropertyName\": \"MemberOf\"}] (JSON format) or EmailAddresses,MemberOf (CSV format)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "PowerShellScriptContents",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "PowerShell output JSON",
                  "description": "The output of the PowerShell script, formatted as JSON."
                }
              }
            }
          }
        },
        "operationId": "RunAzureADv2PowerShellAutomationScript"
      }
    },
    "/PowerShellAzureADv2/CloseAzureADv2PowerShellRunspace": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Disconnect from Azure AD",
        "description": "Disconnects IA-Connect from Azure using the Azure AD v2 PowerShell modules (connected using one of the 'Connect to Azure AD' actions). You will not be able to issue Azure AD v2 actions again until you reconnect.",
        "parameters": [
          {
            "in": "body",
            "name": "CloseAzureADv2PowerShellRunspace",
            "description": "Inputs for IA-Connect CloseAzureADv2PowerShellRunspace action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "CloseAzureADv2PowerShellRunspaceResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "CloseAzureADv2PowerShellRunspace"
      }
    },
    "/PowerShellAzureADv2/AzureADv2GetAzureADUsers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Azure AD users",
        "description": "Returns the details of users in Azure Active Directory (known as Azure AD or AAD), using the Azure AD v2 PowerShell modules. You can search by object Id or using a filter. An object Id search should return 0 or 1 results. A filter search could return 0 or more results.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2GetAzureADUsers",
            "description": "Inputs for IA-Connect AzureADv2GetAzureADUsers action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ObjectId": {
                  "type": "string",
                  "title": "User object Id or UPN",
                  "description": "The object Id of an Azure Active Directory user to search for. You can specify a user by UPN (e.g. user@mydomain.onmicrosoft.com) or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "FilterPropertyName": {
                  "type": "string",
                  "title": "Filter property name",
                  "description": "As an alternative to searching by user object Id, provide the name of the property to filter the users by. Common property names are: UserPrincipalName and DisplayName. If using a filter, you also need to populate the 'Filter property comparison' and 'Filter property value' fields."
                },
                "FilterPropertyComparison": {
                  "type": "string",
                  "default": "Equals",
                  "title": "Filter property comparison",
                  "description": "If searching by filter as an alternative to searching by user object Id, enter the type of comparison here (for example: If the filter property name is 'UserPrincipalName', the comparison could be 'equals' or 'starts with'). If you wish to enter a raw filter (in ODATA 3 format), choose a comparison type of 'Raw: Enter filter manually' and enter the full filter in the 'Filter property value' field.",
                  "enum": [
                    "Equals",
                    "Not equals",
                    "Starts with",
                    "Raw"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "Equals",
                      "displayName": "Equals: Exact match"
                    },
                    {
                      "value": "Not equals",
                      "displayName": "Not equals: Not equals exact match"
                    },
                    {
                      "value": "Starts with",
                      "displayName": "Starts with: String starts with"
                    },
                    {
                      "value": "Raw",
                      "displayName": "Raw: Enter filter manually"
                    }
                  ]
                },
                "FilterPropertyValue": {
                  "type": "string",
                  "title": "Filter property value",
                  "description": "If searching by filter as an alternative to searching by user object Id, enter the value of the filter property here (for example: If the filter property name is 'UserPrincipalName', the filter property value might be 'JohnDoe@mydomain.com')."
                },
                "NoResultIsAnException": {
                  "type": "boolean",
                  "default": false,
                  "title": "Is no result an exception",
                  "description": "Set to true to raise an exception if no mailboxes are found. Set to false to simply report a count of 0 if no mailboxes are found. Note the 'false' option may not work when used with Identity in non-English languages so consider searching using filters instead.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Search results JSON",
                  "description": "A list of users which match the search filter, in JSON format."
                },
                "CountOfUsersFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of users found",
                  "description": "The number of users found which match the search filter."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2GetAzureADUsers"
      }
    },
    "/PowerShellAzureADv2/AzureADv2GetAzureADUserGroupMembership": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Azure AD user group membership",
        "description": "Returns a list of Azure Active Directory groups the specified user is a member of, using the Azure AD v2 PowerShell modules.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2GetAzureADUserGroupMembership",
            "description": "Inputs for IA-Connect AzureADv2GetAzureADUserGroupMembership action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ObjectId": {
                  "type": "string",
                  "title": "User object Id or UPN",
                  "description": "The Id of an Azure Active Directory user. You can specify a user by UPN (e.g. user@mydomain.onmicrosoft.com) or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ObjectId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Group membership JSON",
                  "description": "The list of Azure AD groups the user is a member of, in JSON format."
                },
                "CountOfGroupsFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of groups found",
                  "description": "The number of Azure AD groups the user is a member of."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2GetAzureADUserGroupMembership"
      }
    },
    "/PowerShellAzureADv2/AzureADv2IsUserInAzureADUserGroup": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Is user in Azure AD user group",
        "description": "Returns whether a user is a member of an Azure Active Directory group, using the Azure AD v2 PowerShell modules.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2IsUserInAzureADUserGroup",
            "description": "Inputs for IA-Connect AzureADv2IsUserInAzureADUserGroup action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ObjectId": {
                  "type": "string",
                  "title": "User object Id or UPN",
                  "description": "The Id of an Azure Active Directory user. You can specify a user by UPN (e.g. user@mydomain.onmicrosoft.com) or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "GroupObjectId": {
                  "type": "string",
                  "title": "Group object Id or display name",
                  "description": "The Id or display name of an Azure Active Directory group. You can specify a group by Display Name (e.g. \"Finance users\") or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ObjectId",
                "GroupObjectId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "UserIsInGroup": {
                  "type": "boolean",
                  "title": "User is in group",
                  "description": "Whether the user is a member of the Azure AD group."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2IsUserInAzureADUserGroup"
      }
    },
    "/PowerShellAzureADv2/AzureADv2AddUserToGroup": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add Azure AD user to group",
        "description": "Add an Azure Active Directory user (or other object) to an existing Azure Active Directory group.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2AddUserToGroup",
            "description": "Inputs for IA-Connect AzureADv2AddUserToGroup action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserObjectId": {
                  "type": "string",
                  "title": "User object Id or UPN",
                  "description": "The Id of an Azure Active Directory user. You can specify a user by UPN (e.g. user@mydomain.onmicrosoft.com) or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "GroupObjectId": {
                  "type": "string",
                  "title": "Group object Id or display name",
                  "description": "The Id or display name of an Azure Active Directory group. You can specify a group by Display Name (e.g. \"Finance users\") or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "CheckUserGroupMembershipsFirst": {
                  "type": "boolean",
                  "default": false,
                  "title": "Check user group memberships first",
                  "description": "If set to true, IA-Connect will check the user's group memberships before attempting to add them to the group. If the user is already a member of the group, IA-Connect will simply report success without having to do anything. If set to false, IA-Connect will immediately add the user to the group without checking, resulting in an error if the user is already in the group.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserObjectId",
                "GroupObjectId",
                "CheckUserGroupMembershipsFirst",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AzureADv2AddUserToGroupResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2AddUserToGroup"
      }
    },
    "/PowerShellAzureADv2/AzureADv2RemoveUserFromGroup": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove Azure AD user from group",
        "description": "Removes an Azure Active Directory user (or other object) from an Azure Active Directory group.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2RemoveUserFromGroup",
            "description": "Inputs for IA-Connect AzureADv2RemoveUserFromGroup action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserObjectId": {
                  "type": "string",
                  "title": "User object Id or UPN",
                  "description": "The Id of an Azure Active Directory user. You can specify a user by UPN (e.g. user@mydomain.onmicrosoft.com) or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "GroupObjectId": {
                  "type": "string",
                  "title": "Group object Id or display name",
                  "description": "The Id or display name of an Azure Active Directory group. You can specify a group by Display Name (e.g. \"Finance users\") or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "CheckUserGroupMembershipsFirst": {
                  "type": "boolean",
                  "default": false,
                  "title": "Check user group memberships first",
                  "description": "If set to true, IA-Connect will check the user's group memberships before attempting to remove them from the group. If the user is not a member of the group, IA-Connect will simply report success without having to do anything. If set to false, IA-Connect will immediately remove the user from the group without checking, resulting in an error if the user is not in the group.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserObjectId",
                "GroupObjectId",
                "CheckUserGroupMembershipsFirst",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AzureADv2RemoveUserFromGroupResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2RemoveUserFromGroup"
      }
    },
    "/PowerShellAzureADv2/AzureADv2RemoveUserFromAllGroups": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove Azure AD user from all groups",
        "description": "Removes an Azure Active Directory user (or other object) from all of the Azure Active Directory groups they are a member of.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2RemoveUserFromAllGroups",
            "description": "Inputs for IA-Connect AzureADv2RemoveUserFromAllGroups action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "UserObjectId": {
                  "type": "string",
                  "title": "User object Id or UPN",
                  "description": "The Id of an Azure Active Directory user. You can specify a user by UPN (e.g. user@mydomain.onmicrosoft.com) or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "ExceptionIfAnyGroupsFailToRemove": {
                  "type": "boolean",
                  "default": false,
                  "title": "Exception if any groups fail to remove",
                  "description": "If set to true: An exception (failure) will be raised if any single group fails to remove. Some groups (for example: Office 365 groups) might not remove so an exception could be common. If set to false and no other exception is raised, this action will report how many groups were deleted successfully and how many failed to delete."
                },
                "ExceptionIfAllGroupsFailToRemove": {
                  "type": "boolean",
                  "default": false,
                  "title": "Exception if all groups fail to remove",
                  "description": "If set to true: An exception (failure) will be raised if all groups fail to remove (i.e. no successes and some failures). If set to false and no other exception is raised, this action will report how many groups were deleted successfully and how many failed to delete."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "UserObjectId",
                "ExceptionIfAnyGroupsFailToRemove",
                "ExceptionIfAllGroupsFailToRemove",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AzureADGroupsRemovedSuccessfully": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Azure AD groups removed successfully",
                  "description": "The number of Azure AD groups the user was successfully removed from."
                },
                "AzureADGroupsFailedToRemove": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Azure AD groups failed to remove",
                  "description": "The number of Azure AD groups that the user failed to remove from."
                },
                "RemoveAzureADGroupsErrorMessage": {
                  "type": "string",
                  "title": "Remove Azure AD groups master error message",
                  "description": "If the user failed to remove from some of the Azure AD groups, this error message provides details of the problem."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2RemoveUserFromAllGroups"
      }
    },
    "/PowerShellAzureADv2/AzureADv2GetAzureADLicenseSKUs": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Azure AD license SKUs",
        "description": "Returns a list of Azure Active Directory license Stock Keeping Units (SKUs) which the connected Azure AD is subscribed to, using the Azure AD v2 PowerShell modules.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2GetAzureADLicenseSKUs",
            "description": "Inputs for IA-Connect AzureADv2GetAzureADLicenseSKUs action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "LicenseSKUJSONOutput": {
                  "type": "string",
                  "title": "License SKU JSON",
                  "description": "The list of subscribed Stock Keeping Units, in JSON format."
                },
                "CountOfSKUsFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of SKUs found",
                  "description": "The number of Azure AD subscribed Stock Keeping Units (SKUs)."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2GetAzureADLicenseSKUs"
      }
    },
    "/PowerShellAzureADv2/AzureADv2SetAzureADUserLicense": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set Azure AD user license",
        "description": "Adds or removes an Azure AD user license (SKU), using the Azure AD v2 PowerShell modules.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2SetAzureADUserLicense",
            "description": "Inputs for IA-Connect AzureADv2SetAzureADUserLicense action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ObjectId": {
                  "type": "string",
                  "title": "User object Id or UPN",
                  "description": "The Id of an Azure Active Directory user. You can specify a user by UPN (e.g. user@mydomain.onmicrosoft.com) or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "LicenseToAdd": {
                  "type": "string",
                  "title": "License to add",
                  "description": "A single Azure AD license SKU to add. This can be entered as a SKU Id (a GUID) or a SKU part number (a word). For example: TEAMS_EXPLORATORY. If you wish to enable multiple licenses, call this action once per license."
                },
                "LicensePlansChoice": {
                  "type": "string",
                  "default": "All",
                  "title": "License plans to add",
                  "description": "Some licenses have plans: If you wish to enable all plans (or don't know), choose 'All'. If you wish to only enable certain named plans, choose 'Opt-in' and enter the plans to enable in the 'License plans CSV' field. If you wish to enable all plans except those you specify, choose 'Opt-out' and enter the plans to disable in the 'License plans CSV' field.",
                  "enum": [
                    "All",
                    "Opt-in",
                    "Opt-out"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "All",
                      "displayName": "All: Enable all plans"
                    },
                    {
                      "value": "Opt-in",
                      "displayName": "Opt-in: Specify plans to enable"
                    },
                    {
                      "value": "Opt-out",
                      "displayName": "Opt-out: Specify plans to disable"
                    }
                  ]
                },
                "LicensePlansCSV": {
                  "type": "string",
                  "title": "License plans",
                  "description": "A comma separated list (CSV) of the license plans (a component the the license) to enable or disable. If you leave this field blank, all license plans will be enabled. This can be entered as a SKU Id (a GUID) or a SKU part number (a word). For example: YAMMER_ENTERPRISE,SHAREPOINTSTANDARD."
                },
                "LicensesToRemoveCSV": {
                  "type": "string",
                  "title": "Licenses to remove",
                  "description": "A comma separated list of Azure AD license SKUs to remove. This can be entered as a comma separated list of SKU Id (a GUID) or SKU part number (a word). For example: TEAMS_EXPLORATORY,FLOW_FREE."
                },
                "UsageLocation": {
                  "type": "string",
                  "title": "Usage location",
                  "description": "A two letter country code (ISO 3166). Required for users that will be assigned licenses due to a legal requirement. For example: US, JP, GB. See https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes. If you don't set this value, the user must already have their usage location set or the license will fail to apply."
                },
                "LocalScope": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "PowerShell local scope",
                  "description": "Should the underlying Azure AD v2 PowerShell command be run in the local scope. By default this is not set and hence PowerShell falls back to defaults.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ObjectId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AzureADv2SetAzureADUserLicenseResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2SetAzureADUserLicense"
      }
    },
    "/PowerShellAzureADv2/AzureADv2GetAzureADUserLicenses": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Azure AD user licenses",
        "description": "Retrieves a list of licenses (SKU) assigned to a Azure AD user, using the Azure AD v2 PowerShell modules.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2GetAzureADUserLicenses",
            "description": "Inputs for IA-Connect AzureADv2GetAzureADUserLicenses action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ObjectId": {
                  "type": "string",
                  "title": "User object Id or UPN",
                  "description": "The Id of an Azure Active Directory user. You can specify a user by UPN (e.g. user@mydomain.onmicrosoft.com) or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ObjectId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "UserLicenseSKUJSONOutput": {
                  "type": "string",
                  "title": "User license SKU JSON",
                  "description": "The list of Azure AD license SKUs assigned to the user, in JSON format."
                },
                "CountOfUserLicenseSKUsFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of user license SKUs found",
                  "description": "The number of Azure AD license SKUs assigned to the user."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2GetAzureADUserLicenses"
      }
    },
    "/PowerShellAzureADv2/AzureADv2GetAzureADUserLicenseServicePlans": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Azure AD user license service plans",
        "description": "Retrieves a list of licenses plans assigned to a specified Azure AD user license (SKU), using the Azure AD v2 PowerShell modules. For example: If the user has the FLOW_FREE license assigned, this will allow you to view which service plans they have provisioned to that license.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2GetAzureADUserLicenseServicePlans",
            "description": "Inputs for IA-Connect AzureADv2GetAzureADUserLicenseServicePlans action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ObjectId": {
                  "type": "string",
                  "title": "User object Id or UPN",
                  "description": "The Id of an Azure Active Directory user. You can specify a user by UPN (e.g. user@mydomain.onmicrosoft.com) or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "LicenseSKUPartNumber": {
                  "type": "string",
                  "title": "License SKU part number",
                  "description": "The part number of the license SKU. For example: FLOW_FREE or SPE_E3."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ObjectId",
                "LicenseSKUPartNumber",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "UserLicenseSKUServicePlansJSONOutput": {
                  "type": "string",
                  "title": "User license SKU service plans JSON",
                  "description": "The list of service plans assigned to the specified Azure AD license SKU assigned to the user, in JSON format."
                },
                "CountOfUserLicenseSKUServicePlansFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of license SKU service plans found",
                  "description": "The number of Azure AD service plans assigned to the specified license SKU assigned to the user."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2GetAzureADUserLicenseServicePlans"
      }
    },
    "/PowerShellAzureADv2/AzureADv2RemoveAllAzureADUserLicense": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove all Azure AD user licenses",
        "description": "Removes all Azure AD user license (SKU) assigned to a user, using the Azure AD v2 PowerShell modules.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2RemoveAllAzureADUserLicense",
            "description": "Inputs for IA-Connect AzureADv2RemoveAllAzureADUserLicense action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ObjectId": {
                  "type": "string",
                  "title": "User object Id or UPN",
                  "description": "The Id of an Azure Active Directory user. You can specify a user by UPN (e.g. user@mydomain.onmicrosoft.com) or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ObjectId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AzureADv2RemoveAllAzureADUserLicenseResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2RemoveAllAzureADUserLicense"
      }
    },
    "/PowerShellAzureADv2/AzureADv2SetAzureADUser": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Modify Azure AD user properties",
        "description": "Modify common properties of an Azure Active Directory user. You can only assign values to properties, not set them to blank.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2SetAzureADUser",
            "description": "Inputs for IA-Connect AzureADv2SetAzureADUser action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ObjectId": {
                  "type": "string",
                  "title": "User object Id or UPN",
                  "description": "The Id of an Azure Active Directory user. You can specify a user by UPN (e.g. user@mydomain.onmicrosoft.com) or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "FirstName": {
                  "type": "string",
                  "title": "First name",
                  "description": "The user's first name."
                },
                "LastName": {
                  "type": "string",
                  "title": "Last name",
                  "description": "The user's family name / last name / surname."
                },
                "DisplayName": {
                  "type": "string",
                  "title": "Display name",
                  "description": "The full display name for this user."
                },
                "City": {
                  "type": "string",
                  "title": "City",
                  "description": "The name of the City the user lives in, or where their office is located."
                },
                "CompanyName": {
                  "type": "string",
                  "title": "Company name",
                  "description": "The name of the company the user works for."
                },
                "Country": {
                  "type": "string",
                  "title": "Country or region",
                  "description": "The Country or Region the user lives in, or where their office is located."
                },
                "Department": {
                  "type": "string",
                  "title": "Department",
                  "description": "The name of the department the user works for within the Company."
                },
                "JobTitle": {
                  "type": "string",
                  "title": "Job title",
                  "description": "The user's job title."
                },
                "MobilePhone": {
                  "type": "string",
                  "title": "Mobile phone number",
                  "description": "The user's mobile phone number."
                },
                "Office": {
                  "type": "string",
                  "title": "Office",
                  "description": "The name of the office where the user works."
                },
                "PhoneNumber": {
                  "type": "string",
                  "title": "Telephone number",
                  "description": "The user's telephone number."
                },
                "PostalCode": {
                  "type": "string",
                  "title": "ZIP or postal code",
                  "description": "The ZIP or postal code where the user lives, or the office they work in."
                },
                "PreferredLanguage": {
                  "type": "string",
                  "title": "Preferred language",
                  "description": "The user's preferred language. This is typically entered as a two letter language code (ISO 639-1), followed by a dash, followed by a two letter upper-case country code (ISO 3166). For example: en-US, en-GB, fr-FR, ja-JP."
                },
                "State": {
                  "type": "string",
                  "title": "State or province",
                  "description": "The state, province or county the user lives in, or where their office located."
                },
                "StreetAddress": {
                  "type": "string",
                  "title": "Street address",
                  "description": "The street address where the user lives, or their office street address."
                },
                "UsageLocation": {
                  "type": "string",
                  "title": "Usage location",
                  "description": "A two letter country code (ISO 3166). Required for users that will be assigned licenses due to a legal requirement. For example: US, JP, GB. See https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ObjectId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AzureADv2SetAzureADUserResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2SetAzureADUser"
      }
    },
    "/PowerShellAzureADv2/AzureADv2SetAzureADUserManager": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set Azure AD user's manager",
        "description": "Set an Azure Active Directory user's mananger.",
        "parameters": [
          {
            "in": "body",
            "name": "AzureADv2SetAzureADUserManager",
            "description": "Inputs for IA-Connect AzureADv2SetAzureADUserManager action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ObjectId": {
                  "type": "string",
                  "title": "User object Id or UPN",
                  "description": "The Id of an Azure Active Directory user. You can specify a user by UPN (e.g. user@mydomain.onmicrosoft.com) or ObjectId (e.g. 01234567-0123-0123-0123-0123456789ab)."
                },
                "Manager": {
                  "type": "string",
                  "title": "Manager",
                  "description": "To add a manager, specify the user's manager Object Id (e.g. a7199172-4c2c-41e5-bed8-bd7a3a1303a5) or UPN (e.g. MyBoss@MyDomain.com). To remove the user's manager, set this field to blank."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ObjectId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AzureADv2SetAzureADUserManagerResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "AzureADv2SetAzureADUserManager"
      }
    },
    "/PowerShellAutomation/OpenO365PowerShellRunspace": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Connect to Office 365 with credentials",
        "description": "Connects IA-Connect to Office 365 using the Office 365 PowerShell modules. This action (or 'Connect to Office 365 with certificate') must be issued before running any other Office 365 actions. This action either requires an account which doesn't require MFA (2FA) or you'll need to use the UI automation module to automate the 2FA component (i.e. the one-time password authentication popup). Alternatively, use the action 'Connect to Office 365 with certificate'.",
        "parameters": [
          {
            "in": "body",
            "name": "OpenO365PowerShellRunspace",
            "description": "Inputs for IA-Connect OpenO365PowerShellRunspace action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Office365Username": {
                  "type": "string",
                  "title": "Username",
                  "description": "The username of the account to use when running Office 365 PowerShell commands."
                },
                "Office365Password": {
                  "type": "string",
                  "format": "password",
                  "title": "Password",
                  "description": "The password of the account to use when running Office 365 PowerShell commands."
                },
                "ExchangeURL": {
                  "type": "string",
                  "title": "Exchange URL",
                  "description": "The optional URL of the Microsoft Exchange online server to connect to. Only use this if you have a custom URL."
                },
                "ConnectionMethod": {
                  "type": "string",
                  "default": "EXO V1 local",
                  "title": "Connection method",
                  "description": "Which method should be used to connect to Microsoft Exchange. Both 'EXO V1 local' and 'EXO V1 remote' use the original Microsoft Exchange Online PowerShell which runs on the computer running the IA-Connect Agent and does not require any additional PowerShell modules, but will eventually be deprecated. 'EXO V1 local' imports the remote Exchange runspace locally and runs commands locally. 'EXO V1 remote' runs directly in the remote Exchange runspace and cannot run generic PowerShell scripts due to security restrictions. 'EXO V2' uses the newer Microsoft Exchange Online PowerShell v2 module which runs on the computer running the IA-Connect Agent and requires the 'ExchangeOnlineManagement' v2 PowerShell module installed.",
                  "enum": [
                    "EXO V1 local",
                    "EXO V1 remote",
                    "EXO V2"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "EXO V1 local",
                      "displayName": "EXO V1 local: Remote Exchange Online is imported locally"
                    },
                    {
                      "value": "EXO V1 remote",
                      "displayName": "EXO V1 remote: Commands run in remote Exchange Online"
                    },
                    {
                      "value": "EXO V2",
                      "displayName": "EXO V2: Exchange Online PowerShell v2"
                    }
                  ]
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Office365Username",
                "Office365Password",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "OpenO365PowerShellRunspaceResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "OpenO365PowerShellRunspace"
      }
    },
    "/PowerShellAutomation/OpenO365PowerShellRunspaceWithCertificate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Connect to Office 365 with certificate",
        "description": "Connects IA-Connect to Office 365 using the Office 365 PowerShell modules. This action (or 'Connect to Office 365 with credentials') must be issued before running any other Office 365 actions. This action requires an Azure AD app registration with certificate and the correct roles to be setup in Azure AD before it will work, but has the advantage of not requiring MFA (2FA).",
        "parameters": [
          {
            "in": "body",
            "name": "OpenO365PowerShellRunspaceWithCertificate",
            "description": "Inputs for IA-Connect OpenO365PowerShellRunspaceWithCertificate action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ApplicationId": {
                  "type": "string",
                  "title": "Azure AD app registration application Id",
                  "description": "The application Id of the Azure AD app registration which contains the certificate and has the required roles in Azure AD to perform the automation actions. This Azure AD app registration must have previously been setup by an administrator."
                },
                "CertificateThumbprint": {
                  "type": "string",
                  "title": "Certificate thumbprint",
                  "description": "The thumbprint of the certificate used for authentication. This certificate must have been previously created and exist both on the computer where IA-Connect is performing the automation actions and in the Azure AD app registration."
                },
                "Organization": {
                  "type": "string",
                  "title": "Organization",
                  "description": "The Organisation to use for authentication. For example: mytestenvironment.onmicrosoft.com."
                },
                "ExchangeURL": {
                  "type": "string",
                  "title": "Exchange URL",
                  "description": "The optional URL of the Microsoft Exchange online server to connect to. Only use this if you have a custom URL."
                },
                "ConnectionMethod": {
                  "type": "string",
                  "default": "EXO V2",
                  "title": "Connection method",
                  "description": "Which method should be used to connect to Microsoft Exchange. 'EXO V1' is the original Microsoft Exchange Online PowerShell and doesn't support certificates (and hence isn't available as an option). 'EXO V2' uses the newer Microsoft Exchange Online PowerShell v2 module which runs on the computer running the IA-Connect Agent and requires the 'ExchangeOnlineManagement' v2 PowerShell module installed.",
                  "enum": [
                    "EXO V2"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "EXO V2",
                      "displayName": "EXO V2: Exchange Online PowerShell v2"
                    }
                  ]
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ApplicationId",
                "CertificateThumbprint",
                "Organization",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "OpenO365PowerShellRunspaceWithCertificateResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "OpenO365PowerShellRunspaceWithCertificate"
      }
    },
    "/PowerShellAutomation/IsO365PowerShellRunspaceOpen": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Is connected to Office 365",
        "description": "Reports if IA-Connect is connected to Office 365 using the Office 365 PowerShell modules. Use the action 'Connect to Office 365' to connect.",
        "parameters": [
          {
            "in": "body",
            "name": "IsO365PowerShellRunspaceOpen",
            "description": "Inputs for IA-Connect IsO365PowerShellRunspaceOpen action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "O365RunspaceOpen": {
                  "type": "boolean",
                  "title": "Connected to Office 365",
                  "description": "Set to true if IA-Connect is connected to Office 365 using the Office 365 PowerShell modules."
                },
                "Office365ConnectionMethod": {
                  "type": "string",
                  "title": "Office 365 connection method",
                  "description": "Holds the current Office 365 connection method: EXOV1 or EXOV2."
                }
              }
            }
          }
        },
        "operationId": "IsO365PowerShellRunspaceOpen"
      }
    },
    "/PowerShellAutomation/RunO365PowerShellAutomationScript": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Run Office 365 PowerShell script",
        "description": "Runs a PowerShell script in the Office 365 runspace in the session where the IA-Connect Agent is running, where the script contents are passed to the IA-Connect Agent as part of the command. Due to Office 365 PowerShell security restrictions, this action is likely to be blocked.",
        "parameters": [
          {
            "in": "body",
            "name": "RunO365PowerShellAutomationScript",
            "description": "Inputs for IA-Connect RunO365PowerShellAutomationScript action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellScriptContents": {
                  "type": "string",
                  "title": "PowerShell script contents",
                  "description": "The contents of the PowerShell script to execute in the Office 365 runspace. IA-Connect will execute this script as-is by passing directly to the PowerShell automation engine. No PowerShell script is actually created on-disk."
                },
                "IsNoResultAnError": {
                  "type": "boolean",
                  "default": false,
                  "title": "Is no result an error",
                  "description": "If no data is returned by the PowerShell command, does this suggest an error?"
                },
                "ReturnComplexTypes": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return complex types",
                  "description": "Should properties which have complex types (as opposed to a simple type such as System.String or System.Boolean or System.Date) be returned?"
                },
                "ReturnBooleanAsBoolean": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return boolean as boolean",
                  "description": "Should Boolean properties be returned as a Booleans? If false, these are returned as strings."
                },
                "ReturnNumericAsDecimal": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return numeric as decimal",
                  "description": "Should Numeric properties be returned as a Numerics? If false, these are returned as strings."
                },
                "ReturnDateAsDate": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return date as date",
                  "description": "Should Date properties be returned as a Dates? If false, these are returned as strings."
                },
                "PropertiesToReturnAsCollectionJSON": {
                  "type": "string",
                  "title": "Properties to return as collection",
                  "description": "Some properties (in the PowerShell return results) are collections of values (e.g. an array or table) and by default are not returned in the IA-Connect PowerShell response. This option allows you to specify which properties IA-Connect should attempt to return as a collection and can be entered in JSON or CSV format. For example: To return the EmailAddresses and MemberOf array properties, enter [{\"PropertyName\": \"EmailAddresses\"}, {\"PropertyName\": \"MemberOf\"}] (JSON format) or EmailAddresses,MemberOf (CSV format)."
                },
                "LocalScope": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "PowerShell local scope",
                  "description": "Should the underlying Office 365 PowerShell command be run in the local scope. By default this is not set and hence PowerShell falls back to defaults.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "PowerShellScriptContents",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "PowerShell output JSON",
                  "description": "The output of the PowerShell script, formatted as JSON."
                }
              }
            }
          }
        },
        "operationId": "RunO365PowerShellAutomationScript"
      }
    },
    "/PowerShellAutomation/CloseO365PowerShellRunspace": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Disconnect from Office 365",
        "description": "Disconnects IA-Connect from Office 365 using the Office 365 PowerShell modules (connected using the action 'Connect to Office 365'). You will not be able to issue Office 365 PowerShell actions again until you reconnect.",
        "parameters": [
          {
            "in": "body",
            "name": "CloseO365PowerShellRunspace",
            "description": "Inputs for IA-Connect CloseO365PowerShellRunspace action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "CloseO365PowerShellRunspaceResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "CloseO365PowerShellRunspace"
      }
    },
    "/PowerShellAutomation/O365GetO365Mailbox": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Office 365 mailbox",
        "description": "Returns the properties of the specified Microsoft Exchange Online or Office 365 mailbox.",
        "parameters": [
          {
            "in": "body",
            "name": "O365GetO365Mailbox",
            "description": "Inputs for IA-Connect O365GetO365Mailbox action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The Id of a Microsoft Exchange Online or Office 365 mailbox. You can specify a mailbox by Name, Alias, Object Id (e.g. 01234567-0123-0123-0123-0123456789ab), Email address, GUID, SAMAccountName (even users in non Active Directory connected environments have a SAMAccountName) or User Principal Name (UPN)."
                },
                "FilterPropertyName": {
                  "type": "string",
                  "title": "Filter property name",
                  "description": "As an alternative to searching by identity, provide the name of the property to filter the mailboxes by. Common property names are: Name, Alias, PrimarySMTPAddress, DisplayName, SamAccountName. If using a filter, you also need to populate the 'Filter property comparison' and 'Filter property value' fields."
                },
                "FilterPropertyComparison": {
                  "type": "string",
                  "default": "Equals",
                  "title": "Filter property comparison",
                  "description": "If searching by filter as an alternative to searching by identity, enter the type of comparison here (for example: If the filter property name is 'Alias', the comparison could be 'equals' or 'like'). If you wish to enter a raw filter (in OPATH format), choose a comparison type of 'Raw: Enter filter manually' and enter the full filter in the 'Filter property value' field.",
                  "enum": [
                    "Equals",
                    "Not equals",
                    "Like",
                    "Not like",
                    "Greater than",
                    "Less than",
                    "Raw"
                  ],
                  "x-ms-enum-values": [
                    {
                      "value": "Equals",
                      "displayName": "Equals: Exact match"
                    },
                    {
                      "value": "Not equals",
                      "displayName": "Not equals: Not equals exact match"
                    },
                    {
                      "value": "Like",
                      "displayName": "Like: Equals with wildcards"
                    },
                    {
                      "value": "Not like",
                      "displayName": "Not like: Not equals with wildcards"
                    },
                    {
                      "value": "Greater than",
                      "displayName": "Greater than: Numeric comparison"
                    },
                    {
                      "value": "Less than",
                      "displayName": "Less than: Numeric comparison"
                    },
                    {
                      "value": "Raw",
                      "displayName": "Raw: Enter filter manually"
                    }
                  ]
                },
                "FilterPropertyValue": {
                  "type": "string",
                  "title": "Filter property value",
                  "description": "If searching by filter as an alternative to searching by identity, enter the value of the filter property here (for example: If the filter property name is 'Alias', the filter property value might be 'JohnDoe')."
                },
                "NoResultIsAnException": {
                  "type": "boolean",
                  "default": false,
                  "title": "Is no result an exception",
                  "description": "Set to true to raise an exception if no mailboxes are found. Set to false to simply report a count of 0 if no mailboxes are found. Note the 'false' option may not work when used with Identity in non-English languages so consider searching using filters instead.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Search results JSON",
                  "description": "A list of mailboxes (and their properties) which match the search identity, in JSON format."
                },
                "CountOfMailboxesFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of mailboxes found",
                  "description": "The number of mailboxes found which match the search identity. Usually 1."
                }
              }
            }
          }
        },
        "operationId": "O365GetO365Mailbox"
      }
    },
    "/PowerShellAutomation/O365AddMailboxPermission": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add Office 365 mailbox permission to user",
        "description": "Assign mailbox permissions to a specifed mailbox user, user or security group.",
        "parameters": [
          {
            "in": "body",
            "name": "O365AddMailboxPermission",
            "description": "Inputs for IA-Connect O365AddMailboxPermission action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The Id of a Microsoft Exchange Online or Office 365 mailbox. You can specify a mailbox by Name, Alias, Object Id (e.g. 01234567-0123-0123-0123-0123456789ab), Email address, GUID, SAMAccountName (even users in non Active Directory connected environments have a SAMAccountName) or User Principal Name (UPN)."
                },
                "User": {
                  "type": "string",
                  "title": "User",
                  "description": "The user to add to the mailbox permissions. You can specify a user by Name, Alias, Distinguished Name (e.g. CN=User1,OU=My Users,DC=mydomain,DC=local), DOMAIN\\username, Email address, GUID, SAMAccountName or User Principal Name (UPN)."
                },
                "AccessRights": {
                  "type": "string",
                  "title": "Access rights",
                  "description": "The access rights to assign to the user's permissions on the mailbox. Available options are 'ChangeOwner', 'ChangePermission', 'DeleteItem', 'ExternalAccount', 'FullAccess' and 'ReadPermission'."
                },
                "AutoMapping": {
                  "type": "boolean",
                  "default": false,
                  "title": "Auto mapping",
                  "description": "If set to true, the mailbox and user account will have some additional properties set that will result in Outlook automatically opening the mailbox when logged-in as this user. This can take a few minutes to take effect. If set to false, the additional properties will not be set and Outlook will not automatically open the mailbox."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "User",
                "AccessRights",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "O365AddMailboxPermissionResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "O365AddMailboxPermission"
      }
    },
    "/PowerShellAutomation/O365AddDistributionGroupMember": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add Office 365 member to distribution group",
        "description": "Add a member to a Microsoft Exchange Online or Office 365 distribution group.",
        "parameters": [
          {
            "in": "body",
            "name": "O365AddDistributionGroupMember",
            "description": "Inputs for IA-Connect O365AddDistributionGroupMember action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Distribution group identity",
                  "description": "The identity of the distribution group to add to. You can specify a distribution group by Name, Alias, Distinguished Name (e.g. CN=MyGroup,OU=My Groups,DC=mydomain,DC=local), Email address or GUID."
                },
                "Member": {
                  "type": "string",
                  "title": "Member to add",
                  "description": "The identity of the member to add to the distribution group. You can specify a mailbox by Name, Alias, Object Id (e.g. 01234567-0123-0123-0123-0123456789ab), Email address, GUID, SAMAccountName (even users in non Active Directory connected environments have a SAMAccountName) or User Principal Name (UPN)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Member",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "O365AddDistributionGroupMemberResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "O365AddDistributionGroupMember"
      }
    },
    "/PowerShellAutomation/O365GetO365DistributionGroup": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Office 365 distribution group",
        "description": "Returns the properties of the specified Microsoft Exchange Online or Office 365 distribution group.",
        "parameters": [
          {
            "in": "body",
            "name": "O365GetO365DistributionGroup",
            "description": "Inputs for IA-Connect O365GetO365DistributionGroup action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Distribution group identity",
                  "description": "The identity of the distribution group to add to. You can specify a distribution group by Name, Alias, Distinguished Name (e.g. CN=MyGroup,OU=My Groups,DC=mydomain,DC=local), Email address or GUID."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Search results JSON",
                  "description": "The output of the PowerShell script, formatted as JSON."
                },
                "CountOfGroupsFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of groups found",
                  "description": "The number of distribution groups found which match the search identity. Usually 1."
                }
              }
            }
          }
        },
        "operationId": "O365GetO365DistributionGroup"
      }
    },
    "/PowerShellAutomation/O365NewO365DistributionGroup": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create a new Office 365 distribution group",
        "description": "Creates a new Microsoft Exchange Online or Office 365 distribution group or mail-enabled security group.",
        "parameters": [
          {
            "in": "body",
            "name": "O365NewO365DistributionGroup",
            "description": "Inputs for IA-Connect O365NewO365DistributionGroup action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Name": {
                  "type": "string",
                  "title": "Group name",
                  "description": "The unique name for the new group."
                },
                "Alias": {
                  "type": "string",
                  "title": "Alias",
                  "description": "The alias (also known as mail nickname) for the new group. If you don't specify a SMTP address, the alias will be used to generate the name component of the email address (e.g. alias@mydomain.com)."
                },
                "DisplayName": {
                  "type": "string",
                  "title": "Display name",
                  "description": "The display name of the group. This is visible in address lists."
                },
                "Notes": {
                  "type": "string",
                  "title": "Notes",
                  "description": "Optional notes about the object."
                },
                "ManagedBy": {
                  "type": "string",
                  "title": "Managed by",
                  "description": "The owner of the group. If you don't specify an owner, the user that created the group will become the owner. The owner can be a mailbox, mail user or mail-enabled security group. You can specify a mailbox by Name, Alias, Object Id (e.g. 01234567-0123-0123-0123-0123456789ab), Email address, GUID, SAMAccountName (even users in non Active Directory connected environments have a SAMAccountName) or User Principal Name (UPN)."
                },
                "Members": {
                  "type": "string",
                  "title": "Members",
                  "description": "A comma separated list of members to add to the new group. You can specify members by Name, Alias, Distinguished Name (e.g. CN=MyGroup,OU=My Groups,DC=mydomain,DC=local), Email address or GUID."
                },
                "OrganizationalUnit": {
                  "type": "string",
                  "title": "Organizational unit",
                  "description": "The Organizational Unit (OU) in Azure Active Directory in which to store the group. You can specify an OU in Distinguished Name format (e.g. OU=Target OU,OU=London,DC=mydomain,DC=local) or GUID format."
                },
                "PrimarySmtpAddress": {
                  "type": "string",
                  "title": "Primary SMTP address",
                  "description": "The primary return email address that is used for the new group."
                },
                "MemberDepartRestriction": {
                  "type": "string",
                  "default": "Open",
                  "title": "Member depart restriction",
                  "description": "Allows you to specify restrictions on a member leaving the group. 'Open' is the default and allows members to leave the group without approval, 'Closed' restricts members from leaving the group.",
                  "enum": [
                    "Open",
                    "Closed"
                  ]
                },
                "MemberJoinRestriction": {
                  "type": "string",
                  "default": "Closed",
                  "title": "Member join restriction",
                  "description": "Allows you to specify restrictions on a member joining the group after it has been created. 'Open' allows members to join the group without approval, 'Closed' (the default) restricts members from joining the group, 'ApprovalRequired' allows a member to request joining the group and they are added if a group owner accepts the request.",
                  "enum": [
                    "Open",
                    "Closed",
                    "ApprovalRequired"
                  ]
                },
                "RequireSenderAuthenticationEnabled": {
                  "type": "boolean",
                  "default": false,
                  "title": "Require sender authentication",
                  "description": "Set to true to specify that the group will only accept messages from authenticated (internal) senders. Set to false to accept messages from all senders."
                },
                "Type": {
                  "type": "string",
                  "title": "Group type",
                  "description": "Specify the type of group to create. 'Distribution' is the default and creates a distribution group. 'Security' is used to create a mail-enabled security group.",
                  "enum": [
                    "Distribution",
                    "Security"
                  ]
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Name",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Action result JSON",
                  "description": "The output from the create distribution group action, in JSON format. This will typically hold the details of the created group."
                },
                "GroupAlreadyExists": {
                  "type": "boolean",
                  "title": "Group already exists",
                  "description": "If the group already exists, this will be set to true to inform you that the group didn't actually get created."
                }
              }
            }
          }
        },
        "operationId": "O365NewO365DistributionGroup"
      }
    },
    "/PowerShellAutomation/O365SetO365Mailbox": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set the properties on a Office 365 mailbox",
        "description": "Set the properties on a Microsoft Exchange Online or Office 365 mailbox.",
        "parameters": [
          {
            "in": "body",
            "name": "O365SetO365Mailbox",
            "description": "Inputs for IA-Connect O365SetO365Mailbox action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The Id of a Microsoft Exchange Online or Office 365 mailbox. You can specify a mailbox by Name, Alias, Object Id (e.g. 01234567-0123-0123-0123-0123456789ab), Email address, GUID, SAMAccountName (even users in non Active Directory connected environments have a SAMAccountName) or User Principal Name (UPN)."
                },
                "AccountDisabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "Account disabled",
                  "description": "Set to true if you want to disable the account, false if you want to enable the account or don't specify a value to leave the current setting untouched."
                },
                "Alias": {
                  "type": "string",
                  "title": "Alias",
                  "description": "The Exchange alias (also known as mail nickname) for the user."
                },
                "DisplayName": {
                  "type": "string",
                  "title": "Display name",
                  "description": "The display name of the mailbox. This is visible in address lists."
                },
                "HiddenFromAddressListsEnabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "title": "Hidden from address lists",
                  "description": "Set to true to hide the mailbox from address lists, false to show the mailbox in address lists or don't specify a value to leave the current setting untouched."
                },
                "CustomAttribute1": {
                  "type": "string",
                  "title": "Custom attribute 1",
                  "description": "A value for the custom attribute 1 field."
                },
                "CustomAttribute2": {
                  "type": "string",
                  "title": "Custom attribute 2",
                  "description": "A value for the custom attribute 2 field."
                },
                "CustomAttribute3": {
                  "type": "string",
                  "title": "Custom attribute 3",
                  "description": "A value for the custom attribute 3 field."
                },
                "CustomAttribute4": {
                  "type": "string",
                  "title": "Custom attribute 4",
                  "description": "A value for the custom attribute 4 field."
                },
                "Type": {
                  "type": "string",
                  "title": "Mailbox type",
                  "description": "The type of mailbox. Leave blank if you don't want to change the current value.",
                  "enum": [
                    "Regular",
                    "Room",
                    "Equipment",
                    "Shared",
                    "Workspace"
                  ]
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "O365SetO365MailboxResult": {
                  "type": "boolean",
                  "title": "Command result",
                  "description": "The result of the command (success or failure)."
                },
                "ErrorMessage": {
                  "type": "string",
                  "title": "Error message",
                  "description": "If the command was not successful, this will contain the error message that was returned."
                }
              }
            }
          }
        },
        "operationId": "O365SetO365Mailbox"
      }
    },
    "/PowerShellAutomation/O365WaitForO365Mailbox": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Wait for a Office 365 mailbox",
        "description": "Wait for a specified Microsoft Exchange Online or Office 365 mailbox to exist. This is common if you are waiting for an AD sync or license setting to take effect. If the mailbox already existed, the action will immediately return successful.",
        "parameters": [
          {
            "in": "body",
            "name": "O365WaitForO365Mailbox",
            "description": "Inputs for IA-Connect O365WaitForO365Mailbox action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Identity": {
                  "type": "string",
                  "title": "Mailbox identity",
                  "description": "The Id of a Microsoft Exchange Online or Office 365 mailbox. You can specify a mailbox by Name, Alias, Object Id (e.g. 01234567-0123-0123-0123-0123456789ab), Email address, GUID, SAMAccountName (even users in non Active Directory connected environments have a SAMAccountName) or User Principal Name (UPN)."
                },
                "NumberOfTimesToCheck": {
                  "type": "integer",
                  "format": "int32",
                  "default": 3,
                  "title": "Number of times to check",
                  "description": "The number of times to check for the mailbox to exist. Each check is separated by a configurable amount of time."
                },
                "SecondsBetweenTries": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "title": "Seconds between tries",
                  "description": "How many seconds to wait between each check."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Identity",
                "NumberOfTimesToCheck",
                "SecondsBetweenTries",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Search results JSON",
                  "description": "The properties of the located mailbox if it already existed or existed after waiting, in JSON format."
                },
                "CountOfMailboxesFound": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Count of mailboxes found",
                  "description": "The number of mailboxes found which match the search identity. 1 would represent a successful wait (or the mailbox already existed). 0 would represent the mailbox not existing, even after waiting."
                }
              }
            }
          }
        },
        "operationId": "O365WaitForO365Mailbox"
      }
    },
    "/PowerShellAutomation/JMLGetNextAvailableAccountName": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get next available account name",
        "description": "Given details regarding the naming format for Active Directory and Exchange account names, provides the details of the next available spare account name. Used to determine which Active Directory and Exchange account to create for a given user. This action does not create any accounts, it provides information regarding name availability.",
        "parameters": [
          {
            "in": "body",
            "name": "JMLGetNextAvailableAccountName",
            "description": "Inputs for IA-Connect JMLGetNextAvailableAccountName action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FirstName": {
                  "type": "string",
                  "title": "First name",
                  "description": "The user's first name. Leave blank if a user's first name is not used to construct account names (rare)."
                },
                "MiddleName": {
                  "type": "string",
                  "title": "Middle name",
                  "description": "The user's middle name (optional). Leave blank if a user's middle name is not used to construct account names."
                },
                "LastName": {
                  "type": "string",
                  "title": "Last name",
                  "description": "The user's last / family / sur name. Leave blank if a user's last name is not used to construct account names."
                },
                "FieldA": {
                  "type": "string",
                  "title": "Field A",
                  "description": "An additional field used to construct account names. Leave blank if no additional fields are required to construct an account name."
                },
                "FieldB": {
                  "type": "string",
                  "title": "Field B",
                  "description": "An additional field used to construct account names. Leave blank if no additional fields are required to construct an account name."
                },
                "FieldC": {
                  "type": "string",
                  "title": "Field C",
                  "description": "An additional field used to construct account names. Leave blank if no additional fields are required to construct an account name."
                },
                "FieldD": {
                  "type": "string",
                  "title": "Field D",
                  "description": "An additional field used to construct account names. Leave blank if no additional fields are required to construct an account name."
                },
                "VariableMStartValue": {
                  "type": "integer",
                  "format": "int32",
                  "default": 2,
                  "title": "M start value",
                  "description": "Optionally allows you to set the initial value for the {M} variable which can be used in the property format to represent a variable which increases with each iteration."
                },
                "VariableNStartValue": {
                  "type": "integer",
                  "format": "int32",
                  "default": 2,
                  "title": "N start value",
                  "description": "Optionally allows you to set the initial value for the {N} variable which can be used in the property format to represent a variable which increases with each iteration."
                },
                "VariableXStartValue": {
                  "type": "integer",
                  "format": "int32",
                  "default": 2,
                  "title": "X start value",
                  "description": "Optionally allows you to set the initial value for the {X} variable which can be used in the property format to represent a variable which increases with each iteration."
                },
                "MaxAttempts": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "title": "Maximum attempts",
                  "description": "The maximum number of attempts (trying different values) before IA-Connect gives up trying to find an available account.",
                  "x-ms-visibility": "advanced"
                },
                "FallbackCausesRetest": {
                  "type": "boolean",
                  "default": true,
                  "title": "Fallback causes retest",
                  "description": "If set to true: If any availability check for any rule requires falling back to a different format, tests will re-start from the top of the list to ensure that all properties use the same format (e.g. primary, primary, primary or fallback, fallback, fallback). This keeps the results in sync and is the recommended value. Only set to false if you know exactly what you are doing.",
                  "x-ms-visibility": "advanced"
                },
                "NumbersNotToUse": {
                  "type": "string",
                  "title": "List of numbers not to use",
                  "description": "A comma separated list of numbers not to use for values of M, N or X. For example: '13, 666'.",
                  "x-ms-visibility": "advanced"
                },
                "CharactersToRemoveFromInputs": {
                  "type": "string",
                  "title": "Characters to remove from inputs",
                  "description": "A string containing all of the characters you wish to remove from the inputs (for example if a user's name contains invalid characters). For example: !@&?^*.",
                  "x-ms-visibility": "advanced"
                },
                "RemoveDiacriticsFromInputs": {
                  "type": "boolean",
                  "default": true,
                  "title": "Remove diacritics from inputs",
                  "description": "If set to true, IA-Connect will attempt to remove all diacritics from the input fields, replacing characters with a diacritic with the same character minus the diacritic. For example: replacing 'acute accented a' with 'a'. In scenarios where there is no direct mapping to a simple character, the character is removed. For example: The German sharp S is removed.",
                  "x-ms-visibility": "advanced"
                },
                "RemoveNonAlphaNumericFromInputs": {
                  "type": "boolean",
                  "default": true,
                  "title": "Remove non alphanumeric from inputs",
                  "description": "If set to true, IA-Connect will remove all non-alphanumeric characters from the input fields.",
                  "x-ms-visibility": "advanced"
                },
                "SequenceA1": {
                  "type": "string",
                  "title": "Sequence A1",
                  "description": "A comma separated list of strings to use for the {A1} variable which can be used in the property format to represent a value which changes with each attempt to find an available account. For example: If you specify 'A,B,C,D,E,F' for this value, the format '{FirstName}{A1}' would check the availability of {FirstName}A followed by {FirstName}B etc.",
                  "x-ms-visibility": "advanced"
                },
                "PropertiesToCheckList": {
                  "type": "array",
                  "title": "Properties to check",
                  "description": "A property in Active Directory or Exchange to check for availability.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "PropertyToCheck": {
                        "type": "string",
                        "title": "Property",
                        "default": "ADSAMAccountName",
                        "enum": [
                          "ADSAMAccountName",
                          "ADAccountName",
                          "ADUPN",
                          "ADEmailAddress",
                          "ExchangeMailboxAddress",
                          "ExchangeRecipientAddress",
                          "ExchangeMailboxAlias",
                          "ExchangeRemoteMailboxAddress",
                          "AzureADUPN",
                          "Office365UPN",
                          "Office365MailboxEmailAddress"
                        ],
                        "x-ms-enum-values": [
                          {
                            "value": "ADSAMAccountName",
                            "displayName": "Active Directory: SAMAccountName"
                          },
                          {
                            "value": "ADAccountName",
                            "displayName": "Active Directory: Account name"
                          },
                          {
                            "value": "ADUPN",
                            "displayName": "Active Directory: User Principal Name"
                          },
                          {
                            "value": "ADEmailAddress",
                            "displayName": "Active Directory: Email address"
                          },
                          {
                            "value": "ExchangeMailboxAddress",
                            "displayName": "Exchange: Mailbox primary mail address"
                          },
                          {
                            "value": "ExchangeRecipientAddress",
                            "displayName": "Exchange: Mailbox email addresses (check recipients)"
                          },
                          {
                            "value": "ExchangeMailboxAlias",
                            "displayName": "Exchange: Mailbox alias"
                          },
                          {
                            "value": "ExchangeRemoteMailboxAddress",
                            "displayName": "Exchange: Remote mailbox email address"
                          },
                          {
                            "value": "AzureADUPN",
                            "displayName": "Azure AD: User Principal Name"
                          },
                          {
                            "value": "Office365UPN",
                            "displayName": "Office 365: User Principal Name"
                          },
                          {
                            "value": "Office365MailboxEmailAddress",
                            "displayName": "Office 365: Mailbox email address"
                          }
                        ],
                        "description": "Which account property to check for availability"
                      },
                      "PropertyNameFormat": {
                        "type": "string",
                        "title": "Format",
                        "description": "The format for the value of this property. For example: {FirstName}.{LastName} or {FirstName first 1}.{LastName}"
                      },
                      "PropertyNameFallbackFormat": {
                        "type": "string",
                        "title": "Format fallback",
                        "description": "The fallback format for the value of this property if the value is already taken. For example: {FirstName}.{LastName}{N2} or {FirstName first 1}.{LastName}{N2}"
                      },
                      "PropertyNameFallbackFormat2": {
                        "type": "string",
                        "title": "Format second fallback",
                        "description": "The second fallback format for the value of this property if the value and first fallback is already taken. For example: {FirstName}.{LastName}{N2} or {FirstName first 1}.{LastName}{N2}"
                      },
                      "PropertyNameMaxLength": {
                        "type": "integer",
                        "title": "Value max length",
                        "description": "The maximum length for the value of this field before something has to be cut"
                      },
                      "PropertyNameMaxLengthFieldToCut": {
                        "type": "string",
                        "title": "Field to cut if max length",
                        "default": "LastName",
                        "enum": [
                          "FirstName",
                          "MiddleName",
                          "LastName",
                          "FieldA",
                          "FieldB",
                          "FieldC",
                          "FieldD"
                        ],
                        "x-ms-enum-values": [
                          {
                            "value": "FirstName",
                            "displayName": "First name"
                          },
                          {
                            "value": "MiddleName",
                            "displayName": "Middle name"
                          },
                          {
                            "value": "LastName",
                            "displayName": "Last name"
                          },
                          {
                            "value": "FieldA",
                            "displayName": "Field A"
                          },
                          {
                            "value": "FieldB",
                            "displayName": "Field B"
                          },
                          {
                            "value": "FieldC",
                            "displayName": "Field C"
                          },
                          {
                            "value": "FieldD",
                            "displayName": "Field D"
                          }
                        ],
                        "description": "If the maximum length for the value of this field is exceeded, which input should be cut. For example: Choose LastName if you want to cut from the Last name / family name / surname to shorten the property value."
                      }
                    }
                  }
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveDirectorySAMAccountName": {
                  "type": "string",
                  "title": "AD User SAMAccountName",
                  "description": "The available Active Directory user SAMAccountName (if it was one of the properties to check for availability)."
                },
                "ActiveDirectoryAccountName": {
                  "type": "string",
                  "title": "AD User account name",
                  "description": "The available Active Directory user account name (if it was one of the properties to check for availability)."
                },
                "ActiveDirectoryUPN": {
                  "type": "string",
                  "title": "AD User Principal Name",
                  "description": "The available Active Directory User Principal Name (if it was one of the properties to check for availability)."
                },
                "ActiveDirectoryEmailAddress": {
                  "type": "string",
                  "title": "AD User Email Address",
                  "description": "The available Active Directory Email Address (if it was one of the properties to check for availability)."
                },
                "ExchangeMailboxAddress": {
                  "type": "string",
                  "title": "Exchange mailbox email address",
                  "description": "The available Exchange email mailbox address (if it was one of the properties to check for availability)."
                },
                "ExchangeMailboxAlias": {
                  "type": "string",
                  "title": "Exchange mailbox alias",
                  "description": "The available Exchange mailbox alias (if it was one of the properties to check for availability)."
                },
                "ExchangeRemoteMailboxAddress": {
                  "type": "string",
                  "title": "Exchange remote mailbox address",
                  "description": "The available Exchange remote mailbox address (if it was one of the properties to check for availability)."
                },
                "AzureADUPN": {
                  "type": "string",
                  "title": "Azure AD User Principal Name",
                  "description": "The available Azure Active Directory User Principal Name (if it was one of the properties to check for availability)."
                },
                "Office365UPN": {
                  "type": "string",
                  "title": "Office 365 User Principal Name",
                  "description": "The available Office 365 User Principal Name (if it was one of the properties to check for availability)."
                },
                "Office365MailboxEmailAddress": {
                  "type": "string",
                  "title": "Office 365 mailbox email address",
                  "description": "The available Office 365 email mailbox address (if it was one of the properties to check for availability)."
                },
                "MValue": {
                  "type": "integer",
                  "format": "int32",
                  "title": "M final value",
                  "description": "The final value of the variable M, if it was used."
                },
                "NValue": {
                  "type": "integer",
                  "format": "int32",
                  "title": "N final value",
                  "description": "The final value of the variable N, if it was used."
                },
                "XValue": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X final value",
                  "description": "The final value of the variable X, if it was used."
                },
                "FormatIndexUsed": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Format index used",
                  "description": "The index of the format that was used to match properties. 1 = Primary format, 2 = Fallback format, 3 = Second fallback format. This lets you know if your initial format resulted in an available account or if IA-Connect had to fallback to a different supplied format."
                }
              }
            }
          }
        },
        "operationId": "JMLGetNextAvailableAccountName"
      }
    }
  },
  "definitions": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "RESTAPIKey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}