{
  "swagger": "2.0",
  "info": {
    "title": "Vocean",
    "description": "Vocean is the space for co-creation. Here you can collaborate with many, or few, individuals. With Vocean you can innovate together by gathering ideas, develop and evaluate them. Connect to Vocean to get informed about new insights, or retrieve insights gathered.",
    "version": "2.0",
    "contact": {
      "name": "Vocean AB",
      "url": "https://vocean.com/about-us/#support",
      "email": "support@vocean.com"
    }
  },
  "host": "functions.vocean.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/data/connector/innovate/activity": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ideaId": {
                    "type": "string",
                    "description": "The id of the idea.",
                    "title": "ID"
                  },
                  "activityId": {
                    "type": "string",
                    "description": "The id of the innovate activity for which ideas were requested.",
                    "title": "Activity ID"
                  },
                  "ideaCreateDate": {
                    "type": "string",
                    "description": "The timestamp for when the idea was created.",
                    "title": "Created Date"
                  },
                  "ideaTextOriginal": {
                    "type": "string",
                    "description": "The idea text, in the original language.",
                    "title": "Idea"
                  },
                  "ideaKeyPhrasesOriginal": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The key phrases found in the idea text (original language).",
                    "title": "Key Phrases"
                  },
                  "ideaTextEnglishTranslation": {
                    "type": "string",
                    "description": "The idea text translated to English.",
                    "title": "Translation"
                  },
                  "ideaKeyPhrasesEnglishTranslation": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The key phrases found in the English translation of the idea text.",
                    "title": "Key Phrases (En)"
                  },
                  "likes": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of likes the idea has received.",
                    "title": "Likes"
                  },
                  "ideaPropertyValues": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "Property label.",
                          "title": "Label"
                        },
                        "value": {
                          "type": "number",
                          "format": "float",
                          "description": "Property value.",
                          "title": "Value"
                        }
                      }
                    },
                    "description": "When properties are used the values for the idea is presented here.",
                    "title": "Values"
                  },
                  "ideaCategories": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Categories assigned to the idea.",
                    "title": "Categories"
                  }
                }
              }
            }
          }
        },
        "summary": "Get ideas",
        "description": "Get all the ideas and related data from a specified Innovate activity in Vocean.",
        "x-ms-visibility": "important",
        "operationId": "GetIdeas",
        "parameters": [
          {
            "name": "networkId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify the id of the space where the activities are located.",
            "x-ms-summary": "Space id",
            "x-ms-dynamic-values": {
              "operationId": "GetSpaces",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-visibility": "important"
          },
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Specify the innovate activity's id. (Found in the activity's URL.)",
            "x-ms-summary": "Activity id",
            "x-ms-dynamic-values": {
              "operationId": "GetActivities",
              "value-path": "activityId",
              "value-title": "header",
              "parameters": {
                "networkId": {
                  "parameter": "networkId"
                },
                "activityType": "Innovate"
              }
            }
          }
        ]
      }
    },
    "/api/data/connector/vote/activity": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "voteId": {
                    "type": "string",
                    "description": "The id of the vote.",
                    "title": "ID"
                  },
                  "activityId": {
                    "type": "string",
                    "description": "The id of the vote activity for which votes were requested.",
                    "title": "Activity ID"
                  },
                  "voteCreateDate": {
                    "type": "string",
                    "description": "The timestamp of when the vote was submitted.",
                    "title": "Vote Date"
                  },
                  "voteOptionValues": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "label"
                        },
                        "value": {
                          "type": "integer",
                          "format": "int32",
                          "description": "value"
                        }
                      }
                    },
                    "description": "The values for each vote option.",
                    "title": "Values"
                  }
                }
              }
            }
          }
        },
        "summary": "Get votes",
        "description": "Get all the votes from a specified Vote activity in Vocean.",
        "x-ms-visibility": "important",
        "operationId": "GetVotes",
        "parameters": [
          {
            "name": "networkId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify the id of the space where the activities are located.",
            "x-ms-summary": "Space id",
            "x-ms-dynamic-values": {
              "operationId": "GetSpaces",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-visibility": "important"
          },
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Specify the vote activity's id. (Found in the activity's URL.)",
            "x-ms-summary": "Activity id",
            "x-ms-dynamic-values": {
              "operationId": "GetActivities",
              "value-path": "activityId",
              "value-title": "header",
              "parameters": {
                "networkId": {
                  "parameter": "networkId"
                },
                "activityType": "Vote"
              }
            }
          }
        ]
      }
    },
    "/api/data/connector/explore/activity": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "responseId": {
                    "type": "string",
                    "description": "The id of the response.",
                    "title": "ID"
                  },
                  "activityId": {
                    "type": "string",
                    "description": "The id of the explore activity for which responses were requested.",
                    "title": "Activity ID"
                  },
                  "questionId": {
                    "type": "string",
                    "description": "The id of the specific question within the explore activity.",
                    "title": "Question ID"
                  },
                  "responder": {
                    "type": "string",
                    "description": "An id enabling answer from the same respondent to be linked, within the activity.",
                    "title": "Responder"
                  },
                  "responseCreateDate": {
                    "type": "string",
                    "description": "The timestamp of when the response was submitted.",
                    "title": "Response Date"
                  },
                  "questionOrder": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The order of the questions in relation to other questions within the explore activity.",
                    "title": "Order"
                  },
                  "questionText": {
                    "type": "string",
                    "description": "The question text in the original language.",
                    "title": "Question"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of question.",
                    "title": "Type"
                  },
                  "responseTextOriginal": {
                    "type": "string",
                    "description": "For text questions the text is presented here.",
                    "title": "Text"
                  },
                  "responseTextEnglishTranslation": {
                    "type": "string",
                    "description": "For text questions the English translation of the text is presented here.",
                    "title": "Translation"
                  },
                  "responseNumericValue": {
                    "type": "string",
                    "description": "For numeric questions the value is presented here.",
                    "title": "Numeric"
                  },
                  "responseSliderValue": {
                    "type": "string",
                    "description": "For slider questions the value is presented here.",
                    "title": "Slider"
                  },
                  "responseYesNoValue": {
                    "type": "string",
                    "description": "For yes (true) or no (false) questions the Boolean value is presented here.",
                    "title": "Yes or No",
                    "enum": [
                      "",
                      "true",
                      "false"
                    ]
                  },
                  "responseMultipleValues": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "label"
                        },
                        "value": {
                          "type": "string",
                          "description": "value"
                        }
                      }
                    },
                    "description": "For multiple answer questions the values for each option is presented here.",
                    "title": "Multiple Values"
                  }
                }
              }
            }
          }
        },
        "summary": "Get explore responses",
        "description": "Get all the responses from a specified Explore activity in Vocean.",
        "x-ms-visibility": "important",
        "operationId": "GetExploreResponses",
        "parameters": [
          {
            "name": "networkId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify the id of the space where the activities are located.",
            "x-ms-summary": "Space id",
            "x-ms-dynamic-values": {
              "operationId": "GetSpaces",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-visibility": "important"
          },
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Specify the explore activity's id. (Found in the activity's URL.)",
            "x-ms-summary": "Activity id",
            "x-ms-dynamic-values": {
              "operationId": "GetActivities",
              "value-path": "activityId",
              "value-title": "header",
              "parameters": {
                "networkId": {
                  "parameter": "networkId"
                },
                "activityType": "Explore"
              }
            }
          }
        ]
      }
    },
    "/api/connector/v2/networks": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The id of the space.",
                    "title": "ID"
                  },
                  "createdDate": {
                    "type": "string",
                    "description": "The timestamp for when the network was created.",
                    "title": "Created Date"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the space.",
                    "title": "Name"
                  },
                  "code": {
                    "type": "string",
                    "description": "The code of the space.",
                    "title": "Code"
                  }
                }
              }
            }
          }
        },
        "summary": "Get spaces",
        "description": "Get available spaces in Vocean. (Where the user has a Premium Leader license.)",
        "x-ms-visibility": "advanced",
        "operationId": "GetSpaces",
        "parameters": []
      }
    },
    "/api/connector/v2/networks/{networkId}/activities": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activityId": {
                    "type": "string",
                    "description": "The id of the activity.",
                    "title": "ID"
                  },
                  "createdDate": {
                    "type": "string",
                    "description": "The timestamp for when the activity was created.",
                    "title": "Created Date"
                  },
                  "header": {
                    "type": "string",
                    "description": "The header, or title, of the activity.",
                    "title": "Header"
                  },
                  "activityType": {
                    "type": "string",
                    "description": "The activity type.",
                    "title": "Type"
                  }
                }
              }
            }
          }
        },
        "summary": "Get activities",
        "description": "Get available activities in Vocean, for the specified network. (Activities where the user is a leader.)",
        "x-ms-visibility": "advanced",
        "operationId": "GetActivities",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specify the id of the space where the activities are located.",
            "x-ms-summary": "Space id",
            "x-ms-dynamic-values": {
              "operationId": "GetSpaces",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-url-encoding": "single"
          },
          {
            "name": "activityType",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Specify the activity type for the activities to be fetched.",
            "x-ms-summary": "Activity type.",
            "enum": [
              "Innovate",
              "Vote",
              "Explore"
            ]
          }
        ]
      }
    },
    "/api/connector/v2/networks/{networkId}/activities/{activityId}/ideas": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "ideaId": {
                  "type": "string",
                  "description": "The id of the created idea.",
                  "title": "ID"
                }
              }
            }
          }
        },
        "summary": "Add idea",
        "operationId": "AddIdea",
        "description": "Create an idea in a specific Vocean activity.",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specify the id of the space where the activities are located.",
            "x-ms-summary": "Space id",
            "x-ms-dynamic-values": {
              "operationId": "GetSpaces",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-url-encoding": "single"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specify the innovate activity's id. (Found in the activity's URL.)",
            "x-ms-summary": "Activity id",
            "x-ms-dynamic-values": {
              "operationId": "GetActivities",
              "value-path": "activityId",
              "value-title": "header",
              "parameters": {
                "networkId": {
                  "parameter": "networkId"
                },
                "activityType": "Innovate"
              }
            },
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Idea text to be added.",
                  "title": "Idea"
                }
              },
              "required": [
                "text"
              ]
            }
          }
        ]
      }
    },
    "/api/connector/v2/networks/{networkId}/activities/{activityId}/ideas/many": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ideaId": {
                    "type": "string",
                    "description": "The id of the created idea.",
                    "title": "ID"
                  }
                }
              }
            }
          }
        },
        "summary": "Add ideas",
        "description": "Create ideas in a specific Vocean activity.",
        "x-ms-visibility": "important",
        "operationId": "AddIdeas",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specify the id of the space where the activities are located.",
            "x-ms-summary": "Space id",
            "x-ms-dynamic-values": {
              "operationId": "GetSpaces",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-url-encoding": "single"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specify the innovate activity's id. (Found in the activity's URL.)",
            "x-ms-summary": "Activity id",
            "x-ms-dynamic-values": {
              "operationId": "GetActivities",
              "value-path": "activityId",
              "value-title": "header",
              "parameters": {
                "networkId": {
                  "parameter": "networkId"
                },
                "activityType": "Innovate"
              }
            },
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Idea text to be added.",
                    "title": "Idea"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/api/connector/v2/user-activity-event-types": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "eventType": {
                    "type": "string",
                    "description": "The name of the event type.",
                    "title": "Event Type"
                  }
                }
              }
            }
          }
        },
        "summary": "Get event types related to user availability to activities and workboards",
        "description": "Get a list of available event types related to changes in a user's availability to activities or workboards. For example, when a user is added as leader to a workboard or when an activity where the user is participating is finished.",
        "x-ms-visibility": "internal",
        "operationId": "GetUserActivityEventTypes",
        "parameters": []
      }
    },
    "/api/connector/v2/activity-item-event-types": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "eventType": {
                    "type": "string",
                    "description": "The name of the event type.",
                    "title": "Event Type"
                  }
                }
              }
            }
          }
        },
        "summary": "Get event types related to activity contributions",
        "description": "Get a list of available event types related to activity contributions (ideas, votes, responses) in activities. For example, when an idea is added, changed or liked.",
        "x-ms-visibility": "internal",
        "operationId": "GetActivityItemEventTypes",
        "parameters": [
          {
            "name": "activityType",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Specify the activity type for the activities to be fetched.",
            "x-ms-summary": "Activity type.",
            "enum": [
              "Innovate",
              "Vote",
              "Explore"
            ]
          }
        ]
      }
    },
    "/api/connector/v2/webhooks/{hookId}": {
      "delete": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Delete a webhook",
        "description": "Delete a webhook subscription from Vocean.",
        "x-ms-visibility": "internal",
        "operationId": "DeleteWebhook",
        "parameters": [
          {
            "name": "hookId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specify the id of the webhook to be deleted.",
            "x-ms-summary": "Webhook id",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/api/connector/v2/networks/{networkId}/activities/{activityId}/ideas/webhooks": {
      "x-ms-notification-content": {
        "description": "Idea trigger response",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The id of the event.",
              "title": "ID"
            },
            "eventType": {
              "type": "string",
              "description": "The name of the event type.",
              "title": "Event Type"
            },
            "eventTime": {
              "type": "string",
              "description": "The timestamp for when the event occurred.",
              "title": "Event Time"
            },
            "eventPath": {
              "type": "string",
              "description": "A string description of what the event is related to. (/Innovate/{Activity ID}/ {Event Type})",
              "title": "Event Path"
            },
            "data": {
              "type": "object",
              "properties": {
                "ideaId": {
                  "type": "string",
                  "description": "The id of the idea.",
                  "title": "ID"
                },
                "activityId": {
                  "type": "string",
                  "description": "The id of the innovate activity where the idea exists.",
                  "title": "Activity ID"
                },
                "ideaCreateDate": {
                  "type": "string",
                  "description": "The timestamp for when the idea was created.",
                  "title": "Created Date"
                },
                "ideaTextOriginal": {
                  "type": "string",
                  "description": "The idea text, in the original language.",
                  "title": "Idea"
                },
                "ideaKeyPhrasesOriginal": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The key phrases found in the idea text (original language).",
                  "title": "Key Phrases"
                },
                "ideaTextEnglishTranslation": {
                  "type": "string",
                  "description": "The idea text translated to English.",
                  "title": "Translation"
                },
                "ideaKeyPhrasesEnglishTranslation": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The key phrases found in the English translation of the idea text.",
                  "title": "Key Phrases (En)"
                },
                "likes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of likes the idea has received.",
                  "title": "Likes"
                },
                "ideaPropertyValues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Property label.",
                        "title": "Label"
                      },
                      "value": {
                        "type": "number",
                        "format": "float",
                        "description": "Property value.",
                        "title": "Value"
                      }
                    }
                  },
                  "description": "When properties are used the values for the idea is presented here.",
                  "title": "Values"
                },
                "ideaCategories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Categories assigned to the idea.",
                  "title": "Categories"
                }
              },
              "description": "Data regarding the idea.",
              "title": "Idea Data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "When an idea is added or interacted with",
        "description": "Triggers when an idea is added, or something happens to an existing idea. For example, that the idea is liked, or the idea text is changed.",
        "x-ms-visibility": "important",
        "operationId": "IdeaTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specify the id of the space where the activity is located.",
            "x-ms-summary": "Space id",
            "x-ms-dynamic-values": {
              "operationId": "GetSpaces",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-url-encoding": "single"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specify the innovate activity's id. (Found in the activity's URL.)",
            "x-ms-summary": "Activity id",
            "x-ms-dynamic-values": {
              "operationId": "GetActivities",
              "value-path": "activityId",
              "value-title": "header",
              "parameters": {
                "networkId": {
                  "parameter": "networkId"
                },
                "activityType": "Innovate"
              }
            },
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "targetUrl": {
                  "type": "string",
                  "description": "URL used for callback.",
                  "title": "URL",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "eventTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "eventType": {
                        "type": "string",
                        "description": "Specify the event type(s) the trigger should listen to. (No selection will listen to all idea event types.)",
                        "title": "Event Types",
                        "x-ms-visibility": "advanced",
                        "x-ms-dynamic-values": {
                          "operationId": "GetActivityItemEventTypes",
                          "value-path": "eventType",
                          "value-title": "eventType",
                          "parameters": {
                            "activityType": "Innovate"
                          }
                        }
                      }
                    }
                  },
                  "description": "eventTypes"
                }
              },
              "required": [
                "targetUrl"
              ]
            }
          }
        ]
      }
    },
    "/api/connector/v2/current-user/activities/webhooks": {
      "x-ms-notification-content": {
        "description": "User Activity Response",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The id of the event.",
              "title": "ID"
            },
            "eventType": {
              "type": "string",
              "description": "The name of the event type.",
              "title": "Event Type"
            },
            "eventTime": {
              "type": "string",
              "description": "The timestamp for when the event occurred.",
              "title": "Event Time"
            },
            "eventPath": {
              "type": "string",
              "description": "A string description of what the event is related to. (/Innovate/ {Activity ID}/ {Event Type})",
              "title": "Event Path"
            },
            "data": {
              "type": "object",
              "properties": {
                "activityId": {
                  "type": "string",
                  "description": "The id of the innovate activity where the idea exists.",
                  "title": "ID"
                },
                "createdDate": {
                  "type": "string",
                  "description": "The timestamp for when the activity was created.",
                  "title": "Created Date"
                },
                "header": {
                  "type": "string",
                  "description": "The header, or title, of the activity.",
                  "title": "Header"
                },
                "activityType": {
                  "type": "string",
                  "description": "The activity type.",
                  "title": "Type"
                }
              },
              "description": "Data regarding the activity.",
              "title": "Activity Data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "When an activity's, or a workboard's, availability changes for the current user",
        "description": "Triggers when something happens to an activity, or a workboard, that affects the current user's possibility to interact with the activity or workboard. For example, when a user is added as leader to a workboard or when an activity where the user is participating is finished.",
        "x-ms-visibility": "important",
        "operationId": "UserActivityTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "networkId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify the id of the space where the activity is located.",
            "x-ms-summary": "Space id",
            "x-ms-dynamic-values": {
              "operationId": "GetSpaces",
              "value-path": "id",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "targetUrl": {
                  "type": "string",
                  "description": "URL used for callback.",
                  "title": "URL",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "eventTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "eventType": {
                        "type": "string",
                        "description": "Specify the event type(s) the trigger should listen to. (No selection will listen to all idea event types.)",
                        "title": "Event Types",
                        "x-ms-visibility": "advanced",
                        "x-ms-dynamic-values": {
                          "operationId": "GetUserActivityEventTypes",
                          "value-path": "eventType",
                          "value-title": "eventType"
                        }
                      }
                    }
                  },
                  "description": "eventTypes"
                }
              },
              "required": [
                "targetUrl"
              ]
            }
          }
        ]
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://vocean.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://vocean.com/tos"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Business Management"
    }
  ],
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://auth.vocean.com/authorize",
      "tokenUrl": "https://auth.vocean.com/oauth/token",
      "scopes": {
        "openid profile email offline_access": "openid profile email offline_access"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "openid profile email offline_access"
      ]
    }
  ],
  "tags": []
}