{
  "swagger": "2.0",
  "info": {
    "title": "Vocean",
    "description": "Vocean gives you the possibility to co-create digitally with many, or few, individuals. Vocean lets the participants innovate toghether by gathering ideas and evaluating them. It's also possible to let individuals participate in votes or answering explore surveys. Connect to Vocean to retrieve the inputs gathered, for example; ideas, likes, votes and question responses.",
    "version": "1.0",
    "contact": {
      "name": "Vocean AB",
      "url": "https://vocean.com/about-us/#support",
      "email": "support@vocean.com"
    }
  },
  "host": "functions.vocean.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/data/connector/innovate/activity": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ideaId": {
                    "type": "string",
                    "description": "The id of the idea.",
                    "title": "ID"
                  },
                  "activityId": {
                    "type": "string",
                    "description": "The id of the innovate activity for which ideas were requested.",
                    "title": "Activity ID"
                  },
                  "ideaCreateDate": {
                    "type": "string",
                    "description": "The timestamp for when the idea was created.",
                    "title": "Created Date"
                  },
                  "ideaTextOriginal": {
                    "type": "string",
                    "description": "The idea text, in the original language.",
                    "title": "Idea"
                  },
                  "ideaTextEnglishTranslation": {
                    "type": "string",
                    "description": "The idea text translated to English.",
                    "title": "Translation"
                  },
                  "likes": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of likes the idea has received.",
                    "title": "Likes"
                  },
                  "ideaPropertyValues": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "label"
                        },
                        "value": {
                          "type": "number",
                          "format": "float",
                          "description": "value"
                        }
                      }
                    },
                    "description": "When properties are used the values for the idea is presented here.",
                    "title": "Values"
                  }
                }
              }
            }
          }
        },
        "summary": "Get ideas",
        "description": "Get ideas and related data from an innovate activity in Vocean.",
        "x-ms-visibility": "important",
        "operationId": "GetIdeas",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Specify the innovate activity's id. (Found in the activity's URL.)",
            "x-ms-summary": "Activity id"
          }
        ]
      }
    },
    "/api/data/connector/vote/activity": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "voteId": {
                    "type": "string",
                    "description": "The id of the vote.",
                    "title": "ID"
                  },
                  "activityId": {
                    "type": "string",
                    "description": "The id of the vote activity for which votes were requested.",
                    "title": "Activity ID"
                  },
                  "voteCreateDate": {
                    "type": "string",
                    "description": "The timestamp of when the vote was submitted.",
                    "title": "Vote Date"
                  },
                  "voteOptionValues": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "label"
                        },
                        "value": {
                          "type": "integer",
                          "format": "int32",
                          "description": "value"
                        }
                      }
                    },
                    "description": "The values for each vote option.",
                    "title": "Values"
                  }
                }
              }
            }
          }
        },
        "summary": "Get votes",
        "description": "Get votes from a voting activity in Vocean.",
        "x-ms-visibility": "important",
        "operationId": "GetVotes",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Specify the vote activity's id. (Found in the activity's URL.)",
            "x-ms-summary": "Activity id"
          }
        ]
      }
    },
    "/api/data/connector/explore/activity": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "responseId": {
                    "type": "string",
                    "description": "The id of the response.",
                    "title": "ID"
                  },
                  "activityId": {
                    "type": "string",
                    "description": "The id of the explore activity for which responses were requested.",
                    "title": "Activity ID"
                  },
                  "questionId": {
                    "type": "string",
                    "description": "The id of the specific question within the explore activity.",
                    "title": "Question ID"
                  },
                  "responder": {
                    "type": "string",
                    "description": "An id enabling answer from the same respondent to be linked, within the activity.",
                    "title": "Responder"
                  },
                  "responseCreateDate": {
                    "type": "string",
                    "description": "The timestamp of when the response was submitted.",
                    "title": "Response Date"
                  },
                  "questionOrder": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The order of the question in relation to other questions within the explore activity.",
                    "title": "Order"
                  },
                  "questionText": {
                    "type": "string",
                    "description": "The question text in the original language.",
                    "title": "Question"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of question.",
                    "title": "Type"
                  },
                  "responseTextOriginal": {
                    "type": "string",
                    "description": "For text questions the text is presented here.",
                    "title": "Text"
                  },
                  "responseTextEnglishTranslation": {
                    "type": "string",
                    "description": "For text questions the english translation of the text is presented here.",
                    "title": "Translation"
                  },
                  "responseNumericValue": {
                    "type": "string",
                    "description": "For numeric questions the value is presented here.",
                    "title": "Numeric"
                  },
                  "responseSliderValue": {
                    "type": "string",
                    "description": "For slider questions the value is presented here.",
                    "title": "Slider"
                  },
                  "responseYesNoValue": {
                    "type": "string",
                    "description": "For yes (true) or no (false) questions the boolean value is presented here.",
                    "title": "Yes or No",
                    "enum": [
                      "",
                      "true",
                      "false"
                    ]
                  },
                  "responseMultipleValues": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "label"
                        },
                        "value": {
                          "type": "string",
                          "description": "value"
                        }
                      }
                    },
                    "description": "For multiple answer questions the values for each option is presented here.",
                    "title": "Multiple Values"
                  }
                }
              }
            }
          }
        },
        "summary": "Get explore responses",
        "description": "Get responses from an explore activity in Vocean",
        "x-ms-visibility": "important",
        "operationId": "GetExploreResponses",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Specify the explore activity's id. (Found in the activity's URL.)",
            "x-ms-summary": "Activity id"
          }
        ]
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://vocean.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://vocean.com/tos"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Business Management"
    }
  ],
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://auth.vocean.com/authorize",
      "tokenUrl": "https://auth.vocean.com/oauth/token",
      "scopes": {
        "openid profile email offline_access": "openid profile email offline_access"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "openid profile email offline_access"
      ]
    }
  ],
  "tags": []
}