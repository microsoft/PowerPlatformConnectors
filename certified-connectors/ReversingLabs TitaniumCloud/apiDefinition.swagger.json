{
  "swagger": "2.0",
  "info": {
    "title": "ReversingLabs TitaniumCloud",
    "description": "ReversingLabs TitaniumCloud is a threat intelligence solution providing up-to-date file reputation services, threat classification and rich context on over 10 billion goodware and malware files. A powerful set of REST API query and feed functions deliver targeted file and malware intelligence for threat identification, analysis, intelligence development, and threat hunting services.",
    "version": "1.4",
    "contact": {
      "name": "ReversingLabs support",
      "url": "https://support.reversinglabs.com/",
      "email": "support@reversinglabs.com"
    }
  },
  "host": "data.reversinglabs.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/databrowser/malware_presence/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get file reputation (single query)",
        "description": "TCA-0101 Get information about the malware status of the requested sample.",
        "operationId": "Get-file-reputation-single",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Possible values are 'md5', 'sha1' and 'sha256'.",
            "x-ms-summary": "Hash Type",
            "x-ms-url-encoding": "single",
            "enum": [
              "md5",
              "sha1",
              "sha256"
            ]
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Must be a hash string corresponding to the defined hash type.",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "extended",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Show extended results.",
            "default": true,
            "x-ms-summary": "Extended"
          },
          {
            "name": "show_hashes",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Show all hashes for the sample.",
            "default": true,
            "x-ms-summary": "Show Hashes"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Set the response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/databrowser/malware_presence/bulk_query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get file reputation (bulk query)",
        "description": "TCA-0101 Get information about the malware status of requested samples.",
        "operationId": "Get-file-reputation-bulk",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "json",
            "description": "XML or JSON",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Post Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "extended",
            "in": "query",
            "description": "Show extended results.",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Extended"
          },
          {
            "name": "show_hashes",
            "in": "query",
            "required": false,
            "description": "Show all hashes for the sample.",
            "type": "boolean",
            "x-ms-summary": "Show Hashes"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "hash_type",
                          "title": "hash_type",
                          "enum": [
                            "md5",
                            "sha1",
                            "sha256"
                          ]
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/xref/v2/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get historical multi-AV scan records (single query)",
        "description": "TCA-0103 Provides cross-reference data (AV scanner scanning information, first and last seen date-time (UTC), sample type and size, first and last scanned date, etc.) for a given sample.",
        "operationId": "Get-historical-av-records-single",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "md5, sha1 or sha256",
            "x-ms-summary": "Hash Type",
            "x-ms-url-encoding": "single",
            "enum": [
              "md5",
              "sha1",
              "sha256"
            ]
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "history",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false,
            "description": "Return historical data.",
            "x-ms-summary": "History"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "json",
              "xml"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/xref/v2/bulk_query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get historical multi-AV scan records (bulk query)",
        "description": "TCA-0103 Provides cross-reference data (AV scanner scanning information, first and last seen date-time (UTC), sample type and size, first and last scanned date, etc.) for given samples.",
        "operationId": "Get-historical-av-records-bulk",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Post Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "history",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Return historical data.",
            "x-ms-summary": "History"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "hash_type",
                          "title": "hash_type",
                          "enum": [
                            "md5",
                            "sha1",
                            "sha256"
                          ]
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/databrowser/rldata/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get file analysis (single query)",
        "description": "TCA-0104 Get the analysis results for the requested hash.",
        "operationId": "Get-file-analysis-single",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "md5, sha1 or sha256",
            "x-ms-summary": "Hash Type",
            "x-ms-url-encoding": "single",
            "enum": [
              "md5",
              "sha1",
              "sha256"
            ]
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/databrowser/rldata/bulk_query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get file analysis (bulk query)",
        "description": "TCA-0104 Get the analysis results for the requested hashes.",
        "operationId": "Get-file-analysis-bulk",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Post Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "hash_type",
                          "title": "hash_type",
                          "enum": [
                            "md5",
                            "sha1",
                            "sha256"
                          ]
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/databrowser/rldata/goodware/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get file analysis - non-malicious (single query)",
        "description": "TCA-0105 Get a response containing all public knowledge about the given non-malicious sample identified by hash.",
        "operationId": "Get-file-analysis-non-malicious-single",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "md5, sha1 or sha256",
            "x-ms-summary": "Hash Type",
            "x-ms-url-encoding": "single",
            "enum": [
              "md5",
              "sha1",
              "sha256"
            ]
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/api/databrowser/rldata/goodware/bulk_query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get file analysis - non-malicious (bulk query)",
        "description": "TCA-0105 Get a response containing all public knowledge about the given non-malicious samples identified by hash.",
        "operationId": "Get-file-analysis-non-malicious-bulk",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Post Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "hash_type",
                          "title": "hash_type",
                          "enum": [
                            "md5",
                            "sha1",
                            "sha256"
                          ]
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/dynamic/analysis/report/v1/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get dynamic analysis report (merged)",
        "operationId": "Get-dynamic-analysis-merged",
        "description": "TCA-0106 This query returns the merged analysis report for the requested sample hash.",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "sha1 only",
            "x-ms-summary": "Hash Type",
            "x-ms-url-encoding": "single",
            "enum": [
              "sha1"
            ]
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/dynamic/analysis/report/v1/query/{hash_type}/{hash_value}/latest": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get dynamic analysis report (latest)",
        "description": "TCA-0106 This query returns the latest analysis report for the requested sample hash.",
        "operationId": "Get-dynamic-analysis-latest",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "sha1 only",
            "x-ms-summary": "Hash Type",
            "x-ms-url-encoding": "single",
            "enum": [
              "sha1"
            ]
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/dynamic/analysis/report/v1/query/{hash_type}/{hash_value}/{analysis_id}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get dynamic analysis report (specific)",
        "description": "TCA-0106 This query returns a specific analysis report for the requested sample hash defined by the analysis ID.",
        "operationId": "Get-dynamic-analysis-specific",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "sha1 only",
            "x-ms-summary": "Hash Type",
            "x-ms-url-encoding": "single",
            "enum": [
              "sha1"
            ]
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "analysis_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the dynamic analysis report.",
            "x-ms-summary": "Analysis Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/dynamic/analysis/report/v1/archive/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "operationId": "Get-dynamic-analysis-archive-merged",
        "summary": "Get dynamic analysis report for an archive (merged)",
        "description": "TCA-0106 Returns the merged dynamic analysis report for each file within the archive.",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "sha1 only",
            "x-ms-summary": "Hash Type",
            "x-ms-url-encoding": "single",
            "enum": [
              "sha1"
            ]
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/dynamic/analysis/report/v1/archive/query/{hash_type}/{hash_value}/latest": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get dynamic analysis report for an archive (latest)",
        "description": "TCA-0106 Returns the most recent dynamic analysis report for each file within the archive.",
        "operationId": "Get-dynamic-analysis-archive-latest",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "sha1 only",
            "x-ms-summary": "Hash Type",
            "x-ms-url-encoding": "single",
            "enum": [
              "sha1"
            ]
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/spex/download/v2/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Download sample",
        "description": "TCA-0201 Returns the contents of a sample matching the requested hash.",
        "operationId": "Download-sample",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "md5, sha1 or sha256",
            "x-ms-summary": "Hash Type",
            "x-ms-url-encoding": "single",
            "enum": [
              "md5",
              "sha1",
              "sha256"
            ]
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/api/spex/download/v2/status/bulk_query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get sample download status",
        "description": "TCA-0201 Returns the file size of samples matching the requested hash values, but only if they are available for download. If the requested samples are not available for download, their size in the response will be returned as -1.",
        "operationId": "Get-sample-download-status",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Post Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/octet-stream",
            "description": "Needs to be application/octet-stream",
            "x-ms-summary": "Content-Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "hash_type",
                          "title": "hash_type",
                          "enum": [
                            "md5",
                            "sha1",
                            "sha256"
                          ]
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/spex/upload/{sha1_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Upload sample",
        "description": "TCA-0202 Upload a given sample identified by hash via open stream of POST data.",
        "operationId": "Upload-sample",
        "parameters": [
          {
            "name": "sha1_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "SHA1 of the sample.",
            "x-ms-summary": "Sha1 Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/octet-stream",
            "description": "Needs to be application/octet-stream",
            "x-ms-summary": "Content-Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Binary file content. Consult the API documentation for examples.",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/spex/upload/{sha1_value}/meta": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Upload sample metadata",
        "description": "TCA-0202 Upload metadata for the sample identified by hash.",
        "operationId": "Upload-sample-metadata",
        "parameters": [
          {
            "name": "sha1_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "SHA1 of the sample.",
            "x-ms-summary": "Sha1 Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "subscribe",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Subscribe to this sample's reputation data changes. Possible values are only 'data_change'",
            "x-ms-summary": "Subscribe"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/octet-stream",
            "description": "Needs to be application/octet-stream",
            "x-ms-summary": "Content-Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "XML request body. Consult the API documentation for examples.",
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/delete/sample/v1/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Delete sample (single query)",
        "description": "TCA-0204 Deletes a single sample defined by the hash value.",
        "operationId": "Delete-sample-single",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "md5, sha1 or sha256",
            "x-ms-summary": "Hash Type",
            "x-ms-url-encoding": "single",
            "enum": [
              "md5",
              "sha1",
              "sha256"
            ]
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "delete_on",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "When the sample will be deleted. Expressed in UNIX timestamp format.",
            "x-ms-summary": "Delete On"
          }
        ]
      }
    },
    "/api/delete/sample/v1/bulk_query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "delete": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Delete samples (bulk query)",
        "operationId": "Delete-samples-bulk",
        "description": "TCA-0204 Deletes multiple samples at once defined by the list of hash values in the request payload.",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "json",
              "xml"
            ],
            "x-ms-summary": "Post Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "hash_type",
                          "title": "hash_type",
                          "enum": [
                            "md5",
                            "sha1",
                            "sha256"
                          ]
                        },
                        "delete_on": {
                          "type": "string",
                          "description": "When the sample will be deleted. Expressed in UNIX timestamp format."
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/rescan/v1/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Reanalyze sample (single query)",
        "description": "TCA-0205 Sends a sample defined by a hash for rescanning.",
        "operationId": "Reanalyze-sample-single",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "md5, sha1 or sha256",
            "x-ms-summary": "Hash Type",
            "x-ms-url-encoding": "single",
            "enum": [
              "md5",
              "sha1",
              "sha256"
            ]
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/api/rescan/v1/bulk_query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Reanalyze samples (bulk query)",
        "operationId": "Reanalyze-sample-bulk",
        "description": "TCA-0205 Sends multiple samples defined by hashes for rescanning.",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Post Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "hash_type",
                          "title": "hash_type",
                          "enum": [
                            "md5",
                            "sha1",
                            "sha256"
                          ]
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/subscription/data_change/v1/bulk_query/subscribe/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Subscribe to reputation changes",
        "description": "TCA-0206 Subscribes to a list of samples for which the changed sections (if there are any) will be delivered in the Data Change Feed.",
        "operationId": "Subscribe-to-reputation-changes",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Post Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "hash_type",
                          "title": "hash_type",
                          "enum": [
                            "md5",
                            "sha1",
                            "sha256"
                          ]
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/subscription/data_change/v1/bulk_query/unsubscribe/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Unsubscribe from reputation changes",
        "description": "TCA-0206 Unsubscribes from a list of samples that the user was previously subscribed to.",
        "operationId": "Unsubscribe-from-reputation-changes",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Post Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "hash_type",
                          "title": "hash_type",
                          "enum": [
                            "md5",
                            "sha1",
                            "sha256"
                          ]
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/feed/data_change/v3/start/{time_format}/{time_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "put": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Set start time for reputation changes",
        "description": "TCA-0206 Sets the starting timestamp for the reputation data changes feed.",
        "operationId": "Set-start-time-for-reputation-changes",
        "parameters": [
          {
            "name": "time_format",
            "in": "path",
            "description": "Unix timestamp or YYYY-MM-DDThh:mm:ss",
            "required": true,
            "type": "string",
            "enum": [
              "timestamp",
              "utc"
            ],
            "x-ms-summary": "Time Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "time_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Time value string",
            "x-ms-summary": "Time Value",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/api/feed/data_change/v3/pull": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get reputation data changes",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json",
              "tsv"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "events",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "List one or more sections separated with comma: xref, sample_available, malware_presence, sample_became_shareable",
            "x-ms-summary": "events"
          },
          {
            "name": "limit",
            "description": "Number of records to return in the response.",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Limit"
          }
        ],
        "description": "TCA-0206 Returns the next recordset with samples to which the user is subscribed with the starting point defined using the \"Set start time for reputation changes\" action.",
        "operationId": "Get-reputation-data-changes"
      }
    },
    "/api/feed/data_change/v3/query/{time_format}/{time_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get continuous reputation data changes",
        "operationId": "Get-continuous-reputation-data-changes",
        "description": "TCA-0206 Returns a recordset with samples that the user is subscribed to from the requested timestamp onwards. The timestamp is defined in the request itself.",
        "parameters": [
          {
            "name": "time_format",
            "description": "Unix timestamp or YYYY-MM-DDThh:mm:ss",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "timestamp",
              "utc"
            ],
            "x-ms-summary": "Time Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "time_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Time value string",
            "x-ms-summary": "Time Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "events",
            "description": "Sections that should be included in the response. Consult the API documentation for possible options.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Events"
          }
        ]
      }
    },
    "/api/dynamic/analysis/analyze/v1/query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Submit sample for dynamic analysis",
        "description": "TCA-0207 Submits a sample for dynamic analysis.",
        "operationId": "Submit-sample-for-dynamic-analysis",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Post Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "sha1": {
                      "type": "string",
                      "description": "Select either SHA1 or url parameter for sample analysis"
                    },
                    "url": {
                      "type": "string",
                      "description": "Select either SHA1 or url parameter for sample analysis"
                    },
                    "platform": {
                      "type": "string",
                      "description": "Platform which will be used for dynamic analysis. Consult the API documentation for possible options."
                    },
                    "response_format": {
                      "type": "string",
                      "description": "json or xml",
                      "default": "json",
                      "enum": [
                        "xml",
                        "json"
                      ]
                    },
                    "optional_parameters": {
                      "type": "string",
                      "description": "Consult the API documentation for possible options."
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/dynamic/analysis/analyze/v1/archive/query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Submit archive for dynamic analysis",
        "description": "TCA-0207 Submits an archive for dynamic anaylsis.",
        "operationId": "Submit-archive-for-dynamic-analysis",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Post Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "sha1": {
                      "type": "string",
                      "description": "sha1"
                    },
                    "platform": {
                      "type": "string",
                      "description": "Platform which will be used for dynamic analysis. Consult the API documentation for possible options."
                    },
                    "response_format": {
                      "type": "string",
                      "description": "response_format"
                    },
                    "optional_parameters": {
                      "type": "string",
                      "description": "Consult the API documentation for possible options."
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/uri_index/v1/query/{uri_sha1}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "uri_sha1",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "SHA1 string representation of the URI",
            "x-ms-summary": "Uri Sha1",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "classification",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Return only hashes with this classification.",
            "x-ms-summary": "Classification"
          }
        ],
        "summary": "URI to hash search by URI SHA-1 (first page)",
        "description": "TCA-0401 Returns hashes related to the provided URI. This request accepts an URI in the form of a SHA-1 string and returns only the first page of results.",
        "operationId": "URI-to-hash-search-sha1-first-page"
      }
    },
    "/api/uri_index/v1/query/{uri_sha1}/{next_page_sha1}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "uri_sha1",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "SHA1 string representation of the URI",
            "x-ms-summary": "Uri Sha1",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "next_page_sha1",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "SHA1 of the next page of results.",
            "x-ms-summary": "Next Page Sha1",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "classification",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Return only hashes with this classification.",
            "x-ms-summary": "Classification"
          }
        ],
        "summary": "URI to hash search by URI SHA-1 (with page parameter)",
        "description": "TCA-0401 Returns hashes related to the provided URI. This request accepts an URI in the form of a SHA-1 string and returns the requested page of results.",
        "operationId": "URI-to-hash-search-sha1-paging"
      }
    },
    "/api/uri_index/v1/query": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "API Call expect explicit content type",
            "x-ms-summary": "Content Type Header"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "uri"
                        },
                        "next_page_sha1": {
                          "type": "string",
                          "description": "next_page_sha1"
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ],
        "summary": "URI to hash search by URI string (with page parameter)",
        "description": "TCA-0401 Returns hashes related to the provided URI. This request accepts an URI string and returns the requested page of results.",
        "operationId": "URI-to-hash-search-text-paging"
      }
    },
    "/api/networking/url/v1/report/query/{format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get the URL report",
        "description": "TCA-0403 Returns the classification and reputation report for the submitted URL.",
        "operationId": "Get-URL-report",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "url"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "response_format",
                          "enum": [
                            "json",
                            "xml"
                          ]
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/networking/url/v1/downloaded_files/query/{format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "List files from a URL",
        "operationId": "List-files-from-URL",
        "description": "TCA-0403 Retrieve a list of files downloaded from the submitted URL.",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "url"
                        },
                        "analysis_id": {
                          "type": "string",
                          "description": "Mutally exlusive with 'last_analysis'"
                        },
                        "last_analysis": {
                          "type": "boolean",
                          "description": "Return last analysis. Mutally exlusive with 'analysis_id'"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "xml or json",
                          "default": "json",
                          "enum": [
                            "xml",
                            "json"
                          ]
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Number of results per page."
                        },
                        "extended": {
                          "type": "boolean",
                          "description": "Return extended results."
                        },
                        "classification": {
                          "type": "string",
                          "description": "Return only samples with this classification."
                        },
                        "page": {
                          "type": "string",
                          "description": "Next page string."
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/networking/url/v1/notifications/query/latest": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get the latest URL analyses (first page)",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Response format.",
            "required": false,
            "type": "string",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results returned per page.",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Limit"
          }
        ],
        "description": "TCA-0403 Returns the latest completed URL analyses. This action only returns the first page of results.",
        "operationId": "Get-latest-URL-analyses-first"
      }
    },
    "/api/networking/url/v1/notifications/query/latest/page/{page}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get the latest URL analyses (with page parameter)",
        "description": "TCA-0403 Returns the latest completed URL analyses. This action returns the requested page of results.",
        "operationId": "Get-latest-URL-analyses-paging",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Page marker for returning results.",
            "x-ms-summary": "Page",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "limit",
            "description": "Maximum number of results returned per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Limit"
          }
        ]
      }
    },
    "/api/networking/url/v1/notifications/query/from/{time_format}/{start_time}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get URL analyses from requested time (first page)",
        "description": "TCA-0403 Returns a list of completed URL analyses, starting from the requested time. This action only returns the first page of results.",
        "operationId": "Get-timestamped-URL-analyses-first",
        "parameters": [
          {
            "name": "time_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "timestamp or utc",
            "enum": [
              "timestamp",
              "utc"
            ],
            "x-ms-summary": "Time Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "start_time",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unix timestamp or YYYY-MM-DDThh:mm:ss",
            "x-ms-summary": "Start Time",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Maximum number of results returned per page.",
            "x-ms-summary": "Limit"
          }
        ]
      }
    },
    "/api/networking/url/v1/notifications/query/from/{time_format}/{start_time}/page/{page}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "time_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "timestamp or utc",
            "enum": [
              "timestamp",
              "utc"
            ],
            "x-ms-summary": "Time Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "start_time",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unix timestamp or YYYY-MM-DDThh:mm:ss",
            "x-ms-summary": "Start Time",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "page",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Page marker for returning results.",
            "x-ms-summary": "Page",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Maximum number of results returned per page.",
            "x-ms-summary": "Limit"
          }
        ],
        "summary": "Get URL analyses from requested time (with page parameter)",
        "description": "TCA-0403 Returns a list of completed URL analyses, starting from the requested time. This action returns the requested page of results.",
        "operationId": "Get-timestamped-URL-analyses-paging"
      }
    },
    "/api/networking/url/v1/analyze/query/{format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Analyze URL",
        "description": "TCA-0404 Requests an analysis of the submitted URL.",
        "operationId": "Analyze-URL",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "url"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "response_format",
                          "default": "json",
                          "enum": [
                            "xml",
                            "json"
                          ]
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/networking/domain/report/v1/query/{format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get the domain report",
        "description": "TCA-0405 Returns threat intelligence data for the submitted domain.",
        "operationId": "Get-domain-report",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "domain": {
                          "type": "string",
                          "description": "domain"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "response_format",
                          "default": "json",
                          "enum": [
                            "xml",
                            "json"
                          ]
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/networking/domain/downloaded_files/v1/query/{format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "List files from a domain",
        "description": "TCA-0405 Retrieve a list of files downloaded from the submitted domain.",
        "operationId": "List-files-from-domain",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "domain": {
                          "type": "string",
                          "description": "domain"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "response_format",
                          "default": "json",
                          "enum": [
                            "xml",
                            "json"
                          ]
                        },
                        "limit": {
                          "type": "integer",
                          "format": "int32",
                          "description": "limit"
                        },
                        "extended": {
                          "type": "boolean",
                          "description": "extended"
                        },
                        "classification": {
                          "type": "string",
                          "description": "classification"
                        },
                        "page": {
                          "type": "string",
                          "description": "page"
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/networking/domain/urls/v1/query/{format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "description": "TCA-0405 Provides a list of URLs associated with the requested domain.",
        "summary": "Get URL-s from domain",
        "operationId": "Get-URL-from-domain",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "domain": {
                          "type": "string",
                          "description": "domain"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "json or xml",
                          "default": "json",
                          "enum": [
                            "xml",
                            "json"
                          ]
                        },
                        "limit": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of results per page."
                        },
                        "page": {
                          "type": "string",
                          "description": "Next page string."
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/networking/domain/resolutions/v1/query/{format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get domain resolutions",
        "description": "TCA-0405 Provides a list of domain-to-IP mappings for the requested domain.",
        "operationId": "Get-domain-resolutions",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "domain": {
                          "type": "string",
                          "description": "domain"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "json or xml",
                          "default": "json",
                          "enum": [
                            "xml",
                            "json"
                          ]
                        },
                        "limit": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of results per page."
                        },
                        "page": {
                          "type": "string",
                          "description": "Next page string."
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/networking/domain/related_domains/v1/query/{format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get domain related domains",
        "description": "TCA-0405 Provides a list of domains that have the same top parent domain as the requested domain.",
        "operationId": "Get-domain-related-domains",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "domain": {
                          "type": "string",
                          "description": "domain"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "json or xml",
                          "default": "json",
                          "enum": [
                            "xml",
                            "json"
                          ]
                        },
                        "limit": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of results per page."
                        },
                        "page": {
                          "type": "string",
                          "description": "Next page string."
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/networking/ip/report/v1/query/{format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get the IP address report",
        "operationId": "Get-IP-address-report",
        "description": "TCA-0406 Returns threat intelligence data for the submitted IP.",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "ip": {
                          "type": "string",
                          "description": "ip"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "json or xml",
                          "default": "json",
                          "enum": [
                            "xml",
                            "json"
                          ]
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/networking/ip/downloaded_files/v1/query/{format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "List files from an IP address",
        "description": "TCA-0406 Retrieve a list of files downloaded from the submitted IP address.",
        "operationId": "List-files-from-IP-address",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "ip": {
                          "type": "string",
                          "description": "ip"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "json or xml",
                          "default": "json",
                          "enum": [
                            "xml",
                            "json"
                          ]
                        },
                        "limit": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of results per page."
                        },
                        "extended": {
                          "type": "boolean",
                          "description": "Return extended results."
                        },
                        "classification": {
                          "type": "string",
                          "description": "Return results with this classification."
                        },
                        "page": {
                          "type": "string",
                          "description": "Next page string."
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/networking/ip/urls/v1/query/{format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get URL-s from IP address",
        "description": "TCA-0406 Provides a list of URL-s associated with the requested IP.",
        "operationId": "Get-URL-from-IP-address",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "ip": {
                          "type": "string",
                          "description": "ip"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "json or xml",
                          "default": "json",
                          "enum": [
                            "xml",
                            "json"
                          ]
                        },
                        "limit": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of results per page."
                        },
                        "page": {
                          "type": "string",
                          "description": "Next page string."
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/networking/ip/resolutions/v1/query/{format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get IP address resolutions",
        "description": "TCA-0406 Provides a list of IP-to-domain mappings for the specified IP address.",
        "operationId": "Get-IP-address-resolutions",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Request format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "ip": {
                          "type": "string",
                          "description": "ip"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "json or xml",
                          "default": "json",
                          "enum": [
                            "xml",
                            "json"
                          ]
                        },
                        "limit": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of results per page."
                        },
                        "page": {
                          "type": "string",
                          "description": "Next page string."
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/customer_usage/v1/usage/daily": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Daily API usage (current user)",
        "description": "TCA-9999 Returns information about daily service usage for the TitaniumCloud account that sent the request.",
        "operationId": "Daily-API-usage-user",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specific date. YYYY-MM-DD format. Mutually exclusive with 'from' and 'to' parameters.",
            "x-ms-summary": "Date"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start date. YYYY-MM-DD format. Needs to be used together with the 'to' parameter. Mutually exclusive with the 'date' parameter.",
            "x-ms-summary": "From"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End date. YYYY-MM-DD format. Needs to be used together with the 'from' parameter. Mutually exclusive with the 'date' parameter.",
            "x-ms-summary": "To"
          }
        ]
      }
    },
    "/api/customer_usage/v1/usage/company/daily": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specific date. YYYY-MM-DD format. Mutually exclusive with 'from' and 'to' parameters.",
            "x-ms-summary": "Date"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start date. YYYY-MM-DD format. Needs to be used together with the 'to' parameter. Mutually exclusive with the 'date' parameter.",
            "x-ms-summary": "From"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End date. YYYY-MM-DD format. Needs to be used together with the 'from' parameter. Mutually exclusive with the 'date' parameter.",
            "x-ms-summary": "To"
          }
        ],
        "summary": "Daily API usage (company)",
        "description": "TCA-9999 Returns information about combined daily service usage for all users in the company.",
        "operationId": "Daily-API-usage-company"
      }
    },
    "/api/customer_usage/v1/usage/monthly": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Monthly API usage (current user)",
        "operationId": "Monthly-API-usage-user",
        "description": "TCA-9999 Returns information about monthly service usage for the TitaniumCloud account that sent the request.",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specific month. YYYY-MM format. Mutually exclusive with 'from' and 'to' parameters.",
            "x-ms-summary": "Month"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start month. YYYY-MM format. Needs to be used together with the 'to' parameter. Mutually exclusive with the 'month' parameter.",
            "x-ms-summary": "From"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End month. YYYY-MM format. Needs to be used together with the 'from' parameter. Mutually exclusive with the 'month' parameter.",
            "x-ms-summary": "To"
          }
        ]
      }
    },
    "/api/customer_usage/v1/usage/company/monthly": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Monthly API usage (company)",
        "operationId": "Monthly-API-usage-company",
        "description": "TCA-9999 Returns information about combined monthly service usage for all users in the company.",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specific month. YYYY-MM format. Mutually exclusive with 'from' and 'to' parameters.",
            "x-ms-summary": "Month"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start month. YYYY-MM format. Needs to be used together with the 'to' parameter. Mutually exclusive with the 'month' parameter.",
            "x-ms-summary": "From"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End month. YYYY-MM format. Needs to be used together with the 'from' parameter. Mutually exclusive with the 'month' parameter.",
            "x-ms-summary": "To"
          }
        ]
      }
    },
    "/api/customer_usage/v1/usage/date_range": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Date range API usage (current user)",
        "operationId": "Date-range-API-usage-user",
        "description": "TCA-9999 Returns total usage for all product licenses with a fixed quota over a single date range for the current user.",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/customer_usage/v1/usage/company/date_range": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Date range API usage (company)",
        "description": "TCA-9999 Returns information about combined date range service usage for all users in the company.",
        "operationId": "Date-range-API-usage-company",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/customer_usage/v1/usage/yara": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get active YARA rulesets",
        "description": "TCA-9999 Returns information about the number of active YARA rulesets for the TitaniumCloud account that sent the request.",
        "operationId": "Get-active-YARA-rulesets",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/customer_usage/v1/limits": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get API quota limits (current user)",
        "description": "TCA-9999 Returns current quota limits for APIs accessible to the authenticated user.",
        "operationId": "Get-API-quota-limits-user",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/customer_usage/v1/limits/company": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Get API quota limits (company)",
        "operationId": "Get-API-quota-limits-company",
        "description": "TCA-9999 Returns current quota limits for APIs available to all users belonging to the authenticated user’s company.",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/networking/reputation/v1/query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed, or the specified time value is out of scope."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include the HTTP Authentication header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request URI."
          },
          "413": {
            "description": "The request contained more than the maximum allowed amount of network locations (100)."
          },
          "419": {
            "description": "Too Many Requests. The daily/monthly quota has been reached, or the API rate limit exceeded (in this case, the service will return an additional \"Rate limit exceeded\" error message)"
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Network Reputation API",
        "description": "TCA-0407 Provides information regarding the reputation of requested URL, domain or IP Address.",
        "operationId": "Network-Reputation-Api",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "XML or JSON",
            "x-ms-summary": "Post format",
            "x-ms-url-encoding": "single",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "network_locations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "network_location": {
                                "type": "string",
                                "description": "List of network locations (url, ip, domain)",
                                "title": "Network Location"
                              },
                              "type": {
                                "type": "string",
                                "description": "url or ip or domain",
                                "title": "type",
                                "enum": [
                                  "url",
                                  "ip",
                                  "domain"
                                ]
                              }
                            },
                            "required": [
                              "network_location"
                            ]
                          },
                          "description": "network_locations"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "json or xml",
                          "title": "response_format",
                          "default": "json",
                          "enum": [
                            "json",
                            "xml"
                          ]
                        }
                      },
                      "description": "query",
                      "required": [
                        "network_locations"
                      ]
                    }
                  },
                  "description": "rl",
                  "required": [
                    "query"
                  ]
                }
              },
              "required": [
                "rl"
              ]
            },
            "x-ms-summary": "body"
          }
        ]
      }
    },
    "/api/networking/user_override/v1/query/list_overrides": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a HTTP Authentication header field containing a  challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "429": {
            "description": "Too Many Requests. The daily/monthly quota has been reached, or the API rate limit exceeded (in this case, the service will return an additional \"Rate limit exceeded\" error message)"
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "List User Override",
        "description": "TCA-0408 List user overrides for network locations",
        "operationId": "List-User-Override",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "default": "json",
            "description": "Optional parameter that allows choosing the response format. Supported values: xml, json",
            "x-ms-summary": "Format"
          },
          {
            "name": "next_network_location",
            "in": "query",
            "type": "string",
            "description": "Optional parameter used for pagination. To get the next page of results from the API, use the next_network_location value from the response in place of this parameter in a new request. When the parameter is not included in the  request, only the first page of results is returned.",
            "x-ms-summary": "Next Network Location"
          }
        ]
      }
    },
    "/api/networking/user_override/v1/query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include the HTTP authentication header field containing a  challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "413": {
            "description": "The request contained more than the maximum allowed amount of network locations (100)."
          },
          "419": {
            "description": "Too Many Requests. The daily/monthly quota has been reached, or the API rate limit exceeded (in this case, the service will return an additional \"Rate limit exceeded\" error message)"
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Network Reputation User Override",
        "description": "TCA-0408 Enables URL classification overrides.",
        "operationId": "Network-Reputation-User-Override",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "XML or JSON",
            "enum": [
              "json",
              "xml"
            ],
            "x-ms-summary": "Post format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "user_override": {
                          "type": "object",
                          "properties": {
                            "override_network_locations": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "network_location": {
                                    "type": "string",
                                    "description": "The overridden URL (domain, ip, url).",
                                    "title": "Network Location"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of URI. Only url is supported.",
                                    "title": "type",
                                    "enum": [
                                      "url"
                                    ]
                                  },
                                  "classification": {
                                    "type": "string",
                                    "description": "Assigned classification. Must conform to the ReversingLabs naming standard",
                                    "title": "classification"
                                  },
                                  "categories": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "categories"
                                  }
                                },
                                "required": [
                                  "classification",
                                  "network_location",
                                  "type"
                                ]
                              },
                              "description": "override_network_locations"
                            }
                          },
                          "description": "user_override",
                          "required": [
                            "override_network_locations"
                          ]
                        }
                      },
                      "description": "query",
                      "required": [
                        "user_override"
                      ]
                    },
                    "response_format": {
                      "type": "string",
                      "description": "json or xml",
                      "title": "response_format",
                      "default": "json"
                    }
                  },
                  "description": "rl",
                  "required": [
                    "query"
                  ]
                }
              },
              "required": [
                "rl"
              ]
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/dynamic/analysis/report/v1/query/url/sha1/{sha1_value}/{specific_report}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "sha1_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Must be a hash string corresponding to the defined hash type.",
            "x-ms-summary": "SHA1 Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "specific_report",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "analysis_id for which report is retrieved",
            "x-ms-summary": "analysis_id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-summary": "Content-Type"
          }
        ],
        "summary": "Get specific dynamic analysis report for url (SHA1)",
        "description": "TCA-0106 Returns the specific dynamic analysis report for requested url",
        "operationId": "Get-specific-dynamic-analysis-report-for-url-sha1"
      }
    },
    "/api/dynamic/analysis/report/v1/query/url/base64/{base64_value}/{specific_report}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "base64_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Must be a base64 string corresponding of the submitted url.",
            "x-ms-summary": "Base64 Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "specific_report",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "analysis_id for which report is retrieved",
            "x-ms-summary": "analysis_id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-summary": "Content-Type"
          }
        ],
        "summary": "Get specific dynamic analysis report for url (base64)",
        "description": "TCA-0106 Returns the specific dynamic analysis report for requested url",
        "operationId": "Get-specific-dynamic-analysis-report-for-url-base64"
      }
    },
    "/api/dynamic/analysis/report/v1/query/url/sha1/{sha1_value}/latest": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "sha1_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Must be a sha1 string corresponding to the defined hash type.",
            "x-ms-summary": "Sha1 Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-summary": "Content-Type"
          }
        ],
        "summary": "Get dynamic analysis report for url (sha1)",
        "description": "TCA-0106 Returns dynamic analysis reports for requested url",
        "operationId": "Get-dynamic-analysis-report-for-url-sha1"
      }
    },
    "/api/dynamic/analysis/report/v1/query/url/base64/{base64_value}/latest": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "base64_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Must be a string corresponding to the base64 encoding of url.",
            "x-ms-summary": "Base64 Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-summary": "Content-Type"
          }
        ],
        "summary": "Get dynamic analysis report for url (base64)",
        "description": "TCA-0106 Returns dynamic analysis reports for requested url",
        "operationId": "Get-dynamic-analysis-report-for-url-base64"
      }
    },
    "/api/yara/admin/v1/ruleset/{ruleset_name}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "ruleset_name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Yara ruleset name",
            "x-ms-summary": "Yara ruleset name",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get YARA Ruleset information",
        "description": "TCA-0303 API Returns information about created user YARA ruleset",
        "operationId": "Get-yara-ruleset-information"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "ruleset_name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Yara ruleset name",
            "x-ms-summary": "Yara ruleset name",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Delete YARA Ruleset",
        "description": "TCA-0303 Allows the authenticated user to delete YARA rulesets in ReversingLabs TitaniumCloud",
        "operationId": "Delete-yara-ruleset"
      }
    },
    "/api/yara/admin/v1/ruleset/{ruleset_name}/text": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "ruleset_name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Yara ruleset name",
            "x-ms-summary": "Yara ruleset name",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get YARA Ruleset Text",
        "description": "TCA-0303 API Returns text for specified YARA rule",
        "operationId": "Get-yara-ruleset-text"
      }
    },
    "/api/feed/yara/v1/query/{time_format}/{time_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "time_format",
            "description": "Unix timestamp or YYYY-MM-DDThh:mm:ss",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "timestamp",
              "utc"
            ],
            "x-ms-summary": "Time Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "time_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Time value string",
            "x-ms-summary": "Time Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ],
        "summary": "Get YARA Matches Feed",
        "description": "TCA-0303 Returns a recordset of YARA ruleset matches in the requested time range",
        "operationId": "Get-yara-matches-feed"
      }
    },
    "/api/yara/admin/v1/ruleset": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Create YARA Ruleset",
        "description": "TCA-0303 Allows the authenticated user to create YARA rulesets in ReversingLabs TitaniumCloud",
        "operationId": "Create-yara-ruleset",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ruleset_name": {
                  "type": "string",
                  "description": "ruleset_name",
                  "title": "Specifies the name of the YARA ruleset"
                },
                "text": {
                  "type": "string",
                  "description": "text",
                  "title": "Configuration of the YARA rule"
                },
                "sample_available": {
                  "type": "boolean",
                  "description": "sample_available",
                  "title": "sample_available",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "ruleset_name",
                "sample_available",
                "text"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-summary": "Content-Type"
          }
        ]
      }
    },
    "/api/yara/admin/v1/ruleset/{ruleset_name}/status-retro-hunt": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "ruleset_name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Yara ruleset name",
            "x-ms-summary": "Yara ruleset name",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get YARA Retro Hunting Status",
        "description": "TCA-0319 Allows users to check status of their own YARA retro hunts and retroactively match YARA rules against files from ReversingLabs TitaniumCloud",
        "operationId": "Get-yara-retro-hunting-status"
      }
    },
    "/api/feed/yara/retro/v1/query/{time_format}/{time_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "parameters": [
          {
            "name": "time_format",
            "description": "Unix timestamp or YYYY-MM-DDThh:mm:ss",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "timestamp",
              "utc"
            ],
            "x-ms-summary": "Time Format",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "time_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Time value string",
            "x-ms-summary": "Time Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ],
        "summary": "Get YARA Retro Matches Feed",
        "description": "TCA-0319 Returns a recordset of YARA ruleset matches in the requested time range for the authenticated user.",
        "operationId": "Get-yara-retro-matches-feed"
      }
    },
    "/api/yara/admin/v1/ruleset/start-retro-hunt": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Start YARA Retro Hunt",
        "description": "TCA-0319 Allows users to start their own YARA retro hunts and retroactively match YARA rules against files from ReversingLabs TitaniumClou",
        "operationId": "Start-yara-retro-hunt",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ruleset_name": {
                  "type": "string",
                  "description": "ruleset_name",
                  "title": "Specifies the name of the YARA ruleset for which the user is requesting an action from the service"
                }
              },
              "required": [
                "ruleset_name"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-summary": "Content-Type"
          }
        ]
      }
    },
    "/api/yara/admin/v1/ruleset/cancel-retro-hunt": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Cancel YARA Retro Hunt",
        "description": "TCA-0319 Allows users to cancel started YARA retro hunts.",
        "operationId": "Cancel-yara-retro-hunt",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ruleset_name": {
                  "type": "string",
                  "description": "ruleset_name",
                  "title": "Specifies the name of the YARA ruleset for which the user is requesting an action from the service"
                }
              },
              "required": [
                "ruleset_name"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-summary": "Content-Type"
          }
        ]
      }
    },
    "/api/search/v1/query": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Advanced Search",
        "description": "TCA-0320 Allows users to find samples in ReversingLabs TitaniumCloud by combining various search keywords",
        "operationId": "Advanced-search",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "field name",
                        "title": "name"
                      },
                      "criteria": {
                        "type": "string",
                        "description": "operators from enum",
                        "title": "criteria",
                        "enum": [
                          "eq",
                          "neq",
                          "gt",
                          "gte",
                          "lt",
                          "lte",
                          "range",
                          "in",
                          "nin"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "string or object",
                        "title": "value"
                      }
                    },
                    "required": [
                      "name",
                      "criteria",
                      "value"
                    ]
                  },
                  "description": "query"
                },
                "format": {
                  "type": "string",
                  "description": "specifies the format for the response",
                  "title": "format",
                  "enum": [
                    "json",
                    "xml"
                  ]
                },
                "records_per_page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "records_per_page",
                  "title": "records_per_page",
                  "default": 1000
                },
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "page",
                  "default": 1
                },
                "sort": {
                  "type": "string",
                  "description": "Sort by one of these fields: sha1, firstsee, threatname, sampletype, filecount, size. Append asc for ascending and desc for descending order. E.g. threatname asc.",
                  "title": "sort",
                  "default": "firstseen desc"
                }
              },
              "required": [
                "query"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-summary": "Content-Type"
          }
        ]
      }
    },
    "/api/group_by_rha1/v1/query/{rha1_type}/{hash_value}/{next_page_sha1}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Group By RHA1 Single Query",
        "description": "TCA-0321 This query returns a list containing all SHA1 hashes of functionally similar samples for the requested SHA1 sample hash and RHA1 precision level.",
        "operationId": "Group-by-rha1-single-query",
        "parameters": [
          {
            "name": "rha1_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "This parameter accepts one of the following values: pe01, elf01, machO01, pe02",
            "x-ms-summary": "rha1_type",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The value must be a valid SHA1 hash of the sample for which the user is requesting a list of functionally similar samples",
            "x-ms-summary": "hash_value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "next_page_sha1",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "To get the next page of results from the API, use the next_page_sha1 value from the response in place of this parameter in a new request. When the parameter is not included in the request, only the first page of results is returned.",
            "x-ms-summary": "next_page_sha1",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Content-Type",
            "x-ms-summary": "Content-Type"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Set the response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "limit",
            "description": "Number of records to return in the response.",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 1000,
            "x-ms-summary": "Limit"
          },
          {
            "name": "extended",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Show extended results.",
            "default": false,
            "x-ms-summary": "Extended"
          },
          {
            "name": "classification",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Return only hashes with this classification.",
            "enum": [
              "known",
              "malicious",
              "suspicious",
              "unknown"
            ],
            "x-ms-summary": "Classification"
          }
        ]
      }
    },
    "/api/imphash_index/v1/query/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Import Hash Similarity",
        "operationId": "Import-hash-similarity",
        "description": "TCA-0302 Provides a list of all available SHA1 hashes for the requested import hash (imphash)",
        "parameters": [
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The value must be a valid ImpHash hash for which the user is requesting a list of SHA1 hashes",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Content-Type",
            "x-ms-summary": "Content-Type"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Set the response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/imphash_index/v1/query/{hash_value}/start_sha1/{next_page_sha1}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Import Hash Similarity paginated",
        "operationId": "Import-hash-similarity-paginated",
        "description": "TCA-0302 Provides a list of all available SHA1 hashes for the requested import hash (imphash)",
        "parameters": [
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The value must be a valid ImpHash hash for which the user is requesting a list of SHA1 hashes",
            "x-ms-summary": "Hash Value",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "next_page_sha1",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The value must be a valid hash for which the user is requesting a list of SHA1 hashes",
            "x-ms-summary": "Next page sha1",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Content-Type",
            "x-ms-summary": "Content-Type"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Set the response format.",
            "default": "json",
            "enum": [
              "xml",
              "json"
            ],
            "x-ms-summary": "Format"
          }
        ]
      }
    },
    "/api/databrowser/malware_presence/user_override/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded."
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include the HTTP authentication header field containing a  challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "413": {
            "description": "The request contained more than the maximum allowed amount of network locations (100)."
          },
          "419": {
            "description": "Too Many Requests. The daily/monthly quota has been reached, or the API rate limit exceeded (in this case, the service will return an additional \"Rate limit exceeded\" error message)"
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "File Reputation User Override",
        "description": "TCA-0102 Service enables sample classification overrides.",
        "operationId": "File-reputation-user-override",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "XML or JSON",
            "x-ms-summary": "Post format",
            "enum": [
              "json",
              "xml"
            ],
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "override_samples": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                                "sha1": {
                                "type": "string",
                                "description": "Provide values for md5, sha1, sha256",
                                "title": "sha1"
                              },
                              "md5": {
                                "type": "string",
                                "description": "Provide values for md5, sha1, sha256",
                                "title": "md5"
                              },
                              "sha256": {
                                "type": "string",
                                "description": "Provide values for md5, sha1, sha256",
                                "title": "sha256"
                              },
                              "status": {
                                "type": "string",
                                "description": "options: MALICIOUS, SUSPICIOUS, KNOWN. For KNOWN status optional trust_factor. For MALICIOUS/SUSPICIOUS optional threat_name, threat_level",
                                "title": "status"
                              },
                              "trust_factor": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Allowed as optional parameter for KNOWN status option",
                                "title": "trust_factor"
                              },
                              "threat_level": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Allowed as optional parameter for MALICIOUS and SUSPICIOUS status option",
                                "title": "threat_level"
                              },
                              "threat_name": {
                                "type": "string",
                                "description": "Allowed as optional parameter for MALICIOUS and SUSPICIOUS status option",
                                "title": "threat_name"
                              }
                            }
                          },
                          "description": "override_samples"
                        },
                        "remove_override": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "sha1": {
                                "type": "string",
                                "description": "sha1"
                              },
                              "md5": {
                                "type": "string",
                                "description": "md5",
                                "title": ""
                              },
                              "sha256": {
                                "type": "string",
                                "description": "sha256"
                              }
                            }
                          },
                          "description": "remove_override"
                        }
                      },
                      "description": "query"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/databrowser/malware_presence/user_override/list_hashes/{hash_type}": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "operationId": "File-reputation-list-user-overrides",
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "hash_type",
            "x-ms-summary": "Specifies which hash type will be used in the request (md5, sha1, sha256)",
            "x-ms-url-encoding": "single",
            "enum": [
              "md5",
              "sha1",
              "sha256"
            ]
          },
          {
            "name": "start_hash",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The format must correspond to the one defined with the hash_type parameter.",
            "x-ms-summary": "start_hash"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "json",
            "description": "Supported values: json, xml",
            "x-ms-summary": "format",
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "summary": "File Reputation List User Overrides",
        "description": "TCA-0102 The List File User Overrides Query"
      }
    }
  },
  "definitions": {},
  "parameters": {
    "user-agent": {
      "name": "User-Agent",
      "in": "header",
      "required": true,
      "type": "string",
      "default": "ReversingLabs Azure Connector TitaniumCloud v1.4.0",
      "x-ms-visibility": "internal"
    }
  },
  "responses": {},
  "securityDefinitions": {
    "basic-auth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic-auth": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.reversinglabs.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.reversinglabs.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Security"
    }
  ]
}
