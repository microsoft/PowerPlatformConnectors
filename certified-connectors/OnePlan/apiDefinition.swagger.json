{
  "swagger": "2.0",
  "info": {
    "title": "OnePlan",
    "description": "OnePlan offers an AI-enabled Strategic Portfolio, Financial, Resource and Work Management Platform that fits the needs of every organization. OnePlan connects with Microsoft Project, Microsoft Planner, Azure DevOps, Jira, Smartsheet and more for a complete view into all work across the enterprise.",
      "termsOfService": "https://oneplan.ai/terms/",
      "contact": {
         "name": "OnePlan Support",
         "url": "https://support.oneplan.ai/",
         "email": "support@oneplan.ai"
      },
    "version": "1.0"
  },
  "host": "my.oneplan.ai",
  "basePath": "/api",
  "schemes": ["https"],
  "consumes": [],
  "produces": [],
  "paths": {
    "/workplan/{id}/flow/": {
      "get": {
        "summary": "Loads a plan and returns built in and custom fields by Plan ID",
        "operationId": "GetPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "workplan id",
            "x-ms-url-encoding": "single",
            "description": "WorkPlan Id to get WorkPlan info of"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DynamicResponseGetListSchema"
            }
          }
        },
        "description": "Get WorkPlan"
      }
    },
    "/workplan/": {
      "post": {
        "summary": "Creates a new WorkPlan in OnePlan",
        "operationId": "CreatePlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IntegrationPost",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePlanReqMine"
            },
            "x-ms-summary": "WorkPlan Body",
            "description": "WorkPlan fields to update"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        },
        "description": "Creates a new Plan"
      }
    },
    "/integration/updateplanintegration": {
      "post": {
        "summary": "Updates plan integration information",
        "operationId": "StampMapping",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IsImport",
            "x-ms-summary": "Is an import stamp",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "description": "Is this an item coming from an external system"
          },
          {
            "name": "IntegrationPost",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlanIntegrationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          }
        },
        "description": "Updates plan integration"
      }
    },
    "/resources/GetResourceId": {
      "get": {
        "summary": "Load a resource with all resource level fields by Resource ID",
        "operationId": "GetResourceId",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Resouce name",
            "description": "name of resource to get"

          },
          {
            "name": "Email ",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "resource email",
            "description": "email of the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          }
        },
        "description": "Allows you to pass either an email or name to get the id of that resource back"
      }
    },
    "/config/GetPlanTypeGuidByName": {
      "get": {
        "summary": "Load the plan type data by Plan Type ID",
        "operationId": "GetPlanTypeGuidByName",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "WorkPlan Name",
            "description": "Name of the workplan to search"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          }
        },
        "description": "Pass the plan type name to this action to get the plan type Id back"
      }
    },
    "/integration/getintegratedplanId": {
      "get": {
        "summary": "Gets Plan ID of the integrated plan based on Flow ID and external Item Id",
        "operationId": "GetMappedItem",
        "parameters": [
          {
            "name": "IntegrationId",
            "x-ms-summary": "Flow Id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of the flow"
          },
          {
            "name": "ExternalItemId",
            "x-ms-summary": "External Id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "External system item id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          }
        },
        "description": "Gets Plan Id of the integrated plan based on Flow ID and external Item Id"
      }
    },
    "/workplan/{id}/flow": {
      "post": {
        "summary": "Updates a plan by Plan ID. Field values must be passed in for the update",
        "operationId": "UpdatePlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "workplan id",
            "x-ms-url-encoding": "single",
            "description": "WorkPlan Id"
          },
          {
            "name": "WorkPlan",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynamicResponseGetListSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          }
        },
        "description": "Updates a plan using a plan id"
      }
    },
    "/workplan/{id}/step": {
      "post": {
        "summary": "Updates the process step value for a specific plan",
        "operationId": "StepUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "workplan id",
            "x-ms-url-encoding": "single",
            "description": "WorkPlan Id"

          },
          {
            "name": "StepName",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Step Name",
            "description": "WorkPlan Step Name"
          },
          {
            "name": "StepId",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "step id",
            "description": "workplan step id to move to"

          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DynamicResponseGetListSchema"
            }
          }
        },
        "description": "Update Process Step for a WorkPlan"
      }
    },
    "/workplan/{id}/step/approve": {
      "post": {
        "summary": "Approves a process step for a plan",
        "operationId": "Approve",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "workplan id",
            "x-ms-url-encoding": "single",
            "description": "WorkPlan Id to approve step of"

          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["Approved", "Pending", "Rejected"],
            "x-ms-summary": "approval state",
            "description": "approval state"
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "comment",
            "description": "optional comment for approval"

          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DynamicResponseGetListSchema"
            }
          }
        },
        "description": "Approve a WorkPlan Step"
      }
    },
    "/workplan/fields/flow2": {
      "get": {
        "summary": "GetFields",
        "operationId": "GetFields",
        "parameters": [],
        "x-ms-visibility": "internal",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DynamicResponseGetListSchema"
            }
          }
        }
      }
    },
    "/events/bylist/1": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name"
            },
            "Id": {
              "type": "string",
              "description": "Id"
            },
            "Values": {
              "type": "object",
              "properties": {
                "CurrentStep": {
                  "type": "string",
                  "description": "Current Step"
                },
                "NewStep": {
                  "type": "string",
                  "description": "New Step"
                },
                "LinkToPlan": {
                  "type": "string",
                  "description": "Link To Plan"
                }
              },
              "description": "Values"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          }
        },
        "description": "Events by list",
        "summary": "When a Step Changes",
        "operationId": "StepChangeTrigger",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,

            "schema": {
              "type": "object",

              "properties": {
                "EventUrl": {
                  "type": "string",
                  "description": "EventUrl",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": ""
                },
                "List": {
                  "type": "integer",
                  "description": "List",
                  "x-ms-visibility": "internal",
                  "title": "",
                  "default": 1
                },
                "Strategy": {
                  "type": "string",
                  "description": "Strategy",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "default": "@{workflow()['tags']['flowDisplayName']}"
                },
                "Triggers": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "x-ms-visibility": "internal",
                  "default": [1]
                }
              },
              "required": ["List", "Strategy", "Triggers", "EventUrl"]
            }
          }
        ]
      }
    },
    "/events/bylist/0": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "Id": {
              "type": "string",
              "description": "Id"
            },
            "Name": {
              "type": "string",
              "description": "Name"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          }
        },
        "description": "Events by List",
        "summary": "When a Plan Gets Updated",
        "operationId": "PlanUpdateTrigger",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EventUrl": {
                  "type": "string",
                  "description": "EventUrl",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": ""
                },
                "Strategy": {
                  "type": "string",
                  "description": "Strategy",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "default": "@{workflow()['tags']['flowDisplayName']}"
                },
                "Triggers": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "x-ms-visibility": "internal",
                  "default": [1]
                }
              },
              "required": ["EventUrl", "Strategy", "Triggers"]
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "DynamicResponseGetListSchema": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetFields",
        "parameters": {},
        "value-path": "properties"
      },
      "x-ms-dynamic-properties": {
        "operationId": "GetFields",
        "parameters": {
        },
        "itemValuePath": ""
      }
    },
    "CreatePlanReqMine": {
      "type": "object",
      "properties": {
        "WorkPlan": {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "x-ms-summary": "Plan Name"
            },
            "Owner": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Plan Owner"
            },
            "PlanType": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Plan Type Id"
            },
            "Fields": {
              "$ref": "#/definitions/DynamicResponseGetListSchema"
            }
          },
          "required": ["Name", "Owner", "PlanType", "Fields"]
        }
      },
      "required": ["WorkPlan"]
    },
    "PlanIntegrationRequest": {
      "type": "object",
      "properties": {
        "PlanId": {
          "type": "string",
          "description": "Unique identifier for the plan",
          "x-ms-summary": "Plan ID"
        },
        "IntegrationId": {
          "type": "string",
          "description": "Unique identifier for the integration (in our case flow ID)",
          "x-ms-summary": "Flow ID"
        },
        "ItemId": {
          "type": "string",
          "description": "The mapped item id to external system",
          "x-ms-summary": "External System Id"
        },
        "ItemUrl": {
          "type": "string",
          "description": "URL to mapped item in external system",
          "x-ms-summary": "External System URL"
        },
        "IntegrationVersion": {
          "type": "integer",
          "description": "Integration version",
          "x-ms-summary": "Integration Version",
          "x-ms-visibility": "internal",
          "default": 0
        }
      },
      "required": ["PlanId", "IntegrationId", "ItemId", "ItemUrl", "IntegrationVersion"]
    }

  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
      {
        "propertyName": "Website",
        "propertyValue": "https://oneplan.ai/"
      },
      {
        "propertyName": "Privacy Policy",
        "propertyValue": "https://oneplan.ai/privacy-policy"
      },
      {
        "propertyName": "Categories",
        "propertyValue": "Business Management;Productivity"
      }
    ]
}