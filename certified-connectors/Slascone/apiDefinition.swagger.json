{
  "basePath": "/api",
  "consumes": [],
  "definitions": {
    "CustomerDto": {
      "properties": {
        "city": {
          "description": "City where the customer is located.",
          "title": "City",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "country": {
          "description": "Country where the customer is located.",
          "title": "Country",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "customerName": {
          "description": "Name of the customer",
          "title": "Customer Name",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "customerNumber": {
          "description": "Globally unique number of the customer.",
          "title": "Customer Number",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "customerType": {
          "description": "Define the type of the customer",
          "enum": [
            "Reseller",
            "Prospect",
            "Enterprise",
            "Internal/Test"
          ],
          "title": "Customer Type",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "phone": {
          "description": "Enter the phone number of the customer",
          "title": "Phone number",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "street": {
          "description": "Street where the customer is located",
          "title": "Street",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "zip": {
          "description": "Zip code of the city where the customer is located",
          "title": "Zip code",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "country",
        "customerName",
        "customerNumber",
        "customerType"
      ],
      "type": "object",
      "x-ms-visibility": "important"
    },
    "CustomerResponseDto": {
      "properties": {
        "city": {
          "description": "city",
          "title": "City",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "companyName": {
          "description": "companyName",
          "title": "Company Name",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "country": {
          "description": "country",
          "title": "Country",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "createdDateUtc": {
          "description": "createdDateUtc",
          "title": "Create Date (Utc)",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "customerNumber": {
          "description": "customerNumber",
          "title": "Customer Number",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "id": {
          "description": "Internal Customer ID",
          "title": "Customer ID",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "lastModifiedBy": {
          "description": "lastModifiedBy",
          "title": "Last Modified By",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "latitude": {
          "description": "latitude",
          "format": "float",
          "title": "Latitude",
          "type": "number",
          "x-ms-visibility": "advanced"
        },
        "logo": {
          "description": "logo",
          "properties": {
            "name": {
              "description": "name",
              "title": "Logo Name",
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "uri": {
              "description": "uri",
              "title": "Logo URI",
              "type": "string",
              "x-ms-visibility": "advanced"
            }
          },
          "type": "object"
        },
        "longitude": {
          "description": "longitude",
          "format": "float",
          "title": "Longitude",
          "type": "number",
          "x-ms-visibility": "advanced"
        },
        "modifiedDateUtc": {
          "description": "modifiedDateUtc",
          "title": "Modified Date",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "phone": {
          "description": "phone",
          "title": "Phone",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "postalcode": {
          "description": "postalcode",
          "title": "Postalcode",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "prospectId": {
          "description": "prospectId",
          "title": "Prospect ID",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "street": {
          "description": "street",
          "title": "Street",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "subscription": {
          "description": "subscription",
          "properties": {
            "customerTypeName": {
              "description": "customerTypeName",
              "title": "Customer Type",
              "type": "string",
              "x-ms-visibility": "important"
            },
            "id": {
              "description": "id",
              "title": "ID",
              "type": "string",
              "x-ms-visibility": "internal"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerUpdateResponseDto": {
      "properties": {
        "city": {
          "description": "city",
          "title": "City",
          "type": "string"
        },
        "companyName": {
          "description": "companyName",
          "title": "Company Name",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "country": {
          "description": "country",
          "title": "Country",
          "type": "string"
        },
        "createdDateUtc": {
          "description": "createdDateUtc",
          "title": "Create Date (Utc)",
          "type": "string"
        },
        "customerNumber": {
          "description": "customerNumber",
          "title": "Customer Number",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "id": {
          "description": "Internal Customer ID",
          "title": "Customer ID",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "lastModifiedBy": {
          "description": "lastModifiedBy",
          "type": "string"
        },
        "latitude": {
          "description": "latitude",
          "format": "float",
          "type": "number"
        },
        "logo": {
          "description": "logo",
          "properties": {
            "name": {
              "description": "name",
              "type": "string"
            },
            "uri": {
              "description": "uri",
              "type": "string"
            }
          },
          "type": "object"
        },
        "longitude": {
          "description": "longitude",
          "format": "float",
          "type": "number"
        },
        "modifiedDateUtc": {
          "description": "modifiedDateUtc",
          "type": "string"
        },
        "phone": {
          "description": "phone",
          "type": "string"
        },
        "postalcode": {
          "description": "postalcode",
          "type": "string"
        },
        "prospectId": {
          "description": "prospectId",
          "type": "string"
        },
        "street": {
          "description": "street",
          "type": "string"
        },
        "subscription": {
          "description": "subscription",
          "properties": {
            "customerTypeName": {
              "description": "customerTypeName",
              "type": "string"
            },
            "id": {
              "description": "id",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebHookRegistrationDto": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "createdDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "events": {
          "items": {
            "enum": [
              0,
              1,
              2,
              5,
              6,
              7,
              10,
              14
            ],
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": false
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "url",
        "name",
        "active"
      ],
      "type": "object"
    }
  },
  "host": "api.slascone.com",
  "info": {
    "description": "Connect any third-party software to your Slascone Enviroment via this Power Automate Connector.",
    "title": "Slascone",
    "version": "1.0"
  },
  "parameters": {},
  "paths": {
    "/DataExchange/isv/{isvId}/customers": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "This action updates a Customer to your Slascone Enviroment.",
        "operationId": "DataExchange-UpdateCustomerAsync",
        "parameters": [
          {
            "description": "This is your unique isvID (Independent Software Vendor ID). You can find it in the Slascone Portal under the menu 'Info'.",
            "in": "path",
            "name": "isvId",
            "required": true,
            "type": "string",
            "x-ms-summary": "This is your unique isvID (Independent Software Vendor ID).",
            "x-ms-url-encoding": "single",
            "x-ms-visibility": "important"
          },
          {
            "in": "body",
            "name": "Customer Data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            },
            "x-ms-visibility": "important"
          }
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/CustomerUpdateResponseDto"
            }
          },
          "409": {
            "description": "default",
            "schema": {
              "properties": {
                "ErrorMessage": {
                  "description": "Contains further Information",
                  "title": "Error Message",
                  "type": "string"
                },
                "Id": {
                  "description": "Id",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Update a Customer",
        "x-ms-url-encoding": "single",
        "x-ms-visibility": "important"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This action adds a Customer to your Slascone Enviroment.",
        "operationId": "DataExchange-AddCustomerAsync",
        "parameters": [
          {
            "description": "This is your unique isvID (Independent Software Vendor ID). You can find it in the Slascone Portal under the menu 'Info'.",
            "in": "path",
            "name": "isvId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Independent Software Vendor ID",
            "x-ms-url-encoding": "single",
            "x-ms-visibility": "important"
          },
          {
            "in": "body",
            "name": "Customer Data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            },
            "x-ms-visibility": "important"
          }
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/CustomerResponseDto"
            }
          },
          "409": {
            "description": "default",
            "schema": {
              "properties": {
                "ErrorMessage": {
                  "description": "Contains further Information",
                  "title": "Error Message",
                  "type": "string",
                  "x-ms-visibility": "advanced"
                },
                "Id": {
                  "description": "Id",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Add a Customer",
        "x-ms-url-encoding": "single",
        "x-ms-visibility": "important"
      }
    },
    "/WebhookRegistration/isv/{isvId}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This trigger is issued whenever a new Customer is added to your Slascone Enviroment",
        "operationId": "Create-Customer-Trigger",
        "parameters": [
          {
            "description": "This is your unique isvID (Independent Software Vendor ID). You can find it in the Slascone Portal under the menu 'Info'.",
            "in": "path",
            "name": "isvId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Independent Software Vendor ID",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "active": {
                  "default": true,
                  "description": "active",
                  "enum": [
                    true,
                    false
                  ],
                  "title": "",
                  "type": "boolean",
                  "x-ms-visibility": "internal"
                },
                "createdDateUtc": {
                  "description": "createdDateUtc",
                  "title": "",
                  "type": "string",
                  "x-ms-visibility": "internal"
                },
                "events": {
                  "description": "events",
                  "items": {
                    "default": 0,
                    "description": "Event the webhook should listen to.",
                    "enum": [
                      0,
                      1,
                      2,
                      5,
                      6,
                      7,
                      10,
                      14
                    ],
                    "title": "Event name",
                    "type": "integer",
                    "x-ms-visibility": "internal"
                  },
                  "type": "array"
                },
                "name": {
                  "default": "powerautomate",
                  "description": "name",
                  "title": "",
                  "type": "string",
                  "x-ms-visibility": "internal"
                },
                "url": {
                  "description": "url",
                  "title": "",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "url",
                "name",
                "active",
                "events"
              ],
              "type": "object",
              "x-ms-visibility": "internal"
            },
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebHookRegistrationDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "summary": "Create Customer",
        "x-ms-trigger": "single",
        "x-ms-visibility": "important"
      },
      "x-ms-notification-content": {
        "description": "Webhook Response",
        "schema": {
          "properties": {
            "active": {
              "description": "Is Webhook active or not.",
              "enum": [
                "",
                "true",
                "false"
              ],
              "title": "active",
              "type": "boolean",
              "x-ms-visibility": "internal"
            },
            "createdDateUtc": {
              "description": "Date when the webhook was created",
              "title": "createdDateUtc",
              "type": "string",
              "x-ms-visibility": "internal"
            },
            "events": {
              "description": "events",
              "items": {
                "format": "int32",
                "title": "internal key",
                "type": "integer",
                "x-ms-visibility": "internal"
              },
              "type": "array"
            },
            "name": {
              "description": "Name of the webhook",
              "title": "webhook name",
              "type": "string",
              "x-ms-visibility": "internal"
            },
            "url": {
              "description": "callback url for the webhook",
              "title": "callback url",
              "type": "string",
              "x-ms-visibility": "internal"
            }
          },
          "type": "object"
        }
      }
    }
  },
  "produces": [],
  "responses": {},
  "schemes": [
    "https"
  ],
  "security": [
    {
      "API Key": []
    }
  ],
  "securityDefinitions": {
    "API Key": {
      "in": "header",
      "name": "ProvisioningKey",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": []
}