pool:
  vmImage: "vs2017-win2016"

variables:
  resourceStackFolder: $(System.ArtifactsDirectory)/resourcestack
  newtonsoftFolder: $(System.ArtifactsDirectory)/newtonsoft
  azstorageFolder: $(System.ArtifactsDirectory)/azstorage
  bcdFolder: $(System.ArtifactsDirectory)/bcd

steps:
  - powershell: |
      $swaggerValidator = "$(validatorUrl)/ValidateSwagger"
      $changeValidator = "$(validatorUrl)/ValidateChange"
      $errorsTotal = 0
      $warningsTotal = 0

      # Get the list of files for the given PR
      $currentLocation = Get-Location
      $files = git diff HEAD~1 --name-only

      $pair = "$($uid):$($utok)"
      $encoded = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($pair))

      $Headers = @{
        Authorization = "Basic $encoded"
      }

      foreach ($file in $files) { 
        if ($file -match '.+?apidefinition.swagger.json$') {
            $currentFilePath = Join-Path $currentLocation ($file.Replace('/', '\'))
            $previousCommitHash = git log --max-count=1 --skip=1 --first-parent --pretty=format:%H $currentFilePath

            $newFileContent = Get-Content $file -Raw

            # Validate swagger
            $results = Invoke-RestMethod -Uri $validatorUrl -Headers $Headers -Method Post -ContentType "application/json" -Body $newFileContent
            
            $errors = $results.Errors
            $warnings = $results.Warnings

            if ($errors) {
              $errorsTotal += $errors.Count
              $errors | foreach { Write-Host "##vso[task.logissue type=error;$_" }
              Write-Host "##vso[task.logissue type=error;sourcepath=$file;]Swagger file '$file' contains error(s)."
            } # If Swagger Error
            
            if ($warnings) {
              $warningsTotal += $warnings.Count
              $warnings | foreach { Write-Host "##vso[task.logissue type=warning;sourcepath=$file;$_" }
            } # If Swagger Warnings

            # Breaking change dectection
            # Check for breaking changes when previous commit exits
            # And there is NO swagger validation error
            if ($previousCommitHash -AND -NOT $errors) {
              $oldSwagger = git show "$($previousCommitHash):$($file)" | Out-String | ConvertFrom-Json
              $newSwagger = $newFileContent | ConvertFrom-Json

              $changeValidation = @{
                OldSwagger = $oldSwagger
                NewSwagger = $newSwagger
              }

              $changeValidationJson = ConvertTo-Json $changeValidation

              # Validate changes
              $results = Invoke-RestMethod -Uri $changeValidator -Headers $Headers -Method Post -ContentType "application/json" -Body $changeValidationJson

              $errors = $results.Errors
              $warnings = $results.Warnings

              if ($errors) {
                  $errorsTotal += $errors.Count
                  $errors | foreach { Write-Host "##vso[task.LogIssue type=error;]$_" }
              } # If there are any errors

              if ($warnings) {
                  $warningsTotal += $warnings.Count
                  $warnings | foreach { Write-Host "##vso[task.LogIssue type=warning;]$_" }
              } # If there are any warnings

            } # If previous commit exists perform breaking change validation

        } # If current file is a swagger file

      } # For each file

      if ($errorsTotal -gt 0) {
          Write-Host "##vso[task.complete result=Failed;]Errors encountered."    
          exit 1
      }
      elseif ($warningsTotal -gt 0) {
          Write-Host "##vso[task.complete result=SucceededWithIssues;]Warnings encountered."    
      }
      else {
          Write-Host "##vso[task.complete result=Succeeded;]No error or warnings encountered."    
      }
