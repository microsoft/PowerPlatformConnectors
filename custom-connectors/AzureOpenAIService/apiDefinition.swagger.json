{
  "swagger": "2.0",
  "info": {
    "title": "Azure OpenAI Service",
    "description": "Azure OpenAI Service provides access to OpenAI's powerful language models including the GPT-3, Codex and Embeddings model series. These models can be easily adapted to your specific task including but not limited to content generation, summarization, semantic search, and natural language to code translation.",
    "version": "1.0",
    "contact": {
      "name": "Daniel Laskewitz",
      "url": "https://aka.ms/laskewitz",
      "email": "connectorsupport@laskewitz.io"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://azure.microsoft.com/en-us/products/cognitive-services/openai-service"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://privacy.microsoft.com/en-us/privacystatement"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI"
    }
  ],
  "host": "openai.azure.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/openai/deployments/{deployment-id}/chat/completions": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "answer": {
                  "type": "string",
                  "description": "The completion returned by the OpenAI Chat endpoint"
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/message"
                  },
                  "description": "The messages passed to the OpenAI Chat endpoint, with the answer received appended"
                },
                "raw-result": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the completion.",
                      "title": "ID",
                      "x-ms-visibility": "advanced"
                    },
                    "object": {
                      "type": "string",
                      "description": "The type of model that was used for the completion.",
                      "title": "Object",
                      "x-ms-visibility": "important"
                    },
                    "created": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Timestamp of the creation date.",
                      "title": "Created",
                      "x-ms-visibility": "advanced"
                    },
                    "model": {
                      "type": "string",
                      "description": "The model that was used for the completion.",
                      "title": "Model",
                      "x-ms-visibility": "important"
                    },
                    "choices": {
                      "type": "array",
                      "description": "Array of choices generated for the prompt.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The index of the predicted completion.",
                            "title": "Index",
                            "x-ms-visibility": "advanced"
                          },
                          "finish_reason": {
                            "type": "string",
                            "description": "The reason why the completion finished.",
                            "title": "Finish reason",
                            "x-ms-visibility": "advanced"
                          },
                          "message": {
                            "$ref": "#/definitions/message"
                          }
                        }
                      }
                    },
                    "usage": {
                      "type": "object",
                      "description": "The tokens used in this request.",
                      "properties": {
                        "completion_tokens": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of tokens used for the completion.",
                          "title": "Completion tokens",
                          "x-ms-visibility": "advanced"
                        },
                        "prompt_tokens": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of tokens used for the prompt.",
                          "title": "Prompt tokens",
                          "x-ms-visibility": "advanced"
                        },
                        "total_tokens": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total number of tokens used for the request.",
                          "title": "Total tokens",
                          "x-ms-visibility": "advanced"
                        }
                      }
                    }
                  },
                  "description": "The raw result returned by the OpenAI Chat endpoint"
                }
              }
            }
          }
        },
        "summary": "Chat Completion (Preview)",
        "description": "This operation generates completions for a given prompt. The prompt is a conversation between two or more people. The completion is generated by the model for the given conversation.",
        "operationId": "ChatCompletion",
        "parameters": [
          {
            "name": "deployment-id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "description": "The ID of the deployment to use for this request (must use a deployment with a chat model).",
            "x-ms-summary": "Deployment ID",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "ListDeployments",
              "value-path": "id",
              "value-collection": "data",
              "value-title": "model",
              "parameters": {
                "api-version": "2022-12-01"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2023-03-15-preview",
            "x-ms-visibility": "advanced",
            "description": "The API version for this REST call to Azure OpenAI. Must be 2023-03-15-preview or later",
            "x-ms-summary": "Azure OpenAI API Version (must be 2023-03-15-preview or later)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "messages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/message"
                  },
                  "description": "The messages (context) passed to and from the API prior to this in the conversation"
                },
                "user_message": {
                  "type": "string",
                  "description": "Message for the chat API to respond to",
                  "title": "User message",
                  "x-ms-visibility": "important",
                  "default": "Tell me more about that"
                },
                "system_instruction": {
                  "type": "string",
                  "description": "The initial prompt or instructions to the model",
                  "title": "System Instructions",
                  "x-ms-visibility": "important",
                  "default": "You are a helpful assistant. Answer in a friendly, informal tone."
                },
                "max_tokens": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of tokens to generate.",
                  "title": "Max tokens",
                  "x-ms-visibility": "advanced",
                  "default": 2048
                },
                "temperature": {
                  "type": "number",
                  "format": "float",
                  "description": "The temperature of the model. Higher values will result in more random completions. Lower values will result in more predictable completions.",
                  "title": "Temperature",
                  "x-ms-visibility": "advanced",
                  "default": 0.9
                },
                "presence_penalty": {
                  "type": "number",
                  "format": "float",
                  "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
                  "title": "Presence penalty",
                  "x-ms-visibility": "advanced",
                  "default": 0
                },
                "frequency_penalty": {
                  "type": "number",
                  "format": "float",
                  "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
                  "title": "Frequency penalty",
                  "x-ms-visibility": "advanced",
                  "default": 0
                },
                "top_p": {
                  "type": "number",
                  "format": "float",
                  "description": "The cumulative probability for top-k sampling. The higher the value, the more constrained the completions will be.",
                  "title": "Top p",
                  "x-ms-visibility": "advanced",
                  "default": 1
                },
                "n": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of choices to return.",
                  "title": "N",
                  "x-ms-visibility": "advanced",
                  "default": 1
                },
                "stream": {
                  "type": "boolean",
                  "description": "Whether to stream the response.",
                  "title": "Stream",
                  "x-ms-visibility": "advanced",
                  "default": false
                },
                "stop": {
                  "type": "string",
                  "description": "Up to 4 sequences where the API will stop generating further tokens.",
                  "title": "Stop",
                  "x-ms-visibility": "advanced",
                  "default": "None"
                },
                "user": {
                  "type": "string",
                  "description": "The user ID to associate with this request. This is used to prevent the same user from generating the same response multiple times.",
                  "title": "User",
                  "x-ms-visibility": "advanced",
                  "default": "None"
                }
              },
              "description": "The body of the request",
              "title": "",
              "x-ms-visibility": "important",
              "x-ms-summary": "Request body"
            }
          }
        ]
      }
    },
    "/openai/deployments/{deployment-id}/completions": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "raw-result": {
                  "type": "object",
                  "description": "The raw result from the API call",
                  "title": "Raw result",
                  "x-ms-visibility": "advanced",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the completion.",
                      "title": "ID",
                      "x-ms-visibility": "advanced"
                    },
                    "object": {
                      "type": "string",
                      "description": "The type of model that was used for the completion.",
                      "title": "Object",
                      "x-ms-visibility": "important"
                    },
                    "created": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Timestamp of the creation date.",
                      "title": "Created",
                      "x-ms-visibility": "advanced"
                    },
                    "model": {
                      "type": "string",
                      "description": "The model that was used for the completion.",
                      "title": "Model",
                      "x-ms-visibility": "important"
                    },
                    "choices": {
                      "type": "array",
                      "description": "Array of choices generated for the prompt.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "string",
                            "description": "The text of the completion.",
                            "title": "Completion text",
                            "x-ms-visibility": "important"
                          },
                          "index": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The index of the predicted completion.",
                            "title": "Index",
                            "x-ms-visibility": "important"
                          },
                          "finish_reason": {
                            "type": "string",
                            "description": "The reason why the completion finished.",
                            "title": "Finish reason",
                            "x-ms-visibility": "advanced"
                          },
                          "logprobs": {
                            "type": "string",
                            "description": "The probability that the token occurs next given the prompt.",
                            "title": "Logprobs",
                            "x-ms-visibility": "advanced"
                          }
                        }
                      }
                    },
                    "usage": {
                      "type": "object",
                      "description": "The tokens used in this request.",
                      "properties": {
                        "completion_tokens": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The amount of completion tokens used in this request.",
                          "title": "Completion tokens"
                        },
                        "prompt_tokens": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The amount of prompt tokens used in this request.",
                          "title": "Prompt tokens"
                        },
                        "total_tokens": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total amount of tokens used in this request.",
                          "title": "Total tokens"
                        }
                      }
                    }
                  }
                },
                "initial_scope": {
                  "type": "string",
                  "description": "The initial scope of the request",
                  "title": "Initial scope",
                  "x-ms-visibility": "important"
                },
                "answer": {
                  "type": "string",
                  "description": "The answer to the prompt",
                  "title": "Answer",
                  "x-ms-visibility": "important"
                },
                "history": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/qapair"
                  },
                  "description": "The history of the request",
                  "title": "History",
                  "x-ms-visibility": "important"
                }
              }
            }
          }
        },
        "summary": "Create a completion",
        "description": "The model will generate one or more predicted completions based on a provided prompt. The service can also return the probabilities of alternative tokens at each position.",
        "operationId": "CreateCompletion",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/deployment"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "prompt": {
                  "type": "string",
                  "description": "The prompt to generate the completion for",
                  "title": "Prompt",
                  "x-ms-visibility": "important"
                },
                "max_tokens": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Set a limit on the number of tokens per model response. The API supports a maximum of 2048 tokens shared between the prompt (including system message, examples, message history, and user query) and the model's response. One token is roughly 4 characters for typical English text.",
                  "title": "Max length (tokens)",
                  "default": 256,
                  "x-ms-visibility": "advanced"
                },
                "temperature": {
                  "type": "number",
                  "format": "float",
                  "description": "What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer. We generally recommend altering this or top_p but not both.",
                  "title": "Temperature",
                  "x-ms-visibility": "advanced",
                  "default": 0.2
                },
                "top_p": {
                  "type": "number",
                  "format": "float",
                  "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or temperature but not both.",
                  "title": "Top Probabilities",
                  "x-ms-visibility": "advanced",
                  "default": 1
                },
                "n": {
                  "type": "integer",
                  "format": "int32",
                  "description": "How many completions to generate for each prompt. Note: Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for max_tokens and stop.",
                  "title": "N",
                  "x-ms-visibility": "advanced",
                  "default": 1
                },
                "stream": {
                  "type": "boolean",
                  "description": "Whether to stream back partial progress. If set, tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message.",
                  "title": "Stream",
                  "x-ms-visibility": "advanced",
                  "enum": [
                    true,
                    false
                  ]
                },
                "logprobs": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens. For example, if logprobs is 10, the API will return a list of the 10 most likely tokens. the API will always return the logprob of the sampled token, so there may be up to logprobs+1 elements in the response.",
                  "title": "Logprobs",
                  "x-ms-visibility": "advanced"
                },
                "echo": {
                  "type": "boolean",
                  "description": "Echo back the prompt in addition to the completion.",
                  "title": "Echo",
                  "x-ms-visibility": "advanced",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false
                },
                "stop": {
                  "type": "string",
                  "description": "Make responses stop at a desired point, such as the end of a sentence or list. Specify up to four sequences where the model will stop generating further tokens in a response. The returned text will not contain the stop sequence.",
                  "title": "Stop sequences",
                  "x-ms-visibility": "advanced"
                },
                "presence_penalty": {
                  "type": "number",
                  "format": "float",
                  "description": "Reduce the chance of repeating any token that has appeared in the text at all so far. This increases the likelihood of introducing new topics in a response. (Number between 0 and 2)",
                  "title": "Presence penalty",
                  "x-ms-visibility": "advanced",
                  "default": 0
                },
                "frequency_penalty": {
                  "type": "number",
                  "format": "float",
                  "description": "Reduce the chance of repeating a token proportionally based on how often it has appeared in the text so far. This decreases the likelihood of repeating the exact same text in a response.",
                  "title": "Frequency penalty",
                  "x-ms-visibility": "advanced",
                  "default": 0
                },
                "best_of": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Generates best_of completions server-side and returns the \"best\" (the one with the lowest log probability per token). Results can't be streamed. When used with n, best_of controls the number of candidate completions and n specifies how many to return \u2013 best_of must be greater than n. Note: Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for max_tokens and stop.",
                  "title": "Best of",
                  "x-ms-visibility": "advanced",
                  "default": 1
                },
                "logit_bias": {
                  "type": "object",
                  "properties": { },
                  "description": "logit_bias",
                  "x-ms-visibility": "advanced"
                },
                "initial_scope": {
                  "type": "string",
                  "description": "Initial scope or instruction to the model",
                  "x-ms-visibility": "important",
                  "title": "Initial scope",
                  "default": "You are a helpful assistant"
                },
                "history": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/qapair"
                  },
                  "description": "The history of the request",
                  "title": "History",
                  "x-ms-visibility": "important"
                }
              }
            }
          }
        ]
      }
    },
    "/openai/deployments/{deployment-id}/embeddings": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "object"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "object": {
                        "type": "string",
                        "description": "object"
                      },
                      "embedding": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "float"
                        },
                        "description": "Created embedding vector"
                      },
                      "index": {
                        "type": "integer",
                        "format": "int32",
                        "description": "index"
                      }
                    }
                  },
                  "description": "data"
                },
                "model": {
                  "type": "string",
                  "description": "The used OpenAI model"
                }
              }
            }
          }
        },
        "summary": "Embeddings",
        "description": "Creates an embedding vector representing the input text",
        "operationId": "Embeddings",
        "parameters": [
          {
            "$ref": "#/parameters/deployment"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "string",
                  "description": "Input text to get embeddings for",
                  "title": "input"
                }
              },
              "required": [
                "input"
              ]
            }
          }
        ]
      }
    },
    "/openai/deployments": {
      "get": {
        "summary": "List deployments",
        "description": "List Azure OpenAI Service Deployments",
        "operationId": "ListDeployments",
        "x-ms-visibility": "advanced",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/deployment"
                  },
                  "title": "Data",
                  "description": "The list of items."
                },
                "object": {
                  "type": "string",
                  "title": "Object",
                  "description": "The type of object."
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ]
      },
      "post": {
        "summary": "Create deployment",
        "operationId": "CreateDeployment",
        "description": "Creates a new deployment for the Azure OpenAI resource according to the given specification.",
        "x-ms-visibility": "advanced",
        "responses": {
          "201": {
            "$ref": "#/responses/createdeployment201"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "description": "The Azure OpenAI Service model identifier (model-id) to deploy. Can be a base model or a fine tune.",
                  "title": "Model",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "ListModels",
                    "value-path": "id",
                    "value-collection": "data",
                    "value-title": "id",
                    "parameters": {
                      "api-version": "2022-12-01"
                    }
                  }
                },
                "scale_settings": {
                  "$ref": "#/definitions/scale_settings"
                }
              },
              "required": [
                "scale_settings",
                "model"
              ]
            }
          }
        ]
      }
    },
    "/openai/deployments/{deployment-id}": {
      "get": {
        "summary": "Get deployment",
        "operationId": "GetDeployment",
        "description": "Gets details for a single deployment specified by the given deployment.",
        "x-ms-visibility": "important",
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/models"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/deployment"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ]
      },
      "delete": {
        "summary": "Delete deployment",
        "description": "Deletes the specified deployment.",
        "operationId": "DeleteDeployment",
        "x-ms-visibility": "advanced",
        "responses": {
          "204": {
            "description": "Deleted",
            "schema": { }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/deployment"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ]
      }
    },
    "/openai/deployments/{deployment-id}/images/generations": {
      "post": {
        "responses": {
          "202": {
            "description": "202 Accepted",
            "schema": {
              "type": "object",
              "properties": {
                "created": {
                  "type": "integer",
                  "title": "Created",
                  "format": "int32",
                  "description": "The unix timestamp when the operation was created."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The image url or encoded image if successful, and an error otherwise.",
                    "properties": {
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The image url."
                      },
                      "b64_json": {
                        "type": "string",
                        "title": "B64 JSON",
                        "description": "The base64 encoded image"
                      },
                      "revised_prompt": {
                        "type": "string",
                        "title": "Revised Prompt",
                        "description": "The prompt that was used to generate the image, if there was any revision to the prompt."
                      }
                    }
                  },
                  "description": "The result data of the operation, if successful"
                }
              }
            }
          }
        },
        "summary": "Request a generated image with DALL-E 3 (preview)",
        "description": "Generates an image from a text caption on a given DALL-E 3 model deployment",
        "operationId": "ImageGenerations_Create",
        "parameters": [
          {
            "$ref": "#/parameters/deployment"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "2023-12-01-preview",
            "x-ms-visibility": "internal",
            "description": "The API version for this REST call to Azure OpenAI. Must be 2023-12-01-preview or later",
            "x-ms-summary": "Azure OpenAI API Version (must be 2023-12-01-preview or later)"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "prompt": {
                  "type": "string",
                  "description": "A text description of the desired image(s). The maximum length is 4000 characters.",
                  "title": "Prompt",
                  "x-ms-visibility": "important"
                },
                "n": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of images to generate. Only one is supported for DALL-E 3.",
                  "title": "N",
                  "default": 1,
                  "x-ms-visibility": "internal"
                },
                "size": {
                  "type": "string",
                  "description": "size",
                  "title": "Size",
                  "enum": [
                    "1024x1024",
                    "1024x1792",
                    "1792x1024"
                  ],
                  "default": "1024x1024",
                  "x-ms-visibility": "advanced"
                },
                "quality": {
                  "type": "string",
                  "description": "The quality of the generated images. Must be hd or standard.",
                  "title": "Quality",
                  "default": "standard",
                  "enum": [
                    "standard",
                    "hd"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "response_format": {
                  "type": "string",
                  "description": "The format in which the generated images are returned Must be url (a URL pointing to the image) or b64_json (the base 64 byte code in JSON format).",
                  "title": "Response Format",
                  "default": "url",
                  "enum": [
                    "url",
                    "b64_json"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "style": {
                  "type": "string",
                  "description": "The style of the generated images. Must be natural or vivid (for hyper-realistic / dramatic images).",
                  "title": "Style",
                  "default": "vivid",
                  "x-ms-visibility": "advanced",
                  "enum": [
                    "vivid",
                    "natural"
                  ]
                }
              },
              "required": [
                "prompt",
                "n"
              ]
            }
          }
        ]
      }
    },
    "/openai/models": {
      "get": {
        "summary": "List models",
        "operationId": "ListModels",
        "description": "Gets a list of all models that are accessible by the Azure OpenAI resource. These include base models as well as all successfully completed fine-tuned models owned by the Azure OpenAI resource.",
        "x-ms-visibility": "advanced",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ]
      }
    }
  },
  "definitions": {
    "message": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "description": "The role of the author of this message",
          "title": "",
          "enum": [
            "system",
            "user",
            "assistant"
          ]
        },
        "content": {
          "type": "string",
          "description": "The contents of the message",
          "title": ""
        }
      },
      "required": [
        "content",
        "role"
      ]
    },
    "qapair": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "description": "the question or prompt",
          "title": "Question"
        },
        "answer": {
          "type": "string",
          "description": "the answer to the question or prompt",
          "title": "Answer"
        }
      }
    },
    "capabilities": {
      "title": "Capabilities",
      "description": "The capabilities of a base or fine tune model.",
      "type": "object",
      "properties": {
        "fine_tune": {
          "type": "boolean",
          "title": "Fine tune",
          "description": "A value indicating whether a model can be used for fine tuning."
        },
        "inference": {
          "type": "boolean",
          "title": "Inference",
          "description": "A value indicating whether a model can be deployed."
        },
        "completion": {
          "type": "boolean",
          "title": "Completion",
          "description": "A value indicating whether a model supports completion."
        },
        "embeddings": {
          "type": "boolean",
          "title": "Embeddings",
          "description": "A value indicating whether a model supports embeddings."
        },
        "scale_types": {
          "type": "array",
          "title": "Scale types",
          "description": "The supported scale types for deployments of this model.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "deployment": {
      "title": "Deployment",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "integer",
          "format": "int32",
          "title": "Created at",
          "description": "A timestamp when this job or item was created (in unix epochs)."
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The identity of this item."
        },
        "model": {
          "type": "string",
          "title": "Model",
          "description": "The OpenAI model identifier (model-id) to deploy. Can be a base model or a fine tune."
        },
        "owner": {
          "type": "string",
          "title": "Owner",
          "description": "The owner of this deployment. For Azure OpenAI only 'organization-owner' is supported."
        },
        "scale_settings": {
          "$ref": "#/definitions/scale_settings"
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "The state of a job or item."
        },
        "updated_at": {
          "type": "integer",
          "format": "int32",
          "title": "Updated at",
          "description": "A timestamp when this job or item was modified last (in unix epochs)."
        },
        "object": {
          "type": "string",
          "title": "Object",
          "description": "Defines the type of an object."
        }
      }
    },
    "deprecation": {
      "title": "Deprecation",
      "description": "Defines the dates of deprecation for the different use cases of a model. Usually base models support 1 year of fine tuning after creation. Inference is typically supported 2 years after creation of base or fine tuned models. The exact dates are specified in the properties.",
      "type": "object",
      "properties": {
        "fine_tune": {
          "type": "integer",
          "format": "int32",
          "title": "Fine tune",
          "description": "The end date of fine tune support of this model. Will be null for fine tune models."
        },
        "inference": {
          "type": "integer",
          "format": "int32",
          "title": "Inference",
          "description": "The end date of inference support of this model."
        }
      }
    },
    "model": {
      "type": "object",
      "title": "Model",
      "properties": {
        "capabilities": {
          "$ref": "#/definitions/capabilities"
        },
        "lifecycle_status": {
          "type": "string",
          "title": "Lifecycle status",
          "description": "The life cycle status of a model. Note: A model can be promoted from 'preview' to 'generally-available', but never from 'generally-available' to 'preview'."
        },
        "deprecation": {
          "$ref": "#/definitions/deprecation"
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The identity of this item."
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "The state of a job or item."
        },
        "created_at": {
          "type": "integer",
          "format": "int32",
          "title": "Created at",
          "description": "A timestamp when this job or item was created (in unix epochs)."
        },
        "updated_at": {
          "type": "integer",
          "format": "int32",
          "title": "Updated at",
          "description": "A timestamp when this job or item was modified last (in unix epochs)."
        },
        "object": {
          "type": "string",
          "title": "Object",
          "description": "Defines the type of an object."
        }
      }
    },
    "models": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "title": "Data",
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/model"
          }
        },
        "object": {
          "type": "string",
          "title": "Object",
          "description": "Defines the type of an object."
        }
      }
    },
    "scale_settings": {
      "type": "object",
      "title": "Scale settings",
      "description": "The scale settings of a deployment. It defines the modes for scaling and the reserved capacity.",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The constant reserved capacity of the inference endpoint for this deployment.",
          "title": "Capacity",
          "x-ms-visibility": "advanced"
        },
        "scale_type": {
          "type": "string",
          "description": "Defines how scaling operations will be executed.",
          "title": "Scale type",
          "x-ms-visibility": "advanced",
          "enum": [
            "manual",
            "standard"
          ],
          "default": "standard"
        }
      },
      "required": [
        "scale_type"
      ]
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "default": "2022-12-01",
      "x-ms-summary": "API version",
      "description": "The requested API version.",
      "x-ms-visibility": "advanced",
      "enum": [
        "2022-12-01",
        "2023-03-15-preview"
      ]
    },
    "deployment": {
      "name": "deployment-id",
      "in": "path",
      "x-ms-url-encoding": "single",
      "required": true,
      "type": "string",
      "x-ms-summary": "Deployment",
      "description": "The deployment you want to perform the action on.",
      "x-ms-dynamic-values": {
        "operationId": "ListDeployments",
        "value-path": "id",
        "value-collection": "data",
        "value-title": "model",
        "parameters": {
          "api-version": "2022-12-01"
        }
      },
      "x-ms-visibility": "important"
    }
  },
  "responses": {
    "createdeployment201": {
      "description": "Created",
      "schema": {
        "$ref": "#/definitions/deployment"
      }
    }
  },
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "api-key"
    }
  },
  "security": [
    {
      "API Key": [ ]
    }
  ],
  "tags": [ ]
}