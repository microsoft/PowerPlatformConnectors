{

  "swagger": "2.0",

  "info": {

    "title": "Tikit",

    "description": "Tikit provides a basic ticket management system. Using this API, you can create tickets and files associated with it. Very often, you may want to use the business with tickets. This is the solution for it.",

    "version": "1.0",

    "contact": {

      "name": "Celebaltech Support",

      "url": "https://www.celebaltech.com/support",

      "email": "support@celebaltech.com"

    }

  },

  "host": "tikit.azurewebsites.net",

  "basePath": "/",

  "schemes": [

    "https"

  ],

  "x-ms-connector-metadata": [

    {

      "propertyName": "Website",

      "propertyValue": "https://www.celebaltech.com"

    },

    {

      "propertyName": "Privacy Policy",

      "propertyValue": "https://www.celebaltech.com/privacypolicy"

    },

    {

      "propertyName": "Categories",

      "propertyValue": "AI; Sales and CRM"

    }

  ],

  "consumes": [],

  "produces": [],

  "paths": {

    "/api/Ticket/AddTicket": {

      "post": {

        "consumes": [

          "application/json"

        ],

        "produces": [

          "application/json"

        ],

        "responses": {

          "200": {

            "description": "Success",

            "x-ms-summary": "Message",

            "schema": {

              "type": "object",

              "properties": {

                "name": {

                  "type": "string",

                  "description": "This is the name of the ticket that is being created."

                },

                "comment": {

                  "type": "string",

                  "description": "This is the comment that is associated with a ticket."

                },

                "ticketId": {

                  "type": "integer",

                  "description": "This is the unique ticket id number."

                },

                "userAPIKey": {

                  "type": "string",

                  "description": "This is the unique api key that is associated with the created ticket."

                }

              }

            }

          },

          "401": {

            "description": "Unauthorized",

            "x-ms-summary": "Message"

          }

        },

        "summary": "This endpoint add ticket based on current api key",

        "description": "Adding ticket from the values provided by the user",

        "operationId": "AddTicket",

        "parameters": [

          {

            "name": "body",

            "in": "body",

            "required": false,

            "schema": {

              "type": "object",

              "properties": {

                "name": {

                  "type": "string",

                  "description": "name"

                },

                "comment": {

                  "type": "string",

                  "description": "comment"

                }

              }

            }

          }

        ]

      }

    },

    "/api/Ticket/GetTickets": {

      "get": {

        "responses": {

          "200": {

            "description": "Success",

            "x-ms-summary": "Message",

            "schema": {

              "type": "object",

              "properties": {

                "name": {

                  "type": "string",

                  "description": "Name of the ticket."

                },

                "comment": {

                  "type": "string",

                  "description": "Comment associated with that ticket."

                },

                "ticketId":{

                  "type": "integer",

                  "description": "This is the unique ticketId number."

                },

                "userAPIKey":{

                  "type": "string",

                  "description": "This is unique api key that is associated with all tickets."

                }

              }

            }

          },

          "401": {

            "description": "Unauthorized",

            "x-ms-summary": "Message"

          }

        },

        "summary": "Based on api key this endpoint creates collection of all tickets",

        "description": "This endpoint get all the tickets that is associated with user's api key",

        "operationId": "GetTickets",

        "parameters": []

      }

    },

    "/api/Ticket/GetTicket/": {

      "get": {

        "responses": {

          "200": {

            "description": "Success",

            "x-ms-summary": "Message",

            "schema": {

              "type": "object",

              "properties": {

                "name": {

                  "type": "string",

                  "description": "Name of the ticket."

                },

                "comment": {

                  "type": "string",

                  "description": "Comment associated with that ticket."

                },

                "ticketId":{

                  "type": "integer",

                  "description": "This is the unique ticket id number."

                },

                "userAPIKey":{

                  "type": "string",

                  "description": "This is the unique api key that is associated with the created ticket."

                }

              }

            }

          },

          "404": {

            "description": "Not Found",

            "x-ms-summary": "Message"

          },

          "401": {

            "description": "Unauthorized",

            "x-ms-summary": "Message"

          }

        },

        "summary": "Based on API key and ticket id, a single ticket is being returned",

        "description": "This endpoint gets a ticket based on user input",

        "operationId": "GetTicket",

        "parameters": [

          {

            "name": "ticketId",

            "in": "query",

            "required": true,

            "type": "string",

            "x-ms-summary": "Get Ticket",

            "description": "Get a ticket with use of unique ticket id"

          }

        ]

      }

    },

    "/api/Ticket/UpdateTicket": {

      "patch": {

        "responses": {

          "200": {

            "description": "Success",

            "x-ms-summary": "Message",

            "schema": {

              "type": "object",

              "properties": {

                "name": {

                  "type": "string",

                  "description": "Name of the ticket."

                },

                "comment": {

                  "type": "string",

                  "description": "Comment associated with that ticket."

                },

                "ticketId":{

                  "type": "integer",

                  "description": "This is the unique ticket id number."

                },

                "userAPIKey":{

                  "type": "string",

                  "description": "This is the unique API key that is associated with the created ticket."

                }

              }

            }

          },

          "404": {

            "description": "Not Found",

            "x-ms-summary": "Message"

          },

          "401": {

            "description": "Unauthorized",

            "x-ms-summary": "Message"

          }

        },

        "summary": "Based on api key and unique ticket id, user is returned with updated ticket",

        "description": "This endpoint update the ticket based on current ticket id",

        "consumes": [

          "application/json"

        ],

        "produces": [

          "application/json"

        ],

        "operationId": "UpdateTicket",

        "parameters": [

          {

            "name": "id",

            "in": "query",

            "required": false,

            "type": "string",

            "x-ms-summary": "Update Ticket",

            "description": "Update ticket with use of unique ticket id."

          },

          {

            "name": "body",

            "in": "body",

            "required": false,

            "schema": {

              "type": "object",

              "properties": {

                "name": {

                  "type": "string",

                  "description": "name"

                },

                "comment": {

                  "type": "string",

                  "description": "comment"

                }

              }

            }

          }

        ]

      }

    },

    "/api/File/GetFile": {

      "get": {

        "responses": {

          "200": {

            "description": "Success",

            "x-ms-summary": "Message",

            "schema": {

              "type": "object",

              "properties": {

                "fileId":{

                  "type": "integer",

                  "description": "This is the unique file id in database."

                },

                "base64EncodedStringFile": {

                  "type": "string",

                  "description": "This is the base 64 encoded string of the file."

                },

                "filename": {

                  "type": "string",

                  "description": "This is the filename of file."

                },

                "apiKeyAssociatedFile":{

                  "type": "string",

                  "description": "This is the api key that is unique and is associated with file."

                },

                "ticketId":{

                  "type": "integer",

                  "description": "This is the unique ticket id that is associated with ticket."

                }

              }

            }

          },

          "404": {

            "description": "Not Found",

            "x-ms-summary": "Message"

          },

          "401": {

            "description": "Unauthorized",

            "x-ms-summary": "Message"

          }

        },

        "summary": "Based on API key and unique file id, user is returned with file",

        "description": "This endpoint gets a file based on unique file id",

        "operationId": "GetFile",

        "parameters": [

          {

            "name": "fileId",

            "in": "query",

            "required": false,

            "type": "string",

            "x-ms-summary": "Get File",

            "description": "Get a file with use of unique file id."

          }

        ]

      }

    },

    "/api/File/GetFiles": {

      "get": {

        "responses": {

          "200": {

            "description": "Success",

            "x-ms-summary": "Message",

            "schema": {

              "type": "object",

              "properties": {

                "fileId":{

                  "type": "integer",

                  "description": "This is the unique file id in database."

                },

                "base64EncodedStringFile": {

                  "type": "string",

                  "description": "This is the base 64 encoded string of the file."

                },

                "filename": {

                  "type": "string",

                  "description": "This is the filename of file."

                },

                "apiKeyAssociatedFile":{

                  "type": "string",

                  "description": "This is the api key that is unique and is associated with file."

                },

                "ticketId":{

                  "type": "integer",

                  "description": "This is the unique ticket id that is associated with ticket."

                }

              }

            }

          },

          "404": {

            "description": "Not Found",

            "x-ms-summary": "Message"

          },

          "401": {

            "description": "Unauthorized",

            "x-ms-summary": "Message"

          }

        },

        "summary": "Based on unique API key provided on success it will get of files related to API id",

        "description": "This is used to get files based on unique api key",

        "operationId": "GetFiles",

        "parameters": []

      }

    },

    "/cc/Triggers/RegisterWebhookTicket": {

      "x-ms-notification-content": {

        "description": "Ticket"

      },

      "post": {

        "responses": {

          "200": {

            "description": "Success",

            "x-ms-summary": "Message"

          },

          "401": {

            "description": "Unauthorized",

            "x-ms-summary": "Message"

          }

        },

        "x-ms-trigger": "single",

        "parameters": [

          {

            "name": "body",

            "in": "body",

            "required": false,

            "schema": {

              "type": "object",

              "properties": {

                "callbackURL": {

                  "type": "string",

                  "description": "callbackURL",

                  "title": "CallbackURL",

                  "x-ms-notification-url": false,

                  "x-ms-visibility": "internal"

                },

                "entityName": {

                  "type": "string",

                  "description": "entityName",

                  "title": "EntityName",

                  "x-ms-visibility": "internal",

                  "default": "Ticket"

                },

                "triggerGroup": {

                  "type": "string",

                  "description": "triggerGroup",

                  "title": "TriggerGroup",

                  "enum": [

                    "Added",

                    "Updated"

                  ]

                }

              },

              "required": [

                "callbackURL",

                "entityName",

                "triggerGroup"

              ]

            }

          }

        ],

        "summary": "Ticket",

        "description": "This is triggered whenever a new or an update of ticket entity in the ticket management system",

        "operationId": "TicketAddedUpdated",

        "consumes": [

          "application/json"

        ],

        "produces": [

          "application/json"

        ]

      }

    },

    "/cc/Triggers/RegisterWebhookFile": {

      "x-ms-notification-content": {

        "description": "FileResponse"

      },

      "post": {

        "responses": {

          "200": {

            "description": "Success",

            "x-ms-summary": "Message"

          },

          "401": {

            "description": "Unauthorized",

            "x-ms-summary": "Message"

          }

        },

        "summary": "File",

        "description": "This is triggered whenever a new or an update of files entity in the ticket management system",

        "operationId": "FileAddedUpdated",

        "consumes": [

          "application/json"

        ],

        "produces": [

          "application/json"

        ],

        "x-ms-trigger": "single",

        "parameters": [

          {

            "name": "body",

            "in": "body",

            "required": false,

            "schema": {

              "type": "object",

              "properties": {

                "callbackURL": {

                  "type": "string",

                  "description": "callbackURL",

                  "title": "CallbackURL",

                  "x-ms-notification-url": false,

                  "x-ms-visibility": "internal"

                },

                "entityName": {

                  "type": "string",

                  "description": "entityName",

                  "title": "EntityName",

                  "default": "File"

                },

                "triggerGroup": {

                  "type": "string",

                  "description": "triggerGroup",

                  "title": "TriggerGroup",

                  "enum": [

                    "Added",

                    "Updated"

                  ]

                }

              },

              "required": [

                "callbackURL",

                "entityName",

                "triggerGroup"

              ]

            }

          }

        ]

      }

    },

    "/api/File/AddFile": {

      "post": {

        "responses": {

          "200": {

            "description": "Success",

            "x-ms-summary": "Message",

            "schema": {

              "type": "object",

              "properties": {

                "fileId":{

                  "type": "integer",

                  "description": "This is the unique file id in database."

                },

                "base64EncodedStringFile": {

                  "type": "string",

                  "description": "This is the base 64 encoded string of the file."

                },

                "filename": {

                  "type": "string",

                  "description": "This is the filename of file."

                },

                "apiKeyAssociatedFile":{

                  "type": "string",

                  "description": "This is the API key that is unique and is associated with file."

                },

                "ticketId":{

                  "type": "integer",

                  "description": "This is the unique ticket id that is associated with ticket."

                }

              }

            }

          },

          "404": {

            "description": "Not Found",

            "x-ms-summary": "Message"

          },

          "401": {

            "description": "Unauthorized",

            "x-ms-summary": "Message"

          }

        },

        "summary": "Based on unique API key and unique ticket id file will be added to a ticket",

        "description": "This endpoint will bind file to a ticket",

        "operationId": "AddFile",

        "consumes": [

          "application/json"

        ],

        "produces": [

          "application/json"

        ],

        "parameters": [

          {

            "name": "ticketId",

            "in": "query",

            "required": false,

            "type": "string",

            "x-ms-summary": "AddFile",

            "description": "Add a file and associate it with a ticket with used of ticket id."

          },

          {

            "name": "body",

            "in": "body",

            "required": false,

            "schema": {

              "type": "object",

              "properties": {

                "FileName": {

                  "type": "string",

                  "description": "FileName"

                },

                "FormFile": {

                  "type": "string",

                  "description": "FormFile"

                }

              }

            }

          }

        ]

      }

    },

    "/api/File/UpdateFile": {

      "post": {

        "responses": {

          "200": {

            "description": "Success",

            "x-ms-summary": "Message",

            "schema": {

              "type": "object",

              "properties": {

                "fileId":{

                  "type": "integer",

                  "description": "This is the unique file id in database."

                },

                "base64EncodedStringFile": {

                  "type": "string",

                  "description": "This is the base 64 encoded string of the file."

                },

                "filename": {

                  "type": "string",

                  "description": "This is the filename of file."

                },

                "apiKeyAssociatedFile":{

                  "type": "string",

                  "description": "This is the api key that is unique and is associated with file."

                },

                "ticketId":{

                  "type": "integer",

                  "description": "This is the unique ticket id that is associated with ticket."

                }

              }

            }

          },

          "404": {

            "description": "Not Found",

            "x-ms-summary": "Message"

          },

          "401": {

            "description": "Unauthorized",

            "x-ms-summary": "Message"

          }

        },

        "summary": "Based on unique file id file is replaced with another file",

        "description": "This endpoint will update the existing file with another file with same ticket id",

        "operationId": "UpdateFile",

        "consumes": [

          "application/json"

        ],

        "produces": [

          "application/json"

        ],

        "parameters": [

          {

            "name": "fileId",

            "in": "query",

            "required": false,

            "type": "string",

            "x-ms-summary": "UpdateFile",

            "description": "Update a file with the help of unique file id."

          },

          {

            "name": "body",

            "in": "body",

            "required": false,

            "schema": {

              "type": "object",

              "properties": {

                "FileName": {

                  "type": "string",

                  "description": "FileName"

                },

                "FormFile": {

                  "type": "string",

                  "description": "FormFile"

                }

              }

            }

          }

        ]

      }

    }

  },

  "definitions": {},

  "parameters": {},

  "responses": {},

  "securityDefinitions": {

    "API Key": {

      "type": "apiKey",

      "in": "header",

      "name": "ApiKey"

    }

  },

  "security": [

    {

      "API Key": []

    }

  ],

  "tags": []

}

 