{
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "ActivateFeatureRequest": {
      "properties": {
        "featureId": {
          "description": "Guid of the feature",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature ID"
        },
        "force": {
          "description": "true to force activation of the Feature even if there are errors; otherwise, false",
          "type": "boolean",
          "x-ms-summary": "Force"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "featureId"
      ],
      "type": "object"
    },
    "AddContentTypeToListRequest": {
      "properties": {
        "contentTypeName": {
          "description": "Name of the content type",
          "type": "string",
          "x-ms-summary": "Content Type Name",
          "x-ms-visibility": "important"
        },
        "listUrl": {
          "description": "List name, URL or Guid",
          "type": "string",
          "x-ms-summary": "List URL",
          "x-ms-visibility": "important"
        },
        "makeItDefault": {
          "description": "Make the content type default for the list",
          "type": "boolean",
          "x-ms-summary": "Make It Default",
          "x-ms-visibility": "advanced"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "listUrl",
        "contentTypeName"
      ],
      "type": "object"
    },
    "AddSiteNavigationRequest": {
      "properties": {
        "location": {
          "description": "The location of the node to add",
          "enum": [
            "Top",
            "QuickLaunch"
          ],
          "type": "string",
          "x-ms-summary": "Location",
          "x-ms-visibility": "important"
        },
        "parent": {
          "description": "It is the title of a parent navigation item. If there are multiple top-level items with the same title, we will pick only the first.",
          "type": "string",
          "x-ms-summary": "Parent",
          "x-ms-visibility": "advanced"
        },
        "prepend": {
          "description": "Yes or No. The default value is No",
          "type": "boolean",
          "x-ms-summary": "Prepend",
          "x-ms-visibility": "advanced"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "title": {
          "description": "Title of navigation node",
          "type": "string",
          "x-ms-summary": "Title",
          "x-ms-visibility": "important"
        },
        "url": {
          "description": "Target URL. If the URL is empty, then the top-level navigation item will be created",
          "type": "string",
          "x-ms-summary": "Url",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "spUrl",
        "location",
        "title"
      ],
      "type": "object"
    },
    "AddUserToSPGroupRequest": {
      "properties": {
        "groupName": {
          "description": "The name of the group",
          "type": "string",
          "x-ms-summary": "Group Name",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "userLogin": {
          "description": "Login or email of the user which will be added to the specific group. Also you can specify multiple items using semicolon ';' delimited",
          "type": "string",
          "x-ms-summary": "User",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "groupName",
        "userLogin"
      ],
      "type": "object"
    },
    "ApplySiteDesignRequest": {
      "properties": {
        "siteDesign": {
          "description": "The name or identifier of the SharePoint site design",
          "type": "string",
          "x-ms-summary": "Site Design"
        },
        "url": {
          "description": "The full qualified URL (e.g. https://yourtenant.sharepoint.com/sites/team-site)",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL"
        }
      },
      "required": [
        "url",
        "siteDesign"
      ],
      "type": "object"
    },
    "BaseSPRequest": {
      "properties": {
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl"
      ],
      "type": "object"
    },
    "CheckInDocumentRequest": {
      "properties": {
        "comment": {
          "description": "The comment to accompany document check in",
          "type": "string",
          "x-ms-summary": "Comment"
        },
        "documentUrl": {
          "description": "The URL of the document to check in",
          "type": "string",
          "x-ms-summary": "Document URL"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "documentUrl"
      ],
      "type": "object"
    },
    "CheckOutDocumentRequest": {
      "properties": {
        "documentUrl": {
          "description": "The URL of the document to check in",
          "type": "string",
          "x-ms-summary": "Document URL"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "documentUrl"
      ],
      "type": "object"
    },
    "CopyAttachmentsToUrlRequest": {
      "properties": {
        "destinationUrl": {
          "description": "The URL of the folder where the attachments will be copied",
          "type": "string",
          "x-ms-summary": "Destination Folder URL",
          "x-ms-visibility": "important"
        },
        "itemId": {
          "description": "The ID of the source item",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Item ID",
          "x-ms-visibility": "important"
        },
        "listUrl": {
          "description": "List name, URL or Guid",
          "type": "string",
          "x-ms-summary": "List URL",
          "x-ms-visibility": "important"
        },
        "overwrite": {
          "description": "Overwrite if a file with the same name already exists",
          "type": "boolean",
          "x-ms-summary": "Overwrite",
          "x-ms-visibility": "advanced"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "listUrl",
        "itemId",
        "destinationUrl"
      ],
      "type": "object"
    },
    "CopyDocumentRequest": {
      "properties": {
        "destinationUrl": {
          "description": "The URL where the source document will be copied. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Destination URL"
        },
        "sourceUrl": {
          "description": "The URL of the document to be copied. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Source URL"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "sourceUrl",
        "destinationUrl"
      ],
      "type": "object"
    },
    "CopyDocumentSetRequest": {
      "properties": {
        "destinationUrl": {
          "description": "The URL where the source document set will be copied. You can use full URL as well as domain relative URL. If the URL ends with slash '/' the document sets will be placed in this folder without name changes. Otherwise the document set will be renamed",
          "type": "string",
          "x-ms-summary": "Destination URL"
        },
        "sourceUrl": {
          "description": "The URL of the document set to be copied. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Source URL"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "sourceUrl",
        "destinationUrl"
      ],
      "type": "object"
    },
    "CopyFolderRequest": {
      "properties": {
        "destinationUrl": {
          "description": "The URL where the source folder will be copied. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Destination URL"
        },
        "sourceUrl": {
          "description": "The URL of the folder to be copied. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Source URL"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "sourceUrl",
        "destinationUrl"
      ],
      "type": "object"
    },
    "CopyListItemToListRequest": {
      "properties": {
        "copyAttachments": {
          "description": "Copy the item with attached files or not",
          "type": "boolean",
          "x-ms-summary": "Copy Attachments",
          "x-ms-visibility": "advanced"
        },
        "destinationListUrl": {
          "description": "The URL of the destination list. This list must contain same fields like in the source list",
          "type": "string",
          "x-ms-summary": "Destination List URL",
          "x-ms-visibility": "important"
        },
        "itemId": {
          "description": "The ID of the source item",
          "type": "string",
          "x-ms-summary": "Item ID",
          "x-ms-visibility": "important"
        },
        "listUrl": {
          "description": "List name, URL or Guid",
          "type": "string",
          "x-ms-summary": "List URL",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "listUrl",
        "itemId",
        "destinationListUrl"
      ],
      "type": "object"
    },
    "CreateDocumentSetRequest": {
      "properties": {
        "contentType": {
          "description": "Specify Content-Type by name or id",
          "type": "string",
          "x-ms-summary": "Content Type",
          "x-ms-visibility": "advanced"
        },
        "documentSetName": {
          "description": "The name of the document set",
          "type": "string",
          "x-ms-summary": "DocumentSet Name"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "targetListUrl": {
          "description": "The name or the URL of a library or a list where the document set will be created. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Target List"
        }
      },
      "required": [
        "spUrl",
        "documentSetName",
        "targetListUrl"
      ],
      "type": "object"
    },
    "CreateFolderByUrlRequest": {
      "properties": {
        "folderUrl": {
          "description": "The URL of the folder. If you specify full path, you can create several folders",
          "type": "string",
          "x-ms-summary": "Folder URL"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "folderUrl"
      ],
      "type": "object"
    },
    "CreateFolderInListRequest": {
      "properties": {
        "folderPath": {
          "description": "The path where the folder will be created. The action will create all folders included into the path",
          "type": "string",
          "x-ms-summary": "Folder Path"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "targetListUrl": {
          "description": "The name or the URL of a library or a list where the folder will be created. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Target List"
        }
      },
      "required": [
        "spUrl",
        "targetListUrl",
        "folderPath"
      ],
      "type": "object"
    },
    "CreateListOrLibraryRequest": {
      "properties": {
        "description": {
          "description": "Description of the list",
          "type": "string",
          "x-ms-summary": "Description"
        },
        "onQuickLaunch": {
          "description": "Display this list on the Quick Launch",
          "type": "boolean",
          "x-ms-summary": "On Quick Launch"
        },
        "partialUrl": {
          "description": "Partial url of the list",
          "type": "string",
          "x-ms-summary": "Partial URL"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "template": {
          "description": "Title of the template that will be used for this list",
          "type": "string",
          "x-ms-summary": "Template"
        },
        "title": {
          "description": "Title of the list",
          "type": "string",
          "x-ms-summary": "Title"
        }
      },
      "required": [
        "spUrl",
        "title",
        "template"
      ],
      "type": "object"
    },
    "CreateSPGroupRequest": {
      "properties": {
        "groupDescription": {
          "description": "The description of the group",
          "type": "string",
          "x-ms-summary": "Group Description"
        },
        "groupName": {
          "description": "The name of the group",
          "type": "string",
          "x-ms-summary": "Group Name",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "userLogin": {
          "description": "The owner of the group, can be email or the user login",
          "type": "string",
          "x-ms-summary": "Group Owner"
        }
      },
      "required": [
        "spUrl",
        "groupName"
      ],
      "type": "object"
    },
    "CreateSiteFromTemplateRequest": {
      "properties": {
        "description": {
          "description": "Description of the web",
          "type": "string",
          "x-ms-summary": "Description",
          "x-ms-visibility": "advanced"
        },
        "inheritNavigation": {
          "description": "Specifies whether the site inherits navigation",
          "type": "boolean",
          "x-ms-summary": "Inherit Navigation",
          "x-ms-visibility": "advanced"
        },
        "inheritPermissions": {
          "description": "Specifies whether the new site will inherit permissions from its parent site",
          "type": "boolean",
          "x-ms-summary": "Inherit Permissions",
          "x-ms-visibility": "advanced"
        },
        "lcid": {
          "description": "LCID of the new web",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Lcid",
          "x-ms-visibility": "advanced"
        },
        "leafUrl": {
          "description": "A string that represents the URL leaf name",
          "type": "string",
          "x-ms-summary": "Leaf URL"
        },
        "onQuickLaunch": {
          "description": "Display this site on the Quick Launch of the parent site. Default value is No",
          "type": "boolean",
          "x-ms-summary": "On Quick Launch",
          "x-ms-visibility": "advanced"
        },
        "onTopNav": {
          "description": "Display this site on the top link bar of the parent site. Default value is Yes",
          "type": "boolean",
          "x-ms-summary": "On Top Navigation",
          "x-ms-visibility": "advanced"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "template": {
          "description": "Title of the site template that will be used for the new site",
          "type": "string",
          "x-ms-summary": "Template"
        },
        "title": {
          "description": "Title of new site",
          "type": "string",
          "x-ms-summary": "Title"
        }
      },
      "required": [
        "spUrl",
        "title",
        "template",
        "leafUrl"
      ],
      "type": "object"
    },
    "DeclareDocumentAsRecordRequest": {
      "properties": {
        "itemId": {
          "description": "The item Id or Url of document",
          "type": "string",
          "x-ms-summary": "Item ID or URL",
          "x-ms-visibility": "important"
        },
        "listName": {
          "description": "Title of the list or library",
          "type": "string",
          "x-ms-summary": "List Name",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "listName",
        "itemId"
      ],
      "type": "object"
    },
    "DocumentInfoResponse": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Document ID"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Document URL"
        }
      },
      "type": "object"
    },
    "DocumentSetInfoResponse": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Document set ID"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Document set URL"
        }
      },
      "type": "object"
    },
    "FolderInfoResponse": {
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Folder ID"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Folder URL"
        }
      },
      "type": "object"
    },
    "GetItemsByCAMLQueryRequest": {
      "properties": {
        "camlQuery": {
          "description": "CAML query that will be run",
          "type": "string",
          "x-ms-summary": "CAML Query",
          "x-ms-visibility": "important"
        },
        "folderUrl": {
          "description": "The server relative URL of a list folder from which results will be returned",
          "type": "string",
          "x-ms-summary": "Folder URL",
          "x-ms-visibility": "important"
        },
        "listUrl": {
          "description": "List name, URL or Guid",
          "type": "string",
          "x-ms-summary": "List URL",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "listUrl",
        "camlQuery"
      ],
      "type": "object"
    },
    "GetItemsByCAMLQuerySchemaResponseClass": {
      "properties": {},
      "type": "object",
      "x-ms-dynamic-properties": {
        "itemValuePath": "response",
        "operationId": "FlowV1SharePointFlowSchemaGetItemsByCAMLQueryPost",
        "parameters": {
          "camlQuery": {
            "parameterReference": "request/camlQuery"
          }
        }
      },
      "x-ms-dynamic-schema": {
        "operationId": "FlowV1SharePointFlowSchemaGetItemsByCAMLQueryPost",
        "parameters": {
          "camlQuery": {
            "parameter": "camlQuery"
          }
        },
        "value-path": "response"
      }
    },
    "GetListItemVersionsHistoryRequest": {
      "properties": {
        "fieldName": {
          "description": "Name of the field for which you want to get the version history",
          "type": "string",
          "x-ms-summary": "Field Name",
          "x-ms-visibility": "important"
        },
        "itemId": {
          "description": "Item ID of the item for which you want to get the version history",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Item ID",
          "x-ms-visibility": "important"
        },
        "listUrl": {
          "description": "List name, URL or Guid",
          "type": "string",
          "x-ms-summary": "List URL",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "listUrl",
        "itemId",
        "fieldName"
      ],
      "type": "object"
    },
    "GetSPGroupMembersResponse": {
      "properties": {
        "users": {
          "items": {
            "$ref": "#/definitions/SharePointUserResponse"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Users"
        }
      },
      "type": "object"
    },
    "GetSiteOptionValueRequest": {
      "properties": {
        "optionName": {
          "description": "Name of the option",
          "type": "string",
          "x-ms-summary": "Option Name",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "optionName"
      ],
      "type": "object"
    },
    "GetUsersFromGroupRequest": {
      "properties": {
        "groupName": {
          "description": "The name of the group",
          "type": "string",
          "x-ms-summary": "Group Name",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "groupName"
      ],
      "type": "object"
    },
    "ListFileUrlsResponse": {
      "properties": {
        "fileUrls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "File URLs"
        }
      },
      "type": "object"
    },
    "ListItemIdResponse": {
      "properties": {
        "resultItemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Result Item ID"
        }
      },
      "type": "object"
    },
    "MoveAttachmentsToUrlRequest": {
      "properties": {
        "destinationUrl": {
          "description": "The URL of the folder where the attachments will be moved",
          "type": "string",
          "x-ms-summary": "Destination Folder URL",
          "x-ms-visibility": "important"
        },
        "itemId": {
          "description": "The ID of the source item",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Item ID",
          "x-ms-visibility": "important"
        },
        "listUrl": {
          "description": "List name, URL or Guid",
          "type": "string",
          "x-ms-summary": "List URL",
          "x-ms-visibility": "important"
        },
        "overwrite": {
          "description": "Overwrite if a file with the same name already exists",
          "type": "boolean",
          "x-ms-summary": "Overwrite",
          "x-ms-visibility": "advanced"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "listUrl",
        "itemId",
        "destinationUrl"
      ],
      "type": "object"
    },
    "MoveDocumentRequest": {
      "properties": {
        "destinationUrl": {
          "description": "The URL where the source document will be moved. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Destination URL"
        },
        "sourceUrl": {
          "description": "The URL of the document to be moved. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Source URL"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "sourceUrl",
        "destinationUrl"
      ],
      "type": "object"
    },
    "MoveDocumentSetRequest": {
      "properties": {
        "destinationUrl": {
          "description": "The URL where the source document set will be moved. You can use full URL as well as domain relative URL. If the URL ends with slash '/' the document sets will be placed in this folder without name changes. Otherwise the Document set will be renamed",
          "type": "string",
          "x-ms-summary": "Destination URL"
        },
        "sourceUrl": {
          "description": "The URL of the document set to be moved. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Source URL"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "sourceUrl",
        "destinationUrl"
      ],
      "type": "object"
    },
    "MoveFolderRequest": {
      "properties": {
        "destinationUrl": {
          "description": "The URL where the source folder will be moved. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Destination URL"
        },
        "sourceUrl": {
          "description": "The URL of the folder to be moved. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Source URL"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "sourceUrl",
        "destinationUrl"
      ],
      "type": "object"
    },
    "MoveListItemToListRequest": {
      "properties": {
        "copyAttachments": {
          "description": "Move the item with attached files or not",
          "type": "boolean",
          "x-ms-summary": "Move Attachments",
          "x-ms-visibility": "advanced"
        },
        "destinationListUrl": {
          "description": "The URL of the destination list. This list must contain same fields like in the source list",
          "type": "string",
          "x-ms-summary": "Destination List URL",
          "x-ms-visibility": "important"
        },
        "itemId": {
          "description": "The ID of the source item",
          "type": "string",
          "x-ms-summary": "Item ID",
          "x-ms-visibility": "important"
        },
        "listUrl": {
          "description": "List name, URL or Guid",
          "type": "string",
          "x-ms-summary": "List URL",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "listUrl",
        "itemId",
        "destinationListUrl"
      ],
      "type": "object"
    },
    "ProvisionPnPTemplateRequest": {
      "properties": {
        "clearNavigation": {
          "description": "If you specify this value the navigation nodes will always be removed before adding the nodes in the template",
          "type": "boolean",
          "x-ms-summary": "Clear Navigation",
          "x-ms-visibility": "advanced"
        },
        "excludeHandlers": {
          "description": "Allows you to run all handlers, excluding the ones specified.",
          "type": "string",
          "x-ms-summary": "Exclude Handlers",
          "x-ms-visibility": "advanced"
        },
        "handlers": {
          "description": "Allows you to only process a specific part of the template. Notice that this might fail, as some of the handlers require other artifacts in place if they are not part of what your applying. Visit https://docs.microsoft.com/dotnet/api/officedevpnp.core.framework.provisioning.model.handlers for possible values.",
          "type": "string",
          "x-ms-summary": "Handlers",
          "x-ms-visibility": "advanced"
        },
        "ignoreDuplicateDataRowErrors": {
          "description": "Ignore duplicate data row errors when the data row in the template already exists.",
          "type": "boolean",
          "x-ms-summary": "Ignore Duplicate Data Row Errors",
          "x-ms-visibility": "advanced"
        },
        "overwriteSystemPropertyBagValues": {
          "description": "Specify this parameter if you want to overwrite and/or create properties that are known to be system entries (starting with vti_, dlc_, etc.)",
          "type": "boolean",
          "x-ms-summary": "Overwrite System PropertyBag Values",
          "x-ms-visibility": "advanced"
        },
        "parameters": {
          "description": "Allows you to specify parameters that can be referred to in the template by means of the <Key>=<Value>; token",
          "type": "string",
          "x-ms-summary": "Parameters",
          "x-ms-visibility": "advanced"
        },
        "provisionContentTypesToSubWebs": {
          "description": "If set content types will be provisioned if the target web is a subweb.",
          "type": "boolean",
          "x-ms-summary": "Provision Content Types To SubWebs",
          "x-ms-visibility": "advanced"
        },
        "provisionFieldsToSubWebs": {
          "description": "If set fields will be provisioned if the target web is a subweb.",
          "type": "boolean",
          "x-ms-summary": "Provision Fields To SubWebs",
          "x-ms-visibility": "advanced"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "xmlTemplateContent": {
          "description": "The content of an XML or PnP template",
          "format": "byte",
          "type": "string",
          "x-ms-summary": "Template Content",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "xmlTemplateContent"
      ],
      "type": "object"
    },
    "RemoveDocumentRequest": {
      "properties": {
        "sourceUrl": {
          "description": "The URL of the document to be removed. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Document URL"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "sourceUrl"
      ],
      "type": "object"
    },
    "RemoveFolderByUrlRequest": {
      "properties": {
        "sourceUrl": {
          "description": "The URL of the library where the source folder will be removed. You can use full URL as well as domain relative URL",
          "type": "string",
          "x-ms-summary": "Folder URL"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "sourceUrl"
      ],
      "type": "object"
    },
    "RemoveSPGroupRequest": {
      "properties": {
        "groupName": {
          "description": "The name of the group",
          "type": "string",
          "x-ms-summary": "Group Name",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "groupName"
      ],
      "type": "object"
    },
    "RemoveSiteNavigationRequest": {
      "properties": {
        "location": {
          "description": "The location of the node to add",
          "enum": [
            "Top",
            "QuickLaunch"
          ],
          "type": "string",
          "x-ms-summary": "Location",
          "x-ms-visibility": "important"
        },
        "parent": {
          "description": "It is the title of a parent navigation item. If there are multiple top-level items with the same title, we will pick only the first.",
          "type": "string",
          "x-ms-summary": "Parent",
          "x-ms-visibility": "advanced"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "title": {
          "description": "Title of navigation node",
          "type": "string",
          "x-ms-summary": "Title",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "location",
        "title"
      ],
      "type": "object"
    },
    "RemoveUserFromSPGroupRequest": {
      "properties": {
        "groupName": {
          "description": "The name of the group",
          "type": "string",
          "x-ms-summary": "Group Name",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "userLogin": {
          "description": "Login or email of the user which will be removed from the specific group. Also you can specify multiple items using semicolon ';' delimited",
          "type": "string",
          "x-ms-summary": "User",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "groupName",
        "userLogin"
      ],
      "type": "object"
    },
    "SPGroupProperties": {
      "properties": {
        "allowMembersEditMembership": {
          "description": "A value that specifies whether group members can modify membership in the group",
          "type": "boolean",
          "x-ms-summary": "Allow Members Edit Membership",
          "x-ms-visibility": "important"
        },
        "allowRequestToJoinLeave": {
          "description": "A value that specifies whether to allow users to request membership in the group and to allow users to request to leave the group",
          "type": "boolean",
          "x-ms-summary": "Allow Request to Join Leave",
          "x-ms-visibility": "important"
        },
        "autoAcceptRequestToJoinLeave": {
          "description": "A value that specifies whether users are automatically added or removed when they make a request",
          "type": "boolean",
          "x-ms-summary": "Auto Accept Request to Join Leave",
          "x-ms-visibility": "important"
        },
        "description": {
          "description": "The description for the group",
          "type": "string",
          "x-ms-summary": "Description",
          "x-ms-visibility": "important"
        },
        "onlyAllowMembersViewMembership": {
          "description": "A value that specifies whether only group members are allowed to view the list of members in the group",
          "type": "boolean",
          "x-ms-summary": "Only Allow Members View Membership",
          "x-ms-visibility": "important"
        },
        "owner": {
          "description": "The owner for the group, which can be a user or another group",
          "type": "string",
          "x-ms-summary": "Owner",
          "x-ms-visibility": "important"
        },
        "requestToJoinLeaveEmailSetting": {
          "description": "The e-mail address to which membership requests are sent",
          "type": "string",
          "x-ms-summary": "Request to Join Leave Email Setting",
          "x-ms-visibility": "important"
        },
        "title": {
          "description": "The title for the group",
          "type": "string",
          "x-ms-summary": "Title",
          "x-ms-visibility": "important"
        }
      },
      "type": "object"
    },
    "SPSiteOptionValueResponse": {
      "properties": {
        "optionValue": {
          "type": "string",
          "x-ms-summary": "Option Value"
        }
      },
      "type": "object"
    },
    "SPWebProperties": {
      "properties": {
        "alternateCssUrl": {
          "description": "The URL for an alternate cascading style sheet (CSS) to use in the website",
          "type": "string",
          "x-ms-summary": "Alternate Css URL",
          "x-ms-visibility": "important"
        },
        "associatedMemberGroup": {
          "description": "The users who have been given contribute permissions to the website",
          "type": "string",
          "x-ms-summary": "Associated Member Group",
          "x-ms-visibility": "important"
        },
        "associatedOwnerGroup": {
          "description": "The associated owner groups of the website",
          "type": "string",
          "x-ms-summary": "Associated Owner Group",
          "x-ms-visibility": "important"
        },
        "associatedVisitorGroup": {
          "description": "The associated visitor group of the website",
          "type": "string",
          "x-ms-summary": "Associated Visitor Group",
          "x-ms-visibility": "important"
        },
        "containsConfidentialInfo": {
          "description": "A value that specifies whether the SharePoint site contain a confidential information",
          "type": "boolean",
          "x-ms-summary": "Contains Confidential Info",
          "x-ms-visibility": "advanced"
        },
        "customMasterUrl": {
          "description": "The URL for a custom master page file to apply to the website",
          "type": "string",
          "x-ms-summary": "Custom Master URL",
          "x-ms-visibility": "advanced"
        },
        "description": {
          "description": "The description for the site",
          "type": "string",
          "x-ms-summary": "Description",
          "x-ms-visibility": "important"
        },
        "enableMinimalDownload": {
          "description": "A value that specifies whether the Web site should use Minimal Download Strategy",
          "type": "boolean",
          "x-ms-summary": "Enable Minimal Download",
          "x-ms-visibility": "advanced"
        },
        "isMultilingual": {
          "description": "A value that indicates whether a multilingual user interface is enabled for the website",
          "type": "boolean",
          "x-ms-summary": "Is Multilingual",
          "x-ms-visibility": "advanced"
        },
        "masterUrl": {
          "description": "The URL of the master page that is used for the website",
          "type": "string",
          "x-ms-summary": "Master URL",
          "x-ms-visibility": "advanced"
        },
        "membersCanShare": {
          "description": "Allow Members to share the site and invite others",
          "type": "boolean",
          "x-ms-summary": "Members Can Share",
          "x-ms-visibility": "advanced"
        },
        "noCrawl": {
          "description": "A value that specifies whether searching is enabled for the website",
          "type": "boolean",
          "x-ms-summary": "No Crawl",
          "x-ms-visibility": "advanced"
        },
        "overwriteTranslationsOnChange": {
          "description": "A value that indicates whether changes made to user-specified text in the default language should automatically overwrite existing translations made in all alternate languages",
          "type": "boolean",
          "x-ms-summary": "Overwrite Translations on Change",
          "x-ms-visibility": "advanced"
        },
        "quickLaunchEnabled": {
          "description": "A value that specifies whether the Quick Launch area is enabled on the website",
          "type": "boolean",
          "x-ms-summary": "Quick Launch Enabled",
          "x-ms-visibility": "important"
        },
        "requestAccessEmail": {
          "description": "The e-mail address to which requests for access are sent",
          "type": "string",
          "x-ms-summary": "Request Access Email",
          "x-ms-visibility": "advanced"
        },
        "saveSiteAsTemplateEnabled": {
          "description": "A value that specifies whether the Web site can be saved as a site template",
          "type": "boolean",
          "x-ms-summary": "Save Site as Template Enabled",
          "x-ms-visibility": "advanced"
        },
        "serverRelativeUrl": {
          "description": "The server-relative URL for the website",
          "type": "string",
          "x-ms-summary": "Server Relative URL",
          "x-ms-visibility": "advanced"
        },
        "siteLogoUrl": {
          "description": "The absolute URL of the website logo",
          "type": "string",
          "x-ms-summary": "Site Logo URL",
          "x-ms-visibility": "important"
        },
        "syndicationEnabled": {
          "description": "A value that specifies whether Really Simple Syndication (RSS) is enabled in the website",
          "type": "boolean",
          "x-ms-summary": "Syndication Enabled",
          "x-ms-visibility": "advanced"
        },
        "title": {
          "description": "The title for the website",
          "type": "string",
          "x-ms-summary": "Title",
          "x-ms-visibility": "important"
        },
        "treeViewEnabled": {
          "description": "A value that specifies whether the SharePoint Foundation TreeView is enabled in the left navigational area of website pages",
          "type": "boolean",
          "x-ms-summary": "Tree View Enabled",
          "x-ms-visibility": "important"
        },
        "uiVersion": {
          "description": "The current version number of the user interface",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "UI Version",
          "x-ms-visibility": "advanced"
        }
      },
      "type": "object"
    },
    "SetDefaultSiteGroupRequest": {
      "properties": {
        "groupName": {
          "description": "Name of the group",
          "type": "string",
          "x-ms-summary": "Group Name"
        },
        "groupType": {
          "description": "Type of the group",
          "enum": [
            "Owner",
            "Member",
            "Visitor"
          ],
          "type": "string",
          "x-ms-summary": "Group Type"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "groupType",
        "groupName"
      ],
      "type": "object"
    },
    "SharePointUserResponse": {
      "properties": {
        "claims": {
          "type": "string",
          "x-ms-summary": "User Claims"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "User Email"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "User ID"
        },
        "loginName": {
          "type": "string",
          "x-ms-summary": "User Name"
        }
      },
      "type": "object"
    },
    "SharePointVersionResponse": {
      "properties": {
        "editor": {
          "$ref": "#/definitions/SharePointUserResponse"
        },
        "modified": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Modified"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "type": "object"
    },
    "StartListWorkflowRequest": {
      "properties": {
        "inputParameters": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "JSON string that contains input parameters for workflow",
          "type": "object",
          "x-ms-summary": "Input Parameters"
        },
        "itemId": {
          "description": "Item ID of the item for which you want to start the list workflow",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Item ID",
          "x-ms-visibility": "important"
        },
        "listUrl": {
          "description": "List name, URL or Guid",
          "type": "string",
          "x-ms-summary": "List URL",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "workflowName": {
          "description": "Name of the workflow which will be started",
          "type": "string",
          "x-ms-summary": "Workflow Name",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "listUrl",
        "workflowName",
        "itemId"
      ],
      "type": "object"
    },
    "StartSiteWorkflowRequest": {
      "properties": {
        "inputParameters": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "JSON string that contains input parameters for workflow",
          "type": "object",
          "x-ms-summary": "Input Parameters"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "workflowName": {
          "description": "Name of the workflow which will be started",
          "type": "string",
          "x-ms-summary": "Workflow Name",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "workflowName"
      ],
      "type": "object"
    },
    "UndeclareDocumentAsRecordRequest": {
      "properties": {
        "itemId": {
          "description": "The item Id or Url of document",
          "type": "string",
          "x-ms-summary": "Item ID or URL",
          "x-ms-visibility": "important"
        },
        "listName": {
          "description": "Title of the list or library",
          "type": "string",
          "x-ms-summary": "List Name",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "listName",
        "itemId"
      ],
      "type": "object"
    },
    "UpdateListItemRequest": {
      "properties": {
        "data": {
          "description": "JSON object like { \"InternalFieldName\": \"FieldValue\" }",
          "type": "string",
          "x-ms-summary": "Field values",
          "x-ms-visibility": "important"
        },
        "itemId": {
          "description": "The item Id or Url of document/folder",
          "type": "string",
          "x-ms-summary": "Item ID or URL",
          "x-ms-visibility": "important"
        },
        "listName": {
          "description": "Title of the list or library",
          "type": "string",
          "x-ms-summary": "List Name",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "listName",
        "itemId",
        "data"
      ],
      "type": "object"
    },
    "UpdateSPGroupPropertiesRequest": {
      "properties": {
        "groupName": {
          "description": "The name of the group",
          "type": "string",
          "x-ms-summary": "Group Name",
          "x-ms-visibility": "important"
        },
        "properties": {
          "$ref": "#/definitions/SPGroupProperties"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "groupName",
        "properties"
      ],
      "type": "object"
    },
    "UpdateSitePropertiesRequest": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/SPWebProperties"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "properties"
      ],
      "type": "object"
    },
    "UserExistsInGroupRequest": {
      "properties": {
        "groupName": {
          "description": "The name of the group",
          "type": "string",
          "x-ms-summary": "Group Name",
          "x-ms-visibility": "important"
        },
        "spUrl": {
          "description": "The action will be executed on the specified SharePoint site",
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "x-ms-visibility": "important"
        },
        "userLogin": {
          "description": "Login or email of a user for checking if he is a member in the specified group",
          "type": "string",
          "x-ms-summary": "User",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "spUrl",
        "groupName",
        "userLogin"
      ],
      "type": "object"
    },
    "UserExistsResponse": {
      "properties": {
        "userExists": {
          "type": "boolean",
          "x-ms-summary": "User Exists"
        }
      },
      "type": "object"
    },
    "VersionsHistoryResponse": {
      "properties": {
        "countVersions": {
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "x-ms-summary": "Count Versions"
        },
        "versions": {
          "items": {
            "$ref": "#/definitions/SharePointVersionResponse"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Versions"
        }
      },
      "type": "object"
    },
    "WebUrlResponse": {
      "properties": {
        "url": {
          "type": "string",
          "x-ms-summary": "Web URL"
        }
      },
      "type": "object"
    },
    "WorkflowGuidResponse": {
      "properties": {
        "workflowGuid": {
          "type": "string",
          "x-ms-summary": "Workflow GUID"
        }
      },
      "type": "object"
    }
  },
  "host": "api.plumsail.com",
  "info": {
    "contact": {
      "email": "support@plumsail.com",
      "name": "Support",
      "url": "https://plumsail.com"
    },
    "description": "This connector provides a set of SharePoint related actions. For example, permissions, documents, folders, document sets management. Visit official site for more information https://plumsail.com/actions/",
    "title": "Plumsail SP",
    "version": "v1"
  },
  "parameters": {},
  "paths": {
    "/flow/v1/SharePointFlow/Schema/ChangePermissions": {
      "post": {
        "consumes": [],
        "description": "System",
        "operationId": "FlowV1SharePointFlowSchemaChangePermissionsPost",
        "parameters": [
          {
            "description": "The type of the operation",
            "enum": [
              "Grant",
              "Remove",
              "RemoveAll",
              "RestoreInheritance"
            ],
            "in": "query",
            "name": "actionType",
            "required": true,
            "type": "string",
            "x-ms-summary": "Action type"
          },
          {
            "description": "The target of the operation",
            "enum": [
              "Site",
              "List",
              "Item",
              "Folder",
              "Document"
            ],
            "in": "query",
            "name": "target",
            "required": true,
            "type": "string",
            "x-ms-summary": "Target"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "ChangePermissionsSchema",
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/flow/v1/SharePointFlow/Schema/CreateModernSite": {
      "post": {
        "consumes": [],
        "description": "System",
        "operationId": "FlowV1SharePointFlowSchemaCreateModernSitePost",
        "parameters": [
          {
            "description": "The type of the site for create",
            "enum": [
              "TeamSite",
              "CommunicationSite",
              "TeamSiteWithoutGroup"
            ],
            "in": "query",
            "name": "siteType",
            "required": true,
            "type": "string",
            "x-ms-summary": "Site Type"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "CreateModernSiteSchema",
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/flow/v1/SharePointFlow/Schema/GetItemsByCAMLQuery": {
      "post": {
        "consumes": [],
        "description": "System",
        "operationId": "FlowV1SharePointFlowSchemaGetItemsByCAMLQueryPost",
        "parameters": [
          {
            "description": "CAML query",
            "in": "query",
            "name": "camlQuery",
            "required": true,
            "type": "string",
            "x-ms-summary": "CAML Query"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "GetItemsByCAMLQueryResponseSchema",
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/flow/v1/SharePointFlow/Schema/GetModernSiteDesigns": {
      "post": {
        "consumes": [],
        "description": "System",
        "operationId": "FlowV1SharePointFlowSchemaGetModernSiteDesignsPost",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "GetModernSiteDesignsSchema",
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/flow/v1/SharePointFlow/Schema/InviteExternalUser": {
      "post": {
        "consumes": [],
        "description": "System",
        "operationId": "FlowV1SharePointFlowSchemaInviteExternalUserPost",
        "parameters": [
          {
            "description": "The target of the operation",
            "enum": [
              "Site",
              "Item",
              "Group"
            ],
            "in": "query",
            "name": "target",
            "required": true,
            "type": "string",
            "x-ms-summary": "Target"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "InviteExternalUserSchema",
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/flow/v1/SharePointFlow/jobs/ActivateFeature": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Activate a feature with specific ID",
        "operationId": "FlowV1SharePointFlowJobsActivateFeaturePost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivateFeatureRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Activate SharePoint Feature",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/AddContentTypeToSharePointList": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Adds the specified content type to a SharePoint list",
        "operationId": "FlowV1SharePointFlowJobsAddContentTypeToSharePointListPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddContentTypeToListRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Add Content Type to SharePoint List",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/AddSiteNavigation": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Adds a menu item to either the quicklaunch or top navigation",
        "operationId": "FlowV1SharePointFlowJobsAddSiteNavigationPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddSiteNavigationRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Add SharePoint Site Navigation Node",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/AddUserToSharePointGroup": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Adds a user to a specific SharePoint group",
        "operationId": "FlowV1SharePointFlowJobsAddUserToSharePointGroupPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddUserToSPGroupRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Add User to SharePoint Group",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/ApplySiteDesign": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Applies design to target SharePoint site",
        "operationId": "FlowV1SharePointFlowJobsApplySiteDesignPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplySiteDesignRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebUrlResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Apply SharePoint Site Design",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/ChangePermissions": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Grant, remove and restore permissions for the site, the list, and the item",
        "operationId": "FlowV1SharePointFlowJobsChangePermissionsPost",
        "parameters": [
          {
            "description": "The type of the operation",
            "enum": [
              "Grant",
              "Remove",
              "RemoveAll",
              "RestoreInheritance"
            ],
            "in": "query",
            "name": "actionType",
            "required": true,
            "type": "string",
            "x-ms-summary": "Action type"
          },
          {
            "description": "The target of the operation",
            "enum": [
              "Site",
              "List",
              "Item",
              "Folder",
              "Document"
            ],
            "in": "query",
            "name": "target",
            "required": true,
            "type": "string",
            "x-ms-summary": "Target"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "FlowV1SharePointFlowSchemaChangePermissionsPost",
                "parameters": {
                  "actionType": {
                    "parameter": "actionType"
                  },
                  "target": {
                    "parameter": "target"
                  }
                },
                "value-path": "items"
              }
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Change SharePoint permissions",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CheckInDocument": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Check-in the document at the specified URL with the specified comment",
        "operationId": "FlowV1SharePointFlowJobsCheckInDocumentPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckInDocumentRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Check In SharePoint Document",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CheckOutDocument": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Check-out the document at the specified URL",
        "operationId": "FlowV1SharePointFlowJobsCheckOutDocumentPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckOutDocumentRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Check Out SharePoint Document",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyAttachmentsToUrl": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Copies attachments from the SharePoint list item to the library using the specified folder URL",
        "operationId": "FlowV1SharePointFlowJobsCopyAttachmentsToUrlPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyAttachmentsToUrlRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListFileUrlsResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy SharePoint Item Attachments to URL",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyDocumentFromLibrary": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Copies the document from the document library to the specified URL. You can copy the document to another document library cross-site or to another folder",
        "operationId": "FlowV1SharePointFlowJobsCopyDocumentFromLibraryPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyDocumentRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy SharePoint Document from Library",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyDocumentSet": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Copies the document set from the document library to the specified URL. You can copy the document sets to another document library cross-site or to another folder",
        "operationId": "FlowV1SharePointFlowJobsCopyDocumentSetPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyDocumentSetRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentSetInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy SharePoint Document Set",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyFolderFromLibrary": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Copies the folder from the document library to the specified URL. You can copy the folder to another document library cross-site or to another folder",
        "operationId": "FlowV1SharePointFlowJobsCopyFolderFromLibraryPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyFolderRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy SharePoint Folder from Library",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyListItemToSharePointList": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Copies the specified list item to another SharePoint list",
        "operationId": "FlowV1SharePointFlowJobsCopyListItemToSharePointListPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyListItemToListRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListItemIdResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy List Item to SharePoint List",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateDocumentSet": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Creates a new document set in the document library by the specified URL",
        "operationId": "FlowV1SharePointFlowJobsCreateDocumentSetPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDocumentSetRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentSetInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Document Set",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateFolderByUrl": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Creates a new folder in the document library by the specified URL",
        "operationId": "FlowV1SharePointFlowJobsCreateFolderByUrlPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFolderByUrlRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Folder by URL",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateFolderInList": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Creates a new folder in the document library or list using the specified path",
        "operationId": "FlowV1SharePointFlowJobsCreateFolderInListPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFolderInListRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Folder in List",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateListOrLibrary": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Create list or library by template",
        "operationId": "FlowV1SharePointFlowJobsCreateListOrLibraryPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateListOrLibraryRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint List or Library",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateModernSite": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Creates a modern SharePoint Team or Communication site",
        "operationId": "FlowV1SharePointFlowJobsCreateModernSitePost",
        "parameters": [
          {
            "description": "The type of the site for create",
            "enum": [
              "TeamSite",
              "CommunicationSite",
              "TeamSiteWithoutGroup"
            ],
            "in": "query",
            "name": "siteType",
            "required": true,
            "type": "string",
            "x-ms-summary": "Site Type"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "FlowV1SharePointFlowSchemaCreateModernSitePost",
                "parameters": {
                  "siteType": {
                    "parameter": "siteType"
                  }
                },
                "value-path": "items"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebUrlResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create Modern SharePoint Site",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateSharePointGroup": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Creates the SharePoint group with a specified name",
        "operationId": "FlowV1SharePointFlowJobsCreateSharePointGroupPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSPGroupRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Group",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateSiteFromTemplate": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Create a new SharePoint site based on specific template",
        "operationId": "FlowV1SharePointFlowJobsCreateSiteFromTemplatePost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSiteFromTemplateRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebUrlResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Subsite from Template",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/DeclareDocumentAsRecord": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Declares Document in SharePoint Library As Record",
        "operationId": "FlowV1SharePointFlowJobsDeclareDocumentAsRecordPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclareDocumentAsRecordRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Declare SharePoint Document as Record",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/DeleteSharePointSite": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Deletes the SharePoint site by a specific URL",
        "operationId": "FlowV1SharePointFlowJobsDeleteSharePointSitePost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseSPRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Delete SharePoint Site",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/GetItemsByCamlQuery": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Executes a CAML query on a list or on a document library and returns the collection of elements",
        "operationId": "FlowV1SharePointFlowJobsGetItemsByCamlQueryPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetItemsByCAMLQueryRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetItemsByCAMLQuerySchemaResponseClass"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Get SharePoint Items By CAML Query",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/GetSharePointGroupMembers": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Gets members of a specific SharePoint group",
        "operationId": "FlowV1SharePointFlowJobsGetSharePointGroupMembersPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetUsersFromGroupRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetSPGroupMembersResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Get Members of SharePoint Group",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/GetSharePointSiteOptionValueAsString": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Reads a value from SharePoint Site Options (Property Bag)",
        "operationId": "FlowV1SharePointFlowJobsGetSharePointSiteOptionValueAsStringPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetSiteOptionValueRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SPSiteOptionValueResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Get SharePoint Site Option Value",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/GetVersionsHistory": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Returns the changes history for the specific field from the SharePoint list item",
        "operationId": "FlowV1SharePointFlowJobsGetVersionsHistoryPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetListItemVersionsHistoryRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VersionsHistoryResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Get SharePoint Item Versions History",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/InviteExternalUserToSharePoint": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Invites external users with specific permission to an SharePoint site, an specific SharePoint group or an item in a SharePoint list",
        "operationId": "FlowV1SharePointFlowJobsInviteExternalUserToSharePointPost",
        "parameters": [
          {
            "description": "The target of the operation",
            "enum": [
              "Site",
              "Item",
              "Group"
            ],
            "in": "query",
            "name": "target",
            "required": true,
            "type": "string",
            "x-ms-summary": "Target"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "FlowV1SharePointFlowSchemaInviteExternalUserPost",
                "parameters": {
                  "target": {
                    "parameter": "target"
                  }
                },
                "value-path": "items"
              }
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Invite External User to SharePoint",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveAttachmentsToUrl": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Moves attachments from the SharePoint list item to the library using the specified folder URL",
        "operationId": "FlowV1SharePointFlowJobsMoveAttachmentsToUrlPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveAttachmentsToUrlRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListFileUrlsResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move SharePoint Item Attachments to URL",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveDocumentFromLibrary": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Moves the document from the document library to the specified URL. You can copy the document to another document library cross-site or to another folder",
        "operationId": "FlowV1SharePointFlowJobsMoveDocumentFromLibraryPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveDocumentRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move SharePoint Document from Library",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveDocumentSet": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Moves the document set from the document library to the specified URL. You can copy the document sets to another document library cross-site or to another folder",
        "operationId": "FlowV1SharePointFlowJobsMoveDocumentSetPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveDocumentSetRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentSetInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move SharePoint Document Set",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveFolderFromLibrary": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Moves the folder from the document library to the specified URL. You can move the folder to another document library cross-site or to another folder",
        "operationId": "FlowV1SharePointFlowJobsMoveFolderFromLibraryPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveFolderRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move SharePoint Folder from Library",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveListItemToSharePointList": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Moves the specified list item to another SharePoint list",
        "operationId": "FlowV1SharePointFlowJobsMoveListItemToSharePointListPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveListItemToListRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListItemIdResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move List Item to SharePoint List",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/ProvisionPnPTemplate": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Applies a PnP template to a SharePoint site",
        "operationId": "FlowV1SharePointFlowJobsProvisionPnPTemplatePost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProvisionPnPTemplateRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Provision PnP Template to SharePoint",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/ProvisionPnPTenantTemplate": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Applies a PnP tenant template to SharePoint",
        "operationId": "FlowV1SharePointFlowJobsProvisionPnPTenantTemplatePost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProvisionPnPTemplateRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Provision PnP Tenant Template to SharePoint",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveDocumentByUrl": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Remove the document by a specific URL",
        "operationId": "FlowV1SharePointFlowJobsRemoveDocumentByUrlPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveDocumentRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove SharePoint Document by URL",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveFolderByUrl": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Removes the folder from the document library or list by the specified URL",
        "operationId": "FlowV1SharePointFlowJobsRemoveFolderByUrlPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveFolderByUrlRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove SharePoint Folder by URL",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveSharePointGroup": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Removes the SharePoint group by a specified name",
        "operationId": "FlowV1SharePointFlowJobsRemoveSharePointGroupPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveSPGroupRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove SharePoint Group",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveSiteNavigation": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Removes a menu item from either the quicklaunch or top navigation",
        "operationId": "FlowV1SharePointFlowJobsRemoveSiteNavigationPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveSiteNavigationRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove SharePoint Site Navigation Node",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveUserFromSharePointGroup": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Removes a user from a specific SharePoint group",
        "operationId": "FlowV1SharePointFlowJobsRemoveUserFromSharePointGroupPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveUserFromSPGroupRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove User from SharePoint Group",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/SetDefaultSiteGroup": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Configure default groups for a site with the help of Microsoft Flow. It is alternative of the <site URL>/_layouts/15/permsetup.aspx page in SharePoint UI.",
        "operationId": "FlowV1SharePointFlowJobsSetDefaultSiteGroupPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetDefaultSiteGroupRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Set Default SharePoint Site Group",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/StartListWorkflow": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Starts a SharePoint list level workflow and pass input parameters, if they were specified. The action can run only 2013 workflows",
        "operationId": "FlowV1SharePointFlowJobsStartListWorkflowPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartListWorkflowRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WorkflowGuidResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Start SharePoint List Workflow (2013)",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/StartSiteWorkflow": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Starts a SharePoint site level workflow and pass input parameters, if they were specified. The action can run only 2013 workflows",
        "operationId": "FlowV1SharePointFlowJobsStartSiteWorkflowPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartSiteWorkflowRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WorkflowGuidResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Start SharePoint Site Workflow (2013)",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/UndeclareDocumentAsRecord": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Undeclares Document in SharePoint Library As Record",
        "operationId": "FlowV1SharePointFlowJobsUndeclareDocumentAsRecordPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UndeclareDocumentAsRecordRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Undeclare SharePoint Document as Record",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/UpdateListItem": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Updates an item in a SharePoint list or library",
        "operationId": "FlowV1SharePointFlowJobsUpdateListItemPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateListItemRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Update SharePoint Item",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/UpdateSharePointGroupProperties": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Updates SharePoint group properties like AutoAcceptRequestToJoinLeave, AllowMembersEditMembership or other options described in MSDN",
        "operationId": "FlowV1SharePointFlowJobsUpdateSharePointGroupPropertiesPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSPGroupPropertiesRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Update SharePoint Group Properties",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/UpdateSharePointSiteProperties": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Updates web properties like Title, Description or other string options described in at MSDN",
        "operationId": "FlowV1SharePointFlowJobsUpdateSharePointSitePropertiesPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSitePropertiesRequest"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Update SharePoint Site Properties",
        "tags": [
          "SharePointFlow"
        ]
      }
    },
    "/flow/v1/SharePointFlow/jobs/UserExistInSharePointGroup": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Checks if a user is a member of a specifed SharePoint group",
        "operationId": "FlowV1SharePointFlowJobsUserExistInSharePointGroupPost",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserExistsInGroupRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserExistsResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job exection will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Is User Member of SharePoint Group",
        "tags": [
          "SharePointFlow"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "responses": {
    "401": {
      "description": "Unauthorized"
    },
    "500": {
      "description": "Internal server error"
    }
  },
  "schemes": [
    "https"
  ],
  "security": [],
  "securityDefinitions": {
    "api_key": {
      "description": "API key issued by account.plumsail.com",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": []
}