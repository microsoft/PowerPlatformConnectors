{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Timeline API",
    "description": "AppsForOps Timeline is a game changing Customer Success software platform and the connector allows you to create new timeline entries on AppsForOps Timelines.",
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "host": "timeline.appsforops.com",
  "basePath": "/api",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/api/ext/NPS": {
      "post": {
        "tags": [
          "NPS"
        ],
        "summary": "Create a new Net Promoter Score (NPS) value for the specified user",
        "description": "Calling this will create a new Net Promoter Score (NPS) value for the specified user.",
        "operationId": "ApiExtNPSPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Provide details of the NPS entry",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NPSModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NPSCreateResponse"
            }
          }
        }
      }
    },
    "/api/ext/Timeline": {
      "post": {
        "tags": [
          "TimelineExt"
        ],
        "summary": "Create a new Timeline entry for the specified group",
        "description": "Calling this will create a new Timeline entry for the specified group.",
        "operationId": "ApiExtTimelinePost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Provide details of the timeline entry for the specified group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimelineExtModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TimelineCreateResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "NPSModel": {
      "description": "Provide details of the timeline entry for the specified group",
      "required": [
        "email",
        "score",
        "ratingDate"
      ],
      "type": "object",
      "properties": {
        "email": {
          "description": "Enter the email for the NPS score",
          "type": "string"
        },
        "name": {
          "description": "Enter the name for the NPS score",
          "type": "string"
        },
        "score": {
          "format": "int32",
          "description": "Enter the NPS score",
          "maximum": 10,
          "minimum": 0,
          "type": "integer"
        },
        "ratingDate": {
          "format": "date-time",
          "description": "Enter the NPS rating date",
          "type": "string"
        },
        "comments": {
          "description": "Enter the NPS comments",
          "type": "string"
        },
        "additionalData": {
          "description": "Enter any additional data",
          "type": "string"
        }
      }
    },
    "NPSCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "Unique id for the NPS",
          "type": "integer"
        },
        "email": {
          "description": "Email for the NPS score",
          "type": "string"
        },
        "name": {
          "description": "Name for the NPS score",
          "type": "string"
        },
        "score": {
          "format": "int32",
          "description": "NPS score",
          "type": "integer"
        },
        "comments": {
          "description": "NPS comments",
          "type": "string"
        },
        "additionalData": {
          "description": "NPS Additional data",
          "type": "string"
        }
      }
    },
    "TimelineExtModel": {
      "description": "Provide details of the timeline entry for the specified group",
      "required": [
        "source",
        "title",
        "description",
        "toDisplayName",
        "toEmail",
        "fromDisplayName",
        "fromEmail",
        "createdByDateTime"
      ],
      "type": "object",
      "properties": {
        "source": {
          "description": "Enter the name of the system where this data comes from (For example: MailChimp)",
          "type": "string"
        },
        "title": {
          "description": "Enter the title of the timeline entry",
          "type": "string"
        },
        "description": {
          "description": "Enter the description of the timeline entry",
          "type": "string"
        },
        "toDisplayName": {
          "description": "Enter the to display name (For example: Sheila Smith)",
          "type": "string"
        },
        "toEmail": {
          "description": "Enter the to email address (For example: Sheila.Smith@PlayPlayCompany.com)",
          "type": "string"
        },
        "fromDisplayName": {
          "description": "Enter the from display name (For example: Bruce Brown)",
          "type": "string"
        },
        "fromEmail": {
          "description": "Enter the from email address (For example: Bruce.Brown@PlayPlayCompany.com)",
          "type": "string"
        },
        "createdByDateTime": {
          "description": "Enter the date and time of the timeline entry",
          "type": "string"
        },
        "culture": {
          "description": "Culture is used to interpret your date from Coordinated Universal Time (UTC). If left blank, this will default to en-GB.",
          "type": "string"
        }
      }
    },
    "TimelineCreateResponse": {
      "type": "object",
      "properties": {
        "success": {
          "description": "This lets you know if the timeline entry has been added successfully or not",
          "type": "boolean"
        },
        "id": {
          "description": "This is the timeline entry identifier",
          "type": "string"
        },
        "title": {
          "description": "This is the title of the timeline entry",
          "type": "string"
        },
        "description": {
          "description": "This is the description of the timeline entry",
          "type": "string"
        },
        "channelName": {
          "description": "This is the name of the channel that this timeline entry has been added to (For example: MailChimp)",
          "type": "string"
        },
        "group": {
          "description": "This is the name of the group that this timeline entry has been added to (For example: PlayPlay Company)",
          "type": "string"
        },
        "fromEmail": {
          "description": "This is the from email address of the timeline entry (For example: Bruce.Brown@PlayPlayCompany.com)",
          "type": "string"
        },
        "fromDisplayName": {
          "description": "This is the from display name of the timeline entry (For example: Bruce Brown)",
          "type": "string"
        },
        "toEmail": {
          "description": "This is the to email address of the timeline entry (For example: Sheila.Smith@PlayPlayCompany.com)",
          "type": "string"
        },
        "toDisplayName": {
          "description": "This is the to display name of the timeline entry (For example: Sheila Smith)",
          "type": "string"
        },
        "createdByDateTime": {
          "format": "date-time",
          "description": "This is the date and time of the timeline entry",
          "type": "string"
        }
      }
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "securityDefinitions": {
    "api_key": {
      "description": "API Authentication Key",
      "in": "header",
      "name": "cm-api-key",
      "type": "apiKey"
    }
  }
}