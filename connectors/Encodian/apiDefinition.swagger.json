{
  "swagger": "2.0",
  "info": {
    "version": "v1.0",
    "title": "Encodian Document Manager",
    "description": "Enhanced document management and PDF creation capabilities for Office 365, Flow, Logic Apps + more",
    "termsOfService": "https://support.encodian.com/hc/en-gb/articles/360010642813-Terms-of-Service",
    "contact": {
      "name": "Encodian Support",
      "url": "https://support.encodian.com",
      "email": "support@encodian.com"
    },
    "license": {
      "name": "Requires an 'Encodian PDF Converter for SharePoint Online' or 'Document Manager for Microsoft Flow' subscription",
      "url": "https://www.encodian.com/products/document-manager-for-microsoft-flow/"
    }
  },
  "host": "api.apps-encodian.com",



  "paths": {
    "/api/v1/Core/BasicConversion": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "BasicConversion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "conversion",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoBasicConversion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseBasicConversion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseBasicConversion"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert to PDF",
        "description": "Convert a document to PDF or PDF/A format - https://support.encodian.com/hc/en-gb/articles/360011123574-Convert-to-PDF"
      }
    },
    "/api/v1/Core/ConvertToPdfA": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "ConvertToPdfA",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoConvertToPdfA"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseConvertToPdfA"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseConvertToPdfA"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert PDF to PDFA",
        "description": "Convert a PDF document to PDF/A format - https://support.encodian.com/hc/en-gb/articles/360010578413-Convert-PDF-to-PDFA"
      }
    },
    "/api/v1/Core/SecurePdfDocument": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "SecurePdfDocument",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoSecurePdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseSecurePdf"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseSecurePdf"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Secure PDF Document",
        "description": "Encrypt and protect a PDF document - https://support.encodian.com/hc/en-gb/articles/360011330134-Secure-PDF-Document"
      }
    },
    "/api/v1/Core/SetPdfPrivileges": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "SetPdfPrivileges",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoSetPdfPrivileges"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseSecurePdf"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseSecurePdf"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Set PDF Document Privileges",
        "description": "Set the privledges assigned to the PDF document - https://support.encodian.com/hc/en-gb/articles/360011337094-Set-PDF-Document-Privileges"
      }
    },
    "/api/v1/Core/TextToPDF": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "TextToPDF",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoTextToPdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseTextToPdf"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseTextToPdf"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert Text to PDF",
        "description": "Convert the text provided to a PDF document - https://support.encodian.com/hc/en-gb/articles/360011683054-Convert-Text-to-PDF"
      }
    },
    "/api/v1/Core/HtmlToPDF": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "HtmlToPDF",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoHtmlToPdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseHtmlToPdf"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseHtmlToPdf"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert HTML to PDF",
        "description": "Convert the HTML or Web URL provided to a PDF document - https://support.encodian.com/hc/en-gb/articles/360022205154-Convert-HTML-to-PDF"
      }
    },
    "/api/v1/Core/HtmlToWord": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "HtmlToWord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoHtmlToWord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseHtmlToWord"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseHtmlToWord"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert HTML to Word",
        "description": "Convert the HTML or Web URL provided to a Microsoft Word document - https://support.encodian.com/hc/en-gb/articles/360011823213-Convert-HTML-to-Word"
      }
    },
    "/api/v1/Core/InsertHtmlToPdf": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "InsertHtmlToPdf",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoInsertHtmlToPdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseInsertHtmlToPdf"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseInsertHtmlToPdf"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Insert HTML to PDF",
        "description": "Insert the HTML provided into a PDF document - https://support.encodian.com/hc/en-gb/articles/360011784354-Insert-HTML-to-PDF"
      }
    },
    "/api/v1/Core/MergeDocumentsToPdf": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "MergeDocumentsToPdf",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoMergeDocumentsToPdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseMergeDocumentsToPdf"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseMergeDocumentsToPdf"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Merge documents to PDF",
        "description": "Convert and merge the documents provided to a single PDF document - https://support.encodian.com/hc/en-gb/articles/360011886173-Merge-documents-to-PDF"
      }
    },
    "/api/v1/Core/MergeArrayOfDocumentsToPdf": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "MergeArrayOfDocumentsToPdf",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoMergeArrayOfDocumentsToPdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseMergeArrayOfDocumentsToPdf"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseMergeArrayOfDocumentsToPdf"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Merge document array to PDF",
        "description": "Convert and merge an array of documents to a single PDF document - https://support.encodian.com/hc/en-gb/articles/360014632213-Merge-document-array-to-PDF"
      }
    },
    "/api/v1/Core/MergeArrayOfDocumentsToWord": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "MergeArrayOfDocumentsToWord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoMergeArrayOfDocumentsToWord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseMergeArrayOfDocumentsToWord"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseMergeArrayOfDocumentsToWord"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Merge document array to Word",
        "description": "Convert and merge an array of Microsoft Word documents to a single Microsoft Word document (DOCX)."
      }
    },
    "/api/v1/Core/OcrPdfDocument": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "OcrPdfDocument",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoOcrPdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseOcrPdf"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseOcrPdf"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "OCR a PDF Document",
        "description": "Perform OCR on an existing PDF document - https://support.encodian.com/hc/en-gb/articles/360012686653-OCR-a-PDF-Document"
      }
    },
    "/api/v1/Core/WordToPdfForm": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "WordToPdfForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoWordToPdfForm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseWordToPdfForm"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseWordToPdfForm"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert Word to PDF Form",
        "description": "Convert the Word document provided (Legacy Form Controls Only) to a PDF form document. - https://support.encodian.com/hc/en-gb/articles/360012307133-Convert-Word-to-PDF-Form"
      }
    },
    "/api/v1/Core/AddTextWatermark": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "AddTextWatermark",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoAddTextWatermark"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseAddTextWatermark"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseAddTextWatermark"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Text Watermark",
        "description": "Add a text watermark to the specified PDF document using the standard options - https://support.encodian.com/hc/en-gb/articles/360012230494-Add-Text-Watermark"
      }
    },
    "/api/v1/Core/AddImageWatermark": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "AddImageWatermark",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoAddImageWatermark"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseAddImageWatermark"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseAddImageWatermark"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Image Watermark",
        "description": "Add an image watermark to the specified PDF document using the standard options - https://support.encodian.com/hc/en-gb/articles/360012484094-Add-Image-Watermark"
      }
    },
    "/api/v1/Core/AddTextWatermarkAdvanced": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "AddTextWatermarkAdvanced",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoAddTextWatermarkAdv"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseAddTextWatermarkAdv"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseAddTextWatermarkAdv"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Text Watermark (Advanced)",
        "description": "Add a text watermark to the specified PDF document using the advanced options - https://support.encodian.com/hc/en-gb/articles/360012345813-Add-Text-Watermark-Advanced-"
      }
    },
    "/api/v1/Core/AddImageWatermarkAdvanced": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "AddImageWatermarkAdvanced",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoAddImageWatermarkAdv"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseAddImageWatermarkAdv"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseAddImageWatermarkAdv"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Image Watermark (Advanced)",
        "description": "Add an image watermark to the specified PDF document using the standard options - https://support.encodian.com/hc/en-gb/articles/360012485874-Add-Image-Watermark-Advanced-"
      }
    },
    "/api/v1/Core/ImageCleanUpDocument": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "ImageCleanUpDocument",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoImageCleanUpDoc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseImageCleanUpDoc"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseImageCleanUpDoc"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Image Clean Up (Document)",
        "description": "Execute image clean up activities focussed on text based images such as Deskew, Rotate, Despeckle + more."
      }
    },
    "/api/v1/Core/ImageCleanUpPhoto": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "ImageCleanUpPhoto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoImageCleanUpPhoto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseImageCleanUpPhoto"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseImageCleanUpPhoto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Image Clean Up (Photo)",
        "description": "Execute image clean up activities for standard photo images."
      }
    },
    "/api/v1/Core/ExtractTextRegions": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "ExtractTextRegions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoExtractTextRegion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseExtractTextRegion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseExtractTextRegion"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract Text from Regions",
        "description": "Extract text using OCR from 70+ files types using specified regions - https://support.encodian.com/hc/en-gb/articles/360015612353-Extract-Text-from-Regions"
      }
    },
    "/api/v1/Core/AddHtmlHeaderFooter": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "AddHtmlHeaderFooter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoAddHtmlHeaderFooter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseAddHtmlHeaderFooter"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseAddHtmlHeaderFooter"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add HTML Header or Footer",
        "description": "Add a HTML header, footer or both to the specified PDF document - https://support.encodian.com/hc/en-gb/articles/360013808614-Add-HTML-Header-or-Footer"
      }
    },
    "/api/v1/Core/AddPageNumbers": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "AddPageNumbers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoAddPageNumbers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseAddPageNumbers"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseAddPageNumbers"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Page Numbers",
        "description": "Add page numbers to the PDF document provided - https://support.encodian.com/hc/en-gb/articles/360014464534-Add-Page-Numbers"
      }
    },
    "/api/v1/Core/GetPdfTextLayer": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "GetPdfTextLayer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoGetPdfTextLayer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseGetPdfTextLayer"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseGetPdfTextLayer"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Get PDF Text Layer",
        "description": "Get the text layer for the PDF document provided - https://support.encodian.com/hc/en-gb/articles/360015539373-Get-PDF-Text-Layer"
      }
    },
    "/api/v1/Core/RedactPdf": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "RedactPdf",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoRedactPdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseRedactPdf"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseRedactPdf"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Redact PDF",
        "description": "Apply the specified redactions to the PDF document provided - https://support.encodian.com/hc/en-gb/articles/360018607954-Redact-PDF-"
      }
    },
    "/api/v1/Core/ResizeImage": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "ResizeImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoImageResize"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseImageResize"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseImageResize"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Resize an Image",
        "description": "Resize and compress the image provided - https://support.encodian.com/hc/en-gb/articles/360018591034-Resize-an-Image"
      }
    },
    "/api/v1/Core/GetPdfFormData": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "GetPdfFormData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoGetPdfFormData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseGetPdfFormData"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseGetPdfFormData"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Get PDF Form Data",
        "description": "Extract PDF form data from a PDF Form."
      }
    },
    "/api/v1/Core/SearchAndReplaceText": {
      "post": {
        "tags": [
          "Core"
        ],
        "operationId": "SearchAndReplaceText",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DtoSearchAndReplaceText"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseSearchAndReplaceText"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DtoResponseSearchAndReplaceText"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "x-ms-visibility": "important",
        "summary": "Search and Replace Text",
        "description": "Find and replace text contained within a PDF document - https://support.encodian.com/hc/en-gb/articles/360020937853-Search-and-Replace-Text"
      }
    },
    "/api/v1/Mgmt/GetOperationStatus": {
      "get": {
        "tags": [
          "Mgmt"
        ],
        "operationId": "GetOperationStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "query",
            "description": "Retrieve the operation status for the Operation ID provided.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoBaseMgmtResponse"
            }
          },
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoBaseMgmtResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get an Operation Status",
        "description": "Get the operation status of for the operation ID provided."
      }
    },
    "/api/v1/Mgmt/GetOperationStatusExtractTextRegion": {
      "get": {
        "tags": [
          "Mgmt"
        ],
        "operationId": "GetOperationStatusExtractTextRegion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "query",
            "description": "Retrieve the operation status of an ExtractTextRegion operation for the Operation ID provided.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseExtractTextRegion"
            }
          },
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseExtractTextRegion"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get an Operation Status for ExtractTextRegion",
        "description": "Retrieve the operation status of an ExtractTextRegion operation for the Operation ID provided."
      }
    },
    "/api/v1/Mgmt/GetOperationStatusGetPdfTextLayer": {
      "get": {
        "tags": [
          "Mgmt"
        ],
        "operationId": "GetOperationStatusGetPdfTextLayer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "query",
            "description": "Retrieve the operation status of a GetPdfTextLayer operation for the Operation ID provided.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseGetPdfTextLayer"
            }
          },
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseGetPdfTextLayer"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get an Operation Status for GetPdfTextLayer",
        "description": "Retrieve the operation status of a GetPdfTextLayer operation for the Operation ID provided."
      }
    },
    "/api/v1/Mgmt/GetOperationStatusGetPdfFormData": {
      "get": {
        "tags": [
          "Mgmt"
        ],
        "operationId": "GetOperationStatusGetPdfFormData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "query",
            "description": "Retrieve the operation status of a GetPdfFormData operation for the Operation ID provided.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseGetPdfFormData"
            }
          },
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DtoResponseGetPdfFormData"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get an Operation Status for GetPdfFormData",
        "description": "Retrieve the operation status of a GetPdfFormData operation for the Operation ID provided."
      }
    }
  },
  "definitions": {
    "DtoBasicConversion": {
      "required": [
        "FileName",
        "fileContent",
        "outputFilename"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the source file, the file extension is mandatory: 'file.xlsx' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The content of the source file"
        },
        "outputFilename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "PDF Filename",
          "description": "The filename of the output PDF document"
        },
        "removeDocumentMarkup": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Markup",
          "description": "Set MS Office document comments and tracked changes removal option"
        },
        "pdfaCompliance": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "PDF/A Compliant",
          "description": "Set PDF/A Compliance option"
        },
        "pdfaComplianceLevel": {
          "default": "PDF_A_2A",
          "enum": [
            "PDF_A_1A",
            "PDF_A_1B",
            "PDF_A_2A",
            "PDF_A_3A",
            "PDF_A_2B",
            "PDF_A_2U",
            "PDF_A_3B",
            "PDF_A_3U",
            "v_1_3",
            "v_1_4",
            "v_1_5",
            "v_1_6",
            "v_1_7",
            "PDF_X_1A",
            "PDF_X_3"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "PDF/A Compliance Level",
          "description": "Set the PDF/A Compliance Level, the default value is PDF_A_2A."
        },
        "GenerateBookmarks": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Generate Bookmarks",
          "description": "Set whether bookmarks should be automatically created for Microsoft Word documents which are converted to PDF."
        },
        "CultureName": {
          "default": "en-US",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Culture Name",
          "description": "This setting only applies to Microsoft Excel documents and is used to set the culture for the workbook prior to conversion."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseBasicConversion": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoConvertToPdfA": {
      "required": [
        "FileName"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - Content of the source PDF file"
        },
        "operationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "pdfaComplianceLevel": {
          "default": "PDF_A_2A",
          "enum": [
            "PDF_A_1A",
            "PDF_A_1B",
            "PDF_A_2A",
            "PDF_A_3A",
            "PDF_A_2B",
            "PDF_A_2U",
            "PDF_A_3B",
            "PDF_A_3U",
            "v_1_3",
            "v_1_4",
            "v_1_5",
            "v_1_6",
            "v_1_7",
            "PDF_X_1A",
            "PDF_X_3"
          ],
          "type": "string",
          "x-ms-summary": "PDF/A Compliance Level",
          "description": "Set the PDF/A Compliance Level, the default value is PDF_A_2A."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseConvertToPdfA": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoSecurePdf": {
      "required": [
        "FileName",
        "userPassword",
        "adminPassword",
        "FinalOperation"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "operationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "userPassword": {
          "type": "string",
          "x-ms-summary": "User Password",
          "description": "Set the user password"
        },
        "adminPassword": {
          "type": "string",
          "x-ms-summary": "Admin Password",
          "description": "Set the administrator password"
        },
        "pdfPrivileges": {
          "default": "DenyAll",
          "enum": [
            "AllowAll",
            "DenyAll",
            "Specific"
          ],
          "type": "string",
          "x-ms-summary": "Privileges",
          "description": "Set the privileges assigned to the PDF document"
        },
        "cryptoAlgorithm": {
          "default": "AESx256",
          "enum": [
            "RC4x40",
            "RC4x128",
            "AESx128",
            "AESx256"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Cryptographic Algorithm",
          "description": "Set the cryptographic algorithm"
        },
        "pdfPrivilegesAllowAssembly": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Assembly",
          "description": ""
        },
        "pdfPrivilegesAllowCopy": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Copy",
          "description": ""
        },
        "pdfPrivilegesAllowFillIn": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Fill in Forms",
          "description": ""
        },
        "pdfPrivilegesAllowPrint": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Print",
          "description": ""
        },
        "pdfPrivilegesAllowScreenReaders": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Screen Readers",
          "description": ""
        },
        "pdfPrivilegesAllowModifyContents": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Modify Contents",
          "description": ""
        },
        "pdfPrivilegesAllowModifyAnnotations ": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Modify Annotations",
          "description": ""
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseSecurePdf": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoSetPdfPrivileges": {
      "required": [
        "FileName"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "operationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "pdfPrivileges": {
          "default": "DenyAll",
          "enum": [
            "AllowAll",
            "DenyAll",
            "Specific"
          ],
          "type": "string",
          "x-ms-summary": "Privileges",
          "description": "Set the privileges assigned to the PDF document"
        },
        "pdfPrivilegesAllowAssembly": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Assembly",
          "description": ""
        },
        "pdfPrivilegesAllowCopy": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Copy",
          "description": ""
        },
        "pdfPrivilegesAllowFillIn": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Fill in Forms",
          "description": ""
        },
        "pdfPrivilegesAllowPrint": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Print",
          "description": ""
        },
        "pdfPrivilegesAllowScreenReaders": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Screen Readers",
          "description": ""
        },
        "pdfPrivilegesAllowModifyContents": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Modify Contents",
          "description": ""
        },
        "pdfPrivilegesAllowModifyAnnotations ": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Privilege - Modify Annotations",
          "description": ""
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoTextToPdf": {
      "required": [
        "FileName",
        "outputFilename"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "default": "temp.txt",
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file"
        },
        "outputFilename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "PDF Filename",
          "description": "The filename of the output PDF document"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - Please provide either the content of the source file and source filename or text data."
        },
        "textData": {
          "type": "string",
          "x-ms-summary": "Text Data",
          "description": "Optional - Please provide either the text data which will be converted to a PDF document or the content of the source file and source filename."
        },
        "textEncodingType": {
          "default": "Default",
          "enum": [
            "Default",
            "Latin1",
            "BigEndianUnicode",
            "UTF16",
            "UTF8",
            "UTF7",
            "ASCII"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Encoding Type",
          "description": "The encoding type used for text conversion."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseTextToPdf": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoHtmlToPdf": {
      "required": [
        "FileName",
        "outputFilename"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "default": "temp.html",
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Filename",
          "description": "The filename of the source HTML file, the file extension is mandatory: 'file.html' and not 'file'"
        },
        "outputFilename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "PDF Filename",
          "description": "The filename of the output PDF document"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source HTML file."
        },
        "htmlData": {
          "type": "string",
          "x-ms-summary": "HTML Data",
          "description": "Optional - The HTML which will be converted to a PDF document"
        },
        "htmlUrl": {
          "type": "string",
          "x-ms-summary": "HTML Url",
          "description": "Optional - The web address to the web page which will be converted to a PDF document"
        },
        "pageOrientation": {
          "default": "Portrait",
          "enum": [
            "Portrait",
            "Landscape"
          ],
          "type": "string",
          "x-ms-summary": "Page Orientation",
          "description": "Set page oprientation (Landscape or portrait)."
        },
        "pageSize": {
          "default": "A4",
          "enum": [
            "A3",
            "A4",
            "A5",
            "B4",
            "B5",
            "EnvelopeDL",
            "Executive",
            "Folio",
            "Ledger",
            "Legal",
            "Letter",
            "Quarto",
            "Statement",
            "Tabloid"
          ],
          "type": "string",
          "x-ms-summary": "Page Size",
          "description": "Set the page size for the output PDF document, A4 is the default size."
        },
        "decodeHtmlData": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Decode HTML Data",
          "description": "Set whether the data provided in the HTML Data field should be decoded."
        },
        "encoding": {
          "default": "UTF8",
          "enum": [
            "UTF8",
            "UTF7",
            "UTF32",
            "ASCII",
            "Unicode",
            "BigEndianUnicode"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Encoding",
          "description": "Set the encoding type for the HTML."
        },
        "MarginTop": {
          "format": "double",
          "default": -1,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Top Margin",
          "description": "Set the top margin value (pt. The default value is set to -1, whereby a minus value does not change the existing page margin value."
        },
        "MarginBottom": {
          "format": "double",
          "default": -1,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Bottom Margin",
          "description": "Set the bottom margin value (pt. The default value is set to -1, whereby a minus value does not change the existing page margin value."
        },
        "MarginRight": {
          "format": "double",
          "default": -1,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Right Margin",
          "description": "Set the right margin value (pt. The default value is set to -1, whereby a minus value does not change the existing page margin value."
        },
        "MarginLeft": {
          "format": "double",
          "default": -1,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Left Margin",
          "description": "Set the left margin value (pt. The default value is set to -1, whereby a minus value does not change the existing page margin value."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseHtmlToPdf": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoHtmlToWord": {
      "required": [
        "FileName",
        "outputFilename",
        "FinalOperation"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "default": "temp.html",
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Filename",
          "description": "The filename of the source HTML file, the file extension is mandatory: 'file.html' and not 'file'"
        },
        "outputFilename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the output DOCX document"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source HTML file."
        },
        "htmlData": {
          "type": "string",
          "x-ms-summary": "HTML Data",
          "description": "Optional - The HTML which will be converted to a Word document"
        },
        "htmlUrl": {
          "type": "string",
          "x-ms-summary": "HTML Url",
          "description": "Optional - The web address to the web page which will be converted to a Word document"
        },
        "pageOrientation": {
          "default": "Portrait",
          "enum": [
            "Portrait",
            "Landscape"
          ],
          "type": "string",
          "x-ms-summary": "Page Orientation",
          "description": "Set page oprientation (Landscape or portrait)."
        },
        "pageSize": {
          "default": "A4",
          "enum": [
            "A3",
            "A4",
            "A5",
            "B4",
            "B5",
            "EnvelopeDL",
            "Executive",
            "Folio",
            "Ledger",
            "Legal",
            "Letter",
            "Quarto",
            "Statement",
            "Tabloid"
          ],
          "type": "string",
          "x-ms-summary": "Page Size",
          "description": "Set the page size for the output Word document, A4 is the default size."
        },
        "decodeHtmlData": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Decode HTML Data",
          "description": "Set whether the data provided in the HTML Data field should be decoded."
        },
        "encoding": {
          "default": "UTF8",
          "enum": [
            "UTF8",
            "UTF7",
            "UTF32",
            "ASCII",
            "Unicode",
            "BigEndianUnicode"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Encoding",
          "description": "Set the encoding type for the HTML."
        },
        "MarginTop": {
          "format": "double",
          "default": -1,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Top Margin",
          "description": "Set the top margin value (pt. The default value is set to -1, whereby a minus value does not change the existing page margin value."
        },
        "MarginBottom": {
          "format": "double",
          "default": -1,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Bottom Margin",
          "description": "Set the bottom margin value (pt. The default value is set to -1, whereby a minus value does not change the existing page margin value."
        },
        "MarginRight": {
          "format": "double",
          "default": -1,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Right Margin",
          "description": "Set the right margin value (pt. The default value is set to -1, whereby a minus value does not change the existing page margin value."
        },
        "MarginLeft": {
          "format": "double",
          "default": -1,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Left Margin",
          "description": "Set the left margin value (pt. The default value is set to -1, whereby a minus value does not change the existing page margin value."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseHtmlToWord": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoInsertHtmlToPdf": {
      "required": [
        "FileName",
        "htmlData"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "operationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "htmlData": {
          "type": "string",
          "x-ms-summary": "HTML Data",
          "description": "The HTML which will be inserted into the PDF document"
        },
        "decodeHtmlData": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Decode HTML Data",
          "description": "Set whether the data provided in the HTML Data field should be decoded."
        },
        "htmlInsertLocation": {
          "default": "Append",
          "enum": [
            "Append",
            "Prepend"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTML Insert Location",
          "description": "Set where within the PDF provided, the HTML data should be inserted, the default value is Append."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseInsertHtmlToPdf": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoMergeDocumentsToPdf": {
      "required": [
        "outputFilename",
        "FileName",
        "fileContent",
        "fileName2",
        "fileContent2"
      ],
      "type": "object",
      "properties": {
        "outputFilename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "PDF Filename",
          "description": "The filename of the output PDF document"
        },
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the 1st source file, the file extension is mandatory: 'file.xlsx' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "The content of the source file"
        },
        "fileName2": {
          "type": "string",
          "x-ms-summary": "Filename 2",
          "description": "The filename of the 2nd source file, the file extension is mandatory: 'file.xlsx' and not 'file'"
        },
        "fileContent2": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content 2",
          "description": "The content of the 2nd source file"
        },
        "fileName3": {
          "type": "string",
          "x-ms-summary": "Filename 3",
          "description": "The filename of the 3rd source file, the file extension is mandatory: 'file.xlsx' and not 'file'"
        },
        "fileContent3": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content 3",
          "description": "The content of the 3rd source file"
        },
        "fileName4": {
          "type": "string",
          "x-ms-summary": "Filename 4",
          "description": "The filename of the 4th source file, the file extension is mandatory: 'file.xlsx' and not 'file'"
        },
        "fileContent4": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content 4",
          "description": "The content of the 4th source file"
        },
        "fileName5": {
          "type": "string",
          "x-ms-summary": "Filename 5",
          "description": "The filename of the 5th source file, the file extension is mandatory: 'file.xlsx' and not 'file'"
        },
        "fileContent5": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content 5",
          "description": "The content of the 5th source file"
        },
        "fileName6": {
          "type": "string",
          "x-ms-summary": "Filename 6",
          "description": "The filename of the 6th source file, the file extension is mandatory: 'file.xlsx' and not 'file'"
        },
        "fileContent6": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content 6",
          "description": "The content of the 6th source file"
        },
        "fileName7": {
          "type": "string",
          "x-ms-summary": "Filename 7",
          "description": "The filename of the 7th source file, the file extension is mandatory: 'file.xlsx' and not 'file'"
        },
        "fileContent7": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content 7",
          "description": "The content of the 7th source file"
        },
        "fileName8": {
          "type": "string",
          "x-ms-summary": "Filename 8",
          "description": "The filename of the 8th source file, the file extension is mandatory: 'file.xlsx' and not 'file'"
        },
        "fileContent8": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content 8",
          "description": "The content of the 8th source file"
        },
        "fileName9": {
          "type": "string",
          "x-ms-summary": "Filename 9",
          "description": "The filename of the 9th source file, the file extension is mandatory: 'file.xlsx' and not 'file'"
        },
        "fileContent9": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content 9",
          "description": "The content of the 9th source file"
        },
        "fileName10": {
          "type": "string",
          "x-ms-summary": "Filename 10",
          "description": "The filename of the 10th source file, the file extension is mandatory: 'file.xlsx' and not 'file'"
        },
        "fileContent10": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content 10",
          "description": "The content of the 10th source file"
        },
        "removeDocumentMarkup": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Markup",
          "description": "Set MS Office document comments and tracked changes removal option"
        },
        "pdfaCompliance": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "PDF/A Compliant",
          "description": "Set PDF/A Compliance option"
        },
        "pdfaComplianceLevel": {
          "default": "PDF_A_2A",
          "enum": [
            "PDF_A_1A",
            "PDF_A_1B",
            "PDF_A_2A",
            "PDF_A_3A",
            "PDF_A_2B",
            "PDF_A_2U",
            "PDF_A_3B",
            "PDF_A_3U",
            "v_1_3",
            "v_1_4",
            "v_1_5",
            "v_1_6",
            "v_1_7",
            "PDF_X_1A",
            "PDF_X_3"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "PDF/A Compliance Level",
          "description": "Set the PDF/A Compliance Level, the default value is PDF_A_2A."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseMergeDocumentsToPdf": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoMergeArrayOfDocumentsToPdf": {
      "required": [

        "outputFilename",
        "FileName",
        "documents"
      ],
      "type": "object",
      "properties": {
        "outputFilename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "PDF Filename",
          "description": "The filename of the output PDF document"
        },
        "FileName": {
          "default": "default.doc",
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Filename",
          "description": "The filename of the source file"
        },
        "documents": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentArray"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Documents",
          "description": "The array of documents to be processed"
        },
        "removeDocumentMarkup": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Markup",
          "description": "Set MS Office document comments and tracked changes removal option"
        },
        "pdfaCompliance": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "PDF/A Compliant",
          "description": "Set PDF/A Compliance option"
        },
        "pdfaComplianceLevel": {
          "default": "PDF_A_2A",
          "enum": [
            "PDF_A_1A",
            "PDF_A_1B",
            "PDF_A_2A",
            "PDF_A_3A",
            "PDF_A_2B",
            "PDF_A_2U",
            "PDF_A_3B",
            "PDF_A_3U",
            "v_1_3",
            "v_1_4",
            "v_1_5",
            "v_1_6",
            "v_1_7",
            "PDF_X_1A",
            "PDF_X_3"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "PDF/A Compliance Level",
          "description": "Set the PDF/A Compliance Level, the default value is PDF_A_2A."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DocumentArray": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the source file, the file extension is mandatory: 'file.docx' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The content of the source file"
        }
      }
    },
    "DtoResponseMergeArrayOfDocumentsToPdf": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoMergeArrayOfDocumentsToWord": {
      "required": [
        "outputFilename",
        "documents",
        "FinalOperation"
      ],
      "type": "object",
      "properties": {
        "outputFilename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the output DOCX document"
        },
        "documents": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentArrayWord"
          },
          "x-ms-summary": "Documents",
          "description": "The array of Microsoft Word documents to be processed"
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DocumentArrayWord": {
      "required": [
        "fileName",
        "fileContent"
      ],
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the source file, the file extension is mandatory: 'file.docx' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The content of the source file"
        },
        "sortPosition": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Sort Position",
          "description": "Set the sort position within the document array"
        },
        "wordInputFormatMode": {
          "default": "KeepSourceFormatting",
          "enum": [
            "KeepSourceFormatting",
            "KeepDifferentStyles",
            "UseDestinationStyles"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Format Mode",
          "description": "Set how formatting is handled when documents are merged into the first document in the array."
        }
      }
    },
    "DtoResponseMergeArrayOfDocumentsToWord": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoOcrPdf": {
      "required": [
        "FileName"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - Content of the source PDF file"
        },
        "OperationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "cleanUpType": {
          "default": "Default",
          "enum": [
            "Default",
            "None",
            "Specific"
          ],
          "type": "string",
          "x-ms-summary": "Clean Operations",
          "description": "Perform document clean-up operations, the default option will auto rotate, auto deskew and auto despeckle the document."
        },
        "RemoveBlankPages": {
          "default": false,
          "type": "boolean",
          "x-ms-summary": "Remove Blank Pages",
          "description": "Set whether blank pages should be removed from the PDF document."
        },
        "pdfaCompliance": {
          "default": false,
          "type": "boolean",
          "x-ms-summary": "PDF/A Compliant",
          "description": "Set PDF/A Compliance option"
        },
        "pdfaComplianceLevel": {
          "default": "PDF_A_2A",
          "enum": [
            "PDF_A_1A",
            "PDF_A_1B",
            "PDF_A_2A",
            "PDF_A_3A",
            "PDF_A_2B",
            "PDF_A_2U",
            "PDF_A_3B",
            "PDF_A_3U",
            "v_1_3",
            "v_1_4",
            "v_1_5",
            "v_1_6",
            "v_1_7",
            "PDF_X_1A",
            "PDF_X_3"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "PDF/A Compliance Level",
          "description": "Set the PDF/A Compliance Level, the default value is PDF_A_2A."
        },
        "AutoRotate": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Rotate",
          "description": "Automatically detects orientation and rotates it so that the text on it is upright oriented, this is enabled by default."
        },
        "AutoRotateConfidenceLevel": {
          "format": "int32",
          "default": 60,
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Rotate Confidence Level",
          "description": "Sets the minimum confidence percentage (0 to 100) used to control whether the rotation is applied, the default value is 60."
        },
        "Deskew": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Deskew",
          "description": "Detects the skew angle and rotates to remove that skew, this is enabled by default."
        },
        "Despeckle": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Despeckle",
          "description": "Automatically detects speckles and removes them, this is enabled by default."
        },
        "AdjustBrightnessContrast": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Adjust Brightness and Contrast",
          "description": "This action analyzes a document and automatically adjusts brightness and contrast based on the analysis, this is enabled by default."
        },
        "RemoveBorder": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Border",
          "description": "Locates border pixels and removes the pixels from the document,this is disabled by default."
        },
        "SmoothBackground": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Smooth Background",
          "description": "This works only on color and grayscale documents. This operation smoothes background colors to eliminate or de-emphasize noise, this is disabled by default."
        },
        "SmoothObjects": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Smooth Objects",
          "description": "This only works on bitonal documents, it looks at groups of pixels, and finds isolated bumps and pits in the edges of those objects, and fills them in, this is disabled by default."
        },
        "RemoveDotShading": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Dot Shading",
          "description": "This action will remove shaded regions from bitonal documents, this is disabled by default."
        },
        "ImageDetergent": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Detergent",
          "description": "Image Detergent works by changing pixels of similar color values to a central color value, which has the result of smoothing the image wherever regions of those colors appear, this is disabled by default."
        },
        "ApplyAverageFilter": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Average Filter",
          "description": "Performs a 3x3 Average filter smoothing operation on the document, placing the output in the center of the window, this is disabled by default."
        },
        "RemoveHolePunch": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Hole Punch",
          "description": "Detects and removes hole punch marks from a bitonal document, this is disabled by default."
        },
        "Binarize": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Binarize",
          "description": "Computes all necessary parameters by analyzing the input data before actually performing the binarization. The algorithm is tuned to typical document images, consisting of dark text on brighter background. It is robust to shadows, noise and background images, this is disabled by default."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseOcrPdf": {
      "type": "object",
      "properties": {
        "textLayerAdded": {
          "type": "boolean",
          "x-ms-summary": "Text Layer Added",
          "description": "Indicates whether OCR was performed on the document provided"
        },
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoWordToPdfForm": {
      "required": [
        "FileName",
        "fileContent",
        "outputFilename"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source Microsoft Word file, the file extension is mandatory: 'file.doc' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "The content of the source Microsoft Word file"
        },
        "outputFilename": {
          "type": "string",
          "x-ms-summary": "PDF Filename",
          "description": "The filename of the output PDF document"
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseWordToPdfForm": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoAddTextWatermark": {
      "required": [
        "FileName",
        "Text"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "operationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "Text": {
          "type": "string",
          "x-ms-summary": "Text",
          "description": "The text to embed as a watermark within the document"
        },
        "Orientation": {
          "default": "Horizontal",
          "enum": [
            "Vertical",
            "Horizontal",
            "Diagonal"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Orientation",
          "description": "The orientation of the text to embed as a watermark within the document"
        },
        "Font": {
          "default": "Helvetica",
          "enum": [
            "Courier",
            "CourierBold",
            "CourierOblique",
            "CourierBoldOblique",
            "Helvetica",
            "HelveticaBold",
            "HelveticaOblique",
            "HelveticaBoldOblique",
            "Symbol",
            "TimesRoman",
            "TimesBold",
            "TimesItalic",
            "TimesBoldItalic",
            "ZapfDingbats",
            "Unknown",
            "CjkFont"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Font",
          "description": "The font applied to the text watermark, the default font is set to Helvetica."
        },
        "TextColour": {
          "default": "#E81123",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Text Colour",
          "description": "The HTML colour applied to the text watermark, the default colour is set to #E81123."
        },
        "TextSize": {
          "format": "int32",
          "default": 34,
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Text Size",
          "description": "The size of the font applied to the text watermark, the default size is set to 34."
        },
        "Opacity": {
          "format": "float",
          "default": 1.0,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Opacity",
          "description": "The opacity of the text watermark, valid values range from 0.0+ to 1.0, the default value is 1.0"
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseAddTextWatermark": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoAddImageWatermark": {
      "required": [
        "FileName",
        "watermarkFileContent",
        "watermarkFilename"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "operationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "watermarkFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "Watermark File Content",
          "description": "The content of the watermark image file"
        },
        "watermarkFilename": {
          "type": "string",
          "x-ms-summary": "Watermark Filename",
          "description": "The filename for the watermark image file, the file extension is mandatory: 'file.jpg' and not 'file'"
        },
        "Orientation": {
          "default": "Horizontal",
          "enum": [
            "Vertical",
            "Horizontal",
            "Diagonal"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Orientation",
          "description": "The orientation of the image to embed as a watermark within the document"
        },
        "Opacity": {
          "format": "float",
          "default": 0.7,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Opacity",
          "description": "The opacity of the text watermark, valid values range from 0.0+ to 1.0, the default value is 1.0"
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseAddImageWatermark": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoAddTextWatermarkAdv": {
      "required": [
        "FileName",
        "Text"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "operationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "Text": {
          "type": "string",
          "x-ms-summary": "Text",
          "description": "The text to embed as a watermark within the document. Add carriage return control characters (backslash r) to manually split text onto new lines."
        },
        "Font": {
          "default": "Helvetica",
          "enum": [
            "Courier",
            "CourierBold",
            "CourierOblique",
            "CourierBoldOblique",
            "Helvetica",
            "HelveticaBold",
            "HelveticaOblique",
            "HelveticaBoldOblique",
            "Symbol",
            "TimesRoman",
            "TimesBold",
            "TimesItalic",
            "TimesBoldItalic",
            "ZapfDingbats",
            "Unknown",
            "CjkFont"
          ],
          "type": "string",
          "x-ms-summary": "Font",
          "description": "The font applied to the text watermark, the default font is set to Helvetica."
        },
        "TextColour": {
          "default": "#E81123",
          "type": "string",
          "x-ms-summary": "Text Colour",
          "description": "The HTML colour applied to the text watermark, the default colour is set to #E81123."
        },
        "TextSize": {
          "format": "int32",
          "default": 34,
          "type": "integer",
          "x-ms-summary": "Text Size",
          "description": "The size of the font applied to the text watermark, the default size is set to 34."
        },
        "Opacity": {
          "format": "float",
          "default": 1.0,
          "type": "number",
          "x-ms-summary": "Opacity",
          "description": "The opacity of the text watermark, valid values range from 0.0+ to 1.0, the default value is 1.0"
        },
        "EncodingType": {
          "default": "Winansi",
          "enum": [
            "Identity_h",
            "Identity_v",
            "Cp1250",
            "Cp1252",
            "Cp1257",
            "Winansi",
            "Macroman"
          ],
          "type": "string",
          "x-ms-summary": "Encoding Type",
          "description": "The encoding type to apply to the text watermark."
        },
        "HorizontalAlignment": {
          "default": "Center",
          "enum": [
            "None",
            "Left",
            "Center",
            "Right",
            "Justify",
            "FullJustify"
          ],
          "type": "string",
          "x-ms-summary": "Horizontal Alignment",
          "description": "Set the horizontal alignment of the watermark, the default value is Center."
        },
        "VerticalAlignment": {
          "default": "Center",
          "enum": [
            "None",
            "Top",
            "Center",
            "Bottom"
          ],
          "type": "string",
          "x-ms-summary": "Vertical Alignment",
          "description": "Set the vertical alignment of the watermark, the default value is Center."
        },
        "TextAlignment": {
          "default": "Center",
          "enum": [
            "None",
            "Left",
            "Center",
            "Right",
            "Justify",
            "FullJustify"
          ],
          "type": "string",
          "x-ms-summary": "Text Alignment",
          "description": "Set the text alignment of the watermark, the default value is Center."
        },
        "ApplyTo": {
          "default": "AllPages",
          "enum": [
            "FirstPage",
            "AllPages",
            "LastPage",
            "Specific"
          ],
          "type": "string",
          "x-ms-summary": "Apply To",
          "description": "Set where in the document to apply the watermark."
        },
        "pageNumbers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "x-ms-summary": "Page Numbers",
          "description": "Specify the page numbers where the watermark should be applied, this proporty only applies when the 'Apply To' property is set to 'Specific'."
        },
        "RotationAngle": {
          "format": "float",
          "default": 0,
          "type": "number",
          "x-ms-summary": "Rotation Angle",
          "description": "Set the rotation angle of the text watermark."
        },
        "TextWrap": {
          "default": true,
          "type": "boolean",
          "x-ms-summary": "Text Wrap",
          "description": "Set whether the text watermark should automatically wrap."
        },
        "TextWrapRowWidth": {
          "format": "double",
          "default": 0,
          "type": "number",
          "x-ms-summary": "Text Wrap Row Width",
          "description": "Set the row width applied when the watermark is set to automatically wrap."
        },
        "AutoScale": {
          "default": false,
          "type": "boolean",
          "x-ms-summary": "Auto Scale",
          "description": "Set the whether the text should be automatically sized to fit the width of the container."
        },
        "AutoScaleWidth": {
          "format": "double",
          "default": 0,
          "type": "number",
          "x-ms-summary": "Auto Scale Text Width",
          "description": "Set the width of the watermark container when automatic scaling is enabled."
        },
        "AutoScaleHeight": {
          "format": "double",
          "default": 0,
          "type": "number",
          "x-ms-summary": "Auto Scale Text Height",
          "description": "Set the height of the watermark container when automatic scaling is enabled."
        },
        "TextLayer": {
          "default": false,
          "type": "boolean",
          "x-ms-summary": "Text Layer",
          "description": "Set whether the watermark should be added to the top or bottom layer. If 'True' the watermark is added to the bottom layer."
        },
        "YIndent": {
          "format": "double",
          "default": 0,
          "type": "number",
          "x-ms-summary": "Y Indent",
          "description": "Set the vertical watermark indent, starting from the bottom and overriding the VerticalAlignment property."
        },
        "XIndent": {
          "format": "double",
          "default": 0,
          "type": "number",
          "x-ms-summary": "X Indent",
          "description": "Set the horizontal watermark indent, starting from the left and overriding the HorizontalAlignment property."
        },
        "watermarkApplyAsImage": {
          "default": false,
          "type": "boolean",
          "x-ms-summary": "Apply as an Image",
          "description": "Set whether the text watermark should be added as text or an image."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseAddTextWatermarkAdv": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoAddImageWatermarkAdv": {
      "required": [
        "FileName",
        "watermarkFileContent",
        "watermarkFilename"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "operationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "watermarkFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "Watermark File Content",
          "description": "The content of the watermark image file"
        },
        "watermarkFilename": {
          "type": "string",
          "x-ms-summary": "Watermark Filename",
          "description": "The filename for the watermark image file, the file extension is mandatory: 'file.jpg' and not 'file'"
        },
        "opacity": {
          "format": "float",
          "default": 0.7,
          "type": "number",
          "x-ms-summary": "Watermark Opacity",
          "description": "The opacity of the text watermark, valid values range from 0.0+ to 1.0, the default value is 1.0"
        },
        "applyTo": {
          "default": "AllPages",
          "enum": [
            "FirstPage",
            "AllPages",
            "LastPage",
            "Specific"
          ],
          "type": "string",
          "x-ms-summary": "Apply To",
          "description": "Set where in the document to apply the watermark."
        },
        "pageNumbers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "x-ms-summary": "Page Numbers",
          "description": "Specify the page numbers where the watermark should be applied, this only applies when the 'Apply To' property is set to 'Specific'."
        },
        "rotationAngle": {
          "format": "float",
          "default": 0.0,
          "type": "number",
          "x-ms-summary": "Rotation Angle",
          "description": "Set the rotation angle of the image watermark in degrees."
        },
        "quality": {
          "format": "int32",
          "default": 100,
          "type": "integer",
          "x-ms-summary": "Quality",
          "description": "Set the quality of the image watermark from 1 to 100."
        },
        "imageXOffset": {
          "format": "float",
          "default": 0.0,
          "type": "number",
          "x-ms-summary": "X Offset",
          "description": "Set the X offset for positioning the watermark image on the page."
        },
        "imageYOffSet": {
          "format": "float",
          "default": 0.0,
          "type": "number",
          "x-ms-summary": "Y Offset",
          "description": "Set the Y offset for positioning the watermark image on the page."
        },
        "scale": {
          "format": "float",
          "default": 1.0,
          "type": "number",
          "x-ms-summary": "Scale",
          "description": "Set the multiple to either reduce (less than 1.0) or increase the size of the image (greater than 1.0), for example: 1.2 is equal to 120%, and 0.7 is equal to 70%."
        },
        "addToBackground": {
          "default": false,
          "type": "boolean",
          "x-ms-summary": "Add to Background",
          "description": "If set to 'true' the watermark image will be added to the background of the page."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseAddImageWatermarkAdv": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoImageCleanUpDoc": {
      "required": [
        "FileName",
        "FinalOperation"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source image file, the file extension is mandatory: 'file.png' and not 'file'"
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "The content of the source image file"
        },
        "cleanUpType": {
          "default": "Default",
          "enum": [
            "Default",
            "None",
            "Specific"
          ],
          "type": "string",
          "x-ms-summary": "Clean Operations",
          "description": "Perform file clean-up operations, the default option will auto rotate, auto deskew and auto despeckle the provided file."
        },
        "AutoRotate": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Rotate",
          "description": "Automatically detects orientation and rotates so that the text is upright oriented, this is enabled by default."
        },
        "AutoRotateConfidenceLevel": {
          "format": "int32",
          "default": 60,
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Rotate Confidence Level",
          "description": "Sets the minimum confidence percentage (0 to 100) used to control whether the rotation is applied, the default value is 60."
        },
        "Deskew": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Deskew",
          "description": "Detects the skew angle and rotates to remove that skew, this is enabled by default."
        },
        "Despeckle": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Despeckle",
          "description": "Automatically detects speckles and removes them, this is enabled by default."
        },
        "AdjustBrightnessContrast": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Adjust Brightness and Contrast",
          "description": "This action analyzes a document and automatically adjusts brightness and contrast based on the analysis, this is disabled by default."
        },
        "RemoveBorder": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Border",
          "description": "Locates border pixels and removes the pixels from the document, this is disabled by default."
        },
        "SmoothBackground": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Smooth Background",
          "description": "This works only on color and grayscale documents. This operation smoothes background colors to eliminate or de-emphasize noise, this is disabled by default."
        },
        "SmoothObjects": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Smooth Objects",
          "description": "This only works on bitonal documents, it looks at groups of pixels, and finds isolated bumps and pits in the edges of those objects, and fills them in, this is disabled by default."
        },
        "RemoveDotShading": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Dot Shading",
          "description": "This action will remove shaded regions from bitonal documents, this is disabled by default."
        },
        "ImageDetergent": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Detergent",
          "description": "Image Detergent works by changing pixels of similar color values to a central color value, which has the result of smoothing the image wherever regions of those colors appear, this is disabled by default."
        },
        "ApplyAverageFilter": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Average Filter",
          "description": "Performs a 3x3 Average filter smoothing operation on the document, placing the output in the center of the window, this is disabled by default."
        },
        "RemoveHolePunch": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Hole Punch",
          "description": "Detects and removes hole punch marks from a bitonal document, this is disabled by default."
        },
        "Binarize": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Binarize",
          "description": "Computes all necessary parameters by analyzing the input data before actually performing the binarization. The algorithm is tuned to typical document images, consisting of dark text on brighter background. It is robust to shadows, noise and background images, this is disabled by default."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseImageCleanUpDoc": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoImageCleanUpPhoto": {
      "required": [
        "FileName",
        "FinalOperation"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source image file, the file extension is mandatory: 'file.png' and not 'file'"
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "The content of the source image file"
        },
        "cleanUpType": {
          "default": "Default",
          "enum": [
            "Default",
            "None",
            "Specific"
          ],
          "type": "string",
          "x-ms-summary": "Clean Operations",
          "description": "Perform file clean-up operations, the default option will auto rotate, apply colour balance, auto deskew and auto despeckle the provided file."
        },
        "Deskew": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Deskew",
          "description": "Detects the skew angle and rotates to remove that skew, this is enabled by default."
        },
        "Despeckle": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Despeckle",
          "description": "Automatically detects speckles and removes them, this is enabled by default."
        },
        "ColorBalance": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Color Balance",
          "description": "Restores and balances the color quality within an image, this is enabled by default."
        },
        "RemoveBorder": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Border",
          "description": "Locates border pixels and removes the pixels from the document, this is disabled by default."
        },
        "Contrast": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Contrast",
          "description": "Adjusts the contrast in the current image."
        },
        "RemoveRedeye": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Redeye",
          "description": "Automatically reduces the red reflection of the flash seen in the eyes of people in color flash photo images."
        },
        "Blur": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Blur",
          "description": "Blurs the current image by averaging each pixel with each of its neighboring pixels giving it an 'out of focus' appearance."
        },
        "Diffuse": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Diffuse",
          "description": "Diffuses the current image by replacing each pixel with a randomly selected neighboring pixel."
        },
        "Binarize": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Binarize",
          "description": "Computes all necessary parameters by analyzing the input data before actually performing the binarization. The algorithm is tuned to typical document images, consisting of dark text on brighter background. It is robust to shadows, noise and background images, this is disabled by default."
        },
        "AutoRotate": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Rotate",
          "description": "Automatically detects orientation and rotates so that the text is upright oriented, this is enabled by default."
        },
        "AutoRotateConfidenceLevel": {
          "format": "int32",
          "default": 60,
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Rotate Confidence Level",
          "description": "Sets the minimum confidence percentage (0 to 100) used to control whether the rotation is applied, the default value is 40."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseImageCleanUpPhoto": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoExtractTextRegion": {
      "required": [
        "FileName",
        "TextRegions"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "OperationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "TextRegions": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextRegion"
          },
          "x-ms-summary": "Text Regions",
          "description": "The collection of regions to to extract text from and return."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "TextRegion": {
      "required": [
        "Name",
        "LowerLeftXCoordinate",
        "LowerLeftYCoordinate",
        "UpperRightXCoordinate",
        "UpperRightYCoordinate",
        "Page Number"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Name",
          "description": "The name assigned to the text region"
        },
        "LowerLeftXCoordinate": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Lower Left X Coordinate",
          "description": "The number of points from the left edge of the page to the lower left corner of the rectangle text region"
        },
        "LowerLeftYCoordinate": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Lower Left Y Coordinate",
          "description": "The number of points from the bottom edge of the page to the lower left corner of the rectangle text region"
        },
        "UpperRightXCoordinate": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Upper Right X Coordinate",
          "description": "The number of points from the left edge of the page to the upper right corner of the rectangle text region"
        },
        "UpperRightYCoordinate": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Upper Right Y Coordinate",
          "description": "The number of points from the bottom edge of the page to the upper right corner of the rectangle text region"
        },
        "Page Number": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Page Number",
          "description": "The number of the page to extract text from"
        }
      }
    },
    "DtoResponseExtractTextRegion": {
      "required": [
        "TextRegionResults"
      ],
      "type": "object",
      "properties": {
        "TextRegionResults": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextRegionResult"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Text Region Results",
          "description": "A collection of text region results."
        },
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "TextRegionResult": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Name",
          "description": "The name assigned to the text region"
        },
        "Text": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text",
          "description": "The text extracted via OCR from the specified region"
        },
        "PageNumber": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Page Number",
          "description": "The number of the page the text was extracted from"
        }
      }
    },
    "DtoAddHtmlHeaderFooter": {
      "required": [
        "FileName",
        "htmlHeaderFooter",
        "HtmlHeaderFooterLocation",
        "MarginRight",
        "MarginLeft",
        "MarginTop"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "operationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "htmlHeaderFooter": {
          "type": "string",
          "x-ms-summary": "HTML Header / Footer",
          "description": "The HTML to embed as a header or footer within the document"
        },
        "HtmlHeaderFooterLocation": {
          "enum": [
            "Header",
            "Footer",
            "Both"
          ],
          "type": "string",
          "x-ms-summary": "Location",
          "description": "Set whether the HTML should be added to the header, footer of both locations."
        },
        "ApplyTo": {
          "default": "AllPages",
          "enum": [
            "FirstPage",
            "AllPages",
            "LastPage",
            "Specific"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Apply To",
          "description": "Set which pages within the PDF document to apply the HTML header or footer."
        },
        "pageNumbers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Page Numbers",
          "description": "Specify the page numbers where the HTML header or footer should be applied, this property only applies when the 'Apply To' property is set to 'Specific'."
        },
        "ignorePageNumbers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Ignore Page Numbers",
          "description": "Specify the page numbers where the HTML header or footer should not applied, this property only applies when the 'Apply To' property is set to 'Specific'."
        },
        "MarginBottom": {
          "format": "double",
          "default": -1,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Margin - Bottom",
          "description": "Set the bottom margin value (pt), which determines the height of the footers container. The default value is set to -1, whereby a minus value does not change the existing page margin value."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        },
        "MarginRight": {
          "format": "double",
          "default": 0,
          "type": "number",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Margin - Right",
          "description": "Set the right margin value(pt). The default value is set to 0."
        },
        "MarginLeft": {
          "format": "double",
          "default": 0,
          "type": "number",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Margin - Left",
          "description": "Set the left margin value (pt). The default value is set to 0."
        },
        "MarginTop": {
          "format": "double",
          "default": -1,
          "type": "number",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Margin - Top",
          "description": "Set the top margin value (pt). The default value is set to -1, whereby a minus value does not change the existing margin value."
        }
      }
    },
    "DtoResponseAddHtmlHeaderFooter": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoAddPageNumbers": {
      "required": [
        "FileName"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "operationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "StartPage": {
          "format": "int32",
          "default": 1,
          "type": "integer",
          "x-ms-summary": "Start Page",
          "description": "Set which page to start adding page number(s) from."
        },
        "StartNumber": {
          "format": "int32",
          "default": 1,
          "type": "integer",
          "x-ms-summary": "Start Number",
          "description": "Set the starting number for the page number(s) added to the document."
        },
        "PageNumberFormat": {
          "default": "[PageNumber] of [TotalPages]",
          "type": "string",
          "x-ms-summary": "Page Number Format",
          "description": "Set the format of the page number(s) added to the document, where [PageNumber] is replaced by the current page number and [TotalPages] is replaced by the total number of pages."
        },
        "HorizontalAlignment": {
          "default": "Center",
          "enum": [
            "None",
            "Left",
            "Center",
            "Right",
            "Justify",
            "FullJustify"
          ],
          "type": "string",
          "x-ms-summary": "Horizontal Alignment",
          "description": "Set the horizontal alignment of the page number(s) added to the document, the default value is Center."
        },
        "MarginTop": {
          "format": "double",
          "default": 20,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Margin - Top",
          "description": "Set the top margin value (pt). The default value is set to 20."
        },
        "MarginRight": {
          "format": "double",
          "default": 20,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Margin - Right",
          "description": "Set the right margin value(pt). The default value is set to 20."
        },
        "MarginBottom": {
          "format": "double",
          "default": 20,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Margin - Bottom",
          "description": "Set the bottom margin value (pt). The default value is set to 20."
        },
        "MarginLeft": {
          "format": "double",
          "default": 20,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Margin - Left",
          "description": "Set the left margin value (pt). The default value is set to 20."
        },
        "AddToBackground": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Add to Background",
          "description": "Set whether the page number(s) should be added to top or bottom layer of the PDF document. The default setting (false) adds the page number(s) to the top layer."
        },
        "Font": {
          "default": "Arial",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Font",
          "description": "Specify the name of the font, if the font cannot be found the default 'Arial' will be used."
        },
        "FontColour": {
          "default": "#000000",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Font Colour",
          "description": "Set the HTML colour of the font, the default colour is set to #000000."
        },
        "FontSize": {
          "format": "int32",
          "default": 14,
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Font Size",
          "description": "Set the size of the font, the default size is set to 14."
        },
        "Opacity": {
          "format": "float",
          "default": 1.0,
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Opacity",
          "description": "Set the opacity of the page number(s), valid values range from 0.0+ to 1.0, the default value is 1.0"
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseAddPageNumbers": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoGetPdfTextLayer": {
      "required": [
        "FileName"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source file"
        },
        "OperationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "StartPage": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Start Page",
          "description": "Sets the page number to begin text layer extraction from."
        },
        "EndPage": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "End Page",
          "description": "Sets the page number to end text layer extraction from. The default value is set to the last page of the PDF document provided."
        },
        "TextEncodingType": {
          "default": "UTF8",
          "enum": [
            "Default",
            "Latin1",
            "BigEndianUnicode",
            "UTF16",
            "UTF8",
            "UTF7",
            "ASCII"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Encoding Type",
          "description": "The encoding type used for text extraction."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseGetPdfTextLayer": {
      "required": [
        "TextLayer"
      ],
      "type": "object",
      "properties": {
        "TextLayer": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text Layer",
          "description": "The text layer extracted from the PDF document."
        },
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoRedactPdf": {
      "required": [
        "FileName",
        "Redactions"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "fileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "operationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "Redactions": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Redaction"
          },
          "x-ms-summary": "Redactions",
          "description": "The collection of redactions to apply to this PDF document"
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final PDF operation for this PDF document"
        }
      }
    },
    "Redaction": {
      "type": "object",
      "properties": {
        "SearchText": {
          "type": "string",
          "x-ms-summary": "Text",
          "description": "The text to search for and apply the specified redaction to."
        },
        "SearchExpression": {
          "type": "string",
          "x-ms-summary": "Expression",
          "description": "Specify a regular expression to seek matching text and apply the specified redaction to."
        },
        "RedactionColour": {
          "default": "#000000",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Redaction Colour",
          "description": "The redaction colour to apply to the redaction, the default value is #000000 (Black)"
        }
      }
    },
    "DtoResponseRedactPdf": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoImageResize": {
      "required": [
        "FileName",
        "FileContent",
        "ImageResizeType",
        "FinalOperation"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source image file, the file extension is mandatory: 'file.png' and not 'file'"
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "The content of the source image file"
        },
        "ImageResizeType": {
          "enum": [
            "Percentage",
            "Specific"
          ],
          "type": "string",
          "x-ms-summary": "Resize Type",
          "description": "Set whether the image should be resized to a ratio or specific dimensions."
        },
        "ResizePercentage": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Resize Percentage",
          "description": "For percentage resize actions - Set the percentage the image should be decrased or increased in size by."
        },
        "ImageWidth": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Image Width",
          "description": "For specific resize actions - Set the specific width of the image in pixels"
        },
        "ImageHeight": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Image Height",
          "description": "For specific resize actions - Set the specific height of the image in pixels"
        },
        "MaintainAspectRatio": {
          "default": true,
          "type": "boolean",
          "x-ms-summary": "Maintain Aspect Ratio",
          "description": "For specific resize actions - If true, the image height will be automatically set relevant to the image width provided."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseImageResize": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoGetPdfFormData": {
      "required": [
        "FileName",
        "FinalOperation"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "DtoResponseGetPdfFormData": {
      "type": "object",
      "properties": {
        "Form Data": {
          "type": "string",
          "x-ms-summary": "Form Data",
          "description": "A JSON representation of the data data extracted from the PDF form."
        },
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoSearchAndReplaceText": {
      "required": [
        "FileName",
        "Phrases"
      ],
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string",
          "x-ms-summary": "Filename",
          "description": "The filename of the source PDF file, the file extension is mandatory: 'file.pdf' and not 'file'"
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "description": "Optional - The content of the source PDF file"
        },
        "OperationId": {
          "type": "string",
          "x-ms-summary": "Operation ID",
          "description": "Optional - The identifier of a source operation"
        },
        "Phrases": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Phrase"
          },
          "x-ms-summary": "Phrases",
          "description": "The collection of text phrases to locate and replace."
        },
        "FinalOperation": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Final Operation",
          "description": "Set whether this is the final operation for this document"
        }
      }
    },
    "Phrase": {
      "required": [
        "SearchText",
        "ReplacementText",
        "Font",
        "FontSize",
        "FontColour",
        "BackgroundColour"
      ],
      "type": "object",
      "properties": {
        "SearchText": {
          "type": "string",
          "x-ms-summary": "Search Text",
          "description": "Optional - The text to locate and replace with the 'Replacement Text' value"
        },
        "IsExpression": {
          "default": false,
          "type": "boolean",
          "x-ms-summary": "Is Expression",
          "description": "Set whether the 'Search Text' value should be evaluted as a regular expression, the default value is 'false'"
        },
        "ReplacementText": {
          "type": "string",
          "x-ms-summary": "Replacement Text",
          "description": "The text to replace the 'Search Text' text with"
        },
        "Font": {
          "default": "Arial",
          "type": "string",
          "x-ms-summary": "Font",
          "description": "The name of the font to use for the 'Replacement Text', the default font is 'Arial'"
        },
        "FontSize": {
          "format": "int32",
          "default": 16,
          "type": "integer",
          "x-ms-summary": "Font Size",
          "description": "The size of the font to use for the 'Replacement Text', the default size is '16'"
        },
        "FontColour": {
          "default": "#000000",
          "type": "string",
          "x-ms-summary": "Font Colour",
          "description": "The HTML colour of the font to use for the 'Replacement Text', the default colour is '#000000'"
        },
        "BackgroundColour": {
          "default": "#FFFFFF",
          "type": "string",
          "x-ms-summary": "Background Colour",
          "description": "The background HTML colour to use for the 'Replacement Text', the default colour is '#FFFFFF'"
        },
        "Underline": {
          "default": false,
          "type": "boolean",
          "x-ms-summary": "Underline",
          "description": "Set whether the 'Replacement Text' should be underlined, the default value is 'false'"
        },
        "WordSpacing": {
          "format": "float",
          "type": "number",
          "x-ms-summary": "Word Spacing",
          "description": "The word spacing to apply to the 'Replacement Text'"
        },
        "LineSpacing": {
          "format": "float",
          "type": "number",
          "x-ms-summary": "Line Spacing",
          "description": "The line spacing to apply to the 'Replacement Text'"
        }
      }
    },
    "DtoResponseSearchAndReplaceText": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    },
    "DtoBaseMgmtResponse": {
      "type": "object",
      "properties": {
        "HttpStatusCode": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Code",
          "description": "The HTTP Status code for the response."
        },
        "HttpStatusMessage": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "HTTP Status Message",
          "description": "The HTTP Status message for the response."
        },
        "OperationId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Operation ID",
          "description": "The unique ID assigned to this operation."
        },
        "Errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Errors",
          "description": "An array of error messages should an error occur."
        },
        "Operation Status": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Operation Status",
          "description": "Indicates whether the operation has completed, has been queued or has failed."
        },
        "Filename": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Filename",
          "description": "The filename of the document."
        },
        "FileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File Content",
          "description": "The processed document."
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "name": "X-ApiKey",
      "in": "header",
      "type": "apiKey",
      "description": "API Key Authentication Header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}