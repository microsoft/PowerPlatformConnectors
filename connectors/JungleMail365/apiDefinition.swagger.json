{
  "basePath": "/",
  "consumes": [],
  "definitions": {
    "JsApproveJobRequest": {
      "properties": {
        "comments": {
          "description": "Specify details or reason",
          "type": "string",
          "x-ms-summary": "Comments"
        },
        "secret": {
          "description": "Newsletter secret from \"When a newsletter is submitted\" trigger.",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Secret"
        }
      },
      "required": [
        "secret"
      ],
      "type": "object"
    },
    "JsApproveJobResponse": {
      "properties": {},
      "type": "object"
    },
    "JsCreateJobRequest": {
      "properties": {
        "adGroups": {
          "description": "Office 365 group names comma separated",
          "type": "string",
          "x-ms-summary": "Office 365 groups"
        },
        "attachmentContent": {
          "description": "Attachment content",
          "format": "byte",
          "type": "string",
          "x-ms-summary": "Attachment content"
        },
        "attachmentName": {
          "description": "Attachment file name with extension (ex. document.docx)",
          "type": "string",
          "x-ms-summary": "Attachment name"
        },
        "emailAddresses": {
          "description": "Email addresses comma separated",
          "type": "string",
          "x-ms-summary": "Email addresses"
        },
        "emailBody": {
          "description": "Email content (html or text)",
          "type": "string",
          "x-ms-summary": "Email content"
        },
        "emailContentType": {
          "default": "Template",
          "description": "Specify email content type",
          "enum": [
            "Template",
            "Html"
          ],
          "type": "string",
          "x-ms-summary": "Email content type"
        },
        "emailSubject": {
          "description": "Specify email subject",
          "type": "string",
          "x-ms-summary": "Email subject"
        },
        "exchangeGroups": {
          "description": "Exchange groups comma separated",
          "type": "string",
          "x-ms-summary": "Exchange groups"
        },
        "jobExecutionType": {
          "default": "Now",
          "description": "Specify when to send newsletter type",
          "enum": [
            "Now",
            "AtSpecifiedTime"
          ],
          "type": "string",
          "x-ms-summary": "When to send type"
        },
        "jobScheduleTime": {
          "description": "Newsletter execution time (ISO 8601 or yyyy-MM-dd HH:mm), ex: 2017-02-16 20:30",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "When to send"
        },
        "recipientListField": {
          "description": "SharePoint list recipient field id or name",
          "type": "string",
          "x-ms-summary": "Recipient email field"
        },
        "recipientListUrl": {
          "description": "SharePoint list URL of recipients list",
          "type": "string",
          "x-ms-summary": "Recipient list URL"
        },
        "recipientListView": {
          "description": "SharePoint list view name for filter",
          "type": "string",
          "x-ms-summary": "Recipient filter view"
        },
        "recipientType": {
          "default": "Emails",
          "description": "Newsletter recipient source",
          "enum": [
            "Emails",
            "List",
            "Office365Groups",
            "ExchangeGroups"
          ],
          "type": "string",
          "x-ms-summary": "Recipient source"
        },
        "removeDuplicates": {
          "default": true,
          "description": "Remove email duplicates",
          "type": "boolean",
          "x-ms-summary": "Remove duplicates"
        },
        "reportAuthor": {
          "default": true,
          "description": "Send newsletter report after finish",
          "type": "boolean",
          "x-ms-summary": "Send report"
        },
        "scheduledTimeZoneId": {
          "description": "Time zone for sending date adjustment",
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "TimeZones_GetAllTimeZones",
            "value-path": "id",
            "value-title": "title"
          },
          "x-ms-summary": "Time zone"
        },
        "sendingAddressId": {
          "description": "Sending account for email sending",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "SendingAddresses_GetAll",
            "value-path": "id",
            "value-title": "displayName"
          },
          "x-ms-summary": "Sending account"
        },
        "template": {
          "description": "Template for email content",
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "Templates_GetAll",
            "value-path": "id",
            "value-title": "displayTitle"
          },
          "x-ms-summary": "Template"
        },
        "title": {
          "description": "Specify newsletter title",
          "type": "string",
          "x-ms-summary": "Newsletter title"
        },
        "trackClicks": {
          "default": true,
          "description": "Track clicks",
          "type": "boolean",
          "x-ms-summary": "Track clicks"
        },
        "trackOpens": {
          "default": true,
          "description": "Track opens",
          "type": "boolean",
          "x-ms-summary": "Track opens"
        }
      },
      "required": [
        "title",
        "sendingAddressId",
        "recipientType"
      ],
      "type": "object"
    },
    "JsCreateJobResponse": {
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "id": {
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "JsEmail": {
      "properties": {
        "recipientAddress": {
          "description": "Recipient email address",
          "type": "string",
          "x-ms-summary": "Recipient email"
        },
        "recipientId": {
          "description": "Recipient id depends on recipient source",
          "type": "string",
          "x-ms-summary": "Recipient id"
        },
        "recipientItemId": {
          "description": "Recipient item id if recipient from SharePoint list",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Recipient item id"
        },
        "recipientName": {
          "description": "Recipient name",
          "type": "string",
          "x-ms-summary": "Recipient name"
        },
        "recipientSource": {
          "description": "Recipient source type name",
          "type": "string",
          "x-ms-summary": "Recipient source"
        }
      },
      "type": "object"
    },
    "JsEmailsRequest": {
      "properties": {
        "emailType": {
          "default": "Sent",
          "description": "Email filter type",
          "enum": [
            "Sent",
            "Skipped",
            "Failed",
            "Completed"
          ],
          "type": "string",
          "x-ms-summary": "Filter type"
        },
        "jobId": {
          "description": "Newsletter id to retrieve",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Newsletter id"
        }
      },
      "required": [
        "jobId",
        "emailType"
      ],
      "type": "object"
    },
    "JsEmailsResponse": {
      "properties": {
        "emails": {
          "description": "Emails list",
          "items": {
            "$ref": "#/definitions/JsEmail"
          },
          "type": "array",
          "x-ms-summary": "Emails"
        }
      },
      "type": "object"
    },
    "JsGetJobReportRequest": {
      "properties": {
        "jobId": {
          "description": "Specify newsletter id to retrieve",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Newsletter id"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "object"
    },
    "JsGetJobRequest": {
      "properties": {
        "jobId": {
          "description": "Specify newsletter id to retrieve",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Newsletter id"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "object"
    },
    "JsGetJobsRequest": {
      "properties": {
        "dateFrom": {
          "description": "Date from (UTC, ISO 8601 format)",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Date from"
        },
        "dateTo": {
          "description": "Date to (UTC, ISO 8601 format)",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Date to"
        },
        "limit": {
          "description": "Number of newsletters to retrieve (up to 200)",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Limit"
        }
      },
      "type": "object"
    },
    "JsJob": {
      "properties": {
        "createdByEmail": {
          "description": "Email of a user who created a newsletter",
          "type": "string",
          "x-ms-summary": "Created by email"
        },
        "createdById": {
          "description": "Id of a user who created a newsletter",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Created by id"
        },
        "createdByTitle": {
          "description": "Name of a user who created a newsletter",
          "type": "string",
          "x-ms-summary": "Created by"
        },
        "createdTime": {
          "description": "Time when newsletter was created",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created time"
        },
        "displayName": {
          "description": "Newsletter display name",
          "type": "string",
          "x-ms-summary": "Newsletter display name"
        },
        "emailSubject": {
          "description": "Email subject",
          "type": "string",
          "x-ms-summary": "Email subject"
        },
        "emailbody": {
          "description": "Email content in HTML format",
          "type": "string",
          "x-ms-summary": "Email HTML"
        },
        "id": {
          "description": "Newsletter id",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Newsletter id"
        },
        "isRecurrent": {
          "description": "Status if newsletter is recurrent (true or false)",
          "type": "boolean",
          "x-ms-summary": "Is recurrent"
        },
        "isScheduled": {
          "description": "Status if newsletter is scheduled (true or false)",
          "type": "boolean",
          "x-ms-summary": "Is scheduled"
        },
        "modifiedByEmail": {
          "description": "Email of a user who modified a newsletter",
          "type": "string",
          "x-ms-summary": "Modified by email"
        },
        "modifiedById": {
          "description": "Id of a user who modified a newsletter",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Modified by id"
        },
        "modifiedByTitle": {
          "description": "Name of a user who modified a newsletter",
          "type": "string",
          "x-ms-summary": "Modified by"
        },
        "modifiedTime": {
          "description": "Time when newsletter was modified",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Modified time"
        },
        "previewUrl": {
          "description": "Newsletter preview URL",
          "type": "string",
          "x-ms-summary": "Preview URL"
        },
        "scheduledTime": {
          "description": "Time when newsletter should be sent",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Scheduled time"
        },
        "sendFailedCount": {
          "description": "Number of failed emails",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Send failed count"
        },
        "sendPercent": {
          "description": "Send percent (number)",
          "format": "double",
          "type": "number",
          "x-ms-summary": "Send percent"
        },
        "sendPercentFormatted": {
          "description": "Send percent (plain text)",
          "type": "string",
          "x-ms-summary": "Send percent"
        },
        "sendSkippedCount": {
          "description": "Number of skipped emails",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Send skipped count"
        },
        "sendSucceededCount": {
          "description": "Number of send succeeded emails",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Send succeeded count"
        },
        "sendTime": {
          "description": "Time when newsletter was sent",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Send time"
        },
        "sendTotal": {
          "description": "Number of total emails",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Send total"
        },
        "status": {
          "description": "Newsletter current status",
          "type": "string",
          "x-ms-summary": "Status"
        },
        "submittedByEmail": {
          "description": "Email of a user who submitted a newsletter",
          "type": "string",
          "x-ms-summary": "Submitted by email"
        },
        "submittedById": {
          "description": "Id of a user who submitted a newsletter",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Submitted by id"
        },
        "submittedByTitle": {
          "description": "Name of a user who submitted a newsletter",
          "type": "string",
          "x-ms-summary": "Submitted by"
        },
        "submittedTime": {
          "description": "Time when newsletter was submitted",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Submitted time"
        },
        "title": {
          "description": "Newsletter title",
          "type": "string",
          "x-ms-summary": "Newsletter title"
        },
        "totalRecipients": {
          "description": "Total resolved recipients count after newsletter submission",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Total recipients"
        }
      },
      "type": "object"
    },
    "JsJobInfo": {
      "properties": {
        "jobId": {
          "description": "Newsletter id",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Newsletter id"
        }
      },
      "type": "object"
    },
    "JsJobReport": {
      "properties": {
        "bounces": {
          "description": "Number of total bounces",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Bounces"
        },
        "bouncesRate": {
          "description": "Bouces rate (number)",
          "format": "double",
          "type": "number",
          "x-ms-summary": "Bounces rate"
        },
        "bouncesRateFormatted": {
          "description": "Bounces rate (plain text)",
          "type": "string",
          "x-ms-summary": "Bounces rate"
        },
        "devicesDesktopCount": {
          "description": "Number of emails opened on desktop computers",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Devices desktop"
        },
        "devicesDesktopRate": {
          "description": "Emails opened on desktop computers rate (number)",
          "format": "double",
          "type": "number",
          "x-ms-summary": "Devices desktop rate"
        },
        "devicesDesktopRateFormatted": {
          "description": "Emails opened on desktop computers rate (plain text)",
          "type": "string",
          "x-ms-summary": "Devices desktop rate"
        },
        "devicesOtherCount": {
          "description": "Number of emails opened on unknown device",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Devices other"
        },
        "devicesPhoneCount": {
          "description": "Number of emails opened on mobile phones",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Devices phone"
        },
        "devicesPhoneRate": {
          "description": "Emails opened on mobile phones rate (number)",
          "format": "double",
          "type": "number",
          "x-ms-summary": "Devices phone rate"
        },
        "devicesPhoneRateFormatted": {
          "description": "Emails opened on mobile phones rate (plain text)",
          "type": "string",
          "x-ms-summary": "Devices phone rate"
        },
        "devicesTabletCount": {
          "description": "Number of emails opened on tablet devices",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Devices tablet"
        },
        "devicesTabletRate": {
          "description": "Emails opened on tablet devices rate (number)",
          "format": "double",
          "type": "number",
          "x-ms-summary": "Devices tablet rate"
        },
        "devicesTabletRateFormatted": {
          "description": "Emails opened on tablet devices rate (plain text)",
          "type": "string",
          "x-ms-summary": "Devices tablet rate"
        },
        "emailOpensRate": {
          "description": "Email opens rate (number)",
          "format": "double",
          "type": "number",
          "x-ms-summary": "Email opens rate"
        },
        "emailOpensRateFormatted": {
          "description": "Email opens rate (plain text)",
          "type": "string",
          "x-ms-summary": "Email opens rate"
        },
        "emailOpensTotal": {
          "description": "Number of total email opens",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Total email opens"
        },
        "emailOpensUnique": {
          "description": "Number of unique email opens",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Unique email opens"
        },
        "emailSubject": {
          "description": "Email subject",
          "type": "string",
          "x-ms-summary": "Email subject"
        },
        "emailsFailed": {
          "description": "Number of emails failed",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Emails failed"
        },
        "emailsSent": {
          "description": "Number of emails sent",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Total emails sent"
        },
        "emailsSkipped": {
          "description": "Number of emails skipped",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Emails skipped"
        },
        "emailsTotal": {
          "description": "Number of total emails processed",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Total emails"
        },
        "emailsUnopened": {
          "description": "Unopened emails",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Emails unopened"
        },
        "jobDisplayName": {
          "description": "Newsletter display name",
          "type": "string",
          "x-ms-summary": "Newsletter display name"
        },
        "jobTitle": {
          "description": "Newsletter title",
          "type": "string",
          "x-ms-summary": "Newsletter title"
        },
        "linkClicksRate": {
          "description": "Link clicks rate (number)",
          "format": "double",
          "type": "number",
          "x-ms-summary": "Link clicks rate"
        },
        "linkClicksRateFormatted": {
          "description": "Link clicks rate (plain text)",
          "type": "string",
          "x-ms-summary": "Link clicks rate"
        },
        "linkClicksTotal": {
          "description": "Number of total link clicks",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Total link clicks"
        },
        "linkClicksUnique": {
          "description": "Number of unique link clicks",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Unique link clicks"
        },
        "linksNotClicked": {
          "description": "Number of total emails with unclicked links",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Links not clicked"
        },
        "reportHtml": {
          "description": "Send analytics report in HTML format",
          "type": "string",
          "x-ms-summary": "Report in HTML"
        },
        "sendTime": {
          "description": "Time when newsletter was sent",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Send time"
        },
        "submittedBy": {
          "description": "Name of a user who submitted a newsletter",
          "type": "string",
          "x-ms-summary": "Submitted by"
        },
        "submittedByEmail": {
          "description": "Email of a user who submitted a newsletter",
          "type": "string",
          "x-ms-summary": "Submitted by email"
        },
        "submittedById": {
          "description": "Id of a user who submitted a newsletter",
          "type": "string",
          "x-ms-summary": "Submitted by id"
        },
        "topLinks": {
          "description": "Top links list",
          "items": {
            "$ref": "#/definitions/JsTopLink"
          },
          "type": "array",
          "x-ms-summary": "Top links"
        },
        "unsubscribes": {
          "description": "Number of total unsubscribes",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Total unsubscribes"
        },
        "unsubscribesRate": {
          "description": "Unsuscribes rate (number)",
          "format": "double",
          "type": "number",
          "x-ms-summary": "Unsubscribes rate"
        },
        "unsubscribesRateFormatted": {
          "description": "Unsubscribes rate (plain text)",
          "type": "string",
          "x-ms-summary": "Unsubscribes rate"
        }
      },
      "type": "object"
    },
    "JsJobSubmittedTriggerNotification": {
      "properties": {
        "jobId": {
          "description": "Newsletter id",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Newsletter id"
        },
        "secret": {
          "description": "Newsletter approval secret needed for approval",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Newsletter approval secret"
        }
      },
      "type": "object"
    },
    "JsJobTriggerNotification": {
      "properties": {
        "jobId": {
          "description": "Newsletter id",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Newsletter id"
        }
      },
      "type": "object"
    },
    "JsJobsResponse": {
      "properties": {
        "jobs": {
          "description": "Newsletters list",
          "items": {
            "$ref": "#/definitions/JsJobInfo"
          },
          "type": "array",
          "x-ms-summary": "Newsletters"
        }
      },
      "type": "object"
    },
    "JsListViewResponse": {
      "properties": {
        "id": {
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JsRegisterWebhookJobCompleted": {
      "properties": {
        "title": {
          "description": "Title used in JungleMail Settings for a reference",
          "type": "string",
          "x-ms-summary": "Title"
        },
        "triggerUrl": {
          "description": "Trigger Url",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "triggerUrl",
        "title"
      ],
      "type": "object"
    },
    "JsRegisterWebhookJobStarted": {
      "properties": {
        "title": {
          "description": "Title used in JungleMail Settings for a reference",
          "type": "string",
          "x-ms-summary": "Title"
        },
        "triggerUrl": {
          "description": "Trigger Url",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "triggerUrl",
        "title"
      ],
      "type": "object"
    },
    "JsRegisterWebhookJobSubmitted": {
      "properties": {
        "title": {
          "description": "Title used in JungleMail Settings for a reference",
          "type": "string",
          "x-ms-summary": "Title"
        },
        "triggerUrl": {
          "description": "Trigger Url",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "triggerUrl",
        "title"
      ],
      "type": "object"
    },
    "JsRejectJobRequest": {
      "properties": {
        "comments": {
          "description": "Specify details or reason",
          "type": "string",
          "x-ms-summary": "Comments"
        },
        "secret": {
          "description": "Newsletter secret from \"When a newsletter is submitted\" trigger.",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Secret"
        }
      },
      "required": [
        "secret"
      ],
      "type": "object"
    },
    "JsRejectJobResponse": {
      "properties": {},
      "type": "object"
    },
    "JsSchemaResponse": {
      "properties": {
        "schema": {
          "description": "Schema",
          "type": "object"
        }
      },
      "type": "object"
    },
    "JsSendingAddress": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JsTemplateResponse": {
      "properties": {
        "body": {
          "description": "Email body",
          "type": "string"
        },
        "displayTitle": {
          "description": "Template title for display",
          "type": "string"
        },
        "emailSubject": {
          "description": "Email subject",
          "type": "string"
        },
        "id": {
          "description": "Template Id",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string"
        },
        "isBuilder": {
          "description": "Is template builder",
          "type": "boolean"
        },
        "title": {
          "description": "Template Title",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JsTimeZoneResponse": {
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JsTopLink": {
      "properties": {
        "linkClicksTotal": {
          "description": "Number of total link clicks",
          "type": "string",
          "x-ms-summary": "Total link clicks"
        },
        "linkClicksUnique": {
          "description": "Number of unique link clicks",
          "type": "string",
          "x-ms-summary": "Unique link clicks"
        },
        "linkIndex": {
          "description": "Link index number",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Index"
        },
        "url": {
          "description": "Link URL",
          "type": "string",
          "x-ms-summary": "URL"
        }
      },
      "type": "object"
    },
    "JsTrackerLogRequest": {
      "properties": {
        "dataType": {
          "default": "OpensUnique",
          "description": "Specify log type to retrieve",
          "enum": [
            "OpensUnique",
            "OpensTotal",
            "OpensUnopened",
            "ClicksUnique",
            "ClicksTotal",
            "ClicksNotClicked",
            "Unsubscribes",
            "Bounces",
            "FailedEmails",
            "SkippedEmails"
          ],
          "type": "string",
          "x-ms-summary": "Data type"
        },
        "jobId": {
          "description": "Specify newsletter id to retrieve tracker log",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Newsletter id"
        }
      },
      "required": [
        "jobId",
        "dataType"
      ],
      "type": "object"
    },
    "JsTrackerLogResponse": {
      "properties": {
        "trackerLog": {
          "description": "Tracker log",
          "items": {
            "$ref": "#/definitions/JsTrackerLogRow"
          },
          "type": "array",
          "x-ms-summary": "TrackerLog"
        }
      },
      "type": "object"
    },
    "JsTrackerLogRow": {
      "properties": {
        "bounceDescription": {
          "description": "Bounce description (availble only in bounces)",
          "type": "string",
          "x-ms-summary": "Bounce description"
        },
        "bounceReason": {
          "description": "Bounce reason (availble only in bounces)",
          "type": "string",
          "x-ms-summary": "Bounce reason"
        },
        "bounceType": {
          "description": "Bounce type (availble only in bounces)",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Bounce type"
        },
        "bouncedOn": {
          "description": "When email bounced (available only in bounces)",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Bounced time"
        },
        "clickCount": {
          "description": "Total email clicks (available only in unique clicks)",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Clicks count"
        },
        "clickedOn": {
          "description": "When email clicked (available only in total clicks)",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Clicked time"
        },
        "email": {
          "description": "Recipient email address",
          "type": "string",
          "x-ms-summary": "Email"
        },
        "firstTimeClickedOn": {
          "description": "When email first time clicked (available only in unique clicks)",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "First click time"
        },
        "firstTimeOpenedOn": {
          "description": "When email first time opened (available only in unique opens)",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "First open time"
        },
        "ipAddress": {
          "description": "IP address (available in total opens and clicks)",
          "type": "string",
          "x-ms-summary": "IP address"
        },
        "linkUrl": {
          "description": "URL of clicked (available in total clicks)",
          "type": "string",
          "x-ms-summary": "Link URL"
        },
        "openCount": {
          "description": "Total email opens (available only in unique opens)",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Open count"
        },
        "openedOn": {
          "description": "When email opened (available only in total opens)",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Opened time"
        },
        "unsubscribedOn": {
          "description": "When email unsubscribed",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Unsubscribed time"
        }
      },
      "type": "object"
    },
    "JsUnsubscribe": {
      "properties": {
        "recipientAddress": {
          "description": "Recipient email address",
          "type": "string",
          "x-ms-summary": "Recipient email"
        },
        "recipientId": {
          "description": "Recipient id depends on recipient source",
          "type": "string",
          "x-ms-summary": "Recipient id"
        },
        "recipientItemId": {
          "description": "Recipient item id if recipient from SharePoint list",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Recipient item id"
        },
        "recipientName": {
          "description": "Recipient name",
          "type": "string",
          "x-ms-summary": "Recipient name"
        },
        "recipientSource": {
          "description": "Recipient source type name",
          "type": "string",
          "x-ms-summary": "Recipient source"
        },
        "unsubscribeTime": {
          "description": "",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Unsubscribe Time"
        }
      },
      "type": "object"
    },
    "JsUnsubscribesRequest": {
      "properties": {
        "jobId": {
          "description": "If not specified then all unsubcribes will be retrieved",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Newsletter id"
        }
      },
      "type": "object"
    },
    "JsUnsubscribesResponse": {
      "properties": {
        "unsubscribes": {
          "description": "Unsubscribes list",
          "items": {
            "$ref": "#/definitions/JsUnsubscribe"
          },
          "type": "array",
          "x-ms-summary": "Unsubscribes"
        }
      },
      "type": "object"
    },
    "JsWebhookCreatedResponse": {
      "properties": {
        "succeeded": {
          "description": "Webhook Creation Status",
          "type": "boolean"
        },
        "webhookId": {
          "description": "Webhook Id",
          "example": "00000000-0000-0000-0000-000000000000",
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "host": "api.junglemail365.com",
  "info": {
    "description": "JungleMail for Office 365 is a service that helps companies deliver personalized newsletters to their employees and their customers and increase engagement. Connect to JungleMail 365 to create newsletters, approve them and get analytical data.",
    "title": "JungleMail 365",
    "version": "v1.0",
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "parameters": {},
  "paths": {
    "/1.0/deletewebhook/{hookid}": {
      "delete": {
        "consumes": [],
        "description": "Delete webhook",
        "operationId": "DeleteWebhook",
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "hookid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Delete webhook",
        "tags": [
          "Webhooks"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/1.0/emails": {
      "get": {
        "consumes": [],
        "description": "Get processed emails list",
        "operationId": "Emails_Get",
        "parameters": [
          {
            "description": "Newsletter id to retrieve",
            "format": "uuid",
            "in": "query",
            "name": "request.jobId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Newsletter id"
          },
          {
            "default": "Sent",
            "description": "Email filter type",
            "enum": [
              "Sent",
              "Skipped",
              "Failed",
              "Completed"
            ],
            "in": "query",
            "name": "request.emailType",
            "required": true,
            "type": "string",
            "x-ms-summary": "Filter type"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsEmailsResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get processed emails list",
        "tags": [
          "Emails"
        ]
      }
    },
    "/1.0/job/approve": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "description": "Approve and execute JungleMail 365 newsletter.",
        "operationId": "Job_Approve",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsApproveJobRequest"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsApproveJobResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Approve newsletter",
        "tags": [
          "Job"
        ]
      }
    },
    "/1.0/job/create": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "description": "Create JungleMail 365 newsletter.",
        "operationId": "Job_Create",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsCreateJobRequest"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsCreateJobResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Create newsletter",
        "tags": [
          "Job"
        ]
      }
    },
    "/1.0/job/get": {
      "get": {
        "consumes": [],
        "description": "Get newsletter details.",
        "operationId": "Job_Get",
        "parameters": [
          {
            "description": "Specify newsletter id to retrieve",
            "format": "uuid",
            "in": "query",
            "name": "request.jobId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Newsletter id"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsJob"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get newsletter details",
        "tags": [
          "Job"
        ]
      }
    },
    "/1.0/job/getlist": {
      "get": {
        "consumes": [],
        "description": "Get the list of recently completed newsletters.",
        "operationId": "Job_GetAll",
        "parameters": [
          {
            "description": "Date from (UTC, ISO 8601 format)",
            "format": "date-time",
            "in": "query",
            "name": "request.dateFrom",
            "required": false,
            "type": "string",
            "x-ms-summary": "Date from"
          },
          {
            "description": "Date to (UTC, ISO 8601 format)",
            "format": "date-time",
            "in": "query",
            "name": "request.dateTo",
            "required": false,
            "type": "string",
            "x-ms-summary": "Date to"
          },
          {
            "description": "Number of newsletters to retrieve (up to 200)",
            "format": "int32",
            "in": "query",
            "name": "request.limit",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Limit"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsJobsResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get newsletters",
        "tags": [
          "Job"
        ]
      }
    },
    "/1.0/job/getreport": {
      "get": {
        "consumes": [],
        "description": "Get newsletter analytics report.",
        "operationId": "Job_GetReport",
        "parameters": [
          {
            "description": "Specify newsletter id to retrieve",
            "format": "uuid",
            "in": "query",
            "name": "request.jobId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Newsletter id"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsJobReport"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get analytics report",
        "tags": [
          "Job"
        ]
      }
    },
    "/1.0/job/reject": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "description": "Reject JungleMail 365 newsletter.",
        "operationId": "Job_Reject",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsRejectJobRequest"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsRejectJobResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Reject newsletter",
        "tags": [
          "Job"
        ]
      }
    },
    "/1.0/list/fields": {
      "get": {
        "consumes": [],
        "description": "Get all list email fields",
        "operationId": "List_GetListEmailFields",
        "parameters": [
          {
            "in": "query",
            "name": "listUrl",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/JsListViewResponse"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get all list email fields",
        "tags": [
          "List"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/1.0/list/views": {
      "get": {
        "consumes": [],
        "description": "Get all list views",
        "operationId": "List_GetListViews",
        "parameters": [
          {
            "in": "query",
            "name": "listUrl",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/JsListViewResponse"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get all list views",
        "tags": [
          "List"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/1.0/registerwebhookjobcompleted": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "description": "This operation triggers a flow when a JungleMail 365 newsletter processing is completed.",
        "operationId": "Webhook_JobCompleted",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "properties": {
                "title": {
                  "description": "Title used in JungleMail Settings for a reference",
                  "type": "string",
                  "x-ms-summary": "Title"
                },
                "triggerUrl": {
                  "description": "Trigger Url",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "triggerUrl",
                "title"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/JsWebhookCreatedResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "When newsletter processing is completed",
        "tags": [
          "Job"
        ],
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/JsJobTriggerNotification"
        }
      }
    },
    "/1.0/registerwebhookjobstarted": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "description": "This operation triggers a flow when a JungleMail 365 newsletter processing is started.",
        "operationId": "Webhook_JobStarted",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "properties": {
                "title": {
                  "description": "Title used in JungleMail Settings for a reference",
                  "type": "string",
                  "x-ms-summary": "Title"
                },
                "triggerUrl": {
                  "description": "Trigger Url",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "triggerUrl",
                "title"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/JsWebhookCreatedResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "When newsletter processing is started",
        "tags": [
          "Job"
        ],
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/JsJobTriggerNotification"
        }
      }
    },
    "/1.0/registerwebhookjobsubmitted": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "description": "This operation triggers a flow when a JungleMail 365 newsletter is submitted.",
        "operationId": "Webhook_JobSumitted",
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "properties": {
                "title": {
                  "description": "Title used in JungleMail Settings for a reference",
                  "type": "string",
                  "x-ms-summary": "Title"
                },
                "triggerUrl": {
                  "description": "Trigger Url",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "triggerUrl",
                "title"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/JsWebhookCreatedResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "When a newsletter is submitted",
        "tags": [
          "Job"
        ],
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/JsJobSubmittedTriggerNotification"
        }
      }
    },
    "/1.0/schemas/jobrecipienttype": {
      "get": {
        "consumes": [],
        "description": "Get schema by job recipient type.",
        "operationId": "Schema_GetJobRecipientTypeSchema",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsSchemaResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get Schema",
        "tags": [
          "Schema"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/1.0/sendingaddresses": {
      "get": {
        "consumes": [],
        "description": "Get all sending addresses",
        "operationId": "SendingAddresses_GetAll",
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/JsSendingAddress"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get all sending addresses",
        "tags": [
          "SendingAddress"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/1.0/templates": {
      "get": {
        "consumes": [],
        "description": "Get all templates",
        "operationId": "Templates_GetAll",
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/JsTemplateResponse"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get all templates",
        "tags": [
          "Template"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/1.0/timezones": {
      "get": {
        "consumes": [],
        "description": "Get all time zones",
        "operationId": "TimeZones_GetAllTimeZones",
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/JsTimeZoneResponse"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get all time zones",
        "tags": [
          "TimeZone"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/1.0/trackerlog": {
      "get": {
        "consumes": [],
        "description": "Get analytics log",
        "operationId": "TrackerLog_Get",
        "parameters": [
          {
            "description": "Specify newsletter id to retrieve tracker log",
            "format": "uuid",
            "in": "query",
            "name": "request.jobId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Newsletter id"
          },
          {
            "default": "OpensUnique",
            "description": "Specify log type to retrieve",
            "enum": [
              "OpensUnique",
              "OpensTotal",
              "OpensUnopened",
              "ClicksUnique",
              "ClicksTotal",
              "ClicksNotClicked",
              "Unsubscribes",
              "Bounces",
              "FailedEmails",
              "SkippedEmails"
            ],
            "in": "query",
            "name": "request.dataType",
            "required": true,
            "type": "string",
            "x-ms-summary": "Data type"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsTrackerLogResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get analytics log",
        "tags": [
          "TrackerActions"
        ]
      }
    },
    "/1.0/unsubscribes": {
      "get": {
        "consumes": [],
        "description": "Get unsubscribes",
        "operationId": "Unsubscribes_Get",
        "parameters": [
          {
            "description": "If not specified then all unsubcribes will be retrieved",
            "format": "uuid",
            "in": "query",
            "name": "request.jobId",
            "required": false,
            "type": "string",
            "x-ms-summary": "Newsletter id"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsUnsubscribesResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get unsubscribes",
        "tags": [
          "Unsubscribes"
        ]
      }
    }
  },
  "produces": [],
  "responses": {},
  "schemes": [
    "https"
  ],
  "security": [],
  "securityDefinitions": {
    "api_key": {
      "description": "API Key Authentication",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": []
}