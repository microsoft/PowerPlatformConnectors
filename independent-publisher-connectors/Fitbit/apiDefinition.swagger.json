{
  "swagger": "2.0",
  "info": {
    "title": "Fitbit",
    "description": "A way to access the Fitbit Web API",
    "contact": {
      "name": "Ashwin Ganesh Kumar",
      "url": "https://www.blisdigital.com/",
      "email": "a.kumar@blisdigital.com"
    },
    "version": "1.0"
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://dev.fitbit.com//"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.fitbit.com/global/nl/legal/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data"
    }
  ],
  "host": "api.fitbit.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/1.2/user/{user-id}/sleep/goal.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "consistency": {
                  "type": "object",
                  "properties": {
                    "flowId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "0 = A sleep goal is set, but there are not enough sleep logs recorded. 1 = The user either missed their sleep goal or no goal is set, but there are enough sleep logs recorded.  2 = A sleep goal is not set, and there are not enough sleep logs recorded. 3 = The user achieved their sleep goal",
                      "title": "flowId"
                    }
                  },
                  "description": "consistency"
                },
                "goal": {
                  "type": "object",
                  "properties": {
                    "minDuration": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Length of the sleep goal period in minutes.",
                      "title": "minDuration"
                    },
                    "updatedOn": {
                      "type": "string",
                      "description": "The timestamp that the goal was created/updated.",
                      "title": "updatedOn"
                    }
                  },
                  "description": "goal"
                }
              }
            }
          }
        },
        "summary": "Get Sleep Goal",
        "description": "Specify the encoded ID of the user. Use \u0022-\u0022 (dash) for current logged-in user.",
        "operationId": "GetSleepGoal",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/1.2/user/{user-id}/sleep/date/{date}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "sleep": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dateOfSleep": {
                        "type": "string",
                        "description": "The date the sleep log ended",
                        "title": "dateOfSleep"
                      },
                      "duration": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Length of the sleep in milliseconds.",
                        "title": "duration"
                      },
                      "efficiency": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Calculated sleep efficiency score. This is not the sleep score available in the mobile application.",
                        "title": "efficiency"
                      },
                      "endTime": {
                        "type": "string",
                        "description": "Time the sleep log ended.",
                        "title": "endTime"
                      },
                      "infoCode": {
                        "type": "integer",
                        "format": "int32",
                        "description": "An integer value representing the quality of data collected within the sleep log. 0 = Sufficient data to generate a sleep log. 1 = Insufficient heart rate data. 2 = Sleep period was too short (less than 3 hours). 3 = Server-side issue.",
                        "title": "infoCode"
                      },
                      "isMainSleep": {
                        "type": "boolean",
                        "description": "Boolean",
                        "title": "isMainSleep",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "levels": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dateTime": {
                                  "type": "string",
                                  "description": "dateTime"
                                },
                                "level": {
                                  "type": "string",
                                  "description": "level"
                                },
                                "seconds": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "seconds"
                                }
                              }
                            },
                            "description": "data"
                          },
                          "shortData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dateTime": {
                                  "type": "string",
                                  "description": "dateTime"
                                },
                                "level": {
                                  "type": "string",
                                  "description": "level"
                                },
                                "seconds": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "seconds"
                                }
                              }
                            },
                            "description": "shortData"
                          },
                          "summary": {
                            "type": "object",
                            "properties": {
                              "deep": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  },
                                  "thirtyDayAvgMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "thirtyDayAvgMinutes"
                                  }
                                },
                                "description": "deep"
                              },
                              "light": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  },
                                  "thirtyDayAvgMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "thirtyDayAvgMinutes"
                                  }
                                },
                                "description": "light"
                              },
                              "rem": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  },
                                  "thirtyDayAvgMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "thirtyDayAvgMinutes"
                                  }
                                },
                                "description": "rem"
                              },
                              "wake": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  },
                                  "thirtyDayAvgMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "thirtyDayAvgMinutes"
                                  }
                                },
                                "description": "wake"
                              }
                            },
                            "description": "summary"
                          }
                        },
                        "description": "levels"
                      },
                      "logId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Sleep log ID.",
                        "title": "logId"
                      },
                      "minutesAfterWakeup": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of minutes after the user woke up.",
                        "title": "minutesAfterWakeup"
                      },
                      "minutesAsleep": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of minutes the user was asleep.",
                        "title": "minutesAsleep"
                      },
                      "minutesAwake": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total sum of \u0022wake\u0022 minutes only. It does not include before falling asleep or after waking up.",
                        "title": "minutesAwake"
                      },
                      "minutesToFallAsleep": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of minutes before the user falls asleep. This value is generally 0 for autosleep created sleep logs.",
                        "title": "minutesToFallAsleep"
                      },
                      "logType": {
                        "type": "string",
                        "description": "auto_detected | manual",
                        "title": "logType"
                      },
                      "startTime": {
                        "type": "string",
                        "description": "Time the sleep log begins.",
                        "title": "startTime"
                      },
                      "timeInBed": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Total number of minutes the user was in bed.",
                        "title": "timeInBed"
                      },
                      "type": {
                        "type": "string",
                        "description": "classic | stages",
                        "title": "type"
                      }
                    }
                  },
                  "description": "sleep"
                },
                "summary": {
                  "type": "object",
                  "properties": {
                    "stages": {
                      "type": "object",
                      "properties": {
                        "deep": {
                          "type": "integer",
                          "format": "int32",
                          "description": "deep"
                        },
                        "light": {
                          "type": "integer",
                          "format": "int32",
                          "description": "light"
                        },
                        "rem": {
                          "type": "integer",
                          "format": "int32",
                          "description": "rem"
                        },
                        "wake": {
                          "type": "integer",
                          "format": "int32",
                          "description": "wake"
                        }
                      },
                      "description": "stages"
                    },
                    "totalMinutesAsleep": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of minutes the user was asleep across all sleep records in the sleep log.",
                      "title": "totalMinutesAsleep"
                    },
                    "totalSleepRecords": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of sleep records within the sleep log.",
                      "title": "totalSleepRecords"
                    },
                    "totalTimeInBed": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of minutes the user was in bed across all records in the sleep log.",
                      "title": "totalTimeInBed"
                    }
                  },
                  "description": "summary"
                }
              }
            }
          }
        },
        "summary": "Get Sleep Log by Date",
        "operationId": "GetSleepLogbyDate",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Date",
            "description": "yyyy-mm-dd",
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "Returns a list of a user\u0027s sleep log entries for a given date"
      }
    },
    "/1.2/user/{user-id}/sleep/date/{startDate}/{endDate}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "sleep": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dateOfSleep": {
                        "type": "string",
                        "description": "The date the sleep log ended.",
                        "title": "dateOfSleep"
                      },
                      "duration": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Length of the sleep in milliseconds.",
                        "title": "duration"
                      },
                      "efficiency": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Calculated sleep efficiency score. This is not the sleep score available in the mobile application.",
                        "title": "efficiency"
                      },
                      "endTime": {
                        "type": "string",
                        "description": "Time the sleep log ended.",
                        "title": "endTime"
                      },
                      "infoCode": {
                        "type": "integer",
                        "format": "int32",
                        "description": "An integer value representing the quality of data collected within the sleep log. 0 = Sufficient data to generate a sleep log. 1 = Insufficient heart rate data. 2 = Sleep period was too short (less than 3 hours). 3 = Server-side issue.",
                        "title": "infoCode"
                      },
                      "isMainSleep": {
                        "type": "boolean",
                        "description": "Boolean",
                        "title": "isMainSleep",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "levels": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dateTime": {
                                  "type": "string",
                                  "description": "dateTime"
                                },
                                "level": {
                                  "type": "string",
                                  "description": "level"
                                },
                                "seconds": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "seconds"
                                }
                              }
                            },
                            "description": "data"
                          },
                          "summary": {
                            "type": "object",
                            "properties": {
                              "asleep": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  }
                                },
                                "description": "asleep"
                              },
                              "awake": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  }
                                },
                                "description": "awake"
                              },
                              "restless": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  }
                                },
                                "description": "restless"
                              },
                              "deep": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  },
                                  "thirtyDayAvgMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "thirtyDayAvgMinutes"
                                  }
                                },
                                "description": "deep"
                              },
                              "light": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  },
                                  "thirtyDayAvgMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "thirtyDayAvgMinutes"
                                  }
                                },
                                "description": "light"
                              },
                              "rem": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  },
                                  "thirtyDayAvgMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "thirtyDayAvgMinutes"
                                  }
                                },
                                "description": "rem"
                              },
                              "wake": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  },
                                  "thirtyDayAvgMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "thirtyDayAvgMinutes"
                                  }
                                },
                                "description": "wake"
                              }
                            },
                            "description": "summary"
                          },
                          "shortData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dateTime": {
                                  "type": "string",
                                  "description": "dateTime"
                                },
                                "level": {
                                  "type": "string",
                                  "description": "level"
                                },
                                "seconds": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "seconds"
                                }
                              }
                            },
                            "description": "shortData"
                          }
                        },
                        "description": "levels"
                      },
                      "logId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Sleep log ID.",
                        "title": "logId"
                      },
                      "minutesAfterWakeup": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of minutes after the user woke up.",
                        "title": "minutesAfterWakeup"
                      },
                      "minutesAsleep": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of minutes the user was asleep.",
                        "title": "minutesAsleep"
                      },
                      "minutesAwake": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total sum of \u0022wake\u0022 minutes only. It does not include before falling asleep or after waking up.",
                        "title": "minutesAwake"
                      },
                      "minutesToFallAsleep": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total number of minutes before the user falls asleep. This value is generally 0 for autosleep created sleep logs.",
                        "title": "minutesToFallAsleep"
                      },
                      "logType": {
                        "type": "string",
                        "description": "auto_detected | manual",
                        "title": "logType"
                      },
                      "startTime": {
                        "type": "string",
                        "description": "Time the sleep log begins",
                        "title": "startTime"
                      },
                      "timeInBed": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Total number of minutes the user was in bed",
                        "title": "timeInBed"
                      },
                      "type": {
                        "type": "string",
                        "description": "classic | stages",
                        "title": "type"
                      }
                    }
                  },
                  "description": "sleep"
                }
              }
            }
          }
        },
        "summary": "Get Sleep Log by Date Range",
        "description": "Returns a list of a user\u0027s sleep log entries for a date range.",
        "operationId": "GetSleepLogbyDateRange",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "startDate",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The date for the first sleep log to be returned (yyyy-mm-dd)",
            "x-ms-summary": "Start Date",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "endDate",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The date for the last sleep log to be returned (yyyy-mm-dd)",
            "x-ms-summary": "End Date",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/1.2/user/{user-id}/sleep/list.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "afterDate": {
                      "type": "string",
                      "description": "afterDate"
                    },
                    "limit": {
                      "type": "integer",
                      "format": "int32",
                      "description": "limit"
                    },
                    "next": {
                      "type": "string",
                      "description": "next"
                    },
                    "offset": {
                      "type": "integer",
                      "format": "int32",
                      "description": "offset"
                    },
                    "previous": {
                      "type": "string",
                      "description": "previous"
                    },
                    "sort": {
                      "type": "string",
                      "description": "sort"
                    }
                  },
                  "description": "pagination"
                },
                "sleep": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dateOfSleep": {
                        "type": "string",
                        "description": "",
                        "title": "dateOfSleep"
                      },
                      "duration": {
                        "type": "integer",
                        "format": "int32",
                        "description": "duration"
                      },
                      "efficiency": {
                        "type": "integer",
                        "format": "int32",
                        "description": "efficiency"
                      },
                      "endTime": {
                        "type": "string",
                        "description": "endTime"
                      },
                      "infoCode": {
                        "type": "integer",
                        "format": "int32",
                        "description": "infoCode"
                      },
                      "isMainSleep": {
                        "type": "boolean",
                        "description": "isMainSleep"
                      },
                      "levels": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dateTime": {
                                  "type": "string",
                                  "description": "dateTime"
                                },
                                "level": {
                                  "type": "string",
                                  "description": "level"
                                },
                                "seconds": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "seconds"
                                }
                              }
                            },
                            "description": "data"
                          },
                          "shortData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dateTime": {
                                  "type": "string",
                                  "description": "dateTime"
                                },
                                "level": {
                                  "type": "string",
                                  "description": "level"
                                },
                                "seconds": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "seconds"
                                }
                              }
                            },
                            "description": "shortData"
                          },
                          "summary": {
                            "type": "object",
                            "properties": {
                              "deep": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  },
                                  "thirtyDayAvgMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "thirtyDayAvgMinutes"
                                  }
                                },
                                "description": "deep"
                              },
                              "light": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  },
                                  "thirtyDayAvgMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "thirtyDayAvgMinutes"
                                  }
                                },
                                "description": "light"
                              },
                              "rem": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  },
                                  "thirtyDayAvgMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "thirtyDayAvgMinutes"
                                  }
                                },
                                "description": "rem"
                              },
                              "wake": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "count"
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minutes"
                                  },
                                  "thirtyDayAvgMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "thirtyDayAvgMinutes"
                                  }
                                },
                                "description": "wake"
                              }
                            },
                            "description": "summary"
                          }
                        },
                        "description": "levels"
                      },
                      "logId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "logId"
                      },
                      "logType": {
                        "type": "string",
                        "description": "logType"
                      },
                      "minutesAfterWakeup": {
                        "type": "integer",
                        "format": "int32",
                        "description": "minutesAfterWakeup"
                      },
                      "minutesAsleep": {
                        "type": "integer",
                        "format": "int32",
                        "description": "minutesAsleep"
                      },
                      "minutesAwake": {
                        "type": "integer",
                        "format": "int32",
                        "description": "minutesAwake"
                      },
                      "minutesToFallAsleep": {
                        "type": "integer",
                        "format": "int32",
                        "description": "minutesToFallAsleep"
                      },
                      "startTime": {
                        "type": "string",
                        "description": "startTime"
                      },
                      "timeInBed": {
                        "type": "integer",
                        "format": "int32",
                        "description": "timeInBed"
                      },
                      "type": {
                        "type": "string",
                        "description": "type"
                      }
                    }
                  },
                  "description": "sleep"
                }
              }
            }
          }
        },
        "summary": "Get Sleep Log List",
        "description": "Returns a list of a user\u0027s sleep log entries before or after a given date",
        "operationId": "GetSleepLogList",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "afterDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "After the date where user\u0027s sleep log is returned (yyyy-mm-dd)",
            "x-ms-summary": "After Date"
          },
          {
            "name": "beforeDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Before the date where user\u0027s sleep log is returned (yyyy-mm-dd)",
            "x-ms-summary": "Before Date"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ascending or descending",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-summary": "Sort"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "offset value set to 0",
            "default": 0,
            "x-ms-visibility": "internal",
            "x-ms-summary": "Offset"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "description": "The number of sleep logs to be returned. (max 100)",
            "x-ms-summary": "Limit"
          }
        ]
      }
    },
    "/1/user/{user-id}/activities/goals/{period}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "goals": {
                  "type": "object",
                  "properties": {
                    "activeMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Daily active minutes goal. A value is not returned for weekly goals.",
                      "title": "activeMinutes"
                    },
                    "activeZoneMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Daily or weekly active zone minutes goal.",
                      "title": "activeZoneMinutes"
                    },
                    "caloriesOut": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Daily calories burned goal. A value is not returned for weekly goals.",
                      "title": "caloriesOut"
                    },
                    "distance": {
                      "type": "number",
                      "format": "float",
                      "description": "Daily or weekly distance goal.",
                      "title": "distance"
                    },
                    "floors": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Daily or weekly floors climbed goal.",
                      "title": "floors"
                    },
                    "steps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Daily or weekly steps taken goal.",
                      "title": "steps"
                    }
                  },
                  "description": "goals"
                }
              }
            }
          }
        },
        "summary": "Get Activity Goals",
        "description": "Retrieves a user\u0027s current daily or weekly activity goals.",
        "operationId": "GetActivityGoals",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "daily| weekly",
            "x-ms-summary": "Period",
            "enum": [
              "daily",
              "weekly"
            ],
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/1/user/{user-id}/activities/list.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "activities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "activeDuration": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time (milliseconds) within each activityLevel.",
                        "title": "activeDuration"
                      },
                      "activityLevel": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "minutes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "minutes"
                            },
                            "name": {
                              "type": "string",
                              "description": "name"
                            }
                          }
                        },
                        "description": "activityLevel"
                      },
                      "activityName": {
                        "type": "string",
                        "description": "Name of the recorded exercise.",
                        "title": "activityName"
                      },
                      "activityTypeId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The activityName\u0027s identifier number.",
                        "title": "activityTypeId"
                      },
                      "calories": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of calories burned during the exercise.",
                        "title": "calories"
                      },
                      "caloriesLink": {
                        "type": "string",
                        "description": "Web API endpoint to call to get the specific calories burned for the named exercise.",
                        "title": "caloriesLink"
                      },
                      "duration": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The length in time (milliseconds) after the exercise was edited. If the exercise was not edited, the duration = originalDuration. This value will contain pauses during the exercise.",
                        "title": "duration"
                      },
                      "elevationGain": {
                        "type": "number",
                        "format": "float",
                        "description": "Elevation gained during the exercise.",
                        "title": "elevationGain"
                      },
                      "lastModified": {
                        "type": "string",
                        "description": "The timestamp the exercise was last modified.",
                        "title": "lastModified"
                      },
                      "logId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The activity log identifier for the exercise.",
                        "title": "logId"
                      },
                      "logType": {
                        "type": "string",
                        "description": "auto_detected | manual | mobile_run | tracker | the name of the 3rd party application",
                        "title": "logType"
                      },
                      "manualValuesSpecified": {
                        "type": "object",
                        "properties": {
                          "calories": {
                            "type": "boolean",
                            "description": "A boolean value stating if calories was provided when recording the exercise.",
                            "title": "calories",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "distance": {
                            "type": "boolean",
                            "description": "A boolean value stating if distance was provided when recording the exercise.",
                            "title": "distance",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "steps": {
                            "type": "boolean",
                            "description": "A boolean value stating if steps was provided when recording the exercise.",
                            "title": "steps",
                            "enum": [
                              true,
                              false
                            ]
                          }
                        },
                        "description": "manualValuesSpecified"
                      },
                      "originalDuration": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The initial length in time (milliseconds) that the exercise was recorded. This value will contain pauses during the exercise.",
                        "title": "originalDuration"
                      },
                      "originalStartTime": {
                        "type": "string",
                        "description": "The initial start datetime that the exercise was recorded.",
                        "title": "originalStartTime"
                      },
                      "startTime": {
                        "type": "string",
                        "description": "The start datetime after the exercise was edited. If the exercise was not edited, the startTime = originalStartTime.",
                        "title": "startTime"
                      },
                      "steps": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of steps taken during the exercise.",
                        "title": "steps"
                      },
                      "tcxLink": {
                        "type": "string",
                        "description": "URL to download the TCX file.",
                        "title": "tcxLink"
                      }
                    }
                  },
                  "description": "activities"
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "afterDate": {
                      "type": "string",
                      "description": "afterDate"
                    },
                    "limit": {
                      "type": "integer",
                      "format": "int32",
                      "description": "limit"
                    },
                    "next": {
                      "type": "string",
                      "description": "next"
                    },
                    "offset": {
                      "type": "integer",
                      "format": "int32",
                      "description": "offset"
                    },
                    "previous": {
                      "type": "string",
                      "description": "previous"
                    },
                    "sort": {
                      "type": "string",
                      "description": "sort"
                    }
                  },
                  "description": "pagination"
                }
              }
            }
          }
        },
        "summary": "Get Activity Log List",
        "description": "Retrieves a list of a user\u0027s activity log entries before or after a given day.",
        "operationId": "GetActivityLogList",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "afterDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The after date (yyyy-mm-dd)",
            "x-ms-summary": "After Date"
          },
          {
            "name": "beforeDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The before date (yyyy-mm-dd)",
            "x-ms-summary": "Before Date"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort order of entries by date.",
            "x-ms-summary": "Sort"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "x-ms-visibility": "internal",
            "x-ms-summary": "offset"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "description": "The number of entries returned.",
            "x-ms-summary": "Limit"
          }
        ]
      }
    },
    "/1/user/{user-id}/activities/{log-id}.tcx": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Activity TCX",
        "description": "The Training Center XML (TCX) is a data exchange format that contains GPS, heart rate, and lap data. This endpoint retrieves the details of a user\u0027s location using GPS and heart rate data during a logged exercise.",
        "operationId": "GetActivityTCX",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the use",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "log-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The activity\u0027s log ID.",
            "x-ms-summary": "Log Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "includePartialTCX",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Includes the TCX points when the GPS data is not available.",
            "x-ms-summary": "Partial TCX"
          }
        ]
      }
    },
    "/1/user/{user-id}/activities/{activity-id}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "activity": {
                  "type": "object",
                  "properties": {
                    "accessLevel": {
                      "type": "string",
                      "description": "PUBLIC | PRIVATE",
                      "title": "accessLevel"
                    },
                    "activityLevels": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Numerical value representing the corresponding activity level.",
                            "title": "id"
                          },
                          "maxSpeedMPH": {
                            "type": "number",
                            "format": "float",
                            "description": "Maximum speed in MPH. Value: -1 means not applicable.",
                            "title": "maxSpeedMPH"
                          },
                          "mets": {
                            "type": "integer",
                            "format": "int32",
                            "description": "METs score for the activity id.",
                            "title": "mets"
                          },
                          "minSpeedMPH": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Minimum speed in MPH. Value: -1 means not applicable.",
                            "title": "minSpeedMPH"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the activity level.",
                            "title": "name"
                          }
                        }
                      },
                      "description": "activityLevels"
                    },
                    "hasSpeed": {
                      "type": "boolean",
                      "description": "true | false",
                      "title": "hasSpeed",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Numerical value representing the corresponding activity.",
                      "title": "id"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the activity or exercise.",
                      "title": "name"
                    }
                  },
                  "description": "activity"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "activity-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Activity Id",
            "x-ms-summary": "Activity Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get Activity Type",
        "description": "Retrieves the details for a single activity from the Fitbit activities database in the format requested. If available, activity level details will display.",
        "operationId": "GetAcitivityType"
      }
    },
    "/1/activities.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "activities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accessLevel": {
                              "type": "string",
                              "description": "accessLevel"
                            },
                            "activityLevels": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "id"
                                  },
                                  "maxSpeedMPH": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "maxSpeedMPH"
                                  },
                                  "mets": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "mets"
                                  },
                                  "minSpeedMPH": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "minSpeedMPH"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "name"
                                  }
                                }
                              },
                              "description": "activityLevels"
                            },
                            "hasSpeed": {
                              "type": "boolean",
                              "description": "hasSpeed"
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "id"
                            },
                            "name": {
                              "type": "string",
                              "description": "name"
                            },
                            "mets": {
                              "type": "number",
                              "format": "float",
                              "description": "mets"
                            }
                          }
                        },
                        "description": "activities"
                      }
                    }
                  },
                  "description": "categories"
                }
              }
            }
          }
        },
        "summary": "Get All Activity Types",
        "description": "Retrieves a list of all valid Fitbit public activities and the private, user-created activities from the Fitbit activities database in the format requested. If available, activity level details will display.",
        "operationId": "GetAllActivityTypes",
        "parameters": []
      }
    },
    "/1/user/{user-id}/activities/date/{date}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "activities": {
                  "type": "array",
                  "items": {},
                  "description": "activities"
                },
                "goals": {
                  "type": "object",
                  "properties": {
                    "activeMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "activeMinutes"
                    },
                    "caloriesOut": {
                      "type": "integer",
                      "format": "int32",
                      "description": "caloriesOut"
                    },
                    "distance": {
                      "type": "number",
                      "format": "float",
                      "description": "distance"
                    },
                    "floors": {
                      "type": "integer",
                      "format": "int32",
                      "description": "floors"
                    },
                    "steps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "steps"
                    }
                  },
                  "description": "goals"
                },
                "summary": {
                  "type": "object",
                  "properties": {
                    "activeScore": {
                      "type": "integer",
                      "format": "int32",
                      "description": "activeScore"
                    },
                    "activityCalories": {
                      "type": "integer",
                      "format": "int32",
                      "description": "activityCalories"
                    },
                    "calorieEstimationMu": {
                      "type": "integer",
                      "format": "int32",
                      "description": "calorieEstimationMu"
                    },
                    "caloriesBMR": {
                      "type": "integer",
                      "format": "int32",
                      "description": "caloriesBMR"
                    },
                    "caloriesOut": {
                      "type": "integer",
                      "format": "int32",
                      "description": "caloriesOut"
                    },
                    "caloriesOutUnestimated": {
                      "type": "integer",
                      "format": "int32",
                      "description": "caloriesOutUnestimated"
                    },
                    "customHeartRateZones": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "caloriesOut": {
                            "type": "integer",
                            "format": "int32",
                            "description": "caloriesOut"
                          },
                          "max": {
                            "type": "integer",
                            "format": "int32",
                            "description": "max"
                          },
                          "min": {
                            "type": "integer",
                            "format": "int32",
                            "description": "min"
                          },
                          "minutes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "minutes"
                          },
                          "name": {
                            "type": "string",
                            "description": "name"
                          }
                        }
                      },
                      "description": "customHeartRateZones"
                    },
                    "distances": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "activity": {
                            "type": "string",
                            "description": "\u003Cactivity name\u003E | total | tracker | loggedActivities | veryActive | moderatelyActive | lightlyActive | sedentaryActive",
                            "title": "activity"
                          },
                          "distance": {
                            "type": "integer",
                            "format": "int32",
                            "description": "For the specified resource, the distance traveled for the day displayed in the units defined by the Accept-Language header.",
                            "title": "distance"
                          }
                        }
                      },
                      "description": "distances"
                    },
                    "elevation": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The elevation traveled for the day displayed in the units defined by the Accept-Language header.",
                      "title": "elevation"
                    },
                    "fairlyActiveMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total minutes the user was fairly/moderately active.",
                      "title": "fairlyActiveMinutes"
                    },
                    "floors": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The equivalent floors climbed for the day displayed in the units defined by the Accept-Language header.",
                      "title": "floors"
                    },
                    "heartRateZones": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "caloriesOut": {
                            "type": "integer",
                            "format": "int32",
                            "description": "caloriesOut"
                          },
                          "max": {
                            "type": "integer",
                            "format": "int32",
                            "description": "max"
                          },
                          "min": {
                            "type": "integer",
                            "format": "int32",
                            "description": "min"
                          },
                          "minutes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "minutes"
                          },
                          "name": {
                            "type": "string",
                            "description": "Heart Rate scope is required to see this value. Out of Range | Fat Burn | Cardio | Peak",
                            "title": "name"
                          }
                        }
                      },
                      "description": "heartRateZones"
                    },
                    "lightlyActiveMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total minutes the user was lightly active.",
                      "title": "lightlyActiveMinutes"
                    },
                    "marginalCalories": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total marginal estimated calories burned for the day.",
                      "title": "marginalCalories"
                    },
                    "restingHeartRate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The Heart Rate scope is required to see this value.",
                      "title": "restingHeartRate"
                    },
                    "sedentaryMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total minutes the user was sedentary.",
                      "title": "sedentaryMinutes"
                    },
                    "steps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total steps taken for the day.",
                      "title": "steps"
                    },
                    "useEstimation": {
                      "type": "boolean",
                      "description": "Boolean value stating if estimations are used in calculations.",
                      "title": "useEstimation",
                      "enum": [
                        
                        true,
                        false
                      ]
                    },
                    "veryActiveMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total minutes the user was very active.",
                      "title": "veryActiveMinutes"
                    }
                  },
                  "description": "summary"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Date",
            "x-ms-summary": "Date",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get Daily Activity Summary",
        "description": "Retrieves a summary and list of a user\u2019s activities and activity log entries for a given day.",
        "operationId": "GetDailyActivitySummary"
      }
    },
    "/1/user/{user-id}/activities/favorite.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activityId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The recorded activity\u2019s identifier number.",
                    "title": "activityId"
                  },
                  "description": {
                    "type": "string",
                    "description": "Additional information about the recorded activity.",
                    "title": "description"
                  },
                  "mets": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The metabolic equivalent (METs) of the activity performed.",
                    "title": "mets"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the recorded activity.",
                    "title": "name"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get Favorite Activities",
        "description": "Retrieves a list of a user\u0027s favorite activities.",
        "operationId": "GetFavoriteActivities"
      }
    },
    "/1/user/{user-id}activities/frequent.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activityId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The recorded activity\u2019s identifier number.",
                    "title": "activityId"
                  },
                  "calories": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of calories burned associated with the activity.",
                    "title": "calories"
                  },
                  "description": {
                    "type": "string",
                    "description": "Additional information about the recorded activity.",
                    "title": "description"
                  },
                  "distance": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Distance traveled associated with the recorded activity.",
                    "title": "distance"
                  },
                  "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The length in time (milliseconds) after the exercise was edited. This value will contain pauses during the exercise.",
                    "title": "duration"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the recorded activity.",
                    "title": "name"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get Frequent Activities",
        "description": "Retrieves a list of a user\u0027s frequent activities.",
        "operationId": "GetFrequentActivities"
      }
    },
    "/1/user/{user-id}/activities.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "best": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "object",
                      "properties": {
                        "distance": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "description": "date"
                            },
                            "value": {
                              "type": "number",
                              "format": "float",
                              "description": "value"
                            }
                          },
                          "description": "distance"
                        },
                        "floors": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "description": "date"
                            },
                            "value": {
                              "type": "number",
                              "format": "float",
                              "description": "value"
                            }
                          },
                          "description": "floors"
                        },
                        "steps": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "description": "date"
                            },
                            "value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "value"
                            }
                          },
                          "description": "steps"
                        }
                      },
                      "description": "total"
                    },
                    "tracker": {
                      "type": "object",
                      "properties": {
                        "distance": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "description": "date"
                            },
                            "value": {
                              "type": "number",
                              "format": "float",
                              "description": "value"
                            }
                          },
                          "description": "distance"
                        },
                        "floors": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "description": "date"
                            },
                            "value": {
                              "type": "number",
                              "format": "float",
                              "description": "value"
                            }
                          },
                          "description": "floors"
                        },
                        "steps": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "description": "date"
                            },
                            "value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "value"
                            }
                          },
                          "description": "steps"
                        }
                      },
                      "description": "tracker"
                    }
                  },
                  "description": "best"
                },
                "lifetime": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "object",
                      "properties": {
                        "activeScore": {
                          "type": "integer",
                          "format": "int32",
                          "description": "activeScore"
                        },
                        "caloriesOut": {
                          "type": "integer",
                          "format": "int32",
                          "description": "caloriesOut"
                        },
                        "distance": {
                          "type": "number",
                          "format": "float",
                          "description": "distance"
                        },
                        "floors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "floors"
                        },
                        "steps": {
                          "type": "integer",
                          "format": "int32",
                          "description": "steps"
                        }
                      },
                      "description": "total"
                    },
                    "tracker": {
                      "type": "object",
                      "properties": {
                        "activeScore": {
                          "type": "integer",
                          "format": "int32",
                          "description": "activeScore"
                        },
                        "caloriesOut": {
                          "type": "integer",
                          "format": "int32",
                          "description": "caloriesOut"
                        },
                        "distance": {
                          "type": "number",
                          "format": "float",
                          "description": "distance"
                        },
                        "floors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "floors"
                        },
                        "steps": {
                          "type": "integer",
                          "format": "int32",
                          "description": "steps"
                        }
                      },
                      "description": "tracker"
                    }
                  },
                  "description": "lifetime"
                }
              }
            }
          }
        },
        "summary": "Get Lifetime Stats",
        "description": "Retrieves the user\u0027s activity statistics.",
        "operationId": "GetLifetimeStats",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/1/user/{user-id}/activities/recent.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activityId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The numerical ID for the activity or exercise.",
                    "title": "activityId"
                  },
                  "calories": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of calories burned during the recorded activity.",
                    "title": "calories"
                  },
                  "description": {
                    "type": "string",
                    "description": "Information, if available, about the activity or exercise.",
                    "title": "description"
                  },
                  "distance": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Distance traveled during the recorded activity.",
                    "title": "distance"
                  },
                  "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Amount of time (milliseconds) to complete the recorded activity.",
                    "title": "duration"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the activity or exercise.",
                    "title": "name"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get Recent Activity Types",
        "description": "Retrieves a list of a user\u0027s recent activities types logged with some details of the last activity log of that type.",
        "operationId": "GetRecentActivityTypes"
      }
    },
    "/1/user/{user-id}/activities/{resource}/date/{date}/{period}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "activities-steps": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dateTime": {
                        "type": "string",
                        "description": "dateTime"
                      },
                      "value": {
                        "type": "string",
                        "description": "value"
                      }
                    }
                  },
                  "description": "activities-steps"
                }
              }
            }
          }
        },
        "summary": "Get Activity Time Series by Date",
        "description": "Retrieves the activity data for a given resource over a period of time by specifying a date and time period. The response will include only the daily summary values.",
        "operationId": "GetActivityTimeSeriesbyDate",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "steps",
            "description": "The resource of the data to be returned.",
            "x-ms-summary": "Resource",
            "enum": [
              "activityCalories",
              "calories",
              "distance",
              "elevation",
              "floors",
              "minutesSedentary",
              "minutesLightlyActive",
              "minutesFairlyActive",
              "minutesVeryActive",
              "steps"
            ],
            "x-ms-url-encoding": "single"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The end date of the period specified in the format yyyy-mm-dd",
            "x-ms-summary": "Date",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "7d",
            "description": "The range for which data will be returned.",
            "x-ms-summary": "Period",
            "enum": [
              "1d",
              "7d",
              "30d",
              "1w",
              "1m",
              "3m",
              "6m",
              "1y"
            ],
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/1/user/{user-id}/body/log/{goal-type}/goal.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "goal": {
                  "type": "object",
                  "properties": {
                    "goalType": {
                      "type": "string",
                      "description": "",
                      "title": "goalType"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "The goal start date.",
                      "title": "startDate"
                    },
                    "startWeight": {
                      "type": "number",
                      "format": "float",
                      "description": "User\u0027s weight when goal was established.",
                      "title": "startWeight"
                    },
                    "weight": {
                      "type": "number",
                      "format": "float",
                      "description": "The weight goal to achieve.",
                      "title": "weight"
                    },
                    "weightThreshold": {
                      "type": "number",
                      "format": "float",
                      "description": "The recommended amount of weight to lose each week to achieve and maintain goal.",
                      "title": "weightThreshold"
                    }
                  },
                  "description": "goal"
                }
              }
            }
          }
        },
        "summary": "Get Body Goals",
        "description": "Retrieves a user\u0027s body fat and weight goals.",
        "operationId": "GetBodyGoals",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "goal-type",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "weight",
            "description": "Goal type",
            "x-ms-summary": "Goal type",
            "enum": [
              "weight",
              "fat"
            ],
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/1/user/{user-id}/body/log/fat/date/{date}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "fat": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "description": "The date the body fat log was recorded.",
                        "title": "date"
                      },
                      "fat": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The body fat percentage.",
                        "title": "fat"
                      },
                      "logId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The body fat log Id.",
                        "title": "logId"
                      },
                      "source": {
                        "type": "string",
                        "description": "The location where the body fat data originated.",
                        "title": "source"
                      },
                      "time": {
                        "type": "string",
                        "description": "The timestamp when the body fat log was recorded.",
                        "title": "time"
                      }
                    }
                  },
                  "description": "fat"
                }
              }
            }
          }
        },
        "summary": "Get Body Fat Log",
        "description": "Retrieves a list of all user\u0027s body fat log entries for a given date.",
        "operationId": "GetBodyFattLog",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The date in the format yyyy-mm-dd.",
            "x-ms-summary": "Date",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/1/user/{user-id}/body/log/weight/date/{date}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "weight": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bmi": {
                        "type": "number",
                        "format": "float",
                        "description": "Calculated BMI in the format X.XX",
                        "title": "bmi"
                      },
                      "date": {
                        "type": "string",
                        "description": "Log entry date in the format yyyy-mm-dd.",
                        "title": "date"
                      },
                      "fat": {
                        "type": "integer",
                        "format": "int32",
                        "description": "",
                        "title": "fat"
                      },
                      "logId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Weight Log IDs are unique to the user, but not globally unique.",
                        "title": "logId"
                      },
                      "source": {
                        "type": "string",
                        "description": "source"
                      },
                      "time": {
                        "type": "string",
                        "description": "Time of the measurement; hours and minutes in the format HH:mm:ss, set to the last second of the day if not provided.",
                        "title": "time"
                      },
                      "weight": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Weight in the format X.XX, in the unit system that corresponds to the Accept-Language header provided or if not provided in metric.",
                        "title": "weight"
                      }
                    }
                  },
                  "description": "weight"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The date in the format yyyy-mm-dd",
            "x-ms-summary": "Date",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get Weight Log",
        "description": "Retrieves a list of all user\u0027s weight log entries for a given date.",
        "operationId": "GetWeightLog"
      }
    },
    "/1/user/{user-id}/body/{resource}/date/{date}/{period}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "body-weight": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dateTime": {
                        "type": "string",
                        "description": "dateTime"
                      },
                      "value": {
                        "type": "string",
                        "description": "value"
                      }
                    }
                  },
                  "description": "body-weight"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "fat",
            "description": "The body resource to be returned.",
            "x-ms-summary": "Resource",
            "enum": [
              "bmi",
              "fat",
              "weight"
            ],
            "x-ms-url-encoding": "single"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The end date of the period specified in the format yyyy-mm-dd or today.",
            "x-ms-summary": "Date",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "7d",
            "enum": [
              "1d",
              "7d",
              "30d",
              "1w",
              "1m",
              "3m",
              "6m",
              "1y"
            ],
            "description": "The range for which data will be returned.",
            "x-ms-summary": "Period",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get Body Time Series by Date",
        "description": "Retrieves a list of all user\u0027s bmi, body fat, or weight for a given period.",
        "operationId": "GetBodyTimeSeriesbyDate"
      }
    },
    "/1/user/{user-id}/body/log/fat/date/{date}/{period}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "fat": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "description": "The date the body fat log was recorded.",
                        "title": "date"
                      },
                      "fat": {
                        "type": "number",
                        "format": "float",
                        "description": "The body fat percentage.",
                        "title": "fat"
                      },
                      "logId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The body fat log Id.",
                        "title": "logId"
                      },
                      "source": {
                        "type": "string",
                        "description": "The location where the body fat data originated. See \u0022source\u0022 values for more information.",
                        "title": "source"
                      },
                      "time": {
                        "type": "string",
                        "description": "The timestamp when the body fat log was recorded.",
                        "title": "time"
                      }
                    }
                  },
                  "description": "fat"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Date",
            "description": "The end date of the period specified in the format yyyy-mm-dd or today.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "7d",
            "enum": [
              "1d",
              "7d",
              "30d",
              "1w",
              "1m",
              "3m",
              "6m",
              "1y"
            ],
            "description": "The range for which data will be returned.",
            "x-ms-summary": "Period",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get Body Fat Time Series by Date",
        "description": "Retrieves a list of all user\u0027s body fat log entries for a given period.",
        "operationId": "GetBodyFatTimerSeriesbyDate"
      }
    },
    "/1/user/{user-id}/body/log/weight/date/{date}/{period}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "weight": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bmi": {
                        "type": "number",
                        "format": "float",
                        "description": "Calculated BMI in the format X.XX.",
                        "title": "bmi"
                      },
                      "date": {
                        "type": "string",
                        "description": "Log entry date in the format yyyy-mm-dd.",
                        "title": "date"
                      },
                      "fat": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The body fat percentage.",
                        "title": "fat"
                      },
                      "logId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The weight log IDs. It\u0027s unique to the user, but not globally unique.",
                        "title": "logId"
                      },
                      "source": {
                        "type": "string",
                        "description": "The source of the weight log.",
                        "title": "source"
                      },
                      "time": {
                        "type": "string",
                        "description": "Time of the measurement; hours and minutes in the format HH:mm:ss, set to the last second of the day if not provided.",
                        "title": "time"
                      },
                      "weight": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Weight in the format X.XX, in the unit system that corresponds to the Accept-Language header provided or if not provided in metric.",
                        "title": "weight"
                      }
                    }
                  },
                  "description": "weight"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The end date of the period specified in the format yyyy-mm-dd or today.",
            "x-ms-summary": "Date",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "7d",
            "enum": [
              "1d",
              "7d",
              "30d",
              "1w",
              "1m",
              "3m",
              "6m",
              "1y"
            ],
            "description": "The range for which data will be returned.",
            "x-ms-summary": "Period",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get Weight Time Series by Date",
        "description": "Retrieves a list of all user\u0027s weight log entries for a given period.",
        "operationId": "GetWeightTimeSeriesbyDate"
      }
    },
    "/1/user/{user-id}/br/date/{date}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "br": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "object",
                        "properties": {
                          "breathingRate": {
                            "type": "number",
                            "format": "float",
                            "description": "The average number of breaths taken per minute.",
                            "title": "breathingRate"
                          }
                        },
                        "description": "value"
                      },
                      "dateTime": {
                        "type": "string",
                        "description": "The sleep log date specified in the format YYYY-MM-DD.",
                        "title": "dateTime"
                      }
                    }
                  },
                  "description": "br"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The date in the format yyyy-mm-dd or today.",
            "x-ms-summary": "Date",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get Breathing Rate Summary by Date",
        "description": "This endpoint returns average breathing rate data for a single date. Breathing Rate data applies specifically to a user\u2019s \u201Cmain sleep,\u201D which is the longest single period of time during which they were asleep on a given date.",
        "operationId": "GetBreathingRateSummarybyDate"
      }
    },
    "/1/user/{user-id}/cardioscore/date/{date}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "cardioScore": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dateTime": {
                        "type": "string",
                        "description": "The date specified in the format YYYY-MM-DD.",
                        "title": "dateTime"
                      },
                      "value": {
                        "type": "object",
                        "properties": {
                          "vo2Max": {
                            "type": "string",
                            "description": "The displayable value of VO2 Max in mL/kg/min",
                            "title": "vo2Max"
                          }
                        },
                        "description": "value"
                      }
                    }
                  },
                  "description": "cardioScore"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The date in the format yyyy-mm-dd or today.",
            "x-ms-summary": "Date",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get VO2 Max Summary by Date",
        "description": "Returns the Cardio Fitness Score (also known as VO2 Max) data for a single date. VO2 Max values will be shown as a range if no run data is available or a single numeric value if the user uses a GPS for runs. See Additional Information for further context.",
        "operationId": "GetVO2MaxSummarybyDate"
      }
    },
    "/1/user/{user-id}/devices.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "battery": {
                    "type": "string",
                    "description": "Returns the battery level of the device",
                    "title": "battery"
                  },
                  "batteryLevel": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Returns the battery level percentage of the device.",
                    "title": "batteryLevel"
                  },
                  "deviceVersion": {
                    "type": "string",
                    "description": "The product name of the device.",
                    "title": "deviceVersion"
                  },
                  "features": {
                    "type": "array",
                    "items": {},
                    "description": "features"
                  },
                  "id": {
                    "type": "string",
                    "description": "The device ID.",
                    "title": "id"
                  },
                  "lastSyncTime": {
                    "type": "string",
                    "description": "Timestamp representing the last time the device was sync\u0027d with the Fitbit mobile application.",
                    "title": "lastSyncTime"
                  },
                  "mac": {
                    "type": "string",
                    "description": "Mac ID number",
                    "title": "mac"
                  },
                  "type": {
                    "type": "string",
                    "description": "TRACKER | SCALE",
                    "title": "type"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Devices",
        "description": "Retrieves a list of Fitbit devices paired to a user\u0027s account.",
        "operationId": "GetDevices",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/1/user/{user-id}/devices/tracker/{tracker-id}/alarms.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "trackerAlarms": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "alarmId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Numerical value representing the alarm ID.",
                        "title": "alarmId"
                      },
                      "deleted": {
                        "type": "boolean",
                        "description": "Indicates if an alarm has been deleted.",
                        "title": "deleted",
                        "enum": [
                          
                          true,
                          false
                        ]
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Indicates if an alarm is enabled.",
                        "title": "enabled",
                        "enum": [
                          
                          true,
                          false
                        ]
                      },
                      "recurring": {
                        "type": "boolean",
                        "description": "Indicates if an alarm is recurring.",
                        "title": "recurring",
                        "enum": [
                          
                          true,
                          false
                        ]
                      },
                      "snoozeCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Indicates the number of times the alarm will snooze.",
                        "title": "snoozeCount"
                      },
                      "snoozeLength": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Indicates the time in minutes between snooze periods.",
                        "title": "snoozeLength"
                      },
                      "syncedToDevice": {
                        "type": "boolean",
                        "description": "true | false",
                        "title": "syncedToDevice",
                        "enum": [
                          
                          true,
                          false
                        ]
                      },
                      "time": {
                        "type": "string",
                        "description": "The time and UTC offset for the specified alarm.",
                        "title": "time"
                      },
                      "vibe": {
                        "type": "string",
                        "description": "Returns the type of vibration configured.",
                        "title": "vibe"
                      },
                      "weekDays": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "weekDays"
                      }
                    }
                  },
                  "description": "trackerAlarms"
                }
              }
            }
          }
        },
        "summary": "Get Alarms",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "tracker-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the tracker for which the data is returned.",
            "x-ms-summary": "Tracker Id",
            "x-ms-dynamic-values": {
              "operationId": "GetDevices",
              "value-path": "id",
              "value-title": "id",
              "parameters": {
                "user-id": {
                  "parameter": "tracker-id"
                }
              }
            },
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "Retrieves the alarms enabled for a specific device.",
        "operationId": "GetAlarms"
      }
    },
    "/1.1/user/{user-id}/leaderboard/friends.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "type"
                      },
                      "id": {
                        "type": "string",
                        "description": "id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "step-rank": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Ranking among the user\u0027s friends.",
                            "title": "step-rank"
                          },
                          "step-summary": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Weekly step count.",
                            "title": "step-summary"
                          }
                        },
                        "description": "attributes"
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "type"
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "id"
                                  }
                                },
                                "description": "data"
                              }
                            },
                            "description": "user"
                          }
                        },
                        "description": "relationships"
                      }
                    }
                  },
                  "description": "data"
                },
                "included": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "type"
                      },
                      "id": {
                        "type": "string",
                        "description": "id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "avatar": {
                            "type": "string",
                            "description": "Link to user\u0027s avatar picture.",
                            "title": "avatar"
                          },
                          "child": {
                            "type": "boolean",
                            "description": "child"
                          },
                          "friend": {
                            "type": "boolean",
                            "description": "friend"
                          },
                          "name": {
                            "type": "string",
                            "description": "name"
                          }
                        },
                        "description": "attributes"
                      }
                    }
                  },
                  "description": "included"
                }
              }
            }
          }
        },
        "summary": "Get Friends Leaderboard",
        "operationId": "GetFriendsLeaderboard",
        "description": "This endpoint returns the user\u0027s friend leaderboard",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/1/user/{user-id}/hrv/date/{date}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "hrv": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "object",
                        "properties": {
                          "dailyRmssd": {
                            "type": "number",
                            "format": "float",
                            "description": "The Root Mean Square of Successive Differences (RMSSD) between heart beats. It measures short-term variability in the user\u2019s daily heart rate in milliseconds (ms).",
                            "title": "dailyRmssd"
                          },
                          "deepRmssd": {
                            "type": "number",
                            "format": "float",
                            "description": "The Root Mean Square of Successive Differences (RMSSD) between heart beats. It measures short-term variability in the user\u2019s heart rate while in deep sleep, in milliseconds (ms).",
                            "title": "deepRmssd"
                          }
                        },
                        "description": "value"
                      },
                      "dateTime": {
                        "type": "string",
                        "description": "The sleep log date specified in the format YYYY-MM-DD.",
                        "title": "dateTime"
                      }
                    }
                  },
                  "description": "hrv"
                }
              }
            }
          }
        },
        "summary": "Get HRV Summary by Date",
        "operationId": "GetHRVSummarybyDate",
        "description": "This endpoint returns the Heart Rate Variability (HRV) data for a single date",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Date",
            "description": "The date in the format yyyy-MM-dd or today.",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/1/user/{user-id}/badges.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "badges": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "badgeGradientEndColor": {
                        "type": "string",
                        "description": "badgeGradientEndColor"
                      },
                      "badgeGradientStartColor": {
                        "type": "string",
                        "description": "badgeGradientStartColor"
                      },
                      "badgeType": {
                        "type": "string",
                        "description": "Type of badge received.",
                        "title": "badgeType"
                      },
                      "category": {
                        "type": "string",
                        "description": "category"
                      },
                      "cheers": {
                        "type": "array",
                        "items": {},
                        "description": "cheers"
                      },
                      "dateTime": {
                        "type": "string",
                        "description": "Date the badge was achieved.",
                        "title": "dateTime"
                      },
                      "description": {
                        "type": "string",
                        "description": "description"
                      },
                      "earnedMessage": {
                        "type": "string",
                        "description": "earnedMessage"
                      },
                      "encodedId": {
                        "type": "string",
                        "description": "encodedId"
                      },
                      "image100px": {
                        "type": "string",
                        "description": "image100px"
                      },
                      "image125px": {
                        "type": "string",
                        "description": "image125px"
                      },
                      "image300px": {
                        "type": "string",
                        "description": "image300px"
                      },
                      "image50px": {
                        "type": "string",
                        "description": "image50px"
                      },
                      "image75px": {
                        "type": "string",
                        "description": "image75px"
                      },
                      "marketingDescription": {
                        "type": "string",
                        "description": "marketingDescription"
                      },
                      "mobileDescription": {
                        "type": "string",
                        "description": "mobileDescription"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "shareImage640px": {
                        "type": "string",
                        "description": "shareImage640px"
                      },
                      "shareText": {
                        "type": "string",
                        "description": "shareText"
                      },
                      "shortDescription": {
                        "type": "string",
                        "description": "shortDescription"
                      },
                      "shortName": {
                        "type": "string",
                        "description": "shortName"
                      },
                      "timesAchieved": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of times the user has achieved the badge.",
                        "title": "timesAchieved"
                      },
                      "value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The badge goal in the unit measurement.",
                        "title": "value"
                      }
                    }
                  },
                  "description": "badges"
                }
              }
            }
          }
        },
        "summary": "Get Badges",
        "operationId": "GetBadges",
        "description": "Retrieves a list of the user\u2019s badges.",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/1/user/{user-id}/profile.json": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "aboutMe": {
                      "type": "string",
                      "description": "The \u0022About Me\u0022 information specified in the user\u0027s account settings.",
                      "title": "aboutMe"
                    },
                    "age": {
                      "type": "string",
                      "description": "The age based on their specified birthday in the user\u0027s account settings.",
                      "title": "age"
                    },
                    "ambassador": {
                      "type": "string",
                      "description": "ambassador"
                    },
                    "autoStrideEnabled": {
                      "type": "string",
                      "description": "autoStrideEnabled"
                    },
                    "avatar": {
                      "type": "string",
                      "description": "avatar"
                    },
                    "avatar150": {
                      "type": "string",
                      "description": "avatar150"
                    },
                    "avatar640": {
                      "type": "string",
                      "description": "avatar640"
                    },
                    "averageDailySteps": {
                      "type": "string",
                      "description": "Average daily steps calculated for the user.",
                      "title": "averageDailySteps"
                    },
                    "challengesBeta": {
                      "type": "string",
                      "description": "challengesBeta"
                    },
                    "clockTimeDisplayFormat": {
                      "type": "string",
                      "description": "clockTimeDisplayFormat"
                    },
                    "country": {
                      "type": "string",
                      "description": "country"
                    },
                    "corporate": {
                      "type": "string",
                      "description": "corporate"
                    },
                    "corporateAdmin": {
                      "type": "string",
                      "description": "corporateAdmin"
                    },
                    "dateOfBirth": {
                      "type": "string",
                      "description": "dateOfBirth"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "displayName"
                    },
                    "displayNameSetting": {
                      "type": "string",
                      "description": "displayNameSetting"
                    },
                    "distanceUnit": {
                      "type": "string",
                      "description": "distanceUnit"
                    },
                    "encodedId": {
                      "type": "string",
                      "description": "encodedId"
                    },
                    "features": {
                      "type": "object",
                      "properties": {
                        "exerciseGoal": {
                          "type": "string",
                          "description": "exerciseGoal"
                        }
                      },
                      "description": "features"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "firstName"
                    },
                    "foodsLocale": {
                      "type": "string",
                      "description": "foodsLocale"
                    },
                    "fullName": {
                      "type": "string",
                      "description": "fullName"
                    },
                    "gender": {
                      "type": "string",
                      "description": "gender"
                    },
                    "glucoseUnit": {
                      "type": "string",
                      "description": "glucoseUnit"
                    },
                    "height": {
                      "type": "string",
                      "description": "The height value specified in the user\u0027s account settings.",
                      "title": "height"
                    },
                    "heightUnit": {
                      "type": "string",
                      "description": "heightUnit"
                    },
                    "isBugReportEnabled": {
                      "type": "string",
                      "description": "isBugReportEnabled"
                    },
                    "isChild": {
                      "type": "string",
                      "description": "isChild"
                    },
                    "isCoach": {
                      "type": "string",
                      "description": "isCoach"
                    },
                    "languageLocale": {
                      "type": "string",
                      "description": "languageLocale"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "lastName"
                    },
                    "legalTermsAcceptRequired": {
                      "type": "string",
                      "description": "legalTermsAcceptRequired"
                    },
                    "locale": {
                      "type": "string",
                      "description": "locale"
                    },
                    "memberSince": {
                      "type": "string",
                      "description": "memberSince"
                    },
                    "mfaEnabled": {
                      "type": "string",
                      "description": "mfaEnabled"
                    },
                    "offsetFromUTCMillis": {
                      "type": "string",
                      "description": "offsetFromUTCMillis"
                    },
                    "sdkDeveloper": {
                      "type": "string",
                      "description": "sdkDeveloper"
                    },
                    "sleepTracking": {
                      "type": "string",
                      "description": "sleepTracking"
                    },
                    "startDayOfWeek": {
                      "type": "string",
                      "description": "startDayOfWeek"
                    },
                    "state": {
                      "type": "string",
                      "description": "state"
                    },
                    "strideLengthRunning": {
                      "type": "string",
                      "description": "strideLengthRunning"
                    },
                    "strideLengthRunningType": {
                      "type": "string",
                      "description": "strideLengthRunningType"
                    },
                    "strideLengthWalking": {
                      "type": "string",
                      "description": "strideLengthWalking"
                    },
                    "strideLengthWalkingType": {
                      "type": "string",
                      "description": "strideLengthWalkingType"
                    },
                    "swimUnit": {
                      "type": "string",
                      "description": "swimUnit"
                    },
                    "temperatureUnit": {
                      "type": "string",
                      "description": "temperatureUnit"
                    },
                    "timezone": {
                      "type": "string",
                      "description": "timezone"
                    },
                    "topBadges": {
                      "type": "string",
                      "description": "An array listing the Fitbit badges currently earned by the user.",
                      "title": "topBadges"
                    },
                    "waterUnit": {
                      "type": "string",
                      "description": "waterUnit"
                    },
                    "waterUnitName": {
                      "type": "string",
                      "description": "waterUnitName"
                    },
                    "weight": {
                      "type": "string",
                      "description": "weight"
                    },
                    "weightUnit": {
                      "type": "string",
                      "description": "weightUnit"
                    }
                  },
                  "description": "user"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The encoded ID of the user",
            "x-ms-summary": "User Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "summary": "Get Profile",
        "operationId": "GetProfile",
        "description": "Retrieves the user\u0027s profile data."
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2-auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://www.fitbit.com/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {
        "activity cardio_fitness electrocardiogram heartrate location nutrition oxygen_saturation profile respiratory_rate settings sleep social temperature weight": "activity cardio_fitness electrocardiogram heartrate location nutrition oxygen_saturation profile respiratory_rate settings sleep social temperature weight"
      }
    }
  },
  "security": [
    {
      "oauth2-auth": [
        "activity cardio_fitness electrocardiogram heartrate location nutrition oxygen_saturation profile respiratory_rate settings sleep social temperature weight"
      ]
    }
  ],
  "tags": []
}