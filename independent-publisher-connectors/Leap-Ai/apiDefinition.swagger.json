{
  "swagger": "2.0",
  "info": {
    "title": "LeapAi AI",
    "description": "LeapAi image recognition service.",
    "version": "1.0",
    "contact": {
      "name": "Chandra Sekhar",
      "url": "https://github.com/sekharmalla",
      "email": "chandra.malla@msftcommunity.com"
    }
  },
  "host": "api.tryleap.ai",
  "basePath": "/api/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "multipart/form-data",
    "application/json"
  ],
  "parameters": {
    "file": {
      "name": "files",
      "in": "formData",
      "description": "The binary data of the image sample.",
      "required": true,
      "type": "file",
      "x-ms-visibility": "important",
      "x-ms-summary": "File"
    }
  },
  "produces": [],
  "paths": {
    "/v1/images/models": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id"
                  },
                  "title": {
                    "type": "string",
                    "description": "title"
                  },
                  "subjectKeyword": {
                    "type": "string",
                    "description": "subjectKeyword"
                  },
                  "subjectIdentifier": {
                    "type": "string",
                    "description": "subjectIdentifier"
                  }
                }
              }
            }
          }
        },
        "summary": "List All Models",
        "operationId": "ListAllModels",
        "description": "This endpoint will return a list of all models for the workspace.",
        "parameters": [
          {
            "name": "returnInObject",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Whether to return the sample in the response as an object. Will return array if false.",
            "x-ms-summary": "Return In Object"
          },
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "accept",
            "x-ms-summary": "accept",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id",
                  "title": "ID"
                },
                "title": {
                  "type": "string",
                  "description": "title",
                  "title": "Title"
                },
                "subjectKeyword": {
                  "type": "string",
                  "description": "subjectKeyword",
                  "title": "Subject Keyword"
                },
                "subjectIdentifier": {
                  "type": "string",
                  "description": "subjectIdentifier",
                  "title": "Subject Identifier"
                }
              }
            }
          }
        },
        "summary": "Create Model",
        "description": "This endpoint will create a new model",
        "operationId": "CreateModel",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "accept",
            "x-ms-summary": "accept",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "content-type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-type",
            "x-ms-summary": "Content-type",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "title",
                  "title": "Title",
                  "x-ms-visibility": "important"
                },
                "subjectKeyword": {
                  "type": "string",
                  "description": "subjectKeyword",
                  "title": "Subject Key Word",
                  "x-ms-visibility": "important"
                }
              },
              "x-ms-visibility": "important",
              "required": [
                "subjectKeyword",
                "title"
              ]
            },
            "x-ms-visibility": "important"
          }
        ]
      }
    },
    "/v1/images/models/{modelId}/samples": {
      "post": {
        "summary": "Upload Image Samples",
        "description": "Upload one or multiple image samples to a model.",
        "operationId": "UploadImageSamples",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "The ID of the model to upload the image samples to.",
            "required": true,
            "type": "string",
            "x-ms-summary":"Model Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "accept",
            "in": "header",
            "description": "The expected response format.",
            "required": true,
            "type": "string",
            "x-ms-summary": "accept",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "files",
            "in": "formData",
            "description": "The binary data of the image sample.",
            "required": true,
            "type": "file",
            "x-ms-visibility": "important",
            "x-ms-summary": "Files"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the uploaded sample.",
                    "title": "Sample ID"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/images/models/{modelId}/queue": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the sample."
                },
                "createdAt": {
                  "type": "string",
                  "description": "The date and time when the sample was created."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the sample."
                },
                "model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the model that the sample belongs to."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the model."
                    },
                    "subjectKeyword": {
                      "type": "string",
                      "description": "The subject keyword of the model."
                    },
                    "subjectIdentifier": {
                      "type": "string",
                      "description": "The subject identifier of the model."
                    }
                  },
                  "description": "The metadata of the model that the sample belongs to."
                },
                "weights": {
                  "type": "object",
                  "properties": {
                    "uri": {
                      "type": "string",
                      "description": "The URI where the model weights are stored."
                    },
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the model weights."
                    }
                  },
                  "description": "The information about the weights of the model that the sample belongs to."
                }
              }
            }
          }
        },
        "summary": "Queue Training Job",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the model to queue.",
            "x-ms-summary": "Model Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "accept",
            "x-ms-summary": "accept",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "content-type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-type",
            "x-ms-summary": "Content-type",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "webhookUrl": {
                  "type": "string",
                  "description": "An optional webhook URL that will be called when the model is trained.  https://example.com/webhook",
                  "title": "Webhook Url",
                  "x-ms-visibility": "advanced"
                }
              },
              "x-ms-visibility": "advanced"
            },
            "x-ms-visibility": "advanced"
          }
        ],
        "description": "This endpoint will queue a new model version to be trained.",
        "operationId": "QueueTrainingJob"
      }
    },
    "/v1/images/models/{modelId}/inferences": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier for the image generation request",
                    "title": "ID"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the image generation request (e.g. finished)"
                  },
                  "prompt": {
                    "type": "string",
                    "description": "The prompt for the image generation request"
                  },
                  "negativePrompt": {
                    "type": "string",
                    "description": "The negative prompt for the image generation request"
                  },
                  "seed": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The seed value for the image generation request"
                  },
                  "width": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The width of the generated image"
                  },
                  "height": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The height of the generated image"
                  },
                  "numberOfImages": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of images generated for the request"
                  },
                  "steps": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of steps taken for image generation"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "The creation date and time of the request"
                  },
                  "promptStrength": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The strength of the prompt"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the generated image",
                          "title": "Image ID"
                        },
                        "uri": {
                          "type": "string",
                          "description": "The URI for the generated image"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "The creation date and time of the generated image"
                        }
                      },
                      "description": "Generated images"
                    }
                  },
                  "modelId": {
                    "type": "string",
                    "description": "The model ID used for the image generation request"
                  }
                }
              }
            }
          }
        },
        "summary": "List Inference Jobs",
        "operationId": "ListInferenceJobs",
        "description": "Retrieve all inferences for a specific model",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the model to queue.",
            "x-ms-summary": "Model Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "onlyFinished",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If set to true, only finished inferences will be returned. If set to false or not set, all inference jobs will be returned.",
            "x-ms-summary": "Only Finished"
          },
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "accept",
            "x-ms-summary": "accept",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "content-type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-type",
            "x-ms-summary": "Content-type",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the generated image(s)."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time when the inference was performed."
                },
                "prompt": {
                  "type": "string",
                  "description": "The prompt used for the inference.",
                  "example": "A photo of an astronaut riding a horse"
                },
                "negativePrompt": {
                  "type": "string",
                  "description": "Negative prompts used for the inference.",
                  "example": "asymmetric, watermarks"
                },
                "version": {
                  "type": "string",
                  "description": "The version of the model used for the inference. If not provided will default to latest."
                },
                "steps": {
                  "type": "integer",
                  "description": "The number of steps used for the inference.",
                  "example": 50
                },
                "width": {
                  "type": "integer",
                  "description": "The width of the image used for the inference. Must be a multiple of 8.",
                  "example": 512
                },
                "height": {
                  "type": "integer",
                  "description": "The height of the image used for the inference. Must be a multiple of 8.",
                  "example": 512
                },
                "numberOfImages": {
                  "type": "integer",
                  "description": "The number of images generated for the inference. Max batch size is 20.",
                  "example": 1
                },
                "promptStrength": {
                  "type": "integer",
                  "description": "The prompt strength used for the inference. Must be between 0 and 30.",
                  "example": 7
                },
                "seed": {
                  "type": "integer",
                  "description": "The seed used for the inference. Must be a positive integer.",
                  "example": 4523184
                },
                "webhookUrl": {
                  "type": "string",
                  "description": "An optional webhook URL that will be called when the model is trained."
                },
                "restoreFaces": {
                  "type": "boolean",
                  "description": "Whether to apply face restoration to the generated images or not. This will make images of faces look more realistic."
                }
              }
            }
          }
        },
        "summary": "Generate Image",
        "description": "This endpoint will generate a new inference for a particular model.",
        "operationId": "GenerateImage",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Model Id",
            "description": "The ID of the model to use to generate images.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "accept",
            "x-ms-summary": "accept",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "content-type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-type",
            "x-ms-summary": "Content-type",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "prompt": {
                  "type": "string",
                  "description": "The prompt to use for the inference.",
                  "title": "Prompt"
                },
                "negativePrompt": {
                  "type": "string",
                  "description": "Negative prompts to use for the inference.",
                  "title": "Negative prompt"
                },
                "steps": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of steps to use for the inference.",
                  "title": "Steps"
                },
                "width": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The width of the image to use for the inference. Must be a multiple of 8.",
                  "title": "Width"
                },
                "height": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The height of the image to use for the inference. Must be a multiple of 8.",
                  "title": "Height"
                },
                "numberOfImages": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of images to generate for the inference. Max batch size is 20.",
                  "title": "The number of images"
                },
                "promptStrength": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The higher the prompt strength, the closer the generated image will be to the prompt. Must be between 0 and 30.",
                  "title": "Prompt strength"
                },
                "seed": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The seed to use for the inference. Must be a positive integer.",
                  "title": "Seed"
                }
              }
            }
          }
        ]
      }
    },
    "/v1/images/models/{modelId}/inferences/{inferenceId}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the image generation request",
                  "title": "ID"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the image generation request (e.g. finished)"
                },
                "prompt": {
                  "type": "string",
                  "description": "The prompt for the image generation request"
                },
                "negativePrompt": {
                  "type": "string",
                  "description": "The negative prompt for the image generation request"
                },
                "seed": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The seed value for the image generation request"
                },
                "width": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The width of the generated image"
                },
                "height": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The height of the generated image"
                },
                "numberOfImages": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of images generated for the request"
                },
                "steps": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of steps taken for image generation"
                },
                "createdAt": {
                  "type": "string",
                  "description": "The creation date and time of the request"
                },
                "promptStrength": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The strength of the prompt"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the generated image",
                        "title": "Image ID"
                      },
                      "uri": {
                        "type": "string",
                        "description": "The URI for the generated image"
                      },
                      "createdAt": {
                        "type": "string",
                        "description": "The creation date and time of the generated image"
                      }
                    },
                    "description": "Generated images"
                  }
                },
                "modelId": {
                  "type": "string",
                  "description": "The model ID used for the image generation request"
                }
              }
            }
          }
        },
        "summary": "Get Single Inference Job",
        "operationId": "GetSingleInferenceJob",
        "description": "This endpoint will retrieve a specific inference for a particular model.",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the model to retrieve inferences for.",
            "x-ms-summary": "Model Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "inferenceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the inference to retrieve.",
            "x-ms-summary": "Inference Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "accept",
            "x-ms-summary": "accept",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the image generation request",
                  "title": "ID"
                }
              }
            }
          }
        },
        "summary": "Delete Inference",
        "operationId": "DeleteInference",
        "description": "Deletes the Inference from the model.",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the model to retrieve inferences for.",
            "x-ms-summary": "Model Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "inferenceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the inference to retrieve.",
            "x-ms-summary": "Inference Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "accept",
            "x-ms-summary": "accept",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ]
      }
    }
  },
  "definitions": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://tryleap.ai/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://app.getterms.io/view/dlM8u/privacy/en-us"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Website;Productivity"
    }
  ]
}
