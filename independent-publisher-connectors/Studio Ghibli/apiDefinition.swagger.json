{
  "swagger": "2.0",
  "info": {
    "title": "Studio Ghibli",
    "description": "The Studio Ghibli API catalogs the people, places, and things found in the worlds of Ghibli.",
    "version": "1.0",
    "contact": {
      "name": "Troy Taylor",
      "url": "https://www.hitachisolutions.com",
      "email": "ttaylor@hitachisolutions.com"
    }
  },
  "host": "ghibliapi.herokuapp.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/films": {
      "get": {
        "summary": "Gets all films",
        "description": "The Films endpoint returns information about all of the Studio Ghibli films.",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "x-ms-summary": "Fields",
            "description": "A comma-separated list of fields to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "x-ms-summary": "Limit",
            "required": false,
            "description": "The amount of results (default 50, maximum 250).",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of films.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Films"
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found."
          }
        },
        "operationId": "GetFilms"
      }
    },
    "/films/{id}": {
      "get": {
        "summary": "Get film by ID",
        "description": "Returns a film based on a single ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "description": "The film identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "x-ms-summary": "Fields",
            "description": "The comma-separated list of fields to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single film is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Films"
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found."
          }
        },
        "operationId": "GetFilm"
      }
    },
    "/people": {
      "get": {
        "summary": "Get all people",
        "description": "The People endpoint returns information about all of the Studio Ghibli people. This broadly includes all Ghibli characters, human and non-.",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "x-ms-summary": "Fields",
            "description": "The comma-separated list of fields to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "x-ms-summary": "Limit",
            "required": false,
            "description": "The amount of results (default 50, maximum 250).",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of people.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/People"
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found."
          }
        },
        "operationId": "GetPeople"
      }
    },
    "/people/{id}": {
      "get": {
        "summary": "Get person by ID",
        "description": "Returns a person based on a single ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "description": "The person identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "x-ms-summary": "Fields",
            "description": "The comma-separated list of fields to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single person is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/People"
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found."
          }
        },
        "operationId": "GetPerson"
      }
    },
    "/locations": {
      "get": {
        "summary": "Get all locations",
        "description": "The Locations endpoint returns information about all of the Studio Ghibli locations. This broadly includes lands, countries, and places.",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "x-ms-summary": "Fields",
            "description": "The comma-separated list of fields to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "x-ms-summary": "Limit",
            "required": false,
            "description": "The amount of results (default 50, maximum 250).",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of locations.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Locations"
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found."
          }
        },
        "operationId": "GetLocations"
      }
    },
    "/locations/{id}": {
      "get": {
        "summary": "Get location by ID",
        "description": "Returns an individual location.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "description": "The location identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "x-ms-summary": "Fields",
            "description": "The comma-separated list of fields to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single location is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Locations"
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found."
          }
        },
        "operationId": "GetLocation"
      }
    },
    "/species": {
      "get": {
        "summary": "Get all species",
        "description": "The Species endpoint returns information about all of the Studio Ghibli species. This includes humans, animals, and spirits et al.",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "x-ms-summary": "Fields",
            "description": "The comma-separated list of fields to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "x-ms-summary": "Limit",
            "required": false,
            "description": "The amount of results (default 50, maximum 250).",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of species.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Species"
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found."
          }
        },
        "operationId": "GetSpecies"
      }
    },
    "/species/{id}": {
      "get": {
        "summary": "Get species by ID",
        "description": "Returns an individual species.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "description": "The species identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "x-ms-summary": "Fields",
            "description": "The comma-separated list of fields to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single species is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Species"
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found."
          }
        },
        "operationId": "GetASpecies"
      }
    },
    "/vehicles": {
      "get": {
        "summary": "Get all vehicles",
        "description": "The Vehicles endpoint returns information about all of the Studio Ghibli vehicles. This includes cars, ships, and planes.",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "x-ms-summary": "Fields",
            "description": "The comma-separated list of fields to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "x-ms-summary": "Limit",
            "required": false,
            "description": "The amount of results (default 50, maximum 250).",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of vehicles.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vehicles"
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found."
          }
        },
        "operationId": "GetVehicles"
      }
    },
    "/vehicles/{id}": {
      "get": {
        "summary": "Get vehicle by ID",
        "description": "An individual vehicle.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "description": "The vehicle identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "x-ms-summary": "Fields",
            "description": "The comma-separated list of fields to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single vehicle is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vehicles"
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found."
          }
        },
        "operationId": "GetVehicle"
      }
    }
  },
  "definitions": {
    "Films": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique identifier representing a specific film."
        },
        "title": {
          "type": "string",
          "title": "Title",
          "description": "Title of the film."
        },
        "original_title": {
          "type": "string",
          "title": "Original Title",
          "description": "Original title of the film."
        },
        "original_title_romanised": {
          "type": "string",
          "title": "Original Title Romanized",
          "description": "Orignal title in romanized form."
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description of the film."
        },
        "director": {
          "type": "string",
          "title": "Director",
          "description": "Director of the film."
        },
        "producer": {
          "type": "string",
          "title": "Producer",
          "description": "Producer of the film."
        },
        "release_date": {
          "type": "string",
          "title": "Release Date",
          "description": "Release year of film."
        },
        "running_time": {
          "type": "string",
          "title": "Running Time",
          "description": "Running time of the film in minutes."
        },
        "rt_score": {
          "type": "string",
          "title": "Rotten Tomatoes Score",
          "description": "Rotten Tomatoes score of film."
        },
        "people": {
          "type": "array",
          "title": "People",
          "description": "People found in film.",
          "items": {
            "type": "string"
          }
        },
        "species": {
          "type": "array",
          "title": "Species",
          "description": "Species found in film.",
          "items": {
            "type": "string"
          }
        },
        "locations": {
          "type": "array",
          "title": "Locations",
          "description": "Locations found in film.",
          "items": {
            "type": "string"
          }
        },
        "vehicles": {
          "type": "array",
          "title": "Vehicles",
          "description": "Vehicles found in film.",
          "items": {
            "type": "string"
          }
        },
        "url": {
          "type": "string",
          "title": "URL",
          "description": "URL of film."
        }
      }
    },
    "People": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique identifier representing a specific person."
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of the person."
        },
        "gender": {
          "type": "string",
          "title": "Gender",
          "description": "Gender of the person."
        },
        "age": {
          "type": "string",
          "title": "Age",
          "description": "Age, if known, of the person"
        },
        "eye_color": {
          "type": "string",
          "title": "Eye Color",
          "description": "Eye color of the person."
        },
        "hair_color": {
          "type": "string",
          "title": "Hair Color",
          "description": "Hair color of the person."
        },
        "films": {
          "type": "array",
          "title": "Films",
          "description": "Array of films the person appears in.",
          "items": {
            "type": "string"
          }
        },
        "species": {
          "type": "string",
          "title": "Species",
          "description": "Species the person belongs to."
        },
        "url": {
          "type": "string",
          "title": "URL",
          "description": "Unique url of the person."
        }
      }
    },
    "Locations": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique identifier representing a specific location."
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of location."
        },
        "climate": {
          "type": "string",
          "title": "Climate",
          "description": "Climate of location."
        },
        "terrain": {
          "type": "string",
          "title": "Terrain",
          "description": "Terrain type of location."
        },
        "surface_water": {
          "type": "string",
          "title": "Surface Water",
          "description": "Percent of location covered in water."
        },
        "residents": {
          "type": "array",
          "title": "Residents",
          "description": "Array of residents in location.",
          "items": {
            "type": "string"
          }
        },
        "films": {
          "type": "array",
          "title": "Films",
          "description": "Array of films the location appears in.",
          "items": {
            "type": "string"
          }
        },
        "url": {
          "type": "string",
          "title": "URL",
          "description": "Individual URL of the location."
        }
      }
    },
    "Species": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique identifier representing a specific species."
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of the species."
        },
        "classification": {
          "type": "string",
          "title": "Classification",
          "description": "Classification of the species."
        },
        "eye_color": {
          "type": "string",
          "title": "Eye Color",
          "description": "Eye color of the species."
        },
        "hair_color": {
          "type": "string",
          "title": "Hair Color",
          "description": "Hair color of the species."
        },
        "people": {
          "type": "array",
          "title": "People",
          "description": "People belonging to the species.",
          "items": {
            "type": "string"
          }
        },
        "films": {
          "type": "array",
          "title": "Films",
          "description": "Array of films the species appears in.",
          "items": {
            "type": "string"
          }
        },
        "url": {
          "type": "string",
          "title": "URL",
          "description": "Unique url of the species."
        }
      }
    },
    "Vehicles": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique identifier representing a specific vehicle."
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of the vehicles."
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description of the vehicle."
        },
        "vehicle_class": {
          "type": "string",
          "title": "Class",
          "description": "Class of the vehicle."
        },
        "length": {
          "type": "string",
          "title": "Length",
          "description": "Length of the vehicle in feet."
        },
        "pilot": {
          "type": "string",
          "title": "Pilot",
          "description": "Pilot of the vehicle."
        },
        "films": {
          "type": "array",
          "title": "Films",
          "description": "Array of films the vehicle appears in.",
          "items": {
            "type": "string"
          }
        },
        "url": {
          "type": "string",
          "title": "URL",
          "description": "Unique URL of the vehicle."
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {},
  "security": [],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://ghibliapi.herokuapp.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://ghibliapi.herokuapp.com/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Lifestyle and Entertainment"
    }
  ]
}