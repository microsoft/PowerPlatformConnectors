{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Krozu PM",
    "description": "Krozu PM connector aids the integration of Krozu project management platform. Users will be able to leverage its tree (hierarchy) feature and unique project management solution.",
    "contact": {
      "name": "Osazee Odigie",
      "email": "osazee.odigie10@gmail.com"
    }
  },
  "host": "app.krozu.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://krozu.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://krozu.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity"
    }
  ],
  "paths": {
    "/api/v1.00/user/": {
      "get": {
        "summary": "Get - My User Profile",
        "description": "Returns the current users profile information.",
        "operationId": "Get-MyUserProfile",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "x-ms-summary": "My User Profile",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "description": "uuid"
                },
                "firstname": {
                  "type": "string",
                  "description": "firstname"
                },
                "lastname": {
                  "type": "string",
                  "description": "lastname"
                },
                "email": {
                  "type": "string",
                  "description": "email"
                },
                "photo": {
                  "type": "string",
                  "description": "photo"
                },
                "id": {
                  "type": "string",
                  "description": "id"
                },
                "clockstatus": {
                  "type": "integer",
                  "format": "int32",
                  "description": "clockstatus"
                },
                "taskname": {
                  "type": "string",
                  "description": "taskname"
                },
                "newInvitationCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "newInvitationCount"
                }
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/api/v1.00/boards": {
      "get": {
        "summary": "Get - My Boards",
        "description": "Returns all accessible boards for the current user.",
        "operationId": "Get-MyBoards",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "x-ms-summary": "My Boards",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "public": {
                    "type": "integer",
                    "format": "int32",
                    "description": "public"
                  },
                  "progress": {
                    "type": "integer",
                    "format": "int32",
                    "description": "progress"
                  },
                  "isboard": {
                    "type": "integer",
                    "format": "int32",
                    "description": "isboard"
                  },
                  "unread": {
                    "type": "string",
                    "description": "unread"
                  },
                  "isroot": {
                    "type": "integer",
                    "format": "int32",
                    "description": "isroot"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/owned": {
      "get": {
        "summary": "Get - My Owned Trees",
        "description": "Returns the root boards, or Project Tree root boards owned by the current user.",
        "operationId": "Get-MyOwnedTrees",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "x-ms-summary": "My Owned Trees",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "public": {
                    "type": "integer",
                    "format": "int32",
                    "description": "public"
                  },
                  "progress": {
                    "type": "integer",
                    "format": "int32",
                    "description": "progress"
                  },
                  "duedate": {
                    "type": "string",
                    "description": "duedate"
                  },
                  "startdate": {
                    "type": "string",
                    "description": "startdate"
                  },
                  "enddate": {
                    "type": "string",
                    "description": "enddate"
                  },
                  "created": {
                    "type": "string",
                    "description": "created"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/favorite": {},
    "/api/v1.00/recent": {},
    "/api/v1.00/popular": {},
    "/api/v1.00/assigned": {
      "get": {
        "summary": "Get - My Assigned Boards",
        "description": "Returns all boards the current user is assigned to or has Team Member access to.",
        "operationId": "Get-MyAssignedBoards",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "x-ms-summary": "My Assigned Boards",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "public": {
                    "type": "integer",
                    "format": "int32",
                    "description": "public"
                  },
                  "progress": {
                    "type": "integer",
                    "format": "int32",
                    "description": "progress"
                  },
                  "isboard": {
                    "type": "integer",
                    "format": "int32",
                    "description": "isboard"
                  },
                  "unread": {
                    "type": "string",
                    "description": "unread"
                  },
                  "isroot": {
                    "type": "integer",
                    "format": "int32",
                    "description": "isroot"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/user/:%7B%7Bguestuseruuid%7D%7D": {},
    "/api/v1.00/board/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/boardgroups/{boardUUID}": {
      "get": {
        "summary": "Get - Board Groups",
        "description": "Returns all groups and their settings applicable to this specified board.",
        "operationId": "Get-BoardGroups",
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "x-ms-summary": "Board UUID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Accept",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-summary": "Board Groups"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "sort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "sort"
                  },
                  "created": {
                    "type": "string",
                    "description": "created"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/boardlists/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/childobjects/card/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/boardcards/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/listcards/:%7B%7BList%20UUID%7D%7D": {},
    "/api/v1.00/boardchildren/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/group/:%7B%7BGroup%20UUID%7D%7D": {},
    "/api/v1.00/list/:%7B%7BList%20UUID%7D%7D": {},
    "/api/v1.00/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/comments/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/messages/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/tags/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/members/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/members/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/boardrecords/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/cardrecords/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/listrecords/:%7B%7BList%20UUID%7D%7D": {},
    "/api/v1.00/notifications": {
      "get": {
        "summary": "Get - My Notifications",
        "description": "Returns all active notifications for the current user.",
        "operationId": "Get-MyNotifications",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "x-ms-summary": "My Notifications",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "alerts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "uuid"
                      },
                      "body": {
                        "type": "string",
                        "description": "body"
                      },
                      "subtype": {
                        "type": "integer",
                        "format": "int32",
                        "description": "subtype"
                      },
                      "seen": {
                        "type": "integer",
                        "format": "int32",
                        "description": "seen"
                      },
                      "date": {
                        "type": "string",
                        "description": "date"
                      },
                      "fromname": {
                        "type": "string",
                        "description": "fromname"
                      },
                      "carduuid": {
                        "type": "string",
                        "description": "carduuid"
                      },
                      "isboard": {
                        "type": "integer",
                        "format": "int32",
                        "description": "isboard"
                      },
                      "boarduuid": {
                        "type": "string",
                        "description": "boarduuid"
                      },
                      "title": {
                        "type": "string",
                        "description": "title"
                      },
                      "url": {
                        "type": "string",
                        "description": "url"
                      }
                    }
                  },
                  "description": "alerts"
                },
                "unread": {
                  "type": "array",
                  "items": {},
                  "description": "unread"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/invites": {},
    "/api/v1.00/clients/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/tasks/all": {
      "get": {
        "summary": "Get - My Tasks All",
        "description": "Returns the current users tasks.",
        "operationId": "Get-MyTasksAll",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "x-ms-summary": "All My Tasks",
            "type": "string",
            "default": "application/json",
            "description": "Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "current_page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "current_page"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "uuid"
                      },
                      "taskname": {
                        "type": "string",
                        "description": "taskname"
                      },
                      "projectname": {
                        "type": "string",
                        "description": "projectname"
                      },
                      "projectuuid": {
                        "type": "string",
                        "description": "projectuuid"
                      },
                      "hours": {
                        "type": "string",
                        "description": "hours"
                      },
                      "duedate": {
                        "type": "string",
                        "description": "duedate"
                      },
                      "progress": {
                        "type": "integer",
                        "format": "int32",
                        "description": "progress"
                      }
                    }
                  },
                  "description": "data"
                },
                "first_page_url": {
                  "type": "string",
                  "description": "first_page_url"
                },
                "from": {
                  "type": "integer",
                  "format": "int32",
                  "description": "from"
                },
                "next_page_url": {
                  "type": "string",
                  "description": "next_page_url"
                },
                "path": {
                  "type": "string",
                  "description": "path"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "per_page"
                },
                "prev_page_url": {
                  "type": "string",
                  "description": "prev_page_url"
                },
                "to": {
                  "type": "integer",
                  "format": "int32",
                  "description": "to"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/tasks/new": {
      "get": {
        "summary": "Get - My Tasks New",
        "description": "Returns the current users tasks that are new withing the last 30 days.",
        "operationId": "Get-MyTasksNew",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "My New Tasks",
            "default": "application/json",
            "description": "Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "current_page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "current_page"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "uuid"
                      },
                      "taskname": {
                        "type": "string",
                        "description": "taskname"
                      },
                      "projectname": {
                        "type": "string",
                        "description": "projectname"
                      },
                      "projectuuid": {
                        "type": "string",
                        "description": "projectuuid"
                      },
                      "hours": {
                        "type": "string",
                        "description": "hours"
                      },
                      "duedate": {
                        "type": "string",
                        "description": "duedate"
                      },
                      "progress": {
                        "type": "integer",
                        "format": "int32",
                        "description": "progress"
                      }
                    }
                  },
                  "description": "data"
                },
                "first_page_url": {
                  "type": "string",
                  "description": "first_page_url"
                },
                "from": {
                  "type": "integer",
                  "format": "int32",
                  "description": "from"
                },
                "next_page_url": {
                  "type": "string",
                  "description": "next_page_url"
                },
                "path": {
                  "type": "string",
                  "description": "path"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "per_page"
                },
                "prev_page_url": {
                  "type": "string",
                  "description": "prev_page_url"
                },
                "to": {
                  "type": "integer",
                  "format": "int32",
                  "description": "to"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/tasks/overdue": {
      "get": {
        "summary": "Get - My Tasks Overdue",
        "description": "Returns the current users overdue tasks.",
        "operationId": "Get-MyTasksOverdue",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "x-ms-summary": "My Overdue Tasks",
            "type": "string",
            "default": "application/json",
            "description": "Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "current_page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "current_page"
                },
                "data": {
                  "type": "array",
                  "items": {},
                  "description": "data"
                },
                "first_page_url": {
                  "type": "string",
                  "description": "first_page_url"
                },
                "from": {
                  "type": "string",
                  "description": "from"
                },
                "next_page_url": {
                  "type": "string",
                  "description": "next_page_url"
                },
                "path": {
                  "type": "string",
                  "description": "path"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "per_page"
                },
                "prev_page_url": {
                  "type": "string",
                  "description": "prev_page_url"
                },
                "to": {
                  "type": "string",
                  "description": "to"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/tasks/workload": {},
    "/api/v1.00/hours": {},
    "/api/v1.00/billing": {},
    "/api/v1.00/boardhierarchy/:%7B%7BTree%20UUID%7D%7D": {},
    "/api/v1.00/add/card/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/delete/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/add/message/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/add/comment/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/add/checklist/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/rename/checklist/:%7B%7BChecklist%20UUID%7D%7D": {},
    "/api/v1.00/delete/checklist/:%7B%7BChecklist%20UUID%7D%7D": {},
    "/api/v1.00/add/checklistitem/:%7B%7BChecklist%20UUID%7D%7D": {},
    "/api/v1.00/check/checklistitem/:%7B%7BChecklistItem%20UUID%7D%7D": {},
    "/api/v1.00/uncheck/checklistitem/:%7B%7BChecklistItem%20UUID%7D%7D": {},
    "/api/v1.00/rename/checklistitem/:%7B%7BChecklistItem%20UUID%7D%7D": {},
    "/api/v1.00/delete/checklistitem/:%7B%7BChecklistItem%20UUID%7D%7D": {},
    "/api/v1.00/add/list/:%7B%7Bboard%20UUID%7D%7D": {},
    "/api/v1.00/rename/list/:%7B%7BList%20UUID%7D%7D": {},
    "/api/v1.00/rename/board/:%7B%7BboardUUID%7D%7D": {},
    "/api/v1.00/rename/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/rename/group/:%7B%7BGroup%20UUID%7D%7D": {},
    "/api/v1.00/move/card/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/assign/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/assign/board/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/unassign/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/unassign/board/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/delete/list/:%7B%7BList%20UUID%7D%7D": {},
    "/api/v1.00/tracking/list/:%7B%7BList%20UUID%7D%7D": {},
    "/api/v1.00/tester/list/:%7B%7BList%20UUID%7D%7D": {},
    "/api/v1.00/weighting/list/:%7B%7BList%20UUID%7D%7D": {},
    "/api/v1.00/weight/list/:%7B%7BList%20UUID%7D%7D": {},
    "/api/v1.00/limit/list/:%7B%7BList%20UUID%7D%7D": {},
    "/api/v1.00/progress/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/recurse/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/recurse/board/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/archive/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/unarchive/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/archive/list/:%7B%7BList%20UUID%7D%7D": {},
    "/api/v1.00/unarchive/list/:%7B%7BList%20UUID%7D%7D": {},
    "/api/v1.00/archive/board/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/unarchive/board/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/estimate/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/notify/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/start/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/end/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/due/card/:%7B%7BCard%20UUID%7D%7D": {},
    "/api/v1.00/start/board/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/end/board/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/due/board/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/estimate/board/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/notify/board/:%7B%7BBoard%20UUID%7D%7D": {},
    "/api/v1.00/boardlists/{boardUUID}": {
      "get": {
        "summary": "Get - Board Lists",
        "description": "Returns all lists and their settings applicable to the specified board.",
        "operationId": "Get-BoardLists",
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Board List",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "x-ms-summary": "Board List",
            "description": "Accept",
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "groupuuid": {
                    "type": "string",
                    "description": "groupuuid"
                  },
                  "groupsort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "groupsort"
                  },
                  "boardsort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "boardsort"
                  },
                  "cardlimit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "cardlimit"
                  },
                  "weighting": {
                    "type": "integer",
                    "format": "int32",
                    "description": "weighting"
                  },
                  "weigthinglow": {
                    "type": "integer",
                    "format": "int32",
                    "description": "weigthinglow"
                  },
                  "weightinghigh": {
                    "type": "integer",
                    "format": "int32",
                    "description": "weightinghigh"
                  },
                  "timetracking": {
                    "type": "integer",
                    "format": "int32",
                    "description": "timetracking"
                  },
                  "resetcardprogress": {
                    "type": "integer",
                    "format": "int32",
                    "description": "resetcardprogress"
                  },
                  "allowtester": {
                    "type": "integer",
                    "format": "int32",
                    "description": "allowtester"
                  },
                  "archived": {
                    "type": "integer",
                    "format": "int32",
                    "description": "archived"
                  },
                  "created": {
                    "type": "string",
                    "description": "created"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/boardcards/{boardUUID}": {
      "get": {
        "summary": "Get - Board Cards",
        "description": "Returns all cards and their settings applicable to the specified board.",
        "operationId": "Get-BoardCards",
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Board Cards",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Board Cards",
            "description": "Accept",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "listuuid": {
                    "type": "string",
                    "description": "listuuid"
                  },
                  "progress": {
                    "type": "integer",
                    "format": "int32",
                    "description": "progress"
                  },
                  "weightedprogress": {
                    "type": "integer",
                    "format": "int32",
                    "description": "weightedprogress"
                  },
                  "pinned": {
                    "type": "integer",
                    "format": "int32",
                    "description": "pinned"
                  },
                  "archived": {
                    "type": "integer",
                    "format": "int32",
                    "description": "archived"
                  },
                  "estimatedhours": {
                    "type": "integer",
                    "format": "int32",
                    "description": "estimatedhours"
                  },
                  "clientuuid": {
                    "type": "string",
                    "description": "clientuuid"
                  },
                  "duedate": {
                    "type": "string",
                    "description": "duedate"
                  },
                  "startdate": {
                    "type": "string",
                    "description": "startdate"
                  },
                  "enddate": {
                    "type": "string",
                    "description": "enddate"
                  },
                  "created": {
                    "type": "string",
                    "description": "created"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/listcards/{listUUID}": {
      "get": {
        "summary": "Get - List Cards",
        "description": "Returns all cards and their settings applicable to the specified list.",
        "operationId": "Get-ListCards",
        "parameters": [
          {
            "name": "listUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "List Cards",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "List Cards",
            "description": "Accept",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "listuuid": {
                    "type": "string",
                    "description": "listuuid"
                  },
                  "progress": {
                    "type": "integer",
                    "format": "int32",
                    "description": "progress"
                  },
                  "weightedprogress": {
                    "type": "integer",
                    "format": "int32",
                    "description": "weightedprogress"
                  },
                  "pinned": {
                    "type": "integer",
                    "format": "int32",
                    "description": "pinned"
                  },
                  "archived": {
                    "type": "integer",
                    "format": "int32",
                    "description": "archived"
                  },
                  "estimatedhours": {
                    "type": "integer",
                    "format": "int32",
                    "description": "estimatedhours"
                  },
                  "clientuuid": {
                    "type": "string",
                    "description": "clientuuid"
                  },
                  "duedate": {
                    "type": "string",
                    "description": "duedate"
                  },
                  "startdate": {
                    "type": "string",
                    "description": "startdate"
                  },
                  "enddate": {
                    "type": "string",
                    "description": "enddate"
                  },
                  "created": {
                    "type": "string",
                    "description": "created"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/list/{listUUID}": {
      "get": {
        "summary": "Get - List",
        "description": "Returns the specified list settings.",
        "operationId": "Get-List",
        "parameters": [
          {
            "name": "listUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "List Settings",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "List Settings",
            "description": "Accept",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "groupuuid": {
                    "type": "string",
                    "description": "groupuuid"
                  },
                  "groupsort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "groupsort"
                  },
                  "boardsort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "boardsort"
                  },
                  "cardlimit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "cardlimit"
                  },
                  "weighting": {
                    "type": "integer",
                    "format": "int32",
                    "description": "weighting"
                  },
                  "weigthinglow": {
                    "type": "integer",
                    "format": "int32",
                    "description": "weigthinglow"
                  },
                  "weightinghigh": {
                    "type": "integer",
                    "format": "int32",
                    "description": "weightinghigh"
                  },
                  "timetracking": {
                    "type": "integer",
                    "format": "int32",
                    "description": "timetracking"
                  },
                  "resetcardprogress": {
                    "type": "integer",
                    "format": "int32",
                    "description": "resetcardprogress"
                  },
                  "allowtester": {
                    "type": "integer",
                    "format": "int32",
                    "description": "allowtester"
                  },
                  "archived": {
                    "type": "integer",
                    "format": "int32",
                    "description": "archived"
                  },
                  "created": {
                    "type": "string",
                    "description": "created"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/card/{cardUUID}": {
      "get": {
        "summary": "Get - Card",
        "description": "Returns the specified card settings.",
        "operationId": "Get-Card",
        "parameters": [
          {
            "name": "cardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Card settings",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Card Settings",
            "description": "Accept",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "listuuid": {
                    "type": "string",
                    "description": "listuuid"
                  },
                  "progress": {
                    "type": "integer",
                    "format": "int32",
                    "description": "progress"
                  },
                  "weightedprogress": {
                    "type": "integer",
                    "format": "int32",
                    "description": "weightedprogress"
                  },
                  "pinned": {
                    "type": "integer",
                    "format": "int32",
                    "description": "pinned"
                  },
                  "archived": {
                    "type": "integer",
                    "format": "int32",
                    "description": "archived"
                  },
                  "estimatedhours": {
                    "type": "integer",
                    "format": "int32",
                    "description": "estimatedhours"
                  },
                  "clientuuid": {
                    "type": "string",
                    "description": "clientuuid"
                  },
                  "duedate": {
                    "type": "string",
                    "description": "duedate"
                  },
                  "startdate": {
                    "type": "string",
                    "description": "startdate"
                  },
                  "enddate": {
                    "type": "string",
                    "description": "enddate"
                  },
                  "created": {
                    "type": "string",
                    "description": "created"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/messages/{boardUUID}": {
      "get": {
        "summary": "Get - Board Messages",
        "description": "Returns all chat messages from the specified board.",
        "operationId": "Get-BoardMessages",
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Board Messages",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Board Messages",
            "description": "Accept",
            "default": "application/json"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        }
      }
    },
    "/api/v1.00/tags/:": {},
    "/api/v1.00/members/{boardUUID}": {
      "get": {
        "summary": "Get - Board Members",
        "description": "Returns all members and their permission levels associated with the specified board.",
        "operationId": "Get-BoardMembers",
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Board Members",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Board Members",
            "description": "Accept",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "Tree Owner": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "carduuid": {
                        "type": "string",
                        "description": "carduuid"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "email": {
                        "type": "string",
                        "description": "email"
                      },
                      "image": {
                        "type": "string",
                        "description": "image"
                      },
                      "uuid": {
                        "type": "string",
                        "description": "uuid"
                      },
                      "status": {
                        "type": "string",
                        "description": "status"
                      },
                      "inherited": {
                        "type": "integer",
                        "format": "int32",
                        "description": "inherited"
                      },
                      "inheritedfrom": {
                        "type": "string",
                        "description": "inheritedfrom"
                      },
                      "immutable": {
                        "type": "boolean",
                        "description": "immutable"
                      },
                      "id": {
                        "type": "string",
                        "description": "id"
                      }
                    }
                  },
                  "description": "Tree Owner"
                },
                "Guest": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "carduuid": {
                        "type": "string",
                        "description": "carduuid"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "email": {
                        "type": "string",
                        "description": "email"
                      },
                      "image": {
                        "type": "string",
                        "description": "image"
                      },
                      "uuid": {
                        "type": "string",
                        "description": "uuid"
                      },
                      "status": {
                        "type": "string",
                        "description": "status"
                      },
                      "inherited": {
                        "type": "integer",
                        "format": "int32",
                        "description": "inherited"
                      },
                      "inheritedfrom": {
                        "type": "string",
                        "description": "inheritedfrom"
                      },
                      "id": {
                        "type": "string",
                        "description": "id"
                      }
                    }
                  },
                  "description": "Guest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/boardrecords/{boardUUID}": {
      "get": {
        "summary": "Get - Board Records",
        "description": "Returns all records of activity that have happened on the specified board.",
        "operationId": "Get-BoardRecords",
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Board Records",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Board Records",
            "description": "Accept",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "json": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "description"
                      },
                      "show": {
                        "type": "boolean",
                        "description": "show"
                      },
                      "user_name": {
                        "type": "string",
                        "description": "user_name"
                      },
                      "photo": {
                        "type": "string",
                        "description": "photo"
                      },
                      "date": {
                        "type": "string",
                        "description": "date"
                      },
                      "what": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "name"
                          },
                          "board_uuid": {
                            "type": "string",
                            "description": "board_uuid"
                          }
                        },
                        "description": "what"
                      }
                    },
                    "description": "json"
                  },
                  "created": {
                    "type": "string",
                    "description": "created"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/listrecords/{listUUID}": {
      "get": {
        "summary": "Get - List Records",
        "description": "Returns all records of activity that have happened on the specified list.",
        "operationId": "Get-ListRecords",
        "parameters": [
          {
            "name": "listUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "List Records",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "List Records",
            "description": "Accept",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "json": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "description"
                      },
                      "show": {
                        "type": "boolean",
                        "description": "show"
                      },
                      "user_name": {
                        "type": "string",
                        "description": "user_name"
                      },
                      "photo": {
                        "type": "string",
                        "description": "photo"
                      },
                      "date": {
                        "type": "string",
                        "description": "date"
                      }
                    },
                    "description": "json"
                  },
                  "created": {
                    "type": "string",
                    "description": "created"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/clients/{boardUUID}": {
      "get": {
        "summary": "Get - Tree Clients",
        "description": "Returns all clients accessible by the current user and specified Project Tree.",
        "operationId": "Get-TreeClients",
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Tree Clients",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Tree Clients",
            "description": "Accept",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "current_page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "current_page"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "uuid"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "company": {
                        "type": "string",
                        "description": "company"
                      },
                      "email": {
                        "type": "string",
                        "description": "email"
                      },
                      "phone": {
                        "type": "string",
                        "description": "phone"
                      },
                      "address": {
                        "type": "string",
                        "description": "address"
                      },
                      "id": {
                        "type": "string",
                        "description": "id"
                      }
                    }
                  },
                  "description": "data"
                },
                "first_page_url": {
                  "type": "string",
                  "description": "first_page_url"
                },
                "from": {
                  "type": "integer",
                  "format": "int32",
                  "description": "from"
                },
                "next_page_url": {
                  "type": "string",
                  "description": "next_page_url"
                },
                "path": {
                  "type": "string",
                  "description": "path"
                },
                "per_page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "per_page"
                },
                "prev_page_url": {
                  "type": "string",
                  "description": "prev_page_url"
                },
                "to": {
                  "type": "integer",
                  "format": "int32",
                  "description": "to"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/boardhierarchy/{boardUUID}": {
      "get": {
        "summary": "Get - Board Hierarchy",
        "description": "Returns the hierarchical structure for the specified board.",
        "operationId": "Get-BoardHierarchy",
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Board Hierarchy",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Board Hierarchy",
            "description": "Accept",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dabbed10559a11ec986459ee7f940894": {
                    "type": "object",
                    "properties": {
                      "hex": {
                        "type": "string",
                        "description": "hex"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "children": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "41eb1000ca5a5d2bbfb7b5c2974e1020": {
                              "type": "object",
                              "properties": {
                                "hex": {
                                  "type": "string",
                                  "description": "hex"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "name"
                                },
                                "children": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "children"
                                }
                              },
                              "description": "41eb1000ca5a5d2bbfb7b5c2974e1020"
                            }
                          }
                        },
                        "description": "children"
                      }
                    },
                    "description": "dabbed10559a11ec986459ee7f940894"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/add/card/{boardUUID}": {
      "post": {
        "summary": "Action - Add Card",
        "description": "Adds a card to the specified board within the specified list.",
        "operationId": "Action-AddCard",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Add card",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Add card",
            "description": "Accept",
            "default": "application/json",
            "format": "byte"
          },
          {
            "name": "body",
            "in": "body",
            "x-ms-summary": "Add card",
            "description": "Accept",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of this new card",
                  "title": "Name"
                },
                "listuuid": {
                  "type": "string",
                  "description": "Identifier of the list to put the new card into",
                  "title": "List UUID"
                }
              },
              "required": [
                "listuuid",
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "carduuid": {
                  "type": "string",
                  "description": "carduuid"
                },
                "board_update": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "lastUpdate"
                    },
                    "thisUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "thisUpdate"
                    }
                  },
                  "description": "board_update"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/delete/card/{cardUUID}": {
      "post": {
        "summary": "Action - Delete Card",
        "description": "Deletes the specified card/board and its child objects as long as confirmed is 1. Please ensure that that all affected child objects are good to be deleted as well.",
        "operationId": "Action-DeleteCard",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Delete Cards",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Delete Cards",
            "description": "Accept",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Delete Cards",
            "description": "Accept",
            "schema": {
              "type": "object",
              "properties": {
                "confirmed": {
                  "type": "integer",
                  "description": "Setting this to 1 will confirm the deletion",
                  "title": "Confirmed",
                  "format": "int32"
                }
              },
              "required": [
                "confirmed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "carduuid": {
                  "type": "string",
                  "description": "carduuid"
                },
                "boarduuid": {
                  "type": "string",
                  "description": "boarduuid"
                },
                "board_update": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "lastUpdate"
                    },
                    "thisUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "thisUpdate"
                    }
                  },
                  "description": "board_update"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/add/message/{boardUUID}": {
      "post": {
        "summary": "Action - Add Message to Board",
        "description": "Adds a message to the specified boards Messaging tray.",
        "operationId": "Action-AddMessageToBoard",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Add Message to Boards",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Add Message to Boards",
            "description": "Accept",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Add Message to Boards",
            "description": "Accept",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Message to send to Board Messaging",
                  "title": "Message"
                }
              },
              "required": [
                "message"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "messageuuid": {
                  "type": "string",
                  "description": "messageuuid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/add/checklist/{cardUUID}": {
      "post": {
        "summary": "Action - Add Checklist to Card",
        "description": "Adds an empty checklist to the card specified.",
        "operationId": "Action-AddChecklistToCard",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Add Checklist to Card",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Add Checklist to Card",
            "description": "Accept",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Add Checklist to Card",
            "description": "Accept",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new checklist to add to the specified card",
                  "title": "Name"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "checklistuuid": {
                  "type": "string",
                  "description": "checklistuuid"
                },
                "board_update": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "lastUpdate"
                    },
                    "thisUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "thisUpdate"
                    }
                  },
                  "description": "board_update"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/add/list/{baordUUID}": {
      "post": {
        "summary": "Action - Add List",
        "description": "Adds a list to the board specified with the name specified.",
        "operationId": "Action-AddList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "baordUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Add List",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Add List",
            "description": "Accept",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Add List",
            "description": "Accept",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Add a new list to the board specified",
                  "title": "Name"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "board_update": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "lastUpdate"
                    },
                    "thisUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "thisUpdate"
                    }
                  },
                  "description": "board_update"
                },
                "listuuid": {
                  "type": "string",
                  "description": "listuuid"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code"
                },
                "order": {
                  "type": "integer",
                  "format": "int32",
                  "description": "order"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/rename/list/{listUUID}": {
      "post": {
        "summary": "Action - List Rename",
        "description": "Renames the specified list to the name specified.",
        "operationId": "Action-ListRename",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "listUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Rename List",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Rename List",
            "description": "Accept",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Rename List",
            "description": "Accept",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Rename the list specified",
                  "title": "Name"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "board_update": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "lastUpdate"
                    },
                    "thisUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "thisUpdate"
                    }
                  },
                  "description": "board_update"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/rename/board/{boardUUID}": {
      "post": {
        "summary": "Action - Board Rename",
        "description": "Renames the board specified to the name specified.",
        "operationId": "Action-BoardRename",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Rename Board",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Rename Board",
            "description": "Accept",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Rename Board",
            "description": "Accept",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Rename the board specified",
                  "title": "Name"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "board_update": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "lastUpdate"
                    },
                    "thisUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "thisUpdate"
                    }
                  },
                  "description": "board_update"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/assign/card/{cardUUID}": {
      "post": {
        "summary": "Action - Assign to Card",
        "description": "Assign a new or existing user to this Card or Board with a specified Role.",
        "operationId": "Action-AssignToCard",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Assign User to Card",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Assign User to Card",
            "description": "Accept",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Assign User to Card",
            "description": "Accept",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email address of the person whom you wish to invite or assign.",
                  "title": "Email"
                },
                "role": {
                  "type": "string",
                  "description": "The role (Chosen from the list of available roles) you wish to assign.",
                  "title": "Role"
                }
              },
              "required": [
                "email",
                "role"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "response": {
                  "type": "string",
                  "description": "response"
                },
                "carduuid": {
                  "type": "string",
                  "description": "carduuid"
                },
                "board_update": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "lastUpdate"
                    },
                    "thisUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "thisUpdate"
                    }
                  },
                  "description": "board_update"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/assign/board/{boardUUID}": {
      "post": {
        "summary": "Action - Assign to Board",
        "description": "Assign a new or existing user to this Board with a specified Role.",
        "operationId": "Action-AssignToBoard",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Assign User to Board",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Assign User to Board",
            "description": "Accept",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Assign User to Board",
            "description": "Accept",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email address of the person whom you wish to invite or assign.",
                  "title": "Email"
                },
                "role": {
                  "type": "string",
                  "description": "The role (Chosen from the list of available roles) you wish to assign.",
                  "title": "Role"
                }
              },
              "required": [
                "email",
                "role"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "response": {
                  "type": "string",
                  "description": "response"
                },
                "carduuid": {
                  "type": "string",
                  "description": "carduuid"
                },
                "board_update": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "lastUpdate"
                    },
                    "thisUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "thisUpdate"
                    }
                  },
                  "description": "board_update"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/unassign/card/{cardUUID}": {
      "post": {
        "summary": "Action - Unassign from Card",
        "description": "Unassign existing user from this Card or Board with a specified Role.",
        "operationId": "Action-UnassignFromCard",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Unassign from Card",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Unassign from Card",
            "description": "Accept",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Unassign from Card",
            "description": "Accept",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email address of the person whom you wish to unassign.",
                  "title": "Email"
                },
                "role": {
                  "type": "string",
                  "description": "The role (Chosen from the list of available roles) you wish to unassign.",
                  "title": "Role"
                }
              },
              "required": [
                "email",
                "role"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "response": {
                  "type": "string",
                  "description": "response"
                },
                "carduuid": {
                  "type": "string",
                  "description": "carduuid"
                },
                "board_update": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "lastUpdate"
                    },
                    "thisUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "thisUpdate"
                    }
                  },
                  "description": "board_update"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/unassign/board/{boardUUID}": {
      "post": {
        "summary": "Action - Unassign from Board",
        "description": "Unassign existing user from this Card with a specified Role.",
        "operationId": "Action-UnassignFromBoard",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Unassign from Board",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Unassign from Board",
            "description": "Accept",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Unassign from Board",
            "description": "Accept",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email address of the person whom you wish to unassign.",
                  "title": "Email"
                },
                "role": {
                  "type": "string",
                  "description": "The role (Chosen from the list of available roles) you wish to unassign.",
                  "title": "Role"
                }
              },
              "required": [
                "email",
                "role"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "response": {
                  "type": "string",
                  "description": "response"
                },
                "carduuid": {
                  "type": "string",
                  "description": "carduuid"
                },
                "board_update": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "lastUpdate"
                    },
                    "thisUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "thisUpdate"
                    }
                  },
                  "description": "board_update"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.00/delete/list/{listUUID}": {
      "post": {
        "summary": "Action - Delete List",
        "description": "Deletes the specified list as long as confirm is 1 and the list is empty.",
        "operationId": "Action-DeleteList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "listUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Delete List",
            "x-ms-url-encoding": "single",
            "description": "Accept"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Delete List",
            "description": "Accept",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Delete List",
            "description": "Accept",
            "schema": {
              "type": "object",
              "properties": {
                "confirm": {
                  "type": "integer",
                  "description": "Setting this to 1 will confirm the deletion",
                  "title": "Enter 1 Confirm",
                  "format": "int32"
                }
              },
              "required": [
                "confirm"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "listuuid": {
                  "type": "string",
                  "description": "listuuid"
                },
                "boarduuid": {
                  "type": "string",
                  "description": "boarduuid"
                },
                "board_update": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "lastUpdate"
                    },
                    "thisUpdate": {
                      "type": "integer",
                      "format": "int32",
                      "description": "thisUpdate"
                    }
                  },
                  "description": "board_update"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2-auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.krozu.com/oauth/authorize",
      "tokenUrl": "https://app.krozu.com/oauth/token",
      "scopes": {
        "profile-public profile-email profile-owned get-info perform-actions": "profile-public profile-email profile-owned get-info perform-actions"
      }
    }
  },
  "security": [
    {
      "oauth2-auth": [
        "profile-public profile-email profile-owned get-info perform-actions"
      ]
    }
  ],
  "tags": []
}