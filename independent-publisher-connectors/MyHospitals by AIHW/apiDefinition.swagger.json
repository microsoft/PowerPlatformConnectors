{
  "swagger": "2.0",
  "info": {
    "title": "AIHW MyHospitals",
    "description": "The MyHospitals national reporting platform allows users to explore information about their local hospital and Local Hospital Network (LHN), as well as trends across Australia",
    "version": "1.0",
    "contact": {
      "name": "Paul Culmsee",
      "url": "https://www.sevensigma.com.au",
      "email": "paul.culmsee@sevensigma.com.au"
    }
  },
  "host": "myhospitalsapi.aihw.gov.au",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/caveats": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CaveatModel"
                  }
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Caveats",
        "description": "Gets a list of caveats.",
        "operationId": "GetCaveats",
        "parameters": [{
          "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/caveats/{caveat-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/CaveatModel"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Single Caveat",
        "description": "Gets a caveat matching the supplied caveat code.",
        "operationId": "GetCaveat",
        "parameters": [{
            "name": "caveat-code",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Caveat code",
            "description": "Caveat code",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetCaveats",
              "value-path": "caveat_code",
              "value-collection": "result",
              "value-title": "caveat_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/datasets": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DatasetModel"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Datasets",
        "description": "Gets a list of datasets, optionally filtered by a list of measure and reported measure codes. Matching within each filter is by logical disjunction (OR) and matching across filters is by logical conjunction (AND).",
        "operationId": "GetDataSets",
        "parameters": [{
            "name": "measure_code",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The measure codes.",
            "x-ms-summary": "Measure codes",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasures",
              "value-path": "measure_code",
              "value-collection": "result",
              "value-title": "measure_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "name": "reported_measure_code",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The reported measure codes.",
            "x-ms-summary": "The reported measure codes",
            "x-ms-dynamic-values": {
              "operationId": "GetReportedMeasures",
              "value-path": "measure/measure_code",
              "value-collection": "result",
              "value-title": "measure/measure_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/datasets/{dataset-id}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/DatasetModel"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Single Dataset",
        "description": "Gets a single dataset matching the supplied dataset id.",
        "operationId": "GetDataSet",
        "parameters": [{
            "name": "dataset-id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The dataset Id.",
            "x-ms-summary": "Dataset Id",
            "format": "int32",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetDataSets",
              "value-path": "data_set_id",
              "value-collection": "result",
              "value-title": "data_set_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/datasets/{dataset-id}/data-items": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DataItemModel"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "description": "Gets a list of data items for a dataset,, optionally filtered, using logical disjunction (OR), by a list of reporting unit codes.",
        "summary": "Get Dataset Items",
        "operationId": "GetDatasetItems",
        "parameters": [{
            "name": "dataset-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The dataset Id.",
            "x-ms-summary": "Dataset Id",
            "x-ms-url-encoding": "single"
          }, {
            "name": "reporting_unit_code",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The reporting unit codes.",
            "x-ms-summary": "Reporting unit codes",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnits",
              "value-path": "reporting_unit_code",
              "value-collection": "result",
              "value-title": "reporting_unit_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/measure-categories": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MeasureCategoryModel"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Measure Categories",
        "description": "Gets a list of measure categories.",
        "operationId": "GetMeasureCategories",
        "parameters": [{
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/measure-categories/{measure-category-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/MeasureCategoryModel"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Single Measure Category",
        "description": "Gets a single measure category matching the supplied measure category code.",
        "operationId": "GetSingleMeasureCategory",
        "parameters": [{
            "name": "measure-category-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The measure category code.",
            "x-ms-summary": "Measure category code",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasureCategories",
              "value-path": "measure_category_code",
              "value-collection": "result",
              "value-title": "measure_category_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/measure-categories/{measure-category-code}/measures": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MeasureModel"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Measures for a Measure Category",
        "description": "Gets a list of measures for the specified measure category code.",
        "operationId": "GetSingleMeasureCategoryMeasures",
        "parameters": [{
            "name": "measure-category-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The measure category code.",
            "x-ms-summary": "Measure category code.",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasureCategories",
              "value-path": "measure_category_code",
              "value-collection": "result",
              "value-title": "measure_category_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/reported-measure-categories": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ReportedMeasureCategoryModel"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Reported Measure Categories",
        "description": "Gets list of all reported measure categories available.",
        "operationId": "GetReportedMeasureCategories",
        "parameters": [{
          "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/reported-measure-categories/{reported-measure-category-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/ReportedMeasureCategoryModel"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Reported Measure Categories for Measure Category Code",
        "description": "Gets a list reported measure categories matching the supplied reported measure category codes. NOTE: Reported measure codes are not constrained to be unique in the system.",
        "operationId": "GetReportedMeasureCategory",
        "parameters": [{
            "name": "reported-measure-category-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The reported measure category code.",
            "x-ms-summary": "Reported measure category code",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetReportedMeasureCategories",
              "value-path": "reported_measure_category_code",
              "value-collection": "result",
              "value-title": "reported_measure_category_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/reported-measure-categories/{reported-measure-category-code}/reported-measures": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ReportedMeasureModel"
                  }
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Reported Measures for Reported Measure Category",
        "description": "Gets a list of all reported measures for a specified reported measure category code.",
        "operationId": "GetReportedMeasureCategoryMeasures",
        "parameters": [{
            "name": "reported-measure-category-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Reported Measure Category.",
            "x-ms-summary": "Reported Measure Category.",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetReportedMeasureCategories",
              "value-path": "reported_measure_category_code",
              "value-collection": "result",
              "value-title": "reported_measure_category_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/reported-measures": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ReportedMeasureModel"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Reported Measures",
        "description": "Gets list of reported measures, optionally filtered by a list of measure codes.",
        "operationId": "GetReportedMeasures",
        "parameters": [{
            "name": "measure_code",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Measure codes",
            "description": "The measure codes",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasures",
              "value-path": "measure_code",
              "value-collection": "result",
              "value-title": "measure_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/reported-measures/{reported-measure-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/ReportedMeasureModel"
            }
          }
        },
        "summary": "Get Single Reported Measure",
        "description": "Gets a single reported measure.",
        "operationId": "GetSingleReportedMeasure",
        "parameters": [{
            "name": "reported-measure-code",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Reported measure category codes.",
            "description": "The reported measure category codes.",
            "x-ms-url-encoding": "single"
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/reported-measures/{reported-measure-code}/data-items": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DataItemModel"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Data Items for Reported Measure",
        "description": "Gets a list of all data items for the specified reported measure.",
        "operationId": "GetSingleReportedMeasureDataItems",
        "parameters": [{
            "name": "reported-measure-code",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Reported measure category codes.",
            "description": "The reported measure category codes.",
            "x-ms-url-encoding": "single"
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/reporting-units": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ReportingUnitModel"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Reporting Units",
        "description": "Gets list of all reporting units, optionally filtered, using logical disjunction (OR), by a list of reporting unit type codes.",
        "operationId": "GetReportingUnits",
        "parameters": [{
            "name": "reporting_unit_type_code",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The reporting unit type codes.",
            "x-ms-summary": "Reporting unit type codes",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnitTypes",
              "value-path": "reporting_unit_type_code",
              "value-collection": "result",
              "value-title": "reporting_unit_type_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/reporting-unitsbytypehelper": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ReportingUnitModel"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Reporting Units By Type",
        "description": "Gets list of all reporting units, optionally filtered, using logical disjunction (OR), by a list of reporting unit type codes.",
        "operationId": "GetReportingUnitsByTypeHelper",
        "parameters": [{
            "name": "reporting_unit_type_code",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The reporting unit type codes.",
            "x-ms-summary": "Reporting unit type codes",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnitTypes",
              "value-path": "reporting_unit_type_code",
              "value-collection": "result",
              "value-title": "reporting_unit_type_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/reporting-units/{reporting-unit-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/ReportingUnitModel"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Single Reporting Unit",
        "description": "Gets a single reporting unit matching the supplied reporting unit code.",
        "operationId": "GetSingleReportingUnit",
        "parameters": [{
            "name": "reporting-unit-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The reporting unit code.",
            "x-ms-summary": "Reporting unit code",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnits",
              "value-path": "reporting_unit_code",
              "value-collection": "result",
              "value-title": "reporting_unit_name"
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/reporting-units/{reporting-unit-code}/data-items": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DataItemModel"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Data Items for Reporting Unit",
        "description": "Gets a list of all data items for the specified reporting unit.",
        "operationId": "GetSingleReportingUnitDataitems",
        "parameters": [{
            "name": "reporting-unit-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The reporting unit code.",
            "x-ms-summary": "Reporting unit code.",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnits",
              "value-path": "reporting_unit_code",
              "value-collection": "result",
              "value-title": "reporting_unit_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/reporting-units/{reporting-unit-code}/measures-available": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MeasureSummaryModel"
                  }
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Measures with Data Available for Reporting Unit",
        "description": "Get list of all measures that have data available for the specified reporting unit.",
        "operationId": "GetSingleReportingUnitMeasures",
        "parameters": [{
            "name": "reporting-unit-code",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Reporting unit code",
            "description": "Reporting unit code",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnits",
              "value-path": "reporting_unit_code",
              "value-collection": "result",
              "value-title": "reporting_unit_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/reporting-units/{reporting-unit-code}/bricks-available": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Brick Codes for Reporting Unit",
        "description": "Gets list of all brick codes available for the specified reporting unit.",
        "operationId": "GetSingleReportingUnitBricks",
        "parameters": [{
            "name": "reporting-unit-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The reporting unit code.",
            "x-ms-summary": "Reporting unit code",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnits",
              "value-path": "reporting_unit_code",
              "value-collection": "result",
              "value-title": "reporting_unit_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/reporting-unit-types": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ReportingUnitType"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Reporting Unit Types",
        "description": "Gets a list of reporting unit types.",
        "operationId": "GetReportingUnitTypes",
        "parameters": [{
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/reporting-unit-types/{reporting-unit-type-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/ReportingUnitType"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Single Reporting Unit Type",
        "description": "Gets a single reporting unit type matching the supplied reporting unit type code.",
        "operationId": "GetSingleReportingUnitType",
        "parameters": [{
            "name": "reporting-unit-type-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The reporting unit type code.",
            "x-ms-summary": "Reporting unit type code.",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnitTypes",
              "value-path": "reporting_unit_type_code",
              "value-collection": "result",
              "value-title": "reporting_unit_type_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/reporting-unit-types/{reporting-unit-type-code}/bricks-available": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {},
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Dictionary of Reporting Unit Codes and Available Bricks",
        "operationId": "GetSingleReportUnitTypeBricks",
        "parameters": [{
            "name": "reporting-unit-type-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The reporting unit type code.",
            "x-ms-summary": "Reporting unit type code.",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnitTypes",
              "value-path": "reporting_unit_type_code",
              "value-collection": "result",
              "value-title": "reporting_unit_type_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }
        ],
        "description": "Gets a dictionary of reporting units codes and their available bricks, for the specified reporting unit type."
      }
    },
    "/measures": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "measure_categories": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/MeasureCategoryModel"
                        },
                        "description": "measure_categories"
                      },
                      "measure_code": {
                        "type": "string",
                        "description": "measure_code"
                      },
                      "measure_name": {
                        "type": "string",
                        "description": "measure_name"
                      },
                      "meta_tags": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/MetaTagModel"
                        },
                        "description": "List of MetaTags applicable to this Measure. This list will be empty if there are no MetaTags."
                      },
                      "units": {
                        "$ref": "#/definitions/UnitsModel"
                      }
                    }
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Measures",
        "description": "Gets list of all measures, optionally filtered, using logical disjunction (OR), by a list of measure category codes.",
        "operationId": "GetMeasures",
        "parameters": [{
            "name": "measure_category_code",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The measure category codes.",
            "x-ms-summary": "Measure category codes",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasureCategories",
              "value-path": "measure_category_code",
              "value-collection": "result",
              "value-title": "measure_category_name",
              "parameters": {
                "Accept": "application/json"
              }
            },
            "x-ms-visibility": "important"
          }, {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/measuresbycategoeryhelper": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "measure_categories": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/MeasureCategoryModel"
                        },
                        "description": "measure_categories"
                      },
                      "measure_code": {
                        "type": "string",
                        "description": "measure_code"
                      },
                      "measure_name": {
                        "type": "string",
                        "description": "measure_name"
                      },
                      "meta_tags": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/MetaTagModel"
                        },
                        "description": "List of MetaTags applicable to this Measure. This list will be empty if there are no MetaTags."
                      },
                      "units": {
                        "$ref": "#/definitions/UnitsModel"
                      }
                    }
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get a list of measures by category",
        "description": "Gets list of all measures, mandatory filtered, using logical disjunction (OR), by a list of measure category codes.",
        "operationId": "GetMeasuresByCategoryHelper",
        "parameters": [{
            "name": "measure_category_code",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The measure category codes.",
            "x-ms-summary": "Measure category codes",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasureCategories",
              "value-path": "measure_category_code",
              "value-collection": "result",
              "value-title": "measure_category_name",
              "parameters": {
                "Accept": "application/json"
              }
            },
            "x-ms-visibility": "important"
          }, {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/measures/{measure-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {
                    "measure_categories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/MeasureCategoryModel"
                      },
                      "description": "measure_categories"
                    },
                    "measure_code": {
                      "type": "string",
                      "description": "measure_code"
                    },
                    "measure_name": {
                      "type": "string",
                      "description": "measure_name"
                    },
                    "meta_tags": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/MetaTagModel"
                      },
                      "description": "List of MetaTags applicable to this Measure. This list will be empty if there are no MetaTags."
                    },
                    "units": {
                      "$ref": "#/definitions/UnitsModel"
                    }
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Single Measure",
        "description": "Gets a single measure matching the supplied measure code.",
        "operationId": "GetMeasure",
        "parameters": [{
            "name": "measure-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The measure category codes.",
            "x-ms-summary": "Measure category codes",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasures",
              "value-path": "measure_code",
              "value-collection": "result",
              "value-title": "measure_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/measures/{measure-code}/reporting-units-available": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ReportingUnitSummaryModel"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Reporting Units Available for Measure",
        "description": "Gets a list of all reporting units that have data available for the specified measure.",
        "operationId": "GetReportingUnitsForMeasure",
        "parameters": [{
            "name": "measure-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The measure codes.",
            "x-ms-summary": "Measure codes",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasures",
              "value-path": "measure_code",
              "value-collection": "result",
              "value-title": "measure_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/measures/{measure-code}/data-items": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DataItemModel"
                  },
                  "description": "result"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Data Items for Measure",
        "description": "Gets a list of all data items for the specified measure.",
        "operationId": "GetMeasureDataItems",
        "parameters": [{
            "name": "measure-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The measure code.",
            "x-ms-summary": "The measure code",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasures",
              "value-path": "measure_code",
              "value-collection": "result",
              "value-title": "measure_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/measure-downloads/measure-download-codes": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {},
                  "description": "result"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Name": {
                        "type": "string",
                        "description": "Name"
                      },
                      "Details": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/DatasheetConfigurationSummaryModel"
                        },
                        "description": "Details"
                      }
                    }
                  },
                  "description": "results"
                }
              }
            }
          }
        },
        "summary": "Get Measure Downloads Available",
        "description": "Gets dictionary, indexed by the measure download code, of all available measure download codes and descriptions that can be used in the measure download API call.",
        "operationId": "GetMeasureDownloads",
        "parameters": [{
          "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/measure-downloads1/{measure-download-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [{
            "name": "measure-download-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The measure download code.",
            "x-ms-summary": "The measure download code",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasureDownloads",
              "value-path": "Name",
              "value-collection": "results",
              "value-title": "Name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "x-ms-visibility": "internal"
          }
        ],
        "summary": "Get Measure Download",
        "description": "Gets a measure download, in XLSX format, for the supplied measure download code.",
        "operationId": "GetMeasureDownload"
      }
    },
    "/measure-downloads/across-reporting-units/{measure-download-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [{
            "name": "measure-download-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The measure download code.",
            "x-ms-summary": "The measure download code",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasureDownloads",
              "value-path": "Name",
              "value-collection": "results",
              "value-title": "Name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "x-ms-visibility": "internal"
          }
        ],
        "summary": "Get Measure Across Reporting Unit Download",
        "description": "Gets a measure across reporting unit download, in XLSX format, for the supplied measure download code.",
        "operationId": "GetMeasureReportingunitDownload"
      }
    },
    "/reporting-units-downloads/datasheet-codes": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {},
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Reporting Unit Datasheet Codes Available",
        "description": "Gets dictionary, indexed by the datasheet code, of all available reporting unit datasheet codes and descriptions that can be used in the reporting unit download API call.",
        "operationId": "GetReportingUnitDatasheetCodes",
        "parameters": [{
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/reporting-units-downloads/mappings": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Reporting Unit Mapping Download",
        "description": "Gets the reporting unit mapping download, in XLSX format.",
        "operationId": "GetReportingUnitMappingDownload",
        "parameters": [{
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/reporting-units-downloads/{datasheet-code}/{reporting-unit-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Reporting Unit Data Download",
        "description": "Gets a reporting unit data download, in XLSX format, for the supplied reporting unit code and datasheet code.",
        "operationId": "GetsReportingUnitDataDownload",
        "parameters": [{
            "name": "datasheet-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The datasheet code",
            "x-ms-summary": "The datasheet code",
            "default": "myh-reporting-unit",
            "x-ms-url-encoding": "single",
            "x-ms-visibility": "advanced"
          }, {
            "name": "reporting-unit-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The reporting unit code",
            "x-ms-summary": "Reporting unit code",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnits",
              "value-path": "reporting_unit_code",
              "value-collection": "result",
              "value-title": "reporting_unit_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/simple-downloads/download-codes": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Simple Downloads Available",
        "description": "Gets dictionary, indexed by the simple download code, of all available simple download codes and descriptions that can be used in the simple download API call.",
        "operationId": "GetSimpleDownloads",
        "parameters": [{
          "$ref": "#/parameters/Accept"
          }
        ]
      }
    },
    "/simple-downloads1/{download-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Simple Download",
        "description": "Gets a simple download, in XLSX format, for the supplied download code.",
        "operationId": "GetSimpleDownload",
        "parameters": [{
            "name": "download-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The download code.",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "The download code."
          }, {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/flat-formatted-data-extract/{measure-category-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/PaginatedFormattedDataExtractModel"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Flat Formatted Data",
        "parameters": [{
            "name": "measure-category-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specifies what measure category code the data should belongs to.",
            "x-ms-summary": "Measure category code",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasureCategories",
              "value-path": "measure_category_code",
              "value-collection": "result",
              "value-title": "measure_category_name"
            }
          }, {
            "name": "measure_code",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasuresByCategoryHelper",
              "value-path": "measure_code",
              "value-collection": "result",
              "value-title": "measure_name",
              "parameters": {
                "measure_category_code": {
                  "parameter": "measure-category-code"
                }
              }
            },
            "description": "Only include data that matches the specified measures",
            "x-ms-summary": "Measures"
          }, {
            "name": "reporting_unit_type_code",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnitTypes",
              "value-path": "reporting_unit_type_code",
              "value-collection": "result",
              "value-title": "reporting_unit_type_name"
            },
            "description": "Only include data for the specified reporting unit types.",
            "x-ms-summary": "Reporting unit type"
          }, {
            "name": "reporting_unit_code",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only include data for the specified reporting units.",
            "x-ms-summary": "Reporting unit",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnitsByTypeHelper",
              "value-path": "reporting_unit_code",
              "value-collection": "result",
              "value-title": "reporting_unit_name",
              "parameters": {
                "reporting_unit_type_code": {
                  "parameter": "reporting_unit_type_code"
                }
              }
            }
          }, {
            "name": "skip",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "The number of records to skip. This is used in the pagination of the data results to determine where to start taking the results from.",
            "x-ms-summary": "Number of records to skip",
            "default": 0,
            "x-ms-visibility": "advanced"
          }, {
            "name": "top",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "The number of records to take. This is used in the pagination of the data results to determine how many results are retrieved. This value must be between 1 and 1000.",
            "x-ms-summary": "Number of records to take",
            "default": 1000,
            "x-ms-visibility": "advanced"
          }, {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "startDate can be a date of the form yyyy, yyyy-MM or yyyy-MM-dd. When only a year is specified, the search period starts at the beginning of the year, when a year and month are specified, the search period starts at the beginning of the month",
            "x-ms-summary": "Start date"
          }, {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "endDate can be a date of the form yyyy, yyyy-MM or yyyy-MM-dd. When only a year is specified, the search period ends at the end of the year, when a year and month are specified, the search period ends at the end of the month.",
            "x-ms-summary": "End date"
          }, {
          "$ref": "#/parameters/Accept"
          }
        ],
        "description": "Gets formatted data in a flattened structure with each item corresponding to a single data point. Data is restricted to within a single measure category and can be optionally filtered by measure, reporting unit code, reporting unit type and reporting dates. Matching within each filter is by logical disjunction (OR) and matching across filters is by logical conjunction (AND). NOTE: There is currently a pagination restriction on this query that restricts requests to a maximum of 1000 results. Use skip and top to control this pagination. Sorting is not currently available.",
        "operationId": "GetFlatFormattedData"
      }
    },
    "/flat-data-extract/{measure-category-code}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/PaginatedFormattedDataExtractModel"
                },
                "version_information": {
                  "$ref": "#/definitions/VersionInformation"
                }
              }
            }
          }
        },
        "summary": "Get Flat Data",
        "description": "Gets data in a flattened structure with each item corresponding to a single data point. Data is restricted to within a single measure category and can be optionally filtered by measure, reporting unit type and reporting dates. Matching within each filter is by logical disjunction (OR) and matching across filters is by logical conjunction (AND). NOTE: There is currently a pagination restriction on this query that restricts requests to a maximum of 1000 results. Use skip and top to control this pagination. Sorting is not currently available.",
        "operationId": "GetFlatData",
        "parameters": [{
            "name": "measure-category-code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specifies what measure category code the data should belongs to.",
            "x-ms-summary": "Measure category code",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasureCategories",
              "value-path": "measure_category_code",
              "value-collection": "result",
              "value-title": "measure_category_name",
              "parameters": {
                "Accept": "application/json"
              }
            }
          }, {
            "name": "measure_code",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetMeasuresByCategoryHelper",
              "value-path": "measure_code",
              "value-collection": "result",
              "value-title": "measure_name",
              "parameters": {
                "measure_category_code": {
                  "parameter": "measure-category-code"
                },
                "Accept": "application/json"
              }
            },
            "description": "Only include data that matches the specified measures",
            "x-ms-summary": "Measures"
          }, {
            "name": "reporting_unit_type_code",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnitTypes",
              "value-path": "reporting_unit_type_code",
              "value-collection": "result",
              "value-title": "reporting_unit_type_name",
              "parameters": {
                "Accept": "application/json"
              }
            },
            "description": "Only include data for the specified reporting unit types.",
            "x-ms-summary": "Reporting unit type"
          }, {
            "name": "reporting_unit_code",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only include data for the specified reporting units.",
            "x-ms-summary": "Reporting unit",
            "x-ms-dynamic-values": {
              "operationId": "GetReportingUnitsByTypeHelper",
              "value-path": "reporting_unit_code",
              "value-collection": "result",
              "value-title": "reporting_unit_name",
              "parameters": {
                "reporting_unit_type_code": {
                  "parameter": "reporting_unit_type_code"
                },
                "Accept": "application/json"
              }
            }
          }, {
            "name": "skip",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "The number of records to skip. This is used in the pagination of the data results to determine where to start taking the results from.",
            "x-ms-summary": "Number of records to skip",
            "default": 0,
            "x-ms-visibility": "advanced"
          }, {
            "name": "top",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "The number of records to take. This is used in the pagination of the data results to determine how many results are retrieved. This value must be between 1 and 1000.",
            "x-ms-summary": "Number of records to take",
            "default": 1000,
            "x-ms-visibility": "advanced"
          }, {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "startDate can be a date of the form yyyy, yyyy-MM or yyyy-MM-dd. When only a year is specified, the search period starts at the beginning of the year, when a year and month are specified, the search period starts at the beginning of the month",
            "x-ms-summary": "Start date"
          }, {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "endDate can be a date of the form yyyy, yyyy-MM or yyyy-MM-dd. When only a year is specified, the search period ends at the end of the year, when a year and month are specified, the search period ends at the end of the month.",
            "x-ms-summary": "End date"
          }, {
            "$ref": "#/parameters/Accept"
          }
        ]
      }
    }
  },
  "definitions": {
    "CaveatModel": {
      "type": "object",
      "properties": {
        "caveat_code": {
          "type": "string",
          "description": "The code for the corresponding Caveat.",
          "title": "Caveat Code"
        },
        "caveat_display_value": {
          "type": "string",
          "description": "The display value or symbol for the corresponding Caveat. If the Caveat has no symbol then this field will be null.",
          "title": "Caveat Display Value"
        },
        "caveat_footnote": {
          "type": "string",
          "description": "The footnote/explanation text for the corresponding Caveat. If the Caveat has no text then this field will be null.",
          "title": "Caveat Footnote"
        },
        "caveat_name": {
          "type": "string",
          "description": "The name for the corresponding Caveat.",
          "title": "Caveat Name"
        }
      },
      "description": "A Caveat is a footnote or suppression used to apply to, or instead of, a data value."
    },
    "MeasureModel": {
      "type": "object",
      "properties": {
        "measure_categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureCategoryModel"
          },
          "description": "List of MeasureCategories applicable to this Measure."
        },
        "measure_code": {
          "type": "string",
          "description": "The code for the corresponding Measure."
        },
        "measure_name": {
          "type": "string",
          "description": "The name for the corresponding Measure."
        },
        "meta_tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetaTagModel"
          },
          "description": "List of MetaTags applicable to this Measure. This list will be empty if there are no MetaTags."
        },
        "units": {
          "$ref": "#/definitions/UnitsModel"
        }
      },
      "description": "A Measure is a statistic used to measure something. Some measures are performance indicators (e.g. median waiting times for elective surgery) and some provide context for these indicators (e.g. number of elective surgeries)."
    },
    "MeasureCategoryModel": {
      "type": "object",
      "properties": {
        "measure_category_code": {
          "type": "string",
          "description": "The code for the corresponding MeasureCategory."
        },
        "measure_category_name": {
          "type": "string",
          "description": "The name for the corresponding MeasureCategory."
        }
      },
      "description": "A MeasureCategory is used to provide grouping of Measures."
    },
    "ReportedMeasureCategoryTypeModel": {
      "type": "object",
      "properties": {
        "reported_measure_category_type_code": {
          "type": "string",
          "description": "The code for the corresponding ReportedMeasureCategoryType"
        },
        "reported_measure_category_type_name": {
          "type": "string",
          "description": "The name for the corresponding ReportedMeasureCategoryType."
        }
      },
      "description": "The reported measure category type model."
    },
    "ReportedMeasureCategoryModel": {
      "type": "object",
      "properties": {
        "reported_measure_category_code": {
          "type": "string",
          "description": "The code representing the ReportedMeasureCategory."
        },
        "reported_measure_category_name": {
          "type": "string",
          "description": "The display text for the ReportedMeasureCategory."
        },
        "reported_measure_category_type": {
          "$ref": "#/definitions/ReportedMeasureCategoryTypeModel"
        }
      },
      "description": "A ReportedMeasureCategory provides the method for the disaggregation of a particular Measure and also allows grouping of ReportedMeasures."
    },
    "ReportingUnitSummaryModel": {
      "type": "object",
      "properties": {
        "reporting_unit_code": {
          "type": "string",
          "description": "The code for the corresponding ReportingUnit.",
          "title": "Reporting Unit Code"
        },
        "reporting_unit_name": {
          "type": "string",
          "description": "The name for the corresponding ReportingUnit.",
          "title": "Reporting Unit Name"
        },
        "reporting_unit_type": {
          "$ref": "#/definitions/ReportingUnitType"
        }
      },
      "description": "A ReportingUnitSummary details the code and name of a ReportingUnit, including a summary of the associated ReportingUnitType."
    },
    "ReportingUnitType": {
      "type": "object",
      "properties": {
        "reporting_unit_type_code": {
          "type": "string",
          "title": "Reporting Unit Type Code",
          "description": "The code for the corresponding ReportingUnitType."
        },
        "reporting_unit_type_name": {
          "type": "string",
          "title": "Reporting Unit Type Name",
          "description": "The name for the corresponding ReportingUnitType."
        }
      },
      "description": "A ReportingUnitType indicates the type for a ReportingUnit and is used to group ReportingUnits."
    },
    "ReportingUnitModel": {
      "type": "object",
      "properties": {
        "alternative_names": {
          "type": "array",
          "items": {},
          "title": "alternative_names",
          "description": "The list of alternate names for this ReportingUnit. If there are no alternate names then this list will be empty."
        },
        "closed": {
          "type": "boolean",
          "description": "Indicates whether this ReportingUnit is closed.",
          "title": "ReportingUnit is closed"
        },
        "private": {
          "type": "boolean",
          "description": "Indicates whether this ReportingUnit is private, e.g. a private hospital.",
          "title": "ReportingUnit is private"
        },
        "latitude": {
          "type": "number",
          "format": "float",
          "description": "The latitude for the ReportingUnit. This field may be null if no geographical point is applicable for the ReportingUnit.",
          "title": "ReportingUnit latitude"
        },
        "longitude": {
          "type": "number",
          "format": "float",
          "description": "The longitude for the ReportingUnit. This field may be null if no geographical point is applicable for the ReportingUnit.",
          "title": "ReportingUnit longitude"
        },
        "mapped_reporting_units": {
          "$ref": "#/definitions/MappedReportingUnitModel"
        },
        "meta_tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetaTagModel"
          },
          "description": "List of MetaTags applicable to this Reporting Unit. This list will be empty if there are no MetaTags."
        },
        "reporting_unit_code": {
          "type": "string",
          "description": "The code for the corresponding ReportingUnit.",
          "title": "reporting_unit_code"
        },
        "reporting_unit_name": {
          "type": "string",
          "description": "The name for the corresponding ReportingUnit.",
          "title": "reporting_unit_name"
        },
        "reporting_unit_type": {
          "$ref": "#/definitions/ReportingUnitType"
        }
      },
      "description": "A ReportingUnit indicates what unit of analysis a specific data value corresponds to (often a geographical or otherwise bordered area)."
    },
    "ReportedMeasureModel": {
      "type": "object",
      "properties": {
        "measure": {
          "$ref": "#/definitions/MeasureModel"
        },
        "meta_tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetaTagModel"
          },
          "description": "List of MetaTags applicable to this Measure. This list will be empty if there are no MetaTags."
        },
        "reported_measure_categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportedMeasureCategoryModel"
          },
          "description": "List of ReportedMeasureCategories applicable to this ReportedMeasure."
        },
        "reported_measure_code": {
          "type": "string",
          "description": "The code for the corresponding ReportedMeasure."
        },
        "reported_measure_name": {
          "type": "string",
          "description": "The name for the corresponding ReportedMeasure."
        }
      },
      "description": "A ReportedMeasure is a disaggregation of a particular Measure. This disaggregation is indicated by 1 or more ReportedMeasureCategories."
    },
    "MappedReportingUnitModel": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "mapped_reporting_unit": {
            "$ref": "#/definitions/ReportingUnitSummaryModel"
          },
          "map_type": {
            "type": "object",
            "properties": {
              "mapped_reporting_unit_code": {
                "type": "string",
                "description": "The code for the corresponding MappedReportingUnitType",
                "title": "Mapped Reporting Unit Code"
              },
              "mapped_reporting_unit_name": {
                "type": "string",
                "description": "The name for the corresponding MappedReportingUnitType.",
                "title": "Mapped Reporting Unit Name"
              }
            },
            "description": "A MappedReportingUnitType indicates the type of relationship for a ReportingUnitMapping giving context to the relationship."
          }
        }
      },
      "description": "List of mapped ReportingUnits applicable to this ReportingUnit. This list will be empty if there are no mappings."
    },
    "UnitsModel": {
      "type": "object",
      "properties": {
        "decimal_places": {
          "type": "integer",
          "format": "int32",
          "description": "The number of decimal places that the data can be expressed to."
        },
        "units_are_prefix": {
          "type": "boolean",
          "description": "Whether the units should be applied as a prefix or suffix to the data value. e.g. $ (prefix) and % (suffix)."
        },
        "units_display": {
          "type": "string",
          "description": "The display symbol or text for the units. For units without a symbol this will be null."
        },
        "units_name": {
          "type": "string",
          "description": "The name for the corresponding Units."
        }
      },
      "description": "Units indicates how data values for a Measure should be expressed."
    },
    "MetaTagTypeModel": {
      "type": "object",
      "properties": {
        "meta_tag_type_code": {
          "type": "string",
          "description": "The code for the corresponding MetaTagType.",
          "title": "Meta Tag Type Code"
        },
        "meta_tag_type_name": {
          "type": "string",
          "description": "The name for the corresponding MetaTagType.",
          "title": "Meta Tag Type Code"
        }
      },
      "description": "A MetaTagType indicates the type for a series of MetaTags and acts as a MetaTag grouping."
    },
    "MetaTagModel": {
      "type": "object",
      "properties": {
        "meta_tag_code": {
          "type": "string",
          "description": "The code representing the MetaTag.",
          "title": "Meta Tag Code"
        },
        "meta_tag_name": {
          "type": "string",
          "description": "The display text for the MetaTag.",
          "title": "Meta Tag Name"
        },
        "meta_tag_type": {
          "$ref": "#/definitions/MetaTagTypeModel"
        }
      },
      "description": "A MetaTag is a grouping category that can be applied to a Measure, ReportedMeasure, ReportingUnit or DataSet."
    },
    "MeasureSummaryModel": {
      "type": "object",
      "properties": {
        "measure_code": {
          "type": "string",
          "description": "The code for the corresponding Measure.",
          "title": "Measure Code"
        },
        "measure_name": {
          "type": "string",
          "description": "The name for the corresponding Measure.",
          "title": "Measure Name"
        }
      },
      "description": "A MeasureSummaryModel details just the code and name of a Measure without any additional fields."
    },
    "ReportedMeasureSummaryModel": {
      "type": "object",
      "properties": {
        "measure_summary": {
          "$ref": "#/definitions/MeasureSummaryModel"
        },
        "reported_measure_code": {
          "type": "string",
          "description": "The code for the corresponding ReportedMeasure.",
          "title": "Reported Measure Code"
        },
        "reported_measure_name": {
          "type": "string",
          "description": "The name for the corresponding ReportedMeasure.",
          "title": "Reported Measure Name"
        }
      },
      "description": "A ReportedMeasureSummary details the code and name of a ReportedMeasure, including a summary of the associated Measure."
    },
    "DatasetModel": {
      "type": "object",
      "properties": {
        "caveats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaveatModel"
          },
          "description": "List of Caveats applicable to this DataSet. This list will be empty if there are no Caveats."
        },
        "data_set_id": {
          "type": "integer",
          "format": "int32",
          "description": "The id for the DataSet.",
          "title": "Data Set Id"
        },
        "data_set_name": {
          "type": "string",
          "description": "The display name for the corresponding DataSet.",
          "title": "Data Set Name"
        },
        "meta_tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetaTagModel"
          },
          "description": "List of MetaTags applicable to this Dataset. This list will be empty if there are no MetaTags."
        },
        "reported_measure_summary": {
          "$ref": "#/definitions/ReportedMeasureSummaryModel"
        },
        "reporting_end_date": {
          "type": "string",
          "description": "The end date for the DataSet data period.",
          "title": "Reporting End Date"
        },
        "reporting_start_date": {
          "type": "string",
          "description": "The start date for the DataSet data period.",
          "title": "Reporting Start Date"
        }
      }
    },
    "SuppressionModel": {
      "type": "object",
      "properties": {
        "suppression_code": {
          "type": "string",
          "description": "The code for the corresponding Suppression",
          "title": "Suppression Code"
        },
        "suppression_display_value": {
          "type": "string",
          "description": "The display value or symbol for the corresponding Suppression. If the Suppression has no symbol then this field will be null.",
          "title": "Suppression Display Value"
        },
        "suppression_footnote": {
          "type": "string",
          "description": "The footnote/explanation text for the corresponding Suppression. If the Suppression has no text then this field will be null.",
          "title": "Suppression Footnote"
        },
        "suppression_name": {
          "type": "string",
          "description": "The name for the corresponding Suppression.",
          "title": "Suppression Name"
        }
      }
    },
    "FormattedDataExtractModel": {
      "type": "object",
      "properties": {
        "caveat": {
          "type": "string",
          "description": "The Caveat symbols applicable to this DataItem. This will be null if there are no Caveats."
        },
        "caveat_codes": {
          "type": "string",
          "description": "Semi-colon separated list of Caveat codes applicable to this DataItem. This will be null if there are no Caveats."
        },
        "caveat_footnotes": {
          "type": "string",
          "description": "Semi-colon separated list of Caveat symbols and their explanatory footnote applicable to this DataItem. This will be null if there are no Caveats."
        },
        "data_set_caveat": {
          "type": "string",
          "description": "The Caveat symbols applicable to the corresponding DataSet. This will be null if there are no Caveats."
        },
        "data_set_caveat_codes": {
          "type": "string",
          "description": "Semi-colon separated list of Caveat codes applicable to the corresponding DataSet. This will be null if there are no Caveats."
        },
        "data_set_caveat_footnotes": {
          "type": "string",
          "description": "Semi-colon separated list of Caveat symbols and their explanatory footnote applicable to the corresponding DataSet. This will be null if there are no Caveats."
        },
        "data_period": {
          "type": "string",
          "description": "A formatted display of the data period including the start and end dates."
        },
        "data_period_type": {
          "type": "string",
          "description": "A description of the data period type, e.g. FinancialYear."
        },
        "data_set_id": {
          "type": "integer",
          "format": "int32",
          "description": "The id for the corresponding DataSet."
        },
        "data_set_meta_tag_codes": {
          "type": "string",
          "description": "Semi-colon separated list of MetaTag codes for the corresponding DataSet. This will be null if there are no DataSet MetaTags."
        },
        "data_set_meta_tags": {
          "type": "string",
          "description": "Semi-colon separated list of MetaTag values for the corresponding DataSet. This will be null if there are no DataSet MetaTags."
        },
        "data_set_meta_tags_with_type": {
          "type": "string",
          "description": "Semi-colon separated list of MetaTag values for the corresponding DataSet. Each MetaTag value matches the pattern MetaTagTypeCode|MetaTagValue. This will be null if there are no DataSet MetaTags."
        },
        "formatted_peer_value": {
          "type": "string",
          "description": "A formatted display of the peer data value including any caveats and units. This will be null if there is no peer."
        },
        "formatted_value": {
          "type": "string",
          "description": "A formatted display of the data value including any caveats and units."
        },
        "group_number": {
          "type": "string",
          "description": "Indicates a quintile, decile or other grouping number for the data value. This will be null if it is not applicable."
        },
        "private": {
          "type": "boolean",
          "description": "Indicates whether this ReportingUnit is private, e.g. a private hospital."
        },
        "mapped_local_hospital_network": {
          "type": "string",
          "description": "The LHN name for the corresponding ReportingUnit's associated LHN. This will be null if the ReportingUnit has no mapped LHN."
        },
        "mapped_primary_health_network": {
          "type": "string",
          "description": "The PHN name for the corresponding ReportingUnit's associated PHN. This will be null if the ReportingUnit has no mapped PHN."
        },
        "mapped_state": {
          "type": "string",
          "description": "The state abbreviation of the corresponding ReportingUnit's associated state."
        },
        "measure_category_code": {
          "type": "string",
          "description": "The code for the associated MeasureCategory."
        },
        "measure_category_name": {
          "type": "string",
          "description": "The name for the associated MeasureCategory."
        },
        "measure_code": {
          "type": "string",
          "description": "The code for the associated Measure."
        },
        "measure_meta_tag_codes": {
          "type": "string",
          "description": "Semi-colon separated list of MetaTag codes for the corresponding Measure. This will be null if there are no Measure MetaTags."
        },
        "measure_meta_tags": {
          "type": "string",
          "description": "Semi-colon separated list of MetaTag values for the corresponding Measure. This will be null if there are no Measure MetaTags."
        },
        "measure_meta_tags_with_type": {
          "type": "string",
          "description": "Semi-colon separated list of MetaTag values for the corresponding Measure. Each MetaTag value matches the pattern MetaTagTypeCode|MetaTagValue. This will be null if there are no Measure MetaTags."
        },
        "measure_name": {
          "type": "string",
          "description": "The name for the associated Measure."
        },
        "peer_group_code": {
          "type": "string",
          "description": "The code for the associated PeerGroup. This will be null if there is no peer."
        },
        "peer_group_name": {
          "type": "string",
          "description": "The name for the associated PeerGroup. This will be null if there is no peer."
        },
        "proxy_reporting_unit_name": {
          "type": "string",
          "description": "The name of the proxy reporting unit that reports on behalf of the associated ReportingUnit. This will be null if there is no proxy reporting."
        },
        "raw_lower_value": {
          "description": "Represents the lower data value if this DataItem is a data range or has a confidence interval, otherwise this will be null."
        },
        "raw_peer_value": {
          "description": "The peer data value for this DataItem. This may be null if the peer data is suppressed or there is no peer."
        },
        "raw_upper_value": {
          "description": "Represents the upper data value if this DataItem is a data range or has a confidence interval, otherwise this will be null."
        },
        "raw_value": {
          "type": "number",
          "format": "double",
          "description": "The data value for this item. This data value may be null if the data is suppressed, in which case a caveat will be present in the Caveats list."
        },
        "reported_measure_category_code": {
          "type": "string",
          "description": "The code for the first ReportedMeasure category."
        },
        "reported_measure_category_name": {
          "type": "string",
          "description": "The name for the first ReportedMeasure category"
        },
        "reported_measure_category_three_code": {
          "type": "string",
          "description": "The code for the third ReportedMeasure category. This will be null if the ReportedMeasure does not have 3 categories."
        },
        "reported_measure_category_three_name": {
          "type": "string",
          "description": "The name for the third ReportedMeasure category. This will be null if the ReportedMeasure does not have 3 categories."
        },
        "reported_measure_category_two_code": {
          "type": "string",
          "description": "The code for the second ReportedMeasure category. This will be null if the ReportedMeasure does not have 2 categories."
        },
        "reported_measure_category_two_name": {
          "type": "string",
          "description": "The name for the second ReportedMeasure category. This will be null if the ReportedMeasure does not have 2 categories."
        },
        "reported_measure_category_type_code": {
          "type": "string",
          "description": "The code for the first ReportedMeasure category."
        },
        "reported_measure_category_type_name": {
          "type": "string",
          "description": "The name for the first ReportedMeasure category type."
        },
        "reported_measure_category_three_type_code": {
          "type": "string",
          "description": "The code for the third ReportedMeasure category type. This will be null if the ReportedMeasure does not have 3 categories."
        },
        "reported_measure_category_three_type_name": {
          "type": "string",
          "description": "The name for the third ReportedMeasure category type. This will be null if the ReportedMeasure does not have 3 categories."
        },
        "reported_measure_category_two_type_code": {
          "type": "string",
          "description": "The code for the second ReportedMeasure category type. This will be null if the ReportedMeasure does not have 2 categories."
        },
        "reported_measure_category_two_type_name": {
          "type": "string",
          "description": "The name for the second ReportedMeasure category type. This will be null if the ReportedMeasure does not have 2 categories."
        },
        "reported_measure_code": {
          "type": "string",
          "description": "The code for the associated ReportedMeasure."
        },
        "reported_measure_meta_tag_codes": {
          "type": "string",
          "description": "Semi-colon separated list of MetaTag codes for the corresponding ReportedMeasure. This will be null if there are no ReportedMeasure MetaTags."
        },
        "reported_measure_meta_tags": {
          "type": "string",
          "description": "Semi-colon separated list of MetaTag values for the corresponding ReportedMeasure. This will be null if there are no ReportedMeasure MetaTags."
        },
        "reported_measure_meta_tags_with_type": {
          "type": "string",
          "description": "Semi-colon separated list of MetaTag values for the corresponding ReportedMeasure. Each MetaTag value matches the pattern MetaTagTypeCode|MetaTagValue. This will be null if there are no ReportedMeasure MetaTags."
        },
        "reported_measure_name": {
          "type": "string",
          "description": "The name for the associated ReportedMeasure."
        },
        "reporting_end_date": {
          "type": "string",
          "description": "The end date for the DataSet data period."
        },
        "reporting_start_date": {
          "type": "string",
          "description": "The start date for the DataSet data period."
        },
        "reporting_unit_code": {
          "type": "string",
          "description": "The code for the associated ReportingUnit."
        },
        "reporting_unit_meta_tag_codes": {
          "type": "string",
          "description": "Semi-colon separated list of MetaTag codes for the corresponding ReportingUnit. This will be null if there are no ReportingUnit MetaTags."
        },
        "reporting_unit_meta_tags": {
          "type": "string",
          "description": "Semi-colon separated list of MetaTag values for the corresponding ReportingUnit. This will be null if there are no ReportingUnit MetaTags."
        },
        "reporting_unit_meta_tags_with_type": {
          "type": "string",
          "description": "Semi-colon separated list of MetaTag values for the corresponding ReportingUnit. Each MetaTag value matches the pattern MetaTagTypeCode|MetaTagValue. This will be null if there are no ReportingUnit MetaTags."
        },
        "reporting_unit_name": {
          "type": "string",
          "description": "The name for the associated ReportingUnit."
        },
        "reporting_unit_type_code": {
          "type": "string",
          "description": "The code for the associated ReportingUnitType."
        },
        "reporting_unit_type_name": {
          "type": "string",
          "description": "The name for the associated ReportingUnitType."
        },
        "suppression": {
          "type": "string",
          "description": "The Suppression symbols applicable to this DataItem. This will be null if there are no Suppressions"
        },
        "suppression_codes": {
          "type": "string",
          "description": "Semi-colon separated list of Suppression codes applicable to this DataItem. This will be null if there are no Suppressions."
        }
      },
      "description": "A FormattedDataExtract item is a flattened structure which encapsulates a single DataItem and includes a formatted display value and the DataItem's associated attributes."
    },
    "DataExtractPagination": {
      "type": "object",
      "properties": {
        "results_returned": {
          "type": "integer",
          "format": "int32",
          "description": "The number of results returned in this response."
        },
        "starting_result_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the starting result in this list. This corresponds to the skip + 1 from the pagination request."
        },
        "total_results_available": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of results available via pagination."
        }
      },
      "description": "Provides the pagination details for a paginated results set."
    },
    "PaginatedFormattedDataExtractModel": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormattedDataExtractModel"
          },
          "description": "The list of FormattedDataExtract items."
        },
        "pagination": {
          "$ref": "#/definitions/DataExtractPagination"
        }
      },
      "description": "A paginated results set containing a list of FormattedDataExtract items and the pagination information for the request."
    },
    "DatasheetConfigurationSummaryModel": {
      "type": "object",
      "properties": {
        "datasheet_code": {
          "type": "string",
          "description": "The code used to specify the datasheet download."
        },
        "datasheet_description": {
          "type": "string",
          "description": "The description of the datasheet that will be generated using this code."
        },
        "datasheet_type": {
          "type": "string",
          "description": "The type of datasheet that will be generated using this code."
        }
      },
      "description": "A DatasheetConfigurationSummary provides the details of what datasheets are available for generation."
    },
    "DataItemModel": {
      "type": "object",
      "properties": {
        "caveats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaveatModel"
          },
          "description": "List of Caveats applicable to this DataItem. This list will be empty if there are no Caveats."
        },
        "data_set_id": {
          "type": "integer",
          "format": "int32",
          "description": "The id for the associated DataSet."
        },
        "group_number": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates a quintile, decile or other grouping number for the data value. This will be null if it is not applicable."
        },
        "lower_value": {
          "description": "Represents the lower data value if this DataItem is a data range or has a confidence interval, otherwise this will be null.",
          "title": "lower_value"
        },
        "measure_code": {
          "type": "string",
          "description": "The code for the associated Measure."
        },
        "peer_group_summary": {
          "$ref": "#/definitions/ReportingUnitSummaryModel"
        },
        "proxy_reporting_unit_summary": {
          "$ref": "#/definitions/ReportingUnitSummaryModel"
        },
        "reported_measure_code": {
          "type": "string",
          "description": "The code for the associated ReportedMeasure"
        },
        "reporting_unit_summary": {
          "$ref": "#/definitions/ReportingUnitSummaryModel"
        },
        "suppressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SuppressionModel"
          },
          "description": "Gets or sets the suppressions."
        },
        "upper_value": {
          "type": "number",
          "format": "double",
          "description": "Represents the upper data value if this DataItem is a data range or has a confidence interval, otherwise this will be null.",
          "title": "Upper Value"
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The data value for this DataItem. This data value may be null if the data is suppressed, in which case a caveat will be present in the Caveats list."
        }
      },
      "description": "A DataItem encapsulates a data value for a specific Unit (ReportingUnit) covering a specific data period (DataSet)."
    },
    "VersionInformation": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string",
          "description": "Api Version",
          "title": "API Version"
        },
        "data_version": {
          "type": "integer",
          "format": "int32",
          "description": "Data Version",
          "title": "Data Version"
        },
        "date_uploaded": {
          "type": "string",
          "description": "The date the data was uploaded",
          "title": "Date Uploaded"
        },
        "requested_time_stamp": {
          "type": "string",
          "description": "The timestamp of the request",
          "title": "Requested Time Stamp"
        }
      },
      "description": "API Version Information"
    }
  },
  "parameters": {
    "Accept": {
      "name": "Accept",
      "in": "header",
      "required": true,
      "type": "string",
      "default": "application/json",
      "x-ms-summary" : "Accept",
      "description" : "Accept",
      "x-ms-visibility": "internal"      
    }

  },
  "responses": {},
  "securityDefinitions": {},
  "security": [],
  "tags": [],
  "x-ms-connector-metadata": [{
      "propertyName": "Website",
      "propertyValue": "https://www.aihw.gov.au/reports-data/myhospitals/content/api"
    }, {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://www.aihw.gov.au/privacy-policy"
    }, {
      "propertyName": "Categories",
      "propertyValue": "Data"
    }
  ]
}
