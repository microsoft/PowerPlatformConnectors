{
  "swagger": "2.0",
  "info": {
    "title": "OpenAI",
    "description": "Connect to the OpenAI API and use the Power of GPT3, API key must be entered as \"Bearer YOUR_API_KEY\"",
    "version": "1.1",
    "contact": {
      "name": "Robin Rosengr√ºn",
      "url": "https://linktr.ee/r2power",
      "email": "robin@r2power.de"
    }
  },
  "host": "api.openai.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/v1/completions": {
      "post": {
        "description": "Creates a completion for the provided prompt and parameters.",
        "summary": "Create completion",
        "operationId": "CompletionPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "The body.",
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "description": "ID of the model to use.",
                  "title": "Model",
                  "default": "text-davinci-003",
                  "x-ms-dynamic-values": {
                    "operationId": "ModelsGet",
                    "value-path": "id",
                    "value-collection": "data",
                    "value-title": "id"
                  }
                },
                "prompt": {
                  "description": "The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays.",
                  "title": "Prompt",
                  "type": "string"
                },
                "max_tokens": {
                  "description": "The maximum number of tokens to generate in the completion.",
                  "title": "Max Tokens",
                  "type": "integer",
                  "format": "int32"
                },
                "temperature": {
                  "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
                  "title": "Temperature",
                  "type": "number",
                  "format": "double"
                },
                "top_p": {
                  "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.",
                  "title": "Top P",
                  "type": "number",
                  "format": "double"
                },
                "n": {
                  "description": "How many completions to generate for each prompt.",
                  "title": "N",
                  "type": "integer",
                  "format": "int32"
                },
                "logprobs": {
                  "description": "Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens.",
                  "title": "Log Probabilities",
                  "type": "string"
                },
                "stop": {
                  "description": "A sequence where the service will stop generating further tokens.",
                  "title": "Stop",
                  "type": "string"
                }
              },
              "required": [
                "model"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "first_completion": {
                  "type": "string",
                  "description": "The first text completion.",
                  "title": "First Completion"
                },
                "result": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The identifier.",
                      "title": "ID",
                      "type": "string"
                    },
                    "object": {
                      "description": "The object.",
                      "title": "Object",
                      "type": "string"
                    },
                    "created": {
                      "description": "When created.",
                      "title": "Created",
                      "type": "integer",
                      "format": "int32"
                    },
                    "model": {
                      "description": "The model.",
                      "title": "Model",
                      "type": "string"
                    },
                    "choices": {
                      "title": "Choices",
                      "type": "object",
                      "properties": {
                        "text": {
                          "description": "The text.",
                          "title": "Text",
                          "type": "string"
                        },
                        "index": {
                          "description": "The index.",
                          "title": "Index",
                          "type": "integer",
                          "format": "int32"
                        },
                        "logprobs": {
                          "description": "The log probabilities.",
                          "title": "Log Probs",
                          "type": "string"
                        },
                        "finish_reason": {
                          "description": "The finish reason.",
                          "title": "Finish Reason",
                          "type": "string"
                        }
                      }
                    },
                    "usage": {
                      "title": "Usage",
                      "description": "usage",
                      "type": "object",
                      "properties": {
                        "prompt_tokens": {
                          "description": "The prompt tokens.",
                          "title": "Prompt Tokens",
                          "type": "integer",
                          "format": "int32"
                        },
                        "completion_tokens": {
                          "description": "The completion tokens.",
                          "title": "Completion Tokens",
                          "type": "integer",
                          "format": "int32"
                        },
                        "total_tokens": {
                          "description": "The total tokens.",
                          "title": "Total Tokens",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              },
              "title": "Result"
            }
          }
        }
      }
    },
    "/v1/edits": {
      "post": {
        "description": "Creates a new edit for the provided input, instruction, and parameters.",
        "summary": "Edit Prompt",
        "operationId": "EditPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "The body.",
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "title": "Model",
                  "description": "ID of the model to use.",
                  "type": "string",
                  "x-ms-dynamic-values": {
                    "operationId": "ModelsGet",
                    "value-path": "id",
                    "value-collection": "data",
                    "value-title": "id"
                  }
                },
                "input": {
                  "description": "The input text to use as a starting point for the edit.",
                  "title": "Input",
                  "type": "string"
                },
                "instruction": {
                  "description": "The instruction that tells the model how to edit the prompt.",
                  "title": "Instruction",
                  "type": "string"
                },
                "n": {
                  "description": "How many edits to generate for the input and instruction.",
                  "title": "N",
                  "type": "integer",
                  "format": "int32"
                },
                "temperature": {
                  "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
                  "title": "Temperature",
                  "type": "number",
                  "format": "double"
                },
                "top_p": {
                  "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.",
                  "title": "Top P",
                  "type": "number",
                  "format": "double"
                }
              },
              "required": [
                "model",
                "instruction"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "object": {
                  "description": "The object.",
                  "title": "Object",
                  "type": "string"
                },
                "created": {
                  "description": "When created.",
                  "title": "Created",
                  "type": "integer",
                  "format": "int32"
                },
                "choices": {
                  "description": "The choices.",
                  "title": "Choices",
                  "type": "array",
                  "items": {
                    "title": "Items",
                    "type": "object",
                    "properties": {
                      "text": {
                        "description": "The text.",
                        "title": "Text",
                        "type": "string"
                      },
                      "index": {
                        "description": "The index.",
                        "title": "Index",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                },
                "usage": {
                  "title": "Usage",
                  "description": "usage",
                  "type": "object",
                  "properties": {
                    "prompt_tokens": {
                      "description": "The prompt tokens.",
                      "title": "Prompt Tokens",
                      "type": "integer",
                      "format": "int32"
                    },
                    "completion_tokens": {
                      "description": "The completion tokens.",
                      "title": "Completion Tokens",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total_tokens": {
                      "description": "The total tokens.",
                      "title": "Total Tokens",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/engines/{engine}/completions": {
      "post": {
        "responses": {
          "200": {
            "description": "GPT3 completed your prompt",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id"
                },
                "object": {
                  "type": "string",
                  "description": "object"
                },
                "created": {
                  "type": "integer",
                  "format": "int32",
                  "description": "created"
                },
                "model": {
                  "type": "string",
                  "description": "Which GPT3 Engine was used",
                  "title": "Model",
                  "x-ms-visibility": "internal"
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "description": "Completion text",
                        "title": "Text"
                      },
                      "index": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of completion",
                        "title": "Index"
                      },
                      "logprobs": {
                        "type": "string",
                        "description": "Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens. For example, if logprobs is 3, the API will return a list of the 3 most likely tokens.",
                        "title": "Logprobs"
                      },
                      "finish_reason": {
                        "title": "Finish reason",
                        "type": "string",
                        "description": "Reason why the text finished (stop condition / natural end / length)"
                      }
                    }
                  },
                  "description": "Returned Completion(s)"
                }
              }
            }
          }
        },
        "summary": "GPT3 Completes your prompt",
        "description": "GPT3 Completes your prompt",
        "operationId": "Completion",
        "deprecated": true,
        "parameters": [
          {
            "name": "engine",
            "in": "path",
            "type": "string",
            "description": "The used engine, choose between text-davinci-002/003, text-curie-001, text-babbage-001, text-ada-001",
            "required": true,
            "default": "text-davinci-003",
            "x-ms-visibility": "important",
            "x-ms-summary": "Engine",
            "enum": [
              "text-davinci-003",
              "text-davinci-002",
              "text-curie-001",
              "text-babbage-001",
              "text-ada-001"
            ],
            "x-ms-enum-values": [
              {
                "displayName": "DaVinci (new)",
                "value": "text-davinci-003"
              },
              {
                "displayName": "DaVinci (old)",
                "value": "text-davinci-002"
              },
              {
                "displayName": "Curie",
                "value": "text-curie-001"
              },
              {
                "displayName": "Babbage",
                "value": "text-babbage-001"
              },
              {
                "displayName": "Ada",
                "value": "text-ada-001"
              }
            ]
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "prompt": {
                  "type": "string",
                  "description": "Text that will be completed by GPT3",
                  "title": "prompt",
                  "default": "What is your favorite animal and why? Tell me also about the size and weight of this animal."
                },
                "n": {
                  "type": "integer",
                  "format": "int32",
                  "description": "How many completions to generate for each prompt",
                  "default": 1
                },
                "best_of": {
                  "type": "integer",
                  "format": "int32",
                  "description": "If set to more than 1, generates multiple completions server-side and returns the \"best\". Must be greater than \"n\". Use with caution, can consume a lot of tokens.",
                  "default": 1
                },
                "temperature": {
                  "type": "number",
                  "format": "float",
                  "description": "Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer. Use this OR top p",
                  "title": "temperature",
                  "default": 1
                },
                "max_tokens": {
                  "type": "integer",
                  "format": "int32",
                  "description": "One token equals roughly 4 characters of text (up to 4000 tokens between prompt and completion)",
                  "title": "max tokens",
                  "default": 100
                },
                "top_p": {
                  "type": "number",
                  "format": "float",
                  "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.",
                  "title": "top p"
                },
                "frequency_penalty": {
                  "type": "number",
                  "format": "float",
                  "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the models likelihood to repeat the same line verbatim.",
                  "title": "frequency penalty",
                  "default": 0
                },
                "presence_penalty": {
                  "type": "number",
                  "format": "float",
                  "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the models likelihood to talk about new topics.",
                  "title": "presence penalty",
                  "default": 0
                },
                "user": {
                  "type": "string",
                  "title": "user",
                  "description": "A unique identifier representing your end-user, which will help OpenAI to monitor and detect abuse"
                },
                "stop": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence"
                }
              },
              "required": [
                "prompt"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/v1/images/generations": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "created": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Unique Creation ID from OpenAI",
                  "title": "created",
                  "x-ms-visibility": "internal"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "URL to created Image",
                        "title": "url"
                      },
                      "b64_json": {
                        "type": "string",
                        "description": "Image in base64 format",
                        "title": "b64image",
                        "format": "byte"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Create an Image",
        "operationId": "CreateImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "prompt": {
                  "type": "string",
                  "description": "The prompt that describes the image",
                  "title": "prompt",
                  "default": "An elephant with a fedora in a dark room, digital art"
                },
                "n": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of images from 1 to 10",
                  "title": "Number of images",
                  "default": 1
                },
                "size": {
                  "type": "string",
                  "title": "size",
                  "description": "The size of the generated images. 256x256, 512x512 or 1024x1024 (default: 1024x1024)",
                  "enum": [
                    "256x256",
                    "512x512",
                    "1024x1024"
                  ],
                  "default": "1024x1024"
                },
                "response_format": {
                  "type": "string",
                  "title": "format",
                  "description": "Get url to picture or receive it in base64 format (default: url)",
                  "enum": [
                    "url",
                    "b64_json"
                  ],
                  "default": "url"
                }
              },
              "required": [
                "prompt"
              ]
            }
          }
        ],
        "description": "DallE2 creates an image from your prompt"
      }
    },
    "/v1/models": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "object"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id"
                      },
                      "object": {
                        "type": "string",
                        "description": "object"
                      },
                      "created": {
                        "type": "integer",
                        "format": "int32",
                        "description": "created"
                      },
                      "owned_by": {
                        "type": "string",
                        "description": "owned_by"
                      },
                      "permission": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "id"
                            },
                            "object": {
                              "type": "string",
                              "description": "object"
                            },
                            "created": {
                              "type": "integer",
                              "format": "int32",
                              "description": "created"
                            },
                            "allow_create_engine": {
                              "type": "boolean",
                              "description": "allow_create_engine"
                            },
                            "allow_sampling": {
                              "type": "boolean",
                              "description": "allow_sampling"
                            },
                            "allow_logprobs": {
                              "type": "boolean",
                              "description": "allow_logprobs"
                            },
                            "allow_search_indices": {
                              "type": "boolean",
                              "description": "allow_search_indices"
                            },
                            "allow_view": {
                              "type": "boolean",
                              "description": "allow_view"
                            },
                            "allow_fine_tuning": {
                              "type": "boolean",
                              "description": "allow_fine_tuning"
                            },
                            "organization": {
                              "type": "string",
                              "description": "organization"
                            },
                            "group": {
                              "type": "string",
                              "description": "group"
                            },
                            "is_blocking": {
                              "type": "boolean",
                              "description": "is_blocking"
                            }
                          }
                        },
                        "description": "permission"
                      },
                      "root": {
                        "type": "string",
                        "description": "root"
                      },
                      "parent": {
                        "type": "string",
                        "description": "parent"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "List models",
        "description": "Lists the currently available models, and provides basic information about each one such as the owner and availability.",
        "operationId": "ModelsGet",
        "parameters": []
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://openai.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://openai.com/api/policies/terms/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI"
    }
  ]
}
