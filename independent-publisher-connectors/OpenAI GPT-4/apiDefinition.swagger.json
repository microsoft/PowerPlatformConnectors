{
  "swagger": "2.0",
  "info": {
    "title": "OpenAI GPT",
    "description": "OpenAI is an artificial intelligence research laboratory. The company conducts research in the field of AI with the stated goal of promoting and developing friendly AI in a way that benefits humanity as a whole. Through this connector you can access the Generative Pre-trained Transformer 4 (GPT-4), an autoregressive language model that uses deep learning to produce human-like text, plus many other models.",
    "version": "1.2",
    "contact": {
      "name": "Troy Taylor",
      "url": "https://www.hitachisolutions.com",
      "email": "ttaylor@hitachisolutions.com"
    }
  },
  "host": "api.openai.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/completions": {
      "post": {
        "description": "Creates a completion for the provided prompt and parameters.",
        "summary": "Create completion",
        "operationId": "CompletionPost",
        "deprecated": false,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "The body.",
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "description": "ID of the model to use.",
                  "title": "Model",
                  "default": "text-davinci-003",
                  "enum": [
                    "text-davinci-003",
                    "text-davinci-002",
                    "text-curie-001",
                    "text-babbage-001",
                    "text-ada-001",
                    "davinci",
                    "curie",
                    "babbage",
                    "ada"
                  ]
                },
                "prompt": {
                  "description": "The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays.",
                  "title": "Prompt",
                  "type": "string"
                },
                "max_tokens": {
                  "description": "The maximum number of tokens to generate in the completion.",
                  "title": "Max Tokens",
                  "type": "integer",
                  "format": "int32"
                },
                "temperature": {
                  "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
                  "title": "Temperature",
                  "type": "number",
                  "format": "double"
                },
                "top_p": {
                  "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.",
                  "title": "Top P",
                  "type": "number",
                  "format": "double"
                },
                "n": {
                  "description": "How many completions to generate for each prompt.",
                  "title": "N",
                  "type": "integer",
                  "format": "int32"
                },
                "logprobs": {
                  "description": "Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens.",
                  "title": "Log Probabilities",
                  "type": "string"
                },
                "stop": {
                  "description": "A sequence where the service will stop generating further tokens.",
                  "title": "Stop",
                  "type": "string"
                }
              },
              "required": [
                "model"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "first_completion": {
                  "type": "string",
                  "description": "first_completion"
                },
                "result": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The identifier.",
                      "title": "ID"
                    },
                    "object": {
                      "type": "string",
                      "description": "The object.",
                      "title": "Object"
                    },
                    "created": {
                      "type": "integer",
                      "format": "int32",
                      "description": "When created.",
                      "title": "Created"
                    },
                    "model": {
                      "type": "string",
                      "description": "The model.",
                      "title": "Model"
                    },
                    "choices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "string",
                            "description": "The text.",
                            "title": "Text"
                          },
                          "index": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The index",
                            "title": "Index"
                          },
                          "logprobs": {
                            "type": "string",
                            "description": "The log probs.",
                            "title": "Log Probs"
                          },
                          "finish_reason": {
                            "type": "string",
                            "description": "The finish reason",
                            "title": "Finish Reason"
                          }
                        }
                      },
                      "title": "Choices"
                    },
                    "usage": {
                      "type": "object",
                      "properties": {
                        "prompt_tokens": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The prompt tokens.",
                          "title": "Prompt Tokens"
                        },
                        "completion_tokens": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The completion tokens.",
                          "title": "Completion Tokens"
                        },
                        "total_tokens": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total tokens.",
                          "title": "Total Tokens"
                        }
                      },
                      "title": "Usage"
                    }
                  },
                  "title": "Result"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/completions": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "first_content": {
                  "type": "string",
                  "description": "The first content.",
                  "title": "First Content"
                },
                "id": {
                  "type": "string",
                  "description": "The identifier.",
                  "title": "ID"
                },
                "object": {
                  "type": "string",
                  "description": "The object.",
                  "title": "Object"
                },
                "created": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When created.",
                  "title": "Created"
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "index": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The index.",
                        "title": "Index"
                      },
                      "message": {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "description": "The role.",
                            "title": "Role"
                          },
                          "content": {
                            "type": "string",
                            "description": "The content.",
                            "title": "Content"
                          }
                        },
                        "title": "Message"
                      },
                      "finish_reason": {
                        "type": "string",
                        "description": "The finish reason.",
                        "title": "Finish Reason"
                      }
                    }
                  },
                  "title": "Choices"
                },
                "usage": {
                  "type": "object",
                  "properties": {
                    "prompt_tokens": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The prompt tokens.",
                      "title": "Prompt Tokens"
                    },
                    "completion_tokens": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The completion tokens.",
                      "title": "Completion Tokens"
                    },
                    "total_tokens": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The total tokens.",
                      "title": "Total Tokens"
                    }
                  },
                  "title": "Usage"
                }
              }
            }
          }
        },
        "summary": "Get chat completions",
        "description": "Retrieves a chat completion powered by ChatGPT.",
        "operationId": "ChatPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "description": "The chat model.",
                  "title": "Model",
                  "default": "gpt-3.5-turbo",
                  "enum": [
                    "gpt-3.5-turbo",
                    "gpt-3.5-turbo-0613",
                    "gpt-4",
                    "gpt-4-0613",
                    "gpt-4-32k",
                    "gpt-4-32k-0613"
                  ]
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "The role.",
                        "title": "Role"
                      },
                      "content": {
                        "type": "string",
                        "description": "The content.",
                        "title": "Content"
                      }
                    },
                    "required": [
                      "content",
                      "role"
                    ]
                  },
                  "title": "Messages"
                },
                "max_tokens": {
                  "description": "The maximum number of tokens to generate in the completion.",
                  "title": "Max Tokens",
                  "type": "integer",
                  "format": "int32"
                },
                "temperature": {
                  "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
                  "title": "Temperature",
                  "type": "number",
                  "format": "double"
                },
                "top_p": {
                  "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.",
                  "title": "Top P",
                  "type": "number",
                  "format": "double"
                },
                "n": {
                  "description": "How many completions to generate for each prompt.",
                  "title": "N",
                  "type": "integer",
                  "format": "int32"
                },
                "stop": {
                  "description": "A sequence where the service will stop generating further tokens.",
                  "title": "Stop",
                  "type": "string"
                },
                "presence_penalty": {
                  "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
                  "title": "Presence Penalty",
                  "type": "number",
                  "format": "double"
                },
                "frequency_penalty": {
                  "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
                  "title": "Frequency Penalty",
                  "type": "number",
                  "format": "double"
                },
                "user": {
                  "description": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.",
                  "title": "User",
                  "type": "string"
                }
              },
              "required": [
                "model",
                "messages"
              ]
            }
          }
        ]
      }
    },
    "/v1/edits": {
      "post": {
        "description": "Creates a new edit for the provided input, instruction, and parameters.",
        "summary": "Edit Prompt",
        "operationId": "EditPost",
        "deprecated": false,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "The body.",
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "title": "Model",
                  "description": "ID of the model to use.",
                  "type": "string",
                  "enum": [
                    "gpt-3.5-turbo",
                    "gpt-3.5-turbo-0301",
                    "gpt-4",
                    "gpt-4-0314",
                    "gpt-4-32k",
                    "gpt-4-32k-0314"
                  ]
                },
                "input": {
                  "description": "The input text to use as a starting point for the edit.",
                  "title": "Input",
                  "type": "string"
                },
                "instruction": {
                  "description": "The instruction that tells the model how to edit the prompt.",
                  "title": "Instruction",
                  "type": "string"
                },
                "n": {
                  "description": "How many edits to generate for the input and instruction.",
                  "title": "N",
                  "type": "integer",
                  "format": "int32"
                },
                "temperature": {
                  "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
                  "title": "Temperature",
                  "type": "number",
                  "format": "double"
                },
                "top_p": {
                  "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.",
                  "title": "Top P",
                  "type": "number",
                  "format": "double"
                }
              },
              "required": [
                "model",
                "instruction"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "object": {
                  "description": "The object.",
                  "title": "Object",
                  "type": "string"
                },
                "created": {
                  "description": "When created.",
                  "title": "Created",
                  "type": "integer",
                  "format": "int32"
                },
                "choices": {
                  "description": "The choices.",
                  "title": "Choices",
                  "type": "array",
                  "items": {
                    "title": "Items",
                    "type": "object",
                    "properties": {
                      "text": {
                        "description": "The text.",
                        "title": "Text",
                        "type": "string"
                      },
                      "index": {
                        "description": "The index.",
                        "title": "Index",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                },
                "usage": {
                  "title": "Usage",
                  "description": "usage",
                  "type": "object",
                  "properties": {
                    "prompt_tokens": {
                      "description": "The prompt tokens.",
                      "title": "Prompt Tokens",
                      "type": "integer",
                      "format": "int32"
                    },
                    "completion_tokens": {
                      "description": "The completion tokens.",
                      "title": "Completion Tokens",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total_tokens": {
                      "description": "The total tokens.",
                      "title": "Total Tokens",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/models": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "The object.",
                  "title": "Object"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier.",
                        "title": "ID"
                      },
                      "object": {
                        "type": "string",
                        "description": "The object.",
                        "title": "Object"
                      },
                      "created": {
                        "type": "integer",
                        "format": "int32",
                        "description": "When created.",
                        "title": "Created"
                      },
                      "owned_by": {
                        "type": "string",
                        "description": "The owned by.",
                        "title": "Owned By"
                      },
                      "permission": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The identifier.",
                              "title": "ID"
                            },
                            "object": {
                              "type": "string",
                              "description": "The object.",
                              "title": "Object"
                            },
                            "created": {
                              "type": "integer",
                              "format": "int32",
                              "description": "When created.",
                              "title": "Created"
                            },
                            "allow_create_engine": {
                              "type": "boolean",
                              "description": "Whether to allow create engine.",
                              "title": "Allow Create Engine"
                            },
                            "allow_sampling": {
                              "type": "boolean",
                              "description": "Whether to allow sampling.",
                              "title": "Allow Sampling"
                            },
                            "allow_logprobs": {
                              "type": "boolean",
                              "description": "Whether to allow logprobs.",
                              "title": "Allow Logprobs"
                            },
                            "allow_search_indices": {
                              "type": "boolean",
                              "description": "Whether to allow search indices .",
                              "title": "Allow Search Indices"
                            },
                            "allow_view": {
                              "type": "boolean",
                              "description": "Whether to allow view.",
                              "title": "Allow View"
                            },
                            "allow_fine_tuning": {
                              "type": "boolean",
                              "description": "Whether to allow fine tuning.",
                              "title": "Allow Fine Tuning"
                            },
                            "organization": {
                              "type": "string",
                              "description": "The organization.",
                              "title": "Organization"
                            },
                            "group": {
                              "type": "string",
                              "description": "The group.",
                              "title": "Group"
                            },
                            "is_blocking": {
                              "type": "boolean",
                              "description": "Whether is blocked.",
                              "title": "Is Blocking"
                            }
                          }
                        },
                        "title": "Permission"
                      },
                      "root": {
                        "type": "string",
                        "description": "The root.",
                        "title": "Root"
                      },
                      "parent": {
                        "type": "string",
                        "description": "The parent.",
                        "title": "Parent"
                      }
                    }
                  },
                  "title": "Data"
                }
              }
            }
          }
        },
        "summary": "List models",
        "description": "Lists the currently available models, and provides basic information about each one such as the owner and availability.",
        "operationId": "ModelsGet",
        "parameters": []
      }
    },
    "/v1/fine_tuning/jobs": {
      "post": {
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "The object.",
                  "title": "Object"
                },
                "id": {
                  "type": "string",
                  "description": "The identifier.",
                  "title": "ID"
                },
                "model": {
                  "type": "string",
                  "description": "The model.",
                  "title": "Model"
                },
                "created_at": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When created at.",
                  "title": "Created At"
                },
                "fine_tuned_model": {
                  "type": "string",
                  "description": "The fine-tuned model.",
                  "title": "Fine-Tuned Model"
                },
                "organization_id": {
                  "type": "string",
                  "description": "The organization identifier.",
                  "title": "Organization ID"
                },
                "result_files": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The result files.",
                  "title": "Result Files"
                },
                "status": {
                  "type": "string",
                  "description": "The status.",
                  "title": "Status"
                },
                "validation_file": {
                  "type": "string",
                  "description": "The validation file.",
                  "title": "Validation File"
                },
                "training_file": {
                  "type": "string",
                  "description": "The training file.",
                  "title": "Training File"
                }
              }
            }
          }
        },
        "summary": "Create fine-tuning job",
        "description": "Creates a job that fine-tunes a specified model from a given dataset.",
        "operationId": "FineTuningPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "training_file": {
                  "type": "string",
                  "description": "The ID of an uploaded file that contains training data.",
                  "title": "Training File"
                },
                "validation_file": {
                  "type": "string",
                  "description": "The ID of an uploaded file that contains validation data.",
                  "title": "Validation File"
                },
                "model": {
                  "type": "string",
                  "description": "The name of the model to fine-tune.",
                  "title": "Model"
                },
                "hyperparameters": {
                  "type": "object",
                  "properties": {
                    "n_epochs": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.",
                      "title": "Epochs"
                    }
                  },
                  "title": "Hyperparameters"
                },
                "suffix": {
                  "type": "string",
                  "description": "A string of up to 40 characters that will be added to your fine-tuned model name.",
                  "title": "Suffix"
                }
              },
              "required": [
                "training_file",
                "model"
              ]
            }
          }
        ]
      }
    },
    "/v1/fine_tuning/jobs/{fine_tuning_job_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "The object.",
                  "title": "Object"
                },
                "id": {
                  "type": "string",
                  "description": "The identifier.",
                  "title": "ID"
                },
                "model": {
                  "type": "string",
                  "description": "The model.",
                  "title": "Model"
                },
                "created_at": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When created at.",
                  "title": "Created At"
                },
                "finished_at": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When finished at.",
                  "title": "Finished At"
                },
                "fine_tuned_model": {
                  "type": "string",
                  "description": "The fine-tuned model.",
                  "title": "Fine-Tuned Model"
                },
                "organization_id": {
                  "type": "string",
                  "description": "The organization identifier.",
                  "title": "Organization ID"
                },
                "result_files": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The result files.",
                  "title": "Result Files"
                },
                "status": {
                  "type": "string",
                  "description": "The status.",
                  "title": "Status"
                },
                "validation_file": {
                  "type": "string",
                  "description": "The validation file.",
                  "title": "Validation File"
                },
                "training_file": {
                  "type": "string",
                  "description": "The training file.",
                  "title": "Training File"
                },
                "hyperparameters": {
                  "type": "object",
                  "properties": {
                    "n_epochs": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of epochs.",
                      "title": "epochs"
                    }
                  },
                  "title": "Hyperparameters"
                },
                "trained_tokens": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of trained tokens.",
                  "title": "Trained Tokens"
                }
              }
            }
          }
        },
        "summary": "Retrieve fine-tuning job",
        "description": "Retrieve info about a fine-tuning job.",
        "operationId": "FineTuningGet",
        "parameters": [
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "x-ms-summary": "Fine-tuning Job ID",
            "x-ms-url-encoding": "single",
            "description": "The fine-tuning job identifier.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/v1/fine_tuning/jobs/{fine_tuning_job_id}/cancel": {
      "post": {
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "The object.",
                  "title": "Object"
                },
                "id": {
                  "type": "string",
                  "description": "The identifier.",
                  "title": "ID"
                },
                "model": {
                  "type": "string",
                  "description": "The model.",
                  "title": "Model"
                },
                "created_at": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When created at.",
                  "title": "Created At"
                },
                "fine_tuned_model": {
                  "type": "string",
                  "description": "The fine-tuned model.",
                  "title": "Fine-Tuned Model"
                },
                "organization_id": {
                  "type": "string",
                  "description": "The organization identifier.",
                  "title": "Organization ID"
                },
                "result_files": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The result files.",
                  "title": "Result Files"
                },
                "hyperparameters": {
                  "type": "object",
                  "properties": {
                    "n_epochs": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of epochs.",
                      "title": "Epochs"
                    }
                  },
                  "title": "Hyperparameters"
                },
                "status": {
                  "type": "string",
                  "description": "The status.",
                  "title": "Status"
                },
                "validation_file": {
                  "type": "string",
                  "description": "The validation file.",
                  "title": "Validation File"
                },
                "training_file": {
                  "type": "string",
                  "description": "The training file.",
                  "title": "Training File"
                }
              }
            }
          }
        },
        "summary": "Cancel fine-tuning",
        "parameters": [
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "x-ms-summary": "Fine-tuning Job ID",
            "x-ms-url-encoding": "single",
            "description": "The fine-tuning job identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "description": "Immediately cancel a fine-tune job.",
        "operationId": "FineTuningCancelPost"
      }
    },
    "/v1/fine_tuning/jobs/{fine_tuning_job_id}/events": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "The object.",
                  "title": "Object"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "object": {
                        "type": "string",
                        "description": "The object.",
                        "title": "Object"
                      },
                      "id": {
                        "type": "string",
                        "description": "The identifier.",
                        "title": "ID"
                      },
                      "created_at": {
                        "type": "integer",
                        "format": "int32",
                        "description": "When created at.",
                        "title": "Created At"
                      },
                      "level": {
                        "type": "string",
                        "description": "The level.",
                        "title": "Level"
                      },
                      "message": {
                        "type": "string",
                        "description": "The message.",
                        "title": "Message"
                      },
                      "data": {
                        "type": "string",
                        "description": "The data.",
                        "title": "Data"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type.",
                        "title": "Type"
                      }
                    }
                  },
                  "title": "Data"
                },
                "has_more": {
                  "type": "boolean",
                  "description": "Whether has more.",
                  "title": "Has More"
                }
              }
            }
          }
        },
        "summary": "List fine-tuning events",
        "parameters": [
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "x-ms-summary": "Fine-tuning Job ID",
            "x-ms-url-encoding": "single",
            "description": "The fine-tuning job identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "x-ms-summary": "After",
            "description": "The identifier for the last event from the previous pagination request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "x-ms-summary": "Limit",
            "description": "The number of events to retrieve.",
            "required": false,
            "type": "integer"
          }
        ],
        "description": "Retrieve status updates for a fine-tuning job.",
        "operationId": "FineTuningEventsGet"
      }
    },
    "/v1/moderations": {
      "post": {
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier.",
                  "title": "ID"
                },
                "model": {
                  "type": "string",
                  "description": "The model.",
                  "title": "Model"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "flagged": {
                        "type": "boolean",
                        "description": "Whether flagged.",
                        "title": "Flagged"
                      },
                      "categories": {
                        "type": "object",
                        "properties": {
                          "sexual": {
                            "type": "boolean",
                            "description": "Whether sexual.",
                            "title": "Sexual"
                          },
                          "hate": {
                            "type": "boolean",
                            "description": "Whether hateful.",
                            "title": "Hate"
                          },
                          "harassment": {
                            "type": "boolean",
                            "description": "Whether harrassment.",
                            "title": "Harassment"
                          },
                          "self-harm": {
                            "type": "boolean",
                            "description": "Whether self-harm.",
                            "title": "self-harm"
                          },
                          "sexual/minors": {
                            "type": "boolean",
                            "description": "Whether minor sexual.",
                            "title": "sexual/minors"
                          },
                          "hate/threatening": {
                            "type": "boolean",
                            "description": "Whether threatening hateful.",
                            "title": "hate/threatening"
                          },
                          "violence/graphic": {
                            "type": "boolean",
                            "description": "Whether graphic violence.",
                            "title": "violence/graphic"
                          },
                          "self-harm/intent": {
                            "type": "boolean",
                            "description": "Whether intent to self-harm.",
                            "title": "self-harm/intent"
                          },
                          "self-harm/instructions": {
                            "type": "boolean",
                            "description": "Whether self-harm instructions.",
                            "title": "self-harm/instructions"
                          },
                          "harassment/threatening": {
                            "type": "boolean",
                            "description": "Whether threatening harassment.",
                            "title": "harassment/threatening"
                          },
                          "violence": {
                            "type": "boolean",
                            "description": "Whether violence.",
                            "title": "Violence"
                          }
                        },
                        "title": "Categories"
                      },
                      "category_scores": {
                        "type": "object",
                        "properties": {
                          "sexual": {
                            "type": "number",
                            "format": "float",
                            "description": "The number of sexual.",
                            "title": "Sexual"
                          },
                          "hate": {
                            "type": "number",
                            "format": "float",
                            "description": "The number of hateful.",
                            "title": "Hate"
                          },
                          "harassment": {
                            "type": "number",
                            "format": "float",
                            "description": "The number of harassment.",
                            "title": "Harassment"
                          },
                          "self-harm": {
                            "type": "number",
                            "format": "float",
                            "description": "The number of self-harm.",
                            "title": "self-harm"
                          },
                          "sexual/minors": {
                            "type": "number",
                            "format": "float",
                            "description": "The number of minor sexual.",
                            "title": "sexual/minors"
                          },
                          "hate/threatening": {
                            "type": "number",
                            "format": "float",
                            "description": "The number of threatening hateful.",
                            "title": "hate/threatening"
                          },
                          "violence/graphic": {
                            "type": "number",
                            "format": "float",
                            "description": "The number of graphic violence.",
                            "title": "violence/graphic"
                          },
                          "self-harm/intent": {
                            "type": "number",
                            "format": "float",
                            "description": "The number of intent to self-harm.",
                            "title": "self-harm/intent"
                          },
                          "self-harm/instructions": {
                            "type": "number",
                            "format": "float",
                            "description": "The number of self-harm instructions.",
                            "title": "self-harm/instructions"
                          },
                          "harassment/threatening": {
                            "type": "number",
                            "format": "float",
                            "description": "The number of threatening harassment.",
                            "title": "harassment/threatening"
                          },
                          "violence": {
                            "type": "number",
                            "format": "float",
                            "description": "The number of violence.",
                            "title": "Violence"
                          }
                        },
                        "title": "Category Scores"
                      }
                    }
                  },
                  "title": "Results"
                }
              }
            }
          }
        },
        "summary": "Create moderation",
        "description": "Classifies if text violates OpenAI's Content Policy.",
        "operationId": "ModerationPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "string",
                  "description": "The input text to classify.",
                  "title": "Input"
                },
                "model": {
                  "type": "string",
                  "description": "The model.",
                  "title": "Model",
                  "default": "text-moderation-latest",
                  "enum": [
                    "text-moderation-latest",
                    "text-moderation-stable"
                  ]
                }
              },
              "required": [
                "input"
              ]
            }
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://openai.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://openai.com/api/policies/terms/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI"
    }
  ]
}