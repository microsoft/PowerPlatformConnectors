{
    "swagger": "2.0",
    "info": {
      "title": "Snowflake",
      "description": "Snowflake enables data storage, processing, and analytic solutions that are faster, easier to use, and more flexible than traditional offerings.",
      "version": "1.0",
      "contact": {
        "name": "Rene Koch",
        "url": "https://github.com/rekodus",
        "email": "rene.koch@uniper.energy"
      }
    },
    "host": "yourinstance.snowflakecomputing.com",
    "basePath": "/api/v2/statements",
    "schemes": [
      "https"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/": {
        "post": {
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "The statement was executed successfully, and the response includes any data requested.",
              "x-ms-summary": "Message",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "000123"
                  },
                  "sqlState": {
                    "type": "string",
                    "example": "42601"
                  },
                  "message": {
                    "type": "string",
                    "example": "successfully executed"
                  },
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  },
                  "createdOn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Timestamp that specifies when the statement execution started. The timestamp is expressed in milliseconds since the epoch",
                    "example": 1597090533987
                  },
                  "statementStatusUrl": {
                    "type": "string",
                    "example": "/api/v2/statements/GUID value"
                  },
                  "resultSetMetaData": {
                    "type": "object",
                    "properties": {
                      "format": {
                        "type": "string",
                        "enum": [
                          "jsonv2"
                        ],
                        "description": "For v2 endpoints the only possible value for this field is jsonv2.",
                        "example": "jsonv2"
                      },
                      "rowType": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "nullable": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": true
                        }
                      }
                    }
                  },
                  "partitionInfo": {
                    "description": "Partition information",
                    "type": "array",
                    "minItems": 0,
                    "items": {
                      "type": "object",
                      "properties": {
                        "rowCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Number of rows in the partition.",
                          "minimum": 0,
                          "example": 1324
                        },
                        "compressedSize": {
                          "type": "integer",
                          "format": "int64",
                          "description": "the partition size before the decompression. This may or may not be present in the partitionInfo. Uncompressed size would always be there.",
                          "minimum": 0,
                          "example": 37436824
                        },
                        "uncompressedSize": {
                          "type": "integer",
                          "format": "int64",
                          "description": "the partition size after the decompression",
                          "minimum": 0,
                          "example": 1343787384
                        }
                      }
                    }
                  },
                  "nullable": {
                    "description": "false if null is replaced with a string 'null' otherwise false",
                    "type": "boolean"
                  },
                  "data": {
                    "description": "Result set data.",
                    "type": "array",
                    "minItems": 0,
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "stats": {
                    "type": "object",
                    "description": "these stats might not be available for each request.",
                    "properties": {
                      "numRowsInserted": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of rows that were inserted.",
                        "minimum": 0,
                        "example": 12
                      },
                      "numRowsUpdated": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of rows that were updated.",
                        "minimum": 0,
                        "example": 9
                      },
                      "numRowsDeleted": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of rows that were deleted.",
                        "minimum": 0,
                        "example": 8
                      },
                      "numDuplicateRowsUpdated": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of duplicate rows that were updated.",
                        "minimum": 0,
                        "example": 20
                      }
                    }
                  }
                }
              }
            },
            "202": {
              "description": "The execution of the statement is still in progress. Use this method again to check the status of the statement execution.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  },
                  "code": {
                    "type": "string",
                    "example": "000123"
                  },
                  "sqlState": {
                    "type": "string",
                    "example": "42601"
                  },
                  "message": {
                    "type": "string",
                    "example": "successfully executed"
                  },
                  "createdOn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Timestamp that specifies when the statement execution started. The timestamp is expressed in milliseconds since the epoch",
                    "example": 1597090533987
                  },
                  "statementStatusUrl": {
                    "type": "string",
                    "example": "/api/v2/statements/GUID value"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request. The request payload is invalid or malformed.",
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "401": {
              "description": "Unauthorized. The request is not authorized.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden. The request is forbidden.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found. The request endpoint is not valid.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "405": {
              "description": "Method Not Allowed. The request method doesn't match the supported API.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "408": {
              "description": "The execution of the statement exceeded the timeout period. The execution of the statement was cancelled.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  },
                  "code": {
                    "type": "string",
                    "example": "000123"
                  },
                  "sqlState": {
                    "type": "string",
                    "example": "42601"
                  },
                  "message": {
                    "type": "string",
                    "example": "successfully executed"
                  },
                  "createdOn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Timestamp that specifies when the statement execution started. The timestamp is expressed in milliseconds since the epoch",
                    "example": 1597090533987
                  },
                  "statementStatusUrl": {
                    "type": "string",
                    "example": "/api/v2/statements/GUID value"
                  }
                }
              }
            },
            "415": {
              "description": "The request header Content-Type includes unsupported media type. The API supports application/json only.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "422": {
              "description": "The execution of the statement exceeded the timeout period. The execution of the statement was cancelled.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  },
                  "code": {
                    "type": "string",
                    "example": "000123"
                  },
                  "sqlState": {
                    "type": "string",
                    "example": "42601"
                  },
                  "message": {
                    "type": "string",
                    "example": "successfully executed"
                  },
                  "createdOn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Timestamp that specifies when the statement execution started. The timestamp is expressed in milliseconds since the epoch",
                    "example": 1597090533987
                  },
                  "statementStatusUrl": {
                    "type": "string",
                    "example": "/api/v2/statements/GUID value"
                  }
                }
              }
            },
            "429": {
              "description": "Limit Exceeded. The number of requests hit the rate limit.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error. The server hits an unrecoverable system error.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "503": {
              "description": "Service Unavailable. The request was not processed due to server side timeouts.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "504": {
              "description": "Gateway Timeout. The request was not processed due to server side timeouts.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            }
          },
          "summary": "Submit SQL Statement for Execution",
          "description": "Submit a SQL Statement for Execution",
          "operationId": "ExecuteSqlStatement",
          "parameters": [
            {
              "name": "Instance",
              "in": "header",
              "type": "string",
              "required": true,
              "description": "The uri of your Snowflake instance (without https://)",
              "x-ms-visibility": "important",
              "x-ms-summary": "Instance"
            },
            {
              "name": "Content-Type",
              "in": "header",
              "default": "application/json",
              "type": "string",
              "required": true,
              "x-ms-visibility": "internal",
              "x-ms-summary": "Content-Type"
            },
            {
              "name": "Accept",
              "in": "header",
              "default": "application/json",
              "type": "string",
              "required": true,
              "x-ms-visibility": "internal",
              "x-ms-summary": "Accept"
            },
            {
              "name": "requestId",
              "in": "query",
              "type": "string",
              "required": false,
              "x-ms-visibility": "advanced",
              "x-ms-summary": "Request ID",
              "description": "The ID of the Request"
            },
            {
              "name": "async",
              "in": "query",
              "type": "boolean",
              "default": false,
              "x-ms-visibility": "advanced",
              "x-ms-summary": "Asynchronous",
              "description": "Indicates if the query should be executed asynchronously"
            },
            {
              "name": "nullable",
              "in": "query",
              "type": "boolean",
              "default": false,
              "x-ms-visibility": "advanced",
              "x-ms-summary": "nullable",
              "description": "If nullable is false, null values will be replaced by string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "statement": {
                    "type": "string",
                    "description": "The SQL statement to be executed - batches of statements not yet supported"
                  },
                  "timeout": {
                    "type": "integer",
                    "default": 60,
                    "x-ms-visibility": "advanced",
                    "x-ms-summary": "timeout",
                    "description": "Number of seconds before timeout occurs"
                  },
                  "database": {
                    "type": "string",
                    "description": "database",
                    "x-ms-summary": "database"
                  },
                  "schema": {
                    "type": "string",
                    "description": "schema",
                    "x-ms-summary": "schema"
                  },
                  "warehouse": {
                    "type": "string",
                    "description": "warehouse",
                    "x-ms-summary": "warehouse"
                  },
                  "role": {
                    "type": "string",
                    "description": "role",
                    "x-ms-summary": "role"
                  },
                  "bindings": {
                    "description": "Values of bind variables in the SQL statement. When executing the statement, Snowflake replaces placeholders ('?' and ':name') in the statement with these specified values.",
                    "type": "object",
                    "properties": {},
                    "x-ms-visibility": "advanced",
                    "x-ms-summary": "bindings"
                  },
                  "parameters": {
                    "description": "Session parameters that should be set before executing the statement.",
                    "type": "object",
                    "properties": {
                      "timezone": {
                        "description": "Time zone to use when executing the statement.",
                        "type": "string",
                        "example": "america/los_angeles",
                        "x-ms-summary": "timezone"
                      },
                      "query_tag": {
                        "description": "Query tag that you want to associate with the SQL statement.",
                        "type": "string",
                        "example": "tag-1234",
                        "x-ms-summary": "query tag"
                      },
                      "binary_output_format": {
                        "description": "Output format for binary values.",
                        "type": "string",
                        "example": "HEX",
                        "x-ms-summary": "binary output format"
                      },
                      "date_output_format": {
                        "description": "Output format for DATE values.",
                        "type": "string",
                        "example": "YYYY-MM-DD",
                        "x-ms-summary": "date output format"
                      },
                      "time_output_format": {
                        "description": "Output format for TIME values.",
                        "type": "string",
                        "example": "HH24:MI:SS.FF6",
                        "x-ms-summary": "time output format"
                      },
                      "timestamp_output_format": {
                        "description": "Output format for TIMESTAMP values.",
                        "type": "string",
                        "example": "YYYY-MM-DDTHH24:MI:SS.FF6",
                        "x-ms-summary": "timestamp output format"
                      },
                      "timestamp_ltz_output_format": {
                        "description": "Output format for TIMESTAMP_LTZ values.",
                        "type": "string",
                        "example": "YYYY-MM-DDTHH24:MI:SS.FF6",
                        "x-ms-summary": "timestamp ltz output format"
                      },
                      "timestamp_ntz_output_format": {
                        "description": "Output format for TIMESTAMP_NTZ values.",
                        "type": "string",
                        "example": "YYYY-MM-DDTHH24:MI:SS.FF6"
                      },
                      "timestamp_tz_output_format": {
                        "description": "Output format for TIMESTAMP_TZ values.",
                        "type": "string",
                        "example": "YYYY-MM-DDTHH24:MI:SS.FF6 TZHTZM",
                        "x-ms-summary": "timestamp tz output format"
                      },
                      "multi_statement_count": {
                        "description": "Number of statements to execute when using multi-statement capability. 0 implies variable number of statements. Negative numbers are not allowed.",
                        "type": "integer",
                        "example": 4,
                        "default": 1,
                        "x-ms-summary": "multi statement count"
                      }
                    },
                    "x-ms-visibility": "advanced"
                  }
                }
              }
            }
          ]
        }
      },
      "/{statementHandle}": {
        "get": {
          "responses": {
            "200": {
              "description": "Success operation",
              "x-ms-summary": "Message",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "000123"
                  },
                  "sqlState": {
                    "type": "string",
                    "example": "42601"
                  },
                  "message": {
                    "type": "string",
                    "example": "successfully executed"
                  },
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  },
                  "createdOn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Timestamp that specifies when the statement execution started. The timestamp is expressed in milliseconds since the epoch",
                    "example": 1597090533987
                  },
                  "statementStatusUrl": {
                    "type": "string",
                    "example": "/api/v2/statements/GUID value"
                  },
                  "resultSetMetaData": {
                    "type": "object",
                    "properties": {
                      "format": {
                        "type": "string",
                        "enum": [
                          "jsonv2"
                        ],
                        "description": "For v2 endpoints the only possible value for this field is jsonv2.",
                        "example": "jsonv2"
                      },
                      "rowType": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "nullable": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": true
                        }
                      }
                    }
                  },
                  "partitionInfo": {
                    "description": "Partition information",
                    "type": "array",
                    "minItems": 0,
                    "items": {
                      "type": "object",
                      "properties": {
                        "rowCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Number of rows in the partition.",
                          "minimum": 0,
                          "example": 1324
                        },
                        "compressedSize": {
                          "type": "integer",
                          "format": "int64",
                          "description": "the partition size before the decompression. This may or may not be present in the partitionInfo. Uncompressed size would always be there.",
                          "minimum": 0,
                          "example": 37436824
                        },
                        "uncompressedSize": {
                          "type": "integer",
                          "format": "int64",
                          "description": "the partition size after the decompression",
                          "minimum": 0,
                          "example": 1343787384
                        }
                      }
                    }
                  },
                  "nullable": {
                    "description": "false if null is replaced with a string 'null' otherwise false",
                    "type": "boolean"
                  },
                  "data": {
                    "description": "Result set data.",
                    "type": "array",
                    "minItems": 0,
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "stats": {
                    "type": "object",
                    "description": "these stats might not be available for each request.",
                    "properties": {
                      "numRowsInserted": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of rows that were inserted.",
                        "minimum": 0,
                        "example": 12
                      },
                      "numRowsUpdated": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of rows that were updated.",
                        "minimum": 0,
                        "example": 9
                      },
                      "numRowsDeleted": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of rows that were deleted.",
                        "minimum": 0,
                        "example": 8
                      },
                      "numDuplicateRowsUpdated": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of duplicate rows that were updated.",
                        "minimum": 0,
                        "example": 20
                      }
                    }
                  }
                }
              }
            },
            "202": {
              "description": "The execution of the statement is still in progress. Use this method again to check the status of the statement execution.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  },
                  "code": {
                    "type": "string",
                    "example": "000123"
                  },
                  "sqlState": {
                    "type": "string",
                    "example": "42601"
                  },
                  "message": {
                    "type": "string",
                    "example": "successfully executed"
                  },
                  "createdOn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Timestamp that specifies when the statement execution started. The timestamp is expressed in milliseconds since the epoch",
                    "example": 1597090533987
                  },
                  "statementStatusUrl": {
                    "type": "string",
                    "example": "/api/v2/statements/GUID value"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request. The request payload is invalid or malformed.",
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "401": {
              "description": "Unauthorized. The request is not authorized.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden. The request is forbidden.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found. The request endpoint is not valid.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "405": {
              "description": "Method Not Allowed. The request method doesn't match the supported API.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "415": {
              "description": "The request header Content-Type includes unsupported media type. The API supports application/json only.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "422": {
              "description": "The execution of the statement exceeded the timeout period. The execution of the statement was cancelled.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  },
                  "code": {
                    "type": "string",
                    "example": "000123"
                  },
                  "sqlState": {
                    "type": "string",
                    "example": "42601"
                  },
                  "message": {
                    "type": "string",
                    "example": "successfully executed"
                  },
                  "createdOn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Timestamp that specifies when the statement execution started. The timestamp is expressed in milliseconds since the epoch",
                    "example": 1597090533987
                  },
                  "statementStatusUrl": {
                    "type": "string",
                    "example": "/api/v2/statements/GUID value"
                  }
                }
              }
            },
            "429": {
              "description": "Limit Exceeded. The number of requests hit the rate limit.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error. The server hits an unrecoverable system error.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "503": {
              "description": "Service Unavailable. The request was not processed due to server side timeouts.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "504": {
              "description": "Gateway Timeout. The request was not processed due to server side timeouts.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            }
          },
          "summary": "Check the Status and Get Results",
          "description": "Check the Status of the Execution of a Statement and Get the Results",
          "operationId": "GetResults",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "name": "Instance",
              "in": "header",
              "type": "string",
              "required": true,
              "description": "The uri of your Snowflake instance (without https://)",
              "x-ms-visibility": "important",
              "x-ms-summary": "Instance"
            },
            {
              "name": "Content-Type",
              "in": "header",
              "default": "application/json",
              "type": "string",
              "required": true,
              "x-ms-visibility": "internal",
              "description": "Content-Type",
              "x-ms-summary": "Content Type"
            },
            {
              "name": "Accept",
              "in": "header",
              "default": "application/json",
              "type": "string",
              "required": true,
              "x-ms-visibility": "internal",
              "description": "Accept",
              "x-ms-summary": "Accept"
            },
            {
              "name": "statementHandle",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "statement handle",
              "x-ms-summary": "statement handle"
            },
            {
              "name": "requestId",
              "in": "query",
              "type": "string",
              "x-ms-visibility": "advanced",
              "description": "Request ID",
              "x-ms-summary": "Request ID"
            },
            {
              "name": "partition",
              "in": "query",
              "type": "integer",
              "description": "partition",
              "x-ms-summary": "partition"
            }
          ]
        }
      },
      "/{statementHandle}/cancel": {
        "post": {
          "responses": {
            "200": {
              "description": "Success",
              "x-ms-summary": "Message",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "code"
                  },
                  "sqlState": {
                    "type": "string",
                    "description": "sqlState"
                  },
                  "message": {
                    "type": "string",
                    "description": "message"
                  },
                  "statementHandle": {
                    "type": "string",
                    "description": "statementHandle"
                  },
                  "statementStatusUrl": {
                    "type": "string",
                    "description": "statementStatusUrl"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request. The request payload is invalid or malformed.",
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "401": {
              "description": "Unauthorized. The request is not authorized.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden. The request is forbidden.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found. The request endpoint is not valid.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "405": {
              "description": "Method Not Allowed. The request method doesn't match the supported API.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "422": {
              "description": "The execution of the statement exceeded the timeout period. The execution of the statement was cancelled.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  },
                  "code": {
                    "type": "string",
                    "example": "000123"
                  },
                  "sqlState": {
                    "type": "string",
                    "example": "42601"
                  },
                  "message": {
                    "type": "string",
                    "example": "successfully executed"
                  },
                  "createdOn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Timestamp that specifies when the statement execution started. The timestamp is expressed in milliseconds since the epoch",
                    "example": 1597090533987
                  },
                  "statementStatusUrl": {
                    "type": "string",
                    "example": "/api/v2/statements/GUID value"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error. The server hits an unrecoverable system error.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "503": {
              "description": "Service Unavailable. The request was not processed due to server side timeouts.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            },
            "504": {
              "description": "Gateway Timeout. The request was not processed due to server side timeouts.",
              "schema": {
                "type": "object",
                "properties": {
                  "statementHandle": {
                    "type": "string",
                    "example": "GUID value"
                  }
                }
              }
            }
          },
          "summary": "Cancel the Execution of a Statement",
          "description": "Cancel the Execution of a Statement",
          "operationId": "Cancel",
          "parameters": [
            {
              "name": "Instance",
              "in": "header",
              "type": "string",
              "required": true,
              "description": "The uri of your Snowflake instance (without https://)",
              "x-ms-visibility": "important",
              "x-ms-summary": "Instance"
            },
            {
              "name": "statementHandle",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "statement handle",
              "x-ms-summary": "statement handle"
            },
            {
              "name": "Content-Type",
              "in": "header",
              "default": "application/json",
              "type": "string",
              "required": true,
              "x-ms-visibility": "internal",
              "description": "Content-Type",
              "x-ms-summary": "Content-Type"
            },
            {
              "name": "Accept",
              "in": "header",
              "default": "application/json",
              "type": "string",
              "required": true,
              "x-ms-visibility": "internal",
              "description": "Accept",
              "x-ms-summary": "Accept"
            },
            {
              "name": "requestId",
              "in": "query",
              "type": "string",
              "description": "Request ID",
              "x-ms-summary": "Request ID"
            }
          ]
        }
      },
      "/convert": {
        "post": {
          "responses": {
            "200": {
              "description": "Success",
              "x-ms-summary": "Message",
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "description": "Result set data.",
                    "type": "array",
                    "minItems": 0,
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error. The server hits an unrecoverable system error.",
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Something went wrong"
                  }
                }
              }
            },
          },
          "summary": "Convert result set rows from array to objects",
          "description": "Convert result set rows from array to objects",
          "operationId": "Convert",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "description": "body",
              "x-ms-summary": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "resultSetMetaData": {
                    "type": "string"
                  },
                  "data": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "definitions": {},
    "parameters": {},
    "responses": {},
    "securityDefinitions": {
      "oauth2_auth": {
        "type": "oauth2",
        "flow": "accessCode",
        "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
        "tokenUrl": "https://uniper.west-europe.azure.snowflakecomputing.com/oauth/token-request",
        "scopes": {}
      }
    },
    "security": [
      {
        "oauth2_auth": []
      }
    ],
    "tags": [],
    "x-ms-connector-metadata": [
      {
        "propertyName": "Website",
        "propertyValue": "https://www.snowflake.com"
      },
      {
        "propertyName": "Privacy policy",
        "propertyValue": "https://www.snowflake.com/privacy-policy"
      },
      {
        "propertyName": "Categories",
        "propertyValue": "Data" 
      }
    ]
  }