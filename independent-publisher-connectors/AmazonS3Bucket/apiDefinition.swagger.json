{
  "swagger": "2.0",
  "info": {
    "title": "Amazon S3 Bucket",
    "description": "This connector provides read and write access to objects of an Amazon S3 Bucket.",
    "version": "1.0",
    "contact": {
      "name": "Michael Megel",
      "url": "https://never-stop-learning.de",
      "email": "michael.megel@never-stop-learning.de"
    }
  },
  "host": "s3.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/aws/s3/{region}/{bucket}": {
      "get": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "ListBucketResult": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string",
                      "description": "The bucket name."
                    },
                    "Prefix": {
                      "type": "string",
                      "description": "Keys that begin with the indicated prefix."
                    },
                    "MaxKeys": {
                      "type": "string",
                      "description": "Sets the maximum number of keys returned in the response. By default, the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more."
                    },
                    "IsTruncated": {
                      "type": "string",
                      "description": "Set to false if all of the results were returned. Set to true if more keys are available to return. If the number of results exceeds that specified by MaxKeys, all of the results might not be returned."
                    },
                    "KeyCount": {
                      "type": "string",
                      "description": "KeyCount is the number of keys returned with this request. KeyCount will always be less than or equal to the MaxKeys field. For example, if you ask for 50 keys, your result will include 50 keys or fewer."
                    },
                    "ContinuationToken": {
                      "type": "string",
                      "description": "If ContinuationToken was sent with the request, it is included in the response."
                    },
                    "NextContinuationToken": {
                      "type": "string",
                      "description": "NextContinuationToken is sent when isTruncated is true, which means there are more keys in the bucket that can be listed. The next list requests to Amazon S3 can be continued with this NextContinuationToken. NextContinuationToken is obfuscated and is not a real key"
                    },
                    "StartAfter": {
                      "type": "string",
                      "description": "If StartAfter was sent with the request, it is included in the response."
                    },
                    "Contents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Key": {
                            "type": "string",
                            "description": "The key of the object."
                          },
                          "LastModified": {
                            "type": "string",
                            "description": "The last modified date of the object"
                          },
                          "Size": {
                            "type": "string",
                            "description": "The size of the object in bytes."
                          },
                          "Owner": {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "type": "string",
                                "description": "The ID of the owner."
                              },
                              "DisplayName": {
                                "type": "string",
                                "description": "The display name of the owner."
                              }
                            },
                            "description": "Owner"
                          },
                          "StorageClass": {
                            "type": "string",
                            "description": "The S3 Storage Class"
                          }
                        }
                      },
                      "description": "The list of objects."
                    }
                  },
                  "description": "List S3 Objects Result"
                }
              }
            }
          }
        },
        "tags": [
          "S3-Bucket"
        ],
        "summary": "List Objects",
        "description": "List Objects in S3 Bucket",
        "operationId": "list-objects-s3",
        "parameters": [
          {
            "name": "region",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "",
            "description": "The region of the S3 bucket.",
            "x-ms-summary": "Region"
          },
          {
            "name": "bucket",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "",
            "description": "The name of the S3 bucket.",
            "x-ms-summary": "Bucket"
          },
          {
            "name": "bucketlist-type",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "2",
            "description": "The bucket list type.",
            "x-ms-summary": "Bucket List Type"
          },
          {
            "name": "continuation-token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ContinuationToken indicates to Amazon S3 that the list is being continued on this bucket with a token. ContinuationToken is obfuscated and is not a real key.",
            "x-ms-summary": "Continuation Token"
          },
          {
            "name": "delimiter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A delimiter is a character that you use to group keys.",
            "x-ms-summary": "Delimiter"
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Limits the response to keys that begin with the specified prefix.",
            "x-ms-summary": "Prefix"
          },
          {
            "name": "encoding-type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Encoding type used by Amazon S3 to encode object keys in the response.",
            "x-ms-summary": "Encoding Type"
          },
          {
            "name": "fetch-owner",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The owner field is not present in ListObjectsV2 by default. If you want to return the owner field with each key in the result, then set the FetchOwner field to true.",
            "x-ms-summary": "Fetch Owner"
          },
          {
            "name": "max-keys",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "integer",
            "description": "Sets the maximum number of keys returned in the response. By default, the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.",
            "x-ms-summary": "Max Keys"
          },
          {
            "name": "start-after",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. StartAfter can be any key in the bucket.",
            "x-ms-summary": "Start After"
          }
        ]
      }
    },
    "/aws/s3/{region}/{bucket}/{key}": {
      "delete": {
        "responses": {
          "204": {
            "description": "success",
            "schema": {}
          }
        },
        "tags": [
          "S3-Bucket"
        ],
        "summary": "Delete Object",
        "description": "Delete Object from S3 Bucket",
        "operationId": "delete-object-s3",
        "parameters": [
          {
            "name": "region",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "",
            "description": "The region of the S3 bucket.",
            "x-ms-summary": "Region"
          },
          {
            "name": "bucket",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "",
            "description": "The name of the S3 bucket.",
            "x-ms-summary": "Bucket"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The key of the object.",
            "x-ms-summary": "Key"
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {}
          }
        },
        "tags": [
          "S3-Bucket"
        ],
        "summary": "Get Object",
        "description": "Get Object from S3 Bucket",
        "operationId": "get-object-s3",
        "parameters": [
          {
            "name": "region",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "",
            "description": "The region of the S3 bucket.",
            "x-ms-summary": "Region"
          },
          {
            "name": "bucket",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "",
            "description": "The name of the S3 bucket.",
            "x-ms-summary": "Bucket"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "",
            "description": "The key of the object.",
            "x-ms-summary": "Key"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {}
          }
        },
        "tags": [
          "S3-Bucket"
        ],
        "summary": "Put Object",
        "description": "Put Object to S3 Bucket",
        "operationId": "put-object-s3",
        "parameters": [
          {
            "name": "region",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "",
            "description": "The region of the S3 bucket.",
            "x-ms-summary": "Region"
          },
          {
            "name": "bucket",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "",
            "description": "The name of the S3 bucket.",
            "x-ms-summary": "Bucket"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "",
            "description": "The key of the object.",
            "x-ms-summary": "Key"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Content"
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "basic-auth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic-auth": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://aws.amazon.com//"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://aws.amazon.com//"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Content and Files"
    }
  ]
}
