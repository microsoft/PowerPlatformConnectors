{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Strava",
    "description": "This is a connector for the Strava API, Strava is a service for tracking human exercise which incorporates social network features. It is mostly used for cycling and running using GPS data. The connector gives you the opportunity to get your activities/clubs and other information from Strava.",
    "contact": {
      "name": "Richard Wierenga",
      "url": "https://developers.strava.com/",
      "email": "rwconnectors@gmail.com"
    }
  },
  "host": "www.strava.com",
  "basePath": "/api/v3/",
  "schemes": ["https"],
  "consumes": [],
  "produces": ["application/json"],
  "paths": {
    "/athletes/{id}/stats": {
      "get": {
        "summary": "Get Athlete Stats",
        "description": "Returns the activity stats of an athlete. Only includes data from activities set to Everyone visibility.",
        "operationId": "GetAthleteStats",
        "parameters": [
          {
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Athlete id",
            "description": "Specify the athlete id",
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "biggest_ride_distance": {
                  "type": "number",
                  "format": "float",
                  "description": "The longest distance ridden by the athlete."
                },
                "biggest_climb_elevation_gain": {
                  "type": "number",
                  "format": "float",
                  "description": "The highest climb ridden by the athlete."
                },
                "recent_ride_totals": {
                  "$ref": "#/definitions/ActivityTotal"
                },
                "all_ride_totals": {
                  "$ref": "#/definitions/ActivityTotalShort"
                },
                "recent_run_totals": {
                  "$ref": "#/definitions/ActivityTotal"
                },
                "all_run_totals": {
                  "$ref": "#/definitions/ActivityTotalShort"
                },
                "recent_swim_totals": {
                  "$ref": "#/definitions/ActivityTotal"
                },
                "all_swim_totals": {
                  "$ref": "#/definitions/ActivityTotalShort"
                },
                "ytd_ride_totals": {
                  "$ref": "#/definitions/ActivityTotalShort"
                },
                "ytd_run_totals": {
                  "$ref": "#/definitions/ActivityTotalShort"
                },
                "ytd_swim_totals": {
                  "$ref": "#/definitions/ActivityTotalShort"
                }
              }
            }
          }
        }
      }
    },
    "/athlete": {
      "get": {
        "summary": "Get Authenticated Athlete",
        "description": "Returns the currently authenticated athlete. Tokens with profile:read_all scope will receive a detailed athlete representation; all others will receive a summary representation.",
        "operationId": "GetAuthenticatedAthlete",
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique identifier of the athlete"
                },
                "firstname": {
                  "type": "string",
                  "description": "The athlete's first name."
                },
                "lastname": {
                  "type": "string",
                  "description": "The athlete's last name."
                },
                "city": {
                  "type": "string",
                  "description": "The athlete's city."
                },
                "state": {
                  "type": "string",
                  "description": "The athlete's state or geographical region."
                },
                "country": {
                  "type": "string",
                  "description": "The athlete's country"
                },
                "sex": {
                  "type": "string",
                  "description": "The athlete's sex. May take one of the following values: M, F"
                },
                "summit": {
                  "type": "boolean",
                  "description": "Whether the athlete has any Summit subscription."
                },
                "created_at": {
                  "type": "string",
                  "description": "The time at which the athlete was created."
                },
                "updated_at": {
                  "type": "string",
                  "description": "The time at which the athlete was last updated."
                },
                "profile_medium": {
                  "type": "string",
                  "description": "URL to a 62x62 pixel profile picture."
                },
                "profile": {
                  "type": "string",
                  "description": "URL to a 124x124 pixel profile picture."
                },
                "follower_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The athlete's follower count."
                },
                "friend_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The athlete's friend count."
                },
                "measurement_preference": {
                  "type": "string",
                  "description": "The athlete's preferred unit system. May take one of the following values: feet, meters"
                },
                "clubs": {
                  "type": "array",
                  "items": {},
                  "description": "The athlete's clubs."
                },
                "ftp": {
                  "type": "string",
                  "description": "The athlete's FTP (Functional Threshold Power)."
                },
                "weight": {
                  "type": "number",
                  "format": "float",
                  "description": "The athlete's weight."
                },
                "bikes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Bikes"
                  },
                  "description": "The athlete's bikes."
                },
                "shoes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Shoes"
                  },
                  "description": "The athlete's shoes."
                }
              }
            }
          }
        }
      }
    },
    "/athlete/activities": {
      "get": {
        "summary": "List Athlete Activities",
        "description": "Returns the activities of an athlete for a specific identifier. Requires activity:read. Only Me activities will be filtered out unless requested by a token with activity:read_all.",
        "operationId": "ListAthleteActivities",
        "parameters": [
          {
            "x-ms-summary": "Before timestamp",
            "description": "An epoch timestamp(the number of seconds since 1 January 1970) to use for filtering activities that have taken place before a certain time.",
            "name": "before",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-summary": "after timestamp",
            "description": "An epoch timestamp(the number of seconds since 1 January 1970) to use for filtering activities that have taken place after a certain time.",
            "name": "after",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-summary": "Page",
            "description": "Page number. Defaults to 1.",
            "name": "page",
            "default": "1",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-summary": "Per page",
            "description": "Number of items per page. Defaults to 30.",
            "name": "per_page",
            "default": "30",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SummaryActivity"
              }
            }
          }
        }
      }
    },
    "/athlete/clubs": {
      "get": {
        "summary": "List Athlete Clubs",
        "description": "Returns a list of the clubs whose membership includes the authenticated athlete.",
        "operationId": "ListAthleteClubs",
        "parameters": [
          {
            "x-ms-summary": "Page",
            "description": "Page number. Defaults to 1.",
            "name": "page",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-summary": "Per page",
            "description": "Number of items per page. Defaults to 30.",
            "name": "per_page",
            "default": "30",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Club"
              }
            }
          }
        }
      }
    },
    "/segments/{id}": {
      "get": {
        "summary": "Get Segment",
        "description": "Returns the specified segment. read_all scope required in order to retrieve athlete-specific segment information, or to retrieve private segments.",
        "operationId": "GetSegment",
        "parameters": [
          {
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Segment id",
            "description": "The identifier of the segment.",
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/DetailedSegment"
            }
          }
        }
      }
    },
    "/segments/starred": {
      "get": {
        "summary": "List Starred Segments",
        "description": "List of the authenticated athlete's starred segments. Private segments are filtered out unless requested by a token with read_all scope.",
        "operationId": "ListStarredSegments",
        "parameters": [
          {
            "x-ms-summary": "Page",
            "description": "Page number. Defaults to 1.",
            "name": "page",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-summary": "Per page",
            "description": "Number of items per page. Defaults to 30.",
            "name": "per_page",
            "default": "30",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SummarySegment"
              }
            }
          }
        }
      }
    },
    "/activities/{id}": {
      "get": {
        "summary": "Get Activity",
        "description": "Returns the given activity that is owned by the authenticated athlete. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.",
        "operationId": "GetActivity",
        "parameters": [
          {
            "x-ms-summary": "Include all efforts",
            "description": "To include all segments efforts (true/false).",
            "name": "include_all_efforts",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Activity id",
            "description": "The identifier of the activity.",
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/DetailedActivity"
            }
          }
        }
      }
    },
    "/activities/{id}/laps": {
      "get": {
        "summary": "List Activity Laps",
        "description": "Returns the laps of an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.",
        "operationId": "ListActivityLaps",
        "parameters": [
          {
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Activity id",
            "description": "The identifier of the activity.",
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Lap"
              }
            }
          }
        }
      }
    },
    "/activities/{id}/comments": {
      "get": {
        "summary": "List Activity Comments",
        "description": "Returns the comments on the given activity. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.",
        "operationId": "ListActivityComments",
        "parameters": [
          {
            "x-ms-summary": "Page",
            "description": "Page number. Defaults to 1.",
            "name": "page",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-summary": "Per page",
            "description": "Number of items per page. Defaults to 30.",
            "name": "per_page",
            "default": "30",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Activity id",
            "description": "The identifier of the activity.",
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique identifier of this comment"
                  },
                  "activity_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The identifier of the activity this comment is related to"
                  },
                  "text": {
                    "type": "string",
                    "description": "The content of the comment"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "The time at which this comment was created."
                  },
                  "athlete": {
                    "$ref": "#/definitions/SummaryAthlete"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activities/{id}/kudos": {
      "get": {
        "summary": "List Activity Kudoers",
        "description": "Returns the athletes who kudoed an activity identified by an identifier. Requires activity:read for Everyone and Followers activities. Requires activity:read_all for Only Me activities.",
        "operationId": "ListActivityKudoers",
        "parameters": [
          {
            "x-ms-summary": "Page",
            "description": "Page number. Defaults to 1.",
            "name": "page",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-summary": "Per page",
            "description": "Number of items per page. Defaults to 30.",
            "name": "per_page",
            "default": "30",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Activity id",
            "description": "The identifier of the activity.",
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SummaryAthlete"
              }
            }
          }
        }
      }
    },
    "/clubs/{id}": {
      "get": {
        "summary": "Get Club",
        "description": "Returns a given club using its identifier.",
        "operationId": "GetClub",
        "parameters": [
          {
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Club id",
            "description": "The identifier of the club.",
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Club"
            }
          }
        }
      }
    },
    "/clubs/{id}/members": {
      "get": {
        "summary": "List Club Members",
        "description": "Returns a list of the athletes who are members of a given club.",
        "operationId": "ListClubMembers",
        "parameters": [
          {
            "x-ms-summary": "Page",
            "description": "Page number. Defaults to 1.",
            "name": "page",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-summary": "Per page",
            "description": "Number of items per page. Defaults to 30.",
            "name": "per_page",
            "default": "30",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Club id",
            "description": "The identifier of the club.",
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource_state": {
                    "type": "integer",
                    "format": "int32",
                    "description": "resource_state"
                  },
                  "firstname": {
                    "type": "string",
                    "description": "firstname"
                  },
                  "lastname": {
                    "type": "string",
                    "description": "lastname"
                  },
                  "membership": {
                    "type": "string",
                    "description": "membership"
                  },
                  "admin": {
                    "type": "boolean",
                    "description": "admin"
                  },
                  "owner": {
                    "type": "boolean",
                    "description": "owner"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clubs/{id}/admins": {
      "get": {
        "summary": "List Club Administrators",
        "description": "Returns a list of the administrators of a given club.",
        "operationId": "ListClubAdministrators",
        "parameters": [
          {
            "x-ms-summary": "Page",
            "description": "Page number. Defaults to 1.",
            "name": "page",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-summary": "Per page",
            "description": "Number of items per page. Defaults to 30.",
            "name": "per_page",
            "default": "30",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Club id",
            "description": "The identifier of the club.",
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SummaryAthlete"
              }
            }
          }
        }
      }
    },
    "/clubs/{id}/activities": {
      "get": {
        "summary": "List Club Activities",
        "description": "Retrieve recent activities from members of a specific club. The authenticated athlete must belong to the requested club in order to hit this endpoint. Pagination is supported. Athlete profile visibility is respected for all activities.",
        "operationId": "ListClubActivities",
        "parameters": [
          {
            "x-ms-summary": "Page",
            "description": "Page number. Defaults to 1.",
            "name": "page",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-summary": "Per page",
            "description": "Number of items per page. Defaults to 30.",
            "name": "per_page",
            "default": "30",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Club id",
            "description": "The identifier of the club.",
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SummaryActivity"
              }
            }
          }
        }
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.strava.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.strava.com/legal/api"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Lifestyle and Entertainment;Data"
    }
  ],
  "definitions": {
    "DetailedActivity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The unique identifier of the activity"
        },
        "resource_state": {
          "type": "integer",
          "format": "int32",
          "description": "resource_state"
        },
        "external_id": {
          "type": "string",
          "description": "The identifier provided at upload time"
        },
        "upload_id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier of the upload that resulted in this activity"
        },
        "athlete": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "description": "Athlete id"
            }
          },
          "description": "The activity athlete"
        },
        "name": {
          "type": "string",
          "description": "The name of the activity"
        },
        "distance": {
          "type": "number",
          "format": "float",
          "description": "The activity's distance, in meters"
        },
        "moving_time": {
          "type": "integer",
          "format": "int32",
          "description": "The activity's moving time, in seconds"
        },
        "elapsed_time": {
          "type": "integer",
          "format": "int32",
          "description": "The activity's elapsed time, in seconds"
        },
        "total_elevation_gain": {
          "type": "number",
          "format": "float",
          "description": "The activity's total elevation gain."
        },
        "type": {
          "type": "string",
          "description": "An enumeration of the types an activity may have."
        },
        "start_date": {
          "type": "string",
          "description": "The time at which the activity was started."
        },
        "start_date_local": {
          "type": "string",
          "description": "The time at which the activity was started in the local timezone."
        },
        "timezone": {
          "type": "string",
          "description": "The timezone of the activity"
        },
        "utc_offset": {
          "type": "number",
          "format": "float",
          "description": "utc_offset"
        },
        "start_latlng": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "description": "A collection of float objects. A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers."
        },
        "end_latlng": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "description": "A collection of float objects. A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers."
        },
        "achievement_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of achievements gained during this activity"
        },
        "kudos_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of kudos given for this activity"
        },
        "comment_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of comments for this activity"
        },
        "athlete_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of athletes for taking part in a group activity"
        },
        "photo_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Instagram photos for this activity"
        },
        "map": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The identifier of the map"
            },
            "polyline": {
              "type": "string",
              "description": "The polyline of the map, only returned on detailed representation of an object"
            },
            "summary_polyline": {
              "type": "string",
              "description": "The summary polyline of the map"
            }
          },
          "description": "The activity map"
        },
        "trainer": {
          "type": "boolean",
          "description": "Whether this activity was recorded on a training machine"
        },
        "commute": {
          "type": "boolean",
          "description": "Whether this activity is a commute"
        },
        "manual": {
          "type": "boolean",
          "description": "Whether this activity was created manually"
        },
        "private": {
          "type": "boolean",
          "description": "Whether this activity is private"
        },
        "flagged": {
          "type": "boolean",
          "description": "Whether this activity is flagged"
        },
        "gear_id": {
          "type": "string",
          "description": "The id of the gear for the activity"
        },
        "average_speed": {
          "type": "number",
          "format": "float",
          "description": "The activity's average speed, in meters per second"
        },
        "max_speed": {
          "type": "number",
          "format": "float",
          "description": "The activity's max speed, in meters per second"
        },
        "average_cadence": {
          "type": "number",
          "format": "float",
          "description": "The activity's average cadence"
        },
        "average_temp": {
          "type": "integer",
          "format": "int32",
          "description": "The activity's average temp"
        },
        "average_watts": {
          "type": "number",
          "format": "float",
          "description": "Average power output in watts during this activity. Rides only"
        },
        "weighted_average_watts": {
          "type": "integer",
          "format": "int32",
          "description": "Similar to Normalized Power. Rides with power meter data only"
        },
        "kilojoules": {
          "type": "number",
          "format": "float",
          "description": "The activity's kilojoules"
        },
        "device_watts": {
          "type": "boolean",
          "description": "Whether the watts are from a power meter, false if estimated"
        },
        "has_heartrate": {
          "type": "boolean",
          "description": "Whether the activity has heartrate"
        },
        "max_watts": {
          "type": "integer",
          "format": "int32",
          "description": "Rides with power meter data only"
        },
        "elev_high": {
          "type": "number",
          "format": "float",
          "description": "The activity's highest elevation, in meters"
        },
        "elev_low": {
          "type": "number",
          "format": "float",
          "description": "The activity's lowest elevation, in meters"
        },
        "total_photo_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Instagram and Strava photos for this activity"
        },
        "has_kudoed": {
          "type": "boolean",
          "description": "Whether the logged-in athlete has kudoed this activity"
        },
        "workout_type": {
          "type": "integer",
          "format": "int32",
          "description": "The activity's workout type"
        },
        "suffer_score": {
          "type": "string",
          "description": "The activity's  suffer score"
        },
        "description": {
          "type": "string",
          "description": "The description of the activity"
        },
        "calories": {
          "type": "number",
          "format": "float",
          "description": "The number of kilocalories consumed during this activity"
        },
        "segment_efforts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "description": "Segment id"
              },
              "name": {
                "type": "string",
                "description": "Segment name"
              },
              "activity": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Related Activity id"
                  }
                },
                "description": "activity"
              },
              "athlete": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Related athlete id"
                  }
                },
                "description": "athlete"
              },
              "elapsed_time": {
                "type": "integer",
                "format": "int32",
                "description": "The effort's elapsed time"
              },
              "moving_time": {
                "type": "integer",
                "format": "int32",
                "description": "The effort's moving time"
              },
              "start_date": {
                "type": "string",
                "description": "The time at which the effort was started."
              },
              "start_date_local": {
                "type": "string",
                "description": "The time at which the effort was started in the local timezone."
              },
              "distance": {
                "type": "number",
                "format": "float",
                "description": "The effort's distance in meters"
              },
              "start_index": {
                "type": "integer",
                "format": "int32",
                "description": "The start index of this effort in its activity's stream"
              },
              "end_index": {
                "type": "integer",
                "format": "int32",
                "description": "The end index of this effort in its activity's stream"
              },
              "average_cadence": {
                "type": "number",
                "format": "float",
                "description": "The effort's average cadence"
              },
              "device_watts": {
                "type": "boolean",
                "description": "For riding efforts, whether the wattage was reported by a dedicated recording device"
              },
              "average_watts": {
                "type": "number",
                "format": "float",
                "description": "The average wattage of this effort"
              },
              "segment": {
                "$ref": "#/definitions/SummarySegment"
              },
              "kom_rank": {
                "type": "integer",
                "format": "int32",
                "description": "The rank of the effort on the global leaderboard if it belongs in the top 10 at the time of upload"
              },
              "pr_rank": {
                "type": "integer",
                "format": "int32",
                "description": "The rank of the effort on the athlete's leaderboard if it belongs in the top 3 at the time of upload"
              }
            }
          },
          "description": "The Activity segment efforts"
        },
        "splits_metric": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "distance": {
                "type": "number",
                "format": "float",
                "description": "The distance of this split, in meters"
              },
              "elapsed_time": {
                "type": "integer",
                "format": "int32",
                "description": "The elapsed time of this split, in seconds"
              },
              "elevation_difference": {
                "type": "number",
                "format": "float",
                "description": "The elevation difference of this split, in meters"
              },
              "moving_time": {
                "type": "integer",
                "format": "int32",
                "description": "The moving time of this split, in seconds"
              },
              "split": {
                "type": "integer",
                "format": "int32",
                "description": "split"
              },
              "average_speed": {
                "type": "number",
                "format": "float",
                "description": "The average speed of this split, in meters per second"
              },
              "pace_zone": {
                "type": "integer",
                "format": "int32",
                "description": "The pacing zone of this split"
              }
            }
          },
          "description": "The splits metric of the Activity"
        },
        "laps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Lap"
          },
          "description": "The laps of the Activity"
        },
        "gear": {
          "$ref": "#/definitions/SummaryGear"
        },
        "photos": {
          "type": "object",
          "properties": {
            "primary": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Photo id"
                },
                "unique_id": {
                  "type": "string",
                  "description": "Photo unique id"
                },
                "urls": {
                  "type": "object",
                  "properties": {
                    "100": {
                      "type": "string",
                      "description": "Small photo (100)"
                    },
                    "600": {
                      "type": "string",
                      "description": "Big photo (600)"
                    }
                  },
                  "description": "Photo urls"
                },
                "source": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Photo source"
                }
              },
              "description": "The primary photo"
            },
            "use_primary_photo": {
              "type": "boolean",
              "description": "use primary photo"
            },
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "The number of photos"
            }
          },
          "description": "The photo's by the activity"
        },
        "highlighted_kudosers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "destination_url": {
                "type": "string",
                "description": "Link to athlete profile"
              },
              "display_name": {
                "type": "string",
                "description": "Name of Athlete"
              },
              "avatar_url": {
                "type": "string",
                "description": "Avatar of Athlete"
              },
              "show_name": {
                "type": "boolean",
                "description": "Display name of athlete (true/false)"
              }
            }
          },
          "description": "All athletes that gave kudos"
        },
        "device_name": {
          "type": "string",
          "description": "The name of the device used to record the activity"
        },
        "embed_token": {
          "type": "string",
          "description": "The token used to embed a Strava activity"
        }
      }
    },
    "Club": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The club's unique identifier."
        },
        "name": {
          "type": "string",
          "description": "The club's name."
        },
        "profile_medium": {
          "type": "string",
          "description": "URL to a 60x60 pixel profile picture."
        },
        "cover_photo": {
          "type": "string",
          "description": "URL to a ~1185x580 pixel cover photo."
        },
        "cover_photo_small": {
          "type": "string",
          "description": "URL to a ~360x176 pixel cover photo."
        },
        "activity_types": {
          "type": "string",
          "description": "The activity types that count for a club. This takes precedence over sport_type."
        },
        "city": {
          "type": "string",
          "description": "The club's city."
        },
        "state": {
          "type": "string",
          "description": "The club's state."
        },
        "country": {
          "type": "string",
          "description": "The club's country."
        },
        "private": {
          "type": "boolean",
          "description": "Whether the club is private."
        },
        "member_count": {
          "type": "integer",
          "format": "int32",
          "description": "The club's member count."
        },
        "featured": {
          "type": "boolean",
          "description": "Whether the club is featured or not."
        },
        "verified": {
          "type": "boolean",
          "description": "Whether the club is verified or not."
        },
        "url": {
          "type": "string",
          "description": "The club's vanity URL."
        },
        "membership": {
          "type": "string",
          "description": "The membership status of the logged-in athlete. May take one of the following values: member, pending"
        },
        "admin": {
          "type": "boolean",
          "description": "Whether the currently logged-in athlete is an administrator of this club."
        },
        "owner": {
          "type": "boolean",
          "description": "Whether the currently logged-in athlete is the owner of this club."
        },
        "owner_id": {
          "type": "integer",
          "format": "int32",
          "description": "Athlete id of the owner"
        },
        "following_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of athletes in the club that the logged-in athlete follows."
        }
      }
    },
    "SummaryAthlete": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier of the athlete"
        },
        "firstname": {
          "type": "string",
          "description": "The athlete's first name."
        },
        "lastname": {
          "type": "string",
          "description": "The athlete's last name."
        }
      },
      "description": "The summary of an athlete"
    },
    "Lap": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The unique identifier of this lap"
        },
        "name": {
          "type": "string",
          "description": "The name of the lap"
        },
        "activity": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "description": "Related activity id"
            }
          },
          "description": "The related activity"
        },
        "athlete": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "description": "Related athlete id"
            }
          },
          "description": "The summary of the related athlete"
        },
        "elapsed_time": {
          "type": "integer",
          "format": "int32",
          "description": "The lap's elapsed time, in seconds"
        },
        "moving_time": {
          "type": "integer",
          "format": "int32",
          "description": "The lap's moving time, in seconds"
        },
        "start_date": {
          "type": "string",
          "description": "The time at which the lap was started."
        },
        "start_date_local": {
          "type": "string",
          "description": "The time at which the lap was started in the local timezone."
        },
        "distance": {
          "type": "number",
          "format": "float",
          "description": "The lap's distance, in meters"
        },
        "start_index": {
          "type": "integer",
          "format": "int32",
          "description": "The start index of this effort in its activity's stream"
        },
        "end_index": {
          "type": "integer",
          "format": "int32",
          "description": "The end index of this effort in its activity's stream"
        },
        "total_elevation_gain": {
          "type": "number",
          "format": "float",
          "description": "The elevation gain of this lap, in meters"
        },
        "average_speed": {
          "type": "number",
          "format": "float",
          "description": "The lap's average speed"
        },
        "max_speed": {
          "type": "number",
          "format": "float",
          "description": "The maximum speed of this lap, in meters per second"
        },
        "average_cadence": {
          "type": "number",
          "format": "float",
          "description": "The lap's average cadence"
        },
        "lap_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of this lap in the activity it belongs to"
        },
        "split": {
          "type": "integer",
          "format": "int32",
          "description": "the splits for the lap"
        }
      }
    },
    "SummaryActivity": {
      "type": "object",
      "properties": {
        "athlete": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "description": "Activity athlete id"
            }
          },
          "description": "The related activity athlete"
        },
        "name": {
          "type": "string",
          "description": "The name of the activity"
        },
        "distance": {
          "type": "number",
          "format": "float",
          "description": "The activity's distance, in meters"
        },
        "moving_time": {
          "type": "integer",
          "format": "int32",
          "description": "The activity's moving time, in seconds"
        },
        "elapsed_time": {
          "type": "integer",
          "format": "int32",
          "description": "The activity's elapsed time, in seconds"
        },
        "total_elevation_gain": {
          "type": "number",
          "format": "float",
          "description": "The activity's total elevation gain."
        },
        "type": {
          "type": "string",
          "description": "An enumeration of the types an activity may have."
        },
        "workout_type": {
          "type": "integer",
          "format": "int32",
          "description": "The activity's workout type"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The unique identifier of the activity"
        },
        "external_id": {
          "type": "string",
          "description": "The identifier provided at upload time"
        },
        "upload_id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier of the upload that resulted in this activity"
        },
        "start_date": {
          "type": "string",
          "description": "The time at which the activity was started."
        },
        "start_date_local": {
          "type": "string",
          "description": "The time at which the activity was started in the local timezone."
        },
        "timezone": {
          "type": "string",
          "description": "The timezone of the activity"
        },
        "start_latlng": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "description": "Start latlng"
        },
        "end_latlng": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "description": "End latlng"
        },
        "location_city": {
          "type": "string",
          "description": "Activity location city"
        },
        "location_state": {
          "type": "string",
          "description": "Activity location state"
        },
        "location_country": {
          "type": "string",
          "description": "Activity location country"
        },
        "achievement_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of achievements gained during this activity"
        },
        "kudos_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of kudos given for this activity"
        },
        "comment_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of comments for this activity"
        },
        "athlete_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of athletes for taking part in a group activity"
        },
        "photo_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Instagram photos for this activity"
        },
        "map": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The identifier of the map"
            },
            "summary_polyline": {
              "type": "string",
              "description": "The summary polyline of the map"
            },
            "polyline": {
              "type": "string",
              "description": "The polyline of the map, only returned on detailed representation of an object"
            }
          },
          "description": "The activity's map"
        },
        "trainer": {
          "type": "boolean",
          "description": "Whether this activity was recorded on a training machine"
        },
        "commute": {
          "type": "boolean",
          "description": "Whether this activity is a commute"
        },
        "manual": {
          "type": "boolean",
          "description": "Whether this activity was created manually"
        },
        "private": {
          "type": "boolean",
          "description": "Whether this activity is private"
        },
        "flagged": {
          "type": "boolean",
          "description": "Whether this activity is flagged"
        },
        "gear_id": {
          "type": "string",
          "description": "The id of the gear for the activity"
        },
        "average_speed": {
          "type": "number",
          "format": "float",
          "description": "The activity's average speed, in meters per second"
        },
        "max_speed": {
          "type": "number",
          "format": "float",
          "description": "The activity's max speed, in meters per second"
        },
        "average_cadence": {
          "type": "number",
          "format": "float",
          "description": "The activity's average cadence"
        },
        "average_watts": {
          "type": "number",
          "format": "float",
          "description": "Average power output in watts during this activity. Rides only"
        },
        "weighted_average_watts": {
          "type": "integer",
          "format": "int32",
          "description": "Similar to Normalized Power. Rides with power meter data only"
        },
        "kilojoules": {
          "type": "number",
          "format": "float",
          "description": "The total work done in kilojoules during this activity. Rides only"
        },
        "device_watts": {
          "type": "boolean",
          "description": "Whether the watts are from a power meter, false if estimated"
        },
        "has_heartrate": {
          "type": "boolean",
          "description": "Whether the activity has heartrate data"
        },
        "average_heartrate": {
          "type": "number",
          "format": "float",
          "description": "The activity's average heartrate"
        },
        "max_heartrate": {
          "type": "number",
          "format": "float",
          "description": "The activity's max heartrate"
        },
        "max_watts": {
          "type": "integer",
          "format": "int32",
          "description": "The activity's max watts"
        },
        "total_photo_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Instagram and Strava photos for this activity"
        },
        "has_kudoed": {
          "type": "boolean",
          "description": "Whether the logged-in athlete has kudoed this activity"
        },
        "suffer_score": {
          "type": "integer",
          "format": "int32",
          "description": "suffer_score"
        }
      }
    },
    "SummarySegment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The unique identifier of this segment"
        },
        "name": {
          "type": "string",
          "description": "The name of this segment"
        },
        "activity_type": {
          "type": "string",
          "description": "May take one of the following values: Ride, Run"
        },
        "distance": {
          "type": "number",
          "format": "float",
          "description": "The segment's distance, in meters"
        },
        "average_grade": {
          "type": "number",
          "format": "float",
          "description": "The segment's average grade, in percents"
        },
        "maximum_grade": {
          "type": "number",
          "format": "float",
          "description": "The segments's maximum grade, in percents"
        },
        "elevation_high": {
          "type": "number",
          "format": "float",
          "description": "The segments's highest elevation, in meters"
        },
        "elevation_low": {
          "type": "number",
          "format": "float",
          "description": "The segments's lowest elevation, in meters"
        },
        "start_latlng": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "description": "Start collection of float objects. A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers."
        },
        "end_latlng": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "description": "End collection of float objects. A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers."
        },
        "climb_category": {
          "type": "integer",
          "format": "int32",
          "description": "The category of the climb [0, 5]. Higher is harder ie. 5 is Hors categorie, 0 is uncategorized in climb_category."
        },
        "city": {
          "type": "string",
          "description": "The segments's city."
        },
        "state": {
          "type": "string",
          "description": "The segments's state or geographical region."
        },
        "country": {
          "type": "string",
          "description": "The segment's country."
        },
        "private": {
          "type": "boolean",
          "description": "Whether this segment is private."
        }
      },
      "description": "The related segment"
    },
    "DetailedSegment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The unique identifier of this segment"
        },
        "name": {
          "type": "string",
          "description": "The name of this segment"
        },
        "activity_type": {
          "type": "string",
          "description": "May take one of the following values: Ride, Run"
        },
        "distance": {
          "type": "number",
          "format": "float",
          "description": "The segment's distance, in meters"
        },
        "average_grade": {
          "type": "number",
          "format": "float",
          "description": "The segment's average grade, in percents"
        },
        "maximum_grade": {
          "type": "number",
          "format": "float",
          "description": "The segments's maximum grade, in percents"
        },
        "elevation_high": {
          "type": "number",
          "format": "float",
          "description": "The segments's highest elevation, in meters"
        },
        "elevation_low": {
          "type": "number",
          "format": "float",
          "description": "The segments's lowest elevation, in meters"
        },
        "start_latlng": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "description": "Segment's start latlng"
        },
        "end_latlng": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "description": "Segment's end latlng"
        },
        "climb_category": {
          "type": "integer",
          "format": "int32",
          "description": "The category of the climb [0, 5]. Higher is harder ie. 5 is Hors catégorie, 0 is uncategorized in climb_category."
        },
        "city": {
          "type": "string",
          "description": "The segments's city."
        },
        "state": {
          "type": "string",
          "description": "The segments's state or geographical region."
        },
        "country": {
          "type": "string",
          "description": "The segment's country."
        },
        "private": {
          "type": "boolean",
          "description": "Whether this segment is private."
        },
        "hazardous": {
          "type": "boolean",
          "description": "Whether this segment is considered hazardous"
        },
        "starred": {
          "type": "boolean",
          "description": "Whether this segment is starred"
        },
        "created_at": {
          "type": "string",
          "description": "The time at which the segment was created."
        },
        "updated_at": {
          "type": "string",
          "description": "The time at which the segment was last updated."
        },
        "total_elevation_gain": {
          "type": "number",
          "format": "float",
          "description": "The segment's total elevation gain."
        },
        "map": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The identifier of the map"
            },
            "polyline": {
              "type": "string",
              "description": "The polyline of the map, only returned on detailed representation of an object"
            },
            "summary_polyline": {
              "type": "string",
              "description": "The summary polyline of the map"
            }
          },
          "description": "Segment's map"
        },
        "effort_count": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of efforts for this segment"
        },
        "athlete_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of unique athletes who have an effort for this segment"
        },
        "star_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of stars for this segment"
        },
        "athlete_segment_stats": {
          "type": "object",
          "properties": {
            "pr_activity_id": {
              "type": "integer",
              "format": "int32",
              "description": "The unique identifier of the activity related to the PR effort."
            },
            "pr_elapsed_time": {
              "type": "integer",
              "format": "int32",
              "description": "The elapsed time ot the PR effort."
            },
            "pr_date": {
              "type": "string",
              "description": "The time at which the PR effort was started."
            },
            "effort_count": {
              "type": "integer",
              "format": "int32",
              "description": "Number of efforts by the authenticated athlete on this segment."
            }
          },
          "description": "Authenticated athlete's segment stats"
        }
      }
    },
    "ActivityTotal": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of activities considered in this total."
        },
        "distance": {
          "type": "number",
          "format": "float",
          "description": "he total distance covered by the considered activities."
        },
        "moving_time": {
          "type": "integer",
          "format": "int32",
          "description": "The total moving time of the considered activities."
        },
        "elapsed_time": {
          "type": "integer",
          "format": "int32",
          "description": "The total elapsed time of the considered activities."
        },
        "elevation_gain": {
          "type": "number",
          "format": "float",
          "description": "The total elevation gain of the considered activities."
        },
        "achievement_count": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of achievements of the considered activities."
        }
      }
    },
    "ActivityTotalShort": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of activities considered in this total."
        },
        "distance": {
          "type": "number",
          "format": "float",
          "description": "he total distance covered by the considered activities."
        },
        "moving_time": {
          "type": "integer",
          "format": "int32",
          "description": "The total moving time of the considered activities."
        },
        "elapsed_time": {
          "type": "integer",
          "format": "int32",
          "description": "The total elapsed time of the considered activities."
        },
        "elevation_gain": {
          "type": "number",
          "format": "float",
          "description": "The total elevation gain of the considered activities."
        }
      }
    },
    "Bikes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The bike's unique identifier."
        },
        "primary": {
          "type": "boolean",
          "description": "Whether this bike is the owner's default one."
        },
        "name": {
          "type": "string",
          "description": "The bike's name."
        },
        "resource_state": {
          "type": "integer",
          "format": "int32",
          "description": "Resource state, indicates level of detail. Possible values: 2 -> summary, 3 -> detail"
        },
        "distance": {
          "type": "integer",
          "format": "int32",
          "description": "The distance logged with this bike."
        }
      }
    },
    "Shoes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The shoes unique identifier."
        },
        "primary": {
          "type": "boolean",
          "description": "Whether this shoes is the owner's default one."
        },
        "name": {
          "type": "string",
          "description": "The shoes name."
        },
        "resource_state": {
          "type": "integer",
          "format": "int32",
          "description": "Resource state, indicates level of detail. Possible values: 2 -> summary, 3 -> detail"
        },
        "distance": {
          "type": "integer",
          "format": "int32",
          "description": "The distance logged with this shoe."
        }
      }
    },
    "SummaryGear": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The gear's unique identifier."
        },
        "primary": {
          "type": "boolean",
          "description": "Whether this gear's is the owner's default one."
        },
        "name": {
          "type": "string",
          "description": "The gear's name."
        },
        "resource_state": {
          "type": "integer",
          "format": "int32",
          "description": "Resource state, indicates level of detail. Possible values: 2 -> summary, 3 -> detail"
        },
        "distance": {
          "type": "integer",
          "format": "int32",
          "description": "The distance logged with this gear."
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://www.strava.com/api/v3/oauth/authorize",
      "tokenUrl": "https://www.strava.com/api/v3/oauth/token",
      "scopes": {
        "activity:read": "activity:read"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": ["activity:read"]
    }
  ],
  "tags": []
}
