{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "CraftMyPDF",
    "description": "CraftMyPDF's drag & drop editor lets you design PDF templates in any browser and generate pixel-perfect PDF documents from reusable templates and JSON data.",
    "contact": {
      "name": "Troy Taylor",
      "url": "https://www.hitachisolutions.com",
      "email": "ttaylor@hitachisolutions.com"
    }
  },
  "host": "api.craftmypdf.com",
  "basePath": "/v1",
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-KEY"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/create": {
      "post": {
        "description": "This action creates a PDF file with JSON data and your template.",
        "summary": "Create a PDF",
        "tags": [
          "PDF Generation API"
        ],
        "operationId": "Create",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The body.",
            "schema": {
              "$ref": "#/definitions/CreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status and output file.",
            "schema": {
              "$ref": "#/definitions/ResponseSuccessSingleFile"
            }
          }
        }
      }
    },
    "/create-merge": {
      "post": {
        "description": "This action creates a PDF file from multiple templates. It merges all the PDFs into one.",
        "summary": "Create a PDF from multiple templates",
        "tags": [
          "PDF Generation API"
        ],
        "operationId": "Create-merge",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The body.",
            "schema": {
              "$ref": "#/definitions/CreateMergeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status and output file.",
            "schema": {
              "$ref": "#/definitions/ResponseSuccessSingleFile"
            }
          }
        }
      }
    },
    "/list-templates": {
      "get": {
        "description": "This action lists all your PDF templates.",
        "summary": "List templates",
        "tags": [
          "Template Management API"
        ],
        "operationId": "List-templates",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "x-ms-summary": "Limit",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Retrieve only the number of records specified. Default is 300."
          },
          {
            "name": "offset",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Offset is used to skip the number of records from the results. Default is 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status and templates.",
            "schema": {
              "$ref": "#/definitions/ResponseListTemplate"
            }
          }
        }
      }
    },
    "/new-template-from": {
      "post": {
        "description": "This action creates a new template from a template ID.",
        "summary": "Create a new template",
        "tags": [
          "Template Management API"
        ],
        "operationId": "New-template-from",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The body.",
            "schema": {
              "$ref": "#/definitions/NewTemplateFromRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status and output file.",
            "schema": {
              "$ref": "#/definitions/ResponseSuccessCreateNewTemplate"
            }
          }
        }
      }
    },
    "/update-template": {
      "post": {
        "description": "This action updates the specified PDF template.",
        "summary": "Update template",
        "tags": [
          "Template Management API"
        ],
        "operationId": "Update-template",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The body.",
            "schema": {
              "$ref": "#/definitions/UpdateTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status and output file.",
            "schema": {
              "$ref": "#/definitions/ResponseUpdateTemplate"
            }
          }
        }
      }
    },
    "/delete-template": {
      "get": {
        "description": "This action deletes a template.",
        "summary": "Delete template",
        "tags": [
          "Template Management API"
        ],
        "operationId": "Delete-template",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "query",
            "x-ms-summary": "Template ID",
            "required": true,
            "type": "string",
            "description": "The PDF template ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status and output file.",
            "schema": {
              "$ref": "#/definitions/ResponseSuccessDeleteTemplate"
            }
          }
        }
      }
    },
    "/create-editor-session": {
      "post": {
        "description": "This action creates a new PDF editor session. The PDF editor url can be embedded into an IFrame.",
        "summary": "Create editor session",
        "tags": [
          "Template Management API"
        ],
        "operationId": "Create-editor-session",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The body.",
            "schema": {
              "$ref": "#/definitions/CreateEditorSessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status and editor URL.",
            "schema": {
              "$ref": "#/definitions/ResponseSuccessCreateNewEditorSession"
            }
          }
        }
      }
    },
    "/list-transactions": {
      "get": {
        "description": "This action lists all the transactions.",
        "summary": "List transactions",
        "tags": [
          "Account Management API"
        ],
        "operationId": "List-transactions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "x-ms-summary": "Limit",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Retrieve only the number of records specified. Default is 300"
          },
          {
            "name": "offset",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Offset is used to skip the number of records from the results. Default is 0"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status and transactions.",
            "schema": {
              "$ref": "#/definitions/ResponseListTransactions"
            }
          }
        }
      }
    },
    "/get-account-info": {
      "get": {
        "description": "This action returns the account information.",
        "summary": "Get account info",
        "tags": [
          "Account Management API"
        ],
        "operationId": "Get-account-info",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns status and account information.",
            "schema": {
              "$ref": "#/definitions/ResponseAccountInformation"
            }
          }
        }
      }
    },
    "/merge-pdfs": {
      "post": {
        "description": "This action merges multiple PDF URLs.",
        "summary": "Merge PDFs",
        "tags": [
          "PDF Manipulation API"
        ],
        "operationId": "Merge-pdfs",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The body.",
            "schema": {
              "$ref": "#/definitions/MergePdfsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status and output file.",
            "schema": {
              "$ref": "#/definitions/ResponseSuccessSingleFile"
            }
          }
        }
      }
    },
    "/add-watermark": {
      "post": {
        "description": "This action adds a watermark to a PDF.",
        "summary": "Add watermark",
        "tags": [
          "PDF Manipulation API"
        ],
        "operationId": "Add-watermark",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The body.",
            "schema": {
              "$ref": "#/definitions/AddWatermarkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status and output file.",
            "schema": {
              "$ref": "#/definitions/ResponseSuccessSingleFile"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "title": "Error",
      "type": "object",
      "properties": {
        "status": {
          "description": "The value of the status: error.",
          "type": "string"
        },
        "message": {
          "description": "The error message.",
          "type": "string"
        }
      },
      "required": [
        "status",
        "message"
      ]
    },
    "ResponseSuccessSingleFile": {
      "title": "ResponseSuccessSingleFile",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status",
          "type": "string"
        },
        "file": {
          "description": "The generated PDF document.",
          "type": "string"
        },
        "transaction_ref": {
          "description": "The transaction reference.",
          "type": "string"
        }
      }
    },
    "ResponseAsyncCreate": {
      "title": "ResponseAsyncCreate",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status",
          "type": "string"
        },
        "transaction_ref": {
          "description": "The transaction reference.",
          "type": "string"
        },
        "is_async": {
          "description": "It always returns `true`.",
          "type": "boolean"
        }
      }
    },
    "ResponseListTemplate": {
      "title": "ResponseListTemplate",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status.",
          "type": "string"
        },
        "templates": {
          "description": "The array of templates.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "ResponseSuccessCreateNewTemplate": {
      "title": "ResponseSuccessCreateNewTemplate",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status",
          "type": "string"
        },
        "template_id": {
          "description": "The generated PDF document.",
          "type": "string"
        }
      }
    },
    "ResponseSuccessDeleteTemplate": {
      "title": "ResponseSuccessDeleteTemplate",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status.",
          "type": "string"
        }
      }
    },
    "ResponseListTransactions": {
      "title": "ResponseListTransactions",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status.",
          "type": "string"
        },
        "transactions": {
          "description": "The array of transactions.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "ResponseAccountInformation": {
      "title": "ResponseAccountInformation",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status.",
          "type": "string"
        },
        "transactions": {
          "description": "The array of transactions.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "ResponseSuccessCreateNewEditorSession": {
      "title": "ResponseSuccessCreateNewEditorSession",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status.",
          "type": "string"
        },
        "url": {
          "description": "The URL.",
          "type": "string"
        }
      }
    },
    "ResponseUpdateTemplate": {
      "title": "ResponseUpdateTemplate",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status.",
          "type": "string"
        }
      }
    },
    "AddWatermarkRequest": {
      "title": "AddWatermarkRequest",
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL of the source PDF.",
          "type": "string"
        },
        "text": {
          "description": "The watermark text.",
          "type": "string"
        },
        "font_size": {
          "description": "The font size of the watermark. Default is 40.",
          "type": "integer",
          "format": "int32"
        },
        "opacity": {
          "description": "The opacity of the watermark. Default is 0.5.",
          "type": "integer",
          "format": "int32"
        },
        "rotation": {
          "description": "The rotation of the watermark. Default is 45.",
          "type": "integer",
          "format": "int32"
        },
        "hex_color": {
          "description": "THe color of the watermark, it has to be a hex color and starts with '#'. Default is '#c7c7c7'.",
          "type": "string"
        },
        "font_family": {
          "description": "The font family of the watermark. Default is Helvetica. Available fonts are: Courier, Courier-Bold, Courier-Oblique, Courier-BoldOblique, Helvetica, Helvetica-Bold, Helvetica-Oblique, Helvetica-BoldOblique, Times-Roman, Times-Bold, Times-Italic, Times-BoldItalic, Symbol, ZapfDingbats,",
          "type": "string"
        },
        "expiration": {
          "description": "The expiration of the generated PDF in minutes. Default is 5 minutes, range between 1 minute and 24 hours.",
          "type": "integer",
          "format": "int32"
        },
        "output_file": {
          "description": "The output file, Default is 'output.pdf'.",
          "type": "string"
        }
      },
      "required": [
        "url",
        "text"
      ]
    },
    "CreateAsyncRequest": {
      "title": "CreateAsyncRequest",
      "type": "object",
      "properties": {
        "data": {
          "description": "The JSON data.",
          "type": "string"
        },
        "template_id": {
          "description": "The PDF Template ID.",
          "type": "string"
        },
        "expiration": {
          "description": "The expiration of the generated PDF in minutes. Default is 5 minutes, range between 1 minute and 24 hours.",
          "type": "integer",
          "format": "int32"
        },
        "webhook_url": {
          "description": "The Callback URL to your server. It starts with http:// or https:// and has to be urlencoded. Once the PDF is generated, our services will make a HTTP/HTTPS GET call to the following URL https://[myserver.com/pdfhandler]?file=[file]&transaction_ref=[transaction_ref] - [myserver.com/pdfhandler] is your web services to handle the callback - [file] is the URL to the file - [transaction_ref] is the transaction reference number.",
          "type": "string"
        },
        "is_cmyk": {
          "description": "The CMYK color profile. Default is 'false'.",
          "type": "boolean"
        }
      },
      "required": [
        "data",
        "template_id"
      ]
    },
    "CreateEditorSessionRequest": {
      "title": "CreateEditorSessionRequest",
      "type": "object",
      "properties": {
        "template_id": {
          "description": "The PDF Template ID.",
          "type": "string"
        },
        "expiration": {
          "description": "The expiration of the editor session in minutes. Default is 1440 minutes (24 hours).",
          "type": "object"
        },
        "canSave": {
          "description": "Can save the template. Default is `true`.",
          "type": "boolean"
        },
        "canCreatePDF": {
          "description": "Can Generate PDF. Default is `true`.",
          "type": "boolean"
        },
        "canViewSettings": {
          "description": "Can view settings. Default is `true`.",
          "type": "boolean"
        },
        "canPreview": {
          "description": "Can preview. Default is `true`.",
          "type": "boolean"
        },
        "canEditJSON": {
          "description": "Can edit JSON. Default is `true`.",
          "type": "boolean"
        },
        "canShowHeader": {
          "description": "Show CraftMyPDF header. Default is `true`.",
          "type": "boolean"
        },
        "jsonMode": {
          "description": "JSON editor - `1`, JSON viewer - `2`. Default is `1`.",
          "type": "integer",
          "format": "int32"
        },
        "backURL": {
          "description": "The URL for the back button.",
          "type": "string"
        }
      },
      "required": [
        "template_id"
      ]
    },
    "CreateMergeRequest": {
      "title": "CreateMergeRequest",
      "type": "object",
      "properties": {
        "templates": {
          "description": "The array of template IDs and JSON dat.a",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "export_type": {
          "description": "Either `file` or `json`. The option `json` returns a JSON object, and the output PDF is stored on a CDN(until expiration). The option `file` returns binary data of the generated PDF(More secure and completely private) and the response HTTP header Content-Disposition is set to attachment.",
          "type": "string"
        },
        "expiration": {
          "description": "Thexpiration of the generated PDF in minutes. Default is 5 minutes, range between 1 minute and 24 hours.",
          "type": "integer",
          "format": "int32"
        },
        "output_file": {
          "description": "The output file. Default is 'output.pdf'.",
          "type": "string"
        },
        "paging": {
          "description": "It detemines the paging for the next PDF, either is 'continuous' or 'reset' . Default is 'reset' - continuous : The expression {{sys.totalPages}} is the sum of the merged PDF and the {{sys.pageNumber}} continue from the last PDF page number. - reset: The expression {{sys.totalPages}} is the total pages of current PDF and the {{sys.pageNumber}} auto-reset to zero in the next PDF.",
          "type": "string"
        }
      },
      "required": [
        "templates"
      ]
    },
    "CreateRequest": {
      "title": "CreateRequest",
      "type": "object",
      "properties": {
        "data": {
          "description": "The JSON data.",
          "type": "string"
        },
        "template_id": {
          "description": "The PDF Template ID.",
          "type": "string"
        },
        "export_type": {
          "description": "Either `file` or `json`. - The option `json` returns a JSON object, and the output PDF is stored on a CDN(until expiration). - The option `file` returns binary data of the generated PDF(More secure and completely private) and the response HTTP header Content-Disposition is set to attachment.",
          "type": "string"
        },
        "expiration": {
          "description": "The expiration of the generated PDF in minutes. Default is 5 minutes, range between 1 minute and 24 hours.",
          "type": "integer",
          "format": "int32"
        },
        "output_file": {
          "description": "The output file. Default is 'output.pdf'.",
          "type": "string"
        },
        "is_cmyk": {
          "description": "Use CMYK color profile, Default is 'false'.",
          "type": "boolean"
        }
      },
      "required": [
        "data",
        "template_id"
      ]
    },
    "MergePdfsRequest": {
      "title": "MergePdfsRequest",
      "type": "object",
      "properties": {
        "urls": {
          "description": "URL array",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "expiration": {
          "description": "The expiration of the generated PDF in minutes. Default is 5 minutes, range between 1 minute and 24 hours.",
          "type": "integer",
          "format": "int32"
        },
        "output_file": {
          "description": "The output file. Default is 'output.pdf'.",
          "type": "string"
        }
      },
      "required": [
        "urls"
      ]
    },
    "NewTemplateFromRequest": {
      "title": "NewTemplateFromRequest",
      "type": "object",
      "properties": {
        "template_id": {
          "description": "The PDF template ID.",
          "type": "string"
        },
        "name": {
          "description": "The name of the new template.",
          "type": "string"
        }
      },
      "required": [
        "template_id"
      ]
    },
    "UpdateTemplateRequest": {
      "title": "UpdateTemplateRequest",
      "type": "object",
      "properties": {
        "template_id": {
          "description": "The template ID.",
          "type": "string"
        },
        "name": {
          "description": "Optional, name of the template.",
          "type": "string"
        },
        "json": {
          "description": "Optional, sample JSON data for the template.",
          "type": "string"
        }
      },
      "required": [
        "template_id"
      ]
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://craftmypdf.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://craftmypdf.com/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Content and Files"
    }
  ]
}