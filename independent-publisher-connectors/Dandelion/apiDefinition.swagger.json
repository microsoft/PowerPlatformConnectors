{
  "swagger": "2.0",
  "info": {
    "title": "Dandelion",
    "description": "Dandelion is semantic text analytics as a service. They provide actions for entity extraction, sentiment analysis, keyword extraction, semantic similarity, and Wikisearch results.",
    "version": "1.0",
    "contact": {
      "name": "Troy Taylor",
      "url": "https://www.hitachisolutions.com",
      "email": "ttaylor@hitachisolutions.com"
    }
  },
  "host": "api.dandelion.eu",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/datatxt/nex/v1": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "description": "The timestamp.",
                  "title": "Timestamp"
                },
                "time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time.",
                  "title": "Time"
                },
                "lang": {
                  "type": "string",
                  "description": "The language.",
                  "title": "Language"
                },
                "annotations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "abstract": {
                        "type": "string",
                        "description": "The abstract.",
                        "title": "Abstract"
                      },
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The identifier.",
                        "title": "ID"
                      },
                      "title": {
                        "type": "string",
                        "description": "The title.",
                        "title": "Title"
                      },
                      "start": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The start.",
                        "title": "Start"
                      },
                      "categories": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The categories.",
                        "title": "Categories"
                      },
                      "lod": {
                        "type": "object",
                        "properties": {
                          "wikipedia": {
                            "type": "string",
                            "description": "The Wikipedia URL address.",
                            "title": "Wikipedia"
                          },
                          "dbpedia": {
                            "type": "string",
                            "description": "The DBpedia URL address.",
                            "title": "DBpedia"
                          }
                        },
                        "title": "Location"
                      },
                      "label": {
                        "type": "string",
                        "description": "The label.",
                        "title": "Label"
                      },
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The types.",
                        "title": "Types"
                      },
                      "confidence": {
                        "type": "number",
                        "format": "float",
                        "description": "The confidence.",
                        "title": "Confidence"
                      },
                      "uri": {
                        "type": "string",
                        "description": "The URI.",
                        "title": "URI"
                      },
                      "end": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The end.",
                        "title": "End"
                      },
                      "spot": {
                        "type": "string",
                        "description": "The spot.",
                        "title": "Spot"
                      }
                    }
                  },
                  "title": "Annotations"
                }
              }
            }
          }
        },
        "summary": "Extract entity",
        "x-ms-visibility": "important",
        "description": "Retrieve named entity extraction and linking. It currently works on texts in English, French, German, Italian, Portuguese, Russian, and Spanish.",
        "operationId": "EntityGet",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "x-ms-summary": "Text",
            "description": "The text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "html",
            "in": "query",
            "x-ms-summary": "HTML",
            "description": "The HTML.",
            "required": false,
            "type": "string"
          },
          {
            "name": "html_fragment",
            "in": "query",
            "x-ms-summary": "HTML fragment",
            "description": "The HTML fragment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lang",
            "in": "query",
            "x-ms-summary": "Language",
            "description": "The language.",
            "required": false,
            "type": "string"
          },
          {
            "name": "top_entities",
            "in": "query",
            "x-ms-summary": "Top Entities",
            "description": "The top entities.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "min_confidence",
            "in": "query",
            "x-ms-summary": "Min Confidence",
            "description": "The minimum confidence.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "min_length",
            "in": "query",
            "x-ms-summary": "Min Length",
            "description": "The minimum length.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "social.hashtag",
            "in": "query",
            "x-ms-summary": "Hashtag",
            "description": "Whether to parse hashtags.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "social.mention",
            "in": "query",
            "x-ms-summary": "Mentions",
            "description": "Whether to parse mentions.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "include",
            "in": "query",
            "x-ms-summary": "Include",
            "description": "The include.",
            "required": false,
            "type": "string"
          },
          {
            "name": "extra_types",
            "in": "query",
            "x-ms-summary": "Extra Types",
            "description": "The extra types.",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "x-ms-summary": "Country",
            "description": "The country.",
            "required": false,
            "type": "string"
          },
          {
            "name": "epsilon",
            "in": "query",
            "x-ms-summary": "Episilon",
            "description": "The episilon to rely more on context or common topics.",
            "required": false,
            "type": "number",
            "format": "float"
          }
        ]
      }
    },
    "/datatxt/sim/v1": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "description": "The timestamp.",
                  "title": "Timestamp"
                },
                "time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time.",
                  "title": "Time"
                },
                "lang": {
                  "type": "string",
                  "description": "The language.",
                  "title": "Language"
                },
                "langConfidence": {
                  "type": "number",
                  "format": "float",
                  "description": "The language confidence.",
                  "title": "Language Confidence"
                },
                "text1": {
                  "type": "string",
                  "description": "The first text.",
                  "title": "Text 1"
                },
                "text2": {
                  "type": "string",
                  "description": "The second text.",
                  "title": "Text 2"
                },
                "similarity": {
                  "type": "number",
                  "format": "float",
                  "description": "The similarity.",
                  "title": "Similarity"
                }
              }
            }
          }
        },
        "summary": "Get text similarity",
        "description": "Retrieve the semantic similarity score of the compared two sentences.",
        "operationId": "SimilarityGet",
        "parameters": [
          {
            "name": "text1",
            "in": "query",
            "x-ms-summary": "Text 1",
            "description": "The first text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "html1",
            "in": "query",
            "x-ms-summary": "HTML 1",
            "description": "The first HTML.",
            "required": false,
            "type": "string"
          },
          {
            "name": "html_fragment1",
            "in": "query",
            "x-ms-summary": "HTML Fragment 1",
            "description": "The first HTML fragment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "text2",
            "in": "query",
            "x-ms-summary": "Text 2",
            "description": "The second text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "html2",
            "in": "query",
            "x-ms-summary": "HTML 2",
            "description": "The second HTML.",
            "required": false,
            "type": "string"
          },
          {
            "name": "html_fragment2",
            "in": "query",
            "x-ms-summary": "HTML Fragment 2",
            "description": "The second HTML fragment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lang",
            "in": "query",
            "x-ms-summary": "Language",
            "description": "The language.",
            "required": false,
            "type": "string"
          },
          {
            "name": "bow",
            "in": "query",
            "x-ms-summary": "Semantic",
            "description": "The algorithm to use, either never for semantic or a syntactic.",
            "type": "string",
            "enum": [
              "never",
              "always",
              "one_empty",
              "both_empty"
            ]
          }
        ]
      }
    },
    "/datatxt/li/v1": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "description": "The timestamp.",
                  "title": "Timestamp"
                },
                "time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time.",
                  "title": "Time"
                },
                "text": {
                  "type": "string",
                  "description": "The text.",
                  "title": "Text"
                },
                "detectedLangs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "The language.",
                        "title": "Language"
                      },
                      "confidence": {
                        "type": "number",
                        "format": "float",
                        "description": "The confidence.",
                        "title": "Confidence"
                      }
                    }
                  },
                  "title": "Detected Langs"
                }
              }
            }
          }
        },
        "summary": "Detect language",
        "description": "Retrieve the detected language identification.",
        "operationId": "LanguageGet",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "x-ms-summary": "Text",
            "description": "The text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "html",
            "in": "query",
            "x-ms-summary": "HTML",
            "description": "The HTML.",
            "required": false,
            "type": "string"
          },
          {
            "name": "html_fragment",
            "in": "query",
            "x-ms-summary": "HTML fragment",
            "description": "The HTML fragment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "clean",
            "in": "query",
            "x-ms-summary": "Clean",
            "description": "clean",
            "required": false,
            "type": "boolean",
            "enum": [
              true,
              false
            ]
          }
        ]
      }
    },
    "/datatxt/sent/v1": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "description": "The timestamp.",
                  "title": "Timestamp"
                },
                "time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time.",
                  "title": "Time"
                },
                "lang": {
                  "type": "string",
                  "description": "The language.",
                  "title": "Language"
                },
                "sentiment": {
                  "type": "object",
                  "properties": {
                    "score": {
                      "type": "number",
                      "format": "float",
                      "description": "The score.",
                      "title": "Score"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type.",
                      "title": "Type"
                    }
                  },
                  "title": "Sentiment"
                }
              }
            }
          }
        },
        "summary": "Analyze sentiment",
        "description": "Retrieve the sentiment analysis.",
        "operationId": "SentimentGet",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "x-ms-summary": "Text",
            "description": "The text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "html",
            "in": "query",
            "x-ms-summary": "HTML",
            "description": "The HTML.",
            "required": false,
            "type": "string"
          },
          {
            "name": "html_fragment",
            "in": "query",
            "x-ms-summary": "HTML fragment",
            "description": "The HTML fragment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lang",
            "in": "query",
            "x-ms-summary": "Language",
            "description": "The language.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/datagraph/wikisearch/v1": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time.",
                  "title": "Time"
                },
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count.",
                  "title": "Count"
                },
                "query": {
                  "type": "string",
                  "description": "The query.",
                  "title": "Query"
                },
                "entities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "weight": {
                        "type": "number",
                        "format": "float",
                        "description": "The weight.",
                        "title": "Weight"
                      },
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The identifier.",
                        "title": "ID"
                      },
                      "title": {
                        "type": "string",
                        "description": "The title.",
                        "title": "Title"
                      },
                      "uri": {
                        "type": "string",
                        "description": "The URI.",
                        "title": "URI"
                      },
                      "label": {
                        "type": "string",
                        "description": "The label.",
                        "title": "Label"
                      }
                    }
                  },
                  "title": "Entities"
                },
                "lang": {
                  "type": "string",
                  "description": "The language.",
                  "title": "Language"
                },
                "timestamp": {
                  "type": "string",
                  "description": "The timestamp.",
                  "title": "Timestamp"
                }
              }
            }
          }
        },
        "summary": "Search Wikipedia titles",
        "description": "Retrieve a list of matching Wikipedia pages.",
        "operationId": "WikipediaGet",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "x-ms-summary": "Text",
            "description": "The text.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lang",
            "in": "query",
            "x-ms-summary": "Language",
            "description": "The language.",
            "required": true,
            "type": "string",
            "default": "en",
            "enum": [
              "en",
              "de",
              "es",
              "fr",
              "it",
              "pt",
              "ru"
            ]
          },
          {
            "name": "limit",
            "in": "query",
            "x-ms-summary": "Limit",
            "description": "The limit.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "x-ms-summary": "Offset",
            "description": "The offset.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query",
            "in": "query",
            "x-ms-summary": "Query",
            "description": "The query length.",
            "type": "string",
            "enum": [
              "full",
              "prefix"
            ]
          },
          {
            "name": "include",
            "in": "query",
            "x-ms-summary": "Include",
            "description": "The include.",
            "type": "string"
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "query",
      "name": "token"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://dandelion.eu/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://dandelion.eu/api-privacy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI"
    }
  ]
}