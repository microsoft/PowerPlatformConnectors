{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Google Photos",
    "description": "Integrate smart, easy-to-use photo and video features into your product and reach hundreds of millions of people who choose Google Photos.",
    "contact": {
      "name": "Julia Muiruri",
      "url": "https://developers.google.com/photos",
      "email": "juliamuiruri@microsoft.com"
    }
  },
  "host": "photoslibrary.googleapis.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/albums": {
      "get": {
        "summary": "List Albums",
        "description": "Lists all albums shown to a user in the Albums tab of the Google Photos app.\n\n### HTTP request\n\n`GET https://photoslibrary.googleapis.com/v1/albums`\n\nThe URL uses [gRPC Transcoding](https://github.com/googleapis/googleapis/blob/master/google/api/http.proto) syntax.\n\n### Query parameters\n\n|Parameters|||\n| ---- | ---- | ----- |\n|`pageSize`|`integer`|Maximum number of albums to return in the response. Fewer albums might be returned than the specified number. The default `pageSize` is 20, the maximum is 50.|\n|`pageToken`|`string`|A continuation token to get the next page of the results. Adding this to the request returns the rows after the `pageToken`. The `pageToken` should be the value returned in the `nextPageToken` parameter in the response to the `listAlbums` request.|\n|`excludeNonAppCreatedData`|`boolean`|If set, the results exclude media items that were not created by this app. Defaults to false (all albums are returned). This field is ignored if the photoslibrary.readonly.appcreateddata scope is used.|\n\n### Request body\n\nThe request body must be empty.\n\n### Response body\n\nIf successful, the response body contains data with the following structure:\n\nList of albums requested.\n\nJSON representation\n\n```json\n{\n  \"albums\": [\n    {\n      object ([Album])\n    }\n  ],\n  \"nextPageToken\": string\n}\n```\n\n|Fields|||\n| ---- | ---- | ---- |\n|`albums[]`|object ([Album](https://developers.google.com/photos/library/reference/rest/v1/albums#Album))|Output only. List of albums shown in the Albums tab of the user's Google Photos app.|\n|`nextPageToken`|`string`|Output only. Token to use to get the next set of albums. Populated if there are more albums to retrieve for this request.|\n\n### Authorization Scopes\n\nRequires one of the following OAuth scopes:\n\n*   `https://www.googleapis.com/auth/photoslibrary`\n*   `https://www.googleapis.com/auth/photoslibrary.readonly`\n*   `https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata`",
        "operationId": "ListAlbums",
        "parameters": [],
        "responses": {
          "default": {
            "description": "200",
            "schema": {}
          }
        }
      },
      "post": {
        "summary": "Create New Album",
        "description": "Creates an album in a user's Google Photos library.\n\n### HTTP request\n\n`POST https://photoslibrary.googleapis.com/v1/albums`\n\nThe URL uses [gRPC Transcoding](https://github.com/googleapis/googleapis/blob/master/google/api/http.proto) syntax.\n\n### Request body\n\nThe request body contains data with the following structure:\n\nJSON representation\n\n```json\n{\n  \"album\": {\n    object (Album)\n  }\n}\n```\n\n|Fields|||\n|----|----|----|\n|`album`|`object` ([Album](https://developers.google.com/photos/library/reference/rest/v1/albums#Album))|The album to be created.|\n\n### Response body\n\nIf successful, the response body contains a newly created instance of [Album](https://developers.google.com/photos/library/reference/rest/v1/albums#Album).\n\n### Authorization Scopes\n\nRequires one of the following OAuth scopes:\n\n*   `https://www.googleapis.com/auth/photoslibrary`\n*   `https://www.googleapis.com/auth/photoslibrary.appendonly`\n*   `https://www.googleapis.com/auth/photoslibrary.sharing`",
        "operationId": "CreateAlbum",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        }
      }
    },
    "/v1/albums/%7B%7BalbumId%7D%7D": {},
    "/v1/albums/%7B%7Balbum.id%7D%7D": {},
    "/v1/albums/%7B%7BalbumId%7D%7D:addEnrichment": {},
    "/v1/albums/%7B%7BalbumId%7D%7D:share": {},
    "/v1/albums/%7B%7BalbumId%7D%7D:unshare": {},
    "/v1/albums/%7B%7BalbumId%7D%7D:batchAddMediaItems": {},
    "/v1/albums/%7B%7BalbumId%7D%7D:batchRemoveMediaItems": {},
    "/v1/mediaItems": {
      "get": {
        "summary": "List Media Items",
        "description": "\nList all media items from a user's Google Photos library.\n\n### HTTP request\n\n`GET https://photoslibrary.googleapis.com/v1/mediaItems`\n\nThe URL uses [gRPC Transcoding](https://github.com/googleapis/googleapis/blob/master/google/api/http.proto) syntax.\n\n### Query parameters\n\n|Parameters|||\n|-|-|-\n|`pageSize`|`integer`|Maximum number of media items to return in the response. Fewer media items might be returned than the specified number. The default `pageSize` is 25, the maximum is 100.|\n`pageToken`|`string`|A continuation token to get the next page of the results. Adding this to the request returns the rows after the `pageToken`. The `pageToken` should be the value returned in the `nextPageToken` parameter in the response to the `listMediaItems` request.|\n\n### Request body\n\nThe request body must be empty.\n\n### Response body\n\nIf successful, the response body contains data with the following structure:\n\nList of all media items from the user's Google Photos library.\n\nJSON representation\n\n```json\n{\n  \"mediaItems\": [\n    {\n      object (MediaItem)\n    }\n  ],\n  \"nextPageToken\": string\n}\n```\n\n|Fields|||\n|-|-|-\n|`mediaItems[]`|`object` ([MediaItem](https://developers.google.com/photos/library/reference/rest/v1/mediaItems#MediaItem))|Output only. List of media items in the user's library.\n|`nextPageToken`|`string`|Output only. Token to use to get the next set of media items. Its presence is the only reliable indicator of more media items being available in the next request.\n\n### Authorization Scopes\n\nRequires one of the following OAuth scopes:\n\n*   `https://www.googleapis.com/auth/photoslibrary`\n*   `https://www.googleapis.com/auth/photoslibrary.readonly`\n*   `https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata`\n",
        "operationId": "ListItems",
        "parameters": [],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        }
      }
    },
    "/v1/mediaItems/%7B%7BmediaItemId%7D%7D": {},
    "/v1/mediaItems/%7B%7BmediaItem.id%7D%7D": {},
    "/v1/mediaItems:search": {},
    "/v1/mediaItems:batchGet": {
      "get": {
        "summary": "Create Media Item(s) in Google photo library",
        "description": "\nReturns the list of media items for the specified media item identifiers. Items are returned in the same order as the supplied identifiers.\n\n### HTTP request\n\n`GET https://photoslibrary.googleapis.com/v1/mediaItems:batchGet`\n\nThe URL uses [gRPC Transcoding](https://github.com/googleapis/googleapis/blob/master/google/api/http.proto) syntax.\n\n### Query parameters\n\n|Parameters|||\n|-|-|-\n|`mediaItemIds`|`string`|Identifiers of the media items to be requested. Must not contain repeated identifiers and cannot be empty. The maximum number of media items that can be retrieved in one call is 50.\n\n### Request body\n\nThe request body must be empty.\n\n### Response body\n\nIf successful, the response body contains data with the following structure:\n\nResponse to retrieve a list of media items.\n\nJSON representation\n\n```json\n{\n  \"mediaItemResults\": [\n    {\n      object (MediaItemResult)\n    }\n  ]\n}\n```\n\n|Fields|||\n|-|-|-\n|`mediaItemResults[]`|`object` ([MediaItemResult](https://developers.google.com/photos/library/reference/rest/v1/mediaItems/batchGet#MediaItemResult))|Output only. List of media items retrieved. Note that even if the call to mediaItems.batchGet succeeds, there may have been failures for some media items in the batch. These failures are indicated in each [MediaItemResult.status](https://developers.google.com/photos/library/reference/rest/v1/mediaItems/batchGet#MediaItemResult.FIELDS.status).\n\n### Authorization Scopes\n\nRequires one of the following OAuth scopes:\n\n*   `https://www.googleapis.com/auth/photoslibrary`\n*   `https://www.googleapis.com/auth/photoslibrary.readonly`\n*   `https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata`\n\nMediaItemResult\n---------------\n\nResult of retrieving a media item.\n\nJSON representation\n\n```json\n{\n  \"status\": {\n    object (Status)\n  },\n  \"mediaItem\": {\n    object (MediaItem)\n  }\n}\n```\n\n|Fields|||\n|-|-|-\n|`status`|`object` ([Status](https://developers.google.com/photos/library/reference/rest/v1/Status))|If an error occurred while accessing this media item, this field is populated with information related to the error. For details regarding this field, see [Status](https://developers.google.com/photos/library/reference/rest/v1/Status).\n|`mediaItem`|`object` ([MediaItem](https://developers.google.com/photos/library/reference/rest/v1/mediaItems#MediaItem))|Media item retrieved from the user's library. It's populated if no errors occurred and the media item was fetched successfully.\n",
        "operationId": "CreateItems",
        "parameters": [
          {
            "name": "mediaItemIds",
            "default": "<string>",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Create Item",
            "description": "Create Media Item - Photo, video etc",
            "required": true
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        }
      }
    },
    "/v1/mediaItems:batchCreate": {},
    "/v1/sharedAlbums": {
      "get": {
        "summary": "List All Shared Albums",
        "description": "\n\nLists all shared albums available in the Sharing tab of the user's Google Photos app.\n\n### HTTP request\n\n`GET https://photoslibrary.googleapis.com/v1/sharedAlbums`\n\nThe URL uses [gRPC Transcoding](https://github.com/googleapis/googleapis/blob/master/google/api/http.proto) syntax.\n\n### Query parameters\n\n|Parameters|||\n|-|-|-\n|`pageSize`|`integer`|Maximum number of albums to return in the response. Fewer albums might be returned than the specified number. The default `pageSize` is 20, the maximum is 50.\n|`pageToken`|`string`|A continuation token to get the next page of the results. Adding this to the request returns the rows after the `pageToken`. The `pageToken` should be the value returned in the `nextPageToken` parameter in the response to the `listSharedAlbums` request.\n|`excludeNonAppCreatedData`|`boolean`|If set, the results exclude media items that were not created by this app. Defaults to false (all albums are returned). This field is ignored if the photoslibrary.readonly.appcreateddata scope is used.\n\n### Request body\n\nThe request body must be empty.\n\n### Response body\n\nIf successful, the response body contains data with the following structure:\n\nList of shared albums requested.\n\nJSON representation\n\n```json\n{\n  \"sharedAlbums\": [\n    {\n      object (Album)\n    }\n  ],\n  \"nextPageToken\": string\n}\n```\n\n|Fields|||\n|-|-|-\n|`sharedAlbums[]`|`object` ([Album](https://developers.google.com/photos/library/reference/rest/v1/albums#Album))|Output only. List of shared albums.\n|`nextPageToken`|`string`|Output only. Token to use to get the next set of shared albums. Populated if there are more shared albums to retrieve for this request.\n\n### Authorization Scopes\n\nRequires one of the following OAuth scopes:\n\n*   `https://www.googleapis.com/auth/photoslibrary`\n*   `https://www.googleapis.com/auth/photoslibrary.readonly`\n*   `https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata`\n",
        "operationId": "ListSharedAlbums",
        "parameters": [],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        }
      }
    },
    "/v1/sharedAlbums/%7B%7BshareToken%7D%7D": {},
    "/v1/sharedAlbums:join": {},
    "/v1/sharedAlbums:leave": {}
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "undefined": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "tokenUrl": "https://oauth2.googleapis.com/token",
      "scopes": {
        "https://www.googleapis.com/auth/photoslibrary https://www.googleapis.com/auth/photoslibrary.edit.appcreateddata https://www.googleapis.com/auth/photoslibrary.sharing https://www.googleapis.com/auth/photoslibrary.edit.appcreateddata": "https://www.googleapis.com/auth/photoslibrary https://www.googleapis.com/auth/photoslibrary.edit.appcreateddata https://www.googleapis.com/auth/photoslibrary.sharing https://www.googleapis.com/auth/photoslibrary.edit.appcreateddata"
      }
    }
  },
  "security": [
    {
      "undefined": [
        "https://www.googleapis.com/auth/photoslibrary https://www.googleapis.com/auth/photoslibrary.edit.appcreateddata https://www.googleapis.com/auth/photoslibrary.sharing https://www.googleapis.com/auth/photoslibrary.edit.appcreateddata"
      ]
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://developers.google.com/photos"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://developers.google.com/photos/library/guides/acceptable-use"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Lifestyle and Entertainment"
    }
  ]
}