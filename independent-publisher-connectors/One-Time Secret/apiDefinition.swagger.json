{
  "swagger": "2.0",
  "info": {
    "title": "One-Time Secret",
    "description": "One-Time Secret is a way to share sensitive information without storing them. If you use a one-time link instead, the information persists for a single viewing which means it can't be read by someone else later. This allows you to send sensitive information in a safe way knowing it's seen by one person only. Think of it like a self-destructing message.",
    "version": "1.0",
    "contact": {
      "name": "Aldo Gillone",
      "url": "https://github.com/alduzzen1985/One-Time-Secet-Connector/",
      "email": "aldogillone@gmail.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Categories",
      "propertyValue": "Security"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://onetimesecret.com/info/privacy"
    },
    {
      "propertyName": "Website",
      "propertyValue": "https://onetimesecret.com/"
    }
  ],
  "host": "onetimesecret.com",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/generate": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "custid": {
                  "type": "string",
                  "description": "This is you",
                  "title": "Customer ID"
                },
                "value": {
                  "type": "string",
                  "description": "Generated Value. DO NOT share this.",
                  "title": "Generated Value"
                },
                "metadata_key": {
                  "type": "string",
                  "description": "The unique key for the metadata. DO NOT share this.",
                  "title": "Metadata key"
                },
                "secret_key": {
                  "type": "string",
                  "description": "The unique key for the secret you create. This is key that you can share..",
                  "title": "Secret key"
                },
                "ttl": {
                  "type": "integer",
                  "description": "The time-to-live (in seconds) that was specified (i.e. not the time remaining)",
                  "title": "Time-to-Live",
                  "format": "int32"
                },
                "updated": {
                  "type": "integer",
                  "description": "Ditto, but the time it was last updated.",
                  "title": "Updated",
                  "format": "int32"
                },
                "created": {
                  "type": "integer",
                  "description": "Time the secret was created in unix time (UTC)",
                  "title": "Created",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Generate a Secret",
        "description": "Generate a short, unique secret. This is useful for temporary passwords, one-time pads, salts, etc.",
        "operationId": "GenerateSecret",
        "parameters": [
          {
            "name": "passphrase",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A string that the recipient must know to view the secret. This value is also used to encrypt the secret and is bcrypted before being stored so we only have this value in transit.",
            "x-ms-summary": "Pass Phrase"
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Maximum amount of time, in seconds, that the secret should survive",
            "x-ms-summary": "Time To Leave",
            "format": "int32"
          },
          {
            "name": "recipient",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "An email address. We will send a friendly email containing the secret link (NOT the secret itself).",
            "x-ms-summary": "Recipient"
          }
        ]
      }
    },
    "/share": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "custid": {
                  "type": "string",
                  "description": "this is you",
                  "title": "Custiomer id"
                },
                "metadata_key": {
                  "type": "string",
                  "description": "The unique key for the metadata. DO NOT share this.",
                  "title": "Metadata key"
                },
                "secret_key": {
                  "type": "string",
                  "description": "The unique key for the secret you create. This is key that you can share.",
                  "title": "Secret Key"
                },
                "ttl": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time-to-live (in seconds) that was specified (i.e. not the time remaining)",
                  "title": "TTL"
                },
                "metadata_ttl": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The remaining time (in seconds) that the metadata has left to live.",
                  "title": "Metadata TTL"
                },
                "secret_ttl": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The remaining time (in seconds) that the secret has left to live.",
                  "title": "Secret TTL"
                },
                "state": {
                  "type": "string",
                  "description": "state",
                  "title": "state"
                },
                "updated": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ditto, but the time it was last updated.",
                  "title": "Updated"
                },
                "created": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Time the secret was created in unix time (UTC)",
                  "title": "created"
                },
                "recipient": {
                  "type": "array",
                  "items": {},
                  "description": "recipient"
                },
                "passphrase_required": {
                  "type": "boolean",
                  "description": "If a passphrase was provided when the secret was created, this will be true. Otherwise false, obviously.",
                  "title": "Passphrase required",
                  "enum": [
                    true,
                    false
                  ]
                }
              }
            }
          }
        },
        "summary": "Create a Secret",
        "description": "Use this method to store a secret value.",
        "operationId": "CreateSecret",
        "parameters": [
          {
            "name": "secret",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The secret value which is encrypted before being stored. There is a maximum length based on your plan that is enforced (1k-10k).",
            "x-ms-summary": "Secret value"
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The maximum amount of time, in seconds, that the secret should survive (i.e. time-to-live). Once this time expires, the secret will be deleted and not recoverable.",
            "x-ms-summary": "Time To Leave"
          },
          {
            "name": "passphrase",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A string that the recipient must know to view the secret. This value is also used to encrypt the secret and is bcrypted before being stored so we only have this value in transit.",
            "x-ms-summary": "Pass Phrase"
          },
          {
            "name": "recipient",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "E-mail to notify",
            "description": "an email address. We will send a friendly email containing the secret link (NOT the secret itself)."
          }
        ]
      }
    },
    "/secret/{SECRET_KEY}": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "The actual secret. It should go without saying, but this will only be available one time.",
                  "title": "Value"
                },
                "secret_key": {
                  "type": "string",
                  "description": "The unique key for the secret you create. This is key that you can share.",
                  "title": "Secret Key"
                }
              }
            }
          }
        },
        "summary": "Retrieve a Secret",
        "description": "Retrieve a Secret",
        "operationId": "RetrieveSecret",
        "parameters": [
          {
            "name": "SECRET_KEY",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "Secret Key",
            "x-ms-summary": "Secret Key"
          },
          {
            "name": "passphrase",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Pass Phrase",
            "x-ms-summary": "Pass Phrase"
          }
        ]
      }
    },
    "/private/{METADATA_KEY}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "custid": {
                  "type": "string",
                  "description": "this is you",
                  "title": "Customer ID"
                },
                "metadata_key": {
                  "type": "string",
                  "description": "The unique key for the secret you created. This is key that you can share.",
                  "title": "Metadata Key"
                },
                "secret_key": {
                  "type": "string",
                  "description": "The unique key for the secret you created. This is key that you can share.",
                  "title": "Secret Key"
                },
                "ttl": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time-to-live that was specified (i.e. not the time remaining)",
                  "title": "Time-To-Live"
                },
                "metadata_ttl": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The remaining time (in seconds) that the metadata has left to live.",
                  "title": "Metadata Time-To-Live"
                },
                "secret_ttl": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The remaining time (in seconds) that the secret has left to live.",
                  "title": "Secret Time-To-Live"
                },
                "state": {
                  "type": "string",
                  "description": "State of the Secret",
                  "title": "State"
                },
                "updated": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ditto, but the time it was last updated.",
                  "title": "Updated"
                },
                "created": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Time the metadata was created in unix time (UTC)",
                  "title": "Created"
                },
                "recipient": {
                  "type": "array",
                  "items": {},
                  "description": "recipient"
                },
                "passphrase_required": {
                  "type": "boolean",
                  "description": "If a passphrase was provided when the secret was created, this will be true. Otherwise false, obviously.",
                  "title": "Passphrase required",
                  "enum": [
                    true,
                    false
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieve Metadata",
        "description": "Every secret also has associated metadata. The metadata is intended to be used by the creator of the secret (i.e. not the recipient) and should generally be kept private. You can safely use the metadata key to retrieve basic information about the secret itself (e.g. if or when it was viewed) since the metadata key is different from the secret key.",
        "operationId": "RetrieveMetadata",
        "parameters": [
          {
            "name": "METADATA_KEY",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique key for the metadata. DO NOT share this.",
            "x-ms-summary": "Metadata Key",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/private/{METADATA_KEY}/burn": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "state": {
                  "type": "object",
                  "properties": {
                    "custid": {
                      "type": "string",
                      "description": "This is you",
                      "title": "Customer ID"
                    },
                    "metadata_key": {
                      "type": "string",
                      "description": "The unique key for the metadata. DO NOT share this.",
                      "title": "Metadata key"
                    },
                    "secret_key": {
                      "type": "string",
                      "description": "The unique key for the secret you create. This is key that you can share.",
                      "title": "Secret Key"
                    },
                    "ttl": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The time-to-live (in seconds) that was specified (i.e. not the time remaining)",
                      "title": "Time-To-Live"
                    },
                    "metadata_ttl": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The remaining time (in seconds) that the metadata has left to live.",
                      "title": "Metadata TTL"
                    },
                    "secret_ttl": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The remaining time (in seconds) that the secret has left to live.",
                      "title": "Secret Time-To-Live"
                    },
                    "state": {
                      "type": "string",
                      "description": "State of the Secret",
                      "title": "State"
                    },
                    "updated": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ditto, but the time it was last updated.",
                      "title": "Updated"
                    },
                    "created": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Time the secret was created in unix time (UTC)",
                      "title": "Created"
                    },
                    "recipient": {
                      "type": "array",
                      "items": {},
                      "description": "recipient"
                    }
                  },
                  "description": "state"
                },
                "secret_shortkey": {
                  "type": "string",
                  "description": "Secret Short Key",
                  "title": "Secret Short Key"
                }
              }
            }
          }
        },
        "summary": "Burn Secret",
        "description": "Burn a secret that has not been read yet.",
        "operationId": "BurnASecret",
        "parameters": [
          {
            "name": "METADATA_KEY",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Metadata Key",
            "description": "Metadata Key"
          }
        ]
      }
    },
    "/private/recent": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "custid": {
                    "type": "string",
                    "description": "this is you",
                    "title": "Customer Id"
                  },
                  "metadata_key": {
                    "type": "string",
                    "description": "The unique key for the metadata. DO NOT share this.",
                    "title": "Metadata key"
                  },
                  "ttl": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The time-to-live that was specified (i.e. not the time remaining)",
                    "title": "Time-To-Live"
                  },
                  "metadata_ttl": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The remaining time (in seconds) that the metadata has left to live.",
                    "title": "Metadata Time-To-Live"
                  },
                  "secret_ttl": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The remaining time (in seconds) that the secret has left to live.",
                    "title": "Secret Time-To-Live"
                  },
                  "state": {
                    "type": "string",
                    "description": "state"
                  },
                  "updated": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ditto, but the time it was last updated.",
                    "title": "Updated"
                  },
                  "created": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Time the secret was created in unix time (UTC)",
                    "title": "Created"
                  },
                  "recipient": {
                    "type": "array",
                    "items": {},
                    "description": "recipient"
                  },
                  "received": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Time the secret was received.",
                    "title": "Received"
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "description": "Retreive a list of recent metadata.",
        "summary": "Retrieve Recent Metadata",
        "operationId": "RetrieveRecentMetadata"
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ],
  "tags": []
}