{
  "swagger": "2.0",
  "info": {
    "title": "Deck of Cards",
    "description": "Deck of Cards is a web service that allows you to shuffle and draw cards from one or many decks.",
    "version": "1.0",
    "contact": {
      "name": "Troy Taylor",
      "url": "https://www.hitachisolutions.com",
      "email": "ttaylor@hitachisolutions.com"
    }
  },
  "host": "deckofcardsapi.com",
  "basePath": "/api/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/deck/{deck_id}/draw/": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Whether successful.",
                  "title": "Success"
                },
                "deck_id": {
                  "type": "string",
                  "description": "The deck identifier.",
                  "title": "Deck ID"
                },
                "cards": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The code.",
                        "title": "Code"
                      },
                      "image": {
                        "type": "string",
                        "description": "The image.",
                        "title": "Image"
                      },
                      "images": {
                        "type": "object",
                        "properties": {
                          "svg": {
                            "type": "string",
                            "description": "The SVG image.",
                            "title": "SVG"
                          },
                          "png": {
                            "type": "string",
                            "description": "The PNG image.",
                            "title": "PNG"
                          }
                        },
                        "title": "Images"
                      },
                      "value": {
                        "type": "string",
                        "description": "The value.",
                        "title": "Value"
                      },
                      "suit": {
                        "type": "string",
                        "description": "The suit.",
                        "title": "Suit"
                      }
                    }
                  },
                  "title": "Cards"
                },
                "remaining": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number remaining.",
                  "title": "Remaining"
                }
              }
            }
          }
        },
        "summary": "Draw a card",
        "description": "Draws one or more cards from a given deck.",
        "operationId": "CardGet",
        "parameters": [
          {
            "name": "deck_id",
            "in": "path",
            "x-ms-summary": "Deck ID",
            "x-ms-url-encoding": "single",
            "description": "The deck identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "count",
            "x-ms-summary": "Deck Count",
            "description": "The number of decks.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cards",
            "in": "query",
            "x-ms-summary": "Cards",
            "description": "The cards as a comma-separated string.",
            "required": true,
            "type": "string"
          }
        ],
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "CardGet",
              "x-ms-require-user-confirmation": false
            }
          ]
        }
      }
    },
    "/deck/new/shuffle/": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Whether successful.",
                  "title": "Success"
                },
                "deck_id": {
                  "type": "string",
                  "description": "The deck identifier.",
                  "title": "Deck ID"
                },
                "shuffled": {
                  "type": "boolean",
                  "description": "Whether shuffled.",
                  "title": "Shuffled"
                },
                "remaining": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number remaining.",
                  "title": "Remaining"
                }
              }
            }
          }
        },
        "summary": "Shuffle new deck",
        "description": "Shuffles a new deck of the given deck size with only the specific cards, if desired.",
        "operationId": "ShuffleGet",
        "parameters": [
          {
            "name": "deck_count",
            "in": "query",
            "x-ms-summary": "Deck Count",
            "description": "The deck count.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cards",
            "in": "query",
            "x-ms-summary": "Cards",
            "description": "The cards as a comma-separated string.",
            "required": false,
            "type": "string"
          }
        ],
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "ShuffleGet",
              "x-ms-require-user-confirmation": false
            }
          ]
        }
      }
    },
    "/deck/{deck_id}/shuffle/": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Whether successful.",
                  "title": "Success"
                },
                "deck_id": {
                  "type": "string",
                  "description": "The deck identifier.",
                  "title": "Deck ID"
                },
                "shuffled": {
                  "type": "boolean",
                  "description": "Whether shuffled.",
                  "title": "Shuffled"
                },
                "remaining": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number remaining.",
                  "title": "Remaining"
                }
              }
            }
          }
        },
        "summary": "Reshuffle cards",
        "description": "Reshuffle a deck of cards. Setting Remaining to true will only shuffle those cards remaining in the main stack, leaving any piles or drawn cards alone.",
        "operationId": "ReshuffleGet",
        "parameters": [
          {
            "name": "deck_id",
            "in": "path",
            "x-ms-summary": "Deck ID",
            "x-ms-url-encoding": "single",
            "description": "The deck identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "remaining",
            "in": "query",
            "x-ms-summary": "Remaining",
            "description": "The number of cards remaining.",
            "required": false,
            "type": "boolean"
          }
        ],
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "ReshuffleGet",
              "x-ms-require-user-confirmation": false
            }
          ]
        }
      }
    },
    "/deck/{deck_id}/pile/{pile_name}/add/": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Whether successful.",
                  "title": "Success"
                },
                "deck_id": {
                  "type": "string",
                  "description": "The deck identifier.",
                  "title": "Deck ID"
                },
                "remaining": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number remaining.",
                  "title": "Remaining"
                },
                "piles": {
                  "type": "object",
                  "properties": {},
                  "description": "The piles object.",
                  "title": "Piles"
                }
              }
            }
          }
        },
        "summary": "Add to piles",
        "description": "Adds one or more cards to a pile. NOTE: Does not work with multiple decks.",
        "operationId": "PileGet",
        "parameters": [
          {
            "name": "deck_id",
            "in": "path",
            "x-ms-summary": "Deck ID",
            "x-ms-url-encoding": "single",
            "description": "The deck identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pile_name",
            "in": "path",
            "x-ms-summary": "Pile",
            "x-ms-url-encoding": "single",
            "description": "The pile name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cards",
            "in": "query",
            "x-ms-summary": "Cards",
            "description": "The cards as a comma-separated string.",
            "required": true,
            "type": "string"
          }
        ],
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "PileGet",
              "x-ms-require-user-confirmation": false
            }
          ]
        }
      }
    },
    "/deck/{deck_id}/pile/{pile_name}/shuffle/": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Whether successful.",
                  "title": "Success"
                },
                "deck_id": {
                  "type": "string",
                  "description": "The deck identifier.",
                  "title": "Deck ID"
                },
                "remaining": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number remaining.",
                  "title": "Remaining"
                },
                "piles": {
                  "type": "object",
                  "properties": {},
                  "description": "The piles object.",
                  "title": "Piles"
                }
              }
            }
          }
        },
        "summary": "Shuffle pile",
        "description": "Shuffles a given pile. NOTE: Will not work with multiple decks.",
        "operationId": "ShufflePileGet",
        "parameters": [
          {
            "name": "deck_id",
            "in": "path",
            "x-ms-summary": "Deck ID",
            "x-ms-url-encoding": "single",
            "description": "The deck identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pile_name",
            "in": "path",
            "x-ms-summary": "Pile",
            "x-ms-url-encoding": "single",
            "description": "The pile name.",
            "required": true,
            "type": "string"
          }
        ],
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "ShufflePileGet",
              "x-ms-require-user-confirmation": false
            }
          ]
        }
      }
    },
    "/deck/{deck_id}/draw/{position}": {},
    "/deck/{deck_id}/pile/{pile_name}/draw/": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Whether successful.",
                  "title": "Success"
                },
                "deck_id": {
                  "type": "string",
                  "description": "The deck identifier.",
                  "title": "Deck ID"
                },
                "remaining": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number remaining.",
                  "title": "Remaining"
                },
                "piles": {
                  "type": "object",
                  "properties": {},
                  "description": "The piles object.",
                  "title": "Piles"
                },
                "cards": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "image": {
                        "type": "string",
                        "description": "The image.",
                        "title": "Image"
                      },
                      "value": {
                        "type": "string",
                        "description": "The value.",
                        "title": "Value"
                      },
                      "suit": {
                        "type": "string",
                        "description": "The suit.",
                        "title": "Suit"
                      },
                      "code": {
                        "type": "string",
                        "description": "The code.",
                        "title": "Code"
                      }
                    }
                  },
                  "title": "Cards"
                }
              }
            }
          }
        },
        "summary": "Draw from pile",
        "description": "Draws one or more cards from a pile.",
        "operationId": "DrawPileGet",
        "parameters": [
          {
            "name": "deck_id",
            "in": "path",
            "x-ms-summary": "Deck ID",
            "x-ms-url-encoding": "single",
            "description": "The deck identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pile_name",
            "in": "path",
            "x-ms-summary": "Pile",
            "x-ms-url-encoding": "single",
            "description": "The pile name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "x-ms-summary": "Count",
            "description": "The count.",
            "required": false,
            "type": "integer"
          }
        ],
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "DrawPileGet",
              "x-ms-require-user-confirmation": false
            }
          ]
        }
      }
    },
    "/deck/{deck_id}/return/": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Whether successful.",
                  "title": "Success"
                },
                "deck_id": {
                  "type": "string",
                  "description": "The deck identifier.",
                  "title": "Deck ID"
                },
                "shuffled": {
                  "type": "boolean",
                  "description": "Whether shuffled.",
                  "title": "Shuffled"
                },
                "remaining": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number remaining.",
                  "title": "Remaining"
                }
              }
            }
          }
        },
        "summary": "Return cards to deck",
        "description": "Returns one or more cards to the deck.",
        "operationId": "ReturnGet",
        "parameters": [
          {
            "name": "deck_id",
            "in": "path",
            "x-ms-summary": "Deck ID",
            "x-ms-url-encoding": "single",
            "description": "The deck identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cards",
            "in": "query",
            "x-ms-summary": "Cards",
            "description": "The cards as a comma-separated string.",
            "required": true,
            "type": "string"
          }
        ],
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "ReturnGet",
              "x-ms-require-user-confirmation": false
            }
          ]
        }
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {},
  "security": [],
  "tags": [],
  "x-ms-openai-manifest": {
    "humanName": "Deck of Cards",
    "modelDescription": "This is a Copilot plugin for the Deck of Cards service.",
    "contactEmail": "ttaylor@hitachisolutions.com"
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://deckofcardsapi.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://deckofcardsapi.com/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Lifestyle and Entertainment"
    }
  ]
}