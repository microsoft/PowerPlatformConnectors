{
  "swagger": "2.0",
  "info": {
    "title": "Telegram Bot",
    "description": "The Telegram Bot API is an HTTP-based interface created for developers keen on building bots for Telegram.",
    "version": "1.0",
    "contact": {
      "name": "Woong Choi",
      "url": "https://www.linkedin.com/in/woongchoi/",
      "email": "woong.choi@sevensigma.com.au"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://telegram.org/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://telegram.org/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Communication"
    }
  ],
  "host": "api.telegram.org",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/bot{token}/getupdates": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "x-ms-summary": "OK",
                  "description": "Request successful"
                },
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Update"
                  },
                  "description": "result"
                }
              }
            }
          }
        },
        "summary": "Get Updates",
        "description": "Use this method to receive incoming updates using long polling",
        "operationId": "GetUpdates",
        "parameters": [
          {
            "$ref": "#/parameters/TelegramBotToken"
          }
        ]
      }
    },
    "/bot{token}/getMe": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "x-ms-summary": "OK",
                  "description": "Request successful"
                },
                "result": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        },
        "summary": "Get Me",
        "description": "Returns basic information about the bot in form of a User object. A simple method for testing your bot's auth token.",
        "operationId": "GetMe",
        "parameters": [
          {
            "$ref": "#/parameters/TelegramBotToken"
          }
        ]
      }
    },
    "/bot{token}/sendMessage": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "description": "ok"
                },
                "result": {
                  "$ref": "#/definitions/Message"
                }
              }
            }
          }
        },
        "summary": "Send Message",
        "description": "Use this method to send text messages",
        "operationId": "SendMessage",
        "consumes": ["application/json"],
        "parameters": [
          {
            "$ref": "#/parameters/TelegramBotToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "chat_id": {
                  "$ref": "#/definitions/chat_id"
                },
                "text": {
                  "$ref": "#/definitions/text"
                }
              }
            }
          }
        ]
      }
    },
    "/bot{token}/sendPhoto": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        },
        "summary": "Send Photo",
        "description": "Use this method to send photos.",
        "operationId": "SendPhoto",
        "consumes": ["application/json"],
        "parameters": [
          {
            "$ref": "#/parameters/TelegramBotToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "chat_id": {
                  "$ref": "#/definitions/chat_id"
                },
                "photo": {
                  "$ref": "#/definitions/photo"
                }
              }
            }
          }
        ]
      }
    },
    "/bot{token}/getChat": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        },
        "summary": "Get Chat",
        "description": "Use this method to get up to date information about the chat",
        "operationId": "GetChat",
        "consumes": ["application/json"],
        "parameters": [
          {
            "$ref": "#/parameters/TelegramBotToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "chat_id": {
                  "$ref": "#/definitions/chat_id"
                }
              }
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "Chat": {
      "type": "object",
      "x-ms-summary": "Chat",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "x-ms-summary": "Chat ID",
          "description": "Unique identifier for this chat"
        },
        "first_name": {
          "type": "string",
          "x-ms-summary": "First Name",
          "description": "First name of the other party in a private chat"
        },
        "last_name": {
          "type": "string",
          "x-ms-summary": "Last Name",
          "description": "Last name of the other party in a private chat"
        },
        "username": {
          "type": "string",
          "x-ms-summary": "User Name",
          "description": "Username, for private chats, supergroups and channels if available"
        },
        "type": {
          "type": "string",
          "x-ms-summary": "Chat",
          "description": "Type of chat, can be either “private”, “group”, “supergroup” or “channel”"
        }
      },
      "description": "This object represents a chat"
    },
    "chat_id": {
      "type": "string",
      "description": "chat_id",
      "x-ms-summary": "Chat ID"
    },
    "photo": {
      "type": "string",
      "description": "Phototo send",
      "x-ms-summary": "Photo"
    },
    "text": {
      "type": "string",
      "description": "Text to send",
      "x-ms-summary": "Text"
    },
    "Update": {
      "type": "object",
      "x-ms-summary": "Update",
      "description": "This object represents an incoming update.",
      "properties": {
        "update_id": {
          "type": "integer",
          "format": "int32",
          "x-ms-summary": "Update ID",
          "description": "The update's unique identifier."
        },
        "message": {
          "$ref": "#/definitions/Message"
        }
      }
    },
    "Message": {
      "type": "object",
      "x-ms-summary": "Message",
      "description": "This object represents a message.",
      "properties": {
        "message_id": {
          "type": "integer",
          "format": "int32",
          "x-ms-summary": "Message ID",
          "description": "Unique message identifier inside this chat"
        },
        "from": {
          "$ref": "#/definitions/User"
        },
        "chat": {
          "$ref": "#/definitions/Chat"
        },
        "date": {
          "type": "integer",
          "format": "int32",
          "x-ms-summary": "Date",
          "description": "Date the message was sent in Unix time"
        },
        "text": {
          "type": "string",
          "x-ms-summary": "Text",
          "description": "For text messages, the actual UTF-8 text of the message, 0-4096 characters"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "x-ms-summary": "ID",
          "description": "Unique identifier for this user or bot"
        },
        "is_bot": {
          "type": "boolean",
          "x-ms-summary": "Is Bot",
          "description": "True, if this user is a bot"
        },
        "first_name": {
          "type": "string",
          "x-ms-summary": "First Name",
          "description": "User's or bot's first name"
        },
        "last_name": {
          "type": "string",
          "x-ms-summary": "Last Name",
          "description": "User's or bot's last name"
        },
        "username": {
          "type": "string",
          "x-ms-summary": "User Name",
          "description": "User's or bot's username"
        },
        "language_code": {
          "type": "string",
          "x-ms-summary": "Language Code",
          "description": "IETF language tag of the user's language"
        },
        "can_join_groups": {
          "type": "boolean",
          "x-ms-summary": "Can join groups",
          "description": "True, if the bot can be invited to groups."
        },
        "can_read_all_group_messages": {
          "type": "boolean",
          "x-ms-summary": "Can read all group messages",
          "description": "True, if privacy mode is disabled for the bot."
        },
        "supports_inline_queries": {
          "type": "boolean",
          "x-ms-summary": "Supports inline queries",
          "description": "True, if the bot supports inline queries."
        }
      },
      "x-ms-summary": "User",
      "description": "This object represents a Telegram user or bot"
    }
  },
  "parameters": {
    "TelegramBotToken": {
      "name": "token",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-summary": "Bot Token",
      "description": "Telegram Bot Token. e.g. 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11",
      "x-ms-url-encoding": "single"
    }
  },
  "responses": {},
  "securityDefinitions": {},
  "security": [],
  "tags": []
}