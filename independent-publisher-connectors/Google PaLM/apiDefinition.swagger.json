{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Google PaLM",
    "description": "Google Palm offers advanced text generation and manipulation capabilities",
    "contact": {
      "name": "Priyaranjan KS",
      "url": "https://www.tcs.com/",
      "email": "Priyaranjan.Sathyavrathan@tcs.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://ai.google/discover/palm2/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://policies.google.com/privacy?hl=en"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI"
    }
  ],
  "host": "generativelanguage.googleapis.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "query",
      "name": "key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "paths": {
    "/{APIVersion}/models": {
      "get": {
        "summary": "List Models",
        "description": "Retrieves the list of available models.",
        "operationId": "ListModels",
        "parameters": [
          {
            "in": "path",
            "name": "APIVersion",
            "required": true,
            "type": "string",
            "description": "Required.API version to use for the endpoint. Examples:v1beta2,v1beta3.",
            "x-ms-summary": "API Version",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "query",
            "name": "pageSize",
            "type": "integer",
            "description": "Optional.The maximum number of Models to return (per page).",
            "x-ms-summary": "Page Size"
          },
          {
            "in": "query",
            "name": "pageToken",
            "type": "string",
            "description": "Optional.A page token, received from a previous models.list call.",
            "x-ms-summary": "Page Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/{APIVersion}/models/{name}": {
      "get": {
        "summary": "Get Model",
        "description": "Retrieves the details of a specific model.",
        "operationId": "GetModel",
        "parameters": [
          {
            "in": "path",
            "name": "APIVersion",
            "required": true,
            "type": "string",
            "description": "Required.API version to use for the endpoint. Examples:v1beta2,v1beta3.",
            "x-ms-summary": "API Version",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "Required. The resource name of the model. Eg: text-bison-001,chat-bison-001",
            "x-ms-summary": "Model Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/{APIVersion}/{modelType}/{modelName}:generateText": {
      "post": {
        "summary": "Generate Text",
        "description": "Generates text based on a provided prompt, with optional constraints like safety settings and stop sequences.",
        "operationId": "GenerateText",
        "parameters": [
          {
            "in": "path",
            "name": "APIVersion",
            "required": true,
            "type": "string",
            "description": "Required.API version to use for the endpoint. Examples:v1beta2,v1beta3.",
            "x-ms-summary": "API Version",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "modelType",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "Required. The type of the model to use for text generation. Examples: 'models', 'tunedModels'.",
            "x-ms-summary": "Model Type"
          },
          {
            "in": "path",
            "name": "modelName",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "Required. The name of the model to use for generating the completion. Examples: text-bison-001, sentence-translator-u3b7m.",
            "x-ms-summary": "Model Name"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "prompt": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string",
                      "description": "Required. The input text given to the model as a prompt.",
                      "x-ms-summary": "Prompt"
                    }
                  },
                  "required": [
                    "text"
                  ]
                },
                "temperature": {
                  "type": "number",
                  "description": "Optional. Controls the randomness of the output.",
                  "x-ms-summary": "Temperature"
                },
                "candidateCount": {
                  "type": "integer",
                  "description": "Optional. Number of generated responses to return.",
                  "x-ms-summary": "Candidate Count"
                },
                "maxOutputTokens": {
                  "type": "integer",
                  "description": "Optional. Maximum number of tokens to include in a candidate.",
                  "x-ms-summary": "Max Output Tokens"
                },
                "topP": {
                  "type": "number",
                  "description": "Optional. Maximum cumulative probability of tokens to consider when sampling.",
                  "x-ms-summary": "Top P"
                },
                "topK": {
                  "type": "integer",
                  "description": "Optional. Maximum number of tokens to consider when sampling.",
                  "x-ms-summary": "Top K"
                },
                "safetySettings": {
                  "type": "array",
                  "description": "Optional. A list of unique SafetySetting instances for blocking unsafe content.",
                  "items": {
                    "type": "object",
                    "description": "Optional. Safety settings to block unsafe content"
                  },
                  "x-ms-summary": "Safety Settings"
                },
                "stopSequences": {
                  "type": "array",
                  "description": "Optional. Character sequences that will stop output generation.",
                  "items": {
                    "type": "string",
                    "description": "Optional. Character sequences to stop output generation."
                  },
                  "x-ms-summary": "Stop Sequences"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/{APIVersion}/models/{model}:generateMessage": {
      "post": {
        "summary": "Generate Message",
        "description": "Generates a response from the model given an input message prompt.",
        "operationId": "GenerateMessage",
        "parameters": [
          {
            "in": "path",
            "name": "APIVersion",
            "required": true,
            "type": "string",
            "description": "Required.API version to use for the endpoint. Examples:v1beta2,v1beta3.",
            "x-ms-summary": "API Version",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "model",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "Required. The name of the Model to use for generating the completion. Example: chat-bison-001.",
            "x-ms-summary": "Model Name"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "prompt"
              ],
              "properties": {
                "prompt": {
                  "type": "object",
                  "description": "Required. The textual input given to model as prompt",
                  "required": [
                    "messages"
                  ],
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "content"
                        ],
                        "properties": {
                          "content": {
                            "type": "string",
                            "description": "Required. The textual input given to model as prompt"
                          }
                        }
                      },
                      "x-ms-summary": "Messages"
                    }
                  }
                },
                "temperature": {
                  "type": "number",
                  "description": "Optional. Controls the randomness of the output.",
                  "x-ms-summary": "Temperature"
                },
                "topP": {
                  "type": "number",
                  "description": "Optional. Maximum cumulative probability of tokens to consider when sampling.",
                  "x-ms-summary": "Top P"
                },
                "topK": {
                  "type": "integer",
                  "description": "Optional. Maximum number of tokens to consider when sampling.",
                  "x-ms-summary": "Top K"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/{APIVersion}/models/{model}:countTextTokens": {
      "post": {
        "summary": "Count Text Tokens",
        "description": "Counts the number of tokens in the provided text prompt.",
        "operationId": "CountTextTokens",
        "parameters": [
          {
            "in": "path",
            "name": "APIVersion",
            "required": true,
            "type": "string",
            "description": "Required.API version to use for the endpoint. Examples:v1beta3.",
            "x-ms-summary": "API Version",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "model",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "Required. The model's resource name. Eg: text-bison-001 .Call List Models to see the list of supported models ",
            "x-ms-summary": "Model Name"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "prompt"
              ],
              "properties": {
                "prompt": {
                  "type": "object",
                  "required": [
                    "text"
                  ],
                  "properties": {
                    "text": {
                      "type": "string",
                      "description": "Required.The text prompt to analyze.",
                      "x-ms-summary": "Text"
                    }
                  }
                }
              },
              "example": {
                "prompt": {
                  "text": "Write a story about a magic backpack."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/{APIVersion}/models/{model}:countMessageTokens": {
      "post": {
        "summary": "Count Message Tokens",
        "description": "Counts the number of tokens in the provided message prompt.",
        "operationId": "CountMessageTokens",
        "parameters": [
          {
            "in": "path",
            "name": "APIVersion",
            "required": true,
            "type": "string",
            "description": "Required.API version to use for the endpoint. Examples:v1beta2,v1beta3.",
            "x-ms-summary": "API Version",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "model",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "Required. The model's resource name.Eg: chat-bison-001 . Call List Models to see the list of supported models ",
            "x-ms-summary": "Model Name"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "prompt"
              ],
              "properties": {
                "prompt": {
                  "type": "object",
                  "description": "Required. The prompt, whose token count is to be returned.",
                  "required": [
                    "messages"
                  ],
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "content"
                        ],
                        "properties": {
                          "content": {
                            "type": "string",
                            "description": "Required. The content of the message."
                          }
                        }
                      },
                      "x-ms-summary": "Messages"
                    }
                  }
                }
              },
              "example": {
                "prompt": {
                  "messages": [
                    {
                      "content": "How many tokens?"
                    },
                    {
                      "content": "For this whole conversation?"
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/{APIVersion}/models/{model}:embedText": {
      "post": {
        "summary": "Text Embedding",
        "description": "Turns the provided free-form input text into an embedding.",
        "operationId": "EmbedText",
        "parameters": [
          {
            "in": "path",
            "name": "APIVersion",
            "required": true,
            "type": "string",
            "description": "Required.API version to use for the endpoint. Examples:v1beta2,v1beta3.",
            "x-ms-summary": "API Version",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "model",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "Required. The name of the Model to use for generating the embedding. Eg: embedding-gecko-001.",
            "x-ms-summary": "Model Name"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "text"
              ],
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Required. The free-form input text that the model will turn into an embedding.",
                  "x-ms-summary": "Text"
                }
              },
              "example": {
                "text": "say something nice!"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "embedding": {
                  "type": "object",
                  "description": "The embedding generated from the input text.",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      },
                      "description": "The numerical representation of the text in the embedding space."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}