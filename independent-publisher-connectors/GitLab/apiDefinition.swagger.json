{
  "swagger": "2.0",
  "info": {
    "version": "v4",
    "title": "GitLab",
    "description": "A connector for GitLab DevOps platform. Create projects, repositories, CICD pipelines, forks, branches, and merge requests.",
    "contact": {
      "name": "Roy Paar",
      "email": "roypaar@microsoft.com"
    }
  },
  "host": "gitlab.com",
  "basePath": "/api/v4",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/version": {
      "get": {
        "description": "Retrieve version information for this GitLab instance.",
        "summary": "getVersion",
        "tags": [
          "version"
        ],
        "operationId": "getVersion",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VersionResponse"
            },
            "examples": {
              "application/json": {
                "version": "13.3.0-pre",
                "revision": "f2b05afebb0"
              }
            }
          },
          "401": {
            "description": "unauthorized operation"
          }
        }
      }
    },
    "/projects": {
      "post": {
        "description": "Create a new project.",
        "summary": "createProject",
        "tags": [
          "project"
        ],
        "operationId": "createProject",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "query",
            "type": "string",
            "x-ms-summary": "The name of the new project.",
            "description": "The name of the new project."
          },
          {
            "name": "namespace_id",
            "required": false,
            "in": "query",
            "type": "integer",
            "x-ms-summary": "Repository name for the new project.",
            "description": "Repository name for the new project."
          },
          {
            "name": "initialize_with_readme",
            "required": false,
            "in": "query",
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Initialize the repository with a readme.",
            "description": "Initialize the repository with a readme."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            },
            "examples": {
              "application/json": {
                "version": "13.3.0-pre",
                "revision": "f2b05afebb0"
              }
            }
          },
          "401": {
            "description": "unauthorized operation"
          }
        }
      }
    },
    "/projects/{id}/fork": {
      "post": {
        "description": "Fork a project.",
        "summary": "forkProject",
        "tags": [
          "project"
        ],
        "operationId": "forkProject",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "type": "integer",
            "x-ms-summary": "The ID or URL-encoded path of the project.",
            "description": "The ID or URL-encoded path of the project.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "path",
            "required": false,
            "in": "query",
            "type": "string",
            "x-ms-summary": "The path assigned to the resultant project after forking.",
            "description": "The path assigned to the resultant project after forking."
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "type": "string",
            "x-ms-summary": "The name assigned to the resultant project after forking.",
            "description": "The name assigned to the resultant project after forking."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            },
            "examples": {
              "application/json": {
                "version": "13.3.0-pre",
                "revision": "f2b05afebb0"
              }
            }
          },
          "401": {
            "description": "unauthorized operation"
          }
        }
      }
    },
    "/projects/{id}/repository/compare": {
      "get": {
        "description": "Compare a branch, tag, or commit.",
        "summary": "compareRepo",
        "tags": [
          "project"
        ],
        "operationId": "compareRepo",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "type": "integer",
            "x-ms-summary": "The ID or URL-encoded path of the project owned by the authenticated user.",
            "description": "The ID or URL-encoded path of the project owned by the authenticated user.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "type": "string",
            "x-ms-summary": "The commit SHA or branch name.",
            "description": "The commit SHA or branch name."
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "type": "string",
            "x-ms-summary": "The commit SHA or branch name.",
            "description": "The commit SHA or branch name."
          },
          {
            "name": "from_project_id",
            "required": false,
            "in": "query",
            "type": "integer",
            "x-ms-summary": "The ID from which to compare.",
            "description": "The ID from which to compare."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CompareResponse"
            },
            "examples": {
              "application/json": {
                "version": "13.3.0-pre",
                "revision": "f2b05afebb0"
              }
            }
          },
          "401": {
            "description": "unauthorized operation"
          }
        }
      }
    },
    "/projects/{id}/repository/branches": {
      "post": {
        "description": "Create a new branch.",
        "summary": "createBranch",
        "tags": [
          "project"
        ],
        "operationId": "createBranch",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "type": "integer",
            "x-ms-summary": "ID or URL-encoded path of the project owned by the authenticated user.",
            "description": "ID or URL-encoded path of the project owned by the authenticated user.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "branch",
            "required": true,
            "in": "query",
            "type": "string",
            "x-ms-summary": "The name of the branch.",
            "description": "The name of the branch."
          },
          {
            "name": "ref",
            "required": true,
            "in": "query",
            "type": "string",
            "default": "main",
            "x-ms-summary": "Branch name or commit SHA from which to create a branch.",
            "description": "Branch name or commit SHA from which to create a branch."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BranchResponse"
            },
            "examples": {
              "application/json": {
                "version": "13.3.0-pre",
                "revision": "f2b05afebb0"
              }
            }
          },
          "401": {
            "description": "unauthorized operation"
          }
        }
      }
    },
    "/projects/{id}/repository/commits": {
      "post": {
        "description": "Create a new commit.",
        "summary": "createCommit",
        "tags": [
          "project"
        ],
        "operationId": "createCommit",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "type": "integer",
            "x-ms-summary": "The ID or URL-encoded path of the project",
            "description": "The ID or URL-encoded path of the project",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "branch",
            "required": true,
            "in": "query",
            "type": "string",
            "x-ms-summary": "Name of the branch to commit into.",
            "description": "Name of the branch to commit into."
          },
          {
            "name": "commit_message",
            "required": true,
            "in": "query",
            "type": "string",
            "x-ms-summary": "Commit message",
            "description": "Commit message"
          },
          {
            "name": "actions",
            "in": "body",
            "description": "actions",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CommitResponse"
            },
            "examples": {
              "application/json": {
                "version": "13.3.0-pre",
                "revision": "f2b05afebb0"
              }
            }
          },
          "401": {
            "description": "unauthorized operation"
          }
        }
      }
    },
    "/projects/{id}/merge_requests": {
      "post": {
        "description": "Create a merge request.",
        "summary": "mergeRequest",
        "tags": [
          "project"
        ],
        "operationId": "mergeRequest",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "type": "integer",
            "x-ms-summary": "The ID or URL-encoded path of the project owned by the authenticated user",
            "description": "The ID or URL-encoded path of the project owned by the authenticated user",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "source_branch",
            "required": true,
            "in": "query",
            "type": "string",
            "x-ms-summary": "The source branch.",
            "description": "The source branch."
          },
          {
            "name": "target_branch",
            "required": true,
            "in": "query",
            "type": "string",
            "x-ms-summary": "The target branch.",
            "description": "The target branch."
          },
          {
            "name": "title",
            "required": true,
            "in": "query",
            "type": "string",
            "x-ms-summary": "Title of the merge request.",
            "description": "Title of the merge request."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MergeResponse"
            },
            "examples": {
              "application/json": {
                "version": "13.3.0-pre",
                "revision": "f2b05afebb0"
              }
            }
          },
          "401": {
            "description": "unauthorized operation"
          }
        }
      }
    },
    "/projects/{id}/merge_requests/{merge_request_iid}/merge": {
      "put": {
        "description": "Merge a merge request.",
        "summary": "mergeMergeRequest",
        "tags": [
          "project"
        ],
        "operationId": "mergeMergeRequest",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "type": "integer",
            "x-ms-summary": "The ID or URL-encoded path of the project owned by the authenticated user.",
            "description": "The ID or URL-encoded path of the project owned by the authenticated user.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "merge_request_iid",
            "required": true,
            "in": "path",
            "type": "integer",
            "x-ms-summary": "The internal ID of the merge request.",
            "description": "The internal ID of the merge request.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "merge_commit_message",
            "required": false,
            "in": "query",
            "type": "string",
            "x-ms-summary": "Custom merge commit message.",
            "description": "Custom merge commit message."
          },
          {
            "name": "squash",
            "required": false,
            "in": "query",
            "type": "boolean",
            "default": true,
            "x-ms-summary": "If true the commits are squashed into a single commit on merge.",
            "description": "If true the commits are squashed into a single commit on merge."
          },
          {
            "name": "should_remove_source_branch",
            "required": false,
            "in": "query",
            "type": "boolean",
            "default": true,
            "x-ms-summary": "If true removes the source branch.",
            "description": "If true removes the source branch."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MergeResponse"
            },
            "examples": {
              "application/json": {
                "version": "13.3.0-pre",
                "revision": "f2b05afebb0"
              }
            }
          },
          "401": {
            "description": "unauthorized operation"
          }
        }
      }
    },
    "/projects/{id}/repository/files/{file_path}": {
      "get": {
        "description": "Get a File from a Repository.",
        "summary": "getFile",
        "tags": [
          "project"
        ],
        "operationId": "getFile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "type": "integer",
            "x-ms-summary": "The ID or URL-encoded path of the project owned by the authenticated user",
            "description": "The ID or URL-encoded path of the project owned by the authenticated user",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "file_path",
            "required": true,
            "in": "path",
            "type": "string",
            "x-ms-summary": "URL encoded full path to new file.",
            "description": "URL encoded full path to new file.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "ref",
            "required": true,
            "in": "query",
            "type": "string",
            "x-ms-summary": "The name of branch tag or commit",
            "description": "The name of branch tag or commit"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetFileResponse"
            },
            "examples": {
              "application/json": {
                "version": "13.3.0-pre",
                "revision": "f2b05afebb0"
              }
            }
          },
          "401": {
            "description": "unauthorized operation"
          }
        }
      }
    }
  },
  "definitions": {
    "VersionResponse": {
      "type": "object",
      "properties": {
        "statusDetails": {
          "$ref": "#/definitions/statusDetails"
        }
      }
    },
    "ProjectResponse": {
      "type": "object",
      "properties": {
        "statusDetails": {
          "$ref": "#/definitions/statusDetails"
        }
      }
    },
    "BranchResponse": {
      "type": "object",
      "properties": {
        "statusDetails": {
          "$ref": "#/definitions/statusDetails"
        }
      }
    },
    "CommitResponse": {
      "type": "object",
      "properties": {
        "statusDetails": {
          "$ref": "#/definitions/statusDetails"
        }
      }
    },
    "CompareResponse": {
      "type": "object",
      "properties": {
        "statusDetails": {
          "$ref": "#/definitions/statusDetails"
        }
      }
    },
    "MergeResponse": {
      "type": "object",
      "properties": {
        "statusDetails": {
          "$ref": "#/definitions/statusDetails"
        }
      }
    },
    "GetFileResponse": {
      "type": "object",
      "properties": {
        "statusDetails": {
          "$ref": "#/definitions/statusDetails"
        }
      }
    },
    "statusDetails": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "statusCode": {
          "type": "string"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages"
          }
        }
      }
    },
    "messages": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Private-Token"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://about.gitlab.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://about.gitlab.com/privacy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "IT Operations"
    }
  ]
}