{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Azure AD App Registrations",
    "description": "Azure Active Directory is an Identity and Access Management cloud solution that extends your on-premises directories to the cloud and provides single sign-on to thousands of cloud (SaaS) apps and access to web apps you run on-premises.",
    "contact": {
      "name" : "Paul Culmsee",
      "url": "https://docs.microsoft.com/en-us/graph/api/resources/application",
      "email" : "paul.culmsee@sevensigma.com.au"      
    }
  },
  "host": "graph.microsoft.com",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1.0/applications": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/ListApplications_Request"
            }
          }
        },
        "summary": "List Applications and Owners",
        "operationId": "ListApplications",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters properties (columns)",
            "x-ms-summary": "Choose columns to display (blank for all)",
            "x-ms-visibility": "important"
          },
          {
            "name": "$search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search displayName/description. Clear related columns and specify in quotes. (eg \"displayName:Web\")",
            "x-ms-summary": "Search criteria",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "true or false - Retrieves the total count of matching resources",
            "x-ms-summary": "Display count",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Retrieves related resources (including owner details by default. Remove if you enter search criteria)",
            "x-ms-summary": "List related columns",
            "x-ms-visibility": "important",
            "default": "Owners"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Limits the number of results.",
            "x-ms-summary": "Total count to return",
            "x-ms-visibility": "advanced"
          }
        ],
        "description": "Get the list of applications registered in AAD in this organization",
        "x-ms-visibility": "important"
      }
    }
  },
  "definitions": {
    "ListApplications_Request": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string",
          "description": "@odata.context"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique identifier for the application"
              },
              "deletedDateTime": {
                "type": "string",
                "description": "The date and time the application was deleted. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time."
              },
              "appId": {
                "type": "string",
                "description": "The unique identifier for the application that is assigned to an application by Azure AD"
              },
              "applicationTemplateId": {
                "type": "string",
                "description": "Unique identifier of the applicationTemplate"
              },
              "disabledByMicrosoftStatus": {
                "type": "string",
                "description": "Specifies whether Microsoft has disabled the registered application"
              },
              "createdDateTime": {
                "type": "string",
                "description": "The date and time the application was registered. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time"
              },
              "displayName": {
                "type": "string",
                "description": "The display name for the application"
              },
              "description": {
                "type": "string",
                "description": "The description for the application"
              },
              "groupMembershipClaims": {
                "type": "string",
                "description": "The groups claim issued in a user or OAuth 2.0 access token that the application expects"
              },
              "identifierUris": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The URIs that identify the application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant"
              },
              "isDeviceOnlyAuthSupported": {
                "type": "string",
                "description": "Specifies whether this application supports device authentication without a user. The default is false"
              },
              "isFallbackPublicClient": {
                "type": "boolean",
                "description": "Specifies the fallback application type as public client, such as an installed application running on a mobile device. The default value is false which means the fallback application type is confidential client such as a web app"
              },
              "notes": {
                "type": "string",
                "description": "Notes relevant for the management of the application"
              },
              "optionalClaims": {
                "type": "string",
                "description": "Optional claims in their Azure AD applications to specify the claims that are sent to their application by the Microsoft security token service"
              },
              "publisherDomain": {
                "type": "string",
                "description": "The verified publisher domain for the application"
              },
              "signInAudience": {
                "type": "string",
                "description": "Specifies the Microsoft accounts that are supported for the current application. Supported values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount"
              },
              "tags": {
                "type": "array",
                "items": {},
                "description": "Custom strings that can be used to categorize and identify the application"
              },
              "tokenEncryptionKeyId": {
                "type": "string",
                "description": "Specifies the keyId of a public key from the keyCredentials collection"
              },
              "verifiedPublisher": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "The verified publisher name from the app publisher's Partner Center account"
                  },
                  "verifiedPublisherId": {
                    "type": "string",
                    "description": "The ID of the verified publisher from the app publisher's Partner Center account"
                  },
                  "addedDateTime": {
                    "type": "string",
                    "description": "The timestamp when the verified publisher was first added or most recently updated"
                  }
                },
                "description": "Specifies the verified publisher of the application"
              },
              "defaultRedirectUri": {
                "type": "string",
                "description": "The default redirect URI"
              },
              "addIns": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "id"
                    },
                    "type": {
                      "type": "string",
                      "description": "type"
                    },
                    "properties": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "key"
                          },
                          "value": {
                            "type": "string",
                            "description": "value"
                          }
                        }
                      },
                      "description": "properties"
                    }
                  }
                },
                "description": "Defines custom behavior that a consuming service can use to call an app in specific contexts"
              },
              "api": {
                "type": "object",
                "properties": {
                  "acceptMappedClaims": {
                    "type": "string",
                    "description": "When true, allows an application to use claims mapping without specifying a custom signing key"
                  },
                  "knownClientApplications": {
                    "type": "array",
                    "items": {},
                    "description": "Used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app"
                  },
                  "requestedAccessTokenVersion": {
                    "type": "string",
                    "description": "Specifies the access token version expected by this resource. This changes the version and format of the JWT produced independent of the endpoint or client used to request the access token"
                  },
                  "oauth2PermissionScopes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "adminConsentDescription": {
                          "type": "string",
                          "description": "A description of the delegated permissions, intended to be read by an administrator granting the permission on behalf of all users"
                        },
                        "adminConsentDisplayName": {
                          "type": "string",
                          "description": "The permission's title, intended to be read by an administrator granting the permission on behalf of all users"
                        },
                        "id": {
                          "type": "string",
                          "description": "Unique delegated permission identifier inside the collection of delegated permissions defined for a resource application"
                        },
                        "isEnabled": {
                          "type": "boolean",
                          "description": "When creating or updating a permission, this property must be set to true (which is the default). To delete a permission, this property must first be set to false"
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions"
                        },
                        "userConsentDescription": {
                          "type": "string",
                          "description": "A description of the delegated permissions, intended to be read by a user granting the permission on their own behalf"
                        },
                        "userConsentDisplayName": {
                          "type": "string",
                          "description": "A title for the permission, intended to be read by a user granting the permission on their own behalf"
                        },
                        "value": {
                          "type": "string",
                          "description": "Specifies the value to include in the scp (scope) claim in access tokens"
                        }
                      }
                    },
                    "description": "The definition of the delegated permissions exposed by the web API represented by this application registration"
                  },
                  "preAuthorizedApplications": {
                    "type": "array",
                    "items": {},
                    "description": "Lists the client applications that are pre-authorized with the specified delegated permissions to access this application's APIs"
                  }
                },
                "description": "Specifies settings for an application that implements a web API"
              },
              "appRoles": {
                "type": "array",
                "items": {},
                "description": "The collection of roles assigned to the application"
              },
              "info": {
                "type": "object",
                "properties": {
                  "logoUrl": {
                    "type": "string",
                    "description": "CDN URL to the application's logo"
                  },
                  "marketingUrl": {
                    "type": "string",
                    "description": "Link to the application's marketing page"
                  },
                  "privacyStatementUrl": {
                    "type": "string",
                    "description": "Link to the application's privacy statement"
                  },
                  "supportUrl": {
                    "type": "string",
                    "description": "Link to the application's support page"
                  },
                  "termsOfServiceUrl": {
                    "type": "string",
                    "description": "Link to the application's terms of service statement"
                  }
                },
                "description": "Basic profile information of the application such as app's marketing, support, terms of service and privacy statement URLs"
              },
              "keyCredentials": {
                "type": "array",
                "items": {},
                "description": "The collection of key credentials associated with the application"
              },
              "parentalControlSettings": {
                "type": "object",
                "properties": {
                  "countriesBlockedForMinors": {
                    "type": "array",
                    "items": {},
                    "description": "Specifies the two-letter ISO country codes"
                  },
                  "legalAgeGroupRule": {
                    "type": "string",
                    "description": "Specifies the legal age group rule that applies to users of the app"
                  }
                },
                "description": "Specifies parental control settings for an application"
              },
              "passwordCredentials": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Friendly name for the password"
                    },
                    "endDateTime": {
                      "type": "string",
                      "description": "The date and time at which the password expires represented using ISO 8601 format and is always in UTC time"
                    },
                    "hint": {
                      "type": "string",
                      "description": "Contains the first three characters of the password"
                    },
                    "keyId": {
                      "type": "string",
                      "description": "The unique identifier for the password"
                    },
                    "startDateTime": {
                      "type": "string",
                      "description": "The date and time at which the password becomes valid. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time"
                    }
                  }
                },
                "description": "The collection of password credentials associated with the application"
              },
              "publicClient": {
                "type": "object",
                "properties": {
                  "redirectUris": {
                    "type": "array",
                    "items": {},
                    "description": "Specifies the URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent"
                  }
                },
                "description": "Specifies settings for installed clients such as desktop or mobile devices"
              },
              "requiredResourceAccess": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "resourceAppId": {
                      "type": "string",
                      "description": "The unique identifier for the resource that the application requires access to"
                    },
                    "resourceAccess": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier for one of the oauth2PermissionScopes or appRole instances that the resource application exposes"
                          },
                          "type": {
                            "type": "string",
                            "description": "Specifies whether the id property references an oauth2PermissionScopes or an appRole"
                          }
                        }
                      },
                      "description": "The list of OAuth2.0 permission scopes and app roles that the application requires from the specified resource"
                    }
                  }
                },
                "description": "Specifies the resources that the application needs to access. This property also specifies the set of OAuth permission scopes and application roles that it needs for each of those resources"
              },
              "web": {
                "type": "object",
                "properties": {
                  "homePageUrl": {
                    "type": "string",
                    "description": "Home page or landing page of the application"
                  },
                  "logoutUrl": {
                    "type": "string",
                    "description": "Specifies the URL that will be used by Microsoft's authorization service to logout an user using front-channel, back-channel or SAML logout protocols"
                  },
                  "redirectUris": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent"
                  },
                  "implicitGrantSettings": {
                    "type": "object",
                    "properties": {
                      "enableAccessTokenIssuance": {
                        "type": "boolean",
                        "description": "Specifies whether this web application can request an ID token using the OAuth 2.0 implicit flow"
                      },
                      "enableIdTokenIssuance": {
                        "type": "boolean",
                        "description": "Specifies whether this web application can request an access token using the OAuth 2.0 implicit flow"
                      }
                    },
                    "description": "Specifies whether this web application can request tokens using the OAuth 2.0 implicit flow"
                  }
                },
                "description": "Specifies settings for a web application"
              },
              "spa": {
                "type": "object",
                "properties": {
                  "redirectUris": {
                    "type": "array",
                    "items": {},
                    "description": "Specifies the URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent"
                  }
                },
                "description": "Specifies settings for a single-page application, including sign out URLs and redirect URIs for authorization codes and access tokens"
              }
            }
          },
          "description": "Represents an application. Any application that outsources authentication to Azure Active Directory (Azure AD) must be registered in a directory"
        }
      }
    }
  },
  "parameters": {
  },
  "securityDefinitions": {
    "undefined": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {
        "Application.Read.All": "Application.Read.All"
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://privacy.microsoft.com/en-us/privacystatement"
    },
    {
      "propertyName": "Website",
      "propertyValue": "https://azure.microsoft.com/en-us/services/active-directory"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "IT Operations;Security"
    }
  ],
  "security": [
    {
      "undefined": []
    }
  ]
}
