{
  "swagger": "2.0",
  "info": {
    "title": "Quickbase",
    "description": "Quickbase is an application development platform that unites business and IT teams by enabling problem solvers of any technical background to work together to safely, securely and sustainably create an ecosystem of applications. Quickbase helps businesses accelerate the continuous innovation of unique processes by enabling citizen development at scale across one common platform.",
    "version": "1.1",
    "contact": {
      "name": "Troy Taylor",
      "url": "https://www.hitachisolutions.com",
      "email": "ttaylor@hitachisolutions.com"
    }
  },
  "host": "api.quickbase.com",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/apps": {
      "post": {
        "description": "Creates an application in an account. You must have application creation rights in the respective account. Main properties and application variables can be set with this API.",
        "summary": "Create an app",
        "tags": [
          "Apps"
        ],
        "operationId": "CreateApp",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to create an application.",
            "schema": {
              "$ref": "#/definitions/generated"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/createAppResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}": {
      "get": {
        "description": "Returns the main properties of an application, including application variables.",
        "summary": "Get an app",
        "tags": [
          "Apps"
        ],
        "operationId": "GetApp",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "x-ms-summary": "App ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier of an app."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getAppResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an entire application, including all of the tables and data.",
        "summary": "Delete an app",
        "tags": [
          "Apps"
        ],
        "operationId": "DeleteApp",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to delete an application.",
            "schema": {
              "$ref": "#/definitions/generated2"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "x-ms-summary": "App ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier of an app."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/deleteAppResponse"
            }
          }
        }
      },
      "post": {
        "description": "Updates the main properties and/or application variables for a specific application. Any properties of the app that you do not specify in the request body will remain unchanged.",
        "summary": "Update an app",
        "tags": [
          "Apps"
        ],
        "operationId": "UpdateApp",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to update an application.",
            "schema": {
              "$ref": "#/definitions/generated1"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "x-ms-summary": "App ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier of an app."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/updateAppResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/events": {
      "get": {
        "description": "Get a list of events that can be triggered based on data or user actions in this application, includes: Email notification, Reminders, Subscriptions, QB Actions, Webhooks, record change triggered Automations (does not include scheduled).",
        "summary": "Get app events",
        "tags": [
          "Apps"
        ],
        "operationId": "GetAppEvents",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "x-ms-summary": "App ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier of an app."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type.",
                    "title": "Type"
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The owner's email address.",
                        "title": "Email"
                      },
                      "id": {
                        "type": "string",
                        "description": "The owner's identifier.",
                        "title": "ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "The owner's name.",
                        "title": "Name"
                      },
                      "userName": {
                        "type": "string",
                        "description": "The owner's user name.",
                        "title": "User Name"
                      }
                    },
                    "title": "Owner"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Whether is active.",
                    "title": "Is Active"
                  },
                  "tableId": {
                    "type": "string",
                    "description": "The identifier of the table.",
                    "title": "Table ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name.",
                    "title": "Name"
                  },
                  "url": {
                    "type": "string",
                    "description": "The URL address.",
                    "title": "URL"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/copy": {
      "post": {
        "description": "Copies the specified application. The new application will have the same schema as the original. See below for additional copy options.",
        "summary": "Copy an app",
        "tags": [
          "Apps"
        ],
        "operationId": "CopyApp",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to copy an application.",
            "schema": {
              "$ref": "#/definitions/generated3"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "x-ms-summary": "App ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier of an app."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/copyAppResponse"
            }
          }
        }
      }
    },
    "/tables": {
      "get": {
        "description": "Gets a list of all the tables that exist in a specific application. The properties for each table are the same as what is returned in Get table.",
        "summary": "Get tables for an app",
        "tags": [
          "Tables"
        ],
        "operationId": "GetAppTables",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "x-ms-summary": "App ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier of an app"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name.",
                    "title": "Name"
                  },
                  "created": {
                    "type": "string",
                    "description": "When created.",
                    "title": "Created"
                  },
                  "updated": {
                    "type": "string",
                    "description": "When updated.",
                    "title": "Updated"
                  },
                  "alias": {
                    "type": "string",
                    "description": "The alias.",
                    "title": "Alias"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description.",
                    "title": "Description"
                  },
                  "id": {
                    "type": "string",
                    "description": "The identifier.",
                    "title": "ID"
                  },
                  "nextRecordId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The identifier of the next record.",
                    "title": "Next Record ID"
                  },
                  "nextFieldId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The identifier of the next field.",
                    "title": "Next Field ID"
                  },
                  "defaultSortFieldId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The identifier of the default sort field.",
                    "title": "Default Sort Field ID"
                  },
                  "defaultSortOrder": {
                    "type": "string",
                    "description": "The default sort order.",
                    "title": "Default Sort Order"
                  },
                  "keyFieldId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The identifier of the key field.",
                    "title": "Key Field ID"
                  },
                  "singleRecordName": {
                    "type": "string",
                    "description": "The single record name.",
                    "title": "Single Record Name"
                  },
                  "pluralRecordName": {
                    "type": "string",
                    "description": "The plural record name.",
                    "title": "Plural Record Name"
                  },
                  "sizeLimit": {
                    "type": "string",
                    "description": "The size limit.",
                    "title": "Size Limit"
                  },
                  "spaceUsed": {
                    "type": "string",
                    "description": "The used space.",
                    "title": "Space Used"
                  },
                  "spaceRemaining": {
                    "type": "string",
                    "description": "The remaining space.",
                    "title": "Space Remaining"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a table in an application.",
        "summary": "Create a table",
        "tags": [
          "Tables"
        ],
        "operationId": "CreateTable",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "x-ms-summary": "App ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier of an app"
          },
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to create a table.",
            "schema": {
              "$ref": "#/definitions/generated4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/createTableResponse"
            }
          }
        }
      }
    },
    "/tables/{tableId}": {
      "get": {
        "description": "Gets the properties of an individual table that is part of an application.",
        "summary": "Get a table",
        "tags": [
          "Tables"
        ],
        "operationId": "GetTable",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "x-ms-summary": "App ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier of an app"
          },
          {
            "name": "tableId",
            "in": "path",
            "x-ms-summary": "Table ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier (DBID) of the table."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getTableResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a specific table in an application, including all of the data within it.",
        "summary": "Delete a table",
        "tags": [
          "Tables"
        ],
        "operationId": "DeleteTable",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "x-ms-summary": "App ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier of an app"
          },
          {
            "name": "tableId",
            "in": "path",
            "x-ms-summary": "Table ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier (DBID) of the table."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/deleteTableResponse"
            }
          }
        }
      },
      "post": {
        "description": "Updates the main properties of a specific table. Any properties of the table that you do not specify in the request body will remain unchanged.",
        "summary": "Update a table",
        "tags": [
          "Tables"
        ],
        "operationId": "UpdateTable",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "x-ms-summary": "App ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier of an app"
          },
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to update a table.",
            "schema": {
              "$ref": "#/definitions/generated5"
            }
          },
          {
            "name": "tableId",
            "in": "path",
            "x-ms-summary": "Table ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier (DBID) of the table."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/updateTableResponse"
            }
          }
        }
      }
    },
    "/tables/{tableId}/relationships": {
      "get": {
        "description": "Get a list of all relationships, and their definitions, for a specific table. Details are provided for both the parent and child sides of relationships within a given application. Limited details are returned for cross-application relationships.",
        "summary": "Get all relationships",
        "tags": [
          "Tables"
        ],
        "operationId": "GetRelationships",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "x-ms-summary": "Skip",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of relationships to skip."
          },
          {
            "name": "tableId",
            "in": "path",
            "x-ms-summary": "Table ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier (DBID) of the table."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getRelationshipsResponse"
            }
          }
        }
      }
    },
    "/tables/{tableId}/relationship": {
      "post": {
        "description": "Creates a relationship in a table as well as lookup/summary fields. Relationships can only be created for tables within the same app.",
        "summary": "Create a relationship",
        "tags": [
          "Tables"
        ],
        "operationId": "CreateRelationship",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to create a relation in a table.",
            "schema": {
              "$ref": "#/definitions/generated6"
            }
          },
          {
            "name": "tableId",
            "in": "path",
            "x-ms-summary": "Table ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier (DBID) of the table. This will be the child table."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/createRelationshipResponse"
            }
          }
        }
      }
    },
    "/tables/{tableId}/relationship/{relationshipId}": {
      "delete": {
        "description": "Use this endpoint to delete an entire relationship, including all lookup and summary fields. The reference field in the relationship will not be deleted.",
        "summary": "Delete a relationship",
        "tags": [
          "Tables"
        ],
        "operationId": "DeleteRelationship",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "x-ms-summary": "Table ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier (DBID) of the table. This will be the child table."
          },
          {
            "name": "relationshipId",
            "in": "path",
            "x-ms-summary": "Relationship ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "number",
            "format": "double",
            "description": "The relationship ID. This is the field ID of the reference field on the child table."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/deleteRelationshipResponse"
            }
          }
        }
      },
      "post": {
        "description": "Use this endpoint to add lookup fields and summary fields to an existing relationship. Updating a relationship will not delete existing lookup/summary fields.",
        "summary": "Update a relationship",
        "tags": [
          "Tables"
        ],
        "operationId": "UpdateRelationship",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to update a relationship.",
            "schema": {
              "$ref": "#/definitions/generated7"
            }
          },
          {
            "name": "tableId",
            "in": "path",
            "x-ms-summary": "Table ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier (DBID) of the table. This will be the child table."
          },
          {
            "name": "relationshipId",
            "in": "path",
            "x-ms-summary": "Relationship ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "number",
            "format": "double",
            "description": "The relationship ID. This is the field ID of the reference field on the child table."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/updateRelationshipResponse"
            }
          }
        }
      }
    },
    "/reports": {
      "get": {
        "description": "Get the schema (properties) of all reports for a table. If the user running the API is an application administrator, the API will also return all personal reports with owner's user id.",
        "summary": "Get all table reports",
        "tags": [
          "Reports"
        ],
        "operationId": "GetTableReports",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "x-ms-summary": "Table ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the table."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The identifier.",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name.",
                    "title": "Name"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type.",
                    "title": "Type"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description.",
                    "title": "Description"
                  },
                  "ownerId": {
                    "type": "string",
                    "description": "The identifier of the owner.",
                    "title": "Owner ID"
                  },
                  "query": {
                    "type": "object",
                    "properties": {},
                    "description": "The query object.",
                    "title": "Query"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {},
                    "description": "The properties object",
                    "title": "Properties"
                  },
                  "usedLast": {
                    "type": "string",
                    "description": "When used last.",
                    "title": "Used Last"
                  },
                  "usedCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The used count.",
                    "title": "Used Count"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/{reportId}": {
      "get": {
        "description": "Get the schema (properties) of an individual report.",
        "summary": "Get a report",
        "tags": [
          "Reports"
        ],
        "operationId": "GetReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "x-ms-summary": "Table ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier of table."
          },
          {
            "name": "reportId",
            "in": "path",
            "x-ms-summary": "Report ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The identifier of the report, unique to the table."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getReportResponse"
            }
          }
        }
      }
    },
    "/reports/{reportId}/run": {
      "post": {
        "description": "Runs a report, based on an ID and returns the underlying data associated with it. The format of the data will vary based on the report type. Reports that focus on record-level data (table, calendar, etc.) return the individual records. Aggregate reports (summary, chart) will return the summarized information as configured in the report. UI-specific elements are not returned, such as totals, averages and visualizations. Returns data with intelligent pagination based on the approximate size of each record. The metadata object will include the necessary information to iterate over the response and gather more data.",
        "summary": "Run a report",
        "tags": [
          "Reports"
        ],
        "operationId": "RunReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "x-ms-summary": "Table ID",
            "required": true,
            "type": "string",
            "description": "The identifier of the table for the report."
          },
          {
            "name": "skip",
            "in": "query",
            "x-ms-summary": "Skip",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of records to skip. You can set this value when paginating through a set of results."
          },
          {
            "name": "top",
            "in": "query",
            "x-ms-summary": "Top",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of records to return. You can override the default Quickbase pagination to get more or fewer results. If your requested value here exceeds the dynamic maximums, we will return a subset of results and the rest can be gathered in subsequent API calls."
          },
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to run a report.",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "reportId",
            "in": "path",
            "x-ms-summary": "Report ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The identifier of the report, unique to the table."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/runReportResponse"
            }
          }
        }
      }
    },
    "/fields": {
      "get": {
        "description": "Gets the properties for all fields in a specific table. The properties for each field are the same as in Get field.",
        "summary": "Get fields for a table",
        "tags": [
          "Fields"
        ],
        "operationId": "GetFields",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "x-ms-summary": "Table ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier (DBID) of the table."
          },
          {
            "name": "includeFieldPerms",
            "in": "query",
            "x-ms-summary": "Include Field Permissions",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "Set to 'true' if you'd like to get back the custom permissions for the field(s)."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The identifier.",
                    "title": "ID"
                  },
                  "label": {
                    "type": "string",
                    "description": "The label.",
                    "title": "Label"
                  },
                  "fieldType": {
                    "type": "string",
                    "description": "The field type.",
                    "title": "Field Type"
                  },
                  "noWrap": {
                    "type": "boolean",
                    "description": "Whether there is no wrap.",
                    "title": "No Wrap"
                  },
                  "bold": {
                    "type": "boolean",
                    "description": "Whether bold.",
                    "title": "Bold"
                  },
                  "required": {
                    "type": "boolean",
                    "description": "Whether required.",
                    "title": "Required"
                  },
                  "appearsByDefault": {
                    "type": "boolean",
                    "description": "Whether appears by default.",
                    "title": "Appears By Default"
                  },
                  "findEnabled": {
                    "type": "boolean",
                    "description": "Whether find is enabled.",
                    "title": "Find Enabled"
                  },
                  "unique": {
                    "type": "boolean",
                    "description": "Whether unique.",
                    "title": "Unique"
                  },
                  "doesDataCopy": {
                    "type": "boolean",
                    "description": "Whether does data copy.",
                    "title": "Does Data Copy"
                  },
                  "fieldHelp": {
                    "type": "string",
                    "description": "The field help.",
                    "title": "Field Help"
                  },
                  "audited": {
                    "type": "boolean",
                    "description": "Whether audited.",
                    "title": "Audited"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "primaryKey": {
                        "type": "boolean",
                        "description": "Whether the primary key.",
                        "title": "Primary Key"
                      },
                      "foreignKey": {
                        "type": "boolean",
                        "description": "Whether the foreign key.",
                        "title": "Foreign Key"
                      },
                      "numLines": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of lines.",
                        "title": "Num Lines"
                      },
                      "maxLength": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum length.",
                        "title": "Max Length"
                      },
                      "appendOnly": {
                        "type": "boolean",
                        "description": "Whether append only.",
                        "title": "Append Only"
                      },
                      "allowHTML": {
                        "type": "boolean",
                        "description": "Whether to allow HTML.",
                        "title": "allowHTML"
                      },
                      "sortAsGiven": {
                        "type": "boolean",
                        "description": "Whether sort as given.",
                        "title": "Sort As Given"
                      },
                      "carryChoices": {
                        "type": "boolean",
                        "description": "Whether to carry choices.",
                        "title": "Carry Choices"
                      },
                      "allowNewChoices": {
                        "type": "boolean",
                        "description": "Whether to allow new choices.",
                        "title": "Allow New Choices"
                      },
                      "formula": {
                        "type": "string",
                        "description": "The formula.",
                        "title": "Formula"
                      },
                      "defaultValue": {
                        "type": "string",
                        "description": "The default value.",
                        "title": "Default Value"
                      },
                      "numberFormat": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number format.",
                        "title": "Number Format"
                      },
                      "decimalPlaces": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The decimal places.",
                        "title": "Decimal Places"
                      },
                      "doesAverage": {
                        "type": "boolean",
                        "description": "Whether does average.",
                        "title": "Does Average"
                      },
                      "doesTotal": {
                        "type": "boolean",
                        "description": "Whether does total.",
                        "title": "Does Total"
                      },
                      "blankIsZero": {
                        "type": "boolean",
                        "description": "Whether blank is zero.",
                        "title": "Blank Is Zero"
                      }
                    },
                    "title": "Properties"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "permissionType": {
                          "type": "string",
                          "description": "The permission type.",
                          "title": "Permission Type"
                        },
                        "role": {
                          "type": "string",
                          "description": "The role.",
                          "title": "Role"
                        },
                        "roleId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The identifier of the role.",
                          "title": "Role ID"
                        }
                      }
                    },
                    "title": "Permissions"
                  },
                  "addToForms": {
                    "type": "boolean",
                    "description": "Whether to add to forms.",
                    "title": "Add To Forms"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes one or many fields in a table, based on field id. This will also permanently delete any data or calculations in that field.",
        "summary": "Delete fields",
        "tags": [
          "Fields"
        ],
        "operationId": "DeleteFields",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "x-ms-summary": "Table ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the table."
          },
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to delete fields in a table.",
            "schema": {
              "$ref": "#/definitions/generated9"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/deleteFieldsResponse"
            }
          }
        }
      },
      "post": {
        "description": "Creates a field within a table, including the custom permissions of that field.",
        "summary": "Create a field",
        "tags": [
          "Fields"
        ],
        "operationId": "CreateField",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "x-ms-summary": "Table ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the table."
          },
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to create a field in a table.",
            "schema": {
              "$ref": "#/definitions/generated8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/createFieldResponse"
            }
          }
        }
      }
    },
    "/fields/{fieldId}": {
      "get": {
        "description": "Gets the properties of an individual field, based on field id.  \nProperties present on all field types are returned at the top level. Properties unique to a specific type of field are returned under the 'properties' attribute. Please see [Field types page](../fieldInfo) for more details on the properties for each field type.",
        "summary": "Get field",
        "tags": [
          "Fields"
        ],
        "operationId": "GetField",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "x-ms-summary": "Table ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier (DBID) of the table."
          },
          {
            "name": "includeFieldPerms",
            "in": "query",
            "x-ms-summary": "Include Field Permissions",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "Set to 'true' if you'd like to get back the custom permissions for the field(s)."
          },
          {
            "name": "fieldId",
            "in": "path",
            "x-ms-summary": "Field ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier (FID) of the field."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/getFieldResponse"
            }
          }
        }
      },
      "post": {
        "description": "Updates the properties and custom permissions of a field. The attempt to update certain properties might cause existing data to no longer obey the field\u2019s new properties and may be rejected. See the descriptions of required, unique, and choices, below, for specific situations. Any properties of the field that you do not specify in the request body will remain unchanged.",
        "summary": "Update a field",
        "tags": [
          "Fields"
        ],
        "operationId": "UpdateField",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "x-ms-summary": "Table ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the table."
          },
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to update a field in a table.",
            "schema": {
              "$ref": "#/definitions/generated10"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "x-ms-summary": "Field ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier (FID) of the field."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/updateFieldResponse"
            }
          }
        }
      }
    },
    "/fields/usage": {
      "get": {
        "description": "Get all the field usage statistics for a table. This is a summary of the information that can be found in the usage table of field properties.",
        "summary": "Get usage for all fields",
        "tags": [
          "Fields"
        ],
        "operationId": "GetFieldsUsage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "x-ms-summary": "Table ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier (DBID) of the table."
          },
          {
            "name": "skip",
            "in": "query",
            "x-ms-summary": "Skip",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of fields to skip from the list."
          },
          {
            "name": "top",
            "in": "query",
            "x-ms-summary": "Top",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of fields to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The identifier.",
                        "title": "ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name.",
                        "title": "Name"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type.",
                        "title": "Type"
                      }
                    },
                    "title": "Field"
                  },
                  "usage": {
                    "type": "object",
                    "properties": {
                      "actions": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Actions"
                      },
                      "appHomePages": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "App Home Pages"
                      },
                      "defaultReports": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Default Reports"
                      },
                      "exactForms": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Exact Forms"
                      },
                      "fields": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Fields"
                      },
                      "forms": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Forms"
                      },
                      "notifications": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Notifications"
                      },
                      "personalReports": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Personal Reports"
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Relationships"
                      },
                      "reminders": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Reminders"
                      },
                      "reports": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Reports"
                      },
                      "roles": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Roles"
                      },
                      "webhooks": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Webhooks"
                      }
                    },
                    "title": "Usage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fields/usage/{fieldId}": {
      "get": {
        "description": "Get a single fields usage statistics. This is a summary of the information that can be found in the usage table of field properties.",
        "summary": "Get a field usage",
        "tags": [
          "Fields"
        ],
        "operationId": "GetFieldUsage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "x-ms-summary": "Table ID",
            "required": true,
            "type": "string",
            "description": "The unique identifier (DBID) of the table."
          },
          {
            "name": "fieldId",
            "in": "path",
            "x-ms-summary": "Field ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier (FID) of the field."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The identifier.",
                        "title": "ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name.",
                        "title": "Name"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type.",
                        "title": "Type"
                      }
                    },
                    "title": "Field"
                  },
                  "usage": {
                    "type": "object",
                    "properties": {
                      "actions": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Actions"
                      },
                      "appHomePages": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "App Home Pages"
                      },
                      "defaultReports": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Default Reports"
                      },
                      "exactForms": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Exact Forms"
                      },
                      "fields": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Fields"
                      },
                      "forms": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Forms"
                      },
                      "notifications": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Notifications"
                      },
                      "personalReports": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Personal Reports"
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Relationships"
                      },
                      "reminders": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Reminders"
                      },
                      "reports": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Reports"
                      },
                      "roles": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Roles"
                      },
                      "webhooks": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          }
                        },
                        "title": "Webhooks"
                      }
                    },
                    "title": "Usage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/formula/run": {
      "post": {
        "description": "Allows running a formula via an API call. Use this method in custom code to get the value back of a formula without a discrete field on a record.",
        "summary": "Run a formula",
        "tags": [
          "Formulas"
        ],
        "operationId": "RunFormula",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to run a formula.",
            "schema": {
              "$ref": "#/definitions/generated11"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/runFormulaResponse"
            }
          }
        }
      }
    },
    "/records": {
      "delete": {
        "description": "Deletes record(s) in a table based on a query. Alternatively, all records in the table can be deleted.",
        "summary": "Delete records",
        "tags": [
          "Records"
        ],
        "operationId": "DeleteRecords",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to delete records in a table.",
            "schema": {
              "$ref": "#/definitions/generated13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete records response.",
            "schema": {
              "$ref": "#/definitions/deleteRecordsResponse"
            }
          }
        }
      },
      "post": {
        "description": "Insert and/or update record(s) in a table. In this single API call, inserts and updates can be submitted. Update can use the key field on the table, or any other supported unique field. Refer to the [Field types page](../fieldInfo) for more information about how each field type should be formatted. This operation allows for incremental processing of successful records, even when some of the records fail.  \n**Note:** This endpoint supports a maximum payload size of 10MB.",
        "summary": "Insert andor update records",
        "tags": [
          "Records"
        ],
        "operationId": "UpsertRecords",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to insert/update records in a table.",
            "schema": {
              "$ref": "#/definitions/generated12"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/upsertResponse"
            }
          },
          "207": {
            "description": "Multi-status.",
            "schema": {
              "$ref": "#/definitions/upsertResponse1"
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "$ref": "#/definitions/upsertException1"
            }
          }
        }
      }
    },
    "/records/query": {
      "post": {
        "description": "Pass in a query in the [Quickbase query language](https://help.quickbase.com/api-guide/componentsquery.html). Returns record data with [intelligent pagination](../pagination) based on the approximate size of each record. The metadata object will include the necessary information to iterate over the response and gather more data.",
        "summary": "Query for data",
        "tags": [
          "Records"
        ],
        "operationId": "RunQuery",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to run a query.",
            "schema": {
              "$ref": "#/definitions/generated14"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/runQueryResponse"
            }
          }
        }
      }
    },
    "/auth/temporary/{dbid}": {
      "get": {
        "description": "Use this endpoint to get a temporary authorization token, scoped to either an app or a table. You can then use this token to make other API calls (see [authorization](../auth)).  This token expires in 5 minutes.",
        "summary": "Get a temporary token for a DBID",
        "tags": [
          "Auth"
        ],
        "operationId": "GetTempTokenDBID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "QB-App-Token",
            "in": "header",
            "x-ms-summary": "App Token",
            "x-ms-url-encoding": "single",
            "required": false,
            "type": "string",
            "description": "Your Quickbase app token"
          },
          {
            "name": "dbid",
            "in": "path",
            "x-ms-summary": "DBID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier of an app or table."
          }
        ],
        "responses": {
          "200": {
            "description": "This token is used in the authorization header value (similar to the QB-USER-TOKEN), except it uses the QB-TEMP-TOKEN prefix header['Authorization'] = 'QB-TEMP-TOKEN {token}'",
            "schema": {
              "$ref": "#/definitions/getTempTokenDBIDResponse"
            }
          }
        }
      }
    },
    "/usertoken/clone": {
      "post": {
        "description": "Clones the authenticated user token. All applications associated with that token are automatically associated with the new token.",
        "summary": "Clone a user token",
        "tags": [
          "UserToken"
        ],
        "operationId": "CloneUserToken",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generated",
            "in": "body",
            "required": false,
            "description": "The properties needed to clone token.",
            "schema": {
              "$ref": "#/definitions/generated15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/cloneUserTokenResponse"
            }
          }
        }
      }
    },
    "/usertoken/deactivate": {
      "post": {
        "description": "Deactivates the authenticated user token. Once this is done, the user token must be reactivated in the user interface.",
        "summary": "Deactivate a user token",
        "tags": [
          "UserToken"
        ],
        "operationId": "DeactivateUserToken",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "id"
                }
              }
            }
          }
        }
      }
    },
    "/usertoken": {
      "delete": {
        "description": "Deletes the authenticated user token. This is not reversible.",
        "summary": "Delete a user token",
        "tags": [
          "UserToken"
        ],
        "operationId": "DeleteUserToken",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/deleteUserTokenResponse"
            }
          }
        }
      }
    },
    "/files/{tableId}/{recordId}/{fieldId}/{versionNumber}": {
      "get": {
        "description": "Downloads the file attachment, with the file attachment content encoded in base64 format. The API response returns the file name in the `Content-Disposition` header. Meta-data about files can be retrieved from the /records and /reports endpoints, where applicable. Use those endpoints to get the necessary information to fetch files.",
        "summary": "Download an attachment",
        "tags": [
          "Files"
        ],
        "operationId": "DownloadFile",
        "deprecated": false,
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "x-ms-summary": "Table ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the table."
          },
          {
            "name": "recordId",
            "in": "path",
            "x-ms-summary": "Record ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier of the record."
          },
          {
            "name": "fieldId",
            "in": "path",
            "x-ms-summary": "Field ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier of the field."
          },
          {
            "name": "versionNumber",
            "in": "path",
            "x-ms-summary": "Version Number",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The file attachment version number."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes one file attachment version. Meta-data about files can be retrieved from the /records and /reports endpoints, where applicable. Use those endpoints to get the necessary information to delete file versions.",
        "summary": "Delete an attachment",
        "tags": [
          "Files"
        ],
        "operationId": "DeleteFile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "x-ms-summary": "Table ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the table."
          },
          {
            "name": "recordId",
            "in": "path",
            "x-ms-summary": "Record ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier of the record."
          },
          {
            "name": "fieldId",
            "in": "path",
            "x-ms-summary": "Field ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier of the field."
          },
          {
            "name": "versionNumber",
            "in": "path",
            "x-ms-summary": "Version Number",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The file attachment version number."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Deleted the File Attachment",
            "schema": {
              "$ref": "#/definitions/deleteFileResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "generated": {
      "title": "Generated",
      "description": "The example below shows all the properties that can be set with this request. Additional properties that you can see, with the corresponding GET request, cannot be set through this API. See individual property descriptions below for details on how to set or change each.",
      "type": "object",
      "properties": {
        "assignToken": {
          "description": "Set to true if you would like to assign the app to the user token you used to create the application. The default is false.",
          "example": false,
          "type": "boolean"
        },
        "variables": {
          "description": "The app variables. See [About Application Variables](https://help.quickbase.com/user-assistance/variables.html)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "name": {
          "description": "The app name. You are allowed to create multiple apps with the same name, in the same realm, because they will have different dbid values. We urge you to be careful about doing this.",
          "type": "string"
        },
        "description": {
          "description": "The description for the app. If this property is left out, the app description will be blank.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Variable": {
      "title": "Variable",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name for the variable.",
          "type": "string"
        },
        "value": {
          "description": "The value for the variable.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "createAppResponse": {
      "title": "Create App Response",
      "type": "object",
      "properties": {
        "name": {
          "description": "The app name. You are allowed to create multiple apps with the same name, in the same realm, because they will have different dbid values. We urge you to be careful about doing this.",
          "type": "string"
        },
        "description": {
          "description": "The description for the app. If this property is left out, the app description will be blank.",
          "type": "string"
        },
        "created": {
          "description": "The time and date the app was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "updated": {
          "description": "The time and date the app was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "dateFormat": {
          "description": "A description of the format used when displaying date values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the API Guide for how time values are returned in API calls. See [About Localizing Dates](https://help.quickbase.com/user-assistance/about_localizing_dates_numbers.html) to set the app\u2019s date format.",
          "type": "string"
        },
        "timeZone": {
          "description": "A description of the time zone used when displaying time values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the portal for how time values are returned in API calls. See [Set the Time Zone for Both the Application and the Account](https://help.quickbase.com/user-assistance/application_local_timezone.html) to set the application\u2019s time zone.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this application.",
          "type": "string"
        },
        "hasEveryoneOnTheInternet": {
          "description": "Indicates whether app includes Everyone On The Internet access. See [Sharing apps with Everyone on the Internet (EOTI).](https://help.quickbase.com/user-assistance/share_with_everyone_on_internet.html)",
          "type": "boolean"
        },
        "variables": {
          "description": "The app variables. See [About Application Variables](https://help.quickbase.com/user-assistance/variables.html)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable1"
          }
        },
        "dataClassification": {
          "description": "The Data Classification label assigned to the application. If Data Classification is not turned on, this will not be returned. If Data Classification is turned on, but application is not labeled, we return \u201cNone\".  Data Classification labels can be added in the Admin Console by a Realm Administrator for Platform+ plans.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Variable1": {
      "title": "Variable1",
      "type": "object",
      "properties": {
        "name": {
          "description": "Variable name.",
          "type": "string"
        },
        "value": {
          "description": "Variable value.",
          "type": "string"
        }
      }
    },
    "getAppResponse": {
      "title": "Get App Response",
      "type": "object",
      "properties": {
        "name": {
          "description": "The app name. You are allowed to create multiple apps with the same name, in the same realm, because they will have different dbid values. We urge you to be careful about doing this.",
          "type": "string"
        },
        "description": {
          "description": "The description for the app. If this property is left out, the app description will be blank.",
          "type": "string"
        },
        "created": {
          "description": "The time and date the app was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "updated": {
          "description": "The time and date the app was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "dateFormat": {
          "description": "A description of the format used when displaying date values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the API Guide for how time values are returned in API calls. See [About Localizing Dates](https://help.quickbase.com/user-assistance/about_localizing_dates_numbers.html) to set the app\u2019s date format.",
          "type": "string"
        },
        "timeZone": {
          "description": "A description of the time zone used when displaying time values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the portal for how time values are returned in API calls. See [Set the Time Zone for Both the Application and the Account](https://help.quickbase.com/user-assistance/application_local_timezone.html) to set the application\u2019s time zone.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this application.",
          "type": "string"
        },
        "hasEveryoneOnTheInternet": {
          "description": "Indicates whether app includes Everyone On The Internet access. See [Sharing apps with Everyone on the Internet (EOTI).](https://help.quickbase.com/user-assistance/share_with_everyone_on_internet.html)",
          "type": "boolean"
        },
        "variables": {
          "description": "The app variables. See [About Application Variables](https://help.quickbase.com/user-assistance/variables.html)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable1"
          }
        },
        "dataClassification": {
          "description": "The Data Classification label assigned to the application. If Data Classification is not turned on, this will not be returned. If Data Classification is turned on, but application is not labeled, we return \u201cNone\".  Data Classification labels can be added in the Admin Console by a Realm Administrator for Platform+ plans.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "generated1": {
      "title": "generated1",
      "description": "The example below shows all the properties that can be changed with this request. Additional properties that you can see with the corresponding GET request cannot be set through this API. See individual property descriptions below for details on how to set or change each.",
      "example": {
        "value": {
          "name": "My App",
          "description": "My first app",
          "variables": [
            {
              "name": "Variable1",
              "value": "Value1"
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "variables": {
          "description": "The app variables. See [About Application Variables](https://help.quickbase.com/user-assistance/variables.html)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "name": {
          "description": "The name for the app.",
          "type": "string"
        },
        "description": {
          "description": "The description for the app.",
          "type": "string"
        }
      }
    },
    "updateAppResponse": {
      "title": "Update App Response",
      "type": "object",
      "properties": {
        "name": {
          "description": "The app name. You are allowed to create multiple apps with the same name, in the same realm, because they will have different dbid values. We urge you to be careful about doing this.",
          "type": "string"
        },
        "description": {
          "description": "The description for the app. If this property is left out, the app description will be blank.",
          "type": "string"
        },
        "created": {
          "description": "The time and date the app was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "updated": {
          "description": "The time and date the app was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "dateFormat": {
          "description": "A description of the format used when displaying date values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the API Guide for how time values are returned in API calls. See [About Localizing Dates](https://help.quickbase.com/user-assistance/about_localizing_dates_numbers.html) to set the app\u2019s date format.",
          "type": "string"
        },
        "timeZone": {
          "description": "A description of the time zone used when displaying time values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the portal for how time values are returned in API calls. See [Set the Time Zone for Both the Application and the Account](https://help.quickbase.com/user-assistance/application_local_timezone.html) to set the application\u2019s time zone.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this application.",
          "type": "string"
        },
        "hasEveryoneOnTheInternet": {
          "description": "Indicates whether app includes Everyone On The Internet access. See [Sharing apps with Everyone on the Internet (EOTI).](https://help.quickbase.com/user-assistance/share_with_everyone_on_internet.html)",
          "type": "boolean"
        },
        "variables": {
          "description": "The app variables. See [About Application Variables](https://help.quickbase.com/user-assistance/variables.html)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable1"
          }
        },
        "dataClassification": {
          "description": "The Data Classification label assigned to the application. If Data Classification is not turned on, this will not be returned. If Data Classification is turned on, but application is not labeled, we return \u201cNone\".  Data Classification labels can be added in the Admin Console by a Realm Administrator for Platform+ plans.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "generated2": {
      "title": "generated2",
      "example": {
        "name": "Name of an application to delete"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "To confirm application deletion we ask for application name.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "deleteAppResponse": {
      "title": "Delete App Response",
      "example": {
        "deletedAppId": "bqhskthaq"
      },
      "type": "object",
      "properties": {
        "deletedAppId": {
          "description": "An ID of deleted application.",
          "type": "string"
        }
      }
    },
    "getAppEventsResponse": {
      "title": "Get App Events Response",
      "type": "object",
      "properties": {
        "isActive": {
          "description": "Indication of whether current event is active.",
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "name": {
          "description": "The name of the event. This property is not returned for automations.",
          "type": "string"
        },
        "url": {
          "description": "The url to automation that can be accessed from the browser. Only returned for automations.",
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Owner"
        },
        "tableId": {
          "description": "The unique identifier of the table to which event belongs to.",
          "type": "string"
        }
      }
    },
    "Type": {
      "title": "Type",
      "description": "Type of an event.",
      "example": "webhook",
      "type": "string",
      "enum": [
        "webhook",
        "qb-action",
        "email-notification",
        "subscription",
        "reminder",
        "automation"
      ]
    },
    "Owner": {
      "title": "Owner",
      "description": "The user that owns the event.",
      "type": "object",
      "properties": {
        "name": {
          "description": "User full name.",
          "type": "string"
        },
        "id": {
          "description": "User Id.",
          "type": "string"
        },
        "email": {
          "description": "User email.",
          "type": "string"
        },
        "userName": {
          "description": "User Name as updated in user properties. Optional, appears if not the same as user email.",
          "type": "string"
        }
      }
    },
    "generated3": {
      "title": "generated3",
      "example": {
        "name": "my copied app",
        "description": "copied from my original app",
        "properties": {
          "keepData": false,
          "excludeFiles": true,
          "usersAndRoles": false,
          "assignUserToken": true
        }
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the newly copied app",
          "type": "string"
        },
        "description": {
          "description": "The description of the newly copied app",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/Properties"
        }
      },
      "required": [
        "name"
      ]
    },
    "Properties": {
      "title": "Properties",
      "description": "The configuration properties for performing the app copy",
      "type": "object",
      "properties": {
        "assignUserToken": {
          "description": "Whether to add the user token used to make this request to the new app",
          "type": "boolean"
        },
        "excludeFiles": {
          "description": "If keepData is true, whether to copy the file attachments as well. If keepData is false, this property is ignored",
          "type": "boolean"
        },
        "keepData": {
          "description": "Whether to copy the app's data along with the schema",
          "type": "boolean"
        },
        "usersAndRoles": {
          "description": "If true, users will be copied along with their assigned roles. If false, users and roles will be copied but roles will not be assigned",
          "type": "boolean"
        }
      }
    },
    "copyAppResponse": {
      "title": "Copy App Response",
      "example": {
        "ancestorId": "bqhskthaq",
        "created": "2020-03-27T18:34:12.000Z",
        "dateFormat": "MM-DD-YYYY",
        "description": "My testing app",
        "hasEveryoneOnTheInternet": true,
        "id": "bpqe82s1",
        "name": "Testing App",
        "timeZone": "(UTC-08:00) Pacific Time (US & Canada)",
        "updated": "2020-04-03T19:12:20.000Z",
        "dataClassification": "None"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The app name. You are allowed to create multiple apps with the same name, in the same realm, because they will have different dbid values. We urge you to be careful about doing this.",
          "type": "string"
        },
        "description": {
          "description": "The description for the app",
          "type": "string"
        },
        "created": {
          "description": "The time and date the app was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "updated": {
          "description": "The time and date the app was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "dateFormat": {
          "description": "A description of the format used when displaying date values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the API Guide for how time values are returned in API calls. See [About Localizing Dates](https://help.quickbase.com/user-assistance/about_localizing_dates_numbers.html) to set the app\u2019s date format.",
          "type": "string"
        },
        "timeZone": {
          "description": "A description of the time zone used when displaying time values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the portal for how time values are returned in API calls. See [Set the Time Zone for Both the Application and the Account](https://help.quickbase.com/user-assistance/application_local_timezone.html) to set the application\u2019s time zone.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this application.",
          "type": "string"
        },
        "hasEveryoneOnTheInternet": {
          "description": "Indicates whether app includes Everyone On The Internet access. See [Sharing apps with Everyone on the Internet (EOTI).](https://help.quickbase.com/user-assistance/share_with_everyone_on_internet.html)",
          "type": "boolean"
        },
        "variables": {
          "description": "The app variables. See [About Application Variables](https://help.quickbase.com/user-assistance/variables.html)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable1"
          }
        },
        "ancestorId": {
          "description": "The id of the app from which this app was copied",
          "type": "string"
        },
        "dataClassification": {
          "description": "The Data Classification label assigned to the application. If Data Classification is not turned on, this will not be returned. If Data Classification is turned on, but application is not labeled, we return \u201cNone\".  Data Classification labels can be added in the Admin Console by a Realm Administrator for Platform+ plans.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "generated4": {
      "title": "generated4",
      "description": "The example below shows all the properties that can be changed with this request. Additional properties that you can see with the corresponding GET request cannot be set through this API.",
      "example": {
        "name": "My table",
        "description": "my first table",
        "singleRecordName": "record",
        "pluralRecordName": "records"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name for the table.",
          "type": "string",
          "minLength": 1
        },
        "pluralRecordName": {
          "description": "The plural noun for records in the table. If this value is not passed the default value is 'Records'.",
          "type": "string"
        },
        "singleRecordName": {
          "description": "The singular noun for records in the table. If this value is not passed the default value is 'Record'.",
          "type": "string"
        },
        "description": {
          "description": "The description for the table. If this value is not passed the default value is blank.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "createTableResponse": {
      "title": "Create Table Response",
      "example": {
        "name": "Example Table",
        "created": "2020-03-27T18:34:40.000Z",
        "updated": "2020-04-03T19:12:40.000Z",
        "alias": "_dbid_example_table",
        "description": "Table as an example.",
        "id": "bpqe82s0",
        "nextRecordId": 1,
        "nextFieldId": 1,
        "defaultSortFieldId": 2,
        "defaultSortOrder": "ASC",
        "keyFieldId": 3,
        "singleRecordName": "Example Record",
        "pluralRecordName": "Example Records",
        "sizeLimit": "150 MB",
        "spaceUsed": "17 MB",
        "spaceRemaining": "133 MB"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the table.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier (dbid) of the table.",
          "type": "string"
        },
        "alias": {
          "description": "The automatically-created table alias for the table.",
          "type": "string"
        },
        "description": {
          "description": "The description of the table, as configured by an application administrator.",
          "type": "string"
        },
        "created": {
          "description": "The time and date when the table was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "updated": {
          "description": "The time and date when the table schema or data was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "nextRecordId": {
          "description": "The incremental Record ID that will be used when the next record is created, as determined when the API call was ran.",
          "type": "integer",
          "format": "int32"
        },
        "nextFieldId": {
          "description": "The incremental Field ID that will be used when the next field is created, as determined when the API call was ran.",
          "type": "integer",
          "format": "int32"
        },
        "defaultSortFieldId": {
          "description": "The id of the field that is configured for default sorting.",
          "type": "integer",
          "format": "int32"
        },
        "defaultSortOrder": {
          "$ref": "#/definitions/DefaultSortOrder"
        },
        "keyFieldId": {
          "description": "The id of the field that is configured to be the key on this table, which is usually the Quickbase Record ID.",
          "type": "integer",
          "format": "int32"
        },
        "singleRecordName": {
          "description": "The builder-configured singular noun of the table.",
          "type": "string"
        },
        "pluralRecordName": {
          "description": "The builder-configured plural noun of the table.",
          "type": "string"
        },
        "sizeLimit": {
          "description": "The size limit for the table.",
          "type": "string"
        },
        "spaceUsed": {
          "description": "The amount of space currently being used by the table.",
          "type": "string"
        },
        "spaceRemaining": {
          "description": "The amount of space remaining for use by the table.",
          "type": "string"
        }
      }
    },
    "DefaultSortOrder": {
      "title": "DefaultSortOrder",
      "description": "The configuration of the default sort order on the table.",
      "example": "ASC",
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ]
    },
    "getAppTablesResponse": {
      "title": "Get App Tables Response",
      "example": {
        "name": "Example Table",
        "created": "2020-03-27T18:34:40.000Z",
        "updated": "2020-04-03T19:12:40.000Z",
        "alias": "_dbid_example_table",
        "description": "Table as an example.",
        "id": "bpqe82s0",
        "nextRecordId": 1,
        "nextFieldId": 1,
        "defaultSortFieldId": 2,
        "defaultSortOrder": "ASC",
        "keyFieldId": 3,
        "singleRecordName": "Example Record",
        "pluralRecordName": "Example Records",
        "sizeLimit": "150 MB",
        "spaceUsed": "17 MB",
        "spaceRemaining": "133 MB"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the table.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier (dbid) of the table.",
          "type": "string"
        },
        "alias": {
          "description": "The automatically-created table alias for the table.",
          "type": "string"
        },
        "description": {
          "description": "The description of the table, as configured by an application administrator.",
          "type": "string"
        },
        "created": {
          "description": "The time and date when the table was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "updated": {
          "description": "The time and date when the table schema or data was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "nextRecordId": {
          "description": "The incremental Record ID that will be used when the next record is created, as determined when the API call was ran.",
          "type": "integer",
          "format": "int32"
        },
        "nextFieldId": {
          "description": "The incremental Field ID that will be used when the next field is created, as determined when the API call was ran.",
          "type": "integer",
          "format": "int32"
        },
        "defaultSortFieldId": {
          "description": "The id of the field that is configured for default sorting.",
          "type": "integer",
          "format": "int32"
        },
        "defaultSortOrder": {
          "$ref": "#/definitions/DefaultSortOrder"
        },
        "keyFieldId": {
          "description": "The id of the field that is configured to be the key on this table, which is usually the Quickbase Record ID.",
          "type": "integer",
          "format": "int32"
        },
        "singleRecordName": {
          "description": "The builder-configured singular noun of the table.",
          "type": "string"
        },
        "pluralRecordName": {
          "description": "The builder-configured plural noun of the table.",
          "type": "string"
        },
        "sizeLimit": {
          "description": "The size limit for the table.",
          "type": "string"
        },
        "spaceUsed": {
          "description": "The amount of space currently being used by the table.",
          "type": "string"
        },
        "spaceRemaining": {
          "description": "The amount of space remaining for use by the table.",
          "type": "string"
        }
      }
    },
    "getTableResponse": {
      "title": "Get Table Response",
      "example": {
        "name": "Example Table",
        "created": "2020-03-27T18:34:40.000Z",
        "updated": "2020-04-03T19:12:40.000Z",
        "alias": "_dbid_example_table",
        "description": "Table as an example.",
        "id": "bpqe82s0",
        "nextRecordId": 1,
        "nextFieldId": 1,
        "defaultSortFieldId": 2,
        "defaultSortOrder": "ASC",
        "keyFieldId": 3,
        "singleRecordName": "Example Record",
        "pluralRecordName": "Example Records",
        "sizeLimit": "150 MB",
        "spaceUsed": "17 MB",
        "spaceRemaining": "133 MB"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the table.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier (dbid) of the table.",
          "type": "string"
        },
        "alias": {
          "description": "The automatically-created table alias for the table.",
          "type": "string"
        },
        "description": {
          "description": "The description of the table, as configured by an application administrator.",
          "type": "string"
        },
        "created": {
          "description": "The time and date when the table was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "updated": {
          "description": "The time and date when the table schema or data was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "nextRecordId": {
          "description": "The incremental Record ID that will be used when the next record is created, as determined when the API call was ran.",
          "type": "integer",
          "format": "int32"
        },
        "nextFieldId": {
          "description": "The incremental Field ID that will be used when the next field is created, as determined when the API call was ran.",
          "type": "integer",
          "format": "int32"
        },
        "defaultSortFieldId": {
          "description": "The id of the field that is configured for default sorting.",
          "type": "integer",
          "format": "int32"
        },
        "defaultSortOrder": {
          "$ref": "#/definitions/DefaultSortOrder"
        },
        "keyFieldId": {
          "description": "The id of the field that is configured to be the key on this table, which is usually the Quickbase Record ID.",
          "type": "integer",
          "format": "int32"
        },
        "singleRecordName": {
          "description": "The builder-configured singular noun of the table.",
          "type": "string"
        },
        "pluralRecordName": {
          "description": "The builder-configured plural noun of the table.",
          "type": "string"
        },
        "sizeLimit": {
          "description": "The size limit for the table.",
          "type": "string"
        },
        "spaceUsed": {
          "description": "The amount of space currently being used by the table.",
          "type": "string"
        },
        "spaceRemaining": {
          "description": "The amount of space remaining for use by the table.",
          "type": "string"
        }
      }
    },
    "generated5": {
      "title": "generated5",
      "description": "The example below shows all the properties that can be changed with this request. Additional properties that you can see with the corresponding GET request cannot be set through this API.",
      "example": {
        "name": "My table",
        "description": "my first table",
        "singleRecordName": "record",
        "pluralRecordName": "records"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name for the table.",
          "type": "string"
        },
        "pluralRecordName": {
          "description": "The plural noun for records in the table. If this value is not passed the default value is 'Records'.",
          "type": "string"
        },
        "singleRecordName": {
          "description": "The singular noun for records in the table. If this value is not passed the default value is 'Record'.",
          "type": "string"
        },
        "description": {
          "description": "The description for the table. If this value is not passed the default value is blank.",
          "type": "string"
        }
      }
    },
    "updateTableResponse": {
      "title": "Update Table Response",
      "example": {
        "name": "Example Table",
        "created": "2020-03-27T18:34:40.000Z",
        "updated": "2020-04-03T19:12:40.000Z",
        "alias": "_dbid_example_table",
        "description": "Table as an example.",
        "id": "bpqe82s0",
        "nextRecordId": 1,
        "nextFieldId": 1,
        "defaultSortFieldId": 2,
        "defaultSortOrder": "ASC",
        "keyFieldId": 3,
        "singleRecordName": "Example Record",
        "pluralRecordName": "Example Records",
        "sizeLimit": "150 MB",
        "spaceUsed": "17 MB",
        "spaceRemaining": "133 MB"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the table.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier (dbid) of the table.",
          "type": "string"
        },
        "alias": {
          "description": "The automatically-created table alias for the table.",
          "type": "string"
        },
        "description": {
          "description": "The description of the table, as configured by an application administrator.",
          "type": "string"
        },
        "created": {
          "description": "The time and date when the table was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "updated": {
          "description": "The time and date when the table schema or data was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "nextRecordId": {
          "description": "The incremental Record ID that will be used when the next record is created, as determined when the API call was ran.",
          "type": "integer",
          "format": "int32"
        },
        "nextFieldId": {
          "description": "The incremental Field ID that will be used when the next field is created, as determined when the API call was ran.",
          "type": "integer",
          "format": "int32"
        },
        "defaultSortFieldId": {
          "description": "The id of the field that is configured for default sorting.",
          "type": "integer",
          "format": "int32"
        },
        "defaultSortOrder": {
          "$ref": "#/definitions/DefaultSortOrder"
        },
        "keyFieldId": {
          "description": "The id of the field that is configured to be the key on this table, which is usually the Quickbase Record ID.",
          "type": "integer",
          "format": "int32"
        },
        "singleRecordName": {
          "description": "The builder-configured singular noun of the table.",
          "type": "string"
        },
        "pluralRecordName": {
          "description": "The builder-configured plural noun of the table.",
          "type": "string"
        },
        "sizeLimit": {
          "description": "The size limit for the table.",
          "type": "string"
        },
        "spaceUsed": {
          "description": "The amount of space currently being used by the table.",
          "type": "string"
        },
        "spaceRemaining": {
          "description": "The amount of space remaining for use by the table.",
          "type": "string"
        }
      }
    },
    "deleteTableResponse": {
      "title": "Delete Table Response",
      "example": {
        "deletedTableId": "bck7gp3q2"
      },
      "type": "object",
      "properties": {
        "deletedTableId": {
          "description": "The deleted table id.",
          "type": "string"
        }
      }
    },
    "getRelationshipsResponse": {
      "title": "Get Relationships Response",
      "example": {
        "metadata": {
          "numRelationships": 1,
          "skip": 0,
          "totalRelationships": 1
        },
        "relationships": [
          {
            "childTableId": "bqqjnwsuy",
            "foreignKeyField": {
              "id": 6,
              "label": "Related record",
              "type": "numeric"
            },
            "id": 6,
            "isCrossApp": false,
            "lookupFields": [
              {
                "id": 3,
                "label": "Name",
                "type": "text"
              }
            ],
            "parentTableId": "bck7gp3q2",
            "summaryFields": [
              {
                "id": 8,
                "label": "my summary field",
                "type": "numeric"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "relationships": {
          "description": "The relationships in a table.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Relationship"
          }
        },
        "metadata": {
          "$ref": "#/definitions/Metadata"
        }
      },
      "required": [
        "relationships"
      ]
    },
    "Relationship": {
      "title": "Relationship",
      "example": {
        "id": 6,
        "foreignKeyField": {
          "id": 6,
          "label": "Related record",
          "type": "numeric"
        },
        "lookupFields": [
          {
            "id": 7,
            "label": "record - text field",
            "type": "text"
          }
        ],
        "isCrossApp": false,
        "parentTableId": "bck7gp3q2",
        "childTableId": "bck7gp3q3",
        "summaryFields": [
          {
            "id": 8,
            "label": "Summary of Record ID#2",
            "type": "numeric"
          }
        ]
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The relationship id (foreign key field id).",
          "type": "integer",
          "format": "int32"
        },
        "parentTableId": {
          "description": "The parent table id of the relationship.",
          "type": "string"
        },
        "childTableId": {
          "description": "The child table id of the relationship.",
          "type": "string"
        },
        "foreignKeyField": {
          "$ref": "#/definitions/ForeignKeyField"
        },
        "isCrossApp": {
          "description": "Whether this is a cross-app relationship.",
          "type": "boolean"
        },
        "lookupFields": {
          "description": "The lookup fields array.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LookupField"
          }
        },
        "summaryFields": {
          "description": "The summary fields array.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SummaryField"
          }
        }
      },
      "required": [
        "id",
        "parentTableId",
        "childTableId",
        "isCrossApp"
      ]
    },
    "ForeignKeyField": {
      "title": "ForeignKeyField",
      "description": "The foreign key field information.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Field id.",
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "Field label.",
          "type": "string"
        },
        "type": {
          "description": "Field type.",
          "type": "string"
        }
      }
    },
    "LookupField": {
      "title": "LookupField",
      "type": "object",
      "properties": {
        "id": {
          "description": "Field id.",
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "Field label.",
          "type": "string"
        },
        "type": {
          "description": "Field type.",
          "type": "string"
        }
      }
    },
    "SummaryField": {
      "title": "SummaryField",
      "type": "object",
      "properties": {
        "id": {
          "description": "Field id.",
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "Field label.",
          "type": "string"
        },
        "type": {
          "description": "Field type.",
          "type": "string"
        }
      }
    },
    "Metadata": {
      "title": "Metadata",
      "description": "Additional information about the results that may be helpful.",
      "type": "object",
      "properties": {
        "skip": {
          "description": "The number of relationships to skip.",
          "type": "integer",
          "format": "int32"
        },
        "totalRelationships": {
          "description": "The total number of relationships.",
          "type": "integer",
          "format": "int32"
        },
        "numRelationships": {
          "description": "The number of relationships in the current response object.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "generated6": {
      "title": "generated6",
      "example": {
        "parentTableId": "bck7gp3q2",
        "foreignKeyField": {
          "label": "my relationship field"
        },
        "lookupFieldIds": [
          1,
          2,
          3
        ],
        "summaryFields": [
          {
            "summaryFid": 3,
            "label": "my first summary field",
            "accumulationType": "AVG",
            "where": "{'3'.EX.1}"
          },
          {
            "summaryFid": 4,
            "label": "my second summary field",
            "accumulationType": "SUM"
          }
        ]
      },
      "type": "object",
      "properties": {
        "summaryFields": {
          "description": "Array of summary field objects which will turn into summary fields in the parent table. When you specify the 'COUNT' accumulation type, you have to specify 0 as the summaryFid (or not set it in the request). 'DISTINCT-COUNT' requires that summaryFid be set to an actual fid.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SummaryField1"
          }
        },
        "lookupFieldIds": {
          "description": "Array of field ids in the parent table that will become lookup fields in the child table.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "parentTableId": {
          "description": "The parent table id for the relationship.",
          "type": "string"
        },
        "foreignKeyField": {
          "$ref": "#/definitions/ForeignKeyField1"
        }
      },
      "required": [
        "parentTableId"
      ]
    },
    "SummaryField1": {
      "title": "SummaryField1",
      "type": "object",
      "properties": {
        "summaryFid": {
          "description": "The field id to summarize.",
          "type": "number",
          "format": "double"
        },
        "label": {
          "description": "The label for the summary field.",
          "type": "string"
        },
        "accumulationType": {
          "$ref": "#/definitions/AccumulationType"
        },
        "where": {
          "description": "The filter, using the Quickbase query language, which determines the records to return.",
          "type": "string"
        }
      },
      "required": [
        "accumulationType"
      ]
    },
    "AccumulationType": {
      "title": "AccumulationType",
      "description": "The accumulation type for the summary field.",
      "example": "AVG",
      "type": "string",
      "enum": [
        "AVG",
        "SUM",
        "MAX",
        "MIN",
        "STD-DEV",
        "COUNT",
        "COMBINED-TEXT",
        "DISTINCT-COUNT"
      ]
    },
    "ForeignKeyField1": {
      "title": "ForeignKeyField1",
      "description": "This property is optional.  If it is not provided, the foreign key field will be created with the label \u2018Related <record>\u2019, where <record> is the name of a record in the parent table.",
      "type": "object",
      "properties": {
        "label": {
          "description": "The label for the foreign key field.",
          "type": "string"
        }
      }
    },
    "createRelationshipResponse": {
      "title": "Create Relationship Response",
      "example": {
        "id": 6,
        "foreignKeyField": {
          "id": 6,
          "label": "Related record",
          "type": "numeric"
        },
        "lookupFields": [
          {
            "id": 7,
            "label": "record - text field",
            "type": "text"
          }
        ],
        "isCrossApp": false,
        "parentTableId": "bck7gp3q2",
        "childTableId": "bck7gp3q3",
        "summaryFields": [
          {
            "id": 8,
            "label": "Summary of Record ID#2",
            "type": "numeric"
          }
        ]
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The relationship id (foreign key field id).",
          "type": "integer",
          "format": "int32"
        },
        "parentTableId": {
          "description": "The parent table id of the relationship.",
          "type": "string"
        },
        "childTableId": {
          "description": "The child table id of the relationship.",
          "type": "string"
        },
        "foreignKeyField": {
          "$ref": "#/definitions/ForeignKeyField"
        },
        "isCrossApp": {
          "description": "Whether this is a cross-app relationship.",
          "type": "boolean"
        },
        "lookupFields": {
          "description": "The lookup fields array.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LookupField"
          }
        },
        "summaryFields": {
          "description": "The summary fields array.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SummaryField"
          }
        }
      },
      "required": [
        "id",
        "parentTableId",
        "childTableId",
        "isCrossApp"
      ]
    },
    "generated7": {
      "title": "generated7",
      "example": {
        "lookupFieldIds": [
          4,
          5,
          6
        ],
        "summaryFields": [
          {
            "summaryFid": 3,
            "label": "my summary field",
            "accumulationType": "COUNT",
            "where": "{'3'.EX.1}"
          }
        ]
      },
      "type": "object",
      "properties": {
        "summaryFields": {
          "description": "An array of objects, each representing a configuration of one field from the child table, that will become summary fields on the parent table. When you specify the 'COUNT' accumulation type, you have to specify 0 as the summaryFid (or not set it in the request). 'DISTINCT-COUNT' requires that summaryFid be set to an actual fid.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SummaryField1"
          }
        },
        "lookupFieldIds": {
          "description": "An array of field ids on the parent table that will become lookup fields on the child table.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "updateRelationshipResponse": {
      "title": "Update Relationship Response",
      "example": {
        "id": 6,
        "foreignKeyField": {
          "id": 6,
          "label": "Related record",
          "type": "numeric"
        },
        "lookupFields": [
          {
            "id": 7,
            "label": "record - text field",
            "type": "text"
          }
        ],
        "isCrossApp": false,
        "parentTableId": "bck7gp3q2",
        "childTableId": "bck7gp3q3",
        "summaryFields": [
          {
            "id": 8,
            "label": "Summary of Record ID#2",
            "type": "numeric"
          }
        ]
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The relationship id (foreign key field id).",
          "type": "integer",
          "format": "int32"
        },
        "parentTableId": {
          "description": "The parent table id of the relationship.",
          "type": "string"
        },
        "childTableId": {
          "description": "The child table id of the relationship.",
          "type": "string"
        },
        "foreignKeyField": {
          "$ref": "#/definitions/ForeignKeyField"
        },
        "isCrossApp": {
          "description": "Whether this is a cross-app relationship.",
          "type": "boolean"
        },
        "lookupFields": {
          "description": "The lookup fields array.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LookupField"
          }
        },
        "summaryFields": {
          "description": "The summary fields array.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SummaryField"
          }
        }
      },
      "required": [
        "id",
        "parentTableId",
        "childTableId",
        "isCrossApp"
      ]
    },
    "deleteRelationshipResponse": {
      "title": "Delete Relationship Response",
      "example": {
        "relationshipId": 6
      },
      "type": "object",
      "properties": {
        "relationshipId": {
          "description": "The relationship id.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "relationshipId"
      ]
    },
    "getTableReportsResponse": {
      "title": "Get Table Reports Response",
      "example": {
        "value": {
          "id": "5",
          "name": "table-report",
          "type": "table",
          "description": "This is Table report.",
          "query": {
            "tableId": "bpweef42b",
            "filter": "{6.CT.'FilterByThisValue'}",
            "formulaFields": [
              {
                "id": -100,
                "label": "NumericField",
                "fieldType": "numeric",
                "formula": "1+1",
                "decimalPrecision": 4
              }
            ],
            "fields": [
              7
            ],
            "sortBy": [
              {
                "fieldId": 28,
                "order": "ASC"
              },
              {
                "fieldId": 3,
                "order": "ASC"
              }
            ],
            "groupBy": [
              {
                "fieldId": 3,
                "grouping": "equal-values"
              }
            ]
          },
          "properties": {
            "displayOnlyNewOrChangedRecords": true,
            "columnProperties": [
              {
                "fieldId": -100,
                "labelOverride": "Numeric Field Label"
              }
            ]
          },
          "usedLast": "2020-09-20T20:23:00.000Z",
          "usedCount": 7
        }
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the report, unique to the table.",
          "type": "string"
        },
        "name": {
          "description": "The configured name of the report.",
          "type": "string"
        },
        "type": {
          "description": "The type of report in Quickbase (e.g., chart).",
          "type": "string"
        },
        "description": {
          "description": "The configured description of a report.",
          "type": "string"
        },
        "ownerId": {
          "description": "Optional, showed only for personal reports. The user ID of report owner.",
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "properties": {
          "description": "A list of properties specific to the report type. To see a detailed description of the properties for each report type, See [Report Types.](../reportTypes)",
          "type": "object"
        },
        "usedLast": {
          "description": "The instant at which a report was last used.",
          "type": "string"
        },
        "usedCount": {
          "description": "The number of times a report has been used.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Query": {
      "title": "Query",
      "description": "The query definition as configured in Quickbase that gets executed when the report is run.",
      "type": "object",
      "properties": {
        "tableId": {
          "description": "The table identifier for the report.",
          "type": "string"
        },
        "filter": {
          "description": "Filter used to query for data.",
          "type": "string"
        },
        "formulaFields": {
          "description": "Calculated formula fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormulaField"
          }
        }
      }
    },
    "FormulaField": {
      "title": "FormulaField",
      "type": "object",
      "properties": {
        "id": {
          "description": "Formula field identifier.",
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "Formula field label.",
          "type": "string"
        },
        "fieldType": {
          "$ref": "#/definitions/FieldType"
        },
        "formula": {
          "description": "Formula text.",
          "type": "string"
        },
        "decimalPrecision": {
          "description": "For numeric formula the number precision.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FieldType": {
      "title": "FieldType",
      "description": "Resulting formula value type.",
      "example": "rich-text",
      "type": "string",
      "enum": [
        "rich-text",
        "text",
        "numeric",
        "currency",
        "percent",
        "rating",
        "date",
        "timestamp",
        "timeofday",
        "duration",
        "checkbox",
        "phone",
        "email",
        "user",
        "multiuser",
        "url"
      ]
    },
    "getReportResponse": {
      "title": "Get Report Response",
      "example": {
        "value": {
          "id": "5",
          "name": "table-report",
          "type": "table",
          "description": "This is Table report.",
          "query": {
            "tableId": "bpweef42b",
            "filter": "{6.CT.'FilterByThisValue'}",
            "formulaFields": [
              {
                "id": -100,
                "label": "NumericField",
                "fieldType": "numeric",
                "formula": "1+1",
                "decimalPrecision": 4
              }
            ],
            "fields": [
              7
            ],
            "sortBy": [
              {
                "fieldId": 28,
                "order": "ASC"
              },
              {
                "fieldId": 3,
                "order": "ASC"
              }
            ],
            "groupBy": [
              {
                "fieldId": 3,
                "grouping": "equal-values"
              }
            ]
          },
          "properties": {
            "displayOnlyNewOrChangedRecords": true,
            "columnProperties": [
              {
                "fieldId": -100,
                "labelOverride": "Numeric Field Label"
              }
            ]
          },
          "usedLast": "2020-09-20T20:23:00.000Z",
          "usedCount": 7
        }
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the report, unique to the table.",
          "type": "string"
        },
        "name": {
          "description": "The configured name of the report.",
          "type": "string"
        },
        "type": {
          "description": "The type of report in Quickbase (e.g., chart).",
          "type": "string"
        },
        "description": {
          "description": "The configured description of a report.",
          "type": "string"
        },
        "ownerId": {
          "description": "Optional, showed only for personal reports. The user ID of report owner.",
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "properties": {
          "description": "A list of properties specific to the report type. To see a detailed description of the properties for each report type, See [Report Types.](../reportTypes)",
          "type": "object"
        },
        "usedLast": {
          "description": "The instant at which a report was last used.",
          "type": "string"
        },
        "usedCount": {
          "description": "The number of times a report has been used.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "runReportResponse": {
      "title": "Run Report Response",
      "example": {
        "value": {
          "data": [
            {
              "6": {
                "value": "Jamie Stein"
              },
              "7": {
                "value": 10
              },
              "8": {
                "value": "2019-12-18T08:00:00.000Z"
              }
            }
          ],
          "fields": [
            {
              "id": 6,
              "label": "Full Name",
              "type": "text"
            },
            {
              "id": 7,
              "label": "Amount",
              "labelOverride": "Total Amount",
              "type": "numeric"
            },
            {
              "id": 8,
              "label": "Date time",
              "type": "date time"
            }
          ],
          "metadata": {
            "totalRecords": 10,
            "numRecords": 1,
            "numFields": 3,
            "skip": 0,
            "top": 1
          }
        }
      },
      "type": "object",
      "properties": {
        "fields": {
          "description": "An array of objects that contains limited meta-data of each field displayed in the report. This assists in building logic that depends on field types and IDs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        },
        "data": {
          "description": "An array of objects that either represents the record data or summarized values, depending on the report type.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "metadata": {
          "$ref": "#/definitions/Metadata1"
        }
      }
    },
    "Field": {
      "title": "Field",
      "type": "object",
      "properties": {
        "id": {
          "description": "Field id.",
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "Field label.",
          "type": "string"
        },
        "type": {
          "description": "Field type.",
          "type": "string"
        },
        "labelOverride": {
          "description": "Column heading label override for field in report.",
          "type": "string"
        }
      }
    },
    "Metadata1": {
      "title": "Metadata1",
      "description": "Additional information about the results that may be helpful. Pagination may be needed if either you specify a smaller number of results to skip than is available, or if the API automatically returns fewer results. numRecords can be compared to totalRecords to determine if further pagination is needed.",
      "type": "object",
      "properties": {
        "skip": {
          "description": "The number of records to skip",
          "type": "integer",
          "format": "int32"
        },
        "numFields": {
          "description": "The number of fields in each record in the current response object",
          "type": "integer",
          "format": "int32"
        },
        "top": {
          "description": "If present, the maximum number of records requested by the caller",
          "type": "integer",
          "format": "int32"
        },
        "totalRecords": {
          "description": "The total number of records in the result set",
          "type": "integer",
          "format": "int32"
        },
        "numRecords": {
          "description": "The number of records in the current response object",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "numFields",
        "totalRecords",
        "numRecords"
      ]
    },
    "getFieldsResponse": {
      "title": "Get Fields Response",
      "example": {
        "id": 123,
        "label": "Field1",
        "fieldType": "text",
        "mode": "string",
        "noWrap": false,
        "bold": false,
        "required": false,
        "appearsByDefault": false,
        "findEnabled": false,
        "unique": false,
        "doesDataCopy": false,
        "fieldHelp": "field help",
        "audited": false,
        "properties": {
          "primaryKey": false,
          "foreignKey": false,
          "numLines": 1,
          "maxLength": 0,
          "appendOnly": false,
          "allowHTML": false,
          "sortAsGiven": false,
          "carryChoices": true,
          "allowNewChoices": false,
          "formula": "formula",
          "defaultValue": "default"
        },
        "permissions": [
          {
            "permissionType": "View",
            "role": "Viewer",
            "roleId": 10
          },
          {
            "permissionType": "None",
            "role": "Participant",
            "roleId": 11
          },
          {
            "permissionType": "Modify",
            "role": "Administrator",
            "roleId": 12
          }
        ]
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the field, unique to this table.",
          "type": "integer",
          "format": "int64"
        },
        "fieldType": {
          "description": "The type of field, as described [here](https://help.quickbase.com/user-assistance/field_types.html).",
          "type": "string"
        },
        "mode": {
          "description": "For derived fields, this will be 'lookup', 'summary', or 'formula', to indicate the type of derived field.  For non-derived fields, this will be blank.",
          "type": "string"
        },
        "label": {
          "description": "The label (name) of the field.",
          "type": "string"
        },
        "noWrap": {
          "description": "Indicates if the field is configured to not wrap when displayed in the product.",
          "type": "boolean"
        },
        "bold": {
          "description": "Indicates if the field is configured to display in bold in the product.",
          "type": "boolean"
        },
        "required": {
          "description": "Indicates if the field is marked required.",
          "type": "boolean"
        },
        "appearsByDefault": {
          "description": "Indicates if the field is marked as a default in reports.",
          "type": "boolean"
        },
        "findEnabled": {
          "description": "Indicates if the field is marked as searchable.",
          "type": "boolean"
        },
        "unique": {
          "description": "Indicates if the field is marked unique.",
          "type": "boolean"
        },
        "doesDataCopy": {
          "description": "Indicates if the field data will copy when a user copies the record.",
          "type": "boolean"
        },
        "fieldHelp": {
          "description": "The configured help text shown to users within the product.",
          "type": "string"
        },
        "audited": {
          "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs.",
          "type": "boolean"
        },
        "properties": {
          "$ref": "#/definitions/Properties1"
        },
        "permissions": {
          "description": "Field Permissions for different roles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "Properties1": {
      "title": "Properties1",
      "description": "Additional properties for the field. Please see [Field type details](../fieldInfo) page for more details on the properties for each field type.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "The comments entered on the field properties by an administrator.",
          "type": "string"
        },
        "doesTotal": {
          "description": "Whether this field totals in reports within the product.",
          "type": "boolean"
        },
        "autoSave": {
          "description": "Whether the link field will auto save.",
          "type": "boolean"
        },
        "defaultValueLuid": {
          "description": "Default user id value.",
          "type": "integer",
          "format": "int32"
        },
        "maxVersions": {
          "description": "The maximum number of versions configured for a file attachment.",
          "type": "integer",
          "format": "int32"
        },
        "carryChoices": {
          "description": "Whether the field should carry its multiple choice fields when copied.",
          "type": "boolean"
        },
        "format": {
          "description": "The format to display time.",
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "description": "The maximum number of characters allowed for entry in Quickbase for this field.",
          "type": "integer",
          "format": "int32"
        },
        "linkText": {
          "description": "The configured text value that replaces the URL that users see within the product.",
          "type": "string"
        },
        "parentFieldId": {
          "description": "The id of the parent composite field, when applicable.",
          "type": "integer",
          "format": "int32"
        },
        "displayTimezone": {
          "description": "Indicates whether to display the timezone within the product.",
          "type": "boolean"
        },
        "summaryTargetFieldId": {
          "description": "The id of the field that is used to aggregate values from the child, when applicable. This displays 0 if the summary function doesn\u2019t require a field selection (like count).",
          "type": "integer",
          "format": "int32"
        },
        "allowNewChoices": {
          "description": "Indicates if users can add new choices to a selection list.",
          "type": "boolean"
        },
        "masterChoiceFieldId": {
          "description": "The id of the field that is the reference in the relationship.",
          "type": "integer",
          "format": "int32"
        },
        "defaultToday": {
          "description": "Indicates if the field value is defaulted today for new records.",
          "type": "boolean"
        },
        "units": {
          "description": "The units label.",
          "type": "string"
        },
        "lookupTargetFieldId": {
          "description": "The id of the field that is the target on the master table for this lookup.",
          "type": "integer",
          "format": "int32"
        },
        "summaryFunction": {
          "$ref": "#/definitions/SummaryFunction"
        },
        "sourceFieldId": {
          "description": "The id of the source field.",
          "type": "integer",
          "format": "int32"
        },
        "masterTableTag": {
          "description": "The table alias for the master table in the relationship this field is part of.",
          "type": "string"
        },
        "doesAverage": {
          "description": "Whether this field averages in reports within the product.",
          "type": "boolean"
        },
        "formula": {
          "description": "The formula of the field as configured in Quickbase.",
          "type": "string"
        },
        "decimalPlaces": {
          "description": "The number of decimal places displayed in the product for this field.",
          "type": "integer",
          "format": "int32"
        },
        "seeVersions": {
          "description": "Indicates if the user can see other versions, aside from the most recent, of a file attachment within the product.",
          "type": "boolean"
        },
        "displayMonth": {
          "description": "How to display months.",
          "type": "string"
        },
        "numLines": {
          "description": "The number of lines shown in Quickbase for this text field.",
          "type": "integer",
          "format": "int32"
        },
        "displayEmail": {
          "description": "How the email is displayed.",
          "type": "string"
        },
        "defaultKind": {
          "description": "The user default type.",
          "type": "string"
        },
        "coverText": {
          "description": "An alternate user friendly text that can be used to display a link in the browser.",
          "type": "string"
        },
        "currencySymbol": {
          "description": "The current symbol used when displaying field values within the product.",
          "type": "string"
        },
        "masterChoiceTableId": {
          "description": "The id of the table that is the master in this relationship.",
          "type": "integer",
          "format": "int64"
        },
        "targetFieldId": {
          "description": "The id of the target field.",
          "type": "integer",
          "format": "int32"
        },
        "displayUser": {
          "description": "The configured option for how users display within the product.",
          "type": "string"
        },
        "blankIsZero": {
          "description": "Whether a blank value is treated the same as 0 in calculations within the product.",
          "type": "boolean"
        },
        "exact": {
          "description": "Whether an exact match is required for a report link.",
          "type": "boolean"
        },
        "startField": {
          "description": "The start field id.",
          "type": "integer",
          "format": "int32"
        },
        "defaultDomain": {
          "description": "Default email domain.",
          "type": "string"
        },
        "defaultValue": {
          "description": "The default value configured for a field when a new record is added.",
          "type": "string"
        },
        "choicesLuid": {
          "description": "List of user choices.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "abbreviate": {
          "description": "Don't show the URL protocol when showing the URL.",
          "type": "boolean"
        },
        "xmlTag": {
          "description": "The field's xml tag.",
          "type": "string"
        },
        "targetTableName": {
          "description": "The field's target table name.",
          "type": "string"
        },
        "numberFormat": {
          "description": "The format used for displaying numeric values in the product (decimal, separators, digit group).",
          "type": "integer",
          "format": "int32"
        },
        "appearsAs": {
          "description": "The link text, if empty, the url will be used as link text.",
          "type": "string"
        },
        "width": {
          "description": "The field's html input width in the product.",
          "type": "integer",
          "format": "int32"
        },
        "currencyFormat": {
          "$ref": "#/definitions/CurrencyFormat"
        },
        "displayImages": {
          "description": "Indicates whether images will display for file attachments on forms and reports within the product.",
          "type": "boolean"
        },
        "foreignKey": {
          "description": "Indicates if the field is a foreign key (or reference field) in a relationship.",
          "type": "boolean"
        },
        "displayDayOfWeek": {
          "description": "Indicates whether to display the day of the week within the product.",
          "type": "boolean"
        },
        "summaryReferenceFieldId": {
          "description": "The id of the field that is the reference in the relationship for this summary.",
          "type": "integer",
          "format": "int64"
        },
        "commaStart": {
          "description": "The number of digits before commas display in the product, when applicable.",
          "type": "integer",
          "format": "int32"
        },
        "choices": {
          "description": "An array of entries that exist for a field that offers choices to the user.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetTableId": {
          "description": "The id of the target table.",
          "type": "string"
        },
        "displayRelative": {
          "description": "Whether to display time as relative.",
          "type": "boolean"
        },
        "compositeFields": {
          "description": "An array of the fields that make up a composite field (e.g., address).",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "versionMode": {
          "$ref": "#/definitions/VersionMode"
        },
        "displayTime": {
          "description": "Indicates whether to display the time, in addition to the date.",
          "type": "boolean"
        },
        "durationField": {
          "description": "The duration field id.",
          "type": "integer",
          "format": "int32"
        },
        "snapFieldId": {
          "description": "The id of the field that is used to snapshot values from, when applicable.",
          "type": "integer",
          "format": "int32"
        },
        "hours24": {
          "description": "Indicates whether or not to display time in the 24-hour format within the product.",
          "type": "boolean"
        },
        "sortAlpha": {
          "description": "Whether to sort alphabetically, default sort is by record ID.",
          "type": "boolean"
        },
        "sortAsGiven": {
          "description": "Indicates if the listed entries sort as entered vs alphabetically.",
          "type": "boolean"
        },
        "hasExtension": {
          "description": "Whether this field has a phone extension.",
          "type": "boolean"
        },
        "workWeek": {
          "description": "The work week type.",
          "type": "integer",
          "format": "int32"
        },
        "useNewWindow": {
          "description": "Indicates if the URL should open a new window when a user clicks it within the product.",
          "type": "boolean"
        },
        "appendOnly": {
          "description": "Whether this field is append only.",
          "type": "boolean"
        },
        "displayAsLink": {
          "description": "Indicates if a field that is part of the relationship should be shown as a hyperlink to the parent record within the product.",
          "type": "boolean"
        },
        "allowHTML": {
          "description": "Whether this field allows html.",
          "type": "boolean"
        },
        "lookupReferenceFieldId": {
          "description": "The id of the field that is the reference in the relationship for this lookup.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SummaryFunction": {
      "title": "SummaryFunction",
      "description": "The summary accumulation function type.",
      "example": "AVG",
      "type": "string",
      "enum": [
        "AVG",
        "SUM",
        "MAX",
        "MIN",
        "STD-DEV",
        "COUNT",
        "COMBINED-TEXT",
        "DISTINCT-COUNT"
      ]
    },
    "CurrencyFormat": {
      "title": "CurrencyFormat",
      "description": "The currency format used when displaying field values within the product.",
      "example": "left",
      "type": "string",
      "enum": [
        "left",
        "right",
        "middle"
      ]
    },
    "VersionMode": {
      "title": "VersionMode",
      "description": "Version modes for files. Keep all versions vs keep last version.",
      "example": "keepallversions",
      "type": "string",
      "enum": [
        "keepallversions",
        "keeplastversions"
      ]
    },
    "Permission": {
      "title": "Permission",
      "type": "object",
      "properties": {
        "role": {
          "description": "The role associated with a given permission for the field",
          "type": "string"
        },
        "permissionType": {
          "description": "The permission given to the role for this field",
          "type": "string"
        },
        "roleId": {
          "description": "The Id of the given role",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "generated8": {
      "title": "generated8",
      "description": "The example below shows all the properties that can be changed with this request. Additional properties that you can see with the corresponding GET request cannot be set through this API.",
      "example": {
        "label": "Field1",
        "fieldType": "text",
        "noWrap": false,
        "bold": false,
        "appearsByDefault": false,
        "findEnabled": false,
        "fieldHelp": "field help",
        "addToForms": true,
        "properties": {
          "maxLength": 0,
          "appendOnly": false,
          "sortAsGiven": false
        },
        "permissions": [
          {
            "role": "Viewer",
            "permissionType": "View",
            "roleId": 10
          },
          {
            "role": "Participant",
            "permissionType": "None",
            "roleId": 11
          },
          {
            "role": "Administrator",
            "permissionType": "Modify",
            "roleId": 12
          }
        ]
      },
      "type": "object",
      "properties": {
        "audited": {
          "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs. You can only set this property to \"true\" if the app has audit logs enabled. See Enable data change logs under [Quickbase Audit Logs](https://help.quickbase.com/user-assistance/audit_logs.html).",
          "type": "boolean"
        },
        "fieldHelp": {
          "description": "The configured help text shown to users within the product.",
          "type": "string"
        },
        "bold": {
          "description": "Indicates if the field is configured to display in bold in the product.",
          "type": "boolean"
        },
        "properties": {
          "$ref": "#/definitions/Properties2"
        },
        "appearsByDefault": {
          "description": "Indicates if the field is marked as a default in reports.",
          "type": "boolean"
        },
        "fieldType": {
          "$ref": "#/definitions/FieldType2"
        },
        "permissions": {
          "description": "Field Permissions for different roles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        },
        "addToForms": {
          "description": "Whether the field you are adding should appear on forms.",
          "type": "boolean"
        },
        "label": {
          "description": "The label (name) of the field.",
          "type": "string"
        },
        "findEnabled": {
          "description": "Indicates if the field is marked as searchable.",
          "type": "boolean"
        },
        "noWrap": {
          "description": "Indicates if the field is configured to not wrap when displayed in the product.",
          "type": "boolean"
        }
      },
      "required": [
        "fieldType",
        "label"
      ]
    },
    "Properties2": {
      "title": "Properties2",
      "description": "Specific field properties.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "The comments entered on the field properties by an administrator.",
          "type": "string"
        },
        "doesTotal": {
          "description": "Whether this field totals in reports within the product.",
          "type": "boolean"
        },
        "autoSave": {
          "description": "Whether the link field will auto save.",
          "type": "boolean"
        },
        "defaultValueLuid": {
          "description": "Default user id value.",
          "type": "integer",
          "format": "int32"
        },
        "maxVersions": {
          "description": "The maximum number of versions configured for a file attachment.",
          "type": "integer",
          "minimum": 1,
          "format": "int32"
        },
        "format": {
          "description": "The format to display time.",
          "type": "integer",
          "format": "int32"
        },
        "carryChoices": {
          "description": "Whether the field should carry its multiple choice fields when copied.",
          "type": "boolean"
        },
        "maxLength": {
          "description": "The maximum number of characters allowed for entry in Quickbase for this field.",
          "type": "integer",
          "format": "int32"
        },
        "linkText": {
          "description": "The configured text value that replaces the URL that users see within the product.",
          "type": "string"
        },
        "parentFieldId": {
          "description": "The id of the parent composite field, when applicable.",
          "type": "integer",
          "format": "int32"
        },
        "displayTimezone": {
          "description": "Indicates whether to display the timezone within the product.",
          "type": "boolean"
        },
        "allowNewChoices": {
          "description": "Indicates if users can add new choices to a selection list.",
          "type": "boolean"
        },
        "defaultToday": {
          "description": "Indicates if the field value is defaulted today for new records.",
          "type": "boolean"
        },
        "units": {
          "description": "The units label.",
          "type": "string"
        },
        "sourceFieldId": {
          "description": "The id of the source field.",
          "type": "integer",
          "format": "int32"
        },
        "doesAverage": {
          "description": "Whether this field averages in reports within the product.",
          "type": "boolean"
        },
        "formula": {
          "description": "The formula of the field as configured in Quickbase.",
          "type": "string"
        },
        "decimalPlaces": {
          "description": "The number of decimal places displayed in the product for this field.",
          "type": "integer",
          "format": "int32"
        },
        "displayMonth": {
          "description": "How to display months.",
          "type": "string"
        },
        "seeVersions": {
          "description": "Indicates if the user can see other versions, aside from the most recent, of a file attachment within the product.",
          "type": "boolean"
        },
        "numLines": {
          "description": "The number of lines shown in Quickbase for this text field.",
          "type": "integer",
          "format": "int32"
        },
        "defaultKind": {
          "description": "The user default type.",
          "type": "string"
        },
        "displayEmail": {
          "description": "How the email is displayed.",
          "type": "string"
        },
        "coverText": {
          "description": "An alternate user friendly text that can be used to display a link in the browser.",
          "type": "string"
        },
        "currencySymbol": {
          "description": "The current symbol used when displaying field values within the product.",
          "type": "string"
        },
        "targetFieldId": {
          "description": "The id of the target field.",
          "type": "integer",
          "format": "int32"
        },
        "displayUser": {
          "description": "The configured option for how users display within the product.",
          "type": "string"
        },
        "blankIsZero": {
          "description": "Whether a blank value is treated the same as 0 in calculations within the product.",
          "type": "boolean"
        },
        "exact": {
          "description": "Whether an exact match is required for a report link.",
          "type": "boolean"
        },
        "defaultDomain": {
          "description": "Default email domain.",
          "type": "string"
        },
        "defaultValue": {
          "description": "The default value configured for a field when a new record is added.",
          "type": "string"
        },
        "abbreviate": {
          "description": "Don't show the URL protocol when showing the URL.",
          "type": "boolean"
        },
        "numberFormat": {
          "description": "The format used for displaying numeric values in the product (decimal, separators, digit group).",
          "type": "integer",
          "format": "int32"
        },
        "targetTableName": {
          "description": "The field's target table name.",
          "type": "string"
        },
        "appearsAs": {
          "description": "The link text, if empty, the url will be used as link text.",
          "type": "string"
        },
        "width": {
          "description": "The field's html input width in the product.",
          "type": "integer",
          "format": "int32"
        },
        "currencyFormat": {
          "$ref": "#/definitions/CurrencyFormat"
        },
        "displayImages": {
          "description": "Indicates whether images will display for file attachments on forms and reports within the product.",
          "type": "boolean"
        },
        "displayDayOfWeek": {
          "description": "Indicates whether to display the day of the week within the product.",
          "type": "boolean"
        },
        "commaStart": {
          "description": "The number of digits before commas display in the product, when applicable.",
          "type": "integer",
          "format": "int32"
        },
        "choices": {
          "description": "An array of entries that exist for a field that offers choices to the user. Note that these choices refer to the valid values of any records added in the future. You are allowed to remove values from the list of choices even if there are existing records with those values in this field. They will be displayed in red when users look at the data in the browser but there is no other effect. While updating a field with this property, the old choices are removed and replaced by the new choices.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetTableId": {
          "description": "The id of the target table.",
          "type": "string"
        },
        "displayRelative": {
          "description": "Whether to display time as relative.",
          "type": "boolean"
        },
        "compositeFields": {
          "description": "An array of the fields that make up a composite field (e.g., address).",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "displayTime": {
          "description": "Indicates whether to display the time, in addition to the date.",
          "type": "boolean"
        },
        "versionMode": {
          "$ref": "#/definitions/VersionMode"
        },
        "snapFieldId": {
          "description": "The id of the field that is used to snapshot values from, when applicable.",
          "type": "integer",
          "format": "int32"
        },
        "hours24": {
          "description": "Indicates whether or not to display time in the 24-hour format within the product.",
          "type": "boolean"
        },
        "sortAlpha": {
          "description": "Whether to sort alphabetically, default sort is by record ID.",
          "type": "boolean"
        },
        "sortAsGiven": {
          "description": "Indicates if the listed entries sort as entered vs alphabetically.",
          "type": "boolean"
        },
        "hasExtension": {
          "description": "Whether this field has a phone extension.",
          "type": "boolean"
        },
        "useNewWindow": {
          "description": "Indicates if the URL should open a new window when a user clicks it within the product.",
          "type": "boolean"
        },
        "appendOnly": {
          "description": "Whether this field is append only.",
          "type": "boolean"
        },
        "displayAsLink": {
          "description": "Indicates if a field that is part of the relationship should be shown as a hyperlink to the parent record within the product.",
          "type": "boolean"
        }
      }
    },
    "FieldType2": {
      "title": "FieldType2",
      "description": "The [field types](https://help.quickbase.com/user-assistance/field_types.html), click on any of the field type links for more info.",
      "example": "text",
      "type": "string",
      "enum": [
        "text",
        "text-multiple-choice",
        "text-multi-line",
        "rich-text",
        "numeric",
        "currency",
        "rating",
        "percent",
        "multitext",
        "email",
        "url",
        "duration",
        "date",
        "datetime",
        "timestamp",
        "timeofday",
        "checkbox",
        "user",
        "multiuser",
        "address",
        "phone",
        "file"
      ]
    },
    "createFieldResponse": {
      "title": "Create Field Response",
      "example": {
        "id": 123,
        "label": "Field1",
        "fieldType": "text",
        "mode": "string",
        "noWrap": false,
        "bold": false,
        "required": false,
        "appearsByDefault": false,
        "findEnabled": false,
        "unique": false,
        "doesDataCopy": false,
        "fieldHelp": "field help",
        "audited": false,
        "properties": {
          "primaryKey": false,
          "foreignKey": false,
          "numLines": 1,
          "maxLength": 0,
          "appendOnly": false,
          "allowHTML": false,
          "sortAsGiven": false,
          "carryChoices": true,
          "allowNewChoices": false,
          "formula": "string",
          "defaultValue": "string"
        },
        "permissions": [
          {
            "permissionType": "View",
            "role": "Viewer",
            "roleId": 10
          },
          {
            "permissionType": "None",
            "role": "Participant",
            "roleId": 11
          },
          {
            "permissionType": "Modify",
            "role": "Administrator",
            "roleId": 12
          }
        ]
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the field, unique to this table.",
          "type": "integer",
          "format": "int64"
        },
        "fieldType": {
          "description": "The type of field, as described [here](https://help.quickbase.com/user-assistance/field_types.html).",
          "type": "string"
        },
        "mode": {
          "description": "For derived fields, this will be 'lookup', 'summary', or 'formula', to indicate the type of derived field.  For non-derived fields, this will be blank.",
          "type": "string"
        },
        "label": {
          "description": "The label (name) of the field.",
          "type": "string"
        },
        "noWrap": {
          "description": "Indicates if the field is configured to not wrap when displayed in the product.",
          "type": "boolean"
        },
        "bold": {
          "description": "Indicates if the field is configured to display in bold in the product.",
          "type": "boolean"
        },
        "required": {
          "description": "Indicates if the field is marked required.",
          "type": "boolean"
        },
        "appearsByDefault": {
          "description": "Indicates if the field is marked as a default in reports.",
          "type": "boolean"
        },
        "findEnabled": {
          "description": "Indicates if the field is marked as searchable.",
          "type": "boolean"
        },
        "unique": {
          "description": "Indicates if the field is marked unique.",
          "type": "boolean"
        },
        "doesDataCopy": {
          "description": "Indicates if the field data will copy when a user copies the record.",
          "type": "boolean"
        },
        "fieldHelp": {
          "description": "The configured help text shown to users within the product.",
          "type": "string"
        },
        "audited": {
          "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs.",
          "type": "boolean"
        },
        "properties": {
          "$ref": "#/definitions/Properties1"
        },
        "permissions": {
          "description": "Field Permissions for different roles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "generated9": {
      "title": "generated9",
      "example": {
        "fieldIds": [
          6,
          7,
          8
        ]
      },
      "type": "object",
      "properties": {
        "fieldIds": {
          "description": "List of field ids to be deleted.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "fieldIds"
      ]
    },
    "deleteFieldsResponse": {
      "title": "Delete Fields Response",
      "example": {
        "deletedFieldIds": [
          6,
          8
        ],
        "errors": [
          "Error found with fid: 7"
        ]
      },
      "type": "object",
      "properties": {
        "deletedFieldIds": {
          "description": "List of field ids to were deleted.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "errors": {
          "description": "List of errors found.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "deletedFieldIds",
        "errors"
      ]
    },
    "getFieldResponse": {
      "title": "Get Field Response",
      "example": {
        "id": 123,
        "label": "Field1",
        "fieldType": "text",
        "mode": "string",
        "noWrap": false,
        "bold": false,
        "required": false,
        "appearsByDefault": false,
        "findEnabled": false,
        "unique": false,
        "doesDataCopy": false,
        "fieldHelp": "field help",
        "audited": false,
        "properties": {
          "primaryKey": false,
          "foreignKey": false,
          "numLines": 1,
          "maxLength": 0,
          "appendOnly": false,
          "allowHTML": false,
          "sortAsGiven": false,
          "carryChoices": true,
          "allowNewChoices": false,
          "formula": "string",
          "defaultValue": "string"
        },
        "permissions": [
          {
            "permissionType": "View",
            "role": "Viewer",
            "roleId": 10
          },
          {
            "permissionType": "None",
            "role": "Participant",
            "roleId": 11
          },
          {
            "permissionType": "Modify",
            "role": "Administrator",
            "roleId": 12
          }
        ]
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the field, unique to this table.",
          "type": "integer",
          "format": "int64"
        },
        "fieldType": {
          "description": "The type of field, as described [here](https://help.quickbase.com/user-assistance/field_types.html).",
          "type": "string"
        },
        "mode": {
          "description": "For derived fields, this will be 'lookup', 'summary', or 'formula', to indicate the type of derived field.  For non-derived fields, this will be blank.",
          "type": "string"
        },
        "label": {
          "description": "The label (name) of the field.",
          "type": "string"
        },
        "noWrap": {
          "description": "Indicates if the field is configured to not wrap when displayed in the product.",
          "type": "boolean"
        },
        "bold": {
          "description": "Indicates if the field is configured to display in bold in the product.",
          "type": "boolean"
        },
        "required": {
          "description": "Indicates if the field is marked required.",
          "type": "boolean"
        },
        "appearsByDefault": {
          "description": "Indicates if the field is marked as a default in reports.",
          "type": "boolean"
        },
        "findEnabled": {
          "description": "Indicates if the field is marked as searchable.",
          "type": "boolean"
        },
        "unique": {
          "description": "Indicates if the field is marked unique.",
          "type": "boolean"
        },
        "doesDataCopy": {
          "description": "Indicates if the field data will copy when a user copies the record.",
          "type": "boolean"
        },
        "fieldHelp": {
          "description": "The configured help text shown to users within the product.",
          "type": "string"
        },
        "audited": {
          "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs.",
          "type": "boolean"
        },
        "properties": {
          "$ref": "#/definitions/Properties1"
        },
        "permissions": {
          "description": "Field Permissions for different roles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "generated10": {
      "title": "generated10",
      "description": "The example below shows all the properties that can be changed with this request. Additional properties that you can see with the corresponding GET request cannot be set through this API.",
      "example": {
        "label": "Field1",
        "noWrap": false,
        "bold": false,
        "required": true,
        "appearsByDefault": false,
        "findEnabled": false,
        "unique": true,
        "fieldHelp": "field help",
        "addToForms": true,
        "properties": {
          "numLines": 1,
          "maxLength": 0,
          "appendOnly": false,
          "sortAsGiven": false
        },
        "permissions": [
          {
            "role": "Viewer",
            "permissionType": "View",
            "roleId": 10
          },
          {
            "role": "Participant",
            "permissionType": "None",
            "roleId": 11
          },
          {
            "role": "Administrator",
            "permissionType": "Modify",
            "roleId": 12
          }
        ]
      },
      "type": "object",
      "properties": {
        "audited": {
          "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs. You can only set this property to \"true\" if the app has audit logs enabled. See Enable data change logs under [Quickbase Audit Logs](https://help.quickbase.com/user-assistance/audit_logs.html).",
          "type": "boolean"
        },
        "fieldHelp": {
          "description": "The configured help text shown to users within the product.",
          "type": "string"
        },
        "bold": {
          "description": "Indicates if the field is configured to display in bold in the product.",
          "type": "boolean"
        },
        "required": {
          "description": "Indicates if the field is required (i.e. if every record must have a non-null value in this field). If you attempt to change a field from not-required to required, and the table currently contains records that have null values in that field, you will get an error indicating that there are null values of the field. In this case you need to find and update those records with null values of the field before changing the field to required.",
          "type": "boolean"
        },
        "properties": {
          "$ref": "#/definitions/Properties5"
        },
        "appearsByDefault": {
          "description": "Indicates if the field is marked as a default in reports.",
          "type": "boolean"
        },
        "unique": {
          "description": "Indicates if every record in the table must contain a unique value of this field. If you attempt to change a field from not-unique to unique, and the table currently contains records with the same value of this field, you will get an error. In this case you need to find and update those records with duplicate values of the field before changing the field to unique.",
          "type": "boolean"
        },
        "permissions": {
          "description": "Field Permissions for different roles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        },
        "addToForms": {
          "description": "Whether the field you are adding should appear on forms.",
          "type": "boolean"
        },
        "label": {
          "description": "The label (name) of the field.",
          "type": "string"
        },
        "findEnabled": {
          "description": "Indicates if the field is marked as searchable.",
          "type": "boolean"
        },
        "noWrap": {
          "description": "Indicates if the field is configured to not wrap when displayed in the product.",
          "type": "boolean"
        }
      }
    },
    "Properties5": {
      "title": "Properties5",
      "description": "Specific field properties.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "The comments entered on the field properties by an administrator.",
          "type": "string"
        },
        "doesTotal": {
          "description": "Whether this field totals in reports within the product.",
          "type": "boolean"
        },
        "autoSave": {
          "description": "Whether the link field will auto save.",
          "type": "boolean"
        },
        "defaultValueLuid": {
          "description": "Default user id value.",
          "type": "integer",
          "format": "int32"
        },
        "maxVersions": {
          "description": "The maximum number of versions configured for a file attachment.",
          "type": "integer",
          "minimum": 1,
          "format": "int32"
        },
        "format": {
          "description": "The format to display time.",
          "type": "integer",
          "format": "int32"
        },
        "carryChoices": {
          "description": "Whether the field should carry its multiple choice fields when copied.",
          "type": "boolean"
        },
        "maxLength": {
          "description": "The maximum number of characters allowed for entry in Quickbase for this field.",
          "type": "integer",
          "format": "int32"
        },
        "linkText": {
          "description": "The configured text value that replaces the URL that users see within the product.",
          "type": "string"
        },
        "parentFieldId": {
          "description": "The id of the parent composite field, when applicable.",
          "type": "integer",
          "format": "int32"
        },
        "displayTimezone": {
          "description": "Indicates whether to display the timezone within the product.",
          "type": "boolean"
        },
        "summaryTargetFieldId": {
          "description": "The id of the field that is used to aggregate values from the child, when applicable. This displays 0 if the summary function doesn\u2019t require a field selection (like count).",
          "type": "integer",
          "format": "int32"
        },
        "allowNewChoices": {
          "description": "Indicates if users can add new choices to a selection list.",
          "type": "boolean"
        },
        "defaultToday": {
          "description": "Indicates if the field value is defaulted today for new records.",
          "type": "boolean"
        },
        "units": {
          "description": "The units label.",
          "type": "string"
        },
        "lookupTargetFieldId": {
          "description": "The id of the field that is the target on the parent table for this lookup.",
          "type": "integer",
          "format": "int32"
        },
        "summaryFunction": {
          "$ref": "#/definitions/SummaryFunction3"
        },
        "sourceFieldId": {
          "description": "The id of the source field.",
          "type": "integer",
          "format": "int32"
        },
        "doesAverage": {
          "description": "Whether this field averages in reports within the product.",
          "type": "boolean"
        },
        "formula": {
          "description": "The formula of the field as configured in Quickbase.",
          "type": "string"
        },
        "decimalPlaces": {
          "description": "The number of decimal places displayed in the product for this field.",
          "type": "integer",
          "format": "int32"
        },
        "displayMonth": {
          "description": "How to display months.",
          "type": "string"
        },
        "seeVersions": {
          "description": "Indicates if the user can see other versions, aside from the most recent, of a file attachment within the product.",
          "type": "boolean"
        },
        "numLines": {
          "description": "The number of lines shown in Quickbase for this text field.",
          "type": "integer",
          "format": "int32"
        },
        "defaultKind": {
          "description": "The user default type.",
          "type": "string"
        },
        "displayEmail": {
          "description": "How the email is displayed.",
          "type": "string"
        },
        "coverText": {
          "description": "An alternate user friendly text that can be used to display a link in the browser.",
          "type": "string"
        },
        "currencySymbol": {
          "description": "The current symbol used when displaying field values within the product.",
          "type": "string"
        },
        "summaryQuery": {
          "description": "The summary query.",
          "type": "string"
        },
        "targetFieldId": {
          "description": "The id of the target field.",
          "type": "integer",
          "format": "int32"
        },
        "displayUser": {
          "description": "The configured option for how users display within the product.",
          "type": "string"
        },
        "blankIsZero": {
          "description": "Whether a blank value is treated the same as 0 in calculations within the product.",
          "type": "boolean"
        },
        "exact": {
          "description": "Whether an exact match is required for a report link.",
          "type": "boolean"
        },
        "defaultDomain": {
          "description": "Default email domain.",
          "type": "string"
        },
        "defaultValue": {
          "description": "The default value configured for a field when a new record is added.",
          "type": "string"
        },
        "abbreviate": {
          "description": "Don't show the URL protocol when showing the URL.",
          "type": "boolean"
        },
        "numberFormat": {
          "description": "The format used for displaying numeric values in the product (decimal, separators, digit group).",
          "type": "integer",
          "format": "int32"
        },
        "targetTableName": {
          "description": "The field's target table name.",
          "type": "string"
        },
        "appearsAs": {
          "description": "The link text, if empty, the url will be used as link text.",
          "type": "string"
        },
        "width": {
          "description": "The field's html input width in the product.",
          "type": "integer",
          "format": "int32"
        },
        "currencyFormat": {
          "$ref": "#/definitions/CurrencyFormat"
        },
        "displayImages": {
          "description": "Indicates whether images will display for file attachments on forms and reports within the product.",
          "type": "boolean"
        },
        "displayDayOfWeek": {
          "description": "Indicates whether to display the day of the week within the product.",
          "type": "boolean"
        },
        "summaryReferenceFieldId": {
          "description": "The id of the field that is the reference in the relationship for this summary.",
          "type": "integer",
          "format": "int32"
        },
        "commaStart": {
          "description": "The number of digits before commas display in the product, when applicable.",
          "type": "integer",
          "format": "int32"
        },
        "choices": {
          "description": "An array of entries that exist for a field that offers choices to the user. Note that these choices refer to the valid values of any records added in the future. You are allowed to remove values from the list of choices even if there are existing records with those values in this field. They will be displayed in red when users look at the data in the browser but there is no other effect. While updating a field with this property, the old choices are removed and replaced by the new choices.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetTableId": {
          "description": "The id of the target table.",
          "type": "string"
        },
        "displayRelative": {
          "description": "Whether to display time as relative.",
          "type": "boolean"
        },
        "compositeFields": {
          "description": "An array of the fields that make up a composite field (e.g., address).",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "summaryTableId": {
          "description": "The table the summary field references fields from.",
          "type": "string"
        },
        "displayTime": {
          "description": "Indicates whether to display the time, in addition to the date.",
          "type": "boolean"
        },
        "versionMode": {
          "$ref": "#/definitions/VersionMode"
        },
        "snapFieldId": {
          "description": "The id of the field that is used to snapshot values from, when applicable.",
          "type": "integer",
          "format": "int32"
        },
        "hours24": {
          "description": "Indicates whether or not to display time in the 24-hour format within the product.",
          "type": "boolean"
        },
        "sortAlpha": {
          "description": "Whether to sort alphabetically, default sort is by record ID.",
          "type": "boolean"
        },
        "sortAsGiven": {
          "description": "Indicates if the listed entries sort as entered vs alphabetically.",
          "type": "boolean"
        },
        "hasExtension": {
          "description": "Whether this field has a phone extension.",
          "type": "boolean"
        },
        "useNewWindow": {
          "description": "Indicates if the URL should open a new window when a user clicks it within the product.",
          "type": "boolean"
        },
        "appendOnly": {
          "description": "Whether this field is append only.",
          "type": "boolean"
        },
        "displayAsLink": {
          "description": "Indicates if a field that is part of the relationship should be shown as a hyperlink to the parent record within the product.",
          "type": "boolean"
        },
        "lookupReferenceFieldId": {
          "description": "The id of the field that is the reference in the relationship for this lookup.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SummaryFunction3": {
      "title": "SummaryFunction3",
      "description": "The accumulation type for the summary field.",
      "example": "AVG",
      "type": "string",
      "enum": [
        "AVG",
        "SUM",
        "MAX",
        "MIN",
        "STD-DEV",
        "COUNT",
        "COMBINED-TEXT",
        "DISTINCT-COUNT"
      ]
    },
    "updateFieldResponse": {
      "title": "Update Field Response",
      "example": {
        "id": 123,
        "label": "Field1",
        "fieldType": "text",
        "mode": "string",
        "noWrap": false,
        "bold": false,
        "required": false,
        "appearsByDefault": false,
        "findEnabled": false,
        "unique": false,
        "doesDataCopy": false,
        "fieldHelp": "field help",
        "audited": false,
        "properties": {
          "primaryKey": false,
          "foreignKey": false,
          "numLines": 1,
          "maxLength": 0,
          "appendOnly": false,
          "allowHTML": false,
          "sortAsGiven": false,
          "carryChoices": true,
          "allowNewChoices": false,
          "formula": "string",
          "defaultValue": "string"
        },
        "permissions": [
          {
            "permissionType": "View",
            "role": "Viewer",
            "roleId": 10
          },
          {
            "permissionType": "None",
            "role": "Participant",
            "roleId": 11
          },
          {
            "permissionType": "Modify",
            "role": "Administrator",
            "roleId": 12
          }
        ]
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the field, unique to this table.",
          "type": "integer",
          "format": "int64"
        },
        "fieldType": {
          "description": "The type of field, as described [here](https://help.quickbase.com/user-assistance/field_types.html).",
          "type": "string"
        },
        "mode": {
          "description": "For derived fields, this will be 'lookup', 'summary', or 'formula', to indicate the type of derived field.  For non-derived fields, this will be blank.",
          "type": "string"
        },
        "label": {
          "description": "The label (name) of the field.",
          "type": "string"
        },
        "noWrap": {
          "description": "Indicates if the field is configured to not wrap when displayed in the product.",
          "type": "boolean"
        },
        "bold": {
          "description": "Indicates if the field is configured to display in bold in the product.",
          "type": "boolean"
        },
        "required": {
          "description": "Indicates if the field is marked required.",
          "type": "boolean"
        },
        "appearsByDefault": {
          "description": "Indicates if the field is marked as a default in reports.",
          "type": "boolean"
        },
        "findEnabled": {
          "description": "Indicates if the field is marked as searchable.",
          "type": "boolean"
        },
        "unique": {
          "description": "Indicates if the field is marked unique.",
          "type": "boolean"
        },
        "doesDataCopy": {
          "description": "Indicates if the field data will copy when a user copies the record.",
          "type": "boolean"
        },
        "fieldHelp": {
          "description": "The configured help text shown to users within the product.",
          "type": "string"
        },
        "audited": {
          "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs.",
          "type": "boolean"
        },
        "properties": {
          "$ref": "#/definitions/Properties1"
        },
        "permissions": {
          "description": "Field Permissions for different roles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "getFieldsUsageResponse": {
      "title": "Get Fields Usage Response",
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/Field1"
        },
        "usage": {
          "$ref": "#/definitions/Usage"
        }
      },
      "required": [
        "field",
        "usage"
      ]
    },
    "Field1": {
      "title": "Field1",
      "description": "Basic information about the field.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Field name.",
          "type": "string"
        },
        "id": {
          "description": "Field id.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Field type.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "id",
        "type"
      ]
    },
    "Usage": {
      "title": "Usage",
      "description": "Usage Information about the field.",
      "type": "object",
      "properties": {
        "defaultReports": {
          "$ref": "#/definitions/DefaultReports"
        },
        "notifications": {
          "$ref": "#/definitions/Notifications"
        },
        "reminders": {
          "$ref": "#/definitions/Reminders"
        },
        "forms": {
          "$ref": "#/definitions/Forms"
        },
        "actions": {
          "$ref": "#/definitions/Actions"
        },
        "personalReports": {
          "$ref": "#/definitions/PersonalReports"
        },
        "roles": {
          "$ref": "#/definitions/Roles"
        },
        "reports": {
          "$ref": "#/definitions/Reports"
        },
        "fields": {
          "$ref": "#/definitions/Fields"
        },
        "relationships": {
          "$ref": "#/definitions/Relationships"
        },
        "webhooks": {
          "$ref": "#/definitions/Webhooks"
        },
        "appHomePages": {
          "$ref": "#/definitions/AppHomePages"
        },
        "exactForms": {
          "$ref": "#/definitions/ExactForms"
        }
      },
      "required": [
        "defaultReports",
        "notifications",
        "reminders",
        "forms",
        "actions",
        "personalReports",
        "roles",
        "reports",
        "fields",
        "relationships",
        "webhooks",
        "appHomePages",
        "exactForms"
      ]
    },
    "DefaultReports": {
      "title": "DefaultReports",
      "description": "The number of default reports where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "Notifications": {
      "title": "Notifications",
      "description": "The number of notifications where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "Reminders": {
      "title": "Reminders",
      "description": "The number of reminders where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "Forms": {
      "title": "Forms",
      "description": "The number of forms where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "Actions": {
      "title": "Actions",
      "description": "The number of quickbase actions where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "PersonalReports": {
      "title": "PersonalReports",
      "description": "The number of personal reports where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "Roles": {
      "title": "Roles",
      "description": "The number of roles where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "Reports": {
      "title": "Reports",
      "description": "The number of reports where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "Fields": {
      "title": "Fields",
      "description": "The number of fields where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "Relationships": {
      "title": "Relationships",
      "description": "The number of relationships where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "Webhooks": {
      "title": "Webhooks",
      "description": "The number of webhooks where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "AppHomePages": {
      "title": "AppHomePages",
      "description": "The number of app home pages where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "ExactForms": {
      "title": "ExactForms",
      "description": "The number of exact forms where the given field is referenced.",
      "type": "object",
      "properties": {
        "count": {
          "description": "the number of times a field has been used for the given item.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "getFieldUsageResponse": {
      "title": "Get Field Usage Response",
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/Field1"
        },
        "usage": {
          "$ref": "#/definitions/Usage"
        }
      },
      "required": [
        "field",
        "usage"
      ]
    },
    "generated11": {
      "title": "generated11",
      "description": "The following example will execute a Sum() for '20' and the value in a record with id 1 for the field with label 'NumericField'. Since this API is able to run any type of formula, all results will be returned as a string.",
      "example": {
        "from": "bck7gp3q2",
        "formula": "Sum([NumericField],20)",
        "rid": 1
      },
      "type": "object",
      "properties": {
        "formula": {
          "description": "The formula to run. This must be a valid Quickbase formula.",
          "type": "string"
        },
        "rid": {
          "description": "The record ID to run the formula against. Only necessary for formulas that are run in the context of a record. For example, the formula User() does not need a record ID.",
          "type": "integer",
          "format": "int32"
        },
        "from": {
          "description": "The unique identifier (dbid) of the table.",
          "example": "bck7gp3q2",
          "type": "string"
        }
      },
      "required": [
        "formula",
        "from"
      ]
    },
    "runFormulaResponse": {
      "title": "Run Formula Response",
      "example": {
        "result": "30"
      },
      "type": "object",
      "properties": {
        "result": {
          "description": "The formula execution result.",
          "type": "string"
        }
      }
    },
    "generated12": {
      "title": "generated12",
      "type": "object",
      "properties": {
        "to": {
          "description": "The table identifier.",
          "example": "bck7gp3q2",
          "type": "string",
          "minLength": 1
        },
        "data": {
          "description": "Record data array.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "mergeFieldId": {
          "description": "The merge field id.",
          "example": 7,
          "type": "integer",
          "format": "int32"
        },
        "fieldsToReturn": {
          "description": "Specify an array of field ids that will return data for any updates or added record. Record ID (FID 3) is always returned if any field ID is requested.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "to"
      ]
    },
    "upsertResponse": {
      "title": "Upsert Response",
      "description": "A successful response that includes details on the records added, updated or unchanged. In the example below, the table previously had ten records with IDs from 1 through 10. The user posts an upsert that updates the value of record 1 and adds two new records, all successfully.",
      "example": {
        "value": {
          "data": [
            {
              "3": {
                "value": 1
              },
              "6": {
                "value": "Updating this record"
              },
              "7": {
                "value": 10
              },
              "8": {
                "value": "2019-12-18T08:00:00.000Z"
              }
            },
            {
              "3": {
                "value": 11
              },
              "6": {
                "value": "This is my text"
              },
              "7": {
                "value": 15
              },
              "8": {
                "value": "2019-12-19T08:00:00.000Z"
              }
            },
            {
              "3": {
                "value": 12
              },
              "6": {
                "value": "This is my other text"
              },
              "7": {
                "value": 20
              },
              "8": {
                "value": "2019-12-20T08:00:00.000Z"
              }
            }
          ],
          "metadata": {
            "createdRecordIds": [
              11,
              12
            ],
            "totalNumberOfRecordsProcessed": 3,
            "unchangedRecordIds": [],
            "updatedRecordIds": [
              1
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/Metadata2"
        },
        "data": {
          "description": "The data that is expected to be returned.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "Metadata2": {
      "title": "Metadata2",
      "description": "Information about created records, updated records, referenced but unchanged records, and records having any errors while being processed.",
      "type": "object",
      "properties": {
        "createdRecordIds": {
          "description": "Array containing the created record ids.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "lineErrors": {
          "description": "This will only be returned in the case of failed records. It is a collection of errors that occurred when processing the incoming data that resulted in records not being processed. Each object has a key representing the sequence number of the record in the original payload (starting from 1). The value is a list of errors occurred.",
          "type": "object"
        },
        "unchangedRecordIds": {
          "description": "Array containing the unchanged record ids.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "updatedRecordIds": {
          "description": "Array containing the updated record ids.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "totalNumberOfRecordsProcessed": {
          "description": "Number of records processed. Includes successful and failed record updates.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "upsertResponse1": {
      "title": "upsertResponse1",
      "description": "Receiving this status code indicates that some (or all) of the individual records being handled had problems and were not processed successfully. The response will be reported under the 'lineErrors' element and indicate the total number of records processed and the errors that occurred with each record. The record IDs of records created, updated, and referenced but unchanged, will be returned in the 'createdRecordIds', 'updatedRecordIds', and 'unchangedRecordIds' elements respectively.  \nIn the example below, a user tries to add three records to a table that previously had ten records with IDs from 1 through 10. The first and third records of the request are valid and create the 11th and 12th records in the table; the second record has a problem that prevents it from being processed.",
      "example": {
        "value": {
          "data": [],
          "metadata": {
            "createdRecordIds": [
              11,
              12
            ],
            "lineErrors": {
              "2": [
                "Incompatible value for field with ID \"6\"."
              ]
            },
            "totalNumberOfRecordsProcessed": 3,
            "unchangedRecordIds": [],
            "updatedRecordIds": []
          }
        }
      },
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/Metadata2"
        },
        "data": {
          "description": "The data that is expected to be returned.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "upsertException1": {
      "title": "upsertException1",
      "description": "There was problem in the format of the request. This prevented the entire request from processing any records. The error response will be in the [standard format](../errors).",
      "example": {
        "message": "Bad request",
        "description": "Data object cannot be empty."
      },
      "type": "object",
      "properties": {
        "message": {
          "description": "The type of error found.",
          "type": "string"
        },
        "description": {
          "description": "The description for the occurence of the error.",
          "type": "string"
        }
      }
    },
    "generated13": {
      "title": "generated13",
      "example": {
        "from": "bck7gp3q2",
        "where": "{6.EX.'hello'}"
      },
      "type": "object",
      "properties": {
        "from": {
          "description": "The unique identifier of the table.",
          "example": "bck7gp3q2",
          "type": "string",
          "minLength": 1
        },
        "where": {
          "description": "The filter to delete records. To delete all records specify a filter that will include all records, for example {3.GT.0} where 3 is the ID of the Record ID field.",
          "example": "{6.EX.'hello'}",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "from",
        "where"
      ]
    },
    "deleteRecordsResponse": {
      "title": "Delete Records Response",
      "example": {
        "numberDeleted": 1
      },
      "type": "object",
      "properties": {
        "numberDeleted": {
          "description": "The number of records deleted.",
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "generated14": {
      "title": "generated14",
      "description": "If grouping or sorting is not set, records will not be sorted.",
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/Options"
        },
        "where": {
          "description": "The filter, using the Quickbase query language, which determines the records to return. If this parameter is omitted, the query will return all records.",
          "example": "{6.EX.'hello'}",
          "type": "string"
        },
        "groupBy": {
          "description": "An array that contains the fields to group the records by.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupBy"
          }
        },
        "sortBy": {
          "description": "By default, queries will be sorted by the given sort fields or the default sort if the query does not provide any. Set to false to avoid sorting when the order of the data returned is not important. Returning data without sorting can improve performance.",
          "type": "object"
        },
        "select": {
          "description": "An array of field ids for the fields that should be returned in the response. If empty, the default columns on the table will be returned.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "from": {
          "description": "The table identifier.",
          "example": "bck7gp3q2",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "from"
      ]
    },
    "Options": {
      "title": "Options",
      "description": "Additional query options.",
      "type": "object",
      "properties": {
        "skip": {
          "description": "The number of records to skip.",
          "type": "integer",
          "format": "int32"
        },
        "compareWithAppLocalTime": {
          "description": "Whether to run the query against a date time field with respect to the application's local time. The query is run with UTC time by default.",
          "type": "boolean"
        },
        "top": {
          "description": "The maximum number of records to display.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GroupBy": {
      "title": "GroupBy",
      "type": "object",
      "properties": {
        "fieldId": {
          "description": "The unique identifier of a field in a table.",
          "type": "integer",
          "format": "int32"
        },
        "grouping": {
          "$ref": "#/definitions/Grouping"
        }
      }
    },
    "Grouping": {
      "title": "Grouping",
      "description": "Group by based on ascending order (ASC), descending order (DESC) or equal values (equal-values)",
      "example": "ASC",
      "type": "string",
      "enum": [
        "ASC",
        "DESC",
        "equal-values"
      ]
    },
    "runQueryResponse": {
      "title": "Run Query Response",
      "example": {
        "value": {
          "data": [
            {
              "6": {
                "value": "Andre Harris"
              },
              "7": {
                "value": 10
              },
              "8": {
                "value": "2019-12-18T08:00:00.000Z"
              }
            }
          ],
          "fields": [
            {
              "id": 6,
              "label": "Full Name",
              "type": "text"
            },
            {
              "id": 7,
              "label": "Amount",
              "type": "numeric"
            },
            {
              "id": 8,
              "label": "Date time",
              "type": "date time"
            }
          ],
          "metadata": {
            "totalRecords": 10,
            "numRecords": 1,
            "numFields": 3,
            "skip": 0
          }
        }
      },
      "type": "object",
      "properties": {
        "fields": {
          "description": "An array of objects that contains limited meta-data of each field displayed in the report. This assists in building logic that depends on field types and IDs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fields2"
          }
        },
        "data": {
          "description": "An array of objects that either represents the record data or summarized values, depending on the report type.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "metadata": {
          "$ref": "#/definitions/Metadata1"
        }
      }
    },
    "Fields2": {
      "title": "Fields2",
      "type": "object",
      "properties": {
        "id": {
          "description": "Field id.",
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "Field label.",
          "type": "string"
        },
        "type": {
          "description": "Field type.",
          "type": "string"
        }
      }
    },
    "getTempTokenDBIDResponse": {
      "title": "getTempTokenDBIDResponse",
      "example": {
        "temporaryAuthorization": "token"
      },
      "type": "object",
      "properties": {
        "temporaryAuthorization": {
          "description": "Temporary authorization token.",
          "type": "string"
        }
      }
    },
    "generated15": {
      "title": "generated15",
      "example": {
        "name": "My cloned user token",
        "description": "Cloned from user token A"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The new name for the cloned user token.",
          "type": "string"
        },
        "description": {
          "description": "The description for the cloned user token.",
          "type": "string"
        }
      }
    },
    "cloneUserTokenResponse": {
      "title": "Clone User Token Response",
      "example": {
        "active": true,
        "apps": [
          {
            "id": "bpqe82s1",
            "name": "My first app"
          },
          {
            "id": "bpqe82s2",
            "name": "My second app"
          }
        ],
        "lastUsed": "2020-03-27T18:34:12.000Z",
        "description": "Cloned user token",
        "id": 5,
        "name": "My cloned user token",
        "token": "token"
      },
      "type": "object",
      "properties": {
        "active": {
          "description": "Whether the user token is active.",
          "type": "boolean"
        },
        "apps": {
          "description": "The list of apps this user token is assigned to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/App"
          }
        },
        "lastUsed": {
          "description": "The last date this user token was used, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
          "type": "string"
        },
        "description": {
          "description": "User Token description.",
          "type": "string"
        },
        "id": {
          "description": "User Token id.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "User Token name.",
          "type": "string"
        },
        "token": {
          "description": "User Token value.",
          "type": "string"
        }
      }
    },
    "App": {
      "title": "App",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identifier for this application.",
          "type": "string"
        },
        "name": {
          "description": "The application's name.",
          "type": "string"
        }
      }
    },
    "deactivateUserTokenResponse": {
      "title": "Deactivate User Token Response",
      "example": {
        "id": 5
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The user token id.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "deleteUserTokenResponse": {
      "title": "Delete User Token Response",
      "example": {
        "id": 5
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The user token id.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "deleteFileResponse": {
      "title": "Delete File Response",
      "example": {
        "versionNumber": 1,
        "fileName": "file.pdf",
        "uploaded": "2019-12-18T08:00:00.000Z",
        "creator": {
          "email": "jsmith@quickbase.com",
          "id": "123456.ab1s",
          "name": "Juliet Smith",
          "userName": "jsmith"
        }
      },
      "type": "object",
      "properties": {
        "versionNumber": {
          "description": "The number of deleted version.",
          "type": "integer",
          "format": "int32"
        },
        "fileName": {
          "description": "The name of file associated with deleted version.",
          "type": "string"
        },
        "uploaded": {
          "description": "The timestamp when the version was originally uploaded.",
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/Creator"
        }
      }
    },
    "Creator": {
      "title": "Creator",
      "description": "The user that uploaded version.",
      "type": "object",
      "properties": {
        "name": {
          "description": "User full name.",
          "type": "string"
        },
        "id": {
          "description": "User Id.",
          "type": "string"
        },
        "email": {
          "description": "User email.",
          "type": "string"
        },
        "userName": {
          "description": "User Name as updated in user properties. Optional, appears if not the same as user email.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [
    {
      "name": "Apps",
      "description": "Apps"
    },
    {
      "name": "Tables",
      "description": "Tables"
    },
    {
      "name": "Reports",
      "description": "Reports"
    },
    {
      "name": "Fields",
      "description": "Fields"
    },
    {
      "name": "Formulas",
      "description": "Formulas"
    },
    {
      "name": "Records",
      "description": "Records"
    },
    {
      "name": "Auth",
      "description": "Auth"
    },
    {
      "name": "UserToken",
      "description": "User Token"
    },
    {
      "name": "Files",
      "description": "Files"
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.quickbase.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.quickbase.com/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity;IT Operations"
    }
  ]
}
