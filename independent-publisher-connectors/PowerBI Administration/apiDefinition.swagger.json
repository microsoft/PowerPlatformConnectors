{
  "swagger": "2.0",
  "info": {
    "title": "PowerBI Administration",
    "description": "Provides access to the Power BI Admin API for performing administrative tasks like examining workspaces, datasets, reports and dashboards (https://docs.microsoft.com/en-us/rest/api/power-bi/admin)",
    "version": "1.0",
    "contact": {
      "name": "Paul Culmsee",
      "url": "https://docs.microsoft.com/en-us/power-bi/fundamentals/power-bi-overview",
      "email": "paul.culmsee@sevensigma.com.au"
    }
  },
  "host": "api.powerbi.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/v1.0/myorg/admin/groups": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "@odata.context": {
                  "type": "string",
                  "description": "@odata.context"
                },
                "@odata.count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "@odata.count"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The workspace id"
                      },
                      "isReadOnly": {
                        "type": "boolean",
                        "description": "Is the group read only"
                      },
                      "isOnDedicatedCapacity": {
                        "type": "boolean",
                        "description": "Is the group on dedicated capacity"
                      },
                      "capacityMigrationStatus": {
                        "type": "string",
                        "description": "Capacity Migration Status",
                        "title": "Capacity Migration Status"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of group"
                      },
                      "state": {
                        "type": "string",
                        "description": "The group state"
                      },
                      "name": {
                        "type": "string",
                        "description": "The group name"
                      }
                    }
                  },
                  "description": "A Power BI group"
                }
              }
            }
          }
        },
        "summary": "Get Groups as Admin",
        "description": "Returns a list of workspaces for the organization",
        "operationId": "GroupsGetGroupsAsAdmin",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Use the expand property to expand certain properties in the group return object.",
            "description": "Use the expand property to expand certain properties in the group return object."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Enter filter criteria (eg type eq 'Workspace')",
            "description": "Use the filter parameter to filter groups on a property. In the default example this will contain a filter to get only groups of type 'Workspace'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Number of records to return",
            "description": "Use the top parameter to set the top n results",
            "default": 500,
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Number of records to skip",
            "description": "Use the top parameter to skip the first x amount of groups that are being returned."
          }
        ]
      }
    },
    "/v1.0/myorg/admin/dataflows": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "objectId": {
                        "type": "string",
                        "description": "The dataflow id"
                      },
                      "name": {
                        "type": "string",
                        "description": "The dataflow name"
                      },
                      "description": {
                        "type": "string",
                        "description": "The dataflow description"
                      },
                      "modelUrl": {
                        "type": "string",
                        "description": "A URL to the dataflow definition file (model.json)"
                      },
                      "configuredBy": {
                        "type": "string",
                        "description": "The dataflow owner"
                      }
                    }
                  },
                  "description": "The metadata of a dataflow."
                }
              }
            }
          }
        },
        "summary": "Get Dataflows As Admin",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Enter filter criteria (eg type eq 'Workspace')",
            "description": "Filters the results, based on a boolean condition"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to return",
            "description": "Use the top parameter to set the top n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to skip",
            "description": "Use the top parameter to skip the first x amount of groups that are being returned."
          }
        ],
        "description": "Returns a list of dataflows for the organization",
        "operationId": "DataflowsGetDataflowsAsAdmin"
      }
    },
    "/v1.0/myorg/admin/dataflows/{dataflowId}/datasources": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The dataset name"
                      },
                      "connectionString": {
                        "type": "string",
                        "description": "The connection string for this data source"
                      },
                      "datasourceType": {
                        "type": "string",
                        "description": "The datasource type"
                      },
                      "datasourceId": {
                        "type": "string",
                        "description": "The bound datasource id. Empty when not bound to a gateway"
                      },
                      "gatewayId": {
                        "type": "string",
                        "description": "The bound gateway id. Empty when not bound to a gateway."
                      },
                      "connectionDetails": {
                        "type": "object",
                        "properties": {
                          "server": {
                            "type": "string",
                            "description": "The connection server"
                          },
                          "database": {
                            "type": "string",
                            "description": "The connection database"
                          }
                        },
                        "description": "The datasource connection details"
                      }
                    }
                  },
                  "description": "Returns a list of datasources for the specified dataflow."
                }
              }
            }
          }
        },
        "summary": "Get Dataflow Datasources As Admin",
        "description": "Returns a list of datasources for the specified dataflow",
        "operationId": "DataflowsGetDataflowDatasourcesAsAdmin",
        "parameters": [
          {
            "name": "dataflowId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Number of records to return",
            "description": "The dataflow id"
          }
        ]
      }
    },
    "/v1.0/myorg/admin/dashboards": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The dashboard id"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The dashboard display name"
                      },
                      "embedUrl": {
                        "type": "string",
                        "description": "The dashboard embed url"
                      },
                      "isReadOnly": {
                        "type": "boolean",
                        "description": "Is ReadOnly dashboard"
                      }
                    }
                  },
                  "description": "Returns a list of dashboards for the organization."
                }
              }
            }
          }
        },
        "summary": "Get Dashboards As Admin",
        "description": "Returns a list of dashboards for the organization.",
        "operationId": "DashboardsGetDashboardsAsAdmin",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Enter expand query",
            "description": "Expands related entities inline, receives a comma-separated list of data types. Supported: tiles"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters the results, based on a boolean condition",
            "x-ms-summary": "Enter filter criteria"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to return",
            "description": "Use the top parameter to set the top n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to skip",
            "description": "Use the top parameter to skip the first x amount of groups that are being returned."
          }
        ]
      }
    },
    "/v1.0/myorg/admin/dashboards/{dashboardId}/tiles": {
      "get": {
        "responses": {
          "200": {
            "description": "Get tiles of a specified dashboard",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The tile id"
                      },
                      "title": {
                        "type": "string",
                        "description": "The dashboard display name"
                      },
                      "embedUrl": {
                        "type": "string",
                        "description": "The tile embed url"
                      },
                      "rowSpan": {
                        "type": "integer",
                        "format": "int32",
                        "description": "number of rows a tile should span"
                      },
                      "colSpan": {
                        "type": "integer",
                        "format": "int32",
                        "description": "number of columns a tile should span"
                      },
                      "reportId": {
                        "type": "string",
                        "description": "The report id. Available only for tiles created from a report."
                      },
                      "datasetId": {
                        "type": "string",
                        "description": "The dataset id. Available only for tiles created from a report or using a dataset; for example, Q&A tiles."
                      }
                    }
                  },
                  "description": "Returns a list of tiles within the specified dashboard."
                }
              }
            }
          }
        },
        "summary": "Get Tiles As Admin",
        "description": "Returns a list of tiles within the specified dashboard",
        "operationId": "DashboardsGetTilesAsAdmin",
        "parameters": [
          {
            "name": "dashboardId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "A Power BI dashboard ID",
            "x-ms-summary": "Dashboard ID"
          }
        ]
      }
    },
    "/v1.0/myorg/admin/reports": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "datasetId": {
                        "type": "string",
                        "description": "The dataset id"
                      },
                      "id": {
                        "type": "string",
                        "description": "The report id"
                      },
                      "name": {
                        "type": "string",
                        "description": "The report name"
                      },
                      "webUrl": {
                        "type": "string",
                        "description": "The report web url"
                      },
                      "embedUrl": {
                        "type": "string",
                        "description": "The report embed url"
                      }
                    }
                  },
                  "description": "Returns a list of reports for the organization."
                }
              }
            }
          }
        },
        "summary": "Get Reports As Admin",
        "operationId": "ReportsGetReportsAsAdmin",
        "description": "Returns a list of reports for the organization",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Enter filter criteria",
            "description": "Filters the results, based on a boolean condition"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to return",
            "description": "Use the top parameter to set the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to skip",
            "description": "Use the top parameter to skip the first x amount of groups that are being returned."
          }
        ]
      }
    },
    "/v1.0/myorg/admin/groups/{groupId}/dashboards": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The dashboard id"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The dashboard display name"
                      },
                      "embedUrl": {
                        "type": "string",
                        "description": "The dashboard embed url"
                      },
                      "isReadOnly": {
                        "type": "boolean",
                        "description": "isReadOnly"
                      }
                    }
                  },
                  "description": "Returns a list of dashboards from the specified workspace."
                }
              }
            }
          }
        },
        "summary": "Get Dashboards In Group As Admin",
        "description": "Returns a list of dashboards from the specified workspace",
        "operationId": "DashboardsGetDashboardsInGroupAsAdmin",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "The workspace id",
            "x-ms-summary": "Enter workspace ID"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Enter filter criteria",
            "description": "Filters the results, based on a boolean condition"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to return",
            "description": "Use the top parameter to set the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to skip",
            "description": "Use the top parameter to skip the first x amount of groups that are being returned."
          }
        ]
      }
    },
    "/v1.0/myorg/admin/groups/{groupId}/dataflows": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "objectId": {
                        "type": "string",
                        "description": "The dataflow id"
                      },
                      "name": {
                        "type": "string",
                        "description": "The dataflow name"
                      },
                      "description": {
                        "type": "string",
                        "description": "The dataflow description"
                      },
                      "modelUrl": {
                        "type": "string",
                        "description": "A URL to the dataflow definition file (model.json)"
                      },
                      "configuredBy": {
                        "type": "string",
                        "description": "The dataflow owner"
                      }
                    }
                  },
                  "description": "Returns a list of dataflows from the specified workspace."
                }
              }
            }
          }
        },
        "summary": "Get Dataflows In Group As Admin",
        "description": "Returns a list of dataflows from the specified workspace",
        "operationId": "DataflowsGetDataflowsInGroupAsAdmin",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "The workspace id",
            "x-ms-summary": "Enter workspace ID"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Enter filter criteria",
            "description": "Filters the results, based on a boolean condition"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to return",
            "description": "Use the top parameter to set the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to skip",
            "description": "Use the top parameter to skip the first x amount of groups that are being returned."
          }
        ]
      }
    },
    "/v1.0/myorg/admin/groups/{groupId}/reports": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "datasetId": {
                        "type": "string",
                        "description": "datasetId"
                      },
                      "id": {
                        "type": "string",
                        "description": "The report id"
                      },
                      "name": {
                        "type": "string",
                        "description": "The report name"
                      },
                      "webUrl": {
                        "type": "string",
                        "description": "The report web url"
                      },
                      "embedUrl": {
                        "type": "string",
                        "description": "The report embed url"
                      }
                    }
                  },
                  "description": "Returns a list of reports from the specified workspace."
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "description": "The workspace id",
            "x-ms-summary": "Enter workspace ID"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Enter filter criteria",
            "description": "Filters the results, based on a boolean condition"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to return",
            "description": "Use the top parameter to set the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to skip",
            "description": "Use the top parameter to skip the first x amount of groups that are being returned."
          }
        ],
        "operationId": "ReportsGetReportsInGroupAsAdmin",
        "summary": "Get Reports In Group As Admin",
        "description": "Returns a list of reports from the specified workspace"
      }
    },
    "/v1.0/myorg/admin/datasets": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The dataset id"
                      },
                      "name": {
                        "type": "string",
                        "description": "The dataset name"
                      },
                      "addRowsAPIEnabled": {
                        "type": "boolean",
                        "description": "Whether the dataset allows adding new rows"
                      },
                      "configuredBy": {
                        "type": "string",
                        "description": "The dataset owner"
                      },
                      "isRefreshable": {
                        "type": "boolean",
                        "description": "Can this dataset be refreshed"
                      },
                      "isEffectiveIdentityRequired": {
                        "type": "boolean",
                        "description": "Whether the dataset requires an effective identity. This indicates that you must send an effective identity using the GenerateToken API."
                      },
                      "isEffectiveIdentityRolesRequired": {
                        "type": "boolean",
                        "description": "Whether RLS is defined inside the PBIX file. This indicates that you must specify a role."
                      },
                      "isOnPremGatewayRequired": {
                        "type": "boolean",
                        "description": "Dataset requires an On-premises Data Gateway"
                      }
                    }
                  },
                  "description": "value"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Enter filter criteria",
            "description": "Filters the results, based on a boolean condition"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to return",
            "description": "Use the top parameter to set the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to skip",
            "description": "Use the top parameter to skip the first x amount of groups that are being returned."
          }
        ],
        "operationId": "DatasetsGetDatasetsAsAdmin",
        "summary": "Get Datasets As Admin",
        "description": "Returns a list of datasets for the organization"
      }
    },
    "/v1.0/myorg/admin/groups/{groupId}/datasets": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The dataset ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "The dataset name"
                      },
                      "addRowsAPIEnabled": {
                        "type": "boolean",
                        "description": "Whether the dataset allows adding new rows"
                      },
                      "configuredBy": {
                        "type": "string",
                        "description": "The dataset owner"
                      },
                      "isRefreshable": {
                        "type": "boolean",
                        "description": "Whether the dataset can be refreshed"
                      },
                      "isEffectiveIdentityRequired": {
                        "type": "boolean",
                        "description": "Whether the dataset requires an effective identity, which you must send in a GenerateToken API call"
                      },
                      "isEffectiveIdentityRolesRequired": {
                        "type": "boolean",
                        "description": "Whether row-level security is defined inside the Power BI Desktop report (.pbix) file. If so, you must specify a role."
                      },
                      "isOnPremGatewayRequired": {
                        "type": "boolean",
                        "description": "The dataset requires an on-premises data gateway"
                      }
                    }
                  },
                  "description": "value"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Enter workspace id",
            "description": "The workspace id"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters the results, based on a boolean condition",
            "x-ms-summary": "Enter filter criteria"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to return",
            "description": "Use the top parameter to set the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to skip",
            "description": "Use the top parameter to skip the first x amount of groups that are being returned."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands related entities inline",
            "x-ms-summary": "Enter expand query"
          }
        ],
        "summary": "Get Datasets In Group As Admin",
        "operationId": "DatasetsGetDatasetsInGroupAsAdmin",
        "description": "Returns a list of datasets from the specified workspace"
      }
    },
    "/v1.0/myorg/admin/datasets/{datasetId}/datasources": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "(Deprecated) The data source name. Available only for DirectQuery"
                      },
                      "connectionString": {
                        "type": "string",
                        "description": "(Deprecated) The data source connection string. Available only for DirectQuery."
                      },
                      "datasourceType": {
                        "type": "string",
                        "description": "The data source type"
                      },
                      "datasourceId": {
                        "type": "string",
                        "description": "The bound data source ID, which is empty when not bound to a gateway"
                      },
                      "gatewayId": {
                        "type": "string",
                        "description": "The bound gateway ID, which is empty when not bound to a gateway. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster and is similar to the gateway cluster ID."
                      },
                      "connectionDetails": {
                        "type": "object",
                        "properties": {
                          "server": {
                            "type": "string",
                            "description": "The connection server"
                          },
                          "database": {
                            "type": "string",
                            "description": "The connection database"
                          },
						  "url": {
                            "type": "string",
                            "description": "The connection URL"
                          }
                        },
                        "description": "The data source connection details"
                      }
                    }
                  },
                  "description": "A Power BI data source"
                }
              }
            }
          }
        },
        "summary": "Get Data Sources for Dataset as Admin",
        "description": "Returns a list of datasources for the specified dataset.",
        "operationId": "DatasetsGetDataSourcesAsAdmin",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "type": "string",
			"description": "The ID of the Dataset",
            "x-ms-summary": "Enter the The ID of the Dataset",
			"x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/v1.0/myorg/admin/activityevents": {
      "get": {
        "responses": {
          "200": {
            "description": "The activity event record",
            "schema": {
              "type": "object",
              "properties": {
                "activityEventEntities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Id": {
                        "type": "string",
                        "description": "Id"
                      },
                      "RecordType": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The type of operation indicated by the record as per management API schema (PowerBI is always 20)"
                      },
                      "CreationTime": {
                        "type": "string",
                        "description": "The date and time in Coordinated Universal Time (UTC) when the user performed the activity.",
                        "title": "CreationTime"
                      },
                      "Operation": {
                        "type": "string",
                        "description": "The name of the user or admin activity.",
                        "title": "Operation"
                      },
                      "OrganizationId": {
                        "type": "string",
                        "description": "The GUID for your organization's Office 365 tenant. This value will always be the same for your organization, regardless of the Office 365 service in which it occurs.",
                        "title": "OrganizationId"
                      },
                      "UserType": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The type of user that performed the operation.",
                        "title": "UserType"
                      },
                      "UserKey": {
                        "type": "string",
                        "description": "An alternative ID for the user identified in the UserId property.",
                        "title": "UserKey"
                      },
                      "Workload": {
                        "type": "string",
                        "description": "The Microsoft 365 service where the activity occurred.",
                        "title": "Workload"
                      },
                      "UserId": {
                        "type": "string",
                        "description": "The UPN (User Principal Name) of the user who performed the action (specified in the Operation property) that resulted in the record being logged",
                        "title": "UserId"
                      },
                      "Activity": {
                        "type": "string",
                        "description": "The name of the user or admin activity.",
                        "title": "Activity"
                      },
                      "ItemName": {
                        "type": "string",
                        "description": "Name of the item where the event occurred.",
                        "title": "ItemName"
                      },
                      "WorkSpaceName": {
                        "type": "string",
                        "description": "The name of the workspace where the event occurred.",
                        "title": "WorkSpaceName"
                      },
                      "DatasetName": {
                        "type": "string",
                        "description": "The name of the dataset where the event occurred.",
                        "title": "DatasetName"
                      },
                      "ReportName": {
                        "type": "string",
                        "description": "ReportName",
                        "title": "The name of the report where the event occurred."
                      },
                      "WorkspaceId": {
                        "type": "string",
                        "description": "The guid of the workspace where the event occurred.",
                        "title": "WorkspaceId"
                      },
                      "ObjectId": {
                        "type": "string",
                        "description": "Name of the object where the event occurred.",
                        "title": "ObjectId"
                      },
                      "DatasetId": {
                        "type": "string",
                        "description": "The guid of the dataset where the event occurred.",
                        "title": "DatasetId"
                      },
                      "ReportId": {
                        "type": "string",
                        "description": "The guid of the report where the event occurred.",
                        "title": "ReportId"
                      },
                      "IsSuccess": {
                        "type": "boolean",
                        "description": "Indicates whether the event completed successfully",
                        "title": "IsSuccess"
                      },
                      "ReportType": {
                        "type": "string",
                        "description": "The type of report",
                        "title": "ReportType"
                      },
                      "RequestId": {
                        "type": "string",
                        "description": "RequestId"
                      },
                      "ActivityId": {
                        "type": "string",
                        "description": "ActivityId"
                      },
                      "DistributionMethod": {
                        "type": "string",
                        "description": "For report views which distribution method did the user leverage to access it.",
                        "title": "DistributionMethod"
                      },
                      "ConsumptionMethod": {
                        "type": "string",
                        "description": "Describes the method used to consume the content such as Power BI Web App.",
                        "title": "ConsumptionMethod"
                      },
                      "SensitivityLabelId": {
                        "type": "string",
                        "description": "The guid of a sensitivity label assigned to this object",
                        "title": "SensitivityLabelId"
                      },
                      "OldSensitivityLabelId": {
                        "type": "string",
                        "description": "The guid of the old sensitivity label assigned to this object",
                        "title": "OldSensitivityLabelId"
                      },
                      "ClientIP": {
                        "type": "string",
                        "description": "The IP address of the device that was used when the activity was logged",
                        "title": "ClientIP"
                      },
                      "UserAgent": {
                        "type": "string",
                        "description": "Information about the user's client or browser.",
                        "title": "UserAgent"
                      },
                      "DataConnectivityMode": {
                        "type": "string",
                        "description": "The connection mode used (DirectQuery or Import)",
                        "title": "DataConnectivityMode"
                      },
                      "LastRefreshTime": {
                        "type": "string",
                        "description": "The time a dataset was last refreshed successfully",
                        "title": "LastRefreshTime"
                      },
                      "DataflowName": {
                        "type": "string",
                        "description": "The name of the data flow where the event occurred.",
                        "title": "DataflowName"
                      },
                      "DataflowId": {
                        "type": "string",
                        "description": "The Id of the data flow where the event occurred.",
                        "title": "DataflowId"
                      },
                      "DataflowType": {
                        "type": "string",
                        "description": "The type of data flow where the event occurred.",
                        "title": "DataflowType"
                      },
                      "DashboardName": {
                        "type": "string",
                        "description": "The name of the dashboard where the event occurred.",
                        "title": "DashboardName"
                      },
                      "DashboardId": {
                        "type": "string",
                        "description": "The Id of the dashboard where the event occurred.",
                        "title": "DashboardId"
                      },
                      "Datasets": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "DatasetId": {
                              "type": "string",
                              "description": "DatasetId",
                              "title": "The guid of the dataset where the event occurred."
                            },
                            "DatasetName": {
                              "type": "string",
                              "description": "DatasetName",
                              "title": "The name of the dataset where the event occurred."
                            }
                          }
                        },
                        "description": "Datasets related to this event"
                      },
                      "GatewayId": {
                        "type": "string",
                        "description": "The guid of the on-prem gateway used in this event",
                        "title": "GatewayId"
                      },
                      "DatasourceId": {
                        "type": "string",
                        "description": "The guid of the data source used for an import",
                        "title": "DatasourceId"
                      },
                      "ImportId": {
                        "type": "string",
                        "description": "ImportId",
                        "title": "ImportId"
                      },
                      "ImportSource": {
                        "type": "string",
                        "description": "The type of data source used for an import",
                        "title": "ImportSource"
                      },
                      "ImportType": {
                        "type": "string",
                        "description": "The format of the data source used for an import",
                        "title": "ImportType"
                      },
                      "ImportDisplayName": {
                        "type": "string",
                        "description": "The name of data source used for an import",
                        "title": "ImportDisplayName"
                      },
                      "RefreshType": {
                        "type": "string",
                        "description": "The type of reshresh (on demand or scheduled)",
                        "title": "RefreshType"
                      },
                      "TileText": {
                        "type": "string",
                        "description": "TileText"
                      },
                      "TargetWorkspaceId": {
                        "type": "string",
                        "description": "The guid of the workspace where a report is cloned to",
                        "title": "TargetWorkspaceId"
                      },
                      "CopiedReportName": {
                        "type": "string",
                        "description": "The name of a copied report",
                        "title": "CopiedReportName"
                      },
                      "CopiedReportId": {
                        "type": "string",
                        "description": "The guid of a copied report",
                        "title": "CopiedReportId"
                      },
                      "ArtifactId": {
                        "type": "string",
                        "description": "Report unique identifier.",
                        "title": "ArtifactId"
                      },
                      "ArtifactName": {
                        "type": "string",
                        "description": "Report friendly name. As at time of event being raised.",
                        "title": "ArtifactName"
                      }
                    }
                  },
                  "description": "Admin - Get Activity Events"
                },
                "lastResultSet": {
                  "type": "boolean",
                  "description": "lastResultSet"
                }
              }
            }
          }
        },
        "summary": "Get Activities As Admin",
        "operationId": "GetActivitiesAsAdmin",
        "description": "Returns a list of audit activity events for a tenant",
        "parameters": [
          {
            "name": "startDateTime",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Date format must be yyyy-mm-ddThh:mm:ss.000Z and enclosed in single quotes",
            "x-ms-summary": "Enter date in quotes - ie 'yyyy-mm-ddThh:mm:ss'"
          },
          {
            "name": "endDateTime",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Date format must be yyyy-mm-ddThh:mm:ss.000Z and enclosed in single quotes",
            "x-ms-summary": "Enter date in quotes - ie 'yyyy-mm-ddThh:mm:ss'"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Continuation token",
            "x-ms-summary": "Enter continuation Token"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Enter filter criteria",
            "description": "Filters the results, based on a boolean condition"
          }
        ]
      }
    },
    "/v1.0/myorg/admin/capacities/refreshables": {
      "get": {
        "responses": {
          "200": {
            "description": "Capacities - Get Refreshables",
            "schema": {
              "type": "object",
              "properties": {
                "@odata.context": {
                  "type": "string",
                  "description": "OData context",
                  "title": "OData context"
                },
                "@odata.count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "@odata.count",
                  "title": "@odata.count"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The object ID of the refreshable",
                        "title": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "Display name of refreshable",
                        "title": "name"
                      },
                      "kind": {
                        "type": "string",
                        "description": "The refreshable kind",
                        "title": "kind"
                      },
                      "startTime": {
                        "type": "string",
                        "description": "The start time of the window for which summary data exists",
                        "title": "startTime"
                      },
                      "endTime": {
                        "type": "string",
                        "description": "The end time of the window for which summary data exists",
                        "title": "endTime"
                      },
                      "refreshCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of refreshes within the summary time window",
                        "title": "refreshCount"
                      },
                      "refreshFailures": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of refresh failures within the summary time window",
                        "title": "refreshFailures"
                      },
                      "averageDuration": {
                        "type": "number",
                        "format": "float",
                        "description": "The average duration in seconds of a refresh within the summary time window",
                        "title": "averageDuration"
                      },
                      "medianDuration": {
                        "type": "number",
                        "format": "float",
                        "description": "The median duration in seconds of a refresh within the summary time window",
                        "title": "medianDuration"
                      },
                      "refreshesPerDay": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of refreshes (schedule+onDemand) per day within the summary time window with at most 60",
                        "title": "refreshesPerDay"
                      },
                      "lastRefresh": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "id"
                          },
                          "refreshType": {
                            "type": "string",
                            "description": "Type of refresh request",
                            "title": "refreshType"
                          },
                          "startTime": {
                            "type": "string",
                            "description": "DateTime of start",
                            "title": "startTime"
                          },
                          "endTime": {
                            "type": "string",
                            "description": "DateTime of termination (may be empty if refresh is progress)",
                            "title": "endTime"
                          },
                          "serviceExceptionJson": {
                            "type": "string",
                            "description": "Failure error code in json format (not empty only on error).",
                            "title": "serviceExceptionJson"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the refresh",
                            "title": "status"
                          },
                          "requestId": {
                            "type": "string",
                            "description": "The identifier of the Refresh request.",
                            "title": "requestId"
                          }
                        },
                        "description": "lastRefresh"
                      },
                      "refreshSchedule": {
                        "type": "object",
                        "properties": {
                          "days": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Days to execute the refresh",
                            "title": "days"
                          },
                          "times": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Times to execute the refresh within each day",
                            "title": "times"
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "Is the refresh enabled",
                            "title": "enabled"
                          },
                          "localTimeZoneId": {
                            "type": "string",
                            "description": "The ID of the time zone to use",
                            "title": "localTimeZoneId"
                          },
                          "notifyOption": {
                            "type": "string",
                            "description": "Notification option at scheduled refresh termination",
                            "title": "notifyOption"
                          }
                        },
                        "description": "refreshSchedule"
                      },
                      "configuredBy": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "configuredBy",
                        "title": "configuredBy"
                      }
                    }
                  },
                  "description": "value",
                  "title": "value"
                }
              }
            }
          }
        },
        "summary": "Admin - Get Refreshables",
        "description": "Returns a list of refreshables for the organization within a capacity.",
        "operationId": "GetRefreshables",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Number of records to return",
            "description": "Number of records to return"
          }
        ]
      }
    },
    "/v1.0/myorg/capacities": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Capacities",
        "operationId": "GetCapacities",
        "parameters": [],
        "description": "Get Capacities"
      }
    },
    "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/refreshes": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get Refresh History In Group",
        "description": "Get Refresh History In Group",
        "operationId": "GetRefreshHistoryInGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "x-ms-summary": "ID of Group",
            "x-ms-url-encoding": "single",
            "description": "ID of Group",
            "type": "string"
          },
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "x-ms-summary": "ID of Dataset",
            "x-ms-url-encoding": "single",
            "description": "ID of Dataset",
            "type": "string"
          }
        ]
      }
    },
    "/v1.0/myorg/gateways": {
      "get": {
        "responses": {
          "200": {
            "description": "Gateways",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster. In such cases, gateway ID is similar to gateway cluster ID.",
                        "title": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "The gateway name",
                        "title": "name"
                      },
                      "type": {
                        "type": "string",
                        "description": "The gateway type",
                        "title": "type"
                      },
                      "publicKey": {
                        "type": "object",
                        "properties": {
                          "exponent": {
                            "type": "string",
                            "description": "The public key exponent",
                            "title": "exponent"
                          },
                          "modulus": {
                            "type": "string",
                            "description": "The public key modulus",
                            "title": "modulus"
                          }
                        },
                        "description": "The gateway public key",
                        "title": "publicKey"
                      }
                    }
                  },
                  "description": "Gateways",
                  "title": "value"
                }
              }
            }
          }
        },
        "summary": "Get On Prem Gateways",
        "description": "Get On Prem Gateways: Note this API requires gateway admin permissions",
        "operationId": "GetGateways",
        "parameters": []
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "tokenUrl": "https://login.microsoftonline.com/0ad613d9-63e6-474f-90a1-aa27f5ec3fe3/oauth2/v2.0/token",
      "scopes": {
        "Tenant.Read.All Capacity.Read.All Dataset.Read.All": "Tenant.Read.All Capacity.Read.All Dataset.Read.All"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "openid"
      ]
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://docs.microsoft.com/en-us/rest/api/power-bi/admin"
    },
    {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://privacy.microsoft.com/en-gb/privacy#:~:text=We%20are%20working%20to%20earn%20your%20trust%20every,through%20strong%20security%20and%20encryption.%20More%20items...%20"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Intelligence"
    }
  ]
}
