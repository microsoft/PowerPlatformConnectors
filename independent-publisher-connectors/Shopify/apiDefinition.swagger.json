{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Shopify",
        "description": "REST interface for Shopify's merchants to receive, process, and manage their orders.",
        "contact": {
            "name": "Microsoft Dynamics",
            "url": "https://dynamics.microsoft.com/en-us/support/",
            "email": "bennettray@microsoft.com"
        }
    },
    "host": "yourstoreurl.myshopify.com",
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/admin/api/2021-04/orders.json": {
            "get": {
                "summary": "Retrieves a list of orders.",
                "description": "Retrieves a list of orders that meet the specified criteria",
                "tags": [
                    "orders",
                    "order",
                    "orders/order"
                ],
                "operationId": "RetrieveAllOrders",
                "deprecated": false,
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Retrieve only orders specified by a comma-separated list of order IDs.",
                        "x-ms-summary": "Order IDs"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "The maximum number of results to show on a page.",
                        "x-ms-summary": "Limit"
                    },
                    {
                        "name": "since_id",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show orders after the specified ID.",
                        "x-ms-summary": "Since ID"
                    },
                    {
                        "name": "created_at_min",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show orders created at or after date (format: 2014-04-25T16:15:47-04:00).",
                        "x-ms-summary": "Created at min"
                    },
                    {
                        "name": "created_at_max",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show orders created at or before date (format: 2014-04-25T16:15:47-04:00).",
                        "x-ms-summary": "Created at max"
                    },
                    {
                        "name": "updated_at_min",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show orders last updated at or after date (format: 2014-04-25T16:15:47-04:00).",
                        "x-ms-summary": "Updated at min"
                    },
                    {
                        "name": "updated_at_max",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show orders last updated at or before date (format: 2014-04-25T16:15:47-04:00).",
                        "x-ms-summary": "Updated at max"
                    },
                    {
                        "name": "processed_at_min",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show orders imported at or after date (format: 2014-04-25T16:15:47-04:00).",
                        "x-ms-summary": "Processed at min"
                    },
                    {
                        "name": "processed_at_max",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show orders imported at or before date (format: 2014-04-25T16:15:47-04:00).",
                        "x-ms-summary": "Processed at max"
                    },
                    {
                        "name": "attribution_app_id",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show orders attributed to a certain app, specified by the app ID.",
                        "x-ms-summary": "Attribution App ID"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Filter orders by their status.",
                        "x-ms-summary": "Order status"
                    },
                    {
                        "name": "financial_status",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Filter orders by their financial status.",
                        "x-ms-summary": "Financial status"
                    },
                    {
                        "name": "fulfillment_status",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Filter orders by their fulfillment status.",
                        "x-ms-summary": "Fulfillment status"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Retrieve only certain fields, specified by a comma-separated list of fields.",
                        "x-ms-summary": "Fields"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Field and direction to sort orders. To specify the direction, add ' asc' or ' desc' to the end of the query parameter. E.g. 'order=updated_at asc'.",
                        "x-ms-summary": "Sequence order of records"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orders": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/order"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "default"
                    }
                }
            }
        },
        "/admin/api/2021-04/orders/{order_id}.json": {
            "put": {
                "description": "Updates an order with the provided information.",
                "summary": "Updates an order",
                "tags": [
                    "orders",
                    "order",
                    "orders/order"
                ],
                "operationId": "UpdateAnOrder",
                "deprecated": false,
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "ID of the order which will update.",
                        "x-ms-summary": "Order ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "description": "",
                        "schema": {
                            "example": {
                                "order": {
                                    "id": 450789469,
                                    "tags": "External, Inbound, Outbound"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/order"
                        }
                    },
                    "default": {
                        "description": "default"
                    }
                }
            }
        },
        "/admin/api/2021-04/orders/{order_id}/cancel.json": {
            "post": {
                "description": "Cancel an order by ID.",
                "summary": "Cancel an order",
                "tags": [
                    "orders",
                    "order",
                    "orders/order"
                ],
                "operationId": "CancelAnOrder",
                "deprecated": false,
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "ID of the order that will be cancelled.",
                        "x-ms-summary": "Order ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "The amount to refund. If set, Shopify attempts to void or refund the payment, depending on its status. Shopify refunds through a manual gateway in cases where the original transaction was not made in Shopify. Refunds through a manual gateway are recorded as a refund on Shopify, but the customer is not refunded.",
                        "x-ms-summary": "Refund The actual amount"
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "The currency of the refund that's issued when the order is canceled. Required for multi-currency orders whenever the amount property is provided.",
                        "x-ms-summary": "Refund currency"
                    },
                    {
                        "name": "restock",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Whether to restock refunded items back to your store's inventory.",
                        "x-ms-summary": "Restock refunded items"
                    },
                    {
                        "name": "reason",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "The reason for the order cancellation. Valid values: customer, inventory, fraud, declined, and other.",
                        "x-ms-summary": "Order cancellation reason"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Whether to send an email to the customer notifying them of the cancellation.",
                        "x-ms-summary": "Cancellation email"
                    },
                    {
                        "name": "refund",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "The refund transactions to perform.",
                        "x-ms-summary": "Refund"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "description": "",
                        "schema": {
                            "example": {},
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/order"
                        }
                    },
                    "default": {
                        "description": "default"
                    }
                }
            }
        },
        "/admin/api/2021-04/customers.json": {
            "get": {
                "summary": "Retrieves a list of customers.",
                "description": "Retrieves a list of customers that meet the specified criteria",
                "tags": [
                    "customers",
                    "customer",
                    "customers/customer"
                ],
                "operationId": "RetrieveListOfCustomers",
                "deprecated": false,
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Restrict results to customers specified by a comma-separated list of IDs.",
                        "x-ms-summary": "Customer IDs"
                    },
                    {
                        "name": "since_id",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Restrict results after the specified ID.",
                        "x-ms-summary": "Since ID"
                    },
                    {
                        "name": "created_at_min",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show customers created after a specified date (format: 2014-04-25T16:15:47-04:00).",
                        "x-ms-summary": "Created at min"
                    },
                    {
                        "name": "created_at_max",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show customers created before a specified date (format: 2014-04-25T16:15:47-04:00).",
                        "x-ms-summary": "Created at max"
                    },
                    {
                        "name": "updated_at_min",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show customers last updated after a specified date (format: 2014-04-25T16:15:47-04:00).",
                        "x-ms-summary": "Updated at min"
                    },
                    {
                        "name": "updated_at_max",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show customers last updated before a specified date (format: 2014-04-25T16:15:47-04:00).",
                        "x-ms-summary": "Updated at max"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "The maximum number of results to show. (default: 50)(maximum: 250).",
                        "x-ms-summary": "Limit"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Show only certain fields, specified by a comma-separated list of fields.",
                        "x-ms-summary": "Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "customers": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/customer"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "default"
                    }
                }
            }
        }
    },
    "x-ms-connector-metadata": [
        {
            "propertyName": "Website",
            "propertyValue": "https://www.shopify.com/"
        },
        {
            "propertyName": "Privacy policy",
            "propertyValue": "https://www.shopify.com/legal/privacy"
        },
        {
            "propertyName": "Categories",
            "propertyValue": "Productivity"
        }
    ],
    "definitions": {
        "customers": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/customer"
            },
            "description": "Customers"
        },
        "orders": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/order"
            },
            "description": "Orders"
        },
        "order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of the app that created the order."
                },
                "email": {
                    "type": "string",
                    "description": "The customer's email address."
                },
                "closed_at": {
                    "type": "string",
                    "description": "The date and time (ISO 8601 format) when the order was closed. Returns null if the order isn't closed."
                },
                "created_at": {
                    "type": "string",
                    "description": "The three-letter code (ISO 4217 format) for the shop currency."
                },
                "updated_at": {
                    "type": "string",
                    "description": "The date and time (ISO 8601 format) when the order was last modified."
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The order's position in the shop's count of orders. Numbers are sequential and start at 1."
                },
                "note": {
                    "type": "string",
                    "description": "An optional note that a shop owner can attach to the order."
                },
                "token": {
                    "type": "string",
                    "description": "A unique value when referencing the order."
                },
                "gateway": {
                    "type": "string",
                    "description": "The payment gateway used."
                },
                "test": {
                    "type": "boolean",
                    "description": "Whether this is a test order."
                },
                "total_price": {
                    "type": "string",
                    "description": "The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency. Must be positive."
                },
                "subtotal_price": {
                    "type": "string",
                    "description": "The price of the order in the shop currency after discounts but before shipping, duties, taxes, and tips."
                },
                "total_weight": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The sum of all line item weights in grams. The sum is not adjusted as items are removed from the order."
                },
                "total_tax": {
                    "type": "string",
                    "description": "The sum of all the taxes applied to the order in the shop currency. Must be positive."
                },
                "taxes_included": {
                    "type": "boolean",
                    "description": "Whether taxes are included in the order subtotal."
                },
                "currency": {
                    "type": "string",
                    "description": "The three-letter code (ISO 4217 format) for the shop currency."
                },
                "financial_status": {
                    "type": "string",
                    "description": "The status of payments associated with the order. Can only be set when the order is created."
                },
                "confirmed": {
                    "type": "boolean",
                    "description": "Order confirmed."
                },
                "total_discounts": {
                    "type": "string",
                    "description": "The total discounts applied to the price of the order in the shop currency."
                },
                "total_line_items_price": {
                    "type": "string",
                    "description": "The sum of all line item prices in the shop currency."
                },
                "cart_token": {
                    "type": "string",
                    "description": "A unique value when referencing the cart that's associated with the order."
                },
                "buyer_accepts_marketing": {
                    "type": "boolean",
                    "description": "Whether the customer consented to receive email updates from the shop."
                },
                "name": {
                    "type": "string",
                    "description": "The order name, generated by combining the order_number property with the order prefix and suffix that are set in the merchant's general settings."
                },
                "referring_site": {
                    "type": "string",
                    "description": "The website where the customer clicked a link to the shop."
                },
                "landing_site": {
                    "type": "string",
                    "description": "The URL for the page where the buyer landed when they entered the shop."
                },
                "cancelled_at": {
                    "type": "string",
                    "description": "The date and time when the order was canceled. Returns null if the order isn't canceled."
                },
                "cancel_reason": {
                    "type": "string",
                    "description": "The reason why the order was canceled."
                },
                "total_price_usd": {
                    "type": "string",
                    "description": "Total price usd."
                },
                "checkout_token": {
                    "type": "string",
                    "description": "A unique value when referencing the checkout that's associated with the order."
                },
                "reference": {
                    "type": "string",
                    "description": "Order reference."
                },
                "user_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of the user logged into Shopify POS who processed the order, if applicable."
                },
                "location_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of the physical location where the order was processed. If you need to reference the location against an order, then use the FulfillmentOrder resource."
                },
                "source_identifier": {
                    "type": "string",
                    "description": "Source identifier."
                },
                "source_url": {
                    "type": "string",
                    "description": "Source url."
                },
                "processed_at": {
                    "type": "string",
                    "description": "The date and time (ISO 8601 format) when an order was processed."
                },
                "device_id": {
                    "type": "string",
                    "description": "The ID for the device."
                },
                "phone": {
                    "type": "string",
                    "description": "The customer's phone number for receiving SMS notifications."
                },
                "customer_locale": {
                    "type": "string",
                    "description": "The two or three-letter language code, optionally followed by a region modifier."
                },
                "app_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of the app that created the order."
                },
                "browser_ip": {
                    "type": "string",
                    "description": "The IP address of the browser used by the customer when they placed the order."
                },
                "landing_site_ref": {
                    "type": "string",
                    "description": "Landing site ref."
                },
                "order_number": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The order's position in the shop's count of orders starting at 1001."
                },
                "discount_applications": {
                    "$ref": "#/definitions/discount_applications"
                },
                "discount_codes": {
                    "$ref": "#/definitions/discount_codes"
                },
                "note_attributes": {
                    "$ref": "#/definitions/note_attributes"
                },
                "payment_gateway_names": {
                    "$ref": "#/definitions/payment_gateway_names"
                },
                "processing_method": {
                    "type": "string",
                    "description": "How the payment was processed."
                },
                "checkout_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Checkout id."
                },
                "source_name": {
                    "type": "string",
                    "description": "Where the order originated."
                },
                "fulfillment_status": {
                    "type": "string",
                    "description": "The order's status in terms of fulfilled line items."
                },
                "tax_lines": {
                    "$ref": "#/definitions/tax_lines"
                },
                "tags": {
                    "type": "string",
                    "description": "Tags attached to the order, formatted as a string of comma-separated values. Tags are additional short descriptors, commonly used for filtering and searching."
                },
                "contact_email": {
                    "type": "string",
                    "description": "Contact email."
                },
                "order_status_url": {
                    "type": "string",
                    "description": "The URL pointing to the order status web page, if applicable."
                },
                "presentment_currency": {
                    "type": "string",
                    "description": "The presentment currency that was used to display prices to the customer."
                },
                "total_line_items_price_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The total of all line item prices in shop and presentment currencies."
                },
                "total_discounts_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The total discounts applied to the price of the order in shop and presentment currencies."
                },
                "total_shipping_price_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The total shipping price of the order, excluding discounts and returns, in shop and presentment currencies. If taxes_included is set to true, then total_shipping_price_set includes taxes."
                },
                "subtotal_price_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The subtotal of the order in shop and presentment currencies after discounts but before shipping, duties, taxes, and tips."
                },
                "total_price_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The total price of the order in shop and presentment currencies."
                },
                "total_tax_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The total tax applied to the order in shop and presentment currencies."
                },
                "admin_graphql_api_id": {
                    "type": "string",
                    "description": "Admin graphql api id."
                },
                "shipping_lines": {
                    "$ref": "#/definitions/shipping_lines"
                },
                "billing_address": {
                    "$ref": "#/definitions/billing_address"
                },
                "shipping_address": {
                    "$ref": "#/definitions/shipping_address"
                },
                "client_details": {
                    "$ref": "#/definitions/client_detail"
                },
                "payment_details": {
                    "$ref": "#/definitions/payment_detail"
                },
                "customer": {
                    "$ref": "#/definitions/customer"
                },
                "line_items": {
                    "$ref": "#/definitions/line_items"
                },
                "fulfillments": {
                    "$ref": "#/definitions/fulfillments"
                },
                "refunds": {
                    "$ref": "#/definitions/refunds"
                }
            },
            "description": "Order"
        },
        "customer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A unique identifier for the customer."
                },
                "email": {
                    "type": "string",
                    "description": "The unique email address of the customer. Attempting to assign the same email address to multiple customers returns an error."
                },
                "accepts_marketing": {
                    "type": "boolean",
                    "description": "Whether the customer has consented to receive marketing material via email."
                },
                "created_at": {
                    "type": "string",
                    "description": "The date and time (ISO 8601 format) when the customer was created."
                },
                "updated_at": {
                    "type": "string",
                    "description": "The date and time (ISO 8601 format) when the customer information was last updated."
                },
                "first_name": {
                    "type": "string",
                    "description": "The customer's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The customer's last name."
                },
                "orders_count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of orders associated with this customer."
                },
                "state": {
                    "type": "string",
                    "description": "The state of the customer's account with a shop. Default value: disabled."
                },
                "total_spent": {
                    "type": "string",
                    "description": "The total amount of money that the customer has spent across their order history."
                },
                "last_order_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of the customer's last order."
                },
                "note": {
                    "type": "string",
                    "description": "A note about the customer."
                },
                "verified_email": {
                    "type": "boolean",
                    "description": "Whether the customer has verified their email address."
                },
                "multipass_identifier": {
                    "type": "string",
                    "description": "A unique identifier for the customer that's used with Multipass login."
                },
                "tax_exempt": {
                    "type": "boolean",
                    "description": "Whether the customer is exempt from paying taxes on their order. If true, then taxes won't be applied to an order at checkout. If false, then taxes will be applied at checkout."
                },
                "phone": {
                    "type": "string",
                    "description": "The unique phone number (E.164 format) for this customer. Attempting to assign the same phone number to multiple customers returns an error."
                },
                "tags": {
                    "type": "string",
                    "description": "Tags that the shop owner has attached to the customer, formatted as a string of comma-separated values. A customer can have up to 250 tags. Each tag can have up to 255 characters."
                },
                "last_order_name": {
                    "type": "string",
                    "description": "The name of the customer's last order. This is directly related to the name field on the Order resource."
                },
                "currency": {
                    "type": "string",
                    "description": "The three-letter code (ISO 4217 format) for the currency that the customer used when they paid for their last order."
                },
                "addresses": {
                    "$ref": "#/definitions/addresses"
                },
                "accepts_marketing_updated_at": {
                    "type": "string",
                    "description": "The date and time (ISO 8601 format) when the customer consented or objected to receiving marketing material by email."
                },
                "marketing_opt_in_level": {
                    "type": "string",
                    "description": "The marketing subscription opt-in level that the customer gave when they consented to receive marketing material by email."
                },
                "tax_exemptions": {
                    "type": "array",
                    "items": {},
                    "description": "Whether the customer is exempt from paying specific taxes on their order."
                },
                "admin_graphql_api_id": {
                    "type": "string",
                    "description": "Admin graphql api id."
                },
                "default_address": {
                    "$ref": "#/definitions/default_address",
                    "description": "The default address for the customer."
                }
            },
            "description": "Information about the customer."
        },
        "default_address": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A unique identifier for the address."
                },
                "customer_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A unique identifier for the customer."
                },
                "first_name": {
                    "type": "string",
                    "description": "The customer's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The customer's last name."
                },
                "company": {
                    "type": "string",
                    "description": "The customer's company."
                },
                "address1": {
                    "type": "string",
                    "description": "The first line of the customer's mailing address."
                },
                "address2": {
                    "type": "string",
                    "description": "An additional field for the customer's mailing address."
                },
                "city": {
                    "type": "string",
                    "description": "The customer's city, town, or village."
                },
                "province": {
                    "type": "string",
                    "description": "The customer's region name. Typically a province, a state, or a prefecture."
                },
                "country": {
                    "type": "string",
                    "description": "The customer's country."
                },
                "zip": {
                    "type": "string",
                    "description": "The customer's postal code, also known as zip, postcode, Eircode, etc."
                },
                "phone": {
                    "type": "string",
                    "description": "The customer's phone number at this address."
                },
                "name": {
                    "type": "string",
                    "description": "The customer's first and last names."
                },
                "province_code": {
                    "type": "string",
                    "description": "The two-letter code for the customer's region."
                },
                "country_code": {
                    "type": "string",
                    "description": "The two-letter country code corresponding to the customer's country."
                },
                "country_name": {
                    "type": "string",
                    "description": "The customer's normalized country name."
                },
                "default": {
                    "type": "boolean",
                    "description": "Returns true for each default address."
                }
            }
        },
        "shipping_address": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "The first name of the person associated with the shipping address."
                },
                "address1": {
                    "type": "string",
                    "description": "The street address of the shipping address."
                },
                "phone": {
                    "type": "string",
                    "description": "The phone number at the shipping address."
                },
                "city": {
                    "type": "string",
                    "description": "The city, town, or village of the shipping address."
                },
                "zip": {
                    "type": "string",
                    "description": "The postal code (for example, zip, postcode, or Eircode) of the shipping address."
                },
                "province": {
                    "type": "string",
                    "description": "The name of the region (for example, province, state, or prefecture) of the shipping address."
                },
                "country": {
                    "type": "string",
                    "description": "The name of the country of the shipping address."
                },
                "last_name": {
                    "type": "string",
                    "description": "The last name of the person associated with the shipping address."
                },
                "address2": {
                    "type": "string",
                    "description": "An optional additional field for the street address of the shipping address."
                },
                "company": {
                    "type": "string",
                    "description": "The company of the person associated with the shipping address."
                },
                "latitude": {
                    "type": "number",
                    "format": "float",
                    "description": "The latitude of the shipping address."
                },
                "longitude": {
                    "type": "number",
                    "format": "float",
                    "description": "The longitude of the shipping address."
                },
                "name": {
                    "type": "string",
                    "description": "The full name of the person associated with the payment method."
                },
                "country_code": {
                    "type": "string",
                    "description": "The two-letter code (ISO 3166-1 format) for the country of the shipping address."
                },
                "province_code": {
                    "type": "string",
                    "description": "The two-letter abbreviation of the region of the shipping address."
                }
            },
            "description": "The mailing address to where the order will be shipped. This address is optional and will not be available on orders that do not require shipping."
        },
        "billing_address": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "The first name of the person associated with the payment method."
                },
                "address1": {
                    "type": "string",
                    "description": "The street address of the billing address."
                },
                "phone": {
                    "type": "string",
                    "description": "The phone number at the billing address."
                },
                "city": {
                    "type": "string",
                    "description": "The city, town, or village of the billing address."
                },
                "zip": {
                    "type": "string",
                    "description": "The postal code (for example, zip, postcode, or Eircode) of the billing address."
                },
                "province": {
                    "type": "string",
                    "description": "The name of the region (for example, province, state, or prefecture) of the billing address."
                },
                "country": {
                    "type": "string",
                    "description": "The name of the country of the billing address."
                },
                "last_name": {
                    "type": "string",
                    "description": "The last name of the person associated with the payment method."
                },
                "address2": {
                    "type": "string",
                    "description": "An optional additional field for the street address of the billing address."
                },
                "company": {
                    "type": "string",
                    "description": "The company of the person associated with the billing address."
                },
                "latitude": {
                    "type": "number",
                    "format": "float",
                    "description": "The latitude of the billing address."
                },
                "longitude": {
                    "type": "number",
                    "format": "float",
                    "description": "The longitude of the billing address."
                },
                "name": {
                    "type": "string",
                    "description": "The full name of the person associated with the payment method."
                },
                "country_code": {
                    "type": "string",
                    "description": "The two-letter code (ISO 3166-1 format) for the country of the billing address."
                },
                "province_code": {
                    "type": "string",
                    "description": "The two-letter abbreviation of the region of the billing address."
                }
            },
            "description": "The mailing address associated with the payment method. This address is an optional field that won't be available on orders that do not require a payment method."
        },
        "addresses": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/default_address"
            },
            "description": "A list of the ten most recently updated addresses for the customer."
        },
        "shipping_line": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A globally-unique identifier."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the shipping method."
                },
                "price": {
                    "type": "string",
                    "description": "The price of this shipping method in the shop currency."
                },
                "code": {
                    "type": "string",
                    "description": "A reference to the shipping method."
                },
                "source": {
                    "type": "string",
                    "description": "The source of the shipping method."
                },
                "phone": {
                    "type": "string",
                    "description": "The phone number at the shipping address."
                },
                "requested_fulfillment_service_id": {
                    "type": "string",
                    "description": "A reference to the fulfillment service that is being requested for the shipping method. Present if the shipping method requires processing by a third party fulfillment service; null otherwise."
                },
                "delivery_category": {
                    "type": "string",
                    "description": "Delivery category."
                },
                "carrier_identifier": {
                    "type": "string",
                    "description": "A reference to the carrier service that provided the rate. Present when the rate was computed by a third-party carrier service."
                },
                "discounted_price": {
                    "type": "string",
                    "description": "The price of the shipping method after line-level discounts have been applied. Doesn't reflect cart-level or order-level discounts."
                },
                "price_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The price of the shipping method in shop and presentment currencies."
                },
                "discounted_price_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The price of the shipping method in both shop and presentment currencies after line-level discounts have been applied."
                },
                "discount_allocations": {
                    "type": "array",
                    "items": {},
                    "description": "An ordered list of amounts allocated by discount applications."
                },
                "tax_lines": {
                    "$ref": "#/definitions/tax_lines"
                }
            }
        },
        "client_detail": {
            "type": "object",
            "properties": {
                "browser_ip": {
                    "type": "string",
                    "description": "The browser IP address."
                },
                "accept_language": {
                    "type": "string",
                    "description": "The languages and locales that the browser understands."
                },
                "user_agent": {
                    "type": "string",
                    "description": "Details of the browsing client, including software and operating versions."
                },
                "session_hash": {
                    "type": "string",
                    "description": "A hash of the session."
                },
                "browser_width": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The browser screen width in pixels, if available."
                },
                "browser_height": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The browser screen height in pixels, if available."
                }
            },
            "description": "Information about the browser that the customer used when they placed their order."
        },
        "payment_detail": {
            "type": "object",
            "properties": {
                "credit_card_bin": {
                    "type": "string",
                    "description": "The issuer identification number (IIN), formerly known as the bank identification number (BIN), of the customer's credit card."
                },
                "avs_result_code": {
                    "type": "string",
                    "description": "The response code from the address verification system (AVS). The code is a single letter."
                },
                "cvv_result_code": {
                    "type": "string",
                    "description": "The response code from the credit card company indicating whether the customer entered the card security code (card verification value) correctly. The code is a single letter or empty string."
                },
                "credit_card_number": {
                    "type": "string",
                    "description": "The customer's credit card number, with most of the leading digits redacted."
                },
                "credit_card_company": {
                    "type": "string",
                    "description": "The name of the company who issued the customer's credit card."
                }
            },
            "description": "An object containing information about the payment."
        },
        "subtotal_tax_discount_price_set": {
            "type": "object",
            "properties": {
                "shop_money": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "string",
                            "description": "The actual amount."
                        },
                        "currency_code": {
                            "type": "string",
                            "description": "In ISO 4217 format."
                        }
                    },
                    "description": "Amount in shop currency."
                },
                "presentment_money": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "string",
                            "description": "The actual amount."
                        },
                        "currency_code": {
                            "type": "string",
                            "description": "In ISO 4217 format."
                        }
                    },
                    "description": "Amount in presentment currency."
                }
            }
        },
        "line_item_property": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The product name."
                },
                "value": {
                    "type": "string",
                    "description": "The product value."
                }
            }
        },
        "line_item_properties": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/line_item_property"
            },
            "description": "Properties."
        },
        "fulfillment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID for the fulfillment."
                },
                "order_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique numeric identifier for the order."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the fulfillment."
                },
                "created_at": {
                    "type": "string",
                    "description": "The date and time when the fulfillment was created."
                },
                "service": {
                    "type": "string",
                    "description": "The type of service used."
                },
                "updated_at": {
                    "type": "string",
                    "description": "The date and time (ISO 8601 format) when the fulfillment was last modified."
                },
                "tracking_company": {
                    "type": "string",
                    "description": "The name of the tracking company."
                },
                "shipment_status": {
                    "type": "string",
                    "description": "The current shipment status of the fulfillment."
                },
                "location_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique identifier of the location that the fulfillment should be processed for."
                },
                "tracking_number": {
                    "type": "string",
                    "description": "A tracking number, provided by the shipping company."
                },
                "tracking_numbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tracking numbers, provided by the shipping company."
                },
                "tracking_url": {
                    "type": "string",
                    "description": "The URL of tracking page for the fulfillment."
                },
                "tracking_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The URLs of tracking pages for the fulfillment."
                },
                "receipt": {
                    "$ref": "#/definitions/receipt"
                },
                "name": {
                    "type": "string",
                    "description": "The uniquely identifying fulfillment name."
                },
                "admin_graphql_api_id": {
                    "type": "string",
                    "description": "Admin graphql api id."
                },
                "line_items": {
                    "$ref": "#/definitions/line_items",
                    "description": "A historical record of each item in the fulfillment"
                }
            }
        },
        "fulfillments": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/fulfillment"
            },
            "description": "An array of fulfillments associated with the order."
        },
        "transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID for the transaction."
                },
                "order_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID for the order that the transaction is associated with."
                },
                "kind": {
                    "type": "string",
                    "description": "The transaction's type."
                },
                "gateway": {
                    "type": "string",
                    "description": "The name of the gateway the transaction was issued through."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the transaction."
                },
                "message": {
                    "type": "string",
                    "description": "A string generated by the payment provider with additional information about why the transaction succeeded or failed."
                },
                "created_at": {
                    "type": "string",
                    "description": "The date and time (ISO 8601 format) when the transaction was created."
                },
                "test": {
                    "type": "boolean",
                    "description": "Whether the transaction is a test transaction."
                },
                "authorization": {
                    "type": "string",
                    "description": "The authorization code associated with the transaction."
                },
                "location_id": {
                    "type": "string",
                    "description": "The ID of the physical location where the transaction was processed."
                },
                "user_id": {
                    "type": "string",
                    "description": "The ID for the user who was logged into the Shopify POS device when the order was processed, if applicable."
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of an associated transaction."
                },
                "processed_at": {
                    "type": "string",
                    "description": "The date and time (ISO 8601 format) when a transaction was processed."
                },
                "device_id": {
                    "type": "string",
                    "description": "The ID for the device."
                },
                "receipt": {
                    "type": "object",
                    "properties": {},
                    "description": "A transaction receipt attached to the transaction by the gateway."
                },
                "error_code": {
                    "type": "string",
                    "description": "A standardized error code, independent of the payment provider."
                },
                "source_name": {
                    "type": "string",
                    "description": "The origin of the transaction. This is set by Shopify and can't be overridden."
                },
                "amount": {
                    "type": "string",
                    "description": "The amount of money included in the transaction."
                },
                "currency": {
                    "type": "string",
                    "description": "The three-letter code (ISO 4217 format) for the currency used for the payment."
                },
                "admin_graphql_api_id": {
                    "type": "string",
                    "description": "Admin graphql api id."
                }
            }
        },
        "transactions": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/transaction"
            },
            "description": "A list of transactions involved in the refund."
        },
        "tax_line": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "string",
                    "description": "The amount of tax to be charged in the shop currency."
                },
                "rate": {
                    "type": "number",
                    "format": "float",
                    "description": "The rate of tax to be applied."
                },
                "title": {
                    "type": "string",
                    "description": "The name of the tax."
                },
                "price_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The price of the line item in shop and presentment currencies."
                }
            }
        },
        "tax_lines": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/tax_line"
            },
            "description": "A list of tax line objects, each of which details a tax applied to the item."
        },
        "refunds": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/refund"
            },
            "description": "Refunds"
        },
        "refund": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique identifier for the refund."
                },
                "order_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of the order, used for API purposes."
                },
                "created_at": {
                    "type": "string",
                    "description": "The date and time (ISO 8601 format) when the refund was created."
                },
                "note": {
                    "type": "string",
                    "description": "An optional note attached to a refund."
                },
                "user_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique identifier of the user who performed the refund."
                },
                "processed_at": {
                    "type": "string",
                    "description": "The date and time (ISO 8601 format) when the refund was imported."
                },
                "restock": {
                    "type": "boolean",
                    "description": "Whether to add the line items back to the store's inventory."
                },
                "admin_graphql_api_id": {
                    "type": "string",
                    "description": "Admin graphql api id."
                },
                "transactions": {
                    "$ref": "#/definitions/transactions"
                },
                "order_adjustments": {
                    "type": "array",
                    "items": {},
                    "description": "A list of order adjustments attached to the refund."
                }
            }
        },
        "refund_line_item": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": " The unique identifier of the line item in the refund."
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The quantity of the associated line item that was returned."
                },
                "line_item_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of the related line item in the order."
                },
                "location_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique identifier of the location where the items will be restocked."
                },
                "restock_type": {
                    "type": "string",
                    "description": "How this refund line item affects inventory levels."
                },
                "subtotal": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The subtotal of the refund line item."
                },
                "total_tax": {
                    "type": "number",
                    "format": "float",
                    "description": "The total tax of the refund line item."
                },
                "subtotal_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The subtotal of the line item in shop and presentment currencies."
                },
                "total_tax_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The total tax of the line item in shop and presentment currencies."
                },
                "line_item": {
                    "$ref": "#/definitions/line_item",
                    "description": "A historical record of each item in the fulfillment"
                }
            }
        },
        "refund_line_items": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/refund_line_item"
            },
            "description": "A list of line item IDs, quantities to refund, and restock instructions."
        },
        "line_item": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of the line item."
                },
                "variant_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of the product variant."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the product."
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of items that were purchased."
                },
                "sku": {
                    "type": "string",
                    "description": "The item's SKU (stock keeping unit)."
                },
                "variant_title": {
                    "type": "string",
                    "description": "The title of the product variant."
                },
                "vendor": {
                    "type": "string",
                    "description": "The name of the item's supplier."
                },
                "fulfillment_service": {
                    "type": "string",
                    "description": "The service provider that's fulfilling the item."
                },
                "product_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of the product that the line item belongs to."
                },
                "requires_shipping": {
                    "type": "boolean",
                    "description": "Whether the item requires shipping."
                },
                "taxable": {
                    "type": "boolean",
                    "description": "Whether the item is taxable."
                },
                "gift_card": {
                    "type": "boolean",
                    "description": "Whether the line item is a gift card."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the product variant."
                },
                "variant_inventory_management": {
                    "type": "string",
                    "description": "The name of the inventory management service."
                },
                "properties": {
                    "$ref": "#/definitions/line_item_properties"
                },
                "product_exists": {
                    "type": "boolean",
                    "description": "Whether the product exists."
                },
                "fulfillable_quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount available to fulfill."
                },
                "grams": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The weight of the item in grams."
                },
                "price": {
                    "type": "string",
                    "description": "The price of the item before discounts have been applied in the shop currency."
                },
                "total_discount": {
                    "type": "string",
                    "description": "The total amount of the discount allocated to the line item in the shop currency."
                },
                "fulfillment_status": {
                    "type": "string",
                    "description": "The status of an order in terms of the line items being fulfilled."
                },
                "price_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The price of the line item in shop and presentment currencies."
                },
                "total_discount_set": {
                    "$ref": "#/definitions/subtotal_tax_discount_price_set",
                    "description": "The total amount allocated to the line item in the presentment currency."
                },
                "discount_allocations": {
                    "type": "array",
                    "items": {},
                    "description": "An ordered list of amounts allocated by discount applications."
                },
                "admin_graphql_api_id": {
                    "type": "string",
                    "description": "Admin graphql api id."
                },
                "tax_lines": {
                    "$ref": "#/definitions/tax_lines"
                }
            },
            "description": "A list of line item objects, each containing information about an item in the order."
        },
        "line_items": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/line_item"
            }
        },
        "shipping_lines": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/shipping_line"
            },
            "description": "Details of which shipping method used."
        },
        "payment_gateway_names": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "The list of payment gateways used for the order."
        },
        "note_attribute": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Note attribute name."
                },
                "value": {
                    "type": "string",
                    "description": "Note attribute value."
                }
            }
        },
        "note_attributes": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/note_attribute"
            },
            "description": "Extra information that is added to the order."
        },
        "discount_code": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "When the associated discount application is of type code, this property returns the discount code that was entered at checkout."
                },
                "amount": {
                    "type": "string",
                    "description": "The amount that's deducted from the order total. When you create an order, this value is the percentage or monetary amount to deduct."
                },
                "type": {
                    "type": "string",
                    "description": "The type of discount."
                }
            }
        },
        "discount_codes": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/discount_code"
            },
            "description": "A list of discounts applied to the order."
        },
        "discount_application": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The discount application type."
                },
                "value": {
                    "type": "string",
                    "description": "The value of the discount application as a decimal. This represents the intention of the discount application."
                },
                "value_type": {
                    "type": "string",
                    "description": "The type of the value."
                },
                "allocation_method": {
                    "type": "string",
                    "description": "The method by which the discount application value has been allocated to entitled lines."
                },
                "target_selection": {
                    "type": "string",
                    "description": "The lines on the order, of the type defined by target_type, that the discount is allocated over."
                },
                "target_type": {
                    "type": "string",
                    "description": "The type of line on the order that the discount is applicable on."
                },
                "code": {
                    "type": "string",
                    "description": "The discount code that was used to apply the discount. Available only for discount code applications."
                }
            }
        },
        "discount_applications": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/discount_application"
            },
            "description": "The description of the discount application, as defined by the merchant or the Shopify Script."
        },
        "receipt": {
            "type": "object",
            "properties": {
                "testcase": {
                    "type": "boolean",
                    "description": "Whether the fulfillment was a testcase."
                },
                "authorization": {
                    "type": "string",
                    "description": "The authorization code."
                }
            },
            "description": "A text field that provides information about the receipt."
        }
    },
    "parameters": {},
    "responses": {},
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "in": "header",
            "name": "X-Shopify-Access-Token"
        }
    },
    "security": []
}