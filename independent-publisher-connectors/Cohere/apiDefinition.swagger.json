{
  "swagger": "2.0",
  "info": {
    "title": "Cohere",
    "description": "Cohere is making natural language processing part of every developer's toolkit. Harness the power of language understanding. Join the developers and businesses who are using Cohere to generate, categorize and organize text at a scale that was previously unimaginable.",
    "version": "1.0",
    "contact": {
      "name": "Troy Taylor",
      "url": "https://www.hitachisolutions.com",
      "email": "ttaylor@hitachisolutions.com"
    }
  },
  "host": "api.cohere.ai",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/generate": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier.",
                  "title": "ID"
                },
                "generations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier.",
                        "title": "ID"
                      },
                      "text": {
                        "type": "string",
                        "description": "The text.",
                        "title": "Text"
                      }
                    }
                  },
                  "title": "Generations"
                },
                "prompt": {
                  "type": "string",
                  "description": "The prompt.",
                  "title": "Prompt"
                }
              }
            }
          }
        },
        "summary": "Generate text",
        "description": "This action generates realistic text conditioned on a given input.",
        "operationId": "GeneratePost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "prompt": {
                  "type": "string",
                  "description": "The prompt.",
                  "title": "Prompt"
                },
                "model": {
                  "type": "string",
                  "description": "The model.",
                  "title": "Model",
                  "enum": [
                    "medium",
                    "xlarge"
                  ]
                },
                "num_generations": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of generations.",
                  "title": "Num Generations",
                  "default": 1,
                  "minimum": 1,
                  "maximum": 5
                },
                "max_tokens": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of tokens.",
                  "title": "Max Tokens"
                },
                "preset": {
                  "type": "string",
                  "description": "The preset.",
                  "title": "Preset"
                },
                "temperature": {
                  "type": "number",
                  "format": "float",
                  "description": "The temperature.",
                  "title": "Temperature"
                },
                "k": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The k value.",
                  "title": "k",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 500
                },
                "p": {
                  "type": "number",
                  "format": "float",
                  "description": "The p value.",
                  "title": "p",
                  "default": 0.75
                },
                "frequency_penalty": {
                  "type": "number",
                  "format": "float",
                  "description": "The frequency penalty.",
                  "title": "Frequency Penalty"
                },
                "presence_penalty": {
                  "type": "number",
                  "format": "float",
                  "description": "The presence penalty.",
                  "title": "Presence Penalty"
                },
                "end_sequences": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The end sequences.",
                  "title": "End Sequences"
                },
                "stop_sequences": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The stop sequences.",
                  "title": "Stop Sequences"
                },
                "return_likelihoods": {
                  "type": "string",
                  "description": "The return likelihoods.",
                  "title": "Return Likelihoods",
                  "default": "NONE",
                  "enum": [
                    "NONE",
                    "GENERATION",
                    "ALL"
                  ]
                },
                "truncate": {
                  "type": "string",
                  "description": "The truncate.",
                  "title": "Truncate",
                  "enum": [
                    "NONE",
                    "START",
                    "END"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "/embed": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier.",
                  "title": "ID"
                },
                "texts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The texts.",
                  "title": "Texts"
                },
                "embeddings": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "number",
                      "format": "float"
                    }
                  },
                  "description": "The embeddings.",
                  "title": "Embeddings"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "api_version": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "description": "The version.",
                          "title": "Version"
                        },
                        "is_deprecated": {
                          "type": "boolean",
                          "description": "Whether is deprecated.",
                          "title": "Is Deprecated"
                        }
                      },
                      "title": "API Version"
                    }
                  },
                  "title": "Meta"
                }
              }
            }
          }
        },
        "summary": "Generate text embeddings",
        "description": "Returns text embeddings which are lists of floating point numbers that captures semantic information about the text that it represents.",
        "operationId": "EmbedPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "texts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The texts.",
                  "title": "Texts"
                },
                "model": {
                  "type": "string",
                  "description": "The model.",
                  "title": "Model",
                  "default": "large",
                  "enum": [
                    "large",
                    "small"
                  ]
                },
                "truncate": {
                  "type": "string",
                  "description": "The truncate.",
                  "title": "Truncate",
                  "enum": [
                    "NONE",
                    "START",
                    "END"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "/classify": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier.",
                  "title": "ID"
                },
                "classifications": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier.",
                        "title": "ID"
                      },
                      "input": {
                        "type": "string",
                        "description": "The input.",
                        "title": "Input"
                      },
                      "prediction": {
                        "type": "string",
                        "description": "The prediction.",
                        "title": "Prediction"
                      },
                      "confidence": {
                        "type": "number",
                        "format": "float",
                        "description": "The confidence.",
                        "title": "Confidence"
                      },
                      "confidences": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "option": {
                              "type": "string",
                              "description": "The option.",
                              "title": "Option"
                            },
                            "confidence": {
                              "type": "number",
                              "format": "float",
                              "description": "The confidence.",
                              "title": "Confidence"
                            }
                          }
                        },
                        "title": "Confidences"
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "Not spam": {
                            "type": "object",
                            "properties": {
                              "confidence": {
                                "type": "number",
                                "format": "float",
                                "description": "The confidence.",
                                "title": "Confidence"
                              }
                            },
                            "description": "Not spam"
                          },
                          "Spam": {
                            "type": "object",
                            "properties": {
                              "confidence": {
                                "type": "number",
                                "format": "float",
                                "description": "The confidence.",
                                "title": "Confidence"
                              }
                            },
                            "title": "Spam"
                          }
                        },
                        "title": "labels"
                      }
                    }
                  },
                  "title": "Classifications"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "api_version": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "description": "The version.",
                          "title": "Version"
                        },
                        "is_deprecated": {
                          "type": "boolean",
                          "description": "Whether is deprecated.",
                          "title": "Is Deprecated"
                        }
                      },
                      "title": "API Version"
                    }
                  },
                  "title": "Meta"
                }
              }
            }
          }
        },
        "summary": "Generate classification",
        "description": "Creates a prediction about which label fits the specified text inputs best.",
        "operationId": "ClassifyPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The inputs.",
                  "title": "Inputs"
                },
                "model": {
                  "type": "string",
                  "description": "The model.",
                  "title": "Model",
                  "default": "large",
                  "enum": [
                    "large",
                    "small",
                    "multilingual-22-12"
                  ]
                },
                "examples": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "description": "The text.",
                        "title": "Text"
                      },
                      "label": {
                        "type": "string",
                        "description": "The label.",
                        "title": "Label"
                      }
                    }
                  },
                  "title": "Examples"
                },
                "preset": {
                  "type": "string",
                  "description": "The preset.",
                  "title": "Preset"
                },
                "truncate": {
                  "type": "string",
                  "description": "The truncate.",
                  "title": "Truncate",
                  "enum": [
                    "NONE",
                    "START",
                    "END"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "/tokenize": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "tokens": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": "The tokens.",
                  "title": "Tokens"
                },
                "token_strings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The token strings.",
                  "title": "Token Strings"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "api_version": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "description": "The version.",
                          "title": "Version"
                        },
                        "is_deprecated": {
                          "type": "boolean",
                          "description": "Whether is deprecated.",
                          "title": "Is Deprecated"
                        }
                      },
                      "title": "API Version"
                    }
                  },
                  "title": "Meta"
                }
              }
            }
          }
        },
        "summary": "Generate tokens",
        "description": "Splits input text into smaller units called tokens using byte-pair encoding (BPE).",
        "operationId": "TokenPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "description": "The text.",
                  "title": "Text"
                }
              }
            }
          }
        ]
      }
    },
    "/detokenize": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "description": "The text.",
                  "title": "Text"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "api_version": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "description": "The version.",
                          "title": "Version"
                        },
                        "is_deprecated": {
                          "type": "boolean",
                          "description": "Whether is deprecated.",
                          "title": "Is Deprecated"
                        }
                      },
                      "title": "API Version"
                    }
                  },
                  "title": "Meta"
                }
              }
            }
          }
        },
        "summary": "Generate detokenized text",
        "description": "Converts tokens using byte-pair encoding and returns their text representation.",
        "operationId": "DetokenPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "tokens": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": "The tokens.",
                  "title": "Tokens"
                }
              }
            }
          }
        ]
      }
    },
    "/detect-language": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier.",
                  "title": "ID"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "language_code": {
                        "type": "string",
                        "description": "The language code.",
                        "title": "Language Code"
                      },
                      "language_name": {
                        "type": "string",
                        "description": "The language name.",
                        "title": "Language Name"
                      }
                    }
                  },
                  "title": "Results"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "api_version": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "description": "The version.",
                          "title": "Version"
                        },
                        "is_deprecated": {
                          "type": "boolean",
                          "description": "Whether is deprecated.",
                          "title": "Is Deprecated"
                        }
                      },
                      "title": "API Version"
                    }
                  },
                  "title": "Meta"
                }
              }
            }
          }
        },
        "summary": "Identify language",
        "description": "Detects which language each of the provided texts is written in.",
        "operationId": "LanguagePost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "texts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The texts.",
                  "title": "Texts"
                }
              }
            }
          }
        ]
      }
    },
    "/summarize": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier.",
                  "title": "ID"
                },
                "summary": {
                  "type": "string",
                  "description": "The summary.",
                  "title": "Summary"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "api_version": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "description": "The version.",
                          "title": "Version"
                        },
                        "is_deprecated": {
                          "type": "boolean",
                          "description": "Whether is deprecated.",
                          "title": "Is Deprecated"
                        }
                      },
                      "title": "API Version"
                    }
                  },
                  "title": "Meta"
                }
              }
            }
          }
        },
        "summary": "Summarize text",
        "description": "Generates a summary in English for a given text.",
        "operationId": "SummarizePost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "string",
                  "description": "The length.",
                  "title": "Length",
                  "default": "short",
                  "enum": [
                    "short",
                    "medium",
                    "long"
                  ]
                },
                "format": {
                  "type": "string",
                  "description": "The format.",
                  "title": "Format",
                  "default": "paragraph",
                  "enum": [
                    "paragraph",
                    "bullet"
                  ]
                },
                "model": {
                  "type": "string",
                  "description": "The model.",
                  "title": "Model",
                  "default": "summarize-medium",
                  "enum": [
                    "summarize-medium",
                    "summarize-xlarge"
                  ]
                },
                "extractiveness": {
                  "type": "string",
                  "description": "The extractiveness.",
                  "title": "Extractiveness",
                  "default": "low",
                  "enum": [
                    "low",
                    "medium",
                    "high"
                  ]
                },
                "temperature": {
                  "type": "number",
                  "format": "float",
                  "description": "The temperature.",
                  "title": "Temperature"
                },
                "text": {
                  "type": "string",
                  "description": "The text.",
                  "title": "Text"
                }
              }
            }
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://cohere.ai/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://cohere.ai/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI"
    }
  ]
}
