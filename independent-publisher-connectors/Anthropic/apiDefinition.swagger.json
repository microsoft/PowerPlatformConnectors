{
  "swagger": "2.0",
  "info": {
    "title": "Anthropic",
    "description": "Claude is a large language model (LLM) built by Anthropic. It's trained to be a helpful assistant in a conversational tone.",
    "version": "1.3",
    "contact": {
      "name": "Troy Taylor",
      "url": "https://www.hitachisolutions.com",
      "email": "ttaylor@hitachisolutions.com"
    },
    "x-ms-keywords": [
      "Anthropic",
      "Claude",
      "AI",
      "LLM",
      "prompt",
      "message"
    ]
  },
  "host": "api.anthropic.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/complete": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "completion": {
                  "type": "string",
                  "description": "The completion.",
                  "title": "Completion"
                },
                "stop": {
                  "type": "string",
                  "description": "The stop.",
                  "title": "Stop"
                },
                "stop_reason": {
                  "type": "string",
                  "description": "The stop reason.",
                  "title": "Stop Reason"
                },
                "truncated": {
                  "type": "boolean",
                  "description": "Whether truncated.",
                  "title": "Truncated"
                },
                "log_id": {
                  "type": "string",
                  "description": "The log identifier.",
                  "title": "Log ID"
                },
                "model": {
                  "type": "string",
                  "description": "The model.",
                  "title": "Model"
                },
                "exception": {
                  "type": "string",
                  "description": "The exception.",
                  "title": "Exception"
                }
              }
            }
          }
        },
        "summary": "Create a text completion",
        "description": "Send a prompt to Claude for completion.",
        "operationId": "ClaudePost",
        "deprecated": true,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "prompt": {
                  "type": "string",
                  "description": "The prompt you want Claude to complete.",
                  "title": "Prompt"
                },
                "model": {
                  "type": "string",
                  "description": "The version of Claude answering your request.",
                  "title": "Model",
                  "default": "claude-3-5-sonnet-20240620",
                  "enum": [
                    "claude-3-5-sonnet-20240620",
                    "claude-3-opus-20240229",
                    "claude-3-sonnet-20240229",
                    "claude-3-haiku-20240307"
                  ]
                },
                "max_tokens_to_sample": {
                  "type": "integer",
                  "format": "int32",
                  "description": "A maximum number of tokens to generate before stopping.",
                  "title": "Max Tokens To Sample"
                },
                "stop_sequences": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of strings upon which to stop generating. You probably want [\"\n\nHuman:\"], as that's the cue for the next turn in the dialog agent.",
                  "title": "Stop Sequences"
                },
                "stream": {
                  "type": "boolean",
                  "description": "Whether to incrementally stream the response using SSE.",
                  "title": "Stream"
                },
                "temperature": {
                  "type": "number",
                  "format": "float",
                  "description": "Amount of randomness injected into the response. Ranges from 0 to 1. Use temp closer to 0 for analytical / multiple choice, and temp closer to 1 for creative and generative tasks.",
                  "title": "Temperature"
                },
                "top_k": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Only sample from the top K options for each subsequent token.",
                  "title": "Top K"
                },
                "top_p": {
                  "type": "number",
                  "format": "float",
                  "description": "Does nucleus sampling, in which we compute the cumulative distribution over all the options for each subsequent token in decreasing probability order and cut it off once it reaches a particular probability specified by top_p.",
                  "title": "Top P"
                }
              },
              "required": [
                "prompt",
                "max_tokens_to_sample"
              ]
            }
          }
        ],
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "ClaudePost",
              "x-ms-require-user-confirmation": true
            }
          ]
        }
      }
    },
    "/v1/messages": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "completion": {
                  "type": "string",
                  "description": "",
                  "title": "completion"
                },
                "id": {
                  "type": "string",
                  "description": "",
                  "title": "id"
                },
                "model": {
                  "type": "string",
                  "description": "",
                  "title": "model"
                },
                "stop_reason": {
                  "type": "string",
                  "description": "",
                  "title": "stop_reason"
                },
                "type": {
                  "type": "string",
                  "description": "",
                  "title": "type"
                }
              }
            }
          }
        },
        "summary": "Create a message",
        "description": "Send a prompt to Claude to return a message.",
        "operationId": "MessagePost",
        "parameters": [
          {
            "name": "anthropic-version",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "2023-06-01",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "description": "The model that will complete your prompt.",
                  "title": "Model",
                  "default": "claude-3-5-sonnet-20240620",
                  "enum": [
                    "claude-3-5-sonnet-20240620",
                    "claude-3-opus-20240229",
                    "claude-3-sonnet-20240229",
                    "claude-3-haiku-20240307"
                  ]
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "The role.",
                        "title": "Role",
                        "enum": [
                          "user",
                          "assistant"
                        ],
                        "default": "user"
                      },
                      "content": {
                        "type": "string",
                        "description": "The conversation content.",
                        "title": "Content"
                      }
                    },
                    "required": [
                      "role",
                      "content"
                    ]
                  },
                  "title": "Messages"
                },
                "max_tokens": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of tokens to generate before stopping.",
                  "title": "Max Tokens",
                  "default": 100
                },
                "metadata": {
                  "type": "object",
                  "properties": {},
                  "description": "An object describing metadata about the request.",
                  "title": "Metadata"
                },
                "stop_sequences": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Custom text sequences that will cause the model to stop generating.",
                  "title": "Stop Sequences"
                },
                "system": {
                  "type": "string",
                  "description": "The system prompt.",
                  "title": "System Prompt"
                },
                "temperature": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of randomness injected into the response.",
                  "title": "Temperature",
                  "minimum": 0.0,
                  "maximum": 1.0
                },
                "tools": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The tool name.",
                        "title": "Name"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the tool.",
                        "title": "Description"
                      },
                      "input_schema": {
                        "type": "object",
                        "properties": {},
                        "description": "The input schema object.",
                        "title": "Input Schema"
                      }
                    }
                  },
                  "title": "Tools"
                },
                "top_k": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Only sample from the top K options for each subsequent token.",
                  "title": "Top K"
                },
                "top_p": {
                  "type": "number",
                  "format": "float",
                  "description": "Use nucleus sampling.",
                  "title": "Top P"
                }
              },
              "required": [
                "max_tokens",
                "messages",
                "model"
              ]
            }
          }
        ],
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "MessagePost",
              "x-ms-require-user-confirmation": true
            }
          ]
        }
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-Key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.anthropic.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://console.anthropic.com/legal/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI"
    }
  ],
  "x-ms-openai-manifest": {
    "humanName": "Anthropic",
    "modelDescription": "This is a Copilot plugin for the Anthropic Claude AI service.",
    "contactEmail": "ttaylor@hitachisolutions.com"
  }
}
