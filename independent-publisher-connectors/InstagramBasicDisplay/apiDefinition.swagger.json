{
  "swagger": "2.0",
  "info": {
    "title": "Instagram Basic Display",
    "description": "The Instagram Basic Display connector allows users of your app to get basic profile information, photos, and videos in their Instagram accounts. The API is intended for non-Business and non-Creator Instagram users.",
    "version": "1.0",
    "contact": {
      "name": "Reshmee Auckloo",
      "email": "reshmee011@gmail.com",
      "url": "https://github.com/reshmee011"
    }
  },
  "host": "graph.instagram.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/me/media": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "media_type": {
                        "type": "string",
                        "description": "The Media's type. Can be IMAGE, VIDEO, or CAROUSEL_ALBUM.",
                        "title": "Media type"
                      },
                      "media_url": {
                        "type": "string",
                        "title": "Media Url",
                        "description": "The Media's URL."
                      },
                      "permalink": {
                        "type": "string",
                        "description": "The Media's permanent URL. Will be omitted if the Media contains copyrighted material, or has been flagged for a copyright violation.",
                        "title": "Media permanent URL"
                      },
                      "id": {
                        "type": "string",
                        "description": "The Media's ID.",
                        "title": "Media id"
                      },
                      "username": {
                        "type": "string",
                        "description": "The Media owner's username.",
                        "title": "Username"
                      },
                      "timestamp": {
                        "type": "string",
                        "description": "ISO 8601 formatted creation date in UTC.",
                        "title": "Timestamp"
                      },
                      "caption": {
                        "type": "string",
                        "description": "The Media's caption text. Not returnable for Media in albums.",
                        "title": "Caption"
                      },
                      "thumbnail_url": {
                        "type": "string",
                        "description": "The Media's thumbnail image URL. Only available on VIDEO Media."
                      }
                    }
                  },
                  "description": "data"
                },
                "paging": {
                  "type": "object",
                  "properties": {
                    "cursors": {
                      "type": "object",
                      "properties": {
                        "before": {
                          "type": "string",
                          "description": "before"
                        },
                        "after": {
                          "type": "string",
                          "description": "after"
                        }
                      },
                      "description": "cursors"
                    }
                  },
                  "description": "paging"
                }
              }
            }
          }
        },
        "summary": "Get my Media",
        "description": "Retrieves a list of media items posted by the authenticated user and additional fields like media_type, media_url, caption, permalink,thumbnail_url and timestamp of each item can be specified.",
        "operationId": "GetMyMedia",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Specify the fields you want returned. Example (caption,media_type,media_url,permalink,timestamp,username,thumbnail_url).",
            "required": false,
            "x-ms-summary": "Fields",
            "default": "caption,media_type,media_url,permalink,timestamp,username,thumbnail_url",
            "type": "string"
          }
        ]
      }
    },
    "/me": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "The User's username.",
                  "title": "Username"
                },
                "media_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of Media on the User.",
                  "title": "Media count"
                },
                "account_type": {
                  "type": "string",
                  "description": "account_type"
                },
                "id": {
                  "type": "string",
                  "description": "The Media's ID.",
                  "title": "Media id"
                }
              }
            }
          }
        },
        "summary": "Get My Details",
        "description": "Retrieves information about the authenticated user. By default it retrieves the Id and other details like username,  media_count and account_type can be returned by requesting them via the fields parameter.",
        "operationId": "GetMyDetails",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "description": "Specify the fields you want returned. Example (id,media_count,username,account_type).",
            "x-ms-summary": "Fields",
            "default": "id,media_count,username,account_type",
            "type": "string"
          }
        ]
      }
    },
    "/{media-id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "media_type": {
                        "type": "string",
                        "description": "The Media's type. Can be IMAGE, VIDEO, or CAROUSEL_ALBUM.",
                        "title": "Media type"
                      },
                      "media_url": {
                        "type": "string",
                        "title": "Media Url",
                        "description": "The Media's URL."
                      },
                      "permalink": {
                        "type": "string",
                        "description": "The Media's permanent URL. Will be omitted if the Media contains copyrighted material, or has been flagged for a copyright violation.",
                        "title": "Media permanent URL"
                      },
                      "id": {
                        "type": "string",
                        "description": "The Media's ID.",
                        "title": "Media id"
                      },
                      "username": {
                        "type": "string",
                        "description": "The Media owner's username.",
                        "title": "Username"
                      },
                      "timestamp": {
                        "type": "string",
                        "description": "ISO 8601 formatted creation date in UTC.",
                        "title": "Timestamp"
                      },
                      "caption": {
                        "type": "string",
                        "description": "The Media's caption text. Not returnable for Media in albums.",
                        "title": "Caption"
                      },
                      "thumbnail_url": {
                        "type": "string",
                        "description": "The Media's thumbnail image URL. Only available on VIDEO Media."
                      }
                    }
                  },
                  "description": "data"
                },
                "paging": {
                  "type": "object",
                  "properties": {
                    "cursors": {
                      "type": "object",
                      "properties": {
                        "before": {
                          "type": "string",
                          "description": "before"
                        },
                        "after": {
                          "type": "string",
                          "description": "after"
                        }
                      },
                      "description": "cursors"
                    }
                  },
                  "description": "paging"
                }
              }
            }
          }
        },
        "summary": "Get Media Details",
        "description": "Retrieves media details posted by the authenticated user and additional fields like media_type, media_url, caption, permalink and thumbnail_url can be specified.",
        "operationId": "GetMediaDetails",
        "parameters": [
          {
            "name": "media-id",
            "in": "path",
            "required": true,
            "x-ms-summary": "Media Id",
            "x-ms-url-encoding": "single",
            "type": "string",
            "description": "A valid media id of the post."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "description": "Specify the fields you want returned. Example (caption,media_type,media_url,permalink,timestamp,username,thumbnail_url).",
            "x-ms-summary": "Fields",
            "default": "caption,media_type,media_url,permalink,timestamp,username,thumbnail_url",
            "type": "string"
          }
        ]
      }
    },
    "/refresh_access_token": {
        "get": {
            "responses": {
                "default": {
                    "description": "default",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "access_token": {
                                "type": "string",
                                "description": "A long-lived Instagram User Access Token.",
                                "title": "Access Token"
                            },
                            "token_type": {
                                "type": "string",
                                "description": "bearer",
                                "title": "Token Type"
                            },
                            "expires_in": {
                                "type": "integer",
                                "description": "The number of seconds until the long-lived token expires.",
                                "title": "Expires In",
                                "format": "int32"
                            }
                        }
                    }
                }
            },
            "summary": "Refreshes unexpired long-lived Instagram User Access tokens.",
            "description": "Long-lived tokens are valid for 60 days and can be refreshed as long as they are at least 24 hours old but have not expired, and the app user has granted your app the instagram_graph_user_profile permission. Refreshed tokens are valid for 60 days from the date at which they are refreshed. Tokens that have not been refreshed in 60 days will expire and can no longer be refreshed.",
            "operationId": "RefreshToken",
            "parameters": [
                {
                    "name": "grant_type",
                    "in": "query",
                    "required": true,
                    "type": "string",
                    "description": "Set this to ig_refresh_token",
                    "x-ms-summary": "Grant Type",
                    "default": "ig_refresh_token"
                },
                {
                    "name": "access_token",
                    "in": "query",
                    "description": "The valid (unexpired) long-lived Threads user access token that you want to refresh.",
                    "x-ms-summary": "Access Tokem",
                    "required": true,
                    "type": "string"
                }
            ]
        }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "query",
      "name": "access_token"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.instagram.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://privacycenter.instagram.com/policy/?entry_point=ig_help_center_data_policy_redirect"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data"
    }
  ]
}
