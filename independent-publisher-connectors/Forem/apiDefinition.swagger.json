{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Forem",
    "description": "Forem is an open source platform for building modern, independent, and safe communities.",
    "contact": {
      "name": "Daniel Laskewitz",
      "url": "https://aka.ms/laskewitz",
      "email": "dlaskewitz@microsoft.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.forem.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.forem.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Website"
    }
  ],
  "host": "dev.to",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/articles/me": {
      "get": {
        "summary": "Get my articles",
        "description": "Use this action to get your articles.",
        "operationId": "GetMyArticles",
        "parameters": [
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Per_Page"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Articles200"
          },
          "401": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/api/articles/me/published": {
      "get": {
        "summary": "Get my published articles",
        "description": "Use this action to get all your published articles.",
        "operationId": "GetMyPublishedArticles",
        "parameters": [
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Per_Page"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Articles200"
          },
          "401": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/api/articles/me/unpublished": {
      "get": {
        "summary": "Get my unpublished articles",
        "description": "Use this action to get all your unpublished articles.",
        "operationId": "GetMyUnpublishedArticles",
        "parameters": [
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Per_Page"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Articles200"
          },
          "401": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/api/articles/me/all": {
      "get": {
        "summary": "Get all my articles",
        "description": "Use this to get all your articles (both published and unpublished). By default it will return featured, published articles ordered by descending popularity.",
        "operationId": "GetAllMyArticles",
        "parameters": [
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Per_Page"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Articles200"
          },
          "401": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/api/articles": {
      "get": {
        "summary": "Get articles",
        "description": "Use this actions to get a list of articles.",
        "operationId": "GetArticles",
        "parameters": [
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Per_Page"
          },
          {
            "$ref": "#/parameters/Tag"
          },
          {
            "$ref": "#/parameters/Tags"
          },
          {
            "$ref": "#/parameters/Tags_Exclude"
          },
          {
            "$ref": "#/parameters/Username"
          },
          {
            "$ref": "#/parameters/State"
          },
          {
            "$ref": "#/parameters/Top"
          },
          {
            "$ref": "#/parameters/Collection_ID"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Articles200"
          }
        }
      }
    },
    "/api/users/{user-id}": {
      "get": {
        "summary": "Retrieve an user",
        "description": "Use this action to retrieve a single user by the user\u0027s username.",
        "operationId": "GetUser",
        "parameters": [
          {
            "$ref": "#/parameters/User_ID_For_URL"
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "URL",
            "description": "The URL (Username) of the user (e.g. for https://dev.to/azure use azure)."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetUser200"
          }
        }
      }
    },
    "/api/podcast_episodes": {
      "get": {
        "summary": "Retrieve podcast episodes",
        "description": "Use this action to retrieve a list of podcast episodes.",
        "operationId": "GetPodcastEpisodes",
        "parameters": [
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Per_Page"
          },
          {
            "$ref": "#/parameters/Username"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetPodcastEpisodes200"
          },
          "404": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/api/profile_images/{username}": {
      "get": {
        "summary": "Get profile image",
        "description": "Use this action to retrieve a user or organization profile image information by its corresponding username.",
        "operationId": "GetUserProfileImage",
        "parameters": [
          {
            "$ref": "#/parameters/Username_ID"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetProfileImages200"
          },
          "404": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/api/readinglist": {
      "get": {
        "summary": "Get my reading list",
        "description": "Use this action to retrieve a list of articles that were saved to your readinglist.",
        "operationId": "GetReadinglist",
        "parameters": [
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Per_Page"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetReadingList200"
          },
          "401": {
            "$ref": "#/responses/Error"
          }
        }
      }
    }
  },
  "definitions": {
    "DisplayAd": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "id",
          "x-ms-summary": "Display Ad ID"
        },
        "approved": {
          "type": "boolean",
          "description": "Whether or not the display ad is approved.",
          "x-ms-summary": "Display Ad Approved"
        },
        "body_markdown": {
          "type": "string",
          "description": "The body markdown of the display ad.",
          "x-ms-summary": "Display Ad Body Markdown"
        },
        "cached_tag_list": {
          "type": "string",
          "description": "The cached tag list of the display ad.",
          "x-ms-summary": "Display Ad Cached Tag List"
        },
        "clicks_count": {
          "type": "integer",
          "format": "int32",
          "description": "The clicks count of the display ad.",
          "x-ms-summary": "Display Ad Clicks Count"
        },
        "created_at": {
          "type": "string",
          "description": "The date time of the creation of the display ad.",
          "x-ms-summary": "Display Ad Created At"
        },
        "display_to": {
          "type": "string",
          "description": "Potentially limits visitors to whom the ad is visible.",
          "x-ms-summary": "Display Ad Display To"
        },
        "impressions_count": {
          "type": "integer",
          "format": "int32",
          "description": "The impressions count of the display ad.",
          "x-ms-summary": "Display Ad Impressions Count"
        },
        "name": {
          "type": "string",
          "description": "The name of the display ad.",
          "x-ms-summary": "Display Ad Name"
        },
        "organization_id": {
          "type": "string",
          "description": "The ID of the organization which the display ad belongs to.",
          "x-ms-summary": "Display Ad Organization ID"
        },
        "placement_area": {
          "type": "string",
          "description": "Identifies which area of site layout the display ad can appear in. Options are 'sidebar_left', 'sidebar_left_2', 'sidebar_right', 'post_sidebar' and 'post_comments'",
          "x-ms-summary": "Display Ad Placement Area"
        },
        "processed_html": {
          "type": "string",
          "description": "The processed HTML of the display ad.",
          "x-ms-summary": "Display Ad Processed HTML"
        },
        "published": {
          "type": "boolean",
          "description": "Indicates if the display ad is published or not.",
          "x-ms-summary": "Display Ad Published"
        },
        "success_rate": {
          "type": "integer",
          "format": "int32",
          "description": "The success rate of the display ad.",
          "x-ms-summary": "Display Ad Success Rate"
        },
        "type_of": {
          "type": "string",
          "description": "The type of the display ad. Will always be 'in_house'.",
          "x-ms-summary": "Display Ad Type Of"
        },
        "updated_at": {
          "type": "string",
          "description": "The date time of when the display ad was updated.",
          "x-ms-summary": "Display Ad Updated At"
        },
        "tag_list": {
          "type": "string",
          "description": "The tag list of the display ad.",
          "x-ms-summary": "Display Ad Tag List"
        }
      }
    },
    "Organization": {
      "type": "object",
      "description": "The organization.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the organization.",
          "x-ms-summary": "Organization Name"
        },
        "username": {
          "type": "string",
          "description": "The username of the organization.",
          "x-ms-summary": "Organization Username"
        },
        "slug": {
          "type": "string",
          "description": "The SLUG of the organization.",
          "x-ms-summary": "Organization SLUG"
        },
        "profile_image": {
          "type": "string",
          "description": "The profile image of the organization.",
          "x-ms-summary": "Organization Profile Image"
        },
        "profile_image_90": {
          "type": "string",
          "description": "profile_image_90",
          "x-ms-summary": "Organization Profile Image (90x90)"
        }
      }
    },
    "User": {
      "description": "The user.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the user.",
          "x-ms-summary": "User Name"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the user.",
          "x-ms-summary": "User ID"
        },
        "username": {
          "type": "string",
          "description": "The username of the user.",
          "x-ms-summary": "User Username"
        },
        "user_id": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the user.",
          "x-ms-summary": "User ID"
        },
        "twitter_username": {
          "type": "string",
          "description": "The Twitter username of the user.",
          "x-ms-summary": "User Twitter Username"
        },
        "github_username": {
          "type": "string",
          "description": "The GitHub username of the user.",
          "x-ms-summary": "User GitHub Username"
        },
        "website_url": {
          "type": "string",
          "description": "The website URL of the user.",
          "x-ms-summary": "Website URL"
        },
        "profile_image": {
          "type": "string",
          "description": "The profile image of the user.",
          "x-ms-summary": "Organization Profile Image"
        },
        "profile_image_90": {
          "type": "string",
          "description": "The profile image of the user.",
          "x-ms-summary": "User Profile Image (90x90)"
        }
      }
    }
  },
  "parameters": {
    "Note": {
      "name": "note",
      "in": "query",
      "description": "The note that's created along with unpublishing",
      "x-ms-summary": "Note",
      "type": "string",
      "required": false
    },
    "Content_Type": {
      "name": "Content-Type",
      "in": "header",
      "required": true,
      "type": "string",
      "x-ms-summary": "Content Type",
      "default": "application/json",
      "description": "Content-Type"
    },
    "Article_ID": {
      "name": "article-id",
      "default": "123",
      "in": "path",
      "type": "string",
      "description": "The ID of the article.",
      "x-ms-summary": "Article ID",
      "required": true
    },
    "User_ID_For_URL": {
      "name": "user-id",
      "default": "by_username",
      "in": "path",
      "type": "string",
      "description": "The user ID for the URL.",
      "x-ms-summary": "User ID For URL",
      "required": true
    },
    "User_ID": {
      "name": "user-id",
      "in": "path",
      "type": "string",
      "description": "The user ID",
      "x-ms-summary": "User ID",
      "required": true
    },
    "Page": {
      "name": "page",
      "in": "query",
      "type": "integer",
      "format": "int32",
      "default": 1,
      "required": true,
      "x-ms-summary": "Page",
      "description": "The pagination page of the results."
    },
    "Per_Page": {
      "name": "per_page",
      "in": "query",
      "type": "integer",
      "format": "int32",
      "default": 30,
      "required": true,
      "x-ms-summary": "Per Page",
      "description": "The page size of the results (the number of items to return per page)."
    },
    "Tag": {
      "name": "tag",
      "description": "The tag you want to limit the query by (e.g. 'discuss' will return only articles with the tag discuss).",
      "default": "discuss",
      "in": "query",
      "type": "string",
      "x-ms-summary": "Tag",
      "required": true
    },
    "Tags": {
      "name": "tags",
      "description": "The tags you want to limit the query by, separated by a comma (e.g. 'javascript, css' will return only articles with the tags javascript and css).",
      "in": "query",
      "type": "string",
      "x-ms-summary": "Tags",
      "required": false
    },
    "Tags_Exclude": {
      "name": "tags_exclude",
      "description": "The tags you want to exclude from the query, separated by a comma (e.g. 'node, java' will not return articles with the tags node and java).",
      "in": "query",
      "type": "string",
      "x-ms-summary": "Tags Exclude",
      "required": false
    },
    "Username_ID": {
      "name": "username",
      "in": "path",
      "type": "string",
      "required": true,
      "description": "The username of the user or the username of the organization.",
      "x-ms-summary": "Username ID"
    },
    "Username": {
      "name": "username",
      "in": "query",
      "type": "string",
      "description": "The username of the user or the username of the organization.",
      "x-ms-summary": "Username",
      "required": false
    },
    "State": {
      "name": "state",
      "default": "fresh",
      "in": "query",
      "type": "string",
      "description": "Using this parameter will allow the client to check which articles are fresh or rising. If state=fresh the server will return fresh articles. If state=rising the server will return rising articles. This param can be used in conjuction with username, only if set to all.",
      "x-ms-summary": "State",
      "required": false
    },
    "Top": {
      "name": "top",
      "default": "2",
      "in": "query",
      "type": "string",
      "description": "Using this parameter will allow the client to return the most popular articles in the last N days. top indicates the number of days since publication of the articles returned. This param can be used in conjuction with tag.",
      "x-ms-summary": "Top",
      "required": false
    },
    "Collection_ID": {
      "name": "collection_id",
      "default": "99",
      "in": "query",
      "type": "string",
      "description": "Adding this will allow the client to return the list of articles belonging to the requested collection, ordered by ascending publication date.",
      "x-ms-summary": "Collection ID",
      "required": false
    }
  },
  "responses": {
    "204": {
      "description": "204",
      "schema": {
        "type": "string"
      }
    },
    "Articles200": {
      "description": "200",
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type_of": {
              "type": "string",
              "description": "Type of article.",
              "x-ms-summary": "Article Type"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "description": "ID of the article.",
              "x-ms-summary": "Article ID"
            },
            "title": {
              "type": "string",
              "description": "Title of the article.",
              "x-ms-summary": "Article Title"
            },
            "description": {
              "type": "string",
              "description": "Description of the article.",
              "x-ms-summary": "Article Description"
            },
            "published": {
              "type": "boolean",
              "description": "Is this article published or not.",
              "x-ms-summary": "Article Published"
            },
            "published_at": {
              "type": "string",
              "description": "Date time of the publication of the article.",
              "x-ms-summary": "Article Published At"
            },
            "slug": {
              "type": "string",
              "description": "SLUG of the article.",
              "x-ms-summary": "Article SLUG"
            },
            "path": {
              "type": "string",
              "description": "Path of the article.",
              "x-ms-summary": "Article Path"
            },
            "url": {
              "type": "string",
              "description": "URL of the article.",
              "x-ms-summary": "Article URL"
            },
            "comments_count": {
              "type": "integer",
              "format": "int32",
              "description": "Count of comments on the article.",
              "x-ms-summary": "Article Comments Count"
            },
            "public_reactions_count": {
              "type": "integer",
              "format": "int32",
              "description": "Count of public reactions on the article.",
              "x-ms-summary": "Article Public Reactions Count"
            },
            "page_views_count": {
              "type": "integer",
              "format": "int32",
              "description": "Count of page views on the article.",
              "x-ms-summary": "Article Page Views Count"
            },
            "published_timestamp": {
              "type": "string",
              "description": "The published timestamp of the article.",
              "x-ms-summary": "Article Published Timestamp"
            },
            "body_markdown": {
              "type": "string",
              "description": "The body markdown of the article.",
              "x-ms-summary": "Article Body Markdown"
            },
            "positive_reactions_count": {
              "type": "integer",
              "format": "int32",
              "description": "The count of positive reactions on the article.",
              "x-ms-summary": "Article Positive Reactions Count"
            },
            "cover_image": {
              "type": "string",
              "description": "The cover image of the article.",
              "x-ms-summary": "Article Cover Image"
            },
            "tag_list": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The tag list of the article.",
              "x-ms-summary": "Article Tag List"
            },
            "canonical_url": {
              "type": "string",
              "description": "The canonical URL of the article.",
              "x-ms-summary": "Article Canonical URL"
            },
            "reading_time_minutes": {
              "type": "integer",
              "format": "int32",
              "description": "The reading time in minutes for the article.",
              "x-ms-summary": "Article Reading Time (In Minutes)"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "organization": {
              "$ref": "#/definitions/Organization"
            }
          }
        }
      }
    },
    "GetPodcastEpisodes200": {
      "description": "200",
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type_of": {
              "type": "string",
              "description": "The type of the podcast episode. Will always be 'podcast_episodes'.",
              "x-ms-summary": "Podcast Episode Type Of"
            },
            "class_name": {
              "type": "string",
              "description": "The class name of the podcast episode.",
              "x-ms-summary": "Podcast Episode Class Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "description": "The ID of the podcast episode.",
              "x-ms-summary": "Podcast Episode ID"
            },
            "path": {
              "type": "string",
              "description": "The path of the podcast episode.",
              "x-ms-summary": "Podcast Episode Path"
            },
            "title": {
              "type": "string",
              "description": "The title of the podcast episode.",
              "x-ms-summary": "Podcast Episode Title"
            },
            "image_url": {
              "type": "string",
              "description": "The image URL of the podcast episode.",
              "x-ms-summary": "Podcast Episode Image URL"
            },
            "podcast": {
              "description": "The podcast.",
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the podcast.",
                  "x-ms-summary": "Podcast Title"
                },
                "slug": {
                  "type": "string",
                  "description": "The SLUG of the podcast.",
                  "x-ms-summary": "Podcast SLUG"
                },
                "image_url": {
                  "type": "string",
                  "description": "The image URL of the podcast.",
                  "x-ms-summary": "Podcast Image URL"
                }
              }
            }
          }
        }
      }
    },
    "GetProfileImages200": {
      "description": "200",
      "schema": {
        "type": "object",
        "properties": {
          "type_of": {
            "type": "string",
            "description": "Type of. Value will always be 'profile_image'.",
            "x-ms-summary": "Type Of",
            "x-ms-visibility": "internal"
          },
          "image_of": {
            "type": "string",
            "description": "The type of the profile image owner (user or organization).",
            "x-ms-summary": "Image Of"
          },
          "profile_image": {
            "type": "string",
            "description": "The profile image (640x640) of the user or organization.",
            "x-ms-summary": "Profile Image Large"
          },
          "profile_image_90": {
            "type": "string",
            "description": "The profile image (90x90) of the user or organization.",
            "x-ms-summary": "Profile Image Small"
          }
        }
      }
    },
    "GetReadingList200": {
      "description": "200",
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type_of": {
              "type": "string",
              "description": "The type of the readinglist item.",
              "x-ms-summary": "Readinglist Item Type Of"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "description": "The ID of the readinglist item.",
              "x-ms-summary": "Readinglist Item ID"
            },
            "status": {
              "type": "string",
              "description": "The status of the readinglist item",
              "x-ms-summary": "Readinglist Item Status"
            },
            "created_at": {
              "type": "string",
              "description": "The date time of the creation of the readinglist item.",
              "x-ms-summary": "Readinglist Item Created At"
            },
            "article": {
              "type": "object",
              "properties": {
                "type_of": {
                  "type": "string",
                  "description": "Type of article.",
                  "x-ms-summary": "Article Type"
                },
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ID of the article.",
                  "x-ms-summary": "Article ID"
                },
                "title": {
                  "type": "string",
                  "description": "Title of the article.",
                  "x-ms-summary": "Article Title"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the article.",
                  "x-ms-summary": "Article Description"
                },
                "published": {
                  "type": "boolean",
                  "description": "Is this article published or not.",
                  "x-ms-summary": "Article Published"
                },
                "published_at": {
                  "type": "string",
                  "description": "Date time of the publication of the article.",
                  "x-ms-summary": "Article Published At"
                },
                "slug": {
                  "type": "string",
                  "description": "SLUG of the article.",
                  "x-ms-summary": "Article SLUG"
                },
                "path": {
                  "type": "string",
                  "description": "Path of the article.",
                  "x-ms-summary": "Article Path"
                },
                "url": {
                  "type": "string",
                  "description": "URL of the article.",
                  "x-ms-summary": "Article URL"
                },
                "comments_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Count of comments on the article.",
                  "x-ms-summary": "Article Comments Count"
                },
                "public_reactions_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Count of public reactions on the article.",
                  "x-ms-summary": "Article Public Reactions Count"
                },
                "page_views_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Count of page views on the article.",
                  "x-ms-summary": "Article Page Views Count"
                },
                "published_timestamp": {
                  "type": "string",
                  "description": "The published timestamp of the article.",
                  "x-ms-summary": "Article Published Timestamp"
                },
                "body_markdown": {
                  "type": "string",
                  "description": "The body markdown of the article.",
                  "x-ms-summary": "Article Body Markdown"
                },
                "positive_reactions_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of positive reactions on the article.",
                  "x-ms-summary": "Article Positive Reactions Count"
                },
                "cover_image": {
                  "type": "string",
                  "description": "The cover image of the article.",
                  "x-ms-summary": "Article Cover Image"
                },
                "canonical_url": {
                  "type": "string",
                  "description": "The canonical URL of the article.",
                  "x-ms-summary": "Article Canonical URL"
                },
                "reading_time_minutes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The reading time in minutes for the article.",
                  "x-ms-summary": "Article Reading Time (In Minutes)"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              },
              "description": "The article."
            }
          }
        }
      }
    },
    "GetUser200": {
      "description": "200",
      "schema": {
        "$ref": "#/definitions/User"
      }
    },
    "PostDisplayAds200": {
      "description": "200",
      "schema": {
        "$ref": "#/definitions/DisplayAd"
      }
    },
    "Error": {
      "description": "Error.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "The error message of the error.",
            "x-ms-summary": "Error Message"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "The status code of the error.",
            "x-ms-summary": "Status Code"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "api-key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}