{
  "swagger": "2.0",
  "info": {
    "title": "Pinecone",
    "description": "Pinecone makes it easy to provide long-term memory for high-performance AI applications. Pinecone is a managed, cloud-native vector database with no infrastructure hassles. Pinecone serves fresh, filtered query results with low latency at the scale of billions of vectors.",
    "version": "1.0",
    "contact": {
      "name": "Troy Taylor",
      "url": "https://www.hitachisolutions.com",
      "email": "ttaylor@hitachisolutions.com"
    }
  },
  "host": "pinecone.io",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/describe_index_stats": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "namespaces": {
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "type": "object",
                      "properties": {
                        "vectorCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The vector count.",
                          "title": "Vector Count"
                        }
                      },
                      "title": "Namespace"
                    }
                  },
                  "title": "Namespaces"
                },
                "dimension": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The dimension.",
                  "title": "Dimension"
                },
                "index_fullness": {
                  "type": "number",
                  "format": "float",
                  "description": "The index fullness.",
                  "title": "Index Fullness"
                }
              }
            }
          }
        },
        "summary": "Get index stats",
        "parameters": [],
        "description": "Returns statistics about the index's contents, including the vector count per namespace and the number of dimensions.",
        "operationId": "IndexStatsPost"
      }
    },
    "/query": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "matches": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier.",
                        "title": "ID"
                      },
                      "score": {
                        "type": "number",
                        "format": "float",
                        "description": "The score.",
                        "title": "Score"
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "float"
                        },
                        "description": "The values.",
                        "title": "Values"
                      },
                      "sparseValues": {
                        "type": "object",
                        "properties": {
                          "indices": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The indices.",
                            "title": "Indices"
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "format": "float"
                            },
                            "description": "The values.",
                            "title": "Values"
                          }
                        },
                        "title": "Sparse Values"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "genre": {
                            "type": "string",
                            "description": "The genre.",
                            "title": "Genre"
                          },
                          "year": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The year.",
                            "title": "Year"
                          }
                        },
                        "title": "Metadata"
                      }
                    }
                  },
                  "title": "Matches"
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace.",
                  "title": "Namespace"
                }
              }
            }
          }
        },
        "summary": "Query namespace",
        "description": "Searches a namespace, using a query vector. It retrieves the identifiers of the most similar items in a namespace, along with their similarity scores.",
        "operationId": "VectorQueryPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "includeValues": {
                  "type": "boolean",
                  "description": "Whether to include values.",
                  "title": "Include Values"
                },
                "includeMetadata": {
                  "type": "boolean",
                  "description": "Whether include metadata.",
                  "title": "Include Metadata"
                },
                "sparseVector": {
                  "type": "object",
                  "properties": {
                    "indices": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "The indices.",
                      "title": "Indices"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "The values.",
                      "title": "Values"
                    }
                  },
                  "title": "Sparse Vector"
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace.",
                  "title": "Namespace"
                },
                "topK": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The top K.",
                  "title": "Top K"
                },
                "vector": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": "The vector.",
                  "title": "Vector"
                },
                "id": {
                  "type": "string",
                  "description": "The identifier.",
                  "title": "ID"
                }
              }
            }
          }
        ]
      }
    },
    "/vectors/delete": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "string"
            }
          }
        },
        "summary": "Delete vectors",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "deleteAll": {
                  "type": "boolean",
                  "description": "Whether to delete all.",
                  "title": "Delete All"
                },
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The identifiers.",
                  "title": "IDs"
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace.",
                  "title": "Namespace"
                }
              }
            }
          }
        ],
        "description": "Deletes vectors, by identifier, from a single namespace.",
        "operationId": "VectorDeletePost"
      }
    },
    "/fetch": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "vectors": {
                  "type": "object",
                  "properties": {
                    "additionalProp": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier.",
                          "title": "ID"
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "float"
                          },
                          "description": "The values.",
                          "title": "Values"
                        },
                        "sparseValues": {
                          "type": "object",
                          "properties": {
                            "indices": {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "description": "The indices.",
                              "title": "Indices"
                            },
                            "values": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "format": "float"
                              },
                              "description": "The values.",
                              "title": "Values"
                            }
                          },
                          "title": "Sparse Values"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "genre": {
                              "type": "string",
                              "description": "The genre.",
                              "title": "Genre"
                            },
                            "year": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The year.",
                              "title": "Year"
                            }
                          },
                          "title": "Metadata"
                        }
                      },
                      "title": "Additional Properties"
                    }
                  },
                  "title": "Vectors"
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace.",
                  "title": "Namespace"
                }
              }
            }
          }
        },
        "summary": "Get vectors",
        "description": "Returns vectors, by identifier, from a single namespace.",
        "operationId": "VectorsGet",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "x-ms-summary": "ID",
            "description": "The identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "x-ms-summary": "Namespace",
            "description": "The namespace.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/vectors/update": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "string"
            }
          }
        },
        "summary": "Update vector",
        "description": "Updates vector in a namespace.",
        "operationId": "VectorUpdate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier.",
                  "title": "ID"
                },
                "values": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "float"
                  },
                  "description": "The values.",
                  "title": "Values"
                },
                "sparseValues": {
                  "type": "object",
                  "properties": {
                    "indices": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "The indices.",
                      "title": "Indices"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "format": "float"
                      },
                      "description": "The values.",
                      "title": "Values"
                    }
                  },
                  "title": "Sparse Values"
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace.",
                  "title": "Namespace"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ]
      }
    },
    "/vectors/upsert": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "upsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The upserted count.",
                  "title": "Upserted Count"
                }
              }
            }
          }
        },
        "summary": "Upsert vector",
        "description": "Writes vectors into a namespace.",
        "operationId": "VectorUpsertPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "vectors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier.",
                        "title": "ID"
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "float"
                        },
                        "description": "The values.",
                        "title": "Values"
                      },
                      "sparseValues": {
                        "type": "object",
                        "properties": {
                          "indices": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The indices.",
                            "title": "Indices"
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "format": "float"
                            },
                            "description": "The values.",
                            "title": "Values"
                          }
                        },
                        "title": "Sparse Values"
                      }
                    }
                  },
                  "title": "Vectors"
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace.",
                  "title": "Namespace"
                }
              }
            }
          }
        ]
      }
    },
    "/collections": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "summary": "Get collections",
        "description": "Returns a list of your Pinecone collections.",
        "operationId": "CollectionsGet",
        "parameters": []
      },
      "post": {
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "type": "string"
            }
          }
        },
        "summary": "Create collection",
        "description": "Creates a collection.",
        "operationId": "CollectionCreatePost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name.",
                  "title": "Name"
                },
                "source": {
                  "type": "string",
                  "description": "The source.",
                  "title": "Source"
                }
              },
              "required": [
                "name",
                "source"
              ]
            }
          }
        ]
      }
    },
    "/collections/{collectionName}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name.",
                  "title": "Name"
                },
                "size": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The size.",
                  "title": "Size"
                },
                "status": {
                  "type": "string",
                  "description": "The status.",
                  "title": "Status"
                }
              }
            }
          }
        },
        "summary": "Get collection description",
        "description": "Retrieve the description of a collection",
        "operationId": "CollectionGet",
        "parameters": [
          {
            "name": "collectionName",
            "in": "path",
            "x-ms-summary": "Collection Name",
            "x-ms-url-encoding": "single",
            "description": "The collection name.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "202": {
            "description": "default",
            "schema": {
              "type": "string"
            }
          }
        },
        "summary": "Delete collection",
        "description": "Deletes an existing collection.",
        "operationId": "CollectionDelete",
        "parameters": [
          {
            "name": "collectionName",
            "in": "path",
            "x-ms-summary": "Collection Name",
            "x-ms-url-encoding": "single",
            "description": "The collection name.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/databases": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "summary": "Get indexes",
        "description": "Returns a list of your indexes.",
        "operationId": "IndexesGet",
        "parameters": []
      },
      "post": {
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "type": "string"
            }
          }
        },
        "summary": "Create index",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name.",
                  "title": "Name"
                },
                "dimension": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The dimension.",
                  "title": "Dimension"
                },
                "metric": {
                  "type": "string",
                  "description": "The metric.",
                  "title": "Metric"
                },
                "pods": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The pods.",
                  "title": "Pods"
                },
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The replicas.",
                  "title": "Replicas"
                },
                "pod_type": {
                  "type": "string",
                  "description": "The pod type.",
                  "title": "Pod Type"
                },
                "source_collection": {
                  "type": "string",
                  "description": "The source collection.",
                  "title": "Source Collection"
                }
              },
              "required": [
                "name",
                "dimension"
              ]
            }
          }
        ],
        "description": "Create an index.",
        "operationId": "IndexPost"
      }
    },
    "/databases/{indexName}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "database": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name.",
                      "title": "Name"
                    },
                    "dimension": {
                      "type": "string",
                      "description": "The dimension.",
                      "title": "Dimension"
                    },
                    "metric": {
                      "type": "string",
                      "description": "The metric.",
                      "title": "Metric"
                    },
                    "pods": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The pods.",
                      "title": "Pods"
                    },
                    "replicas": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The replicas.",
                      "title": "Replicas"
                    },
                    "shards": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The shards.",
                      "title": "Shards"
                    },
                    "pod_type": {
                      "type": "string",
                      "description": "The pod type.",
                      "title": "Pod Type"
                    },
                    "index_config": {
                      "type": "object",
                      "properties": {
                        "k_bits": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The K bits.",
                          "title": "K Bits"
                        },
                        "hybrid": {
                          "type": "boolean",
                          "description": "Whether hybrid.",
                          "title": "Hybrid"
                        }
                      },
                      "title": "Index Config"
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "ready": {
                          "type": "boolean",
                          "description": "Whether ready.",
                          "title": "Ready"
                        },
                        "state": {
                          "type": "string",
                          "description": "The state.",
                          "title": "State"
                        }
                      },
                      "title": "Status"
                    }
                  },
                  "title": "Database"
                }
              }
            }
          }
        },
        "summary": "Get index description",
        "description": "Retrieve the description for an index.",
        "operationId": "IndexGet",
        "parameters": [
          {
            "name": "indexName",
            "in": "path",
            "x-ms-summary": "Index Name",
            "x-ms-url-encoding": "single",
            "description": "The index name.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "202": {
            "description": "default",
            "schema": {
              "type": "string"
            }
          }
        },
        "summary": "Delete index",
        "description": "Deletes an existing index.",
        "operationId": "IndexDelete",
        "parameters": [
          {
            "name": "indexName",
            "in": "path",
            "x-ms-summary": "Index Name",
            "x-ms-url-encoding": "single",
            "description": "The index name.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "202": {
            "description": "default",
            "schema": {
              "type": "string"
            }
          }
        },
        "summary": "Update index",
        "description": "Updates the pod type and number of replicas for an index.",
        "operationId": "IndexPatch",
        "parameters": [
          {
            "name": "indexName",
            "in": "path",
            "x-ms-summary": "Index Name",
            "x-ms-url-encoding": "single",
            "description": "The index name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The replicas.",
                  "title": "Replicas"
                },
                "pod_type": {
                  "type": "string",
                  "description": "The pod type.",
                  "title": "Pod Type"
                }
              }
            }
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Api-Key"
    }
  },
  "security": [],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.pinecone.io/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.pinecone.io/privacy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI"
    }
  ]
}