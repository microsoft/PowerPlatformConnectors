{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Shopify Admin Content",
    "description": "The Shopify REST Admin API lets you build apps and other integrations for the Shopify admin.",
    "contact": {
      "name": "Hitachi Solutions",
      "email":"jlindstrom@hitachisolutions.com"
    }
  },
  "host": "thatapiguy.myshopify.com",
  "basePath": "/admin/api/2021-04/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/blogs/{blog_id}/articles.json": {
      "get": {
        "description": "Retrieves a list of all articles from a certain blog",
        "summary": "Get a list of all articles of a blog",
        "tags": [
          "Article"
        ],
        "operationId": "ListBlogArticles",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "blog_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the blog containing the articles.",
            "x-ms-summary": "Blog ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "articles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "id"
                      },
                      "title": {
                        "type": "string",
                        "description": "title"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "created_at"
                      },
                      "body_html": {
                        "type": "string",
                        "description": "body_html"
                      },
                      "blog_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "blog_id"
                      },
                      "author": {
                        "type": "string",
                        "description": "author"
                      },
                      "user_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "user_id"
                      },
                      "published_at": {
                        "type": "string",
                        "description": "published_at"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "updated_at"
                      },
                      "summary_html": {
                        "type": "string",
                        "description": "summary_html"
                      },
                      "template_suffix": {
                        "type": "string",
                        "description": "template_suffix"
                      },
                      "handle": {
                        "type": "string",
                        "description": "handle"
                      },
                      "tags": {
                        "type": "string",
                        "description": "tags"
                      },
                      "admin_graphql_api_id": {
                        "type": "string",
                        "description": "admin_graphql_api_id"
                      },
                      "image": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "description": "created_at"
                          },
                          "alt": {
                            "type": "string",
                            "description": "alt"
                          },
                          "width": {
                            "type": "integer",
                            "format": "int32",
                            "description": "width"
                          },
                          "height": {
                            "type": "integer",
                            "format": "int32",
                            "description": "height"
                          },
                          "src": {
                            "type": "string",
                            "description": "src"
                          }
                        },
                        "description": "image"
                      }
                    }
                  },
                  "description": "articles"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new article for a blog",
        "summary": "Create a new article",
        "tags": [
          "Article"
        ],
        "operationId": "CreateArticle",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "blog_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the blog",
            "x-ms-summary": "Blog ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateanewarticleforablogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "article": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "title": {
                      "type": "string",
                      "description": "title"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "body_html": {
                      "type": "string",
                      "description": "body_html"
                    },
                    "blog_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "blog_id"
                    },
                    "author": {
                      "type": "string",
                      "description": "author"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "user_id"
                    },
                    "published_at": {
                      "type": "string",
                      "description": "published_at"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "updated_at"
                    },
                    "summary_html": {
                      "type": "string",
                      "description": "summary_html"
                    },
                    "template_suffix": {
                      "type": "string",
                      "description": "template_suffix"
                    },
                    "handle": {
                      "type": "string",
                      "description": "handle"
                    },
                    "tags": {
                      "type": "string",
                      "description": "tags"
                    },
                    "admin_graphql_api_id": {
                      "type": "string",
                      "description": "admin_graphql_api_id"
                    }
                  },
                  "description": "article"
                }
              }
            }
          }
        }
      }
    },
    "/blogs/{blog_id}/articles/{article_id}.json": {
      "get": {
        "description": "Retrieves a single article by article id and parent blog id",
        "summary": "Get a single article",
        "tags": [
          "Article"
        ],
        "operationId": "GetArticle",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "blog_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the blog containing the article.",
            "x-ms-summary": "Blog ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the article.",
            "x-ms-summary": "Article ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "article": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "title": {
                      "type": "string",
                      "description": "title"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "body_html": {
                      "type": "string",
                      "description": "body_html"
                    },
                    "blog_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "blog_id"
                    },
                    "author": {
                      "type": "string",
                      "description": "author"
                    },
                    "user_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "user_id"
                    },
                    "published_at": {
                      "type": "string",
                      "description": "published_at"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "updated_at"
                    },
                    "summary_html": {
                      "type": "string",
                      "description": "summary_html"
                    },
                    "template_suffix": {
                      "type": "string",
                      "description": "template_suffix"
                    },
                    "handle": {
                      "type": "string",
                      "description": "handle"
                    },
                    "tags": {
                      "type": "string",
                      "description": "tags"
                    },
                    "admin_graphql_api_id": {
                      "type": "string",
                      "description": "admin_graphql_api_id"
                    },
                    "image": {
                      "type": "object",
                      "properties": {
                        "created_at": {
                          "type": "string",
                          "description": "created_at"
                        },
                        "alt": {
                          "type": "string",
                          "description": "alt"
                        },
                        "width": {
                          "type": "integer",
                          "format": "int32",
                          "description": "width"
                        },
                        "height": {
                          "type": "integer",
                          "format": "int32",
                          "description": "height"
                        },
                        "src": {
                          "type": "string",
                          "description": "src"
                        }
                      },
                      "description": "image"
                    }
                  },
                  "description": "article"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates an existing article of a blog",
        "summary": "Update an article",
        "tags": [
          "Article"
        ],
        "operationId": "UpdateArticle",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "blog_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the blog containing the article.",
            "x-ms-summary": "Blog ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the article.",
            "x-ms-summary": "Article ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateanarticleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "article": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "title": {
                      "type": "string",
                      "description": "title"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "body_html": {
                      "type": "string",
                      "description": "body_html"
                    },
                    "blog_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "blog_id"
                    },
                    "author": {
                      "type": "string",
                      "description": "author"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "user_id"
                    },
                    "published_at": {
                      "type": "string",
                      "description": "published_at"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "updated_at"
                    },
                    "summary_html": {
                      "type": "string",
                      "description": "summary_html"
                    },
                    "template_suffix": {
                      "type": "string",
                      "description": "template_suffix"
                    },
                    "handle": {
                      "type": "string",
                      "description": "handle"
                    },
                    "tags": {
                      "type": "string",
                      "description": "tags"
                    },
                    "admin_graphql_api_id": {
                      "type": "string",
                      "description": "admin_graphql_api_id"
                    },
                    "image": {
                      "type": "object",
                      "properties": {
                        "created_at": {
                          "type": "string",
                          "description": "created_at"
                        },
                        "alt": {
                          "type": "string",
                          "description": "alt"
                        },
                        "width": {
                          "type": "integer",
                          "format": "int32",
                          "description": "width"
                        },
                        "height": {
                          "type": "integer",
                          "format": "int32",
                          "description": "height"
                        },
                        "src": {
                          "type": "string",
                          "description": "src"
                        }
                      },
                      "description": "image"
                    }
                  },
                  "description": "article"
                }
              }
            }
          }
        }
      }
    },
    "/blogs.json": {
      "get": {
        "description": "Retrieves a list of all blogs for your store",
        "summary": "Get a list of all blogs",
        "tags": [
          "Blog"
        ],
        "operationId": "ListBlogs",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "blogs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "id"
                      },
                      "handle": {
                        "type": "string",
                        "description": "handle"
                      },
                      "title": {
                        "type": "string",
                        "description": "title"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "updated_at"
                      },
                      "commentable": {
                        "type": "string",
                        "description": "commentable"
                      },
                      "feedburner": {
                        "type": "string",
                        "description": "feedburner"
                      },
                      "feedburner_location": {
                        "type": "string",
                        "description": "feedburner_location"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "created_at"
                      },
                      "template_suffix": {
                        "type": "string",
                        "description": "template_suffix"
                      },
                      "tags": {
                        "type": "string",
                        "description": "tags"
                      },
                      "admin_graphql_api_id": {
                        "type": "string",
                        "description": "admin_graphql_api_id"
                      }
                    }
                  },
                  "description": "blogs"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new empty blog",
        "summary": "Create a new blog",
        "tags": [
          "Blog"
        ],
        "operationId": "CreateBlog",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "blog": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title of the blog.",
                      "title": "Blog title"
                    },
                    "handle": {
                      "type": "string",
                      "description": "A human-friendly unique string for a blog, otherwise automatically generated from its title.",
                      "title": "Blog handle"
                    },
                    "commentable": {
                      "type": "string",
                      "description": "Indicates whether readers can post comments to the blog and if comments are moderated or not.",
                      "title": "Is blog commentable?"
                    },
                    "feedburner": {
                      "type": "string",
                      "description": "Feedburner is a web feed management provider and can be enabled to provide custom RSS feeds for Shopify bloggers.",
                      "title": "Blog feedburner"
                    },
                    "feedburner_location": {
                      "type": "string",
                      "description": "URL to the feedburner location for blogs that have enabled feedburner through their store admin.",
                      "title": "Blog feedburner location."
                    },
                    "template_suffix": {
                      "type": "string",
                      "description": "States the name of the template a blog is using if it is using an alternate template.",
                      "title": "Blog template suffix"
                    },
                    "tags": {
                      "type": "string",
                      "description": "A comma-separated list of tags. Tags are additional short descriptors formatted as a string of comma-separated values.",
                      "title": "Blog tags"
                    },
                    "metafields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Identifier for the metafield (maximum of 30 characters)."
                          },
                          "value": {
                            "type": "string",
                            "description": "Information to be stored as metadata."
                          },
                          "value_type": {
                            "type": "string",
                            "description": "States whether the information in the value is stored as a 'string' or 'integer.'",
                            "title":"value type"
                          },
                          "namespace": {
                            "type": "string",
                            "description": "Container for a set of metadata. Namespaces help distinguish between metadata you created and metadata created by another individual with a similar namespace (maximum of 20 characters)."
                          }
                        }
                      },
                      "description": "Attaches additional metadata to a blog."
                    }
                  },
                  "description": "blog"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "blog": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "handle": {
                      "type": "string",
                      "description": "handle"
                    },
                    "title": {
                      "type": "string",
                      "description": "title"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "updated_at"
                    },
                    "commentable": {
                      "type": "string",
                      "description": "commentable"
                    },
                    "feedburner": {
                      "type": "string",
                      "description": "feedburner"
                    },
                    "feedburner_location": {
                      "type": "string",
                      "description": "feedburner_location"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "template_suffix": {
                      "type": "string",
                      "description": "template_suffix"
                    },
                    "tags": {
                      "type": "string",
                      "description": "tags"
                    },
                    "admin_graphql_api_id": {
                      "type": "string",
                      "description": "admin_graphql_api_id"
                    }
                  },
                  "description": "blog"
                }
              }
            }
          }
        }
      }
    },
    "/blogs/{blog_id}.json": {
      "get": {
        "description": "Retrieves a single blog by its ID",
        "summary": "Get a single blog",
        "tags": [
          "Blog"
        ],
        "operationId": "GetBlog",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "blog_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the blog to be retirved.",
            "x-ms-summary":"Blog ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "blog": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "handle": {
                      "type": "string",
                      "description": "handle"
                    },
                    "title": {
                      "type": "string",
                      "description": "title"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "updated_at"
                    },
                    "commentable": {
                      "type": "string",
                      "description": "commentable"
                    },
                    "feedburner": {
                      "type": "string",
                      "description": "feedburner"
                    },
                    "feedburner_location": {
                      "type": "string",
                      "description": "feedburner_location"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "template_suffix": {
                      "type": "string",
                      "description": "template_suffix"
                    },
                    "tags": {
                      "type": "string",
                      "description": "tags"
                    },
                    "admin_graphql_api_id": {
                      "type": "string",
                      "description": "admin_graphql_api_id"
                    }
                  },
                  "description": "blog"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Removes an existing blog from a shop",
        "summary": "Delete a blog",
        "tags": [
          "Blog"
        ],
        "operationId": "DeleteBlog",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "blog_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the blog to be deleted.",
            "x-ms-summary": "Blog ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Updates an existing blog",
        "summary": "Update a blog",
        "tags": [
          "Blog"
        ],
        "operationId": "UpdateBlog",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blog_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the blog to be updated",
            "x-ms-summary": "Blog ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "blog": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title of the blog.",
                      "title": "Blog title"
                    },
                    "handle": {
                      "type": "string",
                      "description": "A human-friendly unique string for a blog, otherwise automatically generated from its title.",
                      "title": "Blog handle"
                    },
                    "commentable": {
                      "type": "string",
                      "description": "Indicates whether readers can post comments to the blog and if comments are moderated or not.",
                      "title": "Is blog commentable?"
                    },
                    "feedburner": {
                      "type": "string",
                      "description": "Feedburner is a web feed management provider and can be enabled to provide custom RSS feeds for Shopify bloggers.",
                      "title": "Blog feedburner"
                    },
                    "feedburner_location": {
                      "type": "string",
                      "description": "URL to the feedburner location for blogs that have enabled feedburner through their store admin.",
                      "title": "Blog feedburner location."
                    },
                    "template_suffix": {
                      "type": "string",
                      "description": "States the name of the template a blog is using if it is using an alternate template.",
                      "title": "Blog template suffix"
                    },
                    "tags": {
                      "type": "string",
                      "description": "A comma-separated list of tags. Tags are additional short descriptors formatted as a string of comma-separated values.",
                      "title": "Blog tags"
                    },
                    "metafields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Identifier for the metafield (maximum of 30 characters)."
                          },
                          "value": {
                            "type": "string",
                            "description": "Information to be stored as metadata."
                          },
                          "value_type": {
                            "type": "string",
                            "description": "States whether the information in the value is stored as a 'string' or 'integer.'",
                            "title":"value type"
                          },
                          "namespace": {
                            "type": "string",
                            "description": "Container for a set of metadata. Namespaces help distinguish between metadata you created and metadata created by another individual with a similar namespace (maximum of 20 characters)."
                          }
                        }
                      },
                      "description": "metafields"
                    }
                  },
                  "description": "blog"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "blog": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "handle": {
                      "type": "string",
                      "description": "handle"
                    },
                    "title": {
                      "type": "string",
                      "description": "title"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "updated_at"
                    },
                    "commentable": {
                      "type": "string",
                      "description": "commentable"
                    },
                    "feedburner": {
                      "type": "string",
                      "description": "feedburner"
                    },
                    "feedburner_location": {
                      "type": "string",
                      "description": "feedburner_location"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "template_suffix": {
                      "type": "string",
                      "description": "template_suffix"
                    },
                    "tags": {
                      "type": "string",
                      "description": "tags"
                    },
                    "admin_graphql_api_id": {
                      "type": "string",
                      "description": "admin_graphql_api_id"
                    }
                  },
                  "description": "blog"
                }
              }
            }
          }
        }
      }
    },
    "/comments.json": {
      "get": {
        "description": "Retrieves a list of all comments",
        "summary": "Get a list of comments",
        "tags": [
          "comments"
        ],
        "operationId": "ListComments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "id"
                      },
                      "body": {
                        "type": "string",
                        "description": "body"
                      },
                      "body_html": {
                        "type": "string",
                        "description": "body_html"
                      },
                      "author": {
                        "type": "string",
                        "description": "author"
                      },
                      "email": {
                        "type": "string",
                        "description": "email"
                      },
                      "status": {
                        "type": "string",
                        "description": "status"
                      },
                      "article_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "article_id"
                      },
                      "blog_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "blog_id"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "created_at"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "updated_at"
                      },
                      "ip": {
                        "type": "string",
                        "description": "ip"
                      },
                      "user_agent": {
                        "type": "string",
                        "description": "user_agent"
                      },
                      "published_at": {
                        "type": "string",
                        "description": "published_at"
                      }
                    }
                  },
                  "description": "comments"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new comment for an article",
        "summary": "Create a new comment",
        "tags": [
          "comments"
        ],
        "operationId": "CreateComment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateanewcommentforanarticleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "body": {
                      "type": "string",
                      "description": "body"
                    },
                    "body_html": {
                      "type": "string",
                      "description": "body_html"
                    },
                    "author": {
                      "type": "string",
                      "description": "author"
                    },
                    "email": {
                      "type": "string",
                      "description": "email"
                    },
                    "status": {
                      "type": "string",
                      "description": "status"
                    },
                    "article_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "article_id"
                    },
                    "blog_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "blog_id"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "updated_at"
                    },
                    "ip": {
                      "type": "string",
                      "description": "ip"
                    },
                    "user_agent": {
                      "type": "string",
                      "description": "user_agent"
                    },
                    "published_at": {
                      "type": "string",
                      "description": "published_at"
                    }
                  },
                  "description": "comment"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{comment_id}.json": {
      "get": {
        "description": "Retrieves a single comment by its id",
        "summary": "Get a single comment",
        "tags": [
          "comments"
        ],
        "operationId": "GetComment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the comment to be retrieved.",
            "x-ms-summary":"Comment ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "body": {
                      "type": "string",
                      "description": "body"
                    },
                    "body_html": {
                      "type": "string",
                      "description": "body_html"
                    },
                    "author": {
                      "type": "string",
                      "description": "author"
                    },
                    "email": {
                      "type": "string",
                      "description": "email"
                    },
                    "status": {
                      "type": "string",
                      "description": "status"
                    },
                    "article_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "article_id"
                    },
                    "blog_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "blog_id"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "updated_at"
                    },
                    "ip": {
                      "type": "string",
                      "description": "ip"
                    },
                    "user_agent": {
                      "type": "string",
                      "description": "user_agent"
                    },
                    "published_at": {
                      "type": "string",
                      "description": "published_at"
                    }
                  },
                  "description": "comment"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates an existing comment",
        "summary": "Update a comment",
        "tags": [
          "comments"
        ],
        "operationId": "UpdateComment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the comment to be retrieved.",
            "x-ms-summary":"Comment ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateacommentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "body": {
                      "type": "string",
                      "description": "body"
                    },
                    "body_html": {
                      "type": "string",
                      "description": "body_html"
                    },
                    "author": {
                      "type": "string",
                      "description": "author"
                    },
                    "email": {
                      "type": "string",
                      "description": "email"
                    },
                    "status": {
                      "type": "string",
                      "description": "status"
                    },
                    "article_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "article_id"
                    },
                    "blog_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "blog_id"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "updated_at"
                    },
                    "ip": {
                      "type": "string",
                      "description": "ip"
                    },
                    "user_agent": {
                      "type": "string",
                      "description": "user_agent"
                    },
                    "published_at": {
                      "type": "string",
                      "description": "published_at"
                    }
                  },
                  "description": "comment"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{comment_id}/spam.json": {
      "post": {
        "description": "Marks a comment as Spam",
        "summary": "Mark a comment as Spam",
        "tags": [
          "comments"
        ],
        "operationId": "MarkCommentSpam",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the comment to be marked spam.",
            "x-ms-summary":"Comment ID",
            "x-ms-url-encoding":"single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "id"
                },
                "body": {
                  "type": "string",
                  "description": "body"
                },
                "body_html": {
                  "type": "string",
                  "description": "body_html"
                },
                "author": {
                  "type": "string",
                  "description": "author"
                },
                "email": {
                  "type": "string",
                  "description": "email"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "article_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "article_id"
                },
                "blog_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "blog_id"
                },
                "created_at": {
                  "type": "string",
                  "description": "created_at"
                },
                "updated_at": {
                  "type": "string",
                  "description": "updated_at"
                },
                "ip": {
                  "type": "string",
                  "description": "ip"
                },
                "user_agent": {
                  "type": "string",
                  "description": "user_agent"
                },
                "published_at": {
                  "type": "string",
                  "description": "published_at"
                }
              }
            }
          }
        }
      }
    },
    "/pages.json": {
      "get": {
        "description": "Retrieves all pages for a shop",
        "summary": "Get a list of all pages",
        "tags": [
          "Page"
        ],
        "operationId": "ListPages",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "since_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restrict results to after the specified ID.",
            "x-ms-summary":"Since ID"
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Retrieve pages with a given title.",
            "x-ms-summary":"Title"
          },
          {
            "name": "handle",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Retrieve a page with a given handle.",
            "x-ms-summary":"Handle"
          },
          {
            "name": "created_at_min",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Show pages created after date (format: 2008-12-31).",
            "x-ms-summary":"Created after"
          },
          {
            "name": "created_at_max",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Show pages created before date (format: 2008-12-31).",
            "x-ms-summary":"Created before"
          },
          {
            "name": "updated_at_min",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Show pages last updated after date (format: 2008-12-31).",
            "x-ms-summary":"Updated after"
          },
          {
            "name": "updated_at_max",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Show pages last updated before date (format: 2008-12-31).",
            "x-ms-summary":"Updated before"
          },
          {
            "name": "published_at_min",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Show pages published after date (format: 2014-04-25T16:15:47-04:00).",
            "x-ms-summary":"Published after"
          },
          {
            "name": "published_at_max",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Show pages published before date (format: 2014-04-25T16:15:47-04:00).",
            "x-ms-summary":"Published before"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Show only certain fields, specified by a comma-separated list of field names.",
            "x-ms-summary":"Fields"
          },
          {
            "name": "published_status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restrict results to pages with a given published status: (default: any) 1.published: Show only published pages. 2.unpublished: Show only unpublished pages. 3.any: Show published and unpublished pages",
            "x-ms-summary":"Published Status"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "pages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "id"
                      },
                      "title": {
                        "type": "string",
                        "description": "title"
                      },
                      "shop_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "shop_id"
                      },
                      "handle": {
                        "type": "string",
                        "description": "handle"
                      },
                      "body_html": {
                        "type": "string",
                        "description": "body_html"
                      },
                      "author": {
                        "type": "string",
                        "description": "author"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "created_at"
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "updated_at"
                      },
                      "published_at": {
                        "type": "string",
                        "description": "published_at"
                      },
                      "template_suffix": {
                        "type": "string",
                        "description": "template_suffix"
                      },
                      "admin_graphql_api_id": {
                        "type": "string",
                        "description": "admin_graphql_api_id"
                      }
                    }
                  },
                  "description": "pages"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new page for a shop",
        "summary": "Create a new page",
        "tags": [
          "Page"
        ],
        "operationId": "CreatePage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateanewpageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "title": {
                      "type": "string",
                      "description": "title"
                    },
                    "shop_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "shop_id"
                    },
                    "handle": {
                      "type": "string",
                      "description": "handle"
                    },
                    "body_html": {
                      "type": "string",
                      "description": "body_html"
                    },
                    "author": {
                      "type": "string",
                      "description": "author"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "updated_at"
                    },
                    "published_at": {
                      "type": "string",
                      "description": "published_at"
                    },
                    "template_suffix": {
                      "type": "string",
                      "description": "template_suffix"
                    },
                    "admin_graphql_api_id": {
                      "type": "string",
                      "description": "admin_graphql_api_id"
                    }
                  },
                  "description": "page"
                }
              }
            }
          }
        }
      }
    },
    "/pages/count.json": {
      "get": {
        "description": "Retrieves a count all pages for a shop",
        "summary": "Count all pages for a shop",
        "tags": [
          "Page"
        ],
        "operationId": "CountAllPages",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "count"
                }
              }
            }
          }
        }
      }
    },
    "/pages/{page_id}.json": {
      "get": {
        "description": "Retrieves a single page by its ID",
        "summary": "Get a single page",
        "tags": [
          "Page"
        ],
        "operationId": "GetPage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "page_id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Page ID",
            "description": "ID of the page to be retrieved.",
            "x-ms-url-encoding":"single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "title": {
                      "type": "string",
                      "description": "title"
                    },
                    "shop_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "shop_id"
                    },
                    "handle": {
                      "type": "string",
                      "description": "handle"
                    },
                    "body_html": {
                      "type": "string",
                      "description": "body_html"
                    },
                    "author": {
                      "type": "string",
                      "description": "author"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "updated_at"
                    },
                    "published_at": {
                      "type": "string",
                      "description": "published_at"
                    },
                    "template_suffix": {
                      "type": "string",
                      "description": "template_suffix"
                    },
                    "admin_graphql_api_id": {
                      "type": "string",
                      "description": "admin_graphql_api_id"
                    }
                  },
                  "description": "page"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a page by its ID",
        "summary": "Delete a page",
        "tags": [
          "Page"
        ],
        "operationId": "DeletePage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "page_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the page to be deleted.",
            "x-ms-summary":"Page ID",
            "x-ms-url-encoding":"single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      },
      "put": {
        "description": "Updates an existing page",
        "summary": "Update a page",
        "tags": [
          "Page"
        ],
        "operationId": "UpdatePage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "page_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the page to be updated.",
            "x-ms-summary": "Page ID",
            "x-ms-url-encoding":"single"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateapagerequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "title": {
                      "type": "string",
                      "description": "title"
                    },
                    "shop_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "shop_id"
                    },
                    "handle": {
                      "type": "string",
                      "description": "handle"
                    },
                    "body_html": {
                      "type": "string",
                      "description": "body_html"
                    },
                    "author": {
                      "type": "string",
                      "description": "author"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "updated_at"
                    },
                    "published_at": {
                      "type": "string",
                      "description": "published_at"
                    },
                    "template_suffix": {
                      "type": "string",
                      "description": "template_suffix"
                    },
                    "admin_graphql_api_id": {
                      "type": "string",
                      "description": "admin_graphql_api_id"
                    }
                  },
                  "description": "page"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateanewarticleforablogRequest": {
      "title": "CreateanewarticleforablogRequest",
      "example": {
        "article": {
          "title": "Article test",
          "author": "John Smith",
          "tags": "This Post, Has Been Tagged",
          "body_html": "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>",
          "published_at": "Thu Mar 24 15:45:47 UTC 2011"
        }
      },
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/Article"
        }
      }
    },
    "Article": {
      "title": "Article",
      "example": {
        "title": "Article test",
        "author": "John Smith",
        "tags": "This Post, Has Been Tagged",
        "body_html": "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>",
        "published_at": "Thu Mar 24 15:45:47 UTC 2011"
      },
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the article."
        },
        "author": {
          "type": "string",
          "description": "The name of the author of the article."
        },
        "tags": {
          "type": "string",
          "description": "A comma-separated list of tags. Tags are additional short descriptors formatted as a string of comma-separated values."
        },
        "body_html": {
          "type": "string",
          "description": "The text of the body of the article complete with HTML markup.",
          "title": "body"
        },
        "handle": {
          "type": "string",
          "description": "A human-friendly unique string for the article that\\'s automatically generated from the article\\'s title. The handle is used in the article\\'s URL."
        },
        "published_at": {
          "type": "string",
          "description": "The date and time (ISO 8601 format) when the article was published.",
          "title": "publish date"
        },
        "published": {
          "type": "boolean",
          "description": "Whether the article is visible."
        },
        "summary_html": {
          "type": "string",
          "description": "A summary of the article, complete with HTML markup.",
          "title": "summary"
        },
        "template_suffix": {
          "type": "string",
          "description": "The name of the template an article is using if it's using an alternate template.",
          "title": "template suffix"
        },
        "image": {
          "type": "object",
          "properties": {
            "src": {
              "type": "string",
              "description": "A source URL that specifies the location of the Article image.",
              "title": "image source"
            },
            "attachment": {
              "type": "string",
              "description": "An image attached to article returned as Base64-encoded binary data.",
              "title": "image attachment"
            },
            "alt": {
              "type": "string",
              "description": "Alternative text that describes the Article image.",
              "title": "image alt text"
            }
          }
        }
      },
      "required": [
        "title"
      ]
    },
    "UpdateanarticleRequest": {
      "title": "UpdateanarticleRequest",
      "example": {
        "article": {
          "title": "oi"
        }
      },
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/Article"
        }
      }
    },
    "Article1": {
      "title": "Article1",
      "example": {
        "title": "oi"
      },
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the article."
        },
        "author": {
          "type": "string",
          "description": "The name of the author of the article."
        },
        "tags": {
          "type": "string",
          "description": "A comma-separated list of tags. Tags are additional short descriptors formatted as a string of comma-separated values."
        },
        "body_html": {
          "type": "string",
          "description": "The text of the body of the article complete with HTML markup."
        },
        "handle": {
          "type": "string",
          "description": "A human-friendly unique string for the article that\\'s automatically generated from the article\\'s title. The handle is used in the article\\'s URL."
        },
        "published_at": {
          "type": "string",
          "description": "The date and time (ISO 8601 format) when the article was published."
        },
        "published": {
          "type": "boolean",
          "description": "Whether the article is visible."
        },
        "summary_html": {
          "type": "string",
          "description": "A summary of the article, complete with HTML markup."
        },
        "template_suffix": {
          "type": "string",
          "description": "The name of the template an article is using if it's using an alternate template."
        },
        "image": {
          "type": "object",
          "properties": {
            "src": {
              "type": "string",
              "description": "A source URL that specifies the location of the image."
            },
            "attachment": {
              "type": "string",
              "description": "An image attached to article returned as Base64-encoded binary data."
            },
            "alt": {
              "type": "string",
              "description": "Alternative text that describes the image."
            }
          }
        }
      }
    },
    "CreateanewblogRequest": {
      "title": "CreateanewblogRequest",
      "example": {
        "blog": {
          "title": "Test Blog via API"
        }
      },
      "type": "object",
      "properties": {
        "blog": {
          "$ref": "#/definitions/Blog"
        }
      },
      "required": [
        "blog"
      ]
    },
    "Blog": {
      "title": "Blog",
      "example": {
        "title": "Test Blog via API"
      },
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "commentable": {
          "type": "string"
        },
        "feedburner": {
          "type": "string"
        },
        "feedburner_location": {
          "type": "string"
        },
        "handle": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "template_suffix": {
          "type": "string"
        },
        "metafields": {
          "$ref": "#/definitions/Metafield"
        }
      },
      "required": [
        "title"
      ]
    },
    "UpdateablogRequest": {
      "title": "UpdateablogRequest",
      "example": {
        "blog": {
          "metafields": [
            {
              "key": "new",
              "value": "newvalue",
              "value_type": "string",
              "namespace": "global"
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "blog": {
          "$ref": "#/definitions/Blog1"
        }
      },
      "required": [
        "blog"
      ]
    },
    "Blog1": {
      "title": "Blog1",
      "example": {
        "metafields": [
          {
            "key": "new",
            "value": "newvalue",
            "value_type": "string",
            "namespace": "global"
          }
        ]
      },
      "type": "object",
      "properties": {
        "metafields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metafield"
          }
        }
      },
      "required": [
        "metafields"
      ]
    },
    "Metafield": {
      "title": "Metafield",
      "example": {
        "key": "new",
        "value": "newvalue",
        "value_type": "string",
        "namespace": "global"
      },
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Identifier for the metafield (maximum of 30 characters)."
        },
        "value": {
          "type": "string",
          "description": "Information to be stored as metadata."
        },
        "value_type": {
          "type": "string",
          "description": "States whether the information in the value is stored as a 'string' or 'integer.'",
          "title":"value type"
        },
        "namespace": {
          "type": "string",
          "description": "Container for a set of metadata. Namespaces help distinguish between metadata you created and metadata created by another individual with a similar namespace (maximum of 20 characters)."
        }
      }
    },
    "CreateanewcommentforanarticleRequest": {
      "title": "CreateanewcommentforanarticleRequest",
      "example": {
        "comment": {
          "body": "I like comments\nAnd I like posting them *RESTfully*.",
          "author": "Your name",
          "email": "renato@basico.com",
          "ip": "107.20.160.121",
          "blog_id": 62581763,
          "article_id": 128701187
        }
      },
      "type": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/Comment"
        }
      },
      "required": [
        "comment"
      ]
    },
    "Comment": {
      "title": "Comment",
      "example": {
        "body": "I like comments\nAnd I like posting them *RESTfully*.",
        "author": "Your name",
        "email": "renato@basico.com",
        "ip": "107.20.160.121",
        "blog_id": 62581763,
        "article_id": 128701187
      },
      "type": "object",
      "properties": {
        "body": {
          "type": "string",
          "description": "The body of a comment."
        },
        "author": {
          "type": "string",
          "description": "The name of the author of the comment."
        },
        "email": {
          "type": "string",
          "description": "The email address of the author of the comment."
        },
        "ip": {
          "type": "string",
          "description": "The IP address from which the comment was posted."
        },
        "blog_id": {
          "type": "integer",
          "format": "int32",
          "description": "A unique numeric identifier for the blog containing the article that the comment belongs to.",
          "title": "blog ID"
        },
        "article_id": {
          "type": "integer",
          "format": "int32",
          "description": "A unique numeric identifier for the article that the comment belongs to.",
          "title": "article ID"
        }
      },
      "required": [
        "body",
        "author",
        "email",
        "blog_id",
        "article_id"
      ]
    },
    "UpdateacommentRequest": {
      "title": "UpdateacommentRequest",
      "example": {
        "comment": {
          "id": 2941387470,
          "body": "You can even update through a web service.",
          "author": "Your new name",
          "email": "your@updated-email.com",
          "published_at": "2017-01-05T20:37:21.046Z"
        }
      },
      "type": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/Comment1"
        }
      },
      "required": [
        "comment"
      ]
    },
    "Comment1": {
      "title": "Comment1",
      "example": {
        "id": 2941387470,
        "body": "You can even update through a web service.",
        "author": "Your new name",
        "email": "your@updated-email.com",
        "published_at": "2017-01-05T20:37:21.046Z"
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "body": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "published_at": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "body",
        "author",
        "email"
      ]
    },
    "CreateanewpageRequest": {
      "title": "CreateanewpageRequest",
      "example": {
        "page": {
          "title": "Warranty information",
          "body_html": "<h1>Warranty</h1>\n<p><strong>Forget it</strong>, we aint giving you nothing</p>",
          "published": false
        }
      },
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/Page"
        }
      },
      "required": [
        "page"
      ]
    },
    "Page": {
      "title": "Page",
      "example": {
        "title": "Warranty information",
        "body_html": "<h1>Warranty</h1>\n<p><strong>Forget it</strong>, we aint giving you nothing</p>",
        "published": false
      },
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The page's title."
        },
        "body_html": {
          "type": "string",
          "description": "The text content of the page, complete with HTML markup.",
          "title":"body"
        },
        "author": {
          "type": "string",
          "description": "The name of the person who created the page."
        },
        "handle": {
          "type": "string",
          "description": "A unique, human-friendly string for the page, generated automatically from its title."
        },
        "metafields": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Identifier for the metafield (maximum of 30 characters)."
              },
              "value": {
                "type": "string",
                "description": "Information to be stored as metadata."
              },
              "value_type": {
                "type": "string",
                "description": "States whether the information in the value is stored as a 'string' or 'integer.'",
                "title":"value type"
              },
              "namespace": {
                "type": "string",
                "description": "Container for a set of metadata. Namespaces help distinguish between metadata you created and metadata created by another individual with a similar namespace (maximum of 20 characters)."
              }
            }
          }
        },
        "published": {
          "type": "boolean",
          "description": "Whether the page should be published or not"
        }
      },
      "required": [
        "title",
        "body_html",
        "published"
      ]
    },
    "updateapagerequest": {
      "title": "updateapagerequest",
      "example": {
        "page": {
          "id": 131092082,
          "published": true
        }
      },
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/Page1"
        }
      },
      "required": [
        "page"
      ]
    },
    "Page1": {
      "title": "Page",
      "example": {
        "id": 131092082,
        "published": true
      },
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The page's title."
        },
        "body_html": {
          "type": "string",
          "description": "The text content of the page, complete with HTML markup.",
          "title":"body"
        },
        "author": {
          "type": "string",
          "description": "The name of the person who created the page."
        },
        "handle": {
          "type": "string",
          "description": "A unique, human-friendly string for the page, generated automatically from its title."
        },
        "metafields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metafield"
          }
        }
      ,
      "published": {
        "type": "boolean"
      }
    }
  }
},
"securityDefinitions": {
  "oauth2_auth": {
    "type": "oauth2",
    "flow": "accessCode",
    "authorizationUrl": "https://thatapiguy.myshopify.com/admin/oauth/authorize",
    "tokenUrl": "https://thatapiguy.myshopify.com/admin/oauth/access_token",
    "scopes": {
      "read_analytics": "read_analytics",
      "read_reports": "read_reports",
      "write_orders": "write_orders",
      "read_customers": "read_customers",
      "write_customers": "write_customers",
      "write_reports": "write_reports",
      "read_content": "read_content",
      "write_content": "write_content",
      "read_themes": "read_themes",
      "write_themes": "write_themes",
      "read_product_listings": "read_product_listings",
      "read_products": "read_products",
      "write_products": "write_products",
      "read_checkouts": "read_checkouts",
      "write_checkouts": "write_checkouts",
      "read_inventory": "read_inventory",
      "write_inventory": "write_inventory",
      "read_marketing_events": "read_marketing_events",
      "write_marketing_events": "write_marketing_events",
      "read_shopify_payments_disputes": "read_shopify_payments_disputes"
    }
  }
},
"security": [
  {
    "oauth2_auth": [
      "read_analytics",
      "read_reports",
      "write_orders",
      "read_customers",
      "write_customers",
      "write_reports",
      "read_content",
      "write_content",
      "read_themes",
      "write_themes",
      "read_product_listings",
      "read_products",
      "write_products",
      "read_checkouts",
      "write_checkouts",
      "read_inventory",
      "write_inventory",
      "read_marketing_events",
      "write_marketing_events",
      "read_shopify_payments_disputes"
    ]
  }
],
"x-ms-connector-metadata": [
  {
    "propertyName": "Website",
    "propertyValue": "https://shopify.dev/concepts/shopify-introduction"
  },
  {
    "propertyName": "Privacy policy",
    "propertyValue": "https://www.shopify.com/legal/privacy"
  },
  {
    "propertyName": "Categories",
    "propertyValue": "Commerce;Marketing"
  }
]
}