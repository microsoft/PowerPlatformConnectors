{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "Richard Wilson",
      "url": "https://www.richardawilson.com",
      "email": "richard.a.wilson@microsoft.com"
    },
    "description": "The Provider Directory API facilitates the development of applications that can retrieve lists of VA providers, offering details on provider locations, specialties, office hours, and patient acceptance status. It leverages FHIR standards to ensure compliance with CMS requirements for public-facing API endpoints.",
    "title": "Veterans Affairs Providers",
    "version": "v0"
  },
  "host": "api.va.gov",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/Location": {
      "get": {
        "description": "Retrieves a list of locations based on specified criteria, including provider locations, specialties, and office hours.",
        "operationId": "GetLocation",
        "parameters": [
          {
            "description": "The logical ID of the resource. Once assigned, this value never changes.",
            "in": "query",
            "name": "_id",
            "type": "string",
            "x-example": "I2-JI7HH7SBZOCSIS7F7DI6BLHY4VNVELJM77KAYURLD5ZZWRQ2EY7Q0000",
            "x-ms-summary": "Id"
          },
          {
            "description": "The logical identifier of the resource. Once assigned, this value never changes.",
            "in": "query",
            "name": "identifier",
            "type": "string",
            "x-ms-summary": "Identifier"
          },
          {
            "description": "Specifies the physical location of the record using postal conventions.",
            "in": "query",
            "name": "address",
            "type": "string",
            "x-ms-summary": "Address"
          },
          {
            "description": "Specifies the city where the location resides.",
            "in": "query",
            "name": "address-city",
            "type": "string",
            "x-ms-summary": "Address City"
          },
          {
            "description": "Specifies the state where the location resides.",
            "in": "query",
            "name": "address-state",
            "type": "string",
            "x-ms-summary": "Address State"
          },
          {
            "description": "Specifies the postal code for the region where the location resides.",
            "in": "query",
            "name": "address-postalcode",
            "type": "string",
            "x-ms-summary": "Address Postalcode"
          },
          {
            "description": "Indicates the name of the location as referenced by humans.",
            "in": "query",
            "name": "name",
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "description": "The date when the location record was last updated.",
            "in": "query",
            "name": "_lastUpdated",
            "type": "string",
            "x-ms-summary": "Last Updated"
          },
          {
            "description": "The page number of the search result.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer",
            "x-ms-summary": "Page"
          },
          {
            "description": "The number of resources returned in a single page, up to a maximum of 100.",
            "format": "int32",
            "in": "query",
            "name": "_count",
            "type": "integer",
            "maximum": 100,
            "x-ms-summary": "Count"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response with details of locations.",
            "schema": {
              "$ref": "#/definitions/LocationBundle"
            }
          },
          "400": {
            "description": "Bad request. The request was invalid."
          },
          "401": {
            "description": "Authorization information not provided or invalid."
          },
          "403": {
            "description": "Invalid authorization credentials."
          },
          "404": {
            "description": "The requested resource was not found."
          },
          "413": {
            "description": "Payload too large. Request size limit exceeded."
          },
          "429": {
            "description": "Too many requests. API rate limit exceeded."
          },
          "500": {
            "description": "Server error. An error occurred on the server."
          }
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "summary": "List locations",
        "tags": [
          "Location"
        ]
      }
    },
    "/Location/{id}": {
      "get": {
        "description": "Retrieves detailed information about a specific location by its ID, including provider locations, specialties, and office hours.",
        "operationId": "GetLocationById",
        "parameters": [
          {
            "description": "The logical ID of the resource. Once assigned, this value never changes.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-example": "I2-JI7HH7SBZOCSIS7F7DI6BLHY4VNVELJM77KAYURLD5ZZWRQ2EY7Q0000",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response with details of the specific location.",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          },
          "400": {
            "description": "Bad request. The request was invalid."
          },
          "401": {
            "description": "Authorization information not provided or invalid."
          },
          "403": {
            "description": "Invalid authorization credentials."
          },
          "404": {
            "description": "The requested resource was not found."
          },
          "413": {
            "description": "Payload too large. Request size limit exceeded."
          },
          "429": {
            "description": "Too many requests. API rate limit exceeded."
          },
          "500": {
            "description": "Server error. An error occurred on the server."
          }
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "summary": "Get location by ID",
        "tags": [
          "Location"
        ]
      }
    },
    "/Organization": {
      "get": {
        "description": "Retrieves a list of organizations based on specified criteria, including their locations, names, and other identifying information.",
        "operationId": "ListOrganizations",
        "parameters": [
          {
            "description": "The logical ID of the resource. Once assigned, this value never changes.",
            "in": "query",
            "name": "_id",
            "type": "string",
            "x-example": "I2-CYEXXOSUSGHOX6424MLNR4CQ4F7FZIOAZQJ3PH4L4MIIABRNZVVQ0000",
            "x-ms-summary": "Id"
          },
          {
            "description": "The logical identifier of the resource. Once assigned, this value never changes.",
            "in": "query",
            "name": "identifier",
            "type": "string",
            "x-ms-summary": "Identifier"
          },
          {
            "description": "Specifies the physical location of the organization using postal conventions.",
            "in": "query",
            "name": "address",
            "type": "string",
            "x-ms-summary": "Address"
          },
          {
            "description": "Specifies the city where the organization resides.",
            "in": "query",
            "name": "address-city",
            "type": "string",
            "x-ms-summary": "City"
          },
          {
            "description": "Specifies the state where the organization resides.",
            "in": "query",
            "name": "address-state",
            "type": "string",
            "x-ms-summary": "State"
          },
          {
            "description": "Specifies the postal code for the region where the organization resides.",
            "in": "query",
            "name": "address-postalcode",
            "type": "string",
            "x-ms-summary": "Postal Code"
          },
          {
            "description": "Indicates the name of the organization as it is referenced by humans.",
            "in": "query",
            "name": "name",
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "description": "The date when the organization record was last updated.",
            "in": "query",
            "name": "_lastUpdated",
            "type": "string",
            "x-ms-summary": "Last Updated"
          },
          {
            "description": "The page number of the search result.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer",
            "x-ms-summary": "Page"
          },
          {
            "description": "The number of resources returned in a single page, up to a maximum of 100.",
            "format": "int32",
            "in": "query",
            "name": "_count",
            "type": "integer",
            "maximum": 100,
            "x-ms-summary": "Count"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response with details of organizations.",
            "schema": {
              "$ref": "#/definitions/OrganizationBundle"
            }
          },
          "400": {
            "description": "Bad request. The request was invalid."
          },
          "401": {
            "description": "Authorization information not provided or invalid."
          },
          "403": {
            "description": "Invalid authorization credentials."
          },
          "404": {
            "description": "The requested resource was not found."
          },
          "413": {
            "description": "Payload too large. Request size limit exceeded."
          },
          "429": {
            "description": "Too many requests. API rate limit exceeded."
          },
          "500": {
            "description": "Server error. An error occurred on the server."
          }
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "summary": "List organizations",
        "tags": [
          "Organization"
        ]
      }
    },
    "/Organization/{id}": {
      "get": {
        "description": "Retrieves detailed information about a specific organization by its ID, including name, location, and other relevant details.",
        "operationId": "GetOrganizationById",
        "parameters": [
          {
            "description": "The logical ID of the resource. Once assigned, this value never changes.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-example": "I2-CYEXXOSUSGHOX6424MLNR4CQ4F7FZIOAZQJ3PH4L4MIIABRNZVVQ0000",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response with details of the specific organization.",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "description": "Bad request. The request was invalid."
          },
          "401": {
            "description": "Authorization information not provided or invalid."
          },
          "403": {
            "description": "Invalid authorization credentials."
          },
          "404": {
            "description": "The requested resource was not found."
          },
          "413": {
            "description": "Payload too large. Request size limit exceeded."
          },
          "429": {
            "description": "Too many requests. API rate limit exceeded."
          },
          "500": {
            "description": "Server error. An error occurred on the server."
          }
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "summary": "Get organization by Id",
        "tags": [
          "Organization"
        ]
      }
    },
    "/Practitioner": {
      "get": {
        "description": "Retrieves a list of practitioners based on specified criteria, including identifiers, names, and last update dates.",
        "operationId": "ListPractitioners",
        "parameters": [
          {
            "description": "The logical ID of the resource. Once assigned, this value never changes.",
            "in": "query",
            "name": "_id",
            "type": "string",
            "x-example": "I2-VLZYJVF7MOB2SFAKTAPNSQIBWZS22HGVT3A56E5D5PHDUWJGQIGQ0000",
            "x-ms-summary": "Id"
          },
          {
            "description": "A unique identifier for a practitioner within a given system.",
            "in": "query",
            "name": "identifier",
            "type": "string",
            "x-ms-summary": "Identifier"
          },
          {
            "description": "The family name of the practitioner.",
            "in": "query",
            "name": "family",
            "type": "string",
            "x-ms-summary": "Family Name"
          },
          {
            "description": "The given name of the practitioner.",
            "in": "query",
            "name": "given",
            "type": "string",
            "x-ms-summary": "Given Name"
          },
          {
            "description": "The given or family name of the practitioner.",
            "in": "query",
            "name": "name",
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "description": "The date when the practitioner record was last updated.",
            "in": "query",
            "name": "_lastUpdated",
            "type": "string",
            "x-ms-summary": "Last Updated"
          },
          {
            "description": "The page number of the search result.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer",
            "x-ms-summary": "Page"
          },
          {
            "description": "The number of resources returned in a single page, up to a maximum of 100.",
            "format": "int32",
            "in": "query",
            "name": "_count",
            "type": "integer",
            "maximum": 100,
            "x-ms-summary": "Count"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response with a list of practitioners.",
            "schema": {
              "$ref": "#/definitions/PractitionerBundle"
            }
          },
          "400": {
            "description": "Bad request. The request was invalid."
          },
          "401": {
            "description": "Authorization information not provided or invalid."
          },
          "403": {
            "description": "Invalid authorization credentials."
          },
          "404": {
            "description": "The requested resource was not found."
          },
          "413": {
            "description": "Payload too large. Request size limit exceeded."
          },
          "429": {
            "description": "Too many requests. API rate limit exceeded."
          },
          "500": {
            "description": "Server error. An error occurred on the server."
          }
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "summary": "List practitioners",
        "tags": [
          "Practitioner"
        ]
      }
    },
    "/Practitioner/{id}": {
      "get": {
        "description": "Retrieves detailed information about a specific practitioner by their unique ID, including identifiers, names, and qualifications.",
        "operationId": "GetPractitionerById",
        "parameters": [
          {
            "description": "The logical ID of the resource. Once assigned, this value never changes.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-example": "I2-VLZYJVF7MOB2SFAKTAPNSQIBWZS22HGVT3A56E5D5PHDUWJGQIGQ0000",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response with the details of the specified practitioner.",
            "schema": {
              "$ref": "#/definitions/Practitioner"
            }
          },
          "400": {
            "description": "Bad request. The request was invalid."
          },
          "401": {
            "description": "Authorization information not provided or invalid."
          },
          "403": {
            "description": "Invalid authorization credentials."
          },
          "404": {
            "description": "The requested resource was not found."
          },
          "413": {
            "description": "Payload too large. Request size limit exceeded."
          },
          "429": {
            "description": "Too many requests. API rate limit exceeded."
          },
          "500": {
            "description": "Server error. An error occurred on the server."
          }
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "summary": "Get practitioner by ID",
        "tags": [
          "Practitioner"
        ]
      }
    },
    "/PractitionerRole": {
      "get": {
        "description": "Retrieves a list of practitioner roles based on specified criteria, including identifiers and names, reflecting their roles and responsibilities.",
        "operationId": "ListPractitionerRoles",
        "parameters": [
          {
            "description": "The logical ID of the resource. Once assigned, this value never changes.",
            "in": "query",
            "name": "_id",
            "type": "string",
            "x-example": "I2-GNRAKWQCFSLEQIWPGYGOBCC3KCH2ZUC6JZ6YY42MUPKH7XACFBRQ0000",
            "x-ms-summary": "Id"
          },
          {
            "description": "A unique identifier for a practitioner within a given system.",
            "in": "query",
            "name": "practitioner.identifier",
            "type": "string",
            "x-ms-summary": "Practitioner Identifier"
          },
          {
            "description": "The given or family name of the practitioner.",
            "in": "query",
            "name": "practitioner.name",
            "type": "string",
            "x-ms-summary": "Practitioner Name"
          },
          {
            "description": "The date when the practitioner role record was last updated.",
            "in": "query",
            "name": "_lastUpdated",
            "type": "string",
            "x-ms-summary": "Last Updated"
          },
          {
            "description": "The page number being requested.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer",
            "x-ms-summary": "Page"
          },
          {
            "description": "The number of resources returned in a single page, up to a maximum of 100.",
            "format": "int32",
            "in": "query",
            "name": "_count",
            "type": "integer",
            "maximum": 100,
            "x-ms-summary": "Count"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response with a list of practitioner roles.",
            "schema": {
              "$ref": "#/definitions/PractitionerRoleBundle"
            }
          },
          "400": {
            "description": "Bad request. The request was invalid."
          },
          "401": {
            "description": "Authorization information not provided or invalid."
          },
          "403": {
            "description": "Invalid authorization credentials."
          },
          "404": {
            "description": "The requested resource was not found."
          },
          "413": {
            "description": "Payload too large. Request size limit exceeded."
          },
          "429": {
            "description": "Too many requests. API rate limit exceeded."
          },
          "500": {
            "description": "Server error. An error occurred on the server."
          }
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "summary": "List practitioner roles",
        "tags": [
          "PractitionerRole"
        ]
      }
    },
    "/PractitionerRole/{id}": {
      "get": {
        "description": "Retrieves detailed information about a specific practitioner role by its unique ID, including role assignments, qualifications, and identifiers.",
        "operationId": "GetPractitionerRoleById",
        "parameters": [
          {
            "description": "The logical ID of the resource, which remains unchanged once assigned.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response with details of the specified practitioner role.",
            "schema": {
              "$ref": "#/definitions/PractitionerRole"
            }
          },
          "400": {
            "description": "Bad request. The request was invalid."
          },
          "401": {
            "description": "Authorization information not provided or invalid."
          },
          "403": {
            "description": "Invalid authorization credentials."
          },
          "404": {
            "description": "The requested resource was not found."
          },
          "413": {
            "description": "Payload too large. Request size limit exceeded."
          },
          "429": {
            "description": "Too many requests. API rate limit exceeded."
          },
          "500": {
            "description": "Server error. An error occurred on the server."
          }
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "summary": "Get practitioner role by ID",
        "tags": [
          "PractitionerRole"
        ]
      }
    }
  },
  "definitions": {
    "Address": {
      "description": "Defines a physical location by its address components.",
      "properties": {
        "city": {
          "description": "The city name of the address.",
          "title": "City",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "country": {
          "description": "The country name of the address.",
          "title": "Country",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "district": {
          "description": "The district or subregion of the address that helps in further location.",
          "title": "District",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "extension": {
          "description": "Extension contains extra information about the address.",
          "title": "Extension",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "description": "A unique identifier for the address.",
          "title": "Id",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "line": {
          "description": "The actual address line that describes the physical location.",
          "title": "Line",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "postalCode": {
          "description": "The postal code of the address.",
          "title": "Postal Code",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "state": {
          "description": "The state or province of the address.",
          "title": "State",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "text": {
          "description": "A textual representation of the address.",
          "title": "Text",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "type": {
          "description": "The type of address (postal, physical, or both).",
          "title": "Type",
          "enum": [
            "postal",
            "physical",
            "both"
          ],
          "type": "string"
        },
        "use": {
          "description": "The use of the address (home, work, temp, old, billing).",
          "title": "Use",
          "enum": [
            "home",
            "work",
            "temp",
            "old",
            "billing"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Age": {
      "description": "Represents an age in years as a type of quantity.",
      "properties": {
        "code": {
          "description": "A machine-readable form of the unit of measure for the age.",
          "title": "Code",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "comparator": {
          "description": "Used to specify how the age should be compared as greater or less than.",
          "title": "Comparator",
          "pattern": "(<|<=|>=|>)",
          "type": "string"
        },
        "extension": {
          "description": "Extra information about the age that is not captured by other properties.",
          "title": "Extension",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "description": "A unique identifier for this particular age record.",
          "title": "Id",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "system": {
          "description": "The system that is used for the age code.",
          "title": "System",
          "pattern": "\\S*",
          "type": "string"
        },
        "unit": {
          "description": "The human-readable unit of measure for the age.",
          "title": "Unit",
          "type": "string"
        },
        "value": {
          "description": "The actual age value.",
          "title": "Value",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Annotation": {
      "description": "A text note that contains observational data and comments.",
      "properties": {
        "authorReference": {
          "description": "A reference to the author of the annotation.",
          "title": "Author Reference",
          "type": "object"
        },
        "authorString": {
          "description": "The name of the author as a string.",
          "title": "Author String",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by extensions.",
          "title": "Extension",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "description": "A unique identifier for the annotation.",
          "title": "Id",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "text": {
          "description": "The textual content of the annotation.",
          "title": "Text",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "time": {
          "description": "The time at which the annotation was made.",
          "title": "Time",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "type": "object"
    },
    "Attachment": {
      "description": "A complex type containing content in digital form.",
      "properties": {
        "contentType": {
          "description": "The mime type of the content.",
          "title": "Content Type",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "creation": {
          "description": "The date and time when the content was created.",
          "title": "Creation",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
          "type": "string"
        },
        "data": {
          "description": "The actual data of the content, represented as a base64 string.",
          "title": "Data",
          "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
          "type": "string"
        },
        "extension": {
          "description": "An extension for additional structured data.",
          "title": "Extension",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "hash": {
          "description": "A hash of the data (e.g., SHA-1, SHA-256, or MD5) for integrity verification.",
          "title": "Hash",
          "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
          "type": "string"
        },
        "id": {
          "description": "A unique identifier for the attachment.",
          "title": "Id",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "language": {
          "description": "The language of the content, represented as a BCP-47 language tag.",
          "title": "Language",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "size": {
          "description": "The size of the data in bytes.",
          "title": "Size",
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "description": "A label or title for the attachment.",
          "title": "Title",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "url": {
          "description": "A URL where the data can be accessed.",
          "title": "Url",
          "pattern": "\\S*",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BundleLink": {
      "description": "A link related to a bundle resource.",
      "properties": {
        "extension": {
          "description": "An extension for additional structured data.",
          "title": "Extension",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "description": "A unique identifier for the link.",
          "title": "Id",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "modifierExtension": {
          "description": "An extension that modifies other elements.",
          "title": "Modifier Extension",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "relation": {
          "description": "The type of relation to the linked resource (e.g., next, previous, etc.).",
          "title": "Relation",
          "type": "string"
        },
        "url": {
          "description": "The URL that points to the target of the link.",
          "title": "Url",
          "pattern": "\\S*",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CapabilityResource": {
      "description": "Describes the capabilities of a resource, including supported operations and interactions.",
      "properties": {
        "conditionalCreate": {
          "description": "Indicates if the server supports conditional create operations for this resource.",
          "title": "Conditional Create",
          "type": "boolean"
        },
        "conditionalDelete": {
          "description": "Specifies if and how the server supports conditional delete operations for this resource.",
          "title": "Conditional Delete",
          "enum": [
            "not-supported",
            "single",
            "multiple"
          ],
          "type": "string"
        },
        "conditionalRead": {
          "description": "Indicates the server's support for conditional read operations for this resource.",
          "title": "Conditional Read",
          "enum": [
            "not-supported",
            "modified-since",
            "not-match",
            "full-support"
          ],
          "type": "string"
        },
        "conditionalUpdate": {
          "description": "Specifies whether the server supports conditional update operations for this resource.",
          "title": "Conditional Update",
          "type": "boolean"
        },
        "documentation": {
          "description": "Provides additional documentation about the resource's capabilities.",
          "title": "Documentation",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "extension": {
          "description": "An extension for additional structured data relevant to the resource.",
          "title": "Extension",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "description": "A unique identifier for the capability resource instance.",
          "title": "Id",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "interaction": {
          "description": "A list of interactions supported by the server for this resource.",
          "title": "Interaction",
          "items": {
            "$ref": "#/definitions/ResourceInteraction"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "An extension that modifies other elements within the resource.",
          "title": "Modifier Extension",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "operation": {
          "description": "Defines a set of operations supported by the server for this resource.",
          "title": "Operation",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "type": "array"
        },
        "profile": {
          "description": "A reference to the profile that specifies conformance for this resource.",
          "title": "Profile",
          "pattern": "\\S*",
          "type": "string"
        },
        "readHistory": {
          "description": "Indicates if the server supports reading the history of a resource.",
          "title": "Read History",
          "type": "boolean"
        },
        "referencePolicy": {
          "description": "Describes the server's policies around resolving and enforcing references.",
          "title": "Reference Policy",
          "items": {
            "enum": [
              "literal",
              "logical",
              "resolves",
              "enforced",
              "local"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "searchInclude": {
          "description": "A list of search parameters that servers might choose to support when searching this resource.",
          "title": "Search Include",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "searchParam": {
          "description": "A list of search parameters for searching this resource supported by the server.",
          "title": "Search Param",
          "items": {
            "$ref": "#/definitions/SearchParam"
          },
          "type": "array"
        },
        "searchRevInclude": {
          "description": "A list of reverse includes (search parameters) that servers might support when searching this resource.",
          "title": "Search Rev Include",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "supportedProfile": {
          "description": "Profiles that are supported by the server for this resource.",
          "title": "Supported Profile",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of resource being described.",
          "title": "Type",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "updateCreate": {
          "description": "Indicates if the server supports create as part of the update operation.",
          "title": "Update Create",
          "type": "boolean"
        },
        "versioning": {
          "description": "The versioning policy supported by the server for this resource.",
          "title": "Versioning",
          "enum": [
            "no-version",
            "versioned",
            "versioned-update"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CapabilityStatement": {
      "description": "Describes the capabilities of a healthcare system in terms of its interactions and standards supported.",
      "properties": {
        "contact": {
          "title": "Contact",
          "description": "Contact details for the publishers of the capability statement.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "contained": {
          "title": "Contained",
          "description": "Contained, inline Resources.",
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "type": "array"
        },
        "copyright": {
          "title": "Copyright",
          "description": "A legal or historical statement about the capability statement.",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "date": {
          "title": "Date",
          "description": "The date this version of the capability statement was published.",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "A free text natural language description of the capability statement and its purpose.",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "document": {
          "title": "Document",
          "description": "Documentation for the system's implementation of this capability statement.",
          "items": {
            "$ref": "#/definitions/Document"
          },
          "type": "array"
        },
        "experimental": {
          "title": "Experimental",
          "description": "Indicates if this capability statement is for testing purposes.",
          "type": "boolean"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "fhirVersion": {
          "title": "FHIR Version",
          "description": "The version of FHIR on which this capability statement is based.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "format": {
          "title": "Format",
          "description": "The formats supported by this implementation.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for this capability statement.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "implementation": {
          "$ref": "#/definitions/Implementation"
        },
        "implementationGuide": {
          "title": "Implementation Guide",
          "description": "References to implementation guides that the system conforms to.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "implicitRules": {
          "title": "Implicit Rules",
          "description": "A set of rules under which this capability statement is intended to be used.",
          "pattern": "\\S*",
          "type": "string"
        },
        "imports": {
          "title": "Imports",
          "description": "Other capability statements that this capability statement adds to or overrides.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "instantiates": {
          "title": "Instantiates",
          "description": "Canonical references to other capability statements that this software implements.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "jurisdiction": {
          "title": "Jurisdiction",
          "description": "Identifies the jurisdiction this capability statement applies to.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "kind": {
          "title": "Kind",
          "description": "The type of capability statement (instance, capability, requirements).",
          "enum": [
            "instance",
            "capability",
            "requirements"
          ],
          "type": "string"
        },
        "language": {
          "title": "Language",
          "description": "The language this capability statement is written in.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "messaging": {
          "title": "Messaging",
          "description": "A description of the messaging capabilities of the solution.",
          "items": {
            "$ref": "#/definitions/Messaging"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that cannot be ignored even if unrecognized.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "title": "Name",
          "description": "A natural language name identifying the capability statement.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "patchFormat": {
          "title": "Patch Format",
          "description": "The formats supported for patch operations.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "publisher": {
          "title": "Publisher",
          "description": "The organization responsible for the publication of the capability statement.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "purpose": {
          "title": "Purpose",
          "description": "Explanation of why this capability statement is needed and why it has been designed as it has.",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "resourceType": {
          "title": "Resource Type",
          "description": "The type of resource described by this capability statement.",
          "type": "string"
        },
        "rest": {
          "title": "Rest",
          "description": "A definition of the restful capabilities of the solution, if any.",
          "items": {
            "$ref": "#/definitions/Rest"
          },
          "type": "array"
        },
        "software": {
          "$ref": "#/definitions/Software"
        },
        "status": {
          "title": "Status",
          "description": "The publication status of this capability statement (draft, active, retired, unknown).",
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ],
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "title": "Title",
          "description": "The title of the capability statement, if any.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "url": {
          "title": "Url",
          "description": "The canonical URL of the capability statement, which remains the same regardless of version.",
          "pattern": "\\S*",
          "type": "string"
        },
        "useContext": {
          "title": "Use Context",
          "description": "The context in which the capability statement is intended to be used.",
          "items": {
            "$ref": "#/definitions/UsageContext"
          },
          "type": "array"
        },
        "version": {
          "title": "Version",
          "description": "The version of the capability statement.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        }
      },
      "required": [
        "date",
        "fhirVersion",
        "format",
        "kind",
        "resourceType",
        "status"
      ],
      "type": "object"
    },
    "CodeFilter": {
      "description": "Specifies a filter that can be applied to code searching within resources.",
      "properties": {
        "code": {
          "title": "Code",
          "description": "The code(s) that will be targeted by the filter.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "An extension for additional structured data related to the CodeFilter.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for the CodeFilter instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "path": {
          "title": "Path",
          "description": "The path that describes where the filter applies.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "searchParam": {
          "title": "Search Param",
          "description": "The search parameter that is targeted by the filter.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "valueSet": {
          "title": "Value Set",
          "description": "The ValueSet that the CodeFilter applies to.",
          "pattern": "\\S*",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CodeableConcept": {
      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
      "properties": {
        "coding": {
          "title": "Coding",
          "description": "A list of codings for the concept.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "An extension for additional structured data related to the CodeableConcept.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for the CodeableConcept instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "text": {
          "title": "Text",
          "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Coding": {
      "description": "A reference to a code defined in a coding system.",
      "properties": {
        "code": {
          "title": "Code",
          "description": "The symbol in syntax defined by the system.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "display": {
          "title": "Display",
          "description": "A representation of the meaning of the code in human language.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional data provided through extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for this coding instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "system": {
          "title": "System",
          "description": "The identification of the code system that defines the meaning of the symbol in the code.",
          "pattern": "\\S*",
          "type": "string"
        },
        "userSelected": {
          "title": "User Selected",
          "description": "Indicates whether this coding was selected directly by the user.",
          "type": "boolean"
        },
        "version": {
          "title": "Version",
          "description": "The version of the code system which was used to choose this code.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContactDetail": {
      "description": "Specifies contact information for a person or organization.",
      "properties": {
        "extension": {
          "title": "Extension",
          "description": "Additional data provided through extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for this contact detail instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "The name of the individual or organization to contact.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "telecom": {
          "title": "Telecom",
          "description": "The contact details for the individual or organization.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ContactPoint": {
      "description": "Details of a technology-mediated contact point (phone, fax, email, etc.).",
      "properties": {
        "extension": {
          "title": "Extension",
          "description": "Additional data provided through extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for this contact point instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "rank": {
          "title": "Rank",
          "description": "Specifies a preference order for this contact point.",
          "format": "int32",
          "minimum": 1,
          "type": "integer"
        },
        "system": {
          "title": "System",
          "description": "The system of technology-mediated communication.",
          "enum": [
            "phone",
            "fax",
            "email",
            "pager",
            "url",
            "sms",
            "other"
          ],
          "type": "string"
        },
        "use": {
          "title": "Use",
          "description": "Identifies the purpose for this contact point.",
          "enum": [
            "home",
            "work",
            "temp",
            "old",
            "mobile"
          ],
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "The actual contact point details, such as phone number or email address.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Contributor": {
      "description": "A contributor to the resource.",
      "properties": {
        "contact": {
          "title": "Contact",
          "description": "Contact details for the contributor.",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information about the contributor.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the contributor.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "The name of the contributor.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "description": "The type of contribution (e.g., author, editor).",
          "enum": [
            "author",
            "editor",
            "reviewer",
            "endorser"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "type": "object"
    },
    "DataRequirement": {
      "description": "Describes the data requirements for a module or evaluation context.",
      "properties": {
        "codeFilter": {
          "title": "Code Filter",
          "description": "Filters on codes in data elements.",
          "items": {
            "$ref": "#/definitions/CodeFilter"
          },
          "type": "array"
        },
        "dateFilter": {
          "title": "Date Filter",
          "description": "Filters on date/time periods for data elements.",
          "items": {
            "$ref": "#/definitions/DateFilter"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional data for the requirement.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the data requirement.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "limit": {
          "title": "Limit",
          "description": "Maximum number of results to return.",
          "format": "int32",
          "minimum": 1,
          "type": "integer"
        },
        "mustSupport": {
          "title": "Must Support",
          "description": "Elements that must be supported.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "profile": {
          "title": "Profile",
          "description": "Specific profiles for the data.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sort": {
          "title": "Sort",
          "description": "Order of the returned data.",
          "items": {
            "$ref": "#/definitions/Sort"
          },
          "type": "array"
        },
        "subjectCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "title": "Subject Reference",
          "description": "The subject of the data requirement if specified as a reference.",
          "type": "object"
        },
        "type": {
          "title": "Type",
          "description": "The type of the required data.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "DateFilter": {
      "description": "Specifies the criteria for filtering by date.",
      "properties": {
        "extension": {
          "title": "Extension",
          "description": "Additional data for the filter.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the date filter.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "path": {
          "title": "Path",
          "description": "The path for the date element to filter on.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "searchParam": {
          "title": "Search Param",
          "description": "A search parameter for the date element to filter on.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "valueDateTime": {
          "title": "Value DateTime",
          "description": "The specific date time value to filter on.",
          "type": "string"
        },
        "valueDuration": {
          "$ref": "#/definitions/Duration"
        },
        "valuePeriod": {
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object"
    },
    "Document": {
      "properties": {
        "documentation": {
          "title": "Documentation",
          "description": "Descriptive information about the document.",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for the document.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "mode": {
          "title": "Mode",
          "description": "Indicates if the application acts as a producer or consumer.",
          "enum": [
            "producer",
            "consumer"
          ],
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that cannot be ignored.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "profile": {
          "title": "Profile",
          "description": "Conformance profile for the document.",
          "pattern": "\\S*",
          "type": "string"
        }
      },
      "required": [
        "mode",
        "profile"
      ],
      "type": "object"
    },
    "Dosage": {
      "description": "Indicates how a medication is to be administered.",
      "properties": {
        "additionalInstruction": {
          "title": "Additional Instruction",
          "description": "Supplemental instructions for the patient or caregiver.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "asNeededBoolean": {
          "title": "As Needed Boolean",
          "description": "Indicates if the medication is needed or not.",
          "type": "boolean"
        },
        "asNeededCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "doseAndRate": {
          "title": "Dose And Rate",
          "description": "The amount of medication administered and rate of administration.",
          "items": {
            "$ref": "#/definitions/DosageDoseAndRate"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional data for the dosage.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the dosage instruction.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "maxDosePerAdministration": {
          "$ref": "#/definitions/SimpleQuantity"
        },
        "maxDosePerLifetime": {
          "$ref": "#/definitions/SimpleQuantity"
        },
        "maxDosePerPeriod": {
          "$ref": "#/definitions/Ratio"
        },
        "method": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that modify other elements.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "patientInstruction": {
          "title": "Patient Instruction",
          "description": "Instructions for the patient or caregiver.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "route": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "title": "Sequence",
          "description": "The order of the dosage instructions.",
          "format": "int32",
          "type": "integer"
        },
        "site": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "title": "Text",
          "description": "Free text dosage instructions e.g. 'Take with water'.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "timing": {
          "$ref": "#/definitions/Timing"
        }
      },
      "type": "object"
    },
    "DosageDoseAndRate": {
      "properties": {
        "doseQuantity": {
          "$ref": "#/definitions/SimpleQuantity"
        },
        "doseRange": {
          "$ref": "#/definitions/Range"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional data for the dose and rate.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the dose and rate detail.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "rateQuantity": {
          "$ref": "#/definitions/SimpleQuantity"
        },
        "rateRange": {
          "$ref": "#/definitions/Range"
        },
        "rateRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "type": "object"
    },
    "Duration": {
      "description": "A length of time.",
      "properties": {
        "code": {
          "title": "Code",
          "description": "A code specifying the unit of time (e.g., minutes, hours).",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "comparator": {
          "title": "Comparator",
          "description": "Used to specify if the duration is less than, equal to, or greater than the stated value.",
          "pattern": "(<|<=|>=|>)",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for the duration.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "system": {
          "title": "System",
          "description": "The system that defines the coded unit.",
          "pattern": "\\S*",
          "type": "string"
        },
        "unit": {
          "title": "Unit",
          "description": "The unit of time (e.g., minutes, hours).",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "The numerical value of the duration.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Expression": {
      "description": "A structured expression.",
      "properties": {
        "description": {
          "title": "Description",
          "description": "A human-readable description of the expression.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "expression": {
          "title": "Expression",
          "description": "The text of the expression.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for the expression.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "language": {
          "title": "Language",
          "description": "The language of the expression (e.g., SQL, FHIRPath).",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "A name for the expression, to be used for references.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "A URI reference to the expression.",
          "pattern": "\\S*",
          "type": "string"
        }
      },
      "required": [
        "language"
      ],
      "type": "object"
    },
    "GatewayError": {
      "description": "Represents an error response from the API Gateway, for scenarios like authorization failures or rate limits exceeded.",
      "properties": {
        "message": {
          "title": "Message",
          "description": "A human-readable description of the error.",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "HoursOfOperation": {
      "description": "Specifies the hours during which operations are conducted.",
      "properties": {
        "allDay": {
          "title": "All Day",
          "description": "Indicates whether the service is available all day.",
          "type": "boolean"
        },
        "closingTime": {
          "title": "Closing Time",
          "description": "The time when operations end for the day.",
          "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
          "type": "string"
        },
        "daysOfWeek": {
          "title": "Days of Week",
          "description": "The days of the week when operations are conducted.",
          "items": {
            "enum": [
              "mon",
              "tue",
              "wed",
              "thu",
              "fri",
              "sat",
              "sun"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for these hours of operation.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that modify the hours of operation.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "openingTime": {
          "title": "Opening Time",
          "description": "The time when operations begin for the day.",
          "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HumanName": {
      "description": "A human's name with the ability to identify parts and usage.",
      "properties": {
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "family": {
          "title": "Family",
          "description": "The family name (often called 'Surname').",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "given": {
          "title": "Given",
          "description": "Given names (not including the family name).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for the human name.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "prefix": {
          "title": "Prefix",
          "description": "Honorifics or titles preceding the name.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "suffix": {
          "title": "Suffix",
          "description": "Qualifiers or titles following the name.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "text": {
          "title": "Text",
          "description": "Text representation of the full name.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "use": {
          "title": "Use",
          "description": "Identifies the purpose for this name.",
          "enum": [
            "usual",
            "official",
            "temp",
            "nickname",
            "anonymous",
            "old",
            "maiden"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Identifier": {
      "description": "A unique identifier assigned to an entity.",
      "properties": {
        "assigner": {
          "title": "Assigner",
          "description": "The organization that issued the identifier.",
          "type": "object"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional data for the identifier.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for the Identifier instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "system": {
          "title": "System",
          "description": "The system that is used to assign the identifier.",
          "pattern": "\\S*",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "use": {
          "title": "Use",
          "description": "The intended use of the identifier.",
          "enum": [
            "usual",
            "official",
            "temp",
            "secondary",
            "old"
          ],
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "The value of the identifier.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Implementation": {
      "description": "Details about the implementation of a software solution.",
      "properties": {
        "custodian": {
          "title": "Custodian",
          "description": "The organization managing the implementation.",
          "type": "object"
        },
        "description": {
          "title": "Description",
          "description": "A description of the implementation.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional data for the implementation.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for the Implementation instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that modify the implementation.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "url": {
          "title": "Url",
          "description": "The URL of the implementation documentation or homepage.",
          "pattern": "\\S*",
          "type": "string"
        }
      },
      "required": [
        "description"
      ],
      "type": "object"
    },
    "Issue": {
      "description": "Information about the outcome of an operation: success, failure, partial success, etc.",
      "properties": {
        "code": {
          "title": "Code",
          "description": "A code indicating the type of issue.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "diagnostics": {
          "title": "Diagnostics",
          "description": "Diagnostic information about the issue.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "expression": {
          "title": "Expression",
          "description": "Expressions related to the issue.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional data for the issue.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "A unique identifier for the Issue instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "location": {
          "title": "Location",
          "description": "The location of the issue in the source.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that modify the issue.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "severity": {
          "title": "Severity",
          "description": "The severity of the issue (fatal, error, warning, information).",
          "enum": [
            "fatal",
            "error",
            "warning",
            "information"
          ],
          "type": "string"
        }
      },
      "required": [
        "code",
        "severity"
      ],
      "type": "object"
    },
    "Location": {
      "description": "Information about physical locations where services are provided and resources are located.",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "alias": {
          "title": "Alias",
          "description": "A list of alternative names that the location is known as, or was known as in the past.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "availabilityExceptions": {
          "title": "Availability Exceptions",
          "description": "A description of when the location is not available.",
          "type": "string"
        },
        "contained": {
          "title": "Contained",
          "description": "Contained, inline Resources.",
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "type": "array"
        },
        "description": {
          "title": "Description",
          "description": "Description of the Location, which helps in finding or referencing the place.",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "description": "Technical endpoints providing access to services operated for the location.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "hoursOfOperation": {
          "$ref": "#/definitions/HoursOfOperation"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the Location resource.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "identifier": {
          "title": "Identifier",
          "description": "Unique code or number identifying the location to its users.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "implicitRules": {
          "title": "Implicit Rules",
          "description": "A set of rules under which this content was created.",
          "pattern": "\\S*",
          "type": "string"
        },
        "language": {
          "title": "Language",
          "description": "The language of the resource content.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "managingOrganization": {
          "title": "Managing Organization",
          "description": "The organization responsible for the provisioning and upkeep of the location.",
          "type": "object"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "mode": {
          "title": "Mode",
          "description": "Indicates whether the location is still in use.",
          "enum": [
            "instance",
            "kind"
          ],
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that cannot be ignored.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "title": "Name",
          "description": "Name of the location as used by humans.",
          "type": "string"
        },
        "operationalStatus": {
          "$ref": "#/definitions/Coding"
        },
        "partOf": {
          "title": "Part Of",
          "description": "Another Location of which this Location is physically a part of.",
          "type": "object"
        },
        "physicalType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "position": {
          "$ref": "#/definitions/Position"
        },
        "resourceType": {
          "title": "Resource Type",
          "description": "The type of the resource (Location).",
          "type": "string"
        },
        "status": {
          "title": "Status",
          "description": "The status of the location (e.g., active, suspended, inactive).",
          "enum": [
            "active",
            "suspended",
            "inactive"
          ],
          "type": "string"
        },
        "telecom": {
          "title": "Telecom",
          "description": "Contact details of the location.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "title": "Type",
          "description": "Type of function performed at the location.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "required": [
        "name",
        "resourceType"
      ],
      "type": "object"
    },
    "LocationBundle": {
      "description": "A collection of 'Location' resources returned as a result of a search/query operation.",
      "properties": {
        "entry": {
          "title": "Entry",
          "description": "A list of entries, each encapsulating a 'Location' resource.",
          "items": {
            "$ref": "#/definitions/LocationEntry"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the bundle.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "title": "Implicit Rules",
          "description": "A reference to the rules under which the bundle was generated.",
          "pattern": "\\S*",
          "type": "string"
        },
        "language": {
          "title": "Language",
          "description": "The language of the bundle.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "link": {
          "title": "Link",
          "description": "A series of links that provide the context of this bundle.",
          "items": {
            "$ref": "#/definitions/BundleLink"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "resourceType": {
          "title": "Resource Type",
          "description": "The type of the resource (Bundle).",
          "type": "string"
        },
        "signature": {
          "$ref": "#/definitions/Signature"
        },
        "timestamp": {
          "title": "Timestamp",
          "description": "The date/time at which the bundle was composed.",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "type": "string"
        },
        "total": {
          "title": "Total",
          "description": "The total number of resources in the bundle.",
          "format": "int32",
          "minimum": 0,
          "type": "integer"
        },
        "type": {
          "title": "Type",
          "description": "The type of the bundle (e.g., document, searchset, collection).",
          "enum": [
            "document",
            "message",
            "transaction",
            "transaction-response",
            "batch",
            "batch-response",
            "history",
            "searchset",
            "collection"
          ],
          "type": "string"
        }
      },
      "required": [
        "resourceType",
        "type"
      ],
      "type": "object"
    },
    "LocationEntry": {
      "description": "An entry in a 'LocationBundle' containing a 'Location' resource and related information.",
      "properties": {
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "fullUrl": {
          "title": "Full Url",
          "description": "The absolute URL that is the target of the entry.",
          "pattern": "\\S*",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the entry within the bundle.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "link": {
          "title": "Link",
          "description": "A series of links related to the entry.",
          "items": {
            "$ref": "#/definitions/BundleLink"
          },
          "type": "array"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that modify the entry.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "request": {
          "$ref": "#/definitions/Request"
        },
        "resource": {
          "$ref": "#/definitions/Location"
        },
        "response": {
          "$ref": "#/definitions/Response"
        },
        "search": {
          "$ref": "#/definitions/Search"
        }
      },
      "type": "object"
    },
    "Messaging": {
      "description": "Specifies the messaging capabilities of the system, including endpoints and supported messages.",
      "properties": {
        "documentation": {
          "title": "Documentation",
          "description": "Documentation on the messaging capabilities.",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "description": "The network address where messages are accepted.",
          "items": {
            "$ref": "#/definitions/MessagingEndpoint"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the Messaging resource.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that modify the resource.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "reliableCache": {
          "title": "Reliable Cache",
          "description": "The duration in seconds for which the endpoint can reliably cache messages.",
          "format": "int32",
          "minimum": 0,
          "type": "integer"
        },
        "supportedMessage": {
          "title": "Supported Message",
          "description": "Messages supported by this system.",
          "items": {
            "$ref": "#/definitions/SupportedMessage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MessagingEndpoint": {
      "description": "An endpoint that provides access to messaging services.",
      "properties": {
        "address": {
          "title": "Address",
          "description": "The network address of the endpoint.",
          "pattern": "\\S*",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the MessagingEndpoint instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that modify the endpoint.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "protocol": {
          "$ref": "#/definitions/Coding"
        }
      },
      "required": [
        "address",
        "protocol"
      ],
      "type": "object"
    },
    "Meta": {
      "description": "Metadata about a resource, including version, profile, and security.",
      "properties": {
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the Meta instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "lastUpdated": {
          "title": "Last Updated",
          "description": "The last time the resource was updated.",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "type": "string"
        },
        "profile": {
          "title": "Profile",
          "description": "Profiles that define the resource's structure and use.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "security": {
          "title": "Security",
          "description": "Security tags for the resource.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "source": {
          "title": "Source",
          "description": "The location where the resource was generated.",
          "pattern": "\\S*",
          "type": "string"
        },
        "tag": {
          "title": "Tag",
          "description": "Tags for the resource.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "versionId": {
          "title": "Version Id",
          "description": "The version of the resource.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Money": {
      "description": "A representation of monetary value including currency.",
      "properties": {
        "currency": {
          "title": "Currency",
          "description": "The code for the currency of the money.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the Money instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "Numerical value (with implicit precision) of the money.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Narrative": {
      "description": "A human-readable summary of the resource conveying the essential clinical and business information for the resource.",
      "properties": {
        "div": {
          "title": "Div",
          "description": "The XHTML content of the narrative.",
          "pattern": "<.+>",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the Narrative instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "status": {
          "title": "Status",
          "description": "The status of the narrative content generation.",
          "enum": [
            "generated",
            "extensions",
            "additional",
            "empty"
          ],
          "type": "string"
        }
      },
      "required": [
        "div",
        "status"
      ],
      "type": "object"
    },
    "Operation": {
      "description": "An action or operation supported by the system.",
      "properties": {
        "definition": {
          "title": "Definition",
          "description": "A reference to the formal definition of the operation.",
          "pattern": "\\S*",
          "type": "string"
        },
        "documentation": {
          "title": "Documentation",
          "description": "Documentation about the operation.",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional content defined by extensions.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the Operation instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that modify the operation.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "title": "Name",
          "description": "A human-readable name for the operation.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        }
      },
      "required": [
        "definition",
        "name"
      ],
      "type": "object"
    },
    "OperationOutcome": {
      "description": "A collection of error, warning, or information messages that result from a system operation.",
      "properties": {
        "contained": {
          "title": "Contained",
          "description": "Contained resources within the OperationOutcome.",
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "Extensions for additional information.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the OperationOutcome instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "implicitRules": {
          "title": "Implicit Rules",
          "description": "A reference to the set of rules under which this resource was created.",
          "pattern": "\\S*",
          "type": "string"
        },
        "issue": {
          "title": "Issue",
          "description": "A list of issues related to the operation.",
          "items": {
            "$ref": "#/definitions/Issue"
          },
          "type": "array"
        },
        "language": {
          "title": "Language",
          "description": "The language of the resource content.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that modify the resource.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "resourceType": {
          "title": "Resource Type",
          "description": "Type of resource (OperationOutcome).",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      },
      "required": [
        "issue",
        "resourceType"
      ],
      "type": "object"
    },
    "Organization": {
      "description": "Represents a group of people defined by a common purpose, such as a hospital, department, team, or insurance company.",
      "properties": {
        "active": {
          "title": "Active",
          "description": "Indicates whether the organization is active or inactive.",
          "type": "boolean"
        },
        "address": {
          "items": {
            "$ref": "#/definitions/Address"
          },
          "type": "array"
        },
        "alias": {
          "title": "Alias",
          "description": "A list of alternative names that the organization is known by, or was known by in the past.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "contact": {
          "items": {
            "$ref": "#/definitions/OrganizationContact"
          },
          "type": "array"
        },
        "contained": {
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "type": "array"
        },
        "endpoint": {
          "title": "Endpoint",
          "description": "Technical endpoints providing access to electronic services operated for the organization.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "Extensions for additional information.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "Unique identifier for the Organization instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "identifier": {
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "implicitRules": {
          "title": "Implicit Rules",
          "description": "A reference to the set of rules under which this resource was created.",
          "pattern": "\\S*",
          "type": "string"
        },
        "language": {
          "title": "Language",
          "description": "The language of the resource content.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Extensions that modify the resource.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "title": "Name",
          "description": "The name of the organization.",
          "type": "string"
        },
        "partOf": {
          "title": "Part Of",
          "description": "The organization of which this organization forms a part.",
          "type": "object"
        },
        "resourceType": {
          "title": "Resource Type",
          "description": "Type of resource (Organization).",
          "type": "string"
        },
        "telecom": {
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "required": [
        "active",
        "name",
        "resourceType"
      ],
      "type": "object"
    },
    "OrganizationBundle": {
      "example": {
        "entry": [
          {
            "fullUrl": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Organization/I2-CYEXXOSUSGHOX6424MLNR4CQ4F7FZIOAZQJ3PH4L4MIIABRNZVVQ0000",
            "resource": {
              "active": true,
              "address": [
                {
                  "city": "CHEYENNE",
                  "line": [
                    "2360 E PERSHING BLVD"
                  ],
                  "postalCode": "82001-5356",
                  "state": "WY",
                  "text": "2360 E PERSHING BLVD CHEYENNE WY 82001-5356"
                }
              ],
              "id": "I2-CYEXXOSUSGHOX6424MLNR4CQ4F7FZIOAZQJ3PH4L4MIIABRNZVVQ0000",
              "identifier": [
                {
                  "system": "http://hl7.org/fhir/sid/us-npi",
                  "value": "1164471991"
                },
                {
                  "system": "https://api.va.gov/services/provider-directory/v0/r4/NamingSystem/va-facility-identifier",
                  "type": {
                    "coding": [
                      {
                        "code": "FI",
                        "display": "Facility ID",
                        "system": "http://terminology.hl7.org/CodeSystem/v2-0203"
                      }
                    ],
                    "text": "Facility ID"
                  },
                  "use": "usual",
                  "value": "vha_442"
                }
              ],
              "name": "CHEYENNE VA MEDICAL",
              "resourceType": "Organization"
            },
            "search": {
              "mode": "match"
            }
          }
        ],
        "link": [
          {
            "relation": "first",
            "url": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Organization?_id=I2-CYEXXOSUSGHOX6424MLNR4CQ4F7FZIOAZQJ3PH4L4MIIABRNZVVQ0000&_count=30&page=1"
          },
          {
            "relation": "self",
            "url": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Organization?_id=I2-CYEXXOSUSGHOX6424MLNR4CQ4F7FZIOAZQJ3PH4L4MIIABRNZVVQ0000&_count=30&page=1"
          },
          {
            "relation": "last",
            "url": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Organization?_id=I2-CYEXXOSUSGHOX6424MLNR4CQ4F7FZIOAZQJ3PH4L4MIIABRNZVVQ0000&_count=30&page=1"
          }
        ],
        "resourceType": "Bundle",
        "total": 1,
        "type": "searchset"
      },
      "properties": {
        "entry": {
          "items": {
            "$ref": "#/definitions/OrganizationEntry"
          },
          "type": "array"
        },
        "id": {
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string",
          "title": "Identifier",
          "description": "The unique identifier for this bundle."
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "pattern": "\\S*",
          "type": "string",
          "title": "Implicit Rules",
          "description": "A reference to the set of rules applied to the bundle."
        },
        "language": {
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string",
          "title": "Language",
          "description": "The language of the content in the bundle."
        },
        "link": {
          "items": {
            "$ref": "#/definitions/BundleLink"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "resourceType": {
          "type": "string",
          "title": "Resource Type",
          "description": "Defines the type of resource, in this case, a bundle."
        },
        "signature": {
          "$ref": "#/definitions/Signature"
        },
        "timestamp": {
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "type": "string",
          "title": "Timestamp",
          "description": "The date and time when the bundle was compiled."
        },
        "total": {
          "format": "int32",
          "minimum": 0,
          "type": "integer",
          "title": "Total",
          "description": "The total number of entries in the bundle."
        },
        "type": {
          "enum": [
            "document",
            "message",
            "transaction",
            "transaction-response",
            "batch",
            "batch-response",
            "history",
            "searchset",
            "collection"
          ],
          "type": "string",
          "title": "Type",
          "description": "The type of bundle, such as document, message, transaction."
        }
      },
      "required": [
        "resourceType",
        "type"
      ],
      "type": "object"
    },
    "OrganizationContact": {
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "extension": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "title": "Extension",
          "description": "Additional content defined by implementations."
        },
        "id": {
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string",
          "title": "Identifier",
          "description": "Unique identifier for the organization contact."
        },
        "modifierExtension": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "title": "Modifier Extension",
          "description": "Extensions that cannot be ignored even if unrecognized."
        },
        "name": {
          "$ref": "#/definitions/HumanName"
        },
        "purpose": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "telecom": {
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "Organization Contact",
      "description": "A contact detail for the organization."
    },
    "OrganizationEntry": {
      "properties": {
        "extension": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "title": "Extension",
          "description": "Extension for additional information."
        },
        "fullUrl": {
          "pattern": "\\S*",
          "type": "string",
          "title": "Full URL",
          "description": "The full URL for the resource."
        },
        "id": {
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string",
          "title": "ID",
          "description": "The unique identifier for the entry."
        },
        "link": {
          "items": {
            "$ref": "#/definitions/BundleLink"
          },
          "type": "array",
          "title": "Link",
          "description": "A series of links that provide context to this entry."
        },
        "modifierExtension": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "title": "Modifier Extension",
          "description": "Extensions that modify the resource."
        },
        "request": {
          "$ref": "#/definitions/Request"
        },
        "resource": {
          "$ref": "#/definitions/Organization"
        },
        "response": {
          "$ref": "#/definitions/Response"
        },
        "search": {
          "$ref": "#/definitions/Search"
        }
      },
      "type": "object",
      "title": "Organization Entry",
      "description": "Represents an entry in an organization bundle."
    },
    "ParameterDefinition": {
      "description": "Defines a parameter used in a module or operation.",
      "properties": {
        "documentation": {
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string",
          "title": "Documentation",
          "description": "A brief description of the parameter."
        },
        "extension": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "title": "Extension",
          "description": "Additional content defined by implementations."
        },
        "id": {
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string",
          "title": "ID",
          "description": "Unique identifier for the parameter definition."
        },
        "max": {
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string",
          "title": "Maximum",
          "description": "The maximum number of times the parameter may appear."
        },
        "min": {
          "format": "int32",
          "type": "integer",
          "title": "Minimum",
          "description": "The minimum number of times the parameter must appear."
        },
        "name": {
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string",
          "title": "Name",
          "description": "The name of the parameter used to identify it."
        },
        "profile": {
          "pattern": "\\S*",
          "type": "string",
          "title": "Profile",
          "description": "A profile on the parameter's type."
        },
        "type": {
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string",
          "title": "Type",
          "description": "The type for this parameter."
        },
        "use": {
          "enum": [
            "in",
            "out"
          ],
          "type": "string",
          "title": "Use",
          "description": "How the parameter is used."
        }
      },
      "required": [
        "type",
        "use"
      ],
      "type": "object",
      "title": "Parameter Definition"
    },
    "Period": {
      "description": "A period of time described by start and end date/time boundaries.",
      "properties": {
        "end": {
          "description": "The end date/time of the period.",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
          "title": "End",
          "type": "string"
        },
        "extension": {
          "description": "Additional information or metadata about the period.",
          "items": {
            "type": "object"
          },
          "title": "Extension",
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the period.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "title": "Id",
          "type": "string"
        },
        "start": {
          "description": "The start date/time of the period.",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
          "title": "Start",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Position": {
      "description": "The geographical position of a point.",
      "properties": {
        "altitude": {
          "description": "The altitude in meters above the reference ellipsoid.",
          "title": "Altitude",
          "type": "number"
        },
        "extension": {
          "description": "Additional information or metadata about the position.",
          "items": {
            "type": "object"
          },
          "title": "Extension",
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the position.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "title": "Id",
          "type": "string"
        },
        "latitude": {
          "description": "The latitude in decimal degrees (WGS 84).",
          "title": "Latitude",
          "type": "number"
        },
        "longitude": {
          "description": "The longitude in decimal degrees (WGS 84).",
          "title": "Longitude",
          "type": "number"
        },
        "modifierExtension": {
          "description": "Additional information or metadata about the position.",
          "items": {
            "type": "object"
          },
          "title": "Modifier Extension",
          "type": "array"
        }
      },
      "required": [
        "latitude",
        "longitude"
      ],
      "type": "object"
    },
    "Practitioner": {
      "description": "A person who is directly or indirectly involved in the provision of healthcare.",
      "example": {
        "active": true,
        "address": [
          {
            "city": "Cheyenne",
            "line": [
              "555 E 5th St",
              "Suite B"
            ],
            "period": {
              "end": "2015-04-02",
              "start": "2010-01-01"
            },
            "postalCode": "82001",
            "state": "Wyoming"
          }
        ],
        "birthDate": "1964-02-23",
        "gender": "Female",
        "id": "I2-VLZYJVF7MOB2SFAKTAPNSQIBWZS22HGVT3A56E5D5PHDUWJGQIGQ0000",
        "identifier": [
          {
            "assigner": {
              "display": "Master Patient Index"
            },
            "system": "http://va.gov/mpi",
            "type": {
              "coding": [
                {
                  "code": "MR",
                  "system": "http://hl7.org/fhir/v2/0203"
                }
              ]
            },
            "use": "usual",
            "value": "1015517260V990420"
          },
          {
            "system": "http://hl7.org/fhir/sid/us-npi",
            "value": "1932127842"
          }
        ],
        "name": [
          {
            "family": "Doe922",
            "given": [
              "Jane460"
            ],
            "prefix": [
              "Dr."
            ],
            "suffix": [
              "MD"
            ]
          }
        ],
        "qualification": [
          {
            "code": {
              "text": "MD"
            }
          }
        ],
        "resourceType": "Practitioner",
        "telecom": [
          {
            "system": "phone",
            "use": "work",
            "value": "555-555-1137"
          },
          {
            "system": "phone",
            "use": "home",
            "value": "555-4055"
          },
          {
            "system": "pager",
            "use": "mobile",
            "value": "5-541"
          }
        ]
      },
      "properties": {
        "active": {
          "description": "Indicates if the practitioner is currently active in healthcare provision.",
          "type": "boolean",
          "title": "Active"
        },
        "address": {
          "description": "The address(es) where the practitioner can be contacted or visited.",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "title": "Address",
          "type": "array"
        },
        "birthDate": {
          "description": "The date of birth of the practitioner.",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
          "title": "Birth Date",
          "type": "string"
        },
        "communication": {
          "description": "A language the practitioner is able to use in patient communication.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "title": "Communication",
          "type": "array"
        },
        "contained": {
          "description": "Resources contained in this resource.",
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "title": "Contained",
          "type": "array"
        },
        "extensions": {
          "description": "Additional information or metadata about the practitioner.",
          "items": {
            "type": "object"
          },
          "title": "Extensions",
          "type": "array"
        },
        "gender": {
          "description": "The gender identity of the practitioner.",
          "enum": [
            "Male",
            "Female",
            "Other",
            "Unknown"
          ],
          "title": "Gender",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the practitioner.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "title": "Id",
          "type": "string"
        },
        "identifier": {
          "description": "A list of the practitioner's identifiers.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "title": "Identifier",
          "type": "array"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed.",
          "pattern": "\\S*",
          "title": "Implicit Rules",
          "type": "string"
        },
        "language": {
          "description": "Language the practitioner is able to use in patient communication.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "title": "Language",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtensions": {
          "description": "Additional information or metadata about the practitioner.",
          "items": {
            "type": "object"
          },
          "title": "Modifier Extensions",
          "type": "array"
        },
        "name": {
          "description": "The name(s) associated with the practitioner.",
          "items": {
            "$ref": "#/definitions/HumanName"
          },
          "title": "Name",
          "type": "array"
        },
        "photo": {
          "description": "A photo of the practitioner.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "title": "Photo",
          "type": "array"
        },
        "qualification": {
          "description": "Qualifications obtained by training and certification.",
          "items": {
            "$ref": "#/definitions/PractitionerQualification"
          },
          "title": "Qualification",
          "type": "array"
        },
        "resourceType": {
          "description": "Type of resource (Practitioner).",
          "title": "Resource Type",
          "type": "string"
        },
        "telecom": {
          "description": "A contact detail for the practitioner.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "title": "Telecom",
          "type": "array"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      },
      "required": [
        "identifier",
        "name",
        "resourceType"
      ],
      "type": "object"
    },
    "PractitionerAvailableTime": {
      "description": "The times that the practitioner is available for appointments.",
      "properties": {
        "allDay": {
          "description": "Indicates whether the practitioner is available all day.",
          "title": "All Day",
          "type": "boolean"
        },
        "availableEndTime": {
          "description": "The end time that the practitioner is available for appointments.",
          "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
          "title": "Available End Time",
          "type": "string"
        },
        "availableStartTime": {
          "description": "The start time that the practitioner is available for appointments.",
          "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
          "title": "Available Start Time",
          "type": "string"
        },
        "daysOfWeek": {
          "description": "The days of the week that the practitioner is available for appointments.",
          "items": {
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "title": "Days of Week",
            "type": "string"
          },
          "title": "Days of Week",
          "type": "array"
        },
        "extension": {
          "description": "Additional information or metadata about the practitioner's availability.",
          "items": {
            "type": "object"
          },
          "title": "Extension",
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the practitioner availability.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "title": "Id",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Additional information or metadata about the practitioner's availability.",
          "items": {
            "type": "object"
          },
          "title": "Modifier Extension",
          "type": "array"
        }
      },
      "type": "object"
    },
    "PractitionerBundle": {
      "description": "A bundle of resources containing information about one or more practitioners.",
      "example": {
        "entry": [
          {
            "fullUrl": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Practitioner/I2-VLZYJVF7MOB2SFAKTAPNSQIBWZS22HGVT3A56E5D5PHDUWJGQIGQ0000",
            "resource": {
              "active": true,
              "address": [
                {
                  "city": "Cheyenne",
                  "line": [
                    "555 E 5th St",
                    "Suite B"
                  ],
                  "period": {
                    "end": "2015-04-02",
                    "start": "2010-01-01"
                  },
                  "postalCode": "82001",
                  "state": "Wyoming"
                }
              ],
              "birthDate": "1964-02-23",
              "gender": "Female",
              "id": "I2-VLZYJVF7MOB2SFAKTAPNSQIBWZS22HGVT3A56E5D5PHDUWJGQIGQ0000",
              "identifier": [
                {
                  "assigner": {
                    "display": "Master Patient Index"
                  },
                  "system": "http://va.gov/mpi",
                  "type": {
                    "coding": [
                      {
                        "code": "MR",
                        "system": "http://hl7.org/fhir/v2/0203"
                      }
                    ]
                  },
                  "use": "usual",
                  "value": "1015517260V990420"
                },
                {
                  "system": "http://hl7.org/fhir/sid/us-npi",
                  "value": "1932127842"
                }
              ],
              "name": [
                {
                  "family": "Doe922",
                  "given": [
                    "Jane460"
                  ],
                  "prefix": [
                    "Dr."
                  ],
                  "suffix": [
                    "MD"
                  ]
                }
              ],
              "qualification": [
                {
                  "code": {
                    "text": "MD"
                  }
                }
              ],
              "resourceType": "Practitioner",
              "telecom": [
                {
                  "system": "phone",
                  "use": "work",
                  "value": "555-555-1137"
                },
                {
                  "system": "phone",
                  "use": "home",
                  "value": "555-4055"
                },
                {
                  "system": "pager",
                  "use": "mobile",
                  "value": "5-541"
                }
              ]
            },
            "search": {
              "mode": "match"
            }
          }
        ],
        "link": [
          {
            "relation": "first",
            "url": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Practitioner?_id=I2-VLZYJVF7MOB2SFAKTAPNSQIBWZS22HGVT3A56E5D5PHDUWJGQIGQ0000&_count=30&page=1"
          },
          {
            "relation": "self",
            "url": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Practitioner?_id=I2-VLZYJVF7MOB2SFAKTAPNSQIBWZS22HGVT3A56E5D5PHDUWJGQIGQ0000&_count=30&page=1"
          },
          {
            "relation": "last",
            "url": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Practitioner?_id=I2-VLZYJVF7MOB2SFAKTAPNSQIBWZS22HGVT3A56E5D5PHDUWJGQIGQ0000&_count=30&page=1"
          }
        ],
        "resourceType": "Bundle",
        "total": 1,
        "type": "searchset"
      },
      "properties": {
        "entry": {
          "description": "An entry in the bundle - will have a resource, or information about a search, etc.",
          "items": {
            "$ref": "#/definitions/PractitionerEntry"
          },
          "title": "Entry",
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the bundle.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "title": "Id",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed.",
          "pattern": "\\S*",
          "title": "Implicit Rules",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "title": "Language",
          "type": "string"
        },
        "link": {
          "description": "Links related to this Bundle.",
          "items": {
            "$ref": "#/definitions/BundleLink"
          },
          "title": "Link",
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "resourceType": {
          "description": "Type of resource (Bundle).",
          "title": "Resource Type",
          "type": "string"
        },
        "signature": {
          "$ref": "#/definitions/Signature"
        },
        "timestamp": {
          "description": "When the bundle was assembled.",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "title": "Timestamp",
          "type": "string"
        },
        "total": {
          "description": "If search, the total number of matches.",
          "format": "int32",
          "minimum": 0,
          "title": "Total",
          "type": "integer"
        },
        "type": {
          "description": "The type of the resource.",
          "enum": [
            "document",
            "message",
            "transaction",
            "transaction-response",
            "batch",
            "batch-response",
            "history",
            "searchset",
            "collection"
          ],
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "resourceType",
        "type"
      ],
      "type": "object"
    },
    "PractitionerEntry": {
      "description": "An entry in the bundle containing information about a practitioner.",
      "properties": {
        "extension": {
          "description": "Additional information or metadata about the practitioner entry.",
          "items": {
            "type": "object"
          },
          "title": "Extension",
          "type": "array"
        },
        "fullUrl": {
          "description": "The URL of the entry.",
          "pattern": "\\S*",
          "title": "Full URL",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the practitioner entry.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "title": "ID",
          "type": "string"
        },
        "link": {
          "description": "Links related to this practitioner entry.",
          "items": {
            "$ref": "#/definitions/BundleLink"
          },
          "title": "Link",
          "type": "array"
        },
        "modifierExtension": {
          "description": "Additional information or metadata about the practitioner entry.",
          "items": {
            "type": "object"
          },
          "title": "Modifier Extension",
          "type": "array"
        },
        "request": {
          "$ref": "#/definitions/Request"
        },
        "resource": {
          "$ref": "#/definitions/Practitioner"
        },
        "response": {
          "$ref": "#/definitions/Response"
        },
        "search": {
          "$ref": "#/definitions/Search"
        }
      },
      "type": "object"
    },
    "PractitionerNotAvailable": {
      "description": "The times when the practitioner is not available for appointments.",
      "properties": {
        "description": {
          "description": "A description of why the practitioner is not available.",
          "title": "Description",
          "type": "string"
        },
        "during": {
          "$ref": "#/definitions/Period"
        },
        "extension": {
          "description": "Additional information or metadata about the practitioner's unavailability.",
          "items": {
            "type": "object"
          },
          "title": "Extension",
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the practitioner's unavailability.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "title": "ID",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Additional information or metadata about the practitioner's unavailability.",
          "items": {
            "type": "object"
          },
          "title": "Modifier Extension",
          "type": "array"
        }
      },
      "required": [
        "description"
      ],
      "type": "object"
    },
    "PractitionerQualification": {
      "description": "The qualifications or certifications held by the practitioner.",
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional information or metadata about the practitioner's qualification.",
          "items": {
            "type": "object"
          },
          "title": "Extension",
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the practitioner qualification.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "title": "ID",
          "type": "string"
        },
        "identifier": {
          "description": "Identifiers associated with the practitioner qualification.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "title": "Identifier",
          "type": "array"
        },
        "issuer": {
          "description": "The entity that issued the qualification.",
          "type": "object",
          "title": "Issuer"
        },
        "modifierExtension": {
          "description": "Additional information or metadata about the practitioner's qualification.",
          "items": {
            "type": "object"
          },
          "title": "Modifier Extension",
          "type": "array"
        },
        "period": {
          "$ref": "#/definitions/Period"
        }
      },
      "required": [
        "code"
      ],
      "type": "object"
    },
    "PractitionerRole": {
      "description": "Defines the role of a practitioner within a healthcare organization or practice.",
      "example": {
        "active": true,
        "code": [
          {
            "coding": [
              {
                "code": "PHYSICIAN",
                "display": "PSYCHOLOGIST",
                "system": "http://hl7.org/fhir/practitioner-role"
              }
            ],
            "text": "PSYCHOLOGIST"
          }
        ],
        "healthcareService": [
          {
            "display": "MEDICAL SERVICE"
          }
        ],
        "id": "I2-GNRAKWQCFSLEQIWPGYGOBCC3KCH2ZUC6JZ6YY42MUPKH7XACFBRQ0000",
        "location": [
          {
            "display": "ZZCHY LASTNAME MEDICAL",
            "reference": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Location/I2-3JYDMXC6RXTU4H25KRVXATSEJQ000000"
          }
        ],
        "organization": {
          "display": "CHEYENNE VA MEDICAL",
          "reference": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Organization/I2-CYEXXOSUSGHOX6424MLNR4CQ4F7FZIOAZQJ3PH4L4MIIABRNZVVQ0000"
        },
        "practitioner": {
          "display": "DOE922,JANE460",
          "reference": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Practitioner/I2-VLZYJVF7MOB2SFAKTAPNSQIBWZS22HGVT3A56E5D5PHDUWJGQIGQ0000"
        },
        "resourceType": "PractitionerRole",
        "specialty": [
          {
            "coding": [
              {
                "code": "V111500",
                "system": "http://nucc.org/provider-taxonomy"
              }
            ]
          },
          {
            "coding": [
              {
                "code": "V111000",
                "system": "http://nucc.org/provider-taxonomy"
              }
            ]
          },
          {
            "coding": [
              {
                "code": "V110900",
                "system": "http://nucc.org/provider-taxonomy"
              }
            ]
          },
          {
            "coding": [
              {
                "code": "207Q00000X",
                "system": "http://nucc.org/provider-taxonomy"
              }
            ]
          }
        ],
        "telecom": [
          {
            "system": "phone",
            "value": "555-555-1137"
          },
          {
            "system": "phone",
            "value": "555-4055"
          },
          {
            "system": "pager",
            "value": "5-541"
          }
        ]
      },
      "properties": {
        "active": {
          "type": "boolean",
          "title": "Active",
          "description": "Indicates whether this practitioner's role is currently active."
        },
        "availabilityExceptions": {
          "type": "string",
          "title": "Availability Exceptions",
          "description": "Additional information about the availability of this practitioner's role, if applicable."
        },
        "availableTime": {
          "items": {
            "$ref": "#/definitions/PractitionerAvailableTime"
          },
          "type": "array",
          "title": "Available Time",
          "description": "The times during which this practitioner is available for appointments or other services."
        },
        "code": {
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array",
          "title": "Code",
          "description": "The code(s) that identify the type of healthcare provider role being fulfilled."
        },
        "contained": {
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "type": "array",
          "title": "Contained",
          "description": "Related resources that are defined inline within the resource."
        },
        "endpoint": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "title": "Endpoint",
          "description": "The technical endpoints providing access to services operated for the practitioner."
        },
        "extension": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "title": "Extension",
          "description": "Additional content defined by implementations."
        },
        "healthcareService": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "title": "Healthcare Service",
          "description": "The healthcare services that this practitioner provides for the organization or practice."
        },
        "id": {
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string",
          "title": "ID",
          "description": "The logical identifier for this practitioner role."
        },
        "identifier": {
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array",
          "title": "Identifier",
          "description": "The unique identifier(s) for this practitioner role within the context of a particular system."
        },
        "implicitRules": {
          "pattern": "\\S*",
          "type": "string",
          "title": "Implicit Rules",
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content."
        },
        "language": {
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string",
          "title": "Language",
          "description": "The base language in which the resource is written."
        },
        "location": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "title": "Location",
          "description": "The location(s) where this practitioner provides services."
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "title": "Modifier Extension",
          "description": "Additional content defined by implementations that modifies the content of the resource in some way."
        },
        "notAvailable": {
          "items": {
            "$ref": "#/definitions/PractitionerNotAvailable"
          },
          "type": "array",
          "title": "Not Available",
          "description": "The times during which this practitioner is not available for appointments or other services."
        },
        "organization": {
          "type": "object",
          "title": "Organization",
          "description": "The organization or healthcare service where this practitioner role is defined."
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "practitioner": {
          "type": "object",
          "title": "Practitioner",
          "description": "The practitioner who is responsible for the services provided by this role."
        },
        "resourceType": {
          "type": "string",
          "title": "Resource Type",
          "description": "A type of resource that is identifiable along with other resources."
        },
        "specialty": {
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array",
          "title": "Specialty",
          "description": "Specific specialty services provided by the practitioner within the context of this role."
        },
        "telecom": {
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array",
          "title": "Telecom",
          "description": "Contact details for the practitioner role."
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      },
      "required": [
        "organization",
        "practitioner",
        "resourceType"
      ],
      "type": "object"
    },
    "PractitionerRoleBundle": {
      "description": "A bundle of practitioner role resources, typically used to provide a complete set of search results or a subset of resources in a paginated list.",
      "example": {
        "entry": [
          {
            "fullUrl": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/PractitionerRole/I2-GNRAKWQCFSLEQIWPGYGOBCC3KCH2ZUC6JZ6YY42MUPKH7XACFBRQ0000",
            "resource": {
              "active": true,
              "code": [
                {
                  "coding": [
                    {
                      "code": "PHYSICIAN",
                      "display": "PSYCHOLOGIST",
                      "system": "http://hl7.org/fhir/practitioner-role"
                    }
                  ],
                  "text": "PSYCHOLOGIST"
                }
              ],
              "healthcareService": [
                {
                  "display": "MEDICAL SERVICE"
                }
              ],
              "id": "I2-GNRAKWQCFSLEQIWPGYGOBCC3KCH2ZUC6JZ6YY42MUPKH7XACFBRQ0000",
              "location": [
                {
                  "display": "ZZCHY LASTNAME MEDICAL",
                  "reference": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Location/I2-3JYDMXC6RXTU4H25KRVXATSEJQ000000"
                }
              ],
              "organization": {
                "display": "CHEYENNE VA MEDICAL",
                "reference": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Organization/I2-CYEXXOSUSGHOX6424MLNR4CQ4F7FZIOAZQJ3PH4L4MIIABRNZVVQ0000"
              },
              "practitioner": {
                "display": "DOE922,JANE460",
                "reference": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/Practitioner/I2-VLZYJVF7MOB2SFAKTAPNSQIBWZS22HGVT3A56E5D5PHDUWJGQIGQ0000"
              },
              "resourceType": "PractitionerRole",
              "specialty": [
                {
                  "coding": [
                    {
                      "code": "V111500",
                      "system": "http://nucc.org/provider-taxonomy"
                    }
                  ]
                },
                {
                  "coding": [
                    {
                      "code": "V111000",
                      "system": "http://nucc.org/provider-taxonomy"
                    }
                  ]
                },
                {
                  "coding": [
                    {
                      "code": "V110900",
                      "system": "http://nucc.org/provider-taxonomy"
                    }
                  ]
                },
                {
                  "coding": [
                    {
                      "code": "207Q00000X",
                      "system": "http://nucc.org/provider-taxonomy"
                    }
                  ]
                }
              ],
              "telecom": [
                {
                  "system": "phone",
                  "value": "555-555-1137"
                },
                {
                  "system": "phone",
                  "value": "555-4055"
                },
                {
                  "system": "pager",
                  "value": "5-541"
                }
              ]
            },
            "search": {
              "mode": "match"
            }
          }
        ],
        "link": [
          {
            "relation": "first",
            "url": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/PractitionerRole?_id=I2-GNRAKWQCFSLEQIWPGYGOBCC3KCH2ZUC6JZ6YY42MUPKH7XACFBRQ0000&_count=30&page=1"
          },
          {
            "relation": "self",
            "url": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/PractitionerRole?_id=I2-GNRAKWQCFSLEQIWPGYGOBCC3KCH2ZUC6JZ6YY42MUPKH7XACFBRQ0000&_count=30&page=1"
          },
          {
            "relation": "last",
            "url": "https://sandbox-api.va.gov/services/provider-directory/v0/r4/PractitionerRole?_id=I2-GNRAKWQCFSLEQIWPGYGOBCC3KCH2ZUC6JZ6YY42MUPKH7XACFBRQ0000&_count=30&page=1"
          }
        ],
        "resourceType": "Bundle",
        "total": 1,
        "type": "searchset"
      },
      "properties": {
        "entry": {
          "items": {
            "$ref": "#/definitions/PractitionerRoleEntry"
          },
          "type": "array",
          "title": "Entry",
          "description": "An entry in the bundle - will have a resource, or information about a resource."
        },
        "id": {
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string",
          "title": "ID",
          "description": "The logical identifier for this bundle."
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "pattern": "\\S*",
          "type": "string",
          "title": "Implicit Rules",
          "description": "A reference to a set of rules that were followed when the bundle was constructed, and which must be understood when processing the content."
        },
        "language": {
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string",
          "title": "Language",
          "description": "The base language in which the resource is written."
        },
        "link": {
          "items": {
            "$ref": "#/definitions/BundleLink"
          },
          "type": "array",
          "title": "Link",
          "description": "A series of links that provide context to this bundle."
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "resourceType": {
          "type": "string",
          "title": "Resource Type",
          "description": "A type of resource that is identifiable along with other resources."
        },
        "signature": {
          "$ref": "#/definitions/Signature"
        },
        "timestamp": {
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "type": "string",
          "title": "Timestamp",
          "description": "The time that the bundle was assembled."
        },
        "total": {
          "format": "int32",
          "minimum": 0,
          "type": "integer",
          "title": "Total",
          "description": "The total number of entries in the bundle."
        },
        "type": {
          "enum": [
            "document",
            "message",
            "transaction",
            "transaction-response",
            "batch",
            "batch-response",
            "history",
            "searchset",
            "collection"
          ],
          "type": "string",
          "title": "Type",
          "description": "The type of bundle - indicates whether it is a document, message, transaction, etc."
        }
      },
      "required": [
        "resourceType",
        "type"
      ],
      "type": "object"
    },
    "PractitionerRoleEntry": {
      "description": "An entry in a bundle of type 'PractitionerRole' containing information about a practitioner's role.",
      "properties": {
        "extension": {
          "description": "Additional information or metadata about the entry.",
          "title": "Extension",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "fullUrl": {
          "description": "The full URL of the resource in the entry.",
          "title": "Full URL",
          "pattern": "\\S*",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the entry.",
          "title": "ID",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "link": {
          "description": "Links related to this entry.",
          "title": "Link",
          "items": {
            "$ref": "#/definitions/BundleLink"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "Additional information or metadata about the entry.",
          "title": "Modifier Extension",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "request": {
          "$ref": "#/definitions/Request"
        },
        "resource": {
          "$ref": "#/definitions/PractitionerRole"
        },
        "response": {
          "$ref": "#/definitions/Response"
        },
        "search": {
          "$ref": "#/definitions/Search"
        }
      },
      "type": "object"
    },
    "Quantity": {
      "description": "A measured or measurable amount.",
      "properties": {
        "code": {
          "title": "Code",
          "description": "A computer processable form of the unit in some unit representation system.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "comparator": {
          "title": "Comparator",
          "description": "Specifies how the value should be interpreted and compared to a given value.",
          "pattern": "(<|<=|>=|>)",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for the quantity.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "system": {
          "title": "System",
          "description": "The system that defines the coded form of the unit.",
          "pattern": "\\S*",
          "type": "string"
        },
        "unit": {
          "title": "Unit",
          "description": "A human-readable representation of the unit.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "The numeric value of the measured amount.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Range": {
      "description": "A set of ordered quantity values defined by a low and high limit.",
      "properties": {
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "high": {
          "$ref": "#/definitions/SimpleQuantity"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for the range.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "low": {
          "$ref": "#/definitions/SimpleQuantity"
        }
      },
      "type": "object"
    },
    "Ratio": {
      "description": "A ratio of two Quantity values - a numerator and a denominator.",
      "properties": {
        "denominator": {
          "$ref": "#/definitions/Quantity"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for the ratio.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "numerator": {
          "$ref": "#/definitions/Quantity"
        }
      },
      "type": "object"
    },
    "Reference": {
      "description": "A reference from one resource to another.",
      "properties": {
        "display": {
          "title": "Display",
          "description": "Text alternative for the resource.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for the reference.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "reference": {
          "title": "Reference",
          "description": "A reference to a resource that includes the resource type and the resource's identifier.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "description": "A reference that identifies the type of the resource.",
          "pattern": "\\S*",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RelatedArtifact": {
      "description": "Related artifacts such as documentation, justification, citation, etc.",
      "properties": {
        "citation": {
          "title": "Citation",
          "description": "A bibliographic citation for the related artifact.",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "display": {
          "title": "Display",
          "description": "A brief description of the related artifact.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "document": {
          "$ref": "#/definitions/Attachment"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for the related artifact.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "label": {
          "title": "Label",
          "description": "A brief description of the related artifact.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "resource": {
          "title": "Resource",
          "description": "A URL that identifies the related artifact.",
          "pattern": "\\S*",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "description": "The type of relationship to the related artifact.",
          "enum": [
            "documentation",
            "justification",
            "citation",
            "predecessor",
            "successor",
            "derived-from",
            "depends-on",
            "composed-of"
          ],
          "type": "string"
        },
        "url": {
          "title": "URL",
          "description": "A URL that identifies the related artifact.",
          "pattern": "\\S*",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "Request": {
      "description": "A request resource within a bundle.",
      "type": "object"
    },
    "Resource": {
      "description": "A FHIR resource that represents a single coherent concept or occurrence of a thing.",
      "type": "object"
    },
    "ResourceInteraction": {
      "properties": {
        "code": {
          "title": "Code",
          "description": "The type of interaction defined by FHIR.",
          "enum": [
            "read",
            "vread",
            "update",
            "patch",
            "delete",
            "history-instance",
            "history-type",
            "create",
            "search-type"
          ],
          "type": "string"
        },
        "documentation": {
          "title": "Documentation",
          "description": "Additional information about the interaction.",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for the resource interaction.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "code"
      ],
      "type": "object"
    },
    "Response": {
      "description": "A response resource within a bundle.",
      "type": "object"
    },
    "Rest": {
      "properties": {
        "compartment": {
          "title": "Compartment",
          "description": "A reference to the compartment definition for this RESTful capability statement.",
          "pattern": "\\S*",
          "type": "string"
        },
        "documentation": {
          "title": "Documentation",
          "description": "Additional information about this RESTful capability statement.",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for this RESTful capability statement.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "interaction": {
          "title": "Interaction",
          "description": "A definition of the interaction behavior of the capability statement.",
          "items": {
            "$ref": "#/definitions/RestInteraction"
          },
          "type": "array"
        },
        "mode": {
          "title": "Mode",
          "description": "The mode of this RESTful capability statement (client or server).",
          "enum": [
            "client",
            "server"
          ],
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "operation": {
          "$ref": "#/definitions/Operation"
        },
        "resource": {
          "title": "Resource",
          "description": "Definition of a resource supported by the system.",
          "items": {
            "$ref": "#/definitions/CapabilityResource"
          },
          "type": "array"
        },
        "searchParam": {
          "$ref": "#/definitions/SearchParam"
        },
        "security": {
          "$ref": "#/definitions/Security"
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    },
    "RestInteraction": {
      "properties": {
        "code": {
          "title": "Code",
          "description": "The type of interaction defined by FHIR.",
          "enum": [
            "transaction",
            "batch",
            "search-system",
            "history-system"
          ],
          "type": "string"
        },
        "documentation": {
          "title": "Documentation",
          "description": "Additional information about the interaction.",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for the REST interaction.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "code"
      ],
      "type": "object"
    },
    "SampledData": {
      "description": "A series of measurements taken by a device, with time stamps and other information if available.",
      "properties": {
        "data": {
          "title": "Data",
          "description": "The actual data for the sampled data, generally as a string of decimal numbers.",
          "type": "string"
        },
        "dimensions": {
          "title": "Dimensions",
          "description": "The number of sample points at each time point.",
          "format": "int32",
          "minimum": 1,
          "type": "integer"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "factor": {
          "title": "Factor",
          "description": "A correction factor that is applied to the sampled data points before they are added to the origin.",
          "type": "number"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for the sampled data.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "lowerLimit": {
          "title": "Lower Limit",
          "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value 'L' (lower than detection limit).",
          "type": "number"
        },
        "origin": {
          "$ref": "#/definitions/SimpleQuantity"
        },
        "period": {
          "title": "Period",
          "description": "The length of time between sampling times, measured in milliseconds.",
          "type": "number"
        },
        "upperLimit": {
          "title": "Upper Limit",
          "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value 'U' (higher than detection limit).",
          "type": "number"
        }
      },
      "required": [
        "dimensions",
        "origin",
        "period"
      ],
      "type": "object"
    },
    "Search": {
      "description": "A resource that represents a search operation or search capability.",
      "type": "object"
    },
    "SearchParam": {
      "properties": {
        "definition": {
          "title": "Definition",
          "description": "A formal reference to where this parameter was defined, if a definition exists.",
          "pattern": "\\S*",
          "type": "string"
        },
        "documentation": {
          "title": "Documentation",
          "description": "Additional information about this search parameter.",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for this search parameter.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "title": "Name",
          "description": "The name of the search parameter used in the interface.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "description": "The type of value a search parameter refers to, and how the content is interpreted.",
          "enum": [
            "number",
            "date",
            "string",
            "token",
            "reference",
            "composite",
            "quantity",
            "uri",
            "special"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "type": "object"
    },
    "Security": {
      "properties": {
        "cors": {
          "title": "CORS",
          "description": "Indicates whether the server supports CORS (Cross-Origin Resource Sharing).",
          "type": "boolean"
        },
        "description": {
          "title": "Description",
          "description": "Additional information about security implementation from an interface perspective.",
          "pattern": "\\s*(\\S|\\s)*",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for this security implementation.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "service": {
          "title": "Service",
          "description": "Information about the service that applies to this security context.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Signature": {
      "description": "A digital signature along with supporting context and metadata.",
      "properties": {
        "data": {
          "title": "Data",
          "description": "The base64 encoded signature content.",
          "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for this signature.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "onBehalfOf": {
          "title": "On Behalf Of",
          "description": "The party represented by this signature.",
          "type": "object"
        },
        "sigFormat": {
          "title": "Signature Format",
          "description": "The technical format of the signature content.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "targetFormat": {
          "title": "Target Format",
          "description": "The technical format of the signed content.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "description": "The coding representing the purpose of the signature.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "when": {
          "title": "When",
          "description": "When the signature was created.",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "type": "string"
        },
        "who": {
          "title": "Who",
          "description": "Who this signature is made for.",
          "type": "object"
        }
      },
      "required": [
        "type",
        "when",
        "who"
      ],
      "type": "object"
    },
    "SimpleQuantity": {
      "description": "A fixed quantity of a simple unit along with a unit of measure.",
      "properties": {
        "code": {
          "title": "Code",
          "description": "The identification code for the unit of measure.",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for this quantity.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "system": {
          "title": "System",
          "description": "The identification of the system that defines the unit of measure.",
          "pattern": "\\S*",
          "type": "string"
        },
        "unit": {
          "title": "Unit",
          "description": "A human-readable form of the unit of measure.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "The numerical value of the quantity.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Software": {
      "properties": {
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for this software instance.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "title": "Name",
          "description": "The name of the software product.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "releaseDate": {
          "title": "Release Date",
          "description": "The date when the software was released.",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
          "type": "string"
        },
        "version": {
          "title": "Version",
          "description": "The version of the software product.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Sort": {
      "properties": {
        "direction": {
          "title": "Direction",
          "description": "The sorting direction, either ascending or descending.",
          "enum": [
            "ascending",
            "descending"
          ],
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for this sorting configuration.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "path": {
          "title": "Path",
          "description": "The path to the element to be sorted.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        }
      },
      "required": [
        "direction",
        "path"
      ],
      "type": "object"
    },
    "SupportedMessage": {
      "properties": {
        "definition": {
          "title": "Definition",
          "description": "The definition of the supported message.",
          "pattern": "\\S*",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for this supported message.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "mode": {
          "title": "Mode",
          "description": "The mode of the supported message, either sender or receiver.",
          "enum": [
            "sender",
            "receiver"
          ],
          "type": "string"
        },
        "modifierExtension": {
          "title": "Modifier Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "definition",
        "mode"
      ],
      "type": "object"
    },
    "Timing": {
      "description": "A timing schedule that specifies an event that may occur multiple times, optionally with a period and duration.",
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "event": {
          "title": "Event",
          "description": "The list of events of the schedule.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for this timing schedule.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "repeat": {
          "$ref": "#/definitions/TimingRepeat"
        }
      },
      "type": "object"
    },
    "TimingRepeat": {
      "description": "Defines a repeating pattern within a timing schedule.",
      "properties": {
        "boundsDuration": {
          "$ref": "#/definitions/Duration"
        },
        "boundsPeriod": {
          "$ref": "#/definitions/Period"
        },
        "boundsRange": {
          "$ref": "#/definitions/Range"
        },
        "count": {
          "title": "Count",
          "description": "The number of times the event should repeat.",
          "format": "int32",
          "minimum": 1,
          "type": "integer"
        },
        "countMax": {
          "title": "Count Max",
          "description": "The maximum number of times the event should repeat.",
          "format": "int32",
          "minimum": 1,
          "type": "integer"
        },
        "dayOfWeek": {
          "title": "Day of Week",
          "description": "The days of the week the event should occur.",
          "items": {
            "enum": [
              "mon",
              "tue",
              "wed",
              "thu",
              "fri",
              "sat",
              "sun"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "duration": {
          "title": "Duration",
          "description": "The duration of time the event should repeat.",
          "type": "number"
        },
        "durationMax": {
          "title": "Duration Max",
          "description": "The maximum duration of time the event should repeat.",
          "type": "number"
        },
        "durationUnit": {
          "title": "Duration Unit",
          "description": "The unit of time for the duration.",
          "enum": [
            "s",
            "min",
            "h",
            "d",
            "wk",
            "mo",
            "a"
          ],
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "frequency": {
          "title": "Frequency",
          "description": "The frequency at which the event should repeat.",
          "format": "int32",
          "minimum": 1,
          "type": "integer"
        },
        "frequencyMax": {
          "title": "Frequency Max",
          "description": "The maximum frequency at which the event should repeat.",
          "format": "int32",
          "minimum": 1,
          "type": "integer"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for this timing repeat.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "offset": {
          "title": "Offset",
          "description": "The offset at which the event should repeat.",
          "format": "int32",
          "minimum": 0,
          "type": "integer"
        },
        "period": {
          "title": "Period",
          "description": "The period of time the event should repeat.",
          "type": "number"
        },
        "periodMax": {
          "title": "Period Max",
          "description": "The maximum period of time the event should repeat.",
          "type": "number"
        },
        "periodUnit": {
          "title": "Period Unit",
          "description": "The unit of time for the period.",
          "enum": [
            "s",
            "min",
            "h",
            "d",
            "wk",
            "mo",
            "a"
          ],
          "type": "string"
        },
        "timeOfDay": {
          "title": "Time of Day",
          "description": "The specific time of day the event should occur.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "when": {
          "title": "When",
          "description": "Indicates the time of day for the event to occur.",
          "items": {
            "enum": [
              "MORN",
              "MORN.early",
              "MORN.late",
              "NOON",
              "AFT",
              "AFT.early",
              "AFT.late",
              "EVE",
              "EVE.early",
              "EVE.late",
              "NIGHT",
              "PHS",
              "HS",
              "WAKE",
              "C",
              "CM",
              "CD",
              "CV",
              "AC",
              "ACM",
              "ACD",
              "ACV",
              "PC",
              "PCM",
              "PCD",
              "PCV"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TriggerDefinition": {
      "description": "Defines a specific condition or event that initiates a trigger.",
      "properties": {
        "condition": {
          "$ref": "#/definitions/Expression"
        },
        "data": {
          "title": "Data",
          "description": "Data requirements associated with the trigger.",
          "items": {
            "$ref": "#/definitions/DataRequirement"
          },
          "type": "array"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for this trigger definition.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "The name of the trigger.",
          "pattern": "[ \\r\\n\\t\\S]+",
          "type": "string"
        },
        "timingDate": {
          "title": "Timing Date",
          "description": "The specific date and/or time at which the trigger occurs.",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
          "type": "string"
        },
        "timingDateTime": {
          "title": "Timing Date Time",
          "description": "The specific date and time at which the trigger occurs.",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
          "type": "string"
        },
        "timingReference": {
          "title": "Timing Reference",
          "description": "A reference to a timing schedule that determines when the trigger occurs.",
          "type": "object"
        },
        "timingTiming": {
          "$ref": "#/definitions/Timing"
        },
        "type": {
          "title": "Type",
          "description": "The type of trigger, such as named event, periodic, data changed, etc.",
          "enum": [
            "named-event",
            "periodic",
            "data-changed",
            "data-added",
            "data-modified",
            "data-removed",
            "data-accessed",
            "data-access-ended"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "UsageContext": {
      "description": "Describes the context of use for a data element or resource.",
      "properties": {
        "code": {
          "$ref": "#/definitions/Coding"
        },
        "extension": {
          "title": "Extension",
          "description": "Additional information defined by implementations.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier for this usage context.",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "type": "string"
        },
        "valueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "$ref": "#/definitions/Range"
        },
        "valueReference": {
          "title": "Value Reference",
          "description": "A reference that specifies the value of the usage context.",
          "type": "object"
        }
      },
      "required": [
        "code"
      ],
      "type": "object"
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "apikey": {
      "in": "header",
      "name": "apikey",
      "type": "apiKey"
    }
  },
  "security": [],
  "tags": [],
  "externalDocs": {
    "description": "DaVinci PDEX Plan Net Implementation Guide",
    "url": "http://hl7.org/fhir/us/davinci-pdex-plan-net/index.html"
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://developer.va.gov"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.va.gov/privacy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Human Resources"
    }
  ],
  "x-components": {}
}