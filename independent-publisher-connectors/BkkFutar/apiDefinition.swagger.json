{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "BKK Futar",
    "description": "Get and search planned and real-time information from the BKK FUTAR system - public transportation of Budapest - regarding journeys, vehicles, stops and many more!",
    "contact": {
      "name": "Fördős András",
      "email": "fordosa90+ipc_bkk@gmail.com"
    }
  },
  "host": "futar.bkk.hu",
  "basePath": "/api/query/v1/ws/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/{dialect}/api/where/alert-search": {
      "get": {
        "summary": "Search Alerts",
        "description": "List active disturbances corresponding to the search criteria",
        "operationId": "SearchAlerts",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "required": false,
            "x-ms-summary": "Query",
            "description": "A query string matched against disturbance title, description or identification.",
            "x-ms-visibility": "important"
          },
          {
            "name": "start",
            "in": "query",
            "type": "integer",
            "required": false,
            "x-ms-summary": "Start",
            "description": "Start of time interval (epoch seconds) for the search.",
            "x-ms-visibility": "important",
            "format": "int64"
          },
          {
            "name": "end",
            "in": "query",
            "type": "integer",
            "required": false,
            "x-ms-summary": "End",
            "description": "End of time interval (epoch seconds) for the search.",
            "x-ms-visibility": "important",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/minResultParam"
          },
          {
            "$ref": "#/parameters/appVersionParam"
          },
          {
            "$ref": "#/parameters/versionParam"
          },
          {
            "$ref": "#/parameters/includeReferencesParam"
          },
          {
            "$ref": "#/parameters/dialectParam"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "currentTime": {
                  "$ref": "#/definitions/TimeResponse"
                },
                "version": {
                  "$ref": "#/definitions/VersionResponse"
                },
                "status": {
                  "$ref": "#/definitions/StatusResponse"
                },
                "code": {
                  "$ref": "#/definitions/CodeResponse"
                },
                "text": {
                  "$ref": "#/definitions/TextResponse"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "limitExceeded": {
                      "$ref": "#/definitions/LimitExceededResponse"
                    },
                    "entry": {
                      "type": "object",
                      "properties": {
                        "stopIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Array of found relevant stop IDs.",
                          "title": "Stop IDs"
                        },
                        "routeIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Array of found relevant route IDs.",
                          "title": "Route IDs"
                        },
                        "alertIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Array of found relevant alert IDs.",
                          "title": "Alert IDs"
                        }
                      }
                    },
                    "references": {
                      "$ref": "#/definitions/ReferencesResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{dialect}/api/where/arrivals-and-departures-for-stop": {
      "get": {
        "summary": "Get Arrivals And Departures For Stop",
        "description": "Get Arrivals And Departures For Stop",
        "operationId": "GetArrivalsAndDeparturesForStop",
        "parameters": [
          {
            "name": "minutesBefore",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "required": false,
            "x-ms-summary": "Minutes before",
            "x-ms-visibility": "advanced",
            "description": "Start of relevant time interval for query, substracted from 'time' parameter."
          },
          {
            "name": "minutesAfter",
            "in": "query",
            "type": "string",
            "required": false,
            "x-ms-summary": "Minutes after",
            "x-ms-visibility": "advanced",
            "description": "End of relevant time interval for query, added to the 'time' parameter."
          },
          {
            "name": "stopId",
            "in": "query",
            "type": "string",
            "required": true,
            "x-ms-summary": "Stop ID",
            "description": "Stop ID to query data for, such as 'BKK_F01227'."
          },
          {
            "name": "includeRouteId",
            "in": "query",
            "type": "string",
            "required": false,
            "x-ms-summary": "Include Route ID",
            "description": "List of comma separated route IDs to filter results.",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "time",
            "in": "query",
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Time",
            "description": "Timestamp (epoch seconds) used for the query, defaulted to server time."
          },
          {
            "name": "onlyDepartures",
            "in": "query",
            "type": "boolean",
            "x-ms-summary": "Only departures",
            "x-ms-visibility": "advanced",
            "description": "Indicate, whether return results with or without arrivals."
          },
          {
            "name": "limit",
            "default": 60,
            "in": "query",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit",
            "description": "Maximum number of returned results, defaulted to 60."
          },
          {
            "name": "lat",
            "in": "query",
            "type": "number",
            "format": "float",
            "x-ms-summary": "Latitude",
            "description": "Latitude information of the location.",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "lon",
            "in": "query",
            "type": "number",
            "format": "float",
            "x-ms-summary": "Longitude",
            "description": "Longitude information of the location.",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "radius",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Radius",
            "description": "Radius of location around lat and lon coordinates.",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Query",
            "description": "Query expression used to filter results."
          },
          {
            "$ref": "#/parameters/minResultParam"
          },
          {
            "$ref": "#/parameters/versionParam"
          },
          {
            "$ref": "#/parameters/includeReferencesParam"
          },
          {
            "$ref": "#/parameters/dialectParam"
          },
          {
            "$ref": "#/parameters/appVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "currentTime": {
                  "$ref": "#/definitions/TimeResponse"
                },
                "version": {
                  "$ref": "#/definitions/VersionResponse"
                },
                "status": {
                  "$ref": "#/definitions/StatusResponse"
                },
                "code": {
                  "$ref": "#/definitions/CodeResponse"
                },
                "text": {
                  "$ref": "#/definitions/TextResponse"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "limitExceeded": {
                      "$ref": "#/definitions/LimitExceededResponse"
                    },
                    "entry": {
                      "type": "object",
                      "properties": {
                        "stopId": {
                          "type": "string",
                          "description": "The identification of the Stop.",
                          "title": "Stop ID"
                        },
                        "routeIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "An array of the route IDs belonging to the stop.",
                          "title": "Route IDs"
                        },
                        "alertIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "An array of the alert IDs belonging to the stop.",
                          "title": "Alert IDs"
                        },
                        "nearbyStopIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "An array of the nearby Stop IDs.",
                          "title": "Nearby Stop IDs"
                        },
                        "stopTimes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "stopId": {
                                "type": "string",
                                "description": "Identification of the Stop.",
                                "title": "Stop ID"
                              },
                              "stopHeadsign": {
                                "type": "string",
                                "description": "The indicated destination in the stop.",
                                "title": "Stop Headsign"
                              },
                              "arrivalTime": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The planned arrival time in epoch seconds.",
                                "title": "Arrival Time"
                              },
                              "departureTime": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The planned departure time in epoch seconds",
                                "title": "Departure Time"
                              },
                              "predictedArrivalTime": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Predicted arrival time in epoch seconds, if the trip has realtime data.",
                                "title": "Predicted Arrival"
                              },
                              "predictedDepartureTime": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Predicted departure time in epoch seconds, if the trip has realtime data.",
                                "title": "Predicted Departure"
                              },
                              "uncertain": {
                                "type": "boolean",
                                "description": "Indication, whether the realtime data for the trip is uncertain.",
                                "title": "Uncertain"
                              },
                              "tripId": {
                                "type": "string",
                                "description": "The relevant Trip ID for this entry.",
                                "title": "Trip ID"
                              },
                              "serviceDate": {
                                "type": "string",
                                "description": "The service date of the Trip, expressed in YYYYMMDD format.",
                                "title": "Service Date"
                              },
                              "wheelchairAccessible": {
                                "type": "boolean",
                                "description": "Indication, whether the Trip is wheelchair accessible.",
                                "title": "Wheelchair Accessible"
                              },
                              "mayRequireBooking": {
                                "type": "boolean",
                                "description": "Indication, whether at least one of the next stops of the trip requires booking.",
                                "title": "May Require Booking"
                              },
                              "alertIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The relevant alert IDs for the stop.",
                                "title": "Alert IDs"
                              }
                            }
                          },
                          "title": "Stop Time",
                          "description": "The stop schedule relevant for given stop."
                        }
                      }
                    },
                    "references": {
                      "$ref": "#/definitions/ReferencesResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{dialect}/api/where/bicycle-rental": {
      "get": {
        "summary": "Get Bicycle Rental Stations",
        "description": "Get information about Bicycle Rental Stations",
        "operationId": "GetBicycleRentalStations",
        "parameters": [
          {
            "$ref": "#/parameters/appVersionParam"
          },
          {
            "$ref": "#/parameters/versionParam"
          },
          {
            "$ref": "#/parameters/includeReferencesParam"
          },
          {
            "$ref": "#/parameters/dialectParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "currentTime": {
                  "$ref": "#/definitions/TimeResponse"
                },
                "version": {
                  "$ref": "#/definitions/VersionResponse"
                },
                "status": {
                  "$ref": "#/definitions/StatusResponse"
                },
                "code": {
                  "$ref": "#/definitions/CodeResponse"
                },
                "text": {
                  "$ref": "#/definitions/TextResponse"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Bike station ID.",
                            "title": "Bike station ID"
                          },
                          "lat": {
                            "type": "number",
                            "format": "double",
                            "description": "Latitude information of the station.",
                            "title": "Latitude"
                          },
                          "lon": {
                            "type": "number",
                            "format": "double",
                            "description": "Longitude information of the station",
                            "title": "Longitude"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the bike station.",
                            "title": "Name"
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the bike station.",
                            "title": "Code"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the bike station.",
                            "title": "Type"
                          },
                          "bikes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of available bikes at the station.",
                            "title": "Bikes"
                          }
                        }
                      }
                    },
                    "limitExceeded": {
                      "$ref": "#/definitions/LimitExceededResponse"
                    },
                    "references": {
                      "$ref": "#/definitions/ReferencesResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "TimeResponse": {
      "type": "integer",
      "format": "int64",
      "description": "Current server time in milliseconds.",
      "title": "Current Time"
    },
    "VersionResponse": {
      "type": "integer",
      "format": "int32",
      "description": "Version of the API.",
      "title": "Version"
    },
    "StatusResponse": {
      "type": "string",
      "description": "Response status.",
      "title": "Status"
    },
    "CodeResponse": {
      "type": "integer",
      "format": "int32",
      "description": "The response status code.",
      "title": "Code"
    },
    "TextResponse": {
      "type": "string",
      "description": "The detailed response text related to the status code.",
      "title": "Text"
    },
    "LimitExceededResponse": {
      "type": "boolean",
      "description": "Indication, whether response contains more elements than the defined limit.",
      "title": "Limit Exceeded"
    },
    "ReferencesResponse": {
      "type": "object",
      "title": "References",
      "description": "Relevant reference details.",
      "properties": {
        "agencies": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AgencyRef"
          }
        },
        "routes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/RouteRef"
          }
        },
        "stops": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StopRef"
          }
        },
        "trips": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TripRef"
          }
        },
        "alerts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AlertRef"
          }
        }
      }
    },
    "AgencyRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Agency identification.",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "description": "Agency name.",
          "title": "Name"
        },
        "url": {
          "type": "string",
          "description": "Agency URL.",
          "title": "URL"
        },
        "timezone": {
          "type": "string",
          "description": "Agency timezone.",
          "title": "Timezone"
        },
        "lang": {
          "type": "string",
          "description": "Agency language.",
          "title": "Language"
        },
        "phone": {
          "type": "string",
          "description": "Agency telephone.",
          "title": "Phone"
        }
      }
    },
    "RouteRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Route ID.",
          "title": "ID"
        },
        "shortName": {
          "type": "string",
          "description": "Short name of the route.",
          "title": "Short name"
        },
        "description": {
          "type": "string",
          "description": "Description of the route.",
          "title": "Description"
        },
        "type": {
          "type": "string",
          "description": "Type of the route.",
          "title": "Type"
        },
        "agencyId": {
          "type": "string",
          "description": "Agency ID relevant for the route.",
          "title": "Agency ID"
        },
        "bikesAllowed": {
          "type": "boolean",
          "description": "Indication, whether bikes are allowed.",
          "title": "Bikes allowed"
        },
        "style": {
          "type": "object",
          "description": "Styling details for visualization.",
          "title": "Style"
        }
      }
    },
    "StopRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Stop ID.",
          "title": "ID"
        },
        "vertex": {
          "type": "string",
          "description": "Relevant vertex.",
          "title": "Vertex"
        },
        "lat": {
          "type": "number",
          "format": "double",
          "description": "Latitude of the stop.",
          "title": "Latitude"
        },
        "lon": {
          "type": "number",
          "format": "double",
          "description": "Longitude of the stop.",
          "title": "Longitude"
        },
        "name": {
          "type": "string",
          "description": "Name of the stop.",
          "title": "Name"
        },
        "code": {
          "type": "string",
          "description": "Unique code of the stop.",
          "title": "Code"
        },
        "direction": {
          "type": "string",
          "description": "Direction of the stop.",
          "title": "Direction"
        },
        "description": {
          "type": "string",
          "description": "Description of the stop.",
          "title": "Description"
        },
        "wheelchairBoarding": {
          "type": "boolean",
          "description": "Indication, whether wheelchair boarding is possible.",
          "title": "Wheelchair Boarding"
        },
        "routeIds": {
          "type": "array",
          "description": "Array of relevant Route IDs for the stop.",
          "items": {
            "type": "string"
          },
          "title": "Route IDs"
        },
        "style": {
          "type": "object",
          "description": "Styling guidance for visualization.",
          "title": "Style"
        }
      }
    },
    "TripRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Trip ID.",
          "title": "ID"
        },
        "routeId": {
          "type": "string",
          "description": "Route ID.",
          "title": "Route ID"
        },
        "shapeId": {
          "type": "string",
          "description": "Shape ID.",
          "title": "Shape ID"
        },
        "blockId": {
          "type": "string",
          "description": "Block ID.",
          "title": "Block ID"
        },
        "tripHeadsign": {
          "type": "string",
          "description": "Headsign for the trip.",
          "title": "Trip Headsign"
        },
        "serviceId": {
          "type": "string",
          "description": "Service ID.",
          "title": "Service ID"
        },
        "bikesAllowed": {
          "type": "boolean",
          "description": "Indication, whether bikes are allowed.",
          "title": "Bikes Allowed"
        },
        "wheelchairAccessible": {
          "type": "boolean",
          "description": "Indication, whether the trip is wheelchair accessible.",
          "title": "Wheelchair Accessible"
        }
      }
    },
    "AlertRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Alert ID.",
          "title": "ID"
        },
        "start": {
          "type": "integer",
          "format": "int64",
          "description": "Start timestamp for the alert (seconds).",
          "title": "Start"
        },
        "end": {
          "type": "integer",
          "format": "int64",
          "description": "End timestamp for the alert (seconds).",
          "title": "End"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "description": "Timestamp for the alert (seconds)",
          "title": "Timestamp"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64",
          "description": "Last modification timestamp (seconds) for the alert.",
          "title": "Modified Time"
        },
        "stopIds": {
          "type": "array",
          "description": "Array of relevant Stop IDs.",
          "items": {
            "type": "string"
          },
          "title": "Stop IDs"
        },
        "routeIds": {
          "type": "array",
          "description": "Array of relevant Route IDs.",
          "items": {
            "type": "string"
          },
          "title": "Route IDs"
        },
        "url": {
          "type": "object",
          "description": "URLs containing relevant details with translations.",
          "title": "URL"
        },
        "header": {
          "type": "object",
          "description": "Relevant header text for the alert with translations.",
          "title": "Header"
        },
        "description": {
          "type": "object",
          "description": "Translated descriptions for the alert.",
          "title": "Description"
        }
      }
    }
  },
  "parameters": {
    "dialectParam": {
      "name": "dialect",
      "default": "otp",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-summary": "Dialect",
      "description": "The dialect of the API references, defaulted to otp.",
      "x-ms-visibility": "internal",
      "x-ms-url-encoding": "single",
      "enum": [
        "otp",
        "mobile"
      ]
    },
    "versionParam": {
      "name": "version",
      "default": "2",
      "in": "query",
      "type": "string",
      "required": false,
      "x-ms-summary": "API version",
      "description": "The version of the API.",
      "x-ms-visibility": "internal",
      "enum": [
        "2",
        "3",
        "4"
      ]
    },
    "appVersionParam": {
      "name": "appVersion",
      "default": "1.1.abc",
      "in": "query",
      "type": "string",
      "required": false,
      "x-ms-summary": "App Version",
      "description": "The version of the client application.",
      "x-ms-visibility": "internal"
    },
    "includeReferencesParam": {
      "name": "includeReferences",
      "default": "true",
      "in": "query",
      "type": "string",
      "required": false,
      "x-ms-summary": "Include References",
      "description": "Define the type of references.",
      "x-ms-visibility": "advanced",
      "enum": [
        "true",
        "false",
        "compact",
        "agencies",
        "routes",
        "trips",
        "stops",
        "alerts",
        "stations"
      ]
    },
    "minResultParam": {
      "name": "minResult",
      "default": 5,
      "in": "query",
      "type": "integer",
      "required": false,
      "x-ms-summary": "Minimum results",
      "description": "The minimum number of elements returned.",
      "x-ms-visibility": "advanced",
      "format": "int32"
    }
  },
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "query",
      "name": "key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://opendata.bkk.hu/data-sources"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://bkk.hu/en/about-bkk/data-management-information/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data"
    }
  ]
}