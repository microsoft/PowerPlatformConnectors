{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft 365 Service Health",
    "description": "Provides access to the Service Announcements and Service Health feeds that exist on the Microsoft Graph.  Please read the setup instructions for configuring an app registration for this connector to use for Graph access.  For more on the Graph Service Announcements api please see https://docs.microsoft.com/en-us/graph/api/resources/service-communications-api-overview",
    "version": "1.0",
    "contact": {
      "name": "Nick Brown",
      "url": "https://nbdev.uk",
      "email": "nick@nbdev.uk"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://nbdev.uk"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "IT Operations"
    },
    {
      "propertyName": "Privacypolicy",
      "propertyValue": "https://privacy.microsoft.com"
    }
  ],
  "host": "graph.microsoft.com",
  "basePath": "/v1.0/admin/serviceAnnouncement",
  "schemes": [
    "https"
  ],
  "paths": {
    "/healthOverviews": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok Response",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Service Name",
                        "title": "Service"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the Service",
                        "title": "Status"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the Service",
                        "title": "Id"
                      },
                      "issues": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "startDateTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Start Date Time of the Incident"
                            },
                            "endDateTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "End Date Time of the Incident (if known)"
                            },
                            "lastModifiedDateTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Last Modified Date Time of the Incident"
                            },
                            "title": {
                              "type": "string",
                              "description": "Title of the Incident"
                            },
                            "id": {
                              "type": "string",
                              "description": "ID of the Incident from the Message Center"
                            },
                            "impactDescription": {
                              "type": "string",
                              "description": "Impact Description of the Incident"
                            },
                            "classification": {
                              "type": "string",
                              "description": "Classification of the Incident"
                            },
                            "origin": {
                              "type": "string",
                              "description": "Origin of the Incident"
                            },
                            "status": {
                              "type": "string",
                              "description": "Current Status of the Incident"
                            },
                            "service": {
                              "type": "string",
                              "description": "What Service is Effected"
                            },
                            "feature": {
                              "type": "string",
                              "description": "What Feature of the Service is effected"
                            },
                            "featureGroup": {
                              "type": "string",
                              "description": "What the Feature Group of the feature that is effected"
                            },
                            "isResolved": {
                              "type": "boolean",
                              "description": "Is the Incident Resolved"
                            },
                            "details": {
                              "type": "array",
                              "items": {},
                              "description": "Details of the Incident"
                            },
                            "posts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "createdDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Post Created Date Time"
                                  },
                                  "postType": {
                                    "type": "string",
                                    "description": "Post Type"
                                  },
                                  "description": {
                                    "type": "object",
                                    "properties": {
                                      "contentType": {
                                        "type": "string",
                                        "description": "Content Type (usually HTML)"
                                      },
                                      "content": {
                                        "type": "string",
                                        "description": "Post Content"
                                      }
                                    },
                                    "description": "Description of the Post"
                                  }
                                }
                              },
                              "description": "List of Posts for the incidents"
                            }
                          }
                        },
                        "description": "List of Issues for this service"
                      }
                    }
                  },
                  "description": "Value object"
                }
              }
            }
          }
        },
        "summary": "Get Health",
        "description": "Get the Health of the Services (optionally set to include the health advisories)",
        "operationId": "Health",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "enum": [
              "",
              "issues"
            ],
            "description": "Optional Parameter to expand the issues of each services",
            "x-ms-summary": "Optional field to include the service issues on the health feed"
          }
        ]
      }
    },
    "/messages": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok response",
            "schema": {
              "type": "object",
              "properties": {
                "@odata.context": {
                  "type": "string",
                  "description": "@odata.context"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "startDateTime": {
                        "type": "string",
                        "description": "Start Date Time of the message",
                        "title": "Start",
                        "format": "date-time",
                        "x-ms-visibility": "important"
                      },
                      "endDateTime": {
                        "type": "string",
                        "description": "End Date Time for the Message",
                        "title": "End DateTime",
                        "format": "date-time"
                      },
                      "lastModifiedDateTime": {
                        "type": "string",
                        "description": "Last Modified Date Time",
                        "title": "Last Modified",
                        "format": "date-time"
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of the Message",
                        "title": "Title",
                        "x-ms-visibility": "important"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the message in the message center",
                        "title": "Id",
                        "x-ms-visibility": "advanced"
                      },
                      "category": {
                        "type": "string",
                        "description": "Category of the Message",
                        "title": "Category",
                        "x-ms-visibility": "advanced"
                      },
                      "severity": {
                        "type": "string",
                        "description": "Severity of the message",
                        "title": "Severity",
                        "x-ms-visibility": "advanced"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "tags"
                      },
                      "isMajorChange": {
                        "type": "boolean",
                        "description": "Is the Message a Major Change",
                        "title": "IsMajorChange",
                        "x-ms-visibility": "important"
                      },
                      "actionRequiredByDateTime": {
                        "type": "string",
                        "description": "Optional Field to show when action is required by",
                        "title": "Action Required By Date Time",
                        "format": "date-time",
                        "x-ms-visibility": "advanced"
                      },
                      "services": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Services effected by this message"
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the Detail"
                            },
                            "value": {
                              "type": "string",
                              "description": "Value of the Detail"
                            }
                          }
                        },
                        "description": "Details of the Message"
                      },
                      "body": {
                        "type": "object",
                        "properties": {
                          "contentType": {
                            "type": "string",
                            "description": "Type of content in the message",
                            "title": "Content Type",
                            "x-ms-visibility": "advanced"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the Message",
                            "title": "Content",
                            "x-ms-visibility": "important"
                          }
                        },
                        "description": "body"
                      },
                      "viewPoint": {
                        "type": "string",
                        "description": "View Point (this will be null unless the connector has a message center access role)",
                        "title": "View Point"
                      }
                    }
                  },
                  "description": "Value object"
                }
              }
            }
          }
        },
        "summary": "Messages",
        "operationId": "Messages",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "lastModifiedDateTime gt 2021-09-02T00:00:00z",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "This OData formatted query will filter the messages recieved",
            "description": "Filter the messages feed, x-ms-summary: Filter the messages feed"
          }
        ],
        "description": "Gets the Message Center Messages",
        "x-ms-visibility": "important"
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/token",
      "scopes": {
        "ServiceHealth.Read.All": "Grants Service Health Read Access",
        "ServiceMessage.Read.All": "Grants Service Message Read Access"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": []
    }
  ],
  "tags": []
}
