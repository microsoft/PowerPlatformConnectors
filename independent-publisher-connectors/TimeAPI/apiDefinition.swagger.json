{
  "swagger": "2.0",
  "info": {
    "title": "TimeAPI",
    "description": "Accurate and reliable time information for any location in the world. Say goodbye to time zone confusion and hello to easy time tracking with our service.",
    "contact": {
      "name": "Fördős András",
      "email": "fordosa90+timeapi@gmail.com"
    },
    "version": "1.0.0"
  },
  "host": "timeapi.io",
  "basePath": "/api/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/Time/current/zone": {
      "get": {
        "summary": "Get current time",
        "parameters": [
          {
            "in": "query",
            "name": "timeZone",
            "description": "Full IANA time zone name, for example 'Europe/Budapest'.",
            "x-ms-summary": "Time zone",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CurrentTime"
            }
          }
        },
        "operationId": "GetCurrentTime",
        "description": "Gets the current time of a time zone."
      }
    },
    "/Time/current/coordinate": {
      "get": {
        "summary": "Get current time (by coordinates)",
        "parameters": [
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude ranging from -90 to 90.",
            "x-ms-summary": "Latitude",
            "type": "number",
            "format": "float",
            "required": true
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude ranging from -180 to 180.",
            "x-ms-summary": "Longitude",
            "type": "number",
            "format": "float",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CurrentTime"
            }
          }
        },
        "description": "Gets the current time of a time zone by geo coordinates.",
        "operationId": "GetCurrentTimeByTimezone"
      }
    },
    "/Time/current/ip": {
      "get": {
        "summary": "Get current time (by IP)",
        "parameters": [
          {
            "in": "query",
            "name": "ipAddress",
            "description": "IPv4 address.",
            "x-ms-summary": "IPv4",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CurrentTime"
            }
          }
        },
        "description": "Gets the current time of a time zone by ip address.",
        "operationId": "GetCurrentTimeByIp"
      }
    },
    "/TimeZone/AvailableTimeZones": {
      "get": {
        "summary": "List time zones",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of available time zones.",
              "title": "Time zones"
            }
          }
        },
        "description": "Gets all the available IANA time zones.",
        "operationId": "ListTimezones"
      }
    },
    "/TimeZone/zone": {
      "get": {
        "summary": "Get time zone",
        "parameters": [
          {
            "in": "query",
            "name": "timeZone",
            "description": "Full IANA time zone name, for example: 'Europe/Budapest'.",
            "x-ms-summary": "Time zone",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TimeZoneData"
            }
          }
        },
        "description": "Gets the time zone info by IANA time zone name.",
        "operationId": "GetTimezone"
      }
    },
    "/TimeZone/coordinate": {
      "get": {
        "summary": "Get time zone (by coordinates)",
        "parameters": [
          {
            "in": "query",
            "name": "latitude",
            "description": "Latitude ranging from -90 to 90.",
            "x-ms-summary": "Latitude",
            "type": "number",
            "format": "float",
            "required": true
          },
          {
            "in": "query",
            "name": "longitude",
            "description": "Longitude ranging from -180 to 180.",
            "x-ms-summary": "Longitude",
            "type": "number",
            "format": "float",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TimeZoneData"
            }
          }
        },
        "description": "Gets the time zone info of a geo coordinate.",
        "operationId": "GetTimezoneByCoordinate"
      }
    },
    "/TimeZone/ip": {
      "get": {
        "summary": "Get time zone (by IP)",
        "parameters": [
          {
            "in": "query",
            "name": "ipAddress",
            "description": "IPv4 address.",
            "x-ms-summary": "IPv4",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TimeZoneData"
            }
          }
        },
        "description": "Gets the time zone info of an IPv4 address.",
        "operationId": "GetTimezoneByIp"
      }
    },
    "/Conversion/ConvertTimeZone": {
      "post": {
        "summary": "Convert time",
        "description": "Allows you to convert the time in a timezone to the time in another timezone.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ConvertRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Conversion"
            }
          }
        },
        "operationId": "ConvertTime"
      }
    },
    "/Conversion/Translate": {
      "post": {
        "summary": "Localize time",
        "description": "Converts a date time into a language translated friendly date time string.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TranslationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Translation"
            }
          }
        },
        "operationId": "LocalizeTime"
      }
    },
    "/Conversion/DayOfTheWeek/{date}": {
      "get": {
        "summary": "Convert to day",
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "description": "Date in format: yyyy-MM-dd.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Date",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DayOfTheWeekResult"
            }
          }
        },
        "description": "Convert a date to the day of the week.",
        "operationId": "ConvertTimeToDay"
      }
    },
    "/Calculation/custom/increment": {
      "post": {
        "summary": "Increment by timespan",
        "description": "Allows you to increment a custom datetime by a specific timespan.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CalculationRequestCustom"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Calculation"
            }
          }
        },
        "operationId": "IncrementByTimespan"
      }
    },
    "/Calculation/custom/decrement": {
      "post": {
        "summary": "Decrement by timespan",
        "description": "Allows you to decrement a custom datetime by a specific timespan.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CalculationRequestCustom"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Calculation"
            }
          }
        },
        "operationId": "DecrementByTimespan"
      }
    }
  },
  "definitions": {
    "Calculation": {
      "type": "object",
      "properties": {
        "timeZone": {
          "description": "IANA Timezone used, e.g.: 'Europe/Budapest'.",
          "type": "string",
          "title": "Time zone"
        },
        "originalDateTime": {
          "format": "date-time",
          "description": "Original DateTime used as input.",
          "type": "string",
          "title": "Original DateTime"
        },
        "usedTimeSpan": {
          "description": "The timespan used to increase or decrease the original datetime by in format: d:hh:mm:ss.",
          "type": "string",
          "title": "Original timespan"
        },
        "calculationResult": {
          "$ref": "#/definitions/CalculationResult"
        }
      }
    },
    "CalculationRequestCustom": {
      "required": [
        "dateTime",
        "timeSpan",
        "timeZone",
        "dstAmbiguity"
      ],
      "type": "object",
      "properties": {
        "timeZone": {
          "description": "IANA time zone, e.g.: 'Europe/Budapest'.",
          "type": "string",
          "title": "Time zone"
        },
        "dateTime": {
          "description": "DateTime in format: yyyy-MM-dd HH:mm:ss or in format: yyyy-MM-dd HH:mm:ss.ffffff.",
          "type": "string",
          "title": "Date time"
        },
        "timeSpan": {
          "description": "Time span to increase or decrease datetime by in format: d:hh:mm:ss or in format: d:hh:mm:ss.fff.",
          "type": "string",
          "title": "Time span"
        },
        "dstAmbiguity": {
          "description": "Sometimes a time can be ambiguous due to DST switching overnight, for example '01:30' happening twice.",
          "type": "string",
          "title": "DST ambiguity",
          "enum": [
            "earlier",
            "later"
          ]
        }
      }
    },
    "CalculationResult": {
      "type": "object",
      "properties": {
        "year": {
          "format": "int32",
          "description": "Year, for example '2021'.",
          "type": "integer",
          "title": "Year"
        },
        "month": {
          "format": "int32",
          "description": "Month, for example '12'.",
          "type": "integer",
          "title": "Month"
        },
        "day": {
          "format": "int32",
          "description": "Day, for example '13'.",
          "type": "integer",
          "title": "Day"
        },
        "hour": {
          "format": "int32",
          "description": "Hour of the day in range 0-24.",
          "type": "integer",
          "title": "Hour"
        },
        "minute": {
          "format": "int32",
          "description": "Minute.",
          "type": "integer",
          "title": "Minute"
        },
        "seconds": {
          "format": "int32",
          "description": "Second.",
          "type": "integer",
          "title": "Second"
        },
        "milliSeconds": {
          "format": "int32",
          "description": "Milliseconds.",
          "type": "integer",
          "title": "Milliseconds"
        },
        "dateTime": {
          "format": "date-time",
          "description": "Full date time.",
          "type": "string",
          "title": "Date time"
        },
        "date": {
          "description": "Date string, in format: DD/MM/YYYY.",
          "type": "string",
          "title": "Date"
        },
        "time": {
          "description": "Time string.",
          "type": "string",
          "title": "Time"
        },
        "dstActive": {
          "description": "Boolean describing whether DST is applied and active in that timezone.",
          "type": "boolean",
          "title": "Is DST active"
        }
      },
      "title": "Calculation results",
      "description": "Output from the calculation request."
    },
    "Conversion": {
      "type": "object",
      "properties": {
        "fromTimezone": {
          "type": "string",
          "title": "From time zone",
          "description": "Source time zone for the conversion."
        },
        "fromDateTime": {
          "format": "date-time",
          "type": "string",
          "title": "From DateTime",
          "description": "Source date time for the conversion."
        },
        "toTimeZone": {
          "type": "string",
          "title": "To time zone",
          "description": "Target time zone of the conversion."
        },
        "conversionResult": {
          "$ref": "#/definitions/ConversionResult"
        }
      }
    },
    "ConversionResult": {
      "type": "object",
      "properties": {
        "year": {
          "format": "int32",
          "description": "Year.",
          "type": "integer",
          "title": "Year"
        },
        "month": {
          "format": "int32",
          "description": "Month.",
          "type": "integer",
          "title": "Month"
        },
        "day": {
          "format": "int32",
          "description": "Day.",
          "type": "integer",
          "title": "Day"
        },
        "hour": {
          "format": "int32",
          "description": "Hour of the day in range 0-24.",
          "type": "integer",
          "title": "Hour"
        },
        "minute": {
          "format": "int32",
          "description": "Minute.",
          "type": "integer",
          "title": "Minute"
        },
        "seconds": {
          "format": "int32",
          "description": "Second.",
          "type": "integer",
          "title": "Second"
        },
        "milliSeconds": {
          "format": "int32",
          "description": "Milliseconds.",
          "type": "integer",
          "title": "Milliseconds"
        },
        "dateTime": {
          "format": "date-time",
          "description": "Full date time.",
          "type": "string",
          "title": "DateTime"
        },
        "date": {
          "description": "Date string.",
          "type": "string",
          "title": "Date"
        },
        "time": {
          "description": "Time string.",
          "type": "string",
          "title": "Time"
        },
        "timeZone": {
          "description": "Time zone of the result.",
          "type": "string",
          "title": "Time zone"
        },
        "dstActive": {
          "description": "Boolean describing whether DST is applied and active in that time zone.",
          "type": "boolean",
          "title": "Is DST active"
        }
      },
      "title": "Conversion results",
      "description": "Output from the conversion request."
    },
    "ConvertRequest": {
      "required": [
        "dateTime",
        "fromTimeZone",
        "toTimeZone",
        "dstAmbiguity"
      ],
      "type": "object",
      "properties": {
        "fromTimeZone": {
          "description": "IANA TimeZonetime zone, for example 'Europe/Budapest'.",
          "type": "string",
          "title": "From time zone"
        },
        "dateTime": {
          "description": "DateTime in format: yyyy-MM-dd HH:mm:ss or in format: yyyy-MM-dd HH:mm:ss.ffffff.",
          "type": "string",
          "title": "Date time"
        },
        "toTimeZone": {
          "description": "IANA time zone, e.g.: 'Europe/Budapest'.",
          "type": "string",
          "example": "Time zone"
        },
        "dstAmbiguity": {
          "description": "Sometimes a time can be ambiguous due to DST switching overnight, e.g.: '01:30' happens twice in same day.",
          "type": "string",
          "title": "DST ambiguity",
          "enum":[
            "earlier",
            "later"
          ]
        }
      }
    },
    "CurrentTime": {
      "type": "object",
      "properties": {
        "year": {
          "format": "int32",
          "description": "Year.",
          "type": "integer",
          "title": "Year"
        },
        "month": {
          "format": "int32",
          "description": "Month.",
          "type": "integer",
          "title": "Month"
        },
        "day": {
          "format": "int32",
          "description": "Day.",
          "type": "integer",
          "title": "Day"
        },
        "hour": {
          "format": "int32",
          "description": "Hour of the day in range 0-24.",
          "type": "integer",
          "title": "Hour"
        },
        "minute": {
          "format": "int32",
          "description": "Minute.",
          "type": "integer",
          "title": "Minute"
        },
        "seconds": {
          "format": "int32",
          "description": "Seconds.",
          "type": "integer",
          "title": "Seconds"
        },
        "milliSeconds": {
          "format": "int32",
          "description": "Milliseconds.",
          "type": "integer",
          "title": "Milliseconds"
        },
        "dateTime": {
          "format": "date-time",
          "description": "Full date time.",
          "type": "string",
          "title": "Date time"
        },
        "date": {
          "description": "Date string.",
          "type": "string",
          "title": "Date"
        },
        "time": {
          "description": "Time string.",
          "type": "string",
          "title": "Time"
        },
        "timeZone": {
          "description": "Time zone of the result, e.g.: 'Europe/Budapest'",
          "type": "string",
          "title": "Time zone"
        },
        "dayOfWeek": {
          "$ref": "#/definitions/DayOfWeek"
        },
        "dstActive": {
          "description": "Boolean describing whether DST is applied and active in that time zone.",
          "type": "boolean",
          "title": "DST active"
        }
      }
    },
    "DayOfTheWeekResult": {
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "$ref": "#/definitions/DayOfWeek"
        }
      },
      "additionalProperties": false
    },
    "DayOfWeek": {
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "type": "string",
      "title": "Day of week",
      "description": "Day of week as string, e.g.: 'Sunday'."
    },
    "DstInterval": {
      "type": "object",
      "title": "DST interval",
      "description": "Details of DST interval.",
      "properties": {
        "dstName": {
          "type": "string",
          "title": "Name",
          "description": "Name of DST."
        },
        "dstOffsetToUtc": {
          "$ref": "#/definitions/Offset"
        },
        "dstOffsetToStandardTime": {
          "$ref": "#/definitions/Offset"
        },
        "dstStart": {
          "format": "date-time",
          "type": "string",
          "title": "Start",
          "description": "Start of DST interval."
        },
        "dstEnd": {
          "format": "date-time",
          "type": "string",
          "title": "End",
          "description": "End of DST interval."
        },
        "dstDuration": {
          "$ref": "#/definitions/Duration"
        }
      }
    },
    "Duration": {
      "type": "object",
      "title": "Duration",
      "description": "Details of the duration.",
      "properties": {
        "days": {
          "format": "int32",
          "type": "integer",
          "title": "Days",
          "description": "Duration days."
        },
        "nanosecondOfDay": {
          "format": "int64",
          "type": "integer",
          "title": "Nanosecond of day",
          "description": "Nanosecond of day."
        },
        "hours": {
          "format": "int32",
          "type": "integer",
          "title": "Hours",
          "description": "Hours."
        },
        "minutes": {
          "format": "int32",
          "type": "integer",
          "title": "Minutes",
          "description": "Minutes."
        },
        "seconds": {
          "format": "int32",
          "type": "integer",
          "title": "Seconds",
          "description": "Seconds."
        },
        "milliseconds": {
          "format": "int32",
          "type": "integer",
          "title": "Milliseconds",
          "description": "Milliseconds."
        },
        "subsecondTicks": {
          "format": "int32",
          "type": "integer",
          "title": "Subsecond tick",
          "description": "Subsecond tick."
        },
        "subsecondNanoseconds": {
          "format": "int32",
          "type": "integer",
          "title": "Subsecond nanoseconds",
          "description": "Subsecond nanoseconds."
        },
        "bclCompatibleTicks": {
          "format": "int64",
          "type": "integer",
          "title": "BCL compatible ticks",
          "description": "BCL compatible ticks."
        },
        "totalDays": {
          "format": "double",
          "type": "number",
          "title": "Total days",
          "description": "Total days."
        },
        "totalHours": {
          "format": "double",
          "type": "number",
          "title": "Total hours",
          "description": "Total hours."
        },
        "totalMinutes": {
          "format": "double",
          "type": "number",
          "title": "Total minutes",
          "description":" Total minutes."
        },
        "totalSeconds": {
          "format": "double",
          "type": "number",
          "title": "Total seconds",
          "description": "Total seconds."
        },
        "totalMilliseconds": {
          "format": "double",
          "type": "number",
          "title": "Total milliseconds",
          "description": "Total milliseconds."
        },
        "totalTicks": {
          "format": "double",
          "type": "number",
          "title": "Total ticks",
          "description": "Total ticks."
        },
        "totalNanoseconds": {
          "format": "double",
          "type": "number",
          "title": "Total nanoseconds",
          "description": "Total nanoseconds."
        }
      }
    },
    "Offset": {
      "type": "object",
      "title": "Offset",
      "description": "Details of offset.",
      "properties": {
        "seconds": {
          "format": "int32",
          "type": "integer",
          "title": "Seconds",
          "description": "Seconds."
        },
        "milliseconds": {
          "format": "int32",
          "type": "integer",
          "title": "Milliseconds",
          "description": "Milliseconds."
        },
        "ticks": {
          "format": "int64",
          "type": "integer",
          "title": "Ticks",
          "description": "Ticks."
        },
        "nanoseconds": {
          "format": "int64",
          "type": "integer",
          "title": "Nanoseconds",
          "description": "Nanoseconds."
        }
      }
    },
    "TimeZoneData": {
      "type": "object",
      "title": "Time zone",
      "description": "Time zone details.",
      "properties": {
        "timeZone": {
          "type": "string",
          "title": "Name",
          "description": "Name of the time zone."
        },
        "currentLocalTime": {
          "format": "date-time",
          "type": "string",
          "title": "Current time",
          "description": "Current local time."
        },
        "currentUtcOffset": {
          "$ref": "#/definitions/Offset"
        },
        "standardUtcOffset": {
          "$ref": "#/definitions/Offset"
        },
        "hasDayLightSaving": {
          "type": "boolean",
          "title": "Has DST",
          "description": "Indication, whether time zone has DST."
        },
        "isDayLightSavingActive": {
          "type": "boolean",
          "title": "Is DST active",
          "description": "Indication, whether DST is currently active."
        },
        "dstInterval": {
          "$ref": "#/definitions/DstInterval"
        }
      }
    },
    "Translation": {
      "type": "object",
      "title": "Translation",
      "description": "Translation details.",
      "properties": {
        "dateTime": {
          "description": "Given date time to translate, e.g.: '2021-03-14 17:45:00'.",
          "type": "string",
          "title": "Date time"
        },
        "languageCode": {
          "description": "Given language code to translate the date time into, e.g.: 'de'.",
          "type": "string",
          "title": "Language code"
        },
        "friendlyDateTime": {
          "description": "Full translated date time.",
          "type": "string",
          "title": "Friendly date time"
        },
        "friendlyDate": {
          "description": "Translated date.",
          "type": "string",
          "title": "Friendly date"
        },
        "friendlyTime": {
          "description": "Translated time.",
          "type": "string",
          "title": "Time"
        }
      }
    },
    "TranslationRequest": {
      "required": [
        "dateTime",
        "languageCode"
      ],
      "type": "object",
      "properties": {
        "dateTime": {
          "description": "DateTime in format: yyyy-MM-dd HH:mm:ss or in format: yyyy-MM-dd HH:mm:ss.ffffff.",
          "type": "string",
          "title": "Date time"
        },
        "languageCode": {
          "description": "2 letter ISO 639-1 language code, e.g.: 'de'.",
          "type": "string",
          "title": "Language code"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {},
  "security": [],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://timeapi.io/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://timeapi.io/home/faqs"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data;Business Intelligence"
    }
  ]
}