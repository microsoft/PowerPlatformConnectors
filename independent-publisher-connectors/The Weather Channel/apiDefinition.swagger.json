{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "The Weather Channel",
    "description": "The Weather Channel allows anyone to search weather events by geocode and time.  This connector allows a user to pull this data into their app, flow, or report.",
    "contact": {
      "name": "Roy Paar",
      "email": "roypaar@microsoft.com"
    }
  },
  "host": "api.weather.com",
  "basePath": "/v3",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/wx/observations/current": {
      "get": {
        "summary": "Request current weather conditions",
        "operationId": "GetConditions",
        "description": "Request current weather conditions",
        "parameters": [
          {
            "$ref": "#/parameters/geocode"
          },
          {
            "$ref": "#/parameters/units"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/OKRequest"
          }
        }
      }
    },
    "/alerts/headlines": {
      "get": {
        "summary": "Request weather alert headlines",
        "operationId": "GetHeadlines",
        "description": "Request weather alert headlines",
        "parameters": [
          {
            "$ref": "#/parameters/geocode"
          },
          {
            "$ref": "#/parameters/acceptHeader"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/OKRequest"
          }
        }
      }
    },
    "/wx/conditions/historical/dailysummary/30day": {
      "get": {
        "summary": "Request historical weather observations",
        "operationId": "GetHistory",
        "description": "Request historical weather observations",
        "parameters": [
          {
            "$ref": "#/parameters/geocode"
          },
          {
            "$ref": "#/parameters/units"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/OKRequest"
          }
        }
      }
    }
  },
  "definitions": {
    "successSchema": {
      "type": "object",
      "properties": {
        "statusDetails": {
          "$ref": "#/definitions/statusDetails"
        }
      }
    },
    "statusDetails": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "statusCode": {
          "type": "string"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages"
          }
        }
      }
    },
    "messages": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "geocode": {
      "name": "geocode",
      "in": "query",
      "description": "A comma-delimited latitude and longitude to retrieve data for. For example, 34.53,-84.50.",
      "required": true,
      "type": "string",
      "default": "33.74,-84.39",
      "x-ms-summary": "A comma-delimited latitude and longitude."
    },
    "latitude": {
      "name": "latitude",
      "in": "path",
      "description": "Latitude",
      "required": true,
      "type": "number",
      "default": 33.74,
      "x-ms-summary": "Latitude",
      "x-ms-url-encoding": "single"
    },
    "longitude": {
      "name": "longitude",
      "in": "path",
      "description": "Longitude",
      "required": true,
      "type": "number",
      "default": -84.39,
      "x-ms-summary": "Longitude",
      "x-ms-url-encoding": "single"
    },
    "locationType": {
      "name": "locationType",
      "in": "path",
      "description": "Location Type",
      "required": true,
      "type": "string",
      "enum": [
        "county",
        "country",
        "state"
      ],
      "x-ms-summary": "Location Type",
      "x-ms-url-encoding": "single"
    },
    "duration": {
      "name": "duration",
      "in": "path",
      "description": "Period for reports in the past",
      "required": true,
      "type": "string",
      "enum": [
        "60day",
        "1year"
      ],
      "x-ms-summary": "Period for reports in the past",
      "x-ms-url-encoding": "single"
    },
    "acceptHeader": {
      "name": "acceptHeader",
      "in": "header",
      "description": "Required to be set to gzip to ensure that the response is compressed",
      "required": true,
      "type": "string",
      "default": "gzip",
      "x-ms-summary": "Required to be set to gzip"
    },
    "units": {
      "name": "units",
      "in": "query",
      "description": "The units of measure to return the data in. For example, e=Imperial(English), m=Metric, h=Hybrid. Some APIs require the units of measure.",
      "required": true,
      "type": "string",
      "enum": [
        "e",
        "m"
      ],
      "default": "e",
      "x-ms-summary": "The units of measure to return the data in."
    },
    "language": {
      "name": "language",
      "in": "query",
      "description": "The language to return the response in. For example, en-US, es-MX, fr-FR.",
      "required": true,
      "type": "string",
      "default": "en-US",
      "x-ms-summary": "The language to return the response in."
    },
    "format": {
      "name": "format",
      "in": "query",
      "description": "Response format",
      "required": true,
      "type": "string",
      "enum": [
        "json"
      ],
      "default": "json",
      "x-ms-summary": "Response format"
    }
  },
  "responses": {
    "OKRequest": {
      "description": "OK. The request has succeeded",
      "schema": {
        "$ref": "#/definitions/successSchema"
      }
    }
  },
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "query",
      "name": "apiKey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://weather.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://weather.com/privacy-settings"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data"
    }
  ]
}