{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Xero OAuth 2.0",
    "description": "Xero is an accounting solution for small and medium sized businesses.  This connector enables you to access Xero data from the Power Platform.",
    "contact": {
      "name": "Phil Stubbington / Henley Ridge Management Consulting Limited",
      "url": "https://www.henleyridge.co.uk",
      "email": "philstubbington@henleyridge.co.uk"
    }
  },


  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.henleyridge.co.uk"
    },
    {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://www.iubenda.com/privacy-policy/27976889"

    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Finance"

    }
  ],

  "host": "api.xero.com",
  "basePath": "/api.xro/2.0",
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "description": "For more information",
      "flow": "accessCode",
      "authorizationUrl": "https://login.xero.com/identity/connect/authorize",
      "tokenUrl": "https://identity.xero.com/connect/token",
      "scopes": {
        "email": "Grant read-only access to your email",
        "openid": "Grant read-only access to your open id",
        "profile": "your profile information",
        "accounting.attachments": "Grant read-write access to attachments",
        "accounting.attachments.read": "Grant read-only access to attachments",
        "accounting.contacts": "Grant read-write access to contacts and contact groups",
        "accounting.contacts.read": "Grant read-only access to contacts and contact groups",
        "accounting.journals.read": "Grant read-only access to journals",
        "accounting.reports.read": "Grant read-only access to accounting reports",
        "accounting.reports.tenninetynine.read": "Grant read-only access to 1099 reports",
        "accounting.settings": "Grant read-write access to organisation and account settings",
        "accounting.settings.read": "Grant read-only access to organisation and account settings",
        "accounting.transactions": "Grant read-write access to bank transactions, credit notes, invoices, repeating invoices",
        "accounting.transactions.read": "Grant read-only access to invoices",
        "paymentservices": "Grant read-write access to payment services",
        "accounting.budgets.read": ""
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/Accounts": {
      "get": {
        "description": "Retrieves the full chart of accounts",
        "summary": "getAccounts",
        "tags": [
          "Accounting"
        ],
        "operationId": "getAccounts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Accounts array with 0 to n Account",
            "schema": {
              "$ref": "#/definitions/Accounts"
            },
            "examples": {
              "application/json": {
                "Accounts": [
                  {
                    "AccountID": "ebd06280-af70-4bed-97c6-7451a454ad85",
                    "Code": "091",
                    "Name": "Business Savings Account",
                    "Type": "BANK",
                    "TaxType": "NONE",
                    "EnablePaymentsToAccount": false,
                    "BankAccountNumber": "0209087654321050",
                    "BankAccountType": "BANK",
                    "CurrencyCode": "NZD"
                  },
                  {
                    "AccountID": "7d05a53d-613d-4eb2-a2fc-dcb6adb80b80",
                    "Code": "200",
                    "Name": "Sales",
                    "Type": "REVENUE",
                    "TaxType": "OUTPUT2",
                    "Description": "Income from any normal business activity",
                    "EnablePaymentsToAccount": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a new chart of accounts",
        "summary": "createAccount",
        "tags": [
          "Accounting"
        ],
        "operationId": "createAccount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Account object in body of request",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - created new Account and return response of type Accounts array with new Account",
            "schema": {
              "$ref": "#/definitions/Accounts"
            },
            "examples": {
              "application/json": {
                "Id": "11814c9d-3b5e-492e-93b0-fad16bf3244f",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550793549392)/",
                "Accounts": [
                  {
                    "AccountID": "66b262e2-561e-423e-8937-47d558f13442",
                    "Code": "123456",
                    "Name": "Foobar",
                    "Status": "ACTIVE",
                    "Type": "EXPENSE",
                    "TaxType": "INPUT",
                    "Description": "Hello World",
                    "Class": "EXPENSE",
                    "EnablePaymentsToAccount": false,
                    "ShowInExpenseClaims": false,
                    "ReportingCode": "EXP",
                    "ReportingCodeName": "Expense",
                    "UpdatedDateUTC": "/Date(1550793549320+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "ErrorNumber": 10,
                "Type": "ValidationException",
                "Message": "A validation exception occurred",
                "Elements": [
                  {
                    "AccountID": "00000000-0000-0000-0000-000000000000",
                    "Code": "123456",
                    "Name": "Foobar",
                    "Type": "EXPENSE",
                    "Description": "Hello World",
                    "ValidationErrors": [
                      {
                        "Message": "Please enter a unique Name."
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/Accounts/{AccountID}": {
      "get": {
        "description": "Retrieves a single chart of accounts by using a unique account Id",
        "summary": "getAccount",
        "tags": [
          "Accounting"
        ],
        "operationId": "getAccount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Account object"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Accounts array with one Account",
            "schema": {
              "$ref": "#/definitions/Accounts"
            },
            "examples": {
              "application/json": {
                "Id": "323455cc-9511-4451-a873-248d2983f38e",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550797359081)/",
                "Accounts": [
                  {
                    "AccountID": "99ce6032-0678-4aa0-8148-240c75fee33a",
                    "Code": "123456",
                    "Name": "FooBar",
                    "Status": "ACTIVE",
                    "Type": "EXPENSE",
                    "TaxType": "INPUT",
                    "Description": "Hello World",
                    "Class": "EXPENSE",
                    "EnablePaymentsToAccount": false,
                    "ShowInExpenseClaims": false,
                    "ReportingCode": "EXP",
                    "ReportingCodeName": "Expense",
                    "UpdatedDateUTC": "/Date(1550797359120+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a chart of accounts",
        "summary": "updateAccount",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateAccount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Account object"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Request of type Accounts array with one Account",
            "schema": {
              "$ref": "#/definitions/Accounts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - update existing Account and return response of type Accounts array with updated Account",
            "schema": {
              "$ref": "#/definitions/Accounts"
            },
            "examples": {
              "application/json": {
                "Id": "9012e75c-ec08-40a9-ae15-153fc1f35c4d",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550795389340)/",
                "Accounts": [
                  {
                    "AccountID": "99ce6032-0678-4aa0-8148-240c75fee33a",
                    "Code": "654321",
                    "Name": "BarFoo",
                    "Status": "ACTIVE",
                    "Type": "EXPENSE",
                    "TaxType": "INPUT",
                    "Description": "Good Bye World",
                    "Class": "EXPENSE",
                    "EnablePaymentsToAccount": false,
                    "ShowInExpenseClaims": false,
                    "ReportingCode": "EXP",
                    "ReportingCodeName": "Expense",
                    "UpdatedDateUTC": "/Date(1550795389333+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "ErrorNumber": 10,
                "Type": "ValidationException",
                "Message": "A validation exception occurred",
                "Elements": [
                  {
                    "AccountID": "00000000-0000-0000-0000-000000000000",
                    "Code": "123456",
                    "Name": "Foobar",
                    "Type": "EXPENSE",
                    "Description": "Hello World",
                    "ValidationErrors": [
                      {
                        "Message": "Please enter a unique Name."
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      },
      "delete": {
        "description": "Deletes a chart of accounts",
        "summary": "deleteAccount",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteAccount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Account object"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - delete existing Account and return response of type Accounts array with deleted Account",
            "schema": {
              "$ref": "#/definitions/Accounts"
            },
            "examples": {
              "application/json": {
                "Id": "76bb0543-8efe-4acc-b7f6-67dfcdec37b4",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550798217216)/",
                "Accounts": [
                  {
                    "AccountID": "7f3c0bec-f3e7-4073-b4d6-cc56dd027ef1",
                    "Code": "123456",
                    "Name": "FooBar",
                    "Status": "DELETED",
                    "Type": "EXPENSE",
                    "TaxType": "INPUT",
                    "Description": "Hello World",
                    "Class": "EXPENSE",
                    "EnablePaymentsToAccount": false,
                    "ShowInExpenseClaims": false,
                    "ReportingCode": "EXP",
                    "ReportingCodeName": "Expense",
                    "UpdatedDateUTC": "/Date(1550798217210+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "ErrorNumber": 10,
                "Type": "ValidationException",
                "Message": "A validation exception occurred",
                "Elements": [
                  {
                    "AccountID": "00000000-0000-0000-0000-000000000000",
                    "Code": "123456",
                    "Name": "Foobar",
                    "Type": "EXPENSE",
                    "Description": "Hello World",
                    "ValidationErrors": [
                      {
                        "Message": "Please enter a unique Name."
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/Accounts/{AccountID}/Attachments": {
      "get": {
        "description": "Retrieves attachments for a specific accounts by using a unique account Id",
        "summary": "getAccountAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getAccountAttachments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Account object"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "439c1573-3cd8-4697-a9f6-81fa651ee8f3",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550852630329)/",
                "Attachments": [
                  {
                    "AttachmentID": "52a643be-cd5c-489f-9778-53a9fd337756",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/Accounts/{AccountID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific account using a unique attachment Id",
        "summary": "getAccountAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getAccountAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Account object"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Attachment object"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Account as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/Accounts/{AccountID}/Attachments/{FileName}": {
      "get": {
        "description": "Retrieves an attachment for a specific account by filename",
        "summary": "getAccountAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getAccountAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Account object"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Account as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates attachment on a specific account by filename",
        "summary": "updateAccountAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateAccountAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Account object"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "c8d6413a-1da2-4faa-9848-21f60443e906",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550859714477)/",
                "Attachments": [
                  {
                    "AttachmentID": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates an attachment on a specific account",
        "summary": "createAccountAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createAccountAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Account object"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "724cdff5-bcd1-4c5c-977e-e864c24258e0",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550856817769)/",
                "Attachments": [
                  {
                    "AttachmentID": "ab95b276-9dce-4925-9077-439818ba270f",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      }
    },
    "/BatchPayments": {
      "get": {
        "description": "Retrieves either one or many batch payments for invoices",
        "summary": "getBatchPayments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBatchPayments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BatchPayments array of BatchPayment objects",
            "schema": {
              "$ref": "#/definitions/BatchPayments"
            },
            "examples": {
              "application/json": {
                "Id": "6ab84949-4fe5-4788-a135-4d8f690d24d7",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550866184006)/",
                "BatchPayments": [
                  {
                    "Account": {
                      "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9"
                    },
                    "Reference": "Hello World",
                    "BatchPaymentID": "d0e9bbbf-5b8a-48b6-906a-035591fcb061",
                    "DateString": "2017-11-28T00:00:00",
                    "Date": "/Date(1511827200000+0000)/",
                    "Payments": [
                      {
                        "Invoice": {
                          "InvoiceID": "0975dec2-0cf6-498d-9c9f-c6775b45c61d",
                          "Payments": [],
                          "CreditNotes": [],
                          "Prepayments": [],
                          "Overpayments": [],
                          "HasErrors": false,
                          "IsDiscounted": false,
                          "LineItems": []
                        },
                        "PaymentID": "97ec2ef8-f4d6-4de5-9f2a-385d41cdc2fc",
                        "Amount": 200.0
                      },
                      {
                        "Invoice": {
                          "InvoiceID": "600982d9-6605-4e11-afa1-d8dec2be7b52",
                          "Payments": [],
                          "CreditNotes": [],
                          "Prepayments": [],
                          "Overpayments": [],
                          "HasErrors": false,
                          "IsDiscounted": false,
                          "LineItems": []
                        },
                        "PaymentID": "e232795f-b919-4865-a754-12f6ae8402c0",
                        "Amount": 200.0
                      },
                      {
                        "Invoice": {
                          "InvoiceID": "99a2bd54-4ab1-413c-90bb-57f6464fe5d6",
                          "Payments": [],
                          "CreditNotes": [],
                          "Prepayments": [],
                          "Overpayments": [],
                          "HasErrors": false,
                          "IsDiscounted": false,
                          "LineItems": []
                        },
                        "PaymentID": "c2d571a5-38ff-4d37-9d43-dfadb4ad53ff",
                        "Amount": 200.0
                      },
                      {
                        "Invoice": {
                          "InvoiceID": "c81942c8-bfc5-4c88-a21a-b892a4a8c1c5",
                          "Payments": [],
                          "CreditNotes": [],
                          "Prepayments": [],
                          "Overpayments": [],
                          "HasErrors": false,
                          "IsDiscounted": false,
                          "LineItems": []
                        },
                        "PaymentID": "0f3c18dc-49bd-47a4-a875-03c84a29978f",
                        "Amount": 200.0
                      },
                      {
                        "Invoice": {
                          "InvoiceID": "6c9a1d89-8319-42f6-87d6-7690e748af85",
                          "Payments": [],
                          "CreditNotes": [],
                          "Prepayments": [],
                          "Overpayments": [],
                          "HasErrors": false,
                          "IsDiscounted": false,
                          "LineItems": []
                        },
                        "PaymentID": "43541eed-f3ac-44ac-88cb-9fe1cb7ed8b8",
                        "Amount": 200.0
                      }
                    ],
                    "Type": "RECBATCH",
                    "Status": "AUTHORISED",
                    "TotalAmount": "1000.0",
                    "UpdatedDateUTC": "/Date(1511893792820+0000)/",
                    "IsReconciled": "false"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates one or many batch payments for invoices",
        "summary": "createBatchPayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBatchPayment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "BatchPayments with an array of Payments in body of request",
            "schema": {
              "$ref": "#/definitions/BatchPayments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BatchPayments array of BatchPayment objects",
            "schema": {
              "$ref": "#/definitions/BatchPayments"
            },
            "examples": {
              "application/json": {
                "Id": "424745ed-6356-46ad-87d4-3585f9062fb4",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550865988111)/",
                "BatchPayments": [
                  {
                    "Account": {
                      "AccountID": "5ec2f302-cd60-4f8b-a915-9229dd45e6fa"
                    },
                    "Reference": "Foobar123",
                    "BatchPaymentID": "d318c343-208e-49fe-b04a-45642349bcf1",
                    "DateString": "2019-02-22T00:00:00",
                    "Date": "/Date(1550793600000+0000)/",
                    "Payments": [
                      {
                        "Invoice": {
                          "InvoiceID": "3323652c-155e-433b-8a73-4dde7cfbf410",
                          "Payments": [],
                          "CreditNotes": [],
                          "Prepayments": [],
                          "Overpayments": [],
                          "HasErrors": false,
                          "IsDiscounted": false,
                          "LineItems": []
                        },
                        "PaymentID": "c05098fa-ae3c-4f00-80ec-0a9df07dedff",
                        "Amount": 1.0
                      },
                      {
                        "Invoice": {
                          "InvoiceID": "e4abafb4-1f5b-4d9f-80b3-9a7b815bc302",
                          "Payments": [],
                          "CreditNotes": [],
                          "Prepayments": [],
                          "Overpayments": [],
                          "HasErrors": false,
                          "IsDiscounted": false,
                          "LineItems": []
                        },
                        "PaymentID": "96409489-2f7d-4804-9a6d-6b939b0e038a",
                        "Amount": 1.0
                      },
                      {
                        "Invoice": {
                          "InvoiceID": "e6039672-b161-40cd-b07b-a0178e7186ad",
                          "Payments": [],
                          "CreditNotes": [],
                          "Prepayments": [],
                          "Overpayments": [],
                          "HasErrors": false,
                          "IsDiscounted": false,
                          "LineItems": []
                        },
                        "PaymentID": "d2796067-bf71-4f06-b386-81f1454fa866",
                        "Amount": 1.0
                      }
                    ],
                    "Type": "RECBATCH",
                    "Status": "AUTHORISED",
                    "TotalAmount": "3.0",
                    "UpdatedDateUTC": "/Date(1550865987783+0000)/",
                    "IsReconciled": "false"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/BatchPayments/{BatchPaymentID}/History": {
      "get": {
        "description": "Retrieves history from a specific batch payment",
        "summary": "getBatchPaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBatchPaymentHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BatchPaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for BatchPayment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "c58e2f9c-baad-42a4-8bb7-f32b6f88fa04",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550898452503)/",
                "HistoryRecords": [
                  {
                    "Changes": "Approved",
                    "DateUTCString": "2017-11-28T18:29:52",
                    "DateUTC": "/Date(1511893792813+0000)/",
                    "User": "Buzz Lightyear",
                    "Details": ""
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific batch payment",
        "summary": "createBatchPaymentHistoryRecord",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBatchPaymentHistoryRecord",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BatchPaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for BatchPayment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/BankTransactions": {
      "get": {
        "description": "Retrieves any spent or received money transactions",
        "summary": "getBankTransactions",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransactions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Up to 100 bank transactions will be returned in a single API call with line items details"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BankTransactions array with 0 to n BankTransaction",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            },
            "examples": {
              "application/json": {
                "Id": "18e7e80c-5dca-4a57-974e-8b572cc5efe8",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551212901659)/",
                "BankTransactions": [
                  {
                    "BankTransactionID": "db54aab0-ad40-4ced-bcff-0940ba20db2c",
                    "BankAccount": {
                      "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                      "Code": "088",
                      "Name": "Business Wells Fargo"
                    },
                    "BatchPayment": {
                      "Account": {
                        "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9"
                      },
                      "BatchPaymentID": "b54aa50c-794c-461b-89d1-846e1b84d9c0",
                      "Date": "/Date(1476316800000+0000)/",
                      "Type": "RECBATCH",
                      "Status": "AUTHORISED",
                      "TotalAmount": "12.00",
                      "UpdatedDateUTC": "/Date(1476392487037+0000)/",
                      "IsReconciled": "false"
                    },
                    "Type": "RECEIVE",
                    "IsReconciled": false,
                    "PrepaymentID": "cb62750f-b49c-464b-a45b-e2e2c514c8a9",
                    "HasAttachments": true,
                    "Contact": {
                      "ContactID": "9c2c64de-12c9-4167-b503-e2c0e1aa1f49",
                      "Name": "sam",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2016-10-13T00:00:00",
                    "Date": "/Date(1476316800000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [],
                    "SubTotal": 10,
                    "TotalTax": 0,
                    "Total": 10,
                    "UpdatedDateUTC": "/Date(1476389616437+0000)/",
                    "CurrencyCode": "USD"
                  },
                  {
                    "BankTransactionID": "29a69c45-64ca-4805-a1cc-34990de837b3",
                    "BankAccount": {
                      "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                      "Code": "088",
                      "Name": "Business Wells Fargo"
                    },
                    "Type": "SPEND-OVERPAYMENT",
                    "IsReconciled": false,
                    "OverpaymentID": "7d457db3-3b0a-47e9-8b79-81252a7bcdcb",
                    "HasAttachments": false,
                    "Contact": {
                      "ContactID": "9c2c64de-12c9-4167-b503-e2c0e1aa1f49",
                      "Name": "sam",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2016-10-13T00:00:00",
                    "Date": "/Date(1476316800000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "NoTax",
                    "LineItems": [],
                    "SubTotal": 9,
                    "TotalTax": 0,
                    "Total": 9,
                    "UpdatedDateUTC": "/Date(1476389930500+0000)/",
                    "CurrencyCode": "USD"
                  },
                  {
                    "BankTransactionID": "0b89bf5c-d40b-4514-96be-36a739fb0188",
                    "BankAccount": {
                      "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                      "Code": "088",
                      "Name": "Business Wells Fargo"
                    },
                    "Type": "SPEND-OVERPAYMENT",
                    "IsReconciled": false,
                    "OverpaymentID": "bf9b5f33-c0d6-4182-84a2-40848023e5a1",
                    "HasAttachments": false,
                    "Contact": {
                      "ContactID": "9c2c64de-12c9-4167-b503-e2c0e1aa1f49",
                      "Name": "sam",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2016-10-13T00:00:00",
                    "Date": "/Date(1476316800000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "NoTax",
                    "LineItems": [],
                    "SubTotal": 8,
                    "TotalTax": 0,
                    "Total": 8,
                    "UpdatedDateUTC": "/Date(1476392487037+0000)/",
                    "CurrencyCode": "USD"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates one or more spent or received money transaction",
        "summary": "createBankTransactions",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransactions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "BankTransactions with an array of BankTransaction objects in body of request",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BankTransactions array with new BankTransaction",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            },
            "examples": {
              "application/json": {
                "Id": "5bc1d776-3c7f-4fe8-9b2d-09e747077a88",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551213568047)/",
                "BankTransactions": [
                  {
                    "BankTransactionID": "1289c190-e46d-434b-9628-463ffdb52f00",
                    "BankAccount": {
                      "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                      "Code": "088",
                      "Name": "Business Wells Fargo"
                    },
                    "Type": "SPEND",
                    "Reference": "",
                    "IsReconciled": false,
                    "CurrencyRate": 1.0,
                    "Contact": {
                      "ContactID": "5cc8cf28-567e-4d43-b287-687cfcaec47c",
                      "ContactStatus": "ACTIVE",
                      "Name": "Katherine Warren",
                      "FirstName": "Katherine",
                      "LastName": "Warren",
                      "EmailAddress": "kat.warren@clampett.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "AddressLine1": "",
                          "AddressLine2": "",
                          "AddressLine3": "",
                          "AddressLine4": "",
                          "City": "Palo Alto",
                          "Region": "CA",
                          "PostalCode": "94020",
                          "Country": "United States"
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "847-1294",
                          "PhoneAreaCode": "(626)",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1503348544227+0000)/",
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-02-26T00:00:00",
                    "Date": "/Date(1551139200000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Inclusive",
                    "LineItems": [
                      {
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "TaxType": "TAX001",
                        "TaxAmount": 1.74,
                        "LineAmount": 20.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "Quantity": 1.0,
                        "LineItemID": "d2a06879-da49-4d6c-83b5-72a93a523ec6",
                        "AccountID": "ebd06280-af70-4bed-97c6-7451a454ad85",
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 18.26,
                    "TotalTax": 1.74,
                    "Total": 20.0,
                    "UpdatedDateUTC": "/Date(1551213567813+0000)/",
                    "CurrencyCode": "USD",
                    "StatusAttributeString": "ERROR",
                    "ValidationErrors": [
                      {
                        "Message": "The Contact must contain at least 1 of the following elements to identify the contact: Name, ContactID, ContactNumber"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates or creates one or more spent or received money transaction",
        "summary": "updateOrCreateBankTransactions",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateOrCreateBankTransactions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BankTransactions array with new BankTransaction",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            },
            "examples": {
              "application/json": {
                "Id": "5bc1d776-3c7f-4fe8-9b2d-09e747077a88",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551213568047)/",
                "BankTransactions": [
                  {
                    "BankTransactionID": "1289c190-e46d-434b-9628-463ffdb52f00",
                    "BankAccount": {
                      "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                      "Code": "088",
                      "Name": "Business Wells Fargo"
                    },
                    "Type": "SPEND",
                    "Reference": "",
                    "IsReconciled": false,
                    "CurrencyRate": 1.0,
                    "Contact": {
                      "ContactID": "5cc8cf28-567e-4d43-b287-687cfcaec47c",
                      "ContactStatus": "ACTIVE",
                      "Name": "Katherine Warren",
                      "FirstName": "Katherine",
                      "LastName": "Warren",
                      "EmailAddress": "kat.warren@clampett.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "AddressLine1": "",
                          "AddressLine2": "",
                          "AddressLine3": "",
                          "AddressLine4": "",
                          "City": "Palo Alto",
                          "Region": "CA",
                          "PostalCode": "94020",
                          "Country": "United States"
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "847-1294",
                          "PhoneAreaCode": "(626)",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1503348544227+0000)/",
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-02-26T00:00:00",
                    "Date": "/Date(1551139200000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Inclusive",
                    "LineItems": [
                      {
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "TaxType": "TAX001",
                        "TaxAmount": 1.74,
                        "LineAmount": 20.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "Quantity": 1.0,
                        "LineItemID": "d2a06879-da49-4d6c-83b5-72a93a523ec6",
                        "AccountID": "ebd06280-af70-4bed-97c6-7451a454ad85",
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 18.26,
                    "TotalTax": 1.74,
                    "Total": 20.0,
                    "UpdatedDateUTC": "/Date(1551213567813+0000)/",
                    "CurrencyCode": "USD",
                    "StatusAttributeString": "ERROR",
                    "ValidationErrors": [
                      {
                        "Message": "The Contact must contain at least 1 of the following elements to identify the contact: Name, ContactID, ContactNumber"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/BankTransactions/{BankTransactionID}": {
      "get": {
        "description": "Retrieves a single spent or received money transaction by using a unique bank transaction Id",
        "summary": "getBankTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransaction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transaction"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BankTransactions array with a specific BankTransaction",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            },
            "examples": {
              "application/json": {
                "Id": "612e204d-21ab-469b-ac84-afe0697b4461",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551212902962)/",
                "BankTransactions": [
                  {
                    "BankTransactionID": "db54aab0-ad40-4ced-bcff-0940ba20db2c",
                    "BankAccount": {
                      "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                      "Code": "088",
                      "Name": "Business Wells Fargo"
                    },
                    "BatchPayment": {
                      "Account": {
                        "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9"
                      },
                      "BatchPaymentID": "b54aa50c-794c-461b-89d1-846e1b84d9c0",
                      "Date": "/Date(1476316800000+0000)/",
                      "Type": "RECBATCH",
                      "Status": "AUTHORISED",
                      "TotalAmount": "12.00",
                      "UpdatedDateUTC": "/Date(1476392487037+0000)/",
                      "IsReconciled": "false"
                    },
                    "Type": "RECEIVE",
                    "IsReconciled": false,
                    "CurrencyRate": 1.0,
                    "PrepaymentID": "cb62750f-b49c-464b-a45b-e2e2c514c8a9",
                    "HasAttachments": true,
                    "Attachments": [
                      {
                        "AttachmentID": "45dd3143-9856-42d2-9a6c-53814f67a33e",
                        "FileName": "sample2.jpg",
                        "Url": "https://api.xero.com/api.xro/2.0/banktransaction/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample2.jpg",
                        "MimeType": "image/jpg",
                        "ContentLength": 2878711
                      }
                    ],
                    "Contact": {
                      "ContactID": "9c2c64de-12c9-4167-b503-e2c0e1aa1f49",
                      "ContactStatus": "ACTIVE",
                      "Name": "sam",
                      "EmailAddress": "",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1518821703467+0000)/",
                      "ContactGroups": [],
                      "DefaultCurrency": "USD",
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2016-10-13T00:00:00",
                    "Date": "/Date(1476316800000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "hello",
                        "UnitAmount": 10.0,
                        "TaxType": "OUTPUT",
                        "TaxAmount": 0.0,
                        "LineAmount": 10.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "Quantity": 1.0,
                        "LineItemID": "40bec527-a744-4149-96c5-0ab643b51158",
                        "AccountID": "ebd06280-af70-4bed-97c6-7451a454ad85",
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 10.0,
                    "TotalTax": 0.0,
                    "Total": 10.0,
                    "UpdatedDateUTC": "/Date(1476389616437+0000)/",
                    "CurrencyCode": "USD"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a single spent or received money transaction",
        "summary": "updateBankTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateBankTransaction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transaction"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BankTransactions array with updated BankTransaction",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            },
            "examples": {
              "application/json": {
                "Id": "f2c7f037-96fc-49bd-8f59-d3c7bfdd4746",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551213568875)/",
                "BankTransactions": [
                  {
                    "BankTransactionID": "1289c190-e46d-434b-9628-463ffdb52f00",
                    "BankAccount": {
                      "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                      "Code": "088",
                      "Name": "Business Wells Fargo"
                    },
                    "Type": "SPEND",
                    "Reference": "You just updated",
                    "IsReconciled": false,
                    "CurrencyRate": 1.0,
                    "HasAttachments": false,
                    "Attachments": [],
                    "Contact": {
                      "ContactID": "5cc8cf28-567e-4d43-b287-687cfcaec47c",
                      "ContactStatus": "ACTIVE",
                      "Name": "Katherine Warren",
                      "FirstName": "Katherine",
                      "LastName": "Warren",
                      "EmailAddress": "kat.warren@clampett.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "AddressLine1": "",
                          "AddressLine2": "",
                          "AddressLine3": "",
                          "AddressLine4": "",
                          "City": "Palo Alto",
                          "Region": "CA",
                          "PostalCode": "94020",
                          "Country": "United States"
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "847-1294",
                          "PhoneAreaCode": "(626)",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1503348544227+0000)/",
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-02-25T00:00:00",
                    "Date": "/Date(1551052800000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Inclusive",
                    "LineItems": [
                      {
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "TaxType": "TAX001",
                        "TaxAmount": 1.74,
                        "LineAmount": 20.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "Quantity": 1.0,
                        "LineItemID": "d2a06879-da49-4d6c-83b5-72a93a523ec6",
                        "AccountID": "ebd06280-af70-4bed-97c6-7451a454ad85",
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 18.26,
                    "TotalTax": 1.74,
                    "Total": 20.0,
                    "UpdatedDateUTC": "/Date(1551213568733+0000)/",
                    "CurrencyCode": "USD"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/BankTransactions/{BankTransactionID}/Attachments": {
      "get": {
        "description": "Retrieves any attachments from a specific bank transactions",
        "summary": "getBankTransactionAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransactionAttachments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transaction"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with 0 to n Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "c50798e1-29e9-4a30-a452-bb6e42e400c8",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551303999577)/",
                "Attachments": [
                  {
                    "AttachmentID": "4508a692-e52c-4ad8-a138-2f13e22bf57b",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/BankTransactions/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  },
                  {
                    "AttachmentID": "45dd3143-9856-42d2-9a6c-53814f67a33e",
                    "FileName": "sample2.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/BankTransactions/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample2.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/BankTransactions/{BankTransactionID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Retrieves specific attachments from a specific BankTransaction using a unique attachment Id",
        "summary": "getBankTransactionAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransactionAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transaction"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Attachment object"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for BankTransaction as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/BankTransactions/{BankTransactionID}/Attachments/{FileName}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific bank transaction by filename",
        "summary": "getBankTransactionAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransactionAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transaction"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for BankTransaction as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific attachment from a specific bank transaction by filename",
        "summary": "updateBankTransactionAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateBankTransactionAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transaction"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of Attachments array of Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "572ad2fe-8c23-45aa-82f9-864485327685",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551286166630)/",
                "Attachments": [
                  {
                    "AttachmentID": "4508a692-e52c-4ad8-a138-2f13e22bf57b",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/BankTransactions/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates an attachment for a specific bank transaction by filename",
        "summary": "createBankTransactionAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransactionAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transaction"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of Attachments array of Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "572ad2fe-8c23-45aa-82f9-864485327685",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551286166630)/",
                "Attachments": [
                  {
                    "AttachmentID": "4508a692-e52c-4ad8-a138-2f13e22bf57b",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/BankTransactions/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      }
    },
    "/BankTransactions/{BankTransactionID}/History": {
      "get": {
        "description": "Retrieves history from a specific bank transaction using a unique bank transaction Id",
        "summary": "getBankTransactionsHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransactionsHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transaction"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific bank transactions",
        "summary": "createBankTransactionHistoryRecord",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransactionHistoryRecord",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transaction"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/BankTransfers": {
      "get": {
        "description": "Retrieves all bank transfers",
        "summary": "getBankTransfers",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransfers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of BankTransfers array of 0 to N BankTransfer",
            "schema": {
              "$ref": "#/definitions/BankTransfers"
            },
            "examples": {
              "application/json": {
                "Id": "dfc0d130-9007-4a98-a5ef-6f01700f18e2",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311318988)/",
                "BankTransfers": [
                  {
                    "BankTransferID": "6221458a-ef7a-4d5f-9b1c-1b96ce03833c",
                    "CreatedDateUTCString": "2016-10-17T20:46:01",
                    "CreatedDateUTC": "/Date(1476737161140+0000)/",
                    "DateString": "2016-11-12T21:10:00",
                    "Date": "/Date(1478985000000+0000)/",
                    "FromBankAccount": {
                      "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                      "Name": "Business Wells Fargo"
                    },
                    "ToBankAccount": {
                      "AccountID": "7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa",
                      "Name": "My Savings"
                    },
                    "Amount": 20.0,
                    "FromBankTransactionID": "a3eca480-bc04-4292-9bbd-5c57b8ba12b4",
                    "ToBankTransactionID": "4ca13f40-f3a0-4530-a442-a600f5696118",
                    "FromIsReconciled": true,
                    "ToIsReconciled": true,
                    "Reference": "Sub 098801",
                    "HasAttachments": true
                  },
                  {
                    "BankTransferID": "9f0153d5-617c-4903-887b-3875807aa27a",
                    "CreatedDateUTCString": "2016-10-21T23:28:42",
                    "CreatedDateUTC": "/Date(1477092522333+0000)/",
                    "DateString": "2016-10-19T20:10:00",
                    "Date": "/Date(1476907800000+0000)/",
                    "FromBankAccount": {
                      "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                      "Name": "Business Wells Fargo"
                    },
                    "ToBankAccount": {
                      "AccountID": "7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa",
                      "Name": "My Savings"
                    },
                    "Amount": 20.0,
                    "FromBankTransactionID": "cb74287e-5682-4973-b354-93e2c7a836d3",
                    "ToBankTransactionID": "4c48ba6c-f318-4405-aee6-b5efa2c70f55",
                    "FromIsReconciled": false,
                    "ToIsReconciled": false,
                    "Reference": "Sub 098801",
                    "HasAttachments": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a bank transfer",
        "summary": "createBankTransfer",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransfer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "BankTransfers with array of BankTransfer objects in request body",
            "schema": {
              "$ref": "#/definitions/BankTransfers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of BankTransfers array of one BankTransfer",
            "schema": {
              "$ref": "#/definitions/BankTransfers"
            },
            "examples": {
              "application/json": {
                "Id": "ae767b68-affd-4e17-bac0-83eaf1854dcd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311317475)/",
                "BankTransfers": [
                  {
                    "BankTransferID": "76eea4b6-f026-464c-b6f3-5fb39a196145",
                    "DateString": "2019-02-27T00:00:00",
                    "Date": "/Date(1551225600000+0000)/",
                    "FromBankAccount": {
                      "AccountID": "7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa",
                      "Code": "090",
                      "Name": "My Savings"
                    },
                    "ToBankAccount": {
                      "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                      "Code": "088",
                      "Name": "Business Wells Fargo"
                    },
                    "Amount": 50.0,
                    "FromBankTransactionID": "e4059952-5acb-4a56-b076-53fad85f2930",
                    "ToBankTransactionID": "88e4ac17-293b-4e5a-8d8b-3ce3a0b1ee17",
                    "FromIsReconciled": true,
                    "ToIsReconciled": true,
                    "Reference": "Sub 098801",
                    "CurrencyRate": 1.0,
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/BankTransfers/{BankTransferID}": {
      "get": {
        "description": "Retrieves specific bank transfers by using a unique bank transfer Id",
        "summary": "getBankTransfer",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransfer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transfer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of BankTransfers array with one BankTransfer",
            "schema": {
              "$ref": "#/definitions/BankTransfers"
            },
            "examples": {
              "application/json": {
                "Id": "1a5fa46d-5ece-4ef2-89b1-77c293b5d833",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311320368)/",
                "BankTransfers": [
                  {
                    "BankTransferID": "6221458a-ef7a-4d5f-9b1c-1b96ce03833c",
                    "CreatedDateUTCString": "2016-10-17T20:46:01",
                    "CreatedDateUTC": "/Date(1476737161140+0000)/",
                    "DateString": "2016-11-12T21:10:00",
                    "Date": "/Date(1478985000000+0000)/",
                    "FromBankAccount": {
                      "AccountID": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                      "Code": "088",
                      "Name": "Business Wells Fargo"
                    },
                    "ToBankAccount": {
                      "AccountID": "7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa",
                      "Code": "090",
                      "Name": "My Savings"
                    },
                    "Amount": 20.0,
                    "FromBankTransactionID": "a3eca480-bc04-4292-9bbd-5c57b8ba12b4",
                    "ToBankTransactionID": "4ca13f40-f3a0-4530-a442-a600f5696118",
                    "FromIsReconciled": false,
                    "ToIsReconciled": false,
                    "Reference": "Sub 098801",
                    "CurrencyRate": 1.0,
                    "HasAttachments": true,
                    "Attachments": [
                      {
                        "AttachmentID": "e05a6fd8-0e47-47a9-9799-b809c8267260",
                        "FileName": "HelloWorld.jpg",
                        "Url": "https://api.xero.com/api.xro/2.0/banktransfer/6221458a-ef7a-4d5f-9b1c-1b96ce03833c/Attachments/HelloWorld.jpg",
                        "MimeType": "image/jpg",
                        "ContentLength": 2878711
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/BankTransfers/{BankTransferID}/Attachments": {
      "get": {
        "description": "Retrieves attachments from a specific bank transfer",
        "summary": "getBankTransferAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransferAttachments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transfer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of Attachments array of 0 to N Attachment for a Bank Transfer",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "5cb6b587-7b02-46b6-97fe-d8ad8f20321b",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551397557272)/",
                "Attachments": [
                  {
                    "AttachmentID": "e05a6fd8-0e47-47a9-9799-b809c8267260",
                    "FileName": "HelloWorld.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/BankTransfers/6221458a-ef7a-4d5f-9b1c-1b96ce03833c/Attachments/HelloWorld.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/BankTransfers/{BankTransferID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific bank transfer using a unique attachment ID",
        "summary": "getBankTransferAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransferAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transfer"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Attachment object"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of binary data from the Attachment to a Bank Transfer",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/BankTransfers/{BankTransferID}/Attachments/{FileName}": {
      "get": {
        "description": "Retrieves a specific attachment on a specific bank transfer by file name",
        "summary": "getBankTransferAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransferAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transfer"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of binary data from the Attachment to a Bank Transfer",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "post": {
        "description": "",
        "summary": "updateBankTransferAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateBankTransferAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transfer"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of Attachments array of 0 to N Attachment for a Bank Transfer",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "c7810140-19c2-4ff7-b3ec-b7e95ce7becf",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551398138226)/",
                "Attachments": [
                  {
                    "AttachmentID": "0851935c-c4c5-4de8-9247-ce22efde6f82",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/BankTransfers/6221458a-ef7a-4d5f-9b1c-1b96ce03833c/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      },
      "put": {
        "description": "",
        "summary": "createBankTransferAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransferAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transfer"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of Attachments array of 0 to N Attachment for a Bank Transfer",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "b73ba149-76a9-4e7c-a5c6-b9230022f416",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551397998372)/",
                "Attachments": [
                  {
                    "AttachmentID": "9478be4c-c707-48c1-b4a7-83d8eaf442b5",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/BankTransfers/6221458a-ef7a-4d5f-9b1c-1b96ce03833c/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      }
    },
    "/BankTransfers/{BankTransferID}/History": {
      "get": {
        "description": "Retrieves history from a specific bank transfer using a unique bank transfer Id",
        "summary": "getBankTransferHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransferHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transfer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific bank transfer",
        "summary": "createBankTransferHistoryRecord",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransferHistoryRecord",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Xero generated unique identifier for a bank transfer"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/BrandingThemes": {
      "get": {
        "description": "Retrieves all the branding themes",
        "summary": "getBrandingThemes",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBrandingThemes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BrandingThemes",
            "schema": {
              "$ref": "#/definitions/BrandingThemes"
            },
            "examples": {
              "application/json": {
                "Id": "d1a1beea-bdfe-4ee4-9dbc-27226a26cd68",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550881711906)/",
                "BrandingThemes": [
                  {
                    "BrandingThemeID": "dabc7637-62c1-4941-8a6e-ee44fa5090e7",
                    "Name": "Standard",
                    "SortOrder": 0,
                    "CreatedDateUTC": "/Date(1464967643813+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      }
    },
    "/BrandingThemes/{BrandingThemeID}": {
      "get": {
        "description": "Retrieves a specific branding theme using a unique branding theme Id",
        "summary": "getBrandingTheme",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBrandingTheme",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BrandingThemeID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Branding Theme"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BrandingThemes with one BrandingTheme",
            "schema": {
              "$ref": "#/definitions/BrandingThemes"
            },
            "examples": {
              "application/json": {
                "Id": "df671650-cf14-4a7f-b609-4166933719bc",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550881713071)/",
                "BrandingThemes": [
                  {
                    "BrandingThemeID": "dabc7637-62c1-4941-8a6e-ee44fa5090e7",
                    "Name": "Standard",
                    "SortOrder": 0,
                    "CreatedDateUTC": "/Date(1464967643813+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      }
    },
    "/BrandingThemes/{BrandingThemeID}/PaymentServices": {
      "get": {
        "description": "Retrieves the payment services for a specific branding theme",
        "summary": "getBrandingThemePaymentServices",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBrandingThemePaymentServices",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BrandingThemeID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Branding Theme"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PaymentServices array with 0 to N PaymentService",
            "schema": {
              "$ref": "#/definitions/PaymentServices"
            },
            "examples": {
              "application/json": {
                "Id": "bfd5adbe-0e92-48f0-8c5a-39072f6c4ed3",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551139339419)/",
                "PaymentServices": [
                  {
                    "PaymentServiceID": "8cc53aa4-ae01-45b9-b06c-69c42eeae61f",
                    "PaymentServiceName": "Buzz Lightyear",
                    "PaymentServiceType": "PayPal"
                  },
                  {
                    "PaymentServiceID": "dede7858-14e3-4a46-bf95-4d4cc491e645",
                    "PaymentServiceName": "ACME Payment",
                    "PaymentServiceUrl": "https://www.payupnow.com/",
                    "PaymentServiceType": "Custom",
                    "PayNowText": "Pay Now"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "paymentservices"
            ]
          }
        ]
      },
      "post": {
        "description": "Creates a new custom payment service for a specific branding theme",
        "summary": "createBrandingThemePaymentServices",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBrandingThemePaymentServices",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BrandingThemeID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Branding Theme"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "PaymentService object in body of request",
            "schema": {
              "$ref": "#/definitions/PaymentService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PaymentServices array with newly created PaymentService",
            "schema": {
              "$ref": "#/definitions/PaymentServices"
            },
            "examples": {
              "application/json": {
                "Id": "918feecb-067a-4ed9-841b-571c04eaada3",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551139338915)/",
                "PaymentServices": [
                  {
                    "PaymentServiceID": "00000000-0000-0000-0000-000000000000",
                    "PaymentServiceName": "ACME Payments",
                    "PaymentServiceUrl": "https://www.payupnow.com/",
                    "PaymentServiceType": "Custom",
                    "PayNowText": "Pay Now"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "paymentservices"
            ]
          }
        ]
      }
    },
    "/Budgets": {
      "get": {
        "description": "Retrieve a list of budgets",
        "summary": "getBudgets",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBudgets",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "IDs",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by BudgetID. Allows you to retrieve a specific individual budget."
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Filter by start date"
          },
          {
            "name": "DateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Filter by end date"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Budgets array with 0 to N Budgets",
            "schema": {
              "$ref": "#/definitions/Budgets"
            },
            "examples": {
              "application/json": {
                "Id": "04e93d48-e72f-4775-b7dd-15a041fab972",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551399323399)/",
                "Budgets": [
                  {
                    "BudgetID": "847da917-9565-466c-a9cd-3ecf7eb9d094",
                    "Status": "APPROVED",
                    "Description": "FY2021 budget",
                    "Type": "TRACKING",
                    "UpdatedDateUTC": "/Date(1622138002077+0000)/",
                    "BudgetLines": [],
                    "Tracking": []
                  },
                  {
                    "BudgetID": "93a4bab1-0021-4320-a2ec-c250528b4bc5",
                    "Status": "APPROVED",
                    "Description": "Overall Budget",
                    "Type": "OVERALL",
                    "UpdatedDateUTC": "/Date(1622137786913+0000)/",
                    "BudgetLines": [],
                    "Tracking": []
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.budgets.read"
            ]
          }
        ]
      }
    },
    "/Budgets/{BudgetID}": {
      "get": {
        "description": "Retrieves a specific budget, which includes budget lines",
        "summary": "getBudget",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBudget",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "BudgetID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Budgets"
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Filter by start date"
          },
          {
            "name": "DateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Filter by end date"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Invoices array with specified Invoices",
            "schema": {
              "$ref": "#/definitions/Budgets"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.budgets.read"
            ]
          }
        ]
      }
    },
    "/Contacts": {
      "get": {
        "description": "Retrieves all contacts in a Xero organisation",
        "summary": "getContacts",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContacts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "IDs",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by a comma separated list of ContactIDs. Allows you to retrieve a specific set of contacts in a single call."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 - Up to 100 contacts will be returned in a single API call."
          },
          {
            "name": "includeArchived",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "e.g. includeArchived=true - Contacts with a status of ARCHIVED will be included in the response"
          },
          {
            "name": "summaryOnly",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "Use summaryOnly=true in GET Contacts and Invoices endpoint to retrieve a smaller version of the response object. This returns only lightweight fields, excluding computation-heavy fields from the response, making the API calls quick and efficient."
          },
          {
            "name": "searchTerm",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search parameter that performs a case-insensitive text search across the Name, FirstName, LastName, ContactNumber and EmailAddress fields."
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array with 0 to N Contact",
            "schema": {
              "$ref": "#/definitions/Contacts"
            },
            "examples": {
              "application/json": {
                "Id": "04e93d48-e72f-4775-b7dd-15a041fab972",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551399323399)/",
                "Contacts": [
                  {
                    "ContactID": "5cc8cf28-567e-4d43-b287-687cfcaec47c",
                    "ContactStatus": "ACTIVE",
                    "Name": "Katherine Warren",
                    "FirstName": "Katherine",
                    "LastName": "Warren",
                    "CompanyNumber": "NumberBusiness1234",
                    "EmailAddress": "kat.warren@clampett.com",
                    "BankAccountDetails": "",
                    "Addresses": [
                      {
                        "AddressType": "STREET",
                        "City": "",
                        "Region": "",
                        "PostalCode": "",
                        "Country": ""
                      },
                      {
                        "AddressType": "POBOX",
                        "AddressLine1": "",
                        "AddressLine2": "",
                        "AddressLine3": "",
                        "AddressLine4": "",
                        "City": "Palo Alto",
                        "Region": "CA",
                        "PostalCode": "94020",
                        "Country": "United States"
                      }
                    ],
                    "Phones": [
                      {
                        "PhoneType": "DDI",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "DEFAULT",
                        "PhoneNumber": "847-1294",
                        "PhoneAreaCode": "(626)",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "FAX",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "MOBILE",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      }
                    ],
                    "UpdatedDateUTC": "/Date(1503348544227+0000)/",
                    "ContactGroups": [],
                    "IsSupplier": true,
                    "IsCustomer": true,
                    "SalesDefaultLineAmountType": "INCLUSIVE",
                    "PurchasesDefaultLineAmountType": "INCLUSIVE",
                    "Balances": {
                      "AccountsReceivable": {
                        "Outstanding": 760.0,
                        "Overdue": 920.0
                      },
                      "AccountsPayable": {
                        "Outstanding": 231.6,
                        "Overdue": 360.0
                      }
                    },
                    "ContactPersons": [],
                    "HasAttachments": false,
                    "HasValidationErrors": false
                  },
                  {
                    "ContactID": "3ec601ad-eddc-4ccb-a8ac-736e88293b1b",
                    "ContactStatus": "ACTIVE",
                    "Name": "Lisa Parker",
                    "FirstName": "Lisa",
                    "LastName": "Parker",
                    "EmailAddress": "lparker@parkerandco.com",
                    "BankAccountDetails": "",
                    "Addresses": [
                      {
                        "AddressType": "STREET",
                        "City": "",
                        "Region": "",
                        "PostalCode": "",
                        "Country": ""
                      },
                      {
                        "AddressType": "POBOX",
                        "AddressLine1": "",
                        "AddressLine2": "",
                        "AddressLine3": "",
                        "AddressLine4": "",
                        "City": "Anchorage",
                        "Region": "AK",
                        "PostalCode": "99501",
                        "Country": "United States"
                      }
                    ],
                    "Phones": [
                      {
                        "PhoneType": "DDI",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "DEFAULT",
                        "PhoneNumber": "266-3583",
                        "PhoneAreaCode": "(510)",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "FAX",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "MOBILE",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      }
                    ],
                    "UpdatedDateUTC": "/Date(1503348546760+0000)/",
                    "ContactGroups": [],
                    "IsSupplier": false,
                    "IsCustomer": false,
                    "ContactPersons": [],
                    "HasAttachments": false,
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts",
              "accounting.contacts.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates multiple contacts (bulk) in a Xero organisation",
        "summary": "createContacts",
        "tags": [
          "Accounting"
        ],
        "operationId": "createContacts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Contacts with an array of Contact objects to create in body of request",
            "schema": {
              "$ref": "#/definitions/Contacts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array with newly created Contact",
            "schema": {
              "$ref": "#/definitions/Contacts"
            },
            "examples": {
              "application/json": {
                "Id": "e997d6d7-6dad-4458-beb8-d9c1bf7f2edf",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551399321121)/",
                "Contacts": [
                  {
                    "ContactID": "3ff6d40c-af9a-40a3-89ce-3c1556a25591",
                    "ContactStatus": "ACTIVE",
                    "CompanyNumber": "NumberBusiness1234",
                    "Name": "Foo9987",
                    "EmailAddress": "sid32476@blah.com",
                    "BankAccountDetails": "",
                    "Addresses": [
                      {
                        "AddressType": "STREET",
                        "City": "",
                        "Region": "",
                        "PostalCode": "",
                        "Country": ""
                      },
                      {
                        "AddressType": "POBOX",
                        "City": "",
                        "Region": "",
                        "PostalCode": "",
                        "Country": ""
                      }
                    ],
                    "Phones": [
                      {
                        "PhoneType": "DEFAULT",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "DDI",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "FAX",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "MOBILE",
                        "PhoneNumber": "555-1212",
                        "PhoneAreaCode": "415",
                        "PhoneCountryCode": ""
                      }
                    ],
                    "UpdatedDateUTC": "/Date(1551399321043+0000)/",
                    "ContactGroups": [],
                    "IsSupplier": false,
                    "IsCustomer": false,
                    "SalesDefaultLineAmountType": "INCLUSIVE",
                    "PurchasesDefaultLineAmountType": "INCLUSIVE",
                    "SalesTrackingCategories": [],
                    "PurchasesTrackingCategories": [],
                    "PaymentTerms": {
                      "Bills": {
                        "Day": 15,
                        "Type": "OFCURRENTMONTH"
                      },
                      "Sales": {
                        "Day": 10,
                        "Type": "DAYSAFTERBILLMONTH"
                      }
                    },
                    "ContactPersons": [],
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "ErrorNumber": 10,
                "Type": "ValidationException",
                "Message": "A validation exception occurred",
                "Elements": [
                  {
                    "ContactID": "00000000-0000-0000-0000-000000000000",
                    "AccountNumber": "12345-ABCD",
                    "Name": "Buzz Lightyear",
                    "EmailAddress": "buzzlightyear@email.com",
                    "AccountsReceivableTaxType": "NONE",
                    "AccountsPayableTaxType": "INPUT",
                    "Addresses": [
                      {
                        "AddressType": "STREET",
                        "AddressLine1": "101 Green St",
                        "AddressLine2": "5th floor",
                        "City": "San Francisco",
                        "Region": "CA",
                        "PostalCode": "94041",
                        "Country": "US",
                        "AttentionTo": "Rod Drury",
                        "ValidationErrors": []
                      }
                    ],
                    "Phones": [
                      {
                        "PhoneType": "MOBILE",
                        "PhoneNumber": "555-1212",
                        "PhoneAreaCode": "415",
                        "ValidationErrors": []
                      }
                    ],
                    "ContactGroups": [],
                    "PaymentTerms": {
                      "Bills": {
                        "Day": 15,
                        "Type": "OFCURRENTMONTH",
                        "ValidationErrors": []
                      },
                      "Sales": {
                        "Day": 10,
                        "Type": "DAYSAFTERBILLMONTH",
                        "ValidationErrors": []
                      }
                    },
                    "ContactPersons": [],
                    "HasValidationErrors": true,
                    "ValidationErrors": [
                      {
                        "Message": "The contact name Buzz Lightyear is already assigned to another contact. The contact name must be unique across all active contacts."
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates or creates one or more contacts in a Xero organisation",
        "summary": "updateOrCreateContacts",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateOrCreateContacts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Contacts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array with newly created Contact",
            "schema": {
              "$ref": "#/definitions/Contacts"
            },
            "examples": {
              "application/json": {
                "Id": "e997d6d7-6dad-4458-beb8-d9c1bf7f2edf",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551399321121)/",
                "Contacts": [
                  {
                    "ContactID": "00000000-0000-0000-0000-000000000000",
                    "ContactStatus": "ACTIVE",
                    "Name": "Bruce Banner",
                    "CompanyNumber": "NumberBusiness1234",
                    "EmailAddress": "bruce@banner.com",
                    "BankAccountDetails": "",
                    "Addresses": [
                      {
                        "AddressType": "STREET",
                        "City": "",
                        "Region": "",
                        "PostalCode": "",
                        "Country": ""
                      },
                      {
                        "AddressType": "POBOX",
                        "City": "",
                        "Region": "",
                        "PostalCode": "",
                        "Country": ""
                      }
                    ],
                    "Phones": [
                      {
                        "PhoneType": "DEFAULT",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "DDI",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "FAX",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "MOBILE",
                        "PhoneNumber": "555-1212",
                        "PhoneAreaCode": "415",
                        "PhoneCountryCode": ""
                      }
                    ],
                    "UpdatedDateUTC": "/Date(1551399321043+0000)/",
                    "ContactGroups": [],
                    "IsSupplier": false,
                    "IsCustomer": false,
                    "SalesDefaultLineAmountType": "INCLUSIVE",
                    "PurchasesDefaultLineAmountType": "INCLUSIVE",
                    "SalesTrackingCategories": [],
                    "PurchasesTrackingCategories": [],
                    "PaymentTerms": {
                      "Bills": {
                        "Day": 15,
                        "Type": "OFCURRENTMONTH"
                      },
                      "Sales": {
                        "Day": 10,
                        "Type": "DAYSAFTERBILLMONTH"
                      }
                    },
                    "ContactPersons": [],
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "ErrorNumber": 10,
                "Type": "ValidationException",
                "Message": "A validation exception occurred",
                "Elements": [
                  {
                    "ContactID": "00000000-0000-0000-0000-000000000000",
                    "AccountNumber": "12345-ABCD",
                    "Name": "Buzz Lightyear",
                    "EmailAddress": "buzzlightyear@email.com",
                    "AccountsReceivableTaxType": "NONE",
                    "AccountsPayableTaxType": "INPUT",
                    "Addresses": [
                      {
                        "AddressType": "STREET",
                        "AddressLine1": "101 Green St",
                        "AddressLine2": "5th floor",
                        "City": "San Francisco",
                        "Region": "CA",
                        "PostalCode": "94041",
                        "Country": "US",
                        "AttentionTo": "Rod Drury",
                        "ValidationErrors": []
                      }
                    ],
                    "Phones": [
                      {
                        "PhoneType": "MOBILE",
                        "PhoneNumber": "555-1212",
                        "PhoneAreaCode": "415",
                        "ValidationErrors": []
                      }
                    ],
                    "ContactGroups": [],
                    "PaymentTerms": {
                      "Bills": {
                        "Day": 15,
                        "Type": "OFCURRENTMONTH",
                        "ValidationErrors": []
                      },
                      "Sales": {
                        "Day": 10,
                        "Type": "DAYSAFTERBILLMONTH",
                        "ValidationErrors": []
                      }
                    },
                    "ContactPersons": [],
                    "HasValidationErrors": true,
                    "ValidationErrors": [
                      {
                        "Message": "The contact name Buzz Lightyear is already assigned to another contact. The contact name must be unique across all active contacts."
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ]
      }
    },
    "/Contacts/{ContactNumber}": {
      "get": {
        "description": "Retrieves a specific contact by contact number in a Xero organisation",
        "summary": "getContactByContactNumber",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactByContactNumber",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactNumber",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50)."
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array with a unique Contact",
            "schema": {
              "$ref": "#/definitions/Contacts"
            },
            "examples": {
              "application/json": {
                "Id": "5c83b115-a6e8-4f2a-877f-ba63d009235b",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551462703288)/",
                "Contacts": [
                  {
                    "ContactID": "8138a266-fb42-49b2-a104-014b7045753d",
                    "ContactNumber": "SB2",
                    "AccountNumber": "1234567",
                    "ContactStatus": "ACTIVE",
                    "Name": "Acme Parts Co.",
                    "FirstName": "Blake",
                    "LastName": "Kohler",
                    "CompanyNumber": "NumberBusiness1234",
                    "EmailAddress": "bk@krave.co",
                    "SkypeUserName": "blake",
                    "BankAccountDetails": "12334567",
                    "TaxNumber": "123-22-3456",
                    "AccountsReceivableTaxType": "TAX003",
                    "AccountsPayableTaxType": "TAX022",
                    "Addresses": [
                      {
                        "AddressType": "STREET",
                        "AddressLine1": "123 Fake Street",
                        "City": "Vancouver",
                        "Region": "British Columbia",
                        "PostalCode": "V6B 2T4",
                        "Country": "",
                        "AttentionTo": ""
                      },
                      {
                        "AddressType": "POBOX",
                        "AddressLine1": "1234 Fake Street",
                        "City": "Vancouver",
                        "Region": "British Columbia",
                        "PostalCode": "V6B 2T4",
                        "Country": "",
                        "AttentionTo": "Blake"
                      }
                    ],
                    "Phones": [
                      {
                        "PhoneType": "DDI",
                        "PhoneNumber": "489-44493",
                        "PhoneAreaCode": "345",
                        "PhoneCountryCode": "4"
                      },
                      {
                        "PhoneType": "DEFAULT",
                        "PhoneNumber": "408-0914",
                        "PhoneAreaCode": "604",
                        "PhoneCountryCode": "1"
                      },
                      {
                        "PhoneType": "FAX",
                        "PhoneNumber": "123-9933",
                        "PhoneAreaCode": "123",
                        "PhoneCountryCode": "2"
                      },
                      {
                        "PhoneType": "MOBILE",
                        "PhoneNumber": "999-44",
                        "PhoneAreaCode": "234",
                        "PhoneCountryCode": "3"
                      }
                    ],
                    "UpdatedDateUTC": "/Date(1551459777193+0000)/",
                    "ContactGroups": [],
                    "IsSupplier": true,
                    "IsCustomer": true,
                    "SalesDefaultLineAmountType": "INCLUSIVE",
                    "PurchasesDefaultLineAmountType": "INCLUSIVE",
                    "DefaultCurrency": "USD",
                    "Discount": 13.0,
                    "Website": "http://www.google.com",
                    "BrandingTheme": {
                      "BrandingThemeID": "dabc7637-62c1-4941-8a6e-ee44fa5090e7",
                      "Name": "Standard"
                    },
                    "PurchasesDefaultAccountCode": "660",
                    "SalesDefaultAccountCode": "002",
                    "BatchPayments": {
                      "BankAccountNumber": "12334567",
                      "BankAccountName": "Citi Bank",
                      "Details": "biz checking",
                      "Code": "",
                      "Reference": ""
                    },
                    "Balances": {
                      "AccountsReceivable": {
                        "Outstanding": 118.9,
                        "Overdue": 136.9
                      },
                      "AccountsPayable": {
                        "Outstanding": -43.6,
                        "Overdue": 40.0
                      }
                    },
                    "PaymentTerms": {
                      "Bills": {
                        "Day": 12,
                        "Type": "OFFOLLOWINGMONTH"
                      },
                      "Sales": {
                        "Day": 14,
                        "Type": "OFCURRENTMONTH"
                      }
                    },
                    "ContactPersons": [
                      {
                        "FirstName": "Sue",
                        "LastName": "Johnson",
                        "EmailAddress": "sue.johnson@krave.com",
                        "IncludeInEmails": true
                      }
                    ],
                    "HasAttachments": true,
                    "Attachments": [
                      {
                        "AttachmentID": "04e0a3e3-b116-456a-9f32-9706f0d33afa",
                        "FileName": "sample5.jpg",
                        "Url": "https://api.xero.com/api.xro/2.0/contact/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg",
                        "MimeType": "image/jpg",
                        "ContentLength": 2878711
                      }
                    ],
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts",
              "accounting.contacts.read"
            ]
          }
        ]
      }
    },
    "/Contacts/{ContactID}": {
      "get": {
        "description": "Retrieves a specific contacts in a Xero organisation using a unique contact Id",
        "summary": "getContact",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContact",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array with a unique Contact",
            "schema": {
              "$ref": "#/definitions/Contacts"
            },
            "examples": {
              "application/json": {
                "Id": "5c83b115-a6e8-4f2a-877f-ba63d009235b",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551462703288)/",
                "Contacts": [
                  {
                    "ContactID": "8138a266-fb42-49b2-a104-014b7045753d",
                    "ContactNumber": "SB2",
                    "AccountNumber": "1234567",
                    "ContactStatus": "ACTIVE",
                    "Name": "Acme Parts Co.",
                    "FirstName": "Blake",
                    "LastName": "Kohler",
                    "CompanyNumber": "NumberBusiness1234",
                    "EmailAddress": "bk@krave.co",
                    "SkypeUserName": "blake",
                    "BankAccountDetails": "12334567",
                    "TaxNumber": "123-22-3456",
                    "AccountsReceivableTaxType": "TAX003",
                    "AccountsPayableTaxType": "TAX022",
                    "Addresses": [
                      {
                        "AddressType": "STREET",
                        "AddressLine1": "123 Fake Street",
                        "City": "Vancouver",
                        "Region": "British Columbia",
                        "PostalCode": "V6B 2T4",
                        "Country": "",
                        "AttentionTo": ""
                      },
                      {
                        "AddressType": "POBOX",
                        "AddressLine1": "1234 Fake Street",
                        "City": "Vancouver",
                        "Region": "British Columbia",
                        "PostalCode": "V6B 2T4",
                        "Country": "",
                        "AttentionTo": "Blake"
                      }
                    ],
                    "Phones": [
                      {
                        "PhoneType": "DDI",
                        "PhoneNumber": "489-44493",
                        "PhoneAreaCode": "345",
                        "PhoneCountryCode": "4"
                      },
                      {
                        "PhoneType": "DEFAULT",
                        "PhoneNumber": "408-0914",
                        "PhoneAreaCode": "604",
                        "PhoneCountryCode": "1"
                      },
                      {
                        "PhoneType": "FAX",
                        "PhoneNumber": "123-9933",
                        "PhoneAreaCode": "123",
                        "PhoneCountryCode": "2"
                      },
                      {
                        "PhoneType": "MOBILE",
                        "PhoneNumber": "999-44",
                        "PhoneAreaCode": "234",
                        "PhoneCountryCode": "3"
                      }
                    ],
                    "UpdatedDateUTC": "/Date(1551459777193+0000)/",
                    "ContactGroups": [],
                    "IsSupplier": true,
                    "IsCustomer": true,
                    "SalesDefaultLineAmountType": "INCLUSIVE",
                    "PurchasesDefaultLineAmountType": "INCLUSIVE",
                    "DefaultCurrency": "USD",
                    "Discount": 13.0,
                    "Website": "http://www.google.com",
                    "BrandingTheme": {
                      "BrandingThemeID": "dabc7637-62c1-4941-8a6e-ee44fa5090e7",
                      "Name": "Standard"
                    },
                    "PurchasesDefaultAccountCode": "660",
                    "SalesDefaultAccountCode": "002",
                    "BatchPayments": {
                      "BankAccountNumber": "12334567",
                      "BankAccountName": "Citi Bank",
                      "Details": "biz checking",
                      "Code": "",
                      "Reference": ""
                    },
                    "Balances": {
                      "AccountsReceivable": {
                        "Outstanding": 118.9,
                        "Overdue": 136.9
                      },
                      "AccountsPayable": {
                        "Outstanding": -43.6,
                        "Overdue": 40.0
                      }
                    },
                    "PaymentTerms": {
                      "Bills": {
                        "Day": 12,
                        "Type": "OFFOLLOWINGMONTH"
                      },
                      "Sales": {
                        "Day": 14,
                        "Type": "OFCURRENTMONTH"
                      }
                    },
                    "ContactPersons": [
                      {
                        "FirstName": "Sue",
                        "LastName": "Johnson",
                        "EmailAddress": "sue.johnson@krave.com",
                        "IncludeInEmails": true
                      }
                    ],
                    "HasAttachments": true,
                    "Attachments": [
                      {
                        "AttachmentID": "04e0a3e3-b116-456a-9f32-9706f0d33afa",
                        "FileName": "sample5.jpg",
                        "Url": "https://api.xero.com/api.xro/2.0/contact/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg",
                        "MimeType": "image/jpg",
                        "ContentLength": 2878711
                      }
                    ],
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts",
              "accounting.contacts.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific contact in a Xero organisation",
        "summary": "updateContact",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateContact",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "an array of Contacts containing single Contact object with properties to update",
            "schema": {
              "$ref": "#/definitions/Contacts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array with an updated Contact",
            "schema": {
              "$ref": "#/definitions/Contacts"
            },
            "examples": {
              "application/json": {
                "Id": "4166b727-c3f0-4881-acd0-d4f7c0e8fcda",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551400031795)/",
                "Contacts": [
                  {
                    "ContactID": "d5be01fb-b09f-4c3a-9c67-e10c2a03412c",
                    "ContactStatus": "ACTIVE",
                    "Name": "FooBar",
                    "EmailAddress": "sid30680@blah.com",
                    "BankAccountDetails": "",
                    "Addresses": [
                      {
                        "AddressType": "STREET",
                        "City": "",
                        "Region": "",
                        "PostalCode": "",
                        "Country": ""
                      },
                      {
                        "AddressType": "POBOX",
                        "City": "",
                        "Region": "",
                        "PostalCode": "",
                        "Country": ""
                      }
                    ],
                    "Phones": [
                      {
                        "PhoneType": "DEFAULT",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "DDI",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "FAX",
                        "PhoneNumber": "",
                        "PhoneAreaCode": "",
                        "PhoneCountryCode": ""
                      },
                      {
                        "PhoneType": "MOBILE",
                        "PhoneNumber": "555-1212",
                        "PhoneAreaCode": "415",
                        "PhoneCountryCode": ""
                      }
                    ],
                    "UpdatedDateUTC": "/Date(1551400031763+0000)/",
                    "ContactGroups": [],
                    "IsSupplier": false,
                    "IsCustomer": false,
                    "SalesDefaultLineAmountType": "INCLUSIVE",
                    "PurchasesDefaultLineAmountType": "INCLUSIVE",
                    "SalesTrackingCategories": [],
                    "PurchasesTrackingCategories": [],
                    "PaymentTerms": {
                      "Bills": {
                        "Day": 15,
                        "Type": "OFCURRENTMONTH"
                      },
                      "Sales": {
                        "Day": 10,
                        "Type": "DAYSAFTERBILLMONTH"
                      }
                    },
                    "ContactPersons": [],
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ]
      }
    },
    "/Contacts/{ContactID}/Attachments": {
      "get": {
        "description": "Retrieves attachments for a specific contact in a Xero organisation",
        "summary": "getContactAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactAttachments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with 0 to N Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "0f63b631-a205-496d-b1d2-e6b13a9b497b",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551483890413)/",
                "Attachments": [
                  {
                    "AttachmentID": "04e0a3e3-b116-456a-9f32-9706f0d33afa",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Contacts/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/Contacts/{ContactID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific contact using a unique attachment Id",
        "summary": "getContactAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Attachment object"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Contact as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/Contacts/{ContactID}/Attachments/{FileName}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific contact by file name",
        "summary": "getContactAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Contact as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "post": {
        "description": "",
        "summary": "updateContactAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateContactAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with an updated Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "8543ae1a-297c-49b8-bf91-47decac452d5",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551485146555)/",
                "Attachments": [
                  {
                    "AttachmentID": "8b537c1b-bbb5-47fd-857e-370c369dda7c",
                    "FileName": "HelloWorld.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Contacts/8138a266-fb42-49b2-a104-014b7045753d/Attachments/HelloWorld.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      },
      "put": {
        "description": "",
        "summary": "createContactAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createContactAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with an newly created Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "a5eddf71-86aa-42f5-99e2-0aaf9caf96b6",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551484292734)/",
                "Attachments": [
                  {
                    "AttachmentID": "27e37b01-6996-4ebe-836c-95fd472ad674",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Contacts/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      }
    },
    "/Contacts/{ContactID}/CISSettings": {
      "get": {
        "description": "Retrieves CIS settings for a specific contact in a Xero organisation",
        "summary": "getContactCISSettings",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactCISSettings",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type CISSettings for a specific Contact",
            "schema": {
              "$ref": "#/definitions/CISSettings"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      }
    },
    "/Contacts/{ContactID}/History": {
      "get": {
        "description": "Retrieves history records for a specific contact",
        "summary": "getContactHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts",
              "accounting.contacts.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a new history record for a specific contact",
        "summary": "createContactHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createContactHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ]
      }
    },
    "/ContactGroups": {
      "get": {
        "description": "Retrieves the contact Id and name of each contact group",
        "summary": "getContactGroups",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactGroups",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contact Groups array of Contact Group",
            "schema": {
              "$ref": "#/definitions/ContactGroups"
            },
            "examples": {
              "application/json": {
                "Id": "b825df86-1a72-49c9-97dd-36afc7d04bd5",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551746015603)/",
                "ContactGroups": [
                  {
                    "ContactGroupID": "d7a86b80-8dac-4d89-a334-9dcf5753676c",
                    "Name": "Suppliers",
                    "Status": "ACTIVE",
                    "Contacts": [],
                    "HasValidationErrors": false
                  },
                  {
                    "ContactGroupID": "ab089fd4-012f-4043-a6e4-e7be01e87e50",
                    "Name": "Old Group84262",
                    "Status": "ACTIVE",
                    "Contacts": [],
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts",
              "accounting.contacts.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a contact group",
        "summary": "createContactGroup",
        "tags": [
          "Accounting"
        ],
        "operationId": "createContactGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "ContactGroups with an array of names in request body",
            "schema": {
              "$ref": "#/definitions/ContactGroups"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contact Groups array of newly created Contact Group",
            "schema": {
              "$ref": "#/definitions/ContactGroups"
            },
            "examples": {
              "application/json": {
                "Id": "5afe53f9-2271-45b8-9767-88d023b71d34",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551745740920)/",
                "ContactGroups": [
                  {
                    "ContactGroupID": "d7a86b80-8dac-4d89-a334-9dcf5753676c",
                    "Name": "Suppliers",
                    "Status": "ACTIVE",
                    "Contacts": [],
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "ErrorNumber": 10,
                "Type": "ValidationException",
                "Message": "A validation exception occurred",
                "Elements": [
                  {
                    "ContactGroupID": "00000000-0000-0000-0000-000000000000",
                    "Name": "Suppliers",
                    "Contacts": [],
                    "HasValidationErrors": true,
                    "ValidationErrors": [
                      {
                        "Message": "You’ve reached the limit of 100 contact groups."
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ]
      }
    },
    "/ContactGroups/{ContactGroupID}": {
      "get": {
        "description": "Retrieves a specific contact group by using a unique contact group Id",
        "summary": "getContactGroup",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactGroupID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact Group"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contact Groups array with a specific Contact Group",
            "schema": {
              "$ref": "#/definitions/ContactGroups"
            },
            "examples": {
              "application/json": {
                "Id": "079c14f6-2c2d-464e-a2c7-0edf7e465723",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551746772976)/",
                "ContactGroups": [
                  {
                    "ContactGroupID": "17b44ed7-4389-4162-91cb-3dd5766e4e22",
                    "Name": "Oasis",
                    "Status": "ACTIVE",
                    "Contacts": [
                      {
                        "ContactID": "4e1753b9-018a-4775-b6aa-1bc7871cfee3",
                        "Name": "Noel Gallagher",
                        "Addresses": [],
                        "Phones": [],
                        "ContactGroups": [],
                        "ContactPersons": [],
                        "HasValidationErrors": false
                      },
                      {
                        "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                        "Name": "Liam Gallagher",
                        "Addresses": [],
                        "Phones": [],
                        "ContactGroups": [],
                        "ContactPersons": [],
                        "HasValidationErrors": false
                      }
                    ],
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts",
              "accounting.contacts.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific contact group",
        "summary": "updateContactGroup",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateContactGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactGroupID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact Group"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "an array of Contact groups with Name of specific group to update",
            "schema": {
              "$ref": "#/definitions/ContactGroups"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contact Groups array of updated Contact Group",
            "schema": {
              "$ref": "#/definitions/ContactGroups"
            },
            "examples": {
              "application/json": {
                "Id": "b1ba6cdb-1637-4209-bb92-bd0c593f3243",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551746288544)/",
                "ContactGroups": [
                  {
                    "ContactGroupID": "13f47537-7c1d-4e62-966e-617d76558fc5",
                    "Name": "Supplier Vendor",
                    "Status": "ACTIVE",
                    "Contacts": [],
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ]
      }
    },
    "/ContactGroups/{ContactGroupID}/Contacts": {
      "put": {
        "description": "Creates contacts to a specific contact group",
        "summary": "createContactGroupContacts",
        "tags": [
          "Accounting"
        ],
        "operationId": "createContactGroupContacts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactGroupID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact Group"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Contacts with array of contacts specifying the ContactID to be added to ContactGroup in body of request",
            "schema": {
              "$ref": "#/definitions/Contacts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array of added Contacts",
            "schema": {
              "$ref": "#/definitions/Contacts"
            },
            "examples": {
              "application/json": {
                "Id": "99db8024-6895-45c8-a1b5-54805aa8689c",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551747495785)/",
                "Contacts": [
                  {
                    "ContactID": "a3675fc4-f8dd-4f03-ba5b-f1870566bcd7",
                    "Addresses": [],
                    "Phones": [],
                    "ContactGroups": [],
                    "ContactPersons": [],
                    "HasValidationErrors": false,
                    "ValidationErrors": []
                  },
                  {
                    "ContactID": "4e1753b9-018a-4775-b6aa-1bc7871cfee3",
                    "Addresses": [],
                    "Phones": [],
                    "ContactGroups": [],
                    "ContactPersons": [],
                    "HasValidationErrors": false,
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ]
      },
      "delete": {
        "description": "Deletes all contacts from a specific contact group",
        "summary": "deleteContactGroupContacts",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteContactGroupContacts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactGroupID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact Group"
          }
        ],
        "responses": {
          "204": {
            "description": "Success - return response 204 no content",
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ]
      }
    },
    "/ContactGroups/{ContactGroupID}/Contacts/{ContactID}": {
      "delete": {
        "description": "Deletes a specific contact from a contact group using a unique contact Id",
        "summary": "deleteContactGroupContact",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteContactGroupContact",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ContactGroupID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact Group"
          },
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          }
        ],
        "responses": {
          "204": {
            "description": "Success - return response 204 no content",
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ]
      }
    },
    "/CreditNotes": {
      "get": {
        "description": "Retrieves any credit notes",
        "summary": "getCreditNotes",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNotes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 – Up to 100 credit notes will be returned in a single API call with line items shown for each credit note"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Credit Notes array of CreditNote",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            },
            "examples": {
              "application/json": {
                "Id": "306379b0-3d75-4c77-953a-be08fa0efae8",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551812506620)/",
                "CreditNotes": [
                  {
                    "CreditNoteID": "249f15fa-f2a7-4acc-8769-0984103f2225",
                    "CreditNoteNumber": "CN-0005",
                    "Payments": [
                      {
                        "PaymentID": "6b037c9b-2e5d-4905-84d3-eabfb3438242",
                        "Date": "/Date(1552521600000+0000)/",
                        "Amount": 2.0,
                        "Reference": "Too much",
                        "CurrencyRate": 1.0,
                        "HasAccount": false,
                        "HasValidationErrors": false
                      }
                    ],
                    "ID": "249f15fa-f2a7-4acc-8769-0984103f2225",
                    "CurrencyRate": 1.0,
                    "Type": "ACCRECCREDIT",
                    "Reference": "US Tour",
                    "RemainingCredit": 32.5,
                    "Allocations": [],
                    "HasAttachments": true,
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "Name": "Liam Gallagher",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-05T00:00:00",
                    "Date": "/Date(1551744000000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [],
                    "SubTotal": 30.0,
                    "TotalTax": 4.5,
                    "Total": 34.5,
                    "UpdatedDateUTC": "/Date(1551812346157+0000)/",
                    "CurrencyCode": "NZD"
                  },
                  {
                    "CreditNoteID": "f8021bd2-9a6a-4c19-8477-163da0b9290f",
                    "CreditNoteNumber": "",
                    "Payments": [],
                    "ID": "f8021bd2-9a6a-4c19-8477-163da0b9290f",
                    "CurrencyRate": 1.0,
                    "Type": "ACCPAYCREDIT",
                    "Reference": "",
                    "RemainingCredit": 46.0,
                    "Allocations": [],
                    "HasAttachments": false,
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "Name": "Liam Gallagher",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-01-05T00:00:00",
                    "Date": "/Date(1546646400000+0000)/",
                    "Status": "DRAFT",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [],
                    "SubTotal": 40.0,
                    "TotalTax": 6.0,
                    "Total": 46.0,
                    "UpdatedDateUTC": "/Date(1551812506153+0000)/",
                    "CurrencyCode": "NZD"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a new credit note",
        "summary": "createCreditNotes",
        "tags": [
          "Accounting"
        ],
        "operationId": "createCreditNotes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Credit Notes with array of CreditNote object in body of request",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Credit Notes array of newly created CreditNote",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            },
            "examples": {
              "application/json": {
                "Id": "5e57a661-42da-4a19-96a0-00405a0e946d",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551812702713)/",
                "CreditNotes": [
                  {
                    "CreditNoteID": "f9256f04-5a99-4680-acb9-6b4639cc439a",
                    "CreditNoteNumber": "",
                    "Payments": [],
                    "ID": "f9256f04-5a99-4680-acb9-6b4639cc439a",
                    "CurrencyRate": 1.0,
                    "Type": "ACCPAYCREDIT",
                    "Reference": "",
                    "RemainingCredit": 46.0,
                    "Allocations": [],
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "EmailAddress": "liam@rockstar.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": "",
                          "AttentionTo": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1551747281053+0000)/",
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-01-05T00:00:00",
                    "Date": "/Date(1546646400000+0000)/",
                    "Status": "DRAFT",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "TaxType": "INPUT2",
                        "TaxAmount": 6.0,
                        "LineAmount": 40.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "Quantity": 2.0,
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 40.0,
                    "TotalTax": 6.0,
                    "Total": 46.0,
                    "UpdatedDateUTC": "/Date(1551812702650+0000)/",
                    "CurrencyCode": "NZD",
                    "StatusAttributeString": "OK",
                    "ValidationErrors": [
                      {
                        "Message": "An existing Credit Note with the specified CreditNoteID could not be found"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates or creates one or more credit notes",
        "summary": "updateOrCreateCreditNotes",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateOrCreateCreditNotes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "an array of Credit Notes with a single CreditNote object.",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Credit Notes array of newly created CreditNote",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            },
            "examples": {
              "application/json": {
                "Id": "5e57a661-42da-4a19-96a0-00405a0e946d",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551812702713)/",
                "CreditNotes": [
                  {
                    "CreditNoteID": "f9256f04-5a99-4680-acb9-6b4639cc439a",
                    "CreditNoteNumber": "",
                    "Payments": [],
                    "ID": "f9256f04-5a99-4680-acb9-6b4639cc439a",
                    "CurrencyRate": 1.0,
                    "Type": "ACCPAYCREDIT",
                    "Reference": "",
                    "RemainingCredit": 46.0,
                    "Allocations": [],
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "EmailAddress": "liam@rockstar.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": "",
                          "AttentionTo": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1551747281053+0000)/",
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-01-05T00:00:00",
                    "Date": "/Date(1546646400000+0000)/",
                    "Status": "DRAFT",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "TaxType": "INPUT2",
                        "TaxAmount": 6.0,
                        "LineAmount": 40.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "Quantity": 2.0,
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 40.0,
                    "TotalTax": 6.0,
                    "Total": 46.0,
                    "UpdatedDateUTC": "/Date(1551812702650+0000)/",
                    "CurrencyCode": "NZD",
                    "StatusAttributeString": "OK",
                    "ValidationErrors": [
                      {
                        "Message": "An existing Credit Note with the specified CreditNoteID could not be found"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/CreditNotes/{CreditNoteID}": {
      "get": {
        "description": "Retrieves a specific credit note using a unique credit note Id",
        "summary": "getCreditNote",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNote",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Credit Note"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Credit Notes array with a unique CreditNote",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            },
            "examples": {
              "application/json": {
                "Id": "dd5c5da7-08ab-486a-ac34-aea295f1614b",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551812703811)/",
                "CreditNotes": [
                  {
                    "CreditNoteID": "249f15fa-f2a7-4acc-8769-0984103f2225",
                    "CreditNoteNumber": "CN-0005",
                    "Payments": [
                      {
                        "PaymentID": "6b037c9b-2e5d-4905-84d3-eabfb3438242",
                        "Date": "/Date(1552521600000+0000)/",
                        "Amount": 2.0,
                        "Reference": "Too much",
                        "CurrencyRate": 1.0,
                        "HasAccount": false,
                        "HasValidationErrors": false
                      }
                    ],
                    "ID": "249f15fa-f2a7-4acc-8769-0984103f2225",
                    "CurrencyRate": 1.0,
                    "Type": "ACCRECCREDIT",
                    "Reference": "US Tour",
                    "RemainingCredit": 32.5,
                    "Allocations": [],
                    "HasAttachments": true,
                    "Attachments": [
                      {
                        "AttachmentID": "9b9c9b62-069e-4f5a-a172-183195f084bb",
                        "FileName": "Screen Shot 2019-03-04 at 9.00.06 AM.png",
                        "Url": "https://api.xero.com/api.xro/2.0/creditnotes/249f15fa-f2a7-4acc-8769-0984103f2225/Attachments/Screen%20Shot%202019-03-04%20at%209.00.06%20AM.png",
                        "MimeType": "image/png",
                        "ContentLength": 82334
                      }
                    ],
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "EmailAddress": "liam@rockstar.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": "",
                          "AttentionTo": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1551747281053+0000)/",
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-05T00:00:00",
                    "Date": "/Date(1551744000000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "Mic Stand",
                        "UnitAmount": 30.0,
                        "TaxType": "OUTPUT2",
                        "TaxAmount": 4.5,
                        "LineAmount": 30.0,
                        "AccountCode": "200",
                        "Tracking": [],
                        "Quantity": 1.0,
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 30.0,
                    "TotalTax": 4.5,
                    "Total": 34.5,
                    "UpdatedDateUTC": "/Date(1551812346157+0000)/",
                    "CurrencyCode": "NZD"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific credit note",
        "summary": "updateCreditNote",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateCreditNote",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Credit Note"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "an array of Credit Notes containing credit note details to update",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Credit Notes array with updated CreditNote",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            },
            "examples": {
              "application/json": {
                "Id": "db2f7659-6044-418d-a4c6-d4b93eba4e1e",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551812704253)/",
                "CreditNotes": [
                  {
                    "CreditNoteID": "f9256f04-5a99-4680-acb9-6b4639cc439a",
                    "CreditNoteNumber": "",
                    "Payments": [],
                    "ID": "f9256f04-5a99-4680-acb9-6b4639cc439a",
                    "CurrencyRate": 1.0,
                    "Type": "ACCPAYCREDIT",
                    "Reference": "HelloWorld",
                    "RemainingCredit": 46.0,
                    "Allocations": [],
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "EmailAddress": "liam@rockstar.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": "",
                          "AttentionTo": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1551747281053+0000)/",
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-01-05T00:00:00",
                    "Date": "/Date(1546646400000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "TaxType": "INPUT2",
                        "TaxAmount": 6.0,
                        "LineAmount": 40.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "Quantity": 2.0,
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 40.0,
                    "TotalTax": 6.0,
                    "Total": 46.0,
                    "UpdatedDateUTC": "/Date(1551812704223+0000)/",
                    "CurrencyCode": "NZD"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/CreditNotes/{CreditNoteID}/Attachments": {
      "get": {
        "description": "Retrieves attachments for a specific credit notes",
        "summary": "getCreditNoteAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNoteAttachments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Credit Note"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with all Attachment for specific Credit Note",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "2bb15054-3868-4f85-a9c6-0402ec8c1201",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551822670731)/",
                "Attachments": [
                  {
                    "AttachmentID": "b7eb1fc9-a0f9-4e8e-9373-6689f5350832",
                    "FileName": "HelloWorld.png",
                    "Url": "https://api.xero.com/api.xro/2.0/CreditNotes/249f15fa-f2a7-4acc-8769-0984103f2225/Attachments/HelloWorld.png",
                    "MimeType": "image/png",
                    "ContentLength": 76091
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/CreditNotes/{CreditNoteID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific credit note using a unique attachment Id",
        "summary": "getCreditNoteAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNoteAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Credit Note"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Attachment object"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Credit Note as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/CreditNotes/{CreditNoteID}/Attachments/{FileName}": {
      "get": {
        "description": "Retrieves a specific attachment on a specific credit note by file name",
        "summary": "getCreditNoteAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNoteAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Credit Note"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Credit Note as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates attachments on a specific credit note by file name",
        "summary": "updateCreditNoteAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateCreditNoteAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Credit Note"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with updated Attachment for specific Credit Note",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "27253066-8c4d-4e34-a251-7a749b72de40",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551828247939)/",
                "Attachments": [
                  {
                    "AttachmentID": "103e49f1-e47c-4b4d-b5e8-77d9d00fa70a",
                    "FileName": "HelloWorld.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/CreditNotes/249f15fa-f2a7-4acc-8769-0984103f2225/Attachments/HelloWorld.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates an attachment for a specific credit note",
        "summary": "createCreditNoteAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createCreditNoteAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Credit Note"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "IncludeOnline",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "Allows an attachment to be seen by the end customer within their online invoice"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with newly created Attachment for specific Credit Note",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "22a8d402-5dea-40ed-9d01-26896429f649",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551822953320)/",
                "Attachments": [
                  {
                    "AttachmentID": "91bbae3f-5de5-4e3d-875f-8662f25897bd",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/CreditNotes/249f15fa-f2a7-4acc-8769-0984103f2225/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      }
    },
    "/CreditNotes/{CreditNoteID}/pdf": {
      "get": {
        "description": "Retrieves credit notes as PDF files",
        "summary": "getCreditNoteAsPdf",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNoteAsPdf",
        "deprecated": false,
        "produces": [
          "application/pdf"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Credit Note"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of binary data from the Attachment to a Credit Note",
            "schema": {
              "default": ""
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/CreditNotes/{CreditNoteID}/Allocations": {
      "put": {
        "description": "Creates allocation for a specific credit note",
        "summary": "createCreditNoteAllocation",
        "tags": [
          "Accounting"
        ],
        "operationId": "createCreditNoteAllocation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Credit Note"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Allocations with array of Allocation object in body of request.",
            "schema": {
              "$ref": "#/definitions/Allocations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Allocations array with newly created Allocation for specific Credit Note",
            "schema": {
              "$ref": "#/definitions/Allocations"
            },
            "examples": {
              "application/json": {
                "Id": "73452751-6eaa-4bcb-86f5-4c013316f4cf",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551828543255)/",
                "Allocations": [
                  {
                    "Amount": 1.0,
                    "Date": "/Date(1551744000000+0000)/",
                    "Invoice": {
                      "InvoiceID": "c45720a1-ade3-4a38-a064-d15489be6841",
                      "Payments": [],
                      "CreditNotes": [],
                      "Prepayments": [],
                      "Overpayments": [],
                      "HasErrors": false,
                      "IsDiscounted": false,
                      "LineItems": [],
                      "ValidationErrors": []
                    },
                    "CreditNote": {
                      "CreditNoteID": "7be578f5-63af-45c8-9b00-dcc4732baf0b",
                      "ID": "7be578f5-63af-45c8-9b00-dcc4732baf0b",
                      "LineItems": []
                    },
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/CreditNotes/{CreditNoteID}/History": {
      "get": {
        "description": "Retrieves history records of a specific credit note",
        "summary": "getCreditNoteHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNoteHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Credit Note"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Retrieves history records of a specific credit note",
        "summary": "createCreditNoteHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createCreditNoteHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Credit Note"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Currencies": {
      "get": {
        "description": "Retrieves currencies for your Xero organisation",
        "summary": "getCurrencies",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCurrencies",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Currencies array with all Currencies",
            "schema": {
              "$ref": "#/definitions/Currencies"
            },
            "examples": {
              "application/json": {
                "Id": "e6803fc8-8035-4251-b3e4-39d6b2de0f4a",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552322853043)/",
                "Currencies": [
                  {
                    "Code": "NZD",
                    "Description": "New Zealand Dollar"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Create a new currency for a Xero organisation",
        "summary": "createCurrency",
        "tags": [
          "Accounting"
        ],
        "operationId": "createCurrency",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Currency object in the body of request",
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unsupported - return response incorrect exception, API is not able to create new Currency",
            "schema": {
              "$ref": "#/definitions/Currencies"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/Employees": {
      "get": {
        "description": "Retrieves employees used in Xero payrun",
        "summary": "getEmployees",
        "tags": [
          "Accounting"
        ],
        "operationId": "getEmployees",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Employees array with all Employee",
            "schema": {
              "$ref": "#/definitions/Employees"
            },
            "examples": {
              "application/json": {
                "Id": "593cbccc-5cd2-4cd2-be5e-150f0843709e",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552325082775)/",
                "Employees": [
                  {
                    "EmployeeID": "972615c5-ad3d-47a0-b579-20370d374578",
                    "Status": "ACTIVE",
                    "FirstName": "Tony",
                    "LastName": "Stark",
                    "ExternalLink": {
                      "Url": "http://twitter.com/#!/search/Stark+Industries",
                      "Description": "Go to external link"
                    },
                    "UpdatedDateUTC": "/Date(1552324681593+0000)/"
                  },
                  {
                    "EmployeeID": "ad3db144-6362-459c-8c36-5d31d196e629",
                    "Status": "ACTIVE",
                    "FirstName": "Bruce",
                    "LastName": "Banner",
                    "ExternalLink": {
                      "Url": "http://twitter.com/#!/search/Nick+Fury",
                      "Description": "Go to external link"
                    },
                    "UpdatedDateUTC": "/Date(1552325081303+0000)/"
                  },
                  {
                    "EmployeeID": "e1ada26b-a10e-4065-a941-af34b53740e3",
                    "Status": "ACTIVE",
                    "FirstName": "Nick",
                    "LastName": "Fury",
                    "ExternalLink": {
                      "Url": "http://twitter.com/#!/search/Nick+Fury",
                      "Description": "Go to external link"
                    },
                    "UpdatedDateUTC": "/Date(1552324737990+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates new employees used in Xero payrun",
        "summary": "createEmployees",
        "tags": [
          "Accounting"
        ],
        "operationId": "createEmployees",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Employees with array of Employee object in body of request",
            "schema": {
              "$ref": "#/definitions/Employees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Employees array with new Employee",
            "schema": {
              "$ref": "#/definitions/Employees"
            },
            "examples": {
              "application/json": {
                "Id": "0d6a08e7-6936-4828-a1bc-e4595e0ef778",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552324736508)/",
                "Employees": [
                  {
                    "EmployeeID": "e1ada26b-a10e-4065-a941-af34b53740e3",
                    "Status": "ACTIVE",
                    "FirstName": "Nick",
                    "LastName": "Fury",
                    "ExternalLink": {
                      "Url": "http://twitter.com/#!/search/Nick+Fury",
                      "Description": "Go to external link"
                    },
                    "UpdatedDateUTC": "/Date(1552324736463+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      },
      "post": {
        "description": "Creates a single new employees used in Xero payrun",
        "summary": "updateOrCreateEmployees",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateOrCreateEmployees",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Employees with array of Employee object in body of request",
            "schema": {
              "$ref": "#/definitions/Employees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Employees array with new Employee",
            "schema": {
              "$ref": "#/definitions/Employees"
            },
            "examples": {
              "application/json": {
                "Id": "0d6a08e7-6936-4828-a1bc-e4595e0ef778",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552324736508)/",
                "Employees": [
                  {
                    "EmployeeID": "e1ada26b-a10e-4065-a941-af34b53740e3",
                    "Status": "ACTIVE",
                    "FirstName": "Nick",
                    "LastName": "Fury",
                    "ExternalLink": {
                      "Url": "http://twitter.com/#!/search/Nick+Fury",
                      "Description": "Go to external link"
                    },
                    "UpdatedDateUTC": "/Date(1552324736463+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/Employees/{EmployeeID}": {
      "get": {
        "description": "Retrieves a specific employee used in Xero payrun using a unique employee Id",
        "summary": "getEmployee",
        "tags": [
          "Accounting"
        ],
        "operationId": "getEmployee",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "EmployeeID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Employee"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Employees array with specified Employee",
            "schema": {
              "$ref": "#/definitions/Employees"
            },
            "examples": {
              "application/json": {
                "Id": "417a529e-4f8d-4b1a-8816-7100245cf8b2",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552325084085)/",
                "Employees": [
                  {
                    "EmployeeID": "972615c5-ad3d-47a0-b579-20370d374578",
                    "Status": "ACTIVE",
                    "FirstName": "Tony",
                    "LastName": "Stark",
                    "ExternalLink": {
                      "Url": "http://twitter.com/#!/search/Stark+Industries",
                      "Description": "Go to external link"
                    },
                    "UpdatedDateUTC": "/Date(1552324681593+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      }
    },
    "/ExpenseClaims": {
      "get": {
        "description": "Retrieves expense claims",
        "summary": "getExpenseClaims",
        "tags": [
          "Accounting"
        ],
        "operationId": "getExpenseClaims",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ExpenseClaims array with all ExpenseClaims",
            "schema": {
              "$ref": "#/definitions/ExpenseClaims"
            },
            "examples": {
              "application/json": {
                "Id": "f6a8867e-af29-41ee-8f77-855f5ff214fe",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552325853538)/",
                "ExpenseClaims": [
                  {
                    "ExpenseClaimID": "646b15ab-b874-4e13-82ae-f4385b2ac4b6",
                    "Status": "AUTHORISED",
                    "UpdatedDateUTC": "/Date(1552325851767+0000)/",
                    "User": {
                      "UserID": "d1164823-0ac1-41ad-987b-b4e30fe0b273",
                      "EmailAddress": "api@xero.com",
                      "FirstName": "API ",
                      "LastName": "Team",
                      "UpdatedDateUTC": "/Date(1511957179217+0000)/",
                      "IsSubscriber": true,
                      "OrganisationRole": "FINANCIALADVISER"
                    },
                    "Receipts": [],
                    "Payments": [],
                    "Total": 40.0,
                    "AmountDue": 40.0,
                    "AmountPaid": 0.0,
                    "ReportingDate": "/Date(1552262400000+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates expense claims",
        "summary": "createExpenseClaims",
        "tags": [
          "Accounting"
        ],
        "operationId": "createExpenseClaims",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "ExpenseClaims with array of ExpenseClaim object in body of request",
            "schema": {
              "$ref": "#/definitions/ExpenseClaims"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ExpenseClaims array with newly created ExpenseClaim",
            "schema": {
              "$ref": "#/definitions/ExpenseClaims"
            },
            "examples": {
              "application/json": {
                "Id": "4a0879a6-3860-4b73-adc6-f6a0e0f68fc8",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552325850201)/",
                "ExpenseClaims": [
                  {
                    "ExpenseClaimID": "646b15ab-b874-4e13-82ae-f4385b2ac4b6",
                    "Status": "SUBMITTED",
                    "UpdatedDateUTC": "/Date(1552325850107+0000)/",
                    "User": {
                      "UserID": "d1164823-0ac1-41ad-987b-b4e30fe0b273",
                      "EmailAddress": "api@xero.com",
                      "FirstName": "API ",
                      "LastName": "Team",
                      "UpdatedDateUTC": "/Date(1511957179217+0000)/",
                      "IsSubscriber": true,
                      "OrganisationRole": "FINANCIALADVISER"
                    },
                    "Receipts": [
                      {
                        "ReceiptID": "dc1c7f6d-0a4c-402f-acac-551d62ce5816",
                        "ReceiptNumber": "1",
                        "Status": "SUBMITTED",
                        "User": {
                          "UserID": "d1164823-0ac1-41ad-987b-b4e30fe0b273",
                          "EmailAddress": "api@xero.com",
                          "FirstName": "API ",
                          "LastName": "Team",
                          "UpdatedDateUTC": "/Date(1511957179217+0000)/",
                          "IsSubscriber": true,
                          "OrganisationRole": "FINANCIALADVISER"
                        },
                        "Contact": {
                          "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                          "Name": "Liam Gallagher",
                          "Addresses": [],
                          "Phones": [],
                          "ContactGroups": [],
                          "ContactPersons": [],
                          "HasValidationErrors": false
                        },
                        "Date": "/Date(1552348800000+0000)/",
                        "UpdatedDateUTC": "/Date(1552325848457+0000)/",
                        "Reference": "",
                        "LineAmountTypes": "NoTax",
                        "LineItems": [
                          {
                            "Description": "Foobar",
                            "UnitAmount": 20.0,
                            "TaxType": "NONE",
                            "TaxAmount": 0.0,
                            "LineAmount": 40.0,
                            "Tracking": [],
                            "Quantity": 2.0
                          }
                        ],
                        "SubTotal": 40.0,
                        "TotalTax": 0.0,
                        "Total": 40.0,
                        "ID": "dc1c7f6d-0a4c-402f-acac-551d62ce5816",
                        "HasAttachments": false
                      }
                    ],
                    "Payments": [],
                    "Total": 40.0,
                    "AmountDue": 40.0,
                    "AmountPaid": 0.0,
                    "StatusAttributeString": "OK"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/ExpenseClaims/{ExpenseClaimID}": {
      "get": {
        "description": "Retrieves a specific expense claim using a unique expense claim Id",
        "summary": "getExpenseClaim",
        "tags": [
          "Accounting"
        ],
        "operationId": "getExpenseClaim",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ExpenseClaimID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ExpenseClaim"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ExpenseClaims array with specified ExpenseClaim",
            "schema": {
              "$ref": "#/definitions/ExpenseClaims"
            },
            "examples": {
              "application/json": {
                "Id": "b54bb45d-37da-4f53-9f1d-536302d6bad7",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552325854864)/",
                "ExpenseClaims": [
                  {
                    "ExpenseClaimID": "646b15ab-b874-4e13-82ae-f4385b2ac4b6",
                    "Status": "AUTHORISED",
                    "UpdatedDateUTC": "/Date(1552325851767+0000)/",
                    "User": {
                      "UserID": "d1164823-0ac1-41ad-987b-b4e30fe0b273",
                      "EmailAddress": "api@xero.com",
                      "FirstName": "API ",
                      "LastName": "Team",
                      "UpdatedDateUTC": "/Date(1511957179217+0000)/",
                      "IsSubscriber": true,
                      "OrganisationRole": "FINANCIALADVISER"
                    },
                    "Receipts": [
                      {
                        "ReceiptID": "dc1c7f6d-0a4c-402f-acac-551d62ce5816",
                        "ReceiptNumber": "1",
                        "Status": "AUTHORISED",
                        "User": {
                          "UserID": "d1164823-0ac1-41ad-987b-b4e30fe0b273",
                          "EmailAddress": "api@xero.com",
                          "FirstName": "API ",
                          "LastName": "Team",
                          "UpdatedDateUTC": "/Date(1511957179217+0000)/",
                          "IsSubscriber": true,
                          "OrganisationRole": "FINANCIALADVISER"
                        },
                        "Contact": {
                          "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                          "Name": "Liam Gallagher",
                          "Addresses": [],
                          "Phones": [],
                          "ContactGroups": [],
                          "ContactPersons": [],
                          "HasValidationErrors": false
                        },
                        "Date": "/Date(1552348800000+0000)/",
                        "UpdatedDateUTC": "/Date(1552325848457+0000)/",
                        "Reference": "",
                        "LineAmountTypes": "NoTax",
                        "LineItems": [
                          {
                            "Description": "Foobar",
                            "UnitAmount": 20.0,
                            "TaxType": "NONE",
                            "TaxAmount": 0.0,
                            "LineAmount": 40.0,
                            "AccountCode": "400",
                            "Tracking": [],
                            "Quantity": 2.0
                          }
                        ],
                        "SubTotal": 40.0,
                        "TotalTax": 0.0,
                        "Total": 40.0,
                        "ID": "dc1c7f6d-0a4c-402f-acac-551d62ce5816",
                        "HasAttachments": false
                      }
                    ],
                    "Payments": [],
                    "Total": 40.0,
                    "AmountDue": 40.0,
                    "AmountPaid": 0.0,
                    "ReportingDate": "/Date(1552262400000+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific expense claims",
        "summary": "updateExpenseClaim",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateExpenseClaim",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ExpenseClaimID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ExpenseClaim"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpenseClaims"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ExpenseClaims array with updated ExpenseClaim",
            "schema": {
              "$ref": "#/definitions/ExpenseClaims"
            },
            "examples": {
              "application/json": {
                "Id": "8ee87f9c-058b-4f1b-b5b2-29569bf055d7",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552325851907)/",
                "ExpenseClaims": [
                  {
                    "ExpenseClaimID": "646b15ab-b874-4e13-82ae-f4385b2ac4b6",
                    "Status": "AUTHORISED",
                    "UpdatedDateUTC": "/Date(1552325851767+0000)/",
                    "User": {
                      "UserID": "d1164823-0ac1-41ad-987b-b4e30fe0b273",
                      "EmailAddress": "api@xero.com",
                      "FirstName": "API ",
                      "LastName": "Team",
                      "UpdatedDateUTC": "/Date(1511957179217+0000)/",
                      "IsSubscriber": true,
                      "OrganisationRole": "FINANCIALADVISER"
                    },
                    "Receipts": [
                      {
                        "ReceiptID": "dc1c7f6d-0a4c-402f-acac-551d62ce5816",
                        "ReceiptNumber": "1",
                        "Status": "AUTHORISED",
                        "User": {
                          "UserID": "d1164823-0ac1-41ad-987b-b4e30fe0b273",
                          "EmailAddress": "api@xero.com",
                          "FirstName": "API ",
                          "LastName": "Team",
                          "UpdatedDateUTC": "/Date(1511957179217+0000)/",
                          "IsSubscriber": true,
                          "OrganisationRole": "FINANCIALADVISER"
                        },
                        "Contact": {
                          "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                          "Name": "Liam Gallagher",
                          "Addresses": [],
                          "Phones": [],
                          "ContactGroups": [],
                          "ContactPersons": [],
                          "HasValidationErrors": false
                        },
                        "Date": "/Date(1552348800000+0000)/",
                        "UpdatedDateUTC": "/Date(1552325848457+0000)/",
                        "Reference": "",
                        "LineAmountTypes": "NoTax",
                        "LineItems": [
                          {
                            "Description": "Foobar",
                            "UnitAmount": 20.0,
                            "TaxType": "NONE",
                            "TaxAmount": 0.0,
                            "LineAmount": 40.0,
                            "AccountCode": "400",
                            "Tracking": [],
                            "Quantity": 2.0
                          }
                        ],
                        "SubTotal": 40.0,
                        "TotalTax": 0.0,
                        "Total": 40.0,
                        "ID": "dc1c7f6d-0a4c-402f-acac-551d62ce5816",
                        "HasAttachments": false
                      }
                    ],
                    "Payments": [],
                    "Total": 40.0,
                    "AmountDue": 40.0,
                    "AmountPaid": 0.0,
                    "ReportingDate": "/Date(1552262400000+0000)/"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/ExpenseClaims/{ExpenseClaimID}/History": {
      "get": {
        "description": "Retrieves history records of a specific expense claim",
        "summary": "getExpenseClaimHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getExpenseClaimHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ExpenseClaimID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ExpenseClaim"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific expense claim",
        "summary": "createExpenseClaimHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createExpenseClaimHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ExpenseClaimID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ExpenseClaim"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Invoices": {
      "get": {
        "description": "Retrieves sales invoices or purchase bills",
        "summary": "getInvoices",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoices",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "IDs",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by a comma-separated list of InvoicesIDs."
          },
          {
            "name": "InvoiceNumbers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by a comma-separated list of InvoiceNumbers."
          },
          {
            "name": "ContactIDs",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by a comma-separated list of ContactIDs."
          },
          {
            "name": "Statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by a comma-separated list Statuses. For faster response times we recommend using these explicit parameters instead of passing OR conditions into the Where filter."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 – Up to 100 invoices will be returned in a single API call with line items shown for each invoice"
          },
          {
            "name": "includeArchived",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "e.g. includeArchived=true - Invoices with a status of ARCHIVED will be included in the response"
          },
          {
            "name": "createdByMyApp",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When set to true you'll only retrieve Invoices created by your app"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "summaryOnly",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "Use summaryOnly=true in GET Contacts and Invoices endpoint to retrieve a smaller version of the response object. This returns only lightweight fields, excluding computation-heavy fields from the response, making the API calls quick and efficient."
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Invoices array with all Invoices",
            "schema": {
              "$ref": "#/definitions/Invoices"
            },
            "examples": {
              "application/json": {
                "Id": "900c500b-e83c-4ce2-902a-b8ba04751748",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552326816230)/",
                "Invoices": [
                  {
                    "Type": "ACCREC",
                    "InvoiceID": "d4956132-ed94-4dd7-9eaa-aa22dfdf06f2",
                    "InvoiceNumber": "INV-0001",
                    "Reference": "Red Fish, Blue Fish",
                    "Payments": [],
                    "CreditNotes": [],
                    "Prepayments": [],
                    "Overpayments": [],
                    "AmountDue": 0.0,
                    "AmountPaid": 0.0,
                    "AmountCredited": 0.0,
                    "SentToContact": true,
                    "CurrencyRate": 1.0,
                    "HasErrors": false,
                    "IsDiscounted": false,
                    "HasAttachments": false,
                    "RepeatingInvoiceID": "428c0d75-909f-4b04-8403-a48dc27283b0",
                    "Contact": {
                      "ContactID": "a3675fc4-f8dd-4f03-ba5b-f1870566bcd7",
                      "Name": "Barney Rubble-83203",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2018-10-20T00:00:00",
                    "Date": "/Date(1539993600000+0000)/",
                    "DueDateString": "2018-12-30T00:00:00",
                    "DueDate": "/Date(1546128000000+0000)/",
                    "Status": "VOIDED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [],
                    "SubTotal": 40.0,
                    "TotalTax": 0.0,
                    "Total": 40.0,
                    "UpdatedDateUTC": "/Date(1541176290160+0000)/",
                    "CurrencyCode": "NZD"
                  },
                  {
                    "Type": "ACCREC",
                    "InvoiceID": "046d8a6d-1ae1-4b4d-9340-5601bdf41b87",
                    "InvoiceNumber": "INV-0002",
                    "Reference": "Red Fish, Blue Fish",
                    "Payments": [
                      {
                        "PaymentID": "99ea7f6b-c513-4066-bc27-b7c65dcd76c2",
                        "Date": "/Date(1543449600000+0000)/",
                        "Amount": 46.0,
                        "CurrencyRate": 1.0,
                        "HasAccount": false,
                        "HasValidationErrors": false
                      }
                    ],
                    "CreditNotes": [],
                    "Prepayments": [],
                    "Overpayments": [],
                    "AmountDue": 0.0,
                    "AmountPaid": 46.0,
                    "AmountCredited": 0.0,
                    "SentToContact": true,
                    "CurrencyRate": 1.0,
                    "HasErrors": false,
                    "IsDiscounted": false,
                    "HasAttachments": false,
                    "Contact": {
                      "ContactID": "a3675fc4-f8dd-4f03-ba5b-f1870566bcd7",
                      "Name": "Barney Rubble-83203",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2018-10-20T00:00:00",
                    "Date": "/Date(1539993600000+0000)/",
                    "DueDateString": "2018-12-30T00:00:00",
                    "DueDate": "/Date(1546128000000+0000)/",
                    "Status": "PAID",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [],
                    "SubTotal": 40.0,
                    "TotalTax": 6.0,
                    "Total": 46.0,
                    "UpdatedDateUTC": "/Date(1541176592690+0000)/",
                    "CurrencyCode": "NZD",
                    "FullyPaidOnDate": "/Date(1543449600000+0000)/"
                  },
                  {
                    "Type": "ACCREC",
                    "InvoiceID": "7ef31b20-de17-4312-8382-412f869b1510",
                    "InvoiceNumber": "INV-0003",
                    "Reference": "",
                    "Payments": [],
                    "CreditNotes": [],
                    "Prepayments": [],
                    "Overpayments": [],
                    "AmountDue": 115.0,
                    "AmountPaid": 0.0,
                    "AmountCredited": 0.0,
                    "CurrencyRate": 1.0,
                    "HasErrors": false,
                    "IsDiscounted": false,
                    "HasAttachments": false,
                    "Contact": {
                      "ContactID": "a3675fc4-f8dd-4f03-ba5b-f1870566bcd7",
                      "Name": "Barney Rubble-83203",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2018-11-02T00:00:00",
                    "Date": "/Date(1541116800000+0000)/",
                    "DueDateString": "2018-11-07T00:00:00",
                    "DueDate": "/Date(1541548800000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [],
                    "SubTotal": 100.0,
                    "TotalTax": 15.0,
                    "Total": 115.0,
                    "UpdatedDateUTC": "/Date(1541176648927+0000)/",
                    "CurrencyCode": "NZD"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates one or more sales invoices or purchase bills",
        "summary": "createInvoices",
        "tags": [
          "Accounting"
        ],
        "operationId": "createInvoices",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Invoices with an array of invoice objects in body of request",
            "schema": {
              "$ref": "#/definitions/Invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Invoices array with newly created Invoice",
            "schema": {
              "$ref": "#/definitions/Invoices"
            },
            "examples": {
              "application/json": {
                "Id": "ccece84a-075c-4fcd-9073-149d4f7a91cf",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552327126164)/",
                "Invoices": [
                  {
                    "Type": "ACCREC",
                    "InvoiceID": "ed255415-e141-4150-aab7-89c3bbbb851c",
                    "InvoiceNumber": "INV-0007",
                    "Reference": "Website Design",
                    "Prepayments": [],
                    "Overpayments": [],
                    "AmountDue": 40.0,
                    "AmountPaid": 0.0,
                    "SentToContact": false,
                    "CurrencyRate": 1.0,
                    "HasErrors": false,
                    "IsDiscounted": false,
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "EmailAddress": "liam@rockstar.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": "",
                          "AttentionTo": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1551747281053+0000)/",
                      "ContactGroups": [
                        {
                          "ContactGroupID": "17b44ed7-4389-4162-91cb-3dd5766e4e22",
                          "Name": "Oasis",
                          "Status": "ACTIVE",
                          "Contacts": [],
                          "HasValidationErrors": false
                        }
                      ],
                      "IsSupplier": true,
                      "IsCustomer": true,
                      "SalesTrackingCategories": [],
                      "PurchasesTrackingCategories": [],
                      "ContactPersons": [
                        {
                          "FirstName": "Debbie",
                          "LastName": "Gwyther",
                          "EmailAddress": "debbie@rockstar.com",
                          "IncludeInEmails": false
                        }
                      ],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-11T00:00:00",
                    "Date": "/Date(1552262400000+0000)/",
                    "DueDateString": "2018-12-10T00:00:00",
                    "DueDate": "/Date(1544400000000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "Acme Tires",
                        "UnitAmount": 20.0,
                        "TaxType": "NONE",
                        "TaxAmount": 0.0,
                        "LineAmount": 40.0,
                        "AccountCode": "200",
                        "Tracking": [],
                        "Quantity": 2.0,
                        "LineItemID": "5f7a612b-fdcc-4d33-90fa-a9f6bc6db32f",
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 40.0,
                    "TotalTax": 0.0,
                    "Total": 40.0,
                    "UpdatedDateUTC": "/Date(1552327126117+0000)/",
                    "CurrencyCode": "NZD",
                    "StatusAttributeString": "OK"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates or creates one or more sales invoices or purchase bills",
        "summary": "updateOrCreateInvoices",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateOrCreateInvoices",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Invoices array with newly created Invoice",
            "schema": {
              "$ref": "#/definitions/Invoices"
            },
            "examples": {
              "application/json": {
                "Id": "ccece84a-075c-4fcd-9073-149d4f7a91cf",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552327126164)/",
                "Invoices": [
                  {
                    "Type": "ACCREC",
                    "InvoiceID": "ed255415-e141-4150-aab7-89c3bbbb851c",
                    "InvoiceNumber": "INV-0007",
                    "Reference": "Website Design",
                    "Prepayments": [],
                    "Overpayments": [],
                    "AmountDue": 40.0,
                    "AmountPaid": 0.0,
                    "SentToContact": false,
                    "CurrencyRate": 1.0,
                    "HasErrors": false,
                    "IsDiscounted": false,
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "EmailAddress": "liam@rockstar.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": "",
                          "AttentionTo": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1551747281053+0000)/",
                      "ContactGroups": [
                        {
                          "ContactGroupID": "17b44ed7-4389-4162-91cb-3dd5766e4e22",
                          "Name": "Oasis",
                          "Status": "ACTIVE",
                          "Contacts": [],
                          "HasValidationErrors": false
                        }
                      ],
                      "IsSupplier": true,
                      "IsCustomer": true,
                      "SalesTrackingCategories": [],
                      "PurchasesTrackingCategories": [],
                      "ContactPersons": [
                        {
                          "FirstName": "Debbie",
                          "LastName": "Gwyther",
                          "EmailAddress": "debbie@rockstar.com",
                          "IncludeInEmails": false
                        }
                      ],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-11T00:00:00",
                    "Date": "/Date(1552262400000+0000)/",
                    "DueDateString": "2018-12-10T00:00:00",
                    "DueDate": "/Date(1544400000000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "Acme Tires",
                        "UnitAmount": 20.0,
                        "TaxType": "NONE",
                        "TaxAmount": 0.0,
                        "LineAmount": 40.0,
                        "AccountCode": "200",
                        "Tracking": [],
                        "Quantity": 2.0,
                        "LineItemID": "5f7a612b-fdcc-4d33-90fa-a9f6bc6db32f",
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 40.0,
                    "TotalTax": 0.0,
                    "Total": 40.0,
                    "UpdatedDateUTC": "/Date(1552327126117+0000)/",
                    "CurrencyCode": "NZD",
                    "StatusAttributeString": "OK"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Invoices/{InvoiceID}": {
      "get": {
        "description": "Retrieves a specific sales invoice or purchase bill using a unique invoice Id",
        "summary": "getInvoice",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoice",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Invoice"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Invoices array with specified Invoices",
            "schema": {
              "$ref": "#/definitions/Invoices"
            },
            "examples": {
              "application/json": {
                "Id": "516f400a-b764-4c88-831b-12d2b210fa24",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1551981658323)/",
                "Invoices": [
                  {
                    "Type": "ACCREC",
                    "InvoiceID": "a03ffcd2-5d91-4c7e-b483-318584e9e439",
                    "InvoiceNumber": "INV-0006",
                    "Reference": "Tour",
                    "Payments": [
                      {
                        "PaymentID": "38928000-e9a0-420c-8884-f624bab2a351",
                        "Date": "/Date(1552953600000+0000)/",
                        "Amount": 148062.76,
                        "Reference": "Yahoo",
                        "CurrencyRate": 1.0,
                        "HasAccount": false,
                        "HasValidationErrors": false
                      }
                    ],
                    "Prepayments": [],
                    "Overpayments": [],
                    "AmountDue": 0.0,
                    "AmountPaid": 148062.76,
                    "SentToContact": false,
                    "CurrencyRate": 1.0,
                    "HasErrors": false,
                    "IsDiscounted": false,
                    "HasAttachments": true,
                    "Attachments": [
                      {
                        "AttachmentID": "3a2fe7e0-fac7-4ea2-afb2-31cedaabd294",
                        "FileName": "helo-heros.jpg",
                        "Url": "https://api.xero.com/api.xro/2.0/Invoices/a03ffcd2-5d91-4c7e-b483-318584e9e439/Attachments/helo-heros.jpg",
                        "MimeType": "image/jpeg",
                        "ContentLength": 2878711
                      }
                    ],
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "EmailAddress": "liam@rockstar.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": "",
                          "AttentionTo": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1551747281053+0000)/",
                      "ContactGroups": [
                        {
                          "ContactGroupID": "17b44ed7-4389-4162-91cb-3dd5766e4e22",
                          "Name": "Oasis",
                          "Status": "ACTIVE",
                          "Contacts": [],
                          "HasValidationErrors": false
                        }
                      ],
                      "IsSupplier": true,
                      "IsCustomer": true,
                      "SalesTrackingCategories": [],
                      "PurchasesTrackingCategories": [],
                      "ContactPersons": [
                        {
                          "FirstName": "Debbie",
                          "LastName": "Gwyther",
                          "EmailAddress": "debbie@rockstar.com",
                          "IncludeInEmails": false
                        }
                      ],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-07T00:00:00",
                    "Date": "/Date(1551916800000+0000)/",
                    "DueDateString": "2019-03-13T00:00:00",
                    "DueDate": "/Date(1552435200000+0000)/",
                    "Status": "PAID",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "ItemCode": "123",
                        "Description": "Guitars Fender Strat",
                        "UnitAmount": 148062.76,
                        "TaxType": "NONE",
                        "TaxAmount": 0.0,
                        "LineAmount": 148062.76,
                        "AccountCode": "200",
                        "Tracking": [],
                        "Quantity": 1.0,
                        "LineItemID": "b18f39d9-7739-4246-9288-72afe939d2d5",
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 148062.76,
                    "TotalTax": 0.0,
                    "Total": 148062.76,
                    "UpdatedDateUTC": "/Date(1551981568133+0000)/",
                    "CurrencyCode": "NZD",
                    "FullyPaidOnDate": "/Date(1552953600000+0000)/",
                    "StatusAttributeString": "ERROR",
                    "ValidationErrors": [
                      {
                        "Message": "Invoice # must be unique."
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific sales invoices or purchase bills",
        "summary": "updateInvoice",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateInvoice",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Invoice"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Invoices array with updated Invoice",
            "schema": {
              "$ref": "#/definitions/Invoices"
            },
            "examples": {
              "application/json": {
                "Id": "bd83b60e-9d16-4a3b-9f59-0a2d0ccd35f2",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552329729002)/",
                "Invoices": [
                  {
                    "Type": "ACCREC",
                    "InvoiceID": "4074292c-09b3-456d-84e7-add864c6c39b",
                    "InvoiceNumber": "INV-0008",
                    "Reference": "My the Force be With You",
                    "Prepayments": [],
                    "Overpayments": [],
                    "AmountDue": 575.0,
                    "AmountPaid": 0.0,
                    "SentToContact": false,
                    "CurrencyRate": 1.0,
                    "HasErrors": false,
                    "IsDiscounted": false,
                    "Contact": {
                      "ContactID": "be392c72-c121-4f83-9512-03ac71e54c20",
                      "ContactStatus": "ACTIVE",
                      "Name": "Luke Skywalker",
                      "EmailAddress": "",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1552329691573+0000)/",
                      "ContactGroups": [],
                      "IsSupplier": false,
                      "IsCustomer": true,
                      "DefaultCurrency": "NZD",
                      "SalesTrackingCategories": [],
                      "PurchasesTrackingCategories": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-11T00:00:00",
                    "Date": "/Date(1552262400000+0000)/",
                    "DueDateString": "2019-03-12T00:00:00",
                    "DueDate": "/Date(1552348800000+0000)/",
                    "Status": "SUBMITTED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "Light Saber",
                        "UnitAmount": 500.0,
                        "TaxType": "OUTPUT2",
                        "TaxAmount": 75.0,
                        "LineAmount": 500.0,
                        "AccountCode": "200",
                        "Tracking": [],
                        "Quantity": 1.0,
                        "LineItemID": "6de1bf9f-de95-4c47-9287-37305db758c9",
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 500.0,
                    "TotalTax": 75.0,
                    "Total": 575.0,
                    "UpdatedDateUTC": "/Date(1552329728987+0000)/",
                    "CurrencyCode": "NZD"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Invoices/{InvoiceID}/pdf": {
      "get": {
        "description": "Retrieves invoices or purchase bills as PDF files",
        "summary": "getInvoiceAsPdf",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoiceAsPdf",
        "deprecated": false,
        "produces": [
          "application/pdf"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Invoice"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of byte array pdf version of specified Invoices",
            "schema": {
              "default": ""
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/Invoices/{InvoiceID}/Attachments": {
      "get": {
        "description": "Retrieves attachments for a specific invoice or purchase bill",
        "summary": "getInvoiceAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoiceAttachments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Invoice"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachments for specified Invoices",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "7e357a45-69f5-4e8f-8d7b-15da8ef50aab",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552330258523)/",
                "Attachments": [
                  {
                    "AttachmentID": "9808ad7f-c8d4-41cf-995e-bc29cb76fd2c",
                    "FileName": "foobar.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/foobar.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  },
                  {
                    "AttachmentID": "5a500c1a-5a02-48de-939e-1d234fd170d4",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/Invoices/{InvoiceID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific invoices or purchase bills by using a unique attachment Id",
        "summary": "getInvoiceAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoiceAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Invoice"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Attachment object"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Invoice as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/Invoices/{InvoiceID}/Attachments/{FileName}": {
      "get": {
        "description": "Retrieves an attachment from a specific invoice or purchase bill by filename",
        "summary": "getInvoiceAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoiceAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Invoice"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Invoice as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates an attachment from a specific invoices or purchase bill by filename",
        "summary": "updateInvoiceAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateInvoiceAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Invoice"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with updated Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "acd7d618-5fef-4d45-849c-a339ea31a973",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552330524005)/",
                "Attachments": [
                  {
                    "AttachmentID": "08085449-fda3-45f4-a685-ff44c8a29ee3",
                    "FileName": "HelloWorld.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/HelloWorld.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates an attachment for a specific invoice or purchase bill by filename",
        "summary": "createInvoiceAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createInvoiceAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Invoice"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "IncludeOnline",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "Allows an attachment to be seen by the end customer within their online invoice"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with newly created Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "971fbd18-c850-453a-825f-63f2fee096ee",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552330001318)/",
                "Attachments": [
                  {
                    "AttachmentID": "5a500c1a-5a02-48de-939e-1d234fd170d4",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      }
    },
    "/Invoices/{InvoiceID}/OnlineInvoice": {
      "get": {
        "description": "Retrieves a URL to an online invoice",
        "summary": "getOnlineInvoice",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOnlineInvoice",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Invoice"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type OnlineInvoice array with one OnlineInvoice",
            "schema": {
              "$ref": "#/definitions/OnlineInvoices"
            },
            "examples": {
              "application/json": {
                "Id": "d20705fb-fe1c-4366-835b-98de7474da3c",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552331100745)/",
                "OnlineInvoices": [
                  {
                    "OnlineInvoiceUrl": "https://in.xero.com/bCWCCfytGdTXoJam9HENWlQt07G6zcDaj4gQojHu"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/Invoices/{InvoiceID}/Email": {
      "post": {
        "description": "Sends a copy of a specific invoice to related contact via email",
        "summary": "emailInvoice",
        "tags": [
          "Accounting"
        ],
        "operationId": "emailInvoice",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Invoice"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RequestEmpty"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success - return response 204 no content",
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Invoices/{InvoiceID}/History": {
      "get": {
        "description": "Retrieves history records for a specific invoice",
        "summary": "getInvoiceHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoiceHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Invoice"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific invoice",
        "summary": "createInvoiceHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createInvoiceHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Invoice"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/InvoiceReminders/Settings": {
      "get": {
        "description": "Retrieves invoice reminder settings",
        "summary": "getInvoiceReminders",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoiceReminders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of Invoice Reminders",
            "schema": {
              "$ref": "#/definitions/InvoiceReminders"
            },
            "examples": {
              "application/json": {
                "Id": "c7cd0953-c012-4be8-b618-63ce4c2c3494",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552331430618)/",
                "InvoiceReminders": [
                  {
                    "Enabled": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      }
    },
    "/Items": {
      "get": {
        "description": "Retrieves items",
        "summary": "getItems",
        "tags": [
          "Accounting"
        ],
        "operationId": "getItems",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Items array with all Item",
            "schema": {
              "$ref": "#/definitions/Items"
            },
            "examples": {
              "application/json": {
                "Id": "8487e8d7-5fb3-4f02-b949-dec8f1e38182",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552331874897)/",
                "Items": [
                  {
                    "ItemID": "c8c54d65-f3f2-452d-926e-bf450b12fb07",
                    "Code": "123",
                    "Description": "Guitars Fender Strat",
                    "UpdatedDateUTC": "/Date(1551981476267+0000)/",
                    "PurchaseDetails": {},
                    "SalesDetails": {
                      "UnitPrice": 5000.0,
                      "AccountCode": "200",
                      "TaxType": "OUTPUT2"
                    },
                    "Name": "Guitars",
                    "IsTrackedAsInventory": false,
                    "IsSold": true,
                    "IsPurchased": false
                  },
                  {
                    "ItemID": "a4544d51-48f6-441f-a623-99ecbced6ab7",
                    "Code": "abc65591",
                    "Description": "Barfoo",
                    "UpdatedDateUTC": "/Date(1552331873580+0000)/",
                    "PurchaseDetails": {},
                    "SalesDetails": {},
                    "Name": "Hello11350",
                    "IsTrackedAsInventory": false,
                    "IsSold": true,
                    "IsPurchased": true
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates one or more items",
        "summary": "createItems",
        "tags": [
          "Accounting"
        ],
        "operationId": "createItems",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Items with an array of Item objects in body of request",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Items array with newly created Item",
            "schema": {
              "$ref": "#/definitions/Items"
            },
            "examples": {
              "application/json": {
                "Id": "ae7ef7c8-9024-4d42-8d59-5f26ed3f508b",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552331871904)/",
                "Items": [
                  {
                    "ItemID": "a4544d51-48f6-441f-a623-99ecbced6ab7",
                    "Code": "abc65591",
                    "Description": "foobar",
                    "UpdatedDateUTC": "/Date(1552331871707)/",
                    "PurchaseDetails": {},
                    "SalesDetails": {},
                    "Name": "Hello11350",
                    "IsTrackedAsInventory": false,
                    "IsSold": true,
                    "IsPurchased": true,
                    "ValidationErrors": [
                      {
                        "Message": "Price List Item with Code 'abc' already exists"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates or creates one or more items",
        "summary": "updateOrCreateItems",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateOrCreateItems",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Items array with newly created Item",
            "schema": {
              "$ref": "#/definitions/Items"
            },
            "examples": {
              "application/json": {
                "Id": "ae7ef7c8-9024-4d42-8d59-5f26ed3f508b",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552331871904)/",
                "Items": [
                  {
                    "ItemID": "a4544d51-48f6-441f-a623-99ecbced6ab7",
                    "Code": "abc65591",
                    "Description": "foobar",
                    "UpdatedDateUTC": "/Date(1552331871707)/",
                    "PurchaseDetails": {},
                    "SalesDetails": {},
                    "Name": "Hello11350",
                    "IsTrackedAsInventory": false,
                    "IsSold": true,
                    "IsPurchased": true,
                    "ValidationErrors": [
                      {
                        "Message": "Price List Item with Code 'abc' already exists"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/Items/{ItemID}": {
      "get": {
        "description": "Retrieves a specific item using a unique item Id",
        "summary": "getItem",
        "tags": [
          "Accounting"
        ],
        "operationId": "getItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ItemID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Item"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Items array with specified Item",
            "schema": {
              "$ref": "#/definitions/Items"
            },
            "examples": {
              "application/json": {
                "Id": "0bbd8a92-9ba7-4711-8040-8d6a609ca7e8",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552333420160)/",
                "Items": [
                  {
                    "ItemID": "c8c54d65-f3f2-452d-926e-bf450b12fb07",
                    "Code": "123",
                    "Description": "Guitars Fender Strat",
                    "PurchaseDescription": "Brand new Fender Strats",
                    "UpdatedDateUTC": "/Date(1552333309387+0000)/",
                    "PurchaseDetails": {
                      "UnitPrice": 2500.0,
                      "COGSAccountCode": "310",
                      "TaxType": "INPUT2"
                    },
                    "SalesDetails": {
                      "UnitPrice": 5000.0,
                      "AccountCode": "200",
                      "TaxType": "OUTPUT2"
                    },
                    "Name": "Guitars",
                    "IsTrackedAsInventory": true,
                    "InventoryAssetAccountCode": "630",
                    "TotalCostPool": 25000.0,
                    "QuantityOnHand": 10.0,
                    "IsSold": true,
                    "IsPurchased": true,
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific item",
        "summary": "updateItem",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ItemID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Item"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Items array with updated Item",
            "schema": {
              "$ref": "#/definitions/Items"
            },
            "examples": {
              "application/json": {
                "Id": "24feb629-6b14-499e-9aa1-fc2c596c0280",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552332558975)/",
                "Items": [
                  {
                    "ItemID": "a7e87086-e0ae-4df2-83d7-e26e9a6b7786",
                    "Code": "abc38306",
                    "Description": "Hello Xero",
                    "UpdatedDateUTC": "/Date(1552332558924)/",
                    "PurchaseDetails": {},
                    "SalesDetails": {},
                    "Name": "Hello8746",
                    "IsTrackedAsInventory": false,
                    "IsSold": true,
                    "IsPurchased": true,
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      },
      "delete": {
        "description": "Deletes a specific item",
        "summary": "deleteItem",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ItemID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Item"
          }
        ],
        "responses": {
          "204": {
            "description": "Success - return response 204 no content",
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/Items/{ItemID}/History": {
      "get": {
        "description": "Retrieves history for a specific item",
        "summary": "getItemHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getItemHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ItemID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Item"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific item",
        "summary": "createItemHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createItemHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ItemID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Item"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/Journals": {
      "get": {
        "description": "Retrieves journals",
        "summary": "getJournals",
        "tags": [
          "Accounting"
        ],
        "operationId": "getJournals",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Offset by a specified journal number. e.g. journals with a JournalNumber greater than the offset will be returned"
          },
          {
            "name": "paymentsOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Filter to retrieve journals on a cash basis. Journals are returned on an accrual basis by default."
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Journals array with all Journals",
            "schema": {
              "$ref": "#/definitions/Journals"
            },
            "examples": {
              "application/json": {
                "Id": "49a09a97-df50-4679-8043-02c86e0dcf5f",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552335214210)/",
                "Journals": [
                  {
                    "JournalID": "1b31feeb-aa23-404c-8c19-24c827c53661",
                    "JournalDate": "/Date(1539993600000+0000)/",
                    "JournalNumber": 1,
                    "CreatedDateUTC": "/Date(1541176243467+0000)/",
                    "Reference": "Red Fish, Blue Fish",
                    "SourceID": "d4956132-ed94-4dd7-9eaa-aa22dfdf06f2",
                    "SourceType": "ACCREC",
                    "JournalLines": [
                      {
                        "JournalLineID": "81e6b1bf-d812-4f87-8dc4-698558ae043e",
                        "AccountID": "b94495d0-44ab-4199-a1d0-427a4877e100",
                        "AccountCode": "610",
                        "AccountType": "CURRENT",
                        "AccountName": "Accounts Receivable",
                        "Description": "",
                        "NetAmount": 40.0,
                        "GrossAmount": 40.0,
                        "TaxAmount": 0.0,
                        "TrackingCategories": []
                      },
                      {
                        "JournalLineID": "ad221a8c-ebee-4c1b-88ed-d574e27e8803",
                        "AccountID": "e0a5d892-9f9f-44f0-a153-5cb7db125170",
                        "AccountCode": "200",
                        "AccountType": "REVENUE",
                        "AccountName": "Sales",
                        "Description": "Acme Tires",
                        "NetAmount": -40.0,
                        "GrossAmount": -40.0,
                        "TaxAmount": 0.0,
                        "TaxType": "NONE",
                        "TaxName": "No GST",
                        "TrackingCategories": []
                      }
                    ]
                  },
                  {
                    "JournalID": "2be66e45-805b-46de-921d-c67e1d3dad2a",
                    "JournalDate": "/Date(1539993600000+0000)/",
                    "JournalNumber": 9,
                    "CreatedDateUTC": "/Date(1541176504083+0000)/",
                    "Reference": "Red Fish, Blue Fish",
                    "SourceID": "046d8a6d-1ae1-4b4d-9340-5601bdf41b87",
                    "SourceType": "ACCREC",
                    "JournalLines": [
                      {
                        "JournalLineID": "ba8a5680-a753-4a35-b3dd-0bc72e5c26a1",
                        "AccountID": "b94495d0-44ab-4199-a1d0-427a4877e100",
                        "AccountCode": "610",
                        "AccountType": "CURRENT",
                        "AccountName": "Accounts Receivable",
                        "Description": "",
                        "NetAmount": 40.0,
                        "GrossAmount": 40.0,
                        "TaxAmount": 0.0,
                        "TrackingCategories": []
                      },
                      {
                        "JournalLineID": "09a0b9b9-0222-4e24-8c31-efef472e22f1",
                        "AccountID": "e0a5d892-9f9f-44f0-a153-5cb7db125170",
                        "AccountCode": "200",
                        "AccountType": "REVENUE",
                        "AccountName": "Sales",
                        "Description": "Acme Tires",
                        "NetAmount": -40.0,
                        "GrossAmount": -40.0,
                        "TaxAmount": 0.0,
                        "TaxType": "NONE",
                        "TaxName": "No GST",
                        "TrackingCategories": []
                      }
                    ]
                  },
                  {
                    "JournalID": "d0ed2957-ebba-4d3a-8367-ae9ccd574885",
                    "JournalDate": "/Date(1543449600000+0000)/",
                    "JournalNumber": 14,
                    "CreatedDateUTC": "/Date(1541176592673+0000)/",
                    "SourceID": "99ea7f6b-c513-4066-bc27-b7c65dcd76c2",
                    "SourceType": "ACCRECPAYMENT",
                    "JournalLines": [
                      {
                        "JournalLineID": "1bdae2b7-3035-40ec-b344-b12b1c23adc4",
                        "AccountID": "b94495d0-44ab-4199-a1d0-427a4877e100",
                        "AccountCode": "610",
                        "AccountType": "CURRENT",
                        "AccountName": "Accounts Receivable",
                        "Description": "",
                        "NetAmount": -46.0,
                        "GrossAmount": -46.0,
                        "TaxAmount": 0.0,
                        "TrackingCategories": []
                      },
                      {
                        "JournalLineID": "353be85e-ae79-4bb3-9483-5ea7682fc0a3",
                        "AccountID": "5690f1e8-1d02-4893-90c2-ee1a69eff942",
                        "AccountCode": "970",
                        "AccountType": "EQUITY",
                        "AccountName": "Owner A Funds Introduced",
                        "Description": "",
                        "NetAmount": 46.0,
                        "GrossAmount": 46.0,
                        "TaxAmount": 0.0,
                        "TrackingCategories": []
                      }
                    ]
                  },
                  {
                    "JournalID": "772e8133-7f12-4edc-ab98-aa6dceb16c9d",
                    "JournalDate": "/Date(1552262400000+0000)/",
                    "JournalNumber": 30,
                    "CreatedDateUTC": "/Date(1552333389227+0000)/",
                    "Reference": "",
                    "SourceID": "5376633d-0456-43a3-8234-e457a3f50a12",
                    "SourceType": "ACCPAY",
                    "JournalLines": [
                      {
                        "JournalLineID": "33469836-642f-4973-a708-0e99339dff4a",
                        "AccountID": "a2a4795b-a01f-40eb-afa6-a34b4514875d",
                        "AccountCode": "800",
                        "AccountType": "CURRLIAB",
                        "AccountName": "Accounts Payable",
                        "Description": "",
                        "NetAmount": -28750.0,
                        "GrossAmount": -28750.0,
                        "TaxAmount": 0.0,
                        "TrackingCategories": []
                      },
                      {
                        "JournalLineID": "4f3b6462-5cf6-4b55-a2ae-de4039878215",
                        "AccountID": "53a12a15-7e9b-4a31-85f4-a7cee6d04215",
                        "AccountCode": "630",
                        "AccountType": "CURRENT",
                        "AccountName": "Inventory",
                        "Description": "Brand new Fender Strats",
                        "NetAmount": 25000.0,
                        "GrossAmount": 28750.0,
                        "TaxAmount": 3750.0,
                        "TaxType": "INPUT2",
                        "TaxName": "15% GST on Expenses",
                        "TrackingCategories": []
                      },
                      {
                        "JournalLineID": "534e822e-d441-48a7-8e57-5ad54729e83e",
                        "AccountID": "17d9a4a0-3181-4803-a96b-f0dbe589091b",
                        "AccountCode": "820",
                        "AccountType": "CURRLIAB",
                        "AccountName": "GST",
                        "Description": "",
                        "NetAmount": 3750.0,
                        "GrossAmount": 3750.0,
                        "TaxAmount": 0.0,
                        "TrackingCategories": []
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.journals.read"
            ]
          }
        ]
      }
    },
    "/Journals/{JournalID}": {
      "get": {
        "description": "Retrieves a specific journal using a unique journal Id.",
        "summary": "getJournal",
        "tags": [
          "Accounting"
        ],
        "operationId": "getJournal",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "JournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Journal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Journals array with specified Journal",
            "schema": {
              "$ref": "#/definitions/Journals"
            },
            "examples": {
              "application/json": {
                "Id": "39ab8367-eb14-420d-83a9-e01ddddd21f8",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552335613002)/",
                "Journals": [
                  {
                    "JournalID": "1b31feeb-aa23-404c-8c19-24c827c53661",
                    "JournalDate": "/Date(1539993600000+0000)/",
                    "JournalNumber": 1,
                    "CreatedDateUTC": "/Date(1541176243467+0000)/",
                    "Reference": "Red Fish, Blue Fish",
                    "JournalLines": [
                      {
                        "JournalLineID": "81e6b1bf-d812-4f87-8dc4-698558ae043e",
                        "AccountID": "b94495d0-44ab-4199-a1d0-427a4877e100",
                        "AccountCode": "610",
                        "AccountType": "CURRENT",
                        "AccountName": "Accounts Receivable",
                        "Description": "",
                        "NetAmount": 40.0,
                        "GrossAmount": 40.0,
                        "TaxAmount": 0.0,
                        "TaxType": "",
                        "TaxName": "",
                        "TrackingCategories": []
                      },
                      {
                        "JournalLineID": "ad221a8c-ebee-4c1b-88ed-d574e27e8803",
                        "AccountID": "e0a5d892-9f9f-44f0-a153-5cb7db125170",
                        "AccountCode": "200",
                        "AccountType": "REVENUE",
                        "AccountName": "Sales",
                        "Description": "Acme Tires",
                        "NetAmount": -40.0,
                        "GrossAmount": -40.0,
                        "TaxAmount": 0.0,
                        "TaxType": "NONE",
                        "TaxName": "No GST",
                        "TrackingCategories": []
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.journals.read"
            ]
          }
        ]
      }
    },
    "/Journals/{JournalNumber}": {
      "get": {
        "description": "Retrieves a specific journal using a unique journal number.",
        "summary": "getJournalByNumber",
        "tags": [
          "Accounting"
        ],
        "operationId": "getJournalByNumber",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "JournalNumber",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Number of a Journal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Journals array with specified Journal",
            "schema": {
              "$ref": "#/definitions/Journals"
            },
            "examples": {
              "application/json": {
                "Id": "39ab8367-eb14-420d-83a9-e01ddddd21f8",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552335613002)/",
                "Journals": [
                  {
                    "JournalID": "1b31feeb-aa23-404c-8c19-24c827c53661",
                    "JournalDate": "/Date(1539993600000+0000)/",
                    "JournalNumber": 1,
                    "CreatedDateUTC": "/Date(1541176243467+0000)/",
                    "Reference": "Red Fish, Blue Fish",
                    "JournalLines": [
                      {
                        "JournalLineID": "81e6b1bf-d812-4f87-8dc4-698558ae043e",
                        "AccountID": "b94495d0-44ab-4199-a1d0-427a4877e100",
                        "AccountCode": "610",
                        "AccountType": "CURRENT",
                        "AccountName": "Accounts Receivable",
                        "Description": "",
                        "NetAmount": 40.0,
                        "GrossAmount": 40.0,
                        "TaxAmount": 0.0,
                        "TaxType": "",
                        "TaxName": "",
                        "TrackingCategories": []
                      },
                      {
                        "JournalLineID": "ad221a8c-ebee-4c1b-88ed-d574e27e8803",
                        "AccountID": "e0a5d892-9f9f-44f0-a153-5cb7db125170",
                        "AccountCode": "200",
                        "AccountType": "REVENUE",
                        "AccountName": "Sales",
                        "Description": "Acme Tires",
                        "NetAmount": -40.0,
                        "GrossAmount": -40.0,
                        "TaxAmount": 0.0,
                        "TaxType": "NONE",
                        "TaxName": "No GST",
                        "TrackingCategories": []
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.journals.read"
            ]
          }
        ]
      }
    },
    "/LinkedTransactions": {
      "get": {
        "description": "Retrieves linked transactions (billable expenses)",
        "summary": "getLinkedTransactions",
        "tags": [
          "Accounting"
        ],
        "operationId": "getLinkedTransactions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Up to 100 linked transactions will be returned in a single API call. Use the page parameter to specify the page to be returned e.g. page=1."
          },
          {
            "name": "LinkedTransactionID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid",
            "description": "The Xero identifier for an Linked Transaction"
          },
          {
            "name": "SourceTransactionID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid",
            "description": "Filter by the SourceTransactionID. Get the linked transactions created from a particular ACCPAY invoice"
          },
          {
            "name": "ContactID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid",
            "description": "Filter by the ContactID. Get all the linked transactions that have been assigned to a particular customer."
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by the combination of ContactID and Status. Get  the linked transactions associated to a  customer and with a status"
          },
          {
            "name": "TargetTransactionID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid",
            "description": "Filter by the TargetTransactionID. Get all the linked transactions allocated to a particular ACCREC invoice"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type LinkedTransactions array with all LinkedTransaction",
            "schema": {
              "$ref": "#/definitions/LinkedTransactions"
            },
            "examples": {
              "application/json": {
                "Id": "516aabd0-e670-48d5-b0eb-10dce4494dd8",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552348338096)/",
                "LinkedTransactions": [
                  {
                    "LinkedTransactionID": "5cf7d9c0-b9a7-4433-a2dc-ae3c11bba39b",
                    "SourceTransactionID": "aec416dd-38ea-40dc-9f0b-813c8c71f87f",
                    "SourceLineItemID": "77e0b23b-5b79-4f4b-ae20-c9031d41442f",
                    "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                    "TargetTransactionID": "83693fc1-5b05-4807-b190-109d4a85dd5f",
                    "TargetLineItemID": "d5128ff1-0f39-4d2a-a6d5-46dfaf5f075c",
                    "Status": "ONDRAFT",
                    "Type": "BILLABLEEXPENSE",
                    "UpdatedDateUTC": "/Date(1552347991000+0000)/",
                    "SourceTransactionTypeCode": "ACCPAY"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates linked transactions (billable expenses)",
        "summary": "createLinkedTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "createLinkedTransaction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "LinkedTransaction object in body of request",
            "schema": {
              "$ref": "#/definitions/LinkedTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type LinkedTransactions array with newly created LinkedTransaction",
            "schema": {
              "$ref": "#/definitions/LinkedTransactions"
            },
            "examples": {
              "application/json": {
                "Id": "f32b30e5-32d1-42a8-bcc9-5b22828f725c",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552351054646)/",
                "LinkedTransactions": [
                  {
                    "LinkedTransactionID": "e9684b6c-4df9-45a0-917b-85cc29857008",
                    "SourceTransactionID": "a848644a-f20f-4630-98c3-386bd7505631",
                    "SourceLineItemID": "b0df260d-3cc8-4ced-9bd6-41924f624ed3",
                    "Status": "DRAFT",
                    "Type": "BILLABLEEXPENSE",
                    "UpdatedDateUTC": "/Date(1552351055000+0000)/",
                    "SourceTransactionTypeCode": "ACCPAY",
                    "ValidationErrors": [
                      {
                        "Message": "The SourceLineItemID and SourceTransactionID do not match"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/LinkedTransactions/{LinkedTransactionID}": {
      "get": {
        "description": "Retrieves a specific linked transaction (billable expenses) using a unique linked transaction Id",
        "summary": "getLinkedTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "getLinkedTransaction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "LinkedTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a LinkedTransaction"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type LinkedTransactions array with a specified LinkedTransaction",
            "schema": {
              "$ref": "#/definitions/LinkedTransactions"
            },
            "examples": {
              "application/json": {
                "Id": "171ca542-874d-44e2-8930-db9bccd7d88b",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552348339875)/",
                "LinkedTransactions": [
                  {
                    "LinkedTransactionID": "5cf7d9c0-b9a7-4433-a2dc-ae3c11bba39b",
                    "SourceTransactionID": "aec416dd-38ea-40dc-9f0b-813c8c71f87f",
                    "SourceLineItemID": "77e0b23b-5b79-4f4b-ae20-c9031d41442f",
                    "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                    "TargetTransactionID": "83693fc1-5b05-4807-b190-109d4a85dd5f",
                    "TargetLineItemID": "d5128ff1-0f39-4d2a-a6d5-46dfaf5f075c",
                    "Status": "ONDRAFT",
                    "Type": "BILLABLEEXPENSE",
                    "UpdatedDateUTC": "/Date(1552347991000+0000)/",
                    "SourceTransactionTypeCode": "ACCPAY"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific linked transactions (billable expenses)",
        "summary": "updateLinkedTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateLinkedTransaction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "LinkedTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a LinkedTransaction"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LinkedTransactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type LinkedTransactions array with updated LinkedTransaction",
            "schema": {
              "$ref": "#/definitions/LinkedTransactions"
            },
            "examples": {
              "application/json": {
                "Id": "bd364af7-08f0-432b-81db-c1e5ba05f3dd",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552351488159)/",
                "LinkedTransactions": [
                  {
                    "LinkedTransactionID": "e9684b6c-4df9-45a0-917b-85cc29857008",
                    "SourceTransactionID": "a848644a-f20f-4630-98c3-386bd7505631",
                    "SourceLineItemID": "b0df260d-3cc8-4ced-9bd6-41924f624ed3",
                    "ContactID": "4e1753b9-018a-4775-b6aa-1bc7871cfee3",
                    "Status": "DRAFT",
                    "Type": "BILLABLEEXPENSE",
                    "UpdatedDateUTC": "/Date(1552351055000+0000)/",
                    "SourceTransactionTypeCode": "ACCPAY"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Success - return response of type LinkedTransactions array with updated LinkedTransaction",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "ErrorNumber": 10,
                "Type": "ValidationException",
                "Message": "A validation exception occurred",
                "Elements": [
                  {
                    "LinkedTransactionID": "5a68b5b4-8cf0-4af5-8c3c-513cc19e1c73",
                    "SourceTransactionID": "aec416dd-38ea-40dc-9f0b-813c8c71f87f",
                    "SourceLineItemID": "77e0b23b-5b79-4f4b-ae20-c9031d41442f",
                    "ContactID": "4e1753b9-018a-4775-b6aa-1bc7871cfee3",
                    "TargetTransactionID": "83693fc1-5b05-4807-b190-109d4a85dd5f",
                    "TargetLineItemID": "d5128ff1-0f39-4d2a-a6d5-46dfaf5f075c",
                    "Status": "ONDRAFT",
                    "Type": "BILLABLEEXPENSE",
                    "UpdatedDateUTC": "/Date(1552349706000+0000)/",
                    "SourceTransactionTypeCode": "ACCPAY",
                    "ValidationErrors": [
                      {
                        "Message": "The ContactID and the TargetTransaction ContactID do not match"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      },
      "delete": {
        "description": "Deletes a specific linked transactions (billable expenses)",
        "summary": "deleteLinkedTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteLinkedTransaction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "LinkedTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a LinkedTransaction"
          }
        ],
        "responses": {
          "204": {
            "description": "Success - return response 204 no content",
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/ManualJournals": {
      "get": {
        "description": "Retrieves manual journals",
        "summary": "getManualJournals",
        "tags": [
          "Accounting"
        ],
        "operationId": "getManualJournals",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 – Up to 100 manual journals will be returned in a single API call with line items shown for each overpayment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ManualJournals array with a all ManualJournals",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            },
            "examples": {
              "application/json": {
                "Id": "8a508ec1-b578-48bf-97df-020c918fbf7d",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552357217359)/",
                "ManualJournals": [
                  {
                    "Date": "/Date(1553126400000+0000)/",
                    "Status": "POSTED",
                    "LineAmountTypes": "NoTax",
                    "UpdatedDateUTC": "/Date(1552357188083+0000)/",
                    "ManualJournalID": "0b159335-606b-485f-b51b-97b3b32bad32",
                    "Narration": "Reversal: These aren't the droids you are looking for",
                    "JournalLines": [],
                    "ShowOnCashBasisReports": true,
                    "HasAttachments": false
                  },
                  {
                    "Date": "/Date(1552348800000+0000)/",
                    "Status": "POSTED",
                    "LineAmountTypes": "NoTax",
                    "UpdatedDateUTC": "/Date(1552357188147+0000)/",
                    "ManualJournalID": "99cb8353-ce73-4a5d-8e0d-8b0edf86cfc4",
                    "Narration": "These aren't the droids you are looking for",
                    "JournalLines": [],
                    "ShowOnCashBasisReports": true,
                    "HasAttachments": true
                  },
                  {
                    "Date": "/Date(1552262400000+0000)/",
                    "Status": "DRAFT",
                    "LineAmountTypes": "NoTax",
                    "UpdatedDateUTC": "/Date(1552357216843+0000)/",
                    "ManualJournalID": "ecb6b362-c78f-462a-a229-a66abf115e92",
                    "Narration": "Foo bar",
                    "JournalLines": [],
                    "ShowOnCashBasisReports": true,
                    "HasAttachments": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates one or more manual journals",
        "summary": "createManualJournals",
        "tags": [
          "Accounting"
        ],
        "operationId": "createManualJournals",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "ManualJournals array with ManualJournal object in body of request",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ManualJournals array with newly created ManualJournal",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            },
            "examples": {
              "application/json": {
                "Id": "45dfa608-0fcb-4f30-a377-c82cd348569c",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552595972952)/",
                "ManualJournals": [
                  {
                    "Date": "/Date(1552521600000+0000)/",
                    "Status": "DRAFT",
                    "LineAmountTypes": "NoTax",
                    "UpdatedDateUTC": "/Date(1552595972920+0000)/",
                    "ManualJournalID": "d312dd5e-a53e-46d1-9d51-c569ef4570b7",
                    "Narration": "Foo bar",
                    "JournalLines": [
                      {
                        "Description": "Hello there",
                        "TaxType": "NONE",
                        "LineAmount": 100.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "AccountID": "c4f29c22-28c2-4a13-9eab-ecbbd641ffdf",
                        "IsBlank": false
                      },
                      {
                        "Description": "Goodbye",
                        "TaxType": "NONE",
                        "LineAmount": -100.0,
                        "AccountCode": "400",
                        "Tracking": [
                          {
                            "Name": "Simpsons",
                            "Option": "Bart",
                            "TrackingCategoryID": "6a68adde-f210-4465-b0a9-0d8cc6f50762",
                            "TrackingOptionID": "dc54c220-0140-495a-b925-3246adc0075f"
                          }
                        ],
                        "AccountID": "c4f29c22-28c2-4a13-9eab-ecbbd641ffdf",
                        "IsBlank": false
                      }
                    ],
                    "ShowOnCashBasisReports": true,
                    "Warnings": [
                      {
                        "Message": "Account code '476' has been removed as it does not match a recognised account."
                      }
                    ],
                    "ValidationErrors": [
                      {
                        "Message": "The total debits (100.00) must equal total credits (-10.00)"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates or creates a single manual journal",
        "summary": "updateOrCreateManualJournals",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateOrCreateManualJournals",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "ManualJournals array with ManualJournal object in body of request",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ManualJournals array with newly created ManualJournal",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            },
            "examples": {
              "application/json": {
                "Id": "45dfa608-0fcb-4f30-a377-c82cd348569c",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552595972952)/",
                "ManualJournals": [
                  {
                    "Date": "/Date(1552521600000+0000)/",
                    "Status": "DRAFT",
                    "LineAmountTypes": "NoTax",
                    "UpdatedDateUTC": "/Date(1552595972920+0000)/",
                    "ManualJournalID": "d312dd5e-a53e-46d1-9d51-c569ef4570b7",
                    "Narration": "Foo bar",
                    "JournalLines": [
                      {
                        "Description": "Hello there",
                        "TaxType": "NONE",
                        "LineAmount": 100.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "AccountID": "c4f29c22-28c2-4a13-9eab-ecbbd641ffdf",
                        "IsBlank": false
                      },
                      {
                        "Description": "Goodbye",
                        "TaxType": "NONE",
                        "LineAmount": -100.0,
                        "AccountCode": "400",
                        "Tracking": [
                          {
                            "Name": "Simpsons",
                            "Option": "Bart",
                            "TrackingCategoryID": "6a68adde-f210-4465-b0a9-0d8cc6f50762",
                            "TrackingOptionID": "dc54c220-0140-495a-b925-3246adc0075f"
                          }
                        ],
                        "AccountID": "c4f29c22-28c2-4a13-9eab-ecbbd641ffdf",
                        "IsBlank": false
                      }
                    ],
                    "ShowOnCashBasisReports": true,
                    "Warnings": [
                      {
                        "Message": "Account code '476' has been removed as it does not match a recognised account."
                      }
                    ],
                    "ValidationErrors": [
                      {
                        "Message": "The total debits (100.00) must equal total credits (-10.00)"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/ManualJournals/{ManualJournalID}": {
      "get": {
        "description": "Retrieves a specific manual journal",
        "summary": "getManualJournal",
        "tags": [
          "Accounting"
        ],
        "operationId": "getManualJournal",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ManualJournal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ManualJournals array with a specified ManualJournals",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            },
            "examples": {
              "application/json": {
                "Id": "7321fc21-1a13-4f40-ae47-df59cff5676d",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552399859139)/",
                "ManualJournals": [
                  {
                    "Date": "/Date(1552348800000+0000)/",
                    "Status": "POSTED",
                    "LineAmountTypes": "NoTax",
                    "UpdatedDateUTC": "/Date(1552357188147+0000)/",
                    "ManualJournalID": "99cb8353-ce73-4a5d-8e0d-8b0edf86cfc4",
                    "Narration": "These aren't the droids you are looking for",
                    "JournalLines": [
                      {
                        "Description": "These aren't the droids you are looking for",
                        "TaxType": "NONE",
                        "TaxAmount": 0.0,
                        "LineAmount": 100.0,
                        "AccountCode": "429",
                        "Tracking": [],
                        "AccountID": "160bad11-c1b7-4c7e-8903-dca925d78721",
                        "IsBlank": false
                      },
                      {
                        "Description": "Yes the are",
                        "TaxType": "NONE",
                        "TaxAmount": 0.0,
                        "LineAmount": -100.0,
                        "AccountCode": "200",
                        "Tracking": [],
                        "AccountID": "e0a5d892-9f9f-44f0-a153-5cb7db125170",
                        "IsBlank": false
                      }
                    ],
                    "ShowOnCashBasisReports": true,
                    "HasAttachments": true,
                    "Attachments": [
                      {
                        "AttachmentID": "166ca8f8-8bc6-4780-8466-a0e474d586ea",
                        "FileName": "giphy.gif",
                        "Url": "https://api.xero.com/api.xro/2.0/manualjournal/99cb8353-ce73-4a5d-8e0d-8b0edf86cfc4/Attachments/giphy.gif",
                        "MimeType": "image/gif",
                        "ContentLength": 495727
                      },
                      {
                        "AttachmentID": "5e5036f9-b1e0-4c5d-a93f-61900137e40b",
                        "FileName": "ridehistory.pdf",
                        "Url": "https://api.xero.com/api.xro/2.0/manualjournal/99cb8353-ce73-4a5d-8e0d-8b0edf86cfc4/Attachments/ridehistory.pdf",
                        "MimeType": "application/pdf",
                        "ContentLength": 4423
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific manual journal",
        "summary": "updateManualJournal",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateManualJournal",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ManualJournal"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ManualJournals array with an updated ManualJournal",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            },
            "examples": {
              "application/json": {
                "Id": "b694559c-686c-4047-b657-661ba6c0dd1f",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552357736850)/",
                "ManualJournals": [
                  {
                    "Date": "/Date(1552262400000+0000)/",
                    "Status": "DRAFT",
                    "LineAmountTypes": "NoTax",
                    "UpdatedDateUTC": "/Date(1552357736820+0000)/",
                    "ManualJournalID": "07eac261-78ef-47a0-a0eb-a57b74137877",
                    "Narration": "Hello Xero",
                    "JournalLines": [
                      {
                        "Description": "Hello there",
                        "TaxType": "NONE",
                        "TaxAmount": 0.0,
                        "LineAmount": 100.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "AccountID": "c4f29c22-28c2-4a13-9eab-ecbbd641ffdf",
                        "IsBlank": false
                      },
                      {
                        "Description": "Goodbye",
                        "TaxType": "NONE",
                        "TaxAmount": 0.0,
                        "LineAmount": -100.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "AccountID": "c4f29c22-28c2-4a13-9eab-ecbbd641ffdf",
                        "IsBlank": false
                      }
                    ],
                    "ShowOnCashBasisReports": true,
                    "HasAttachments": false,
                    "Attachments": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/ManualJournals/{ManualJournalID}/Attachments": {
      "get": {
        "description": "Retrieves attachment for a specific manual journal",
        "summary": "getManualJournalAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getManualJournalAttachments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ManualJournal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with all Attachments for a ManualJournals",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "5fa4b3ef-7945-45a7-9bab-10e830673dfb",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552404121471)/",
                "Attachments": [
                  {
                    "AttachmentID": "16e86f32-3e25-4209-8662-c0dfd91b654c",
                    "FileName": "HelloWorld.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/ManualJournals/0b159335-606b-485f-b51b-97b3b32bad32/Attachments/HelloWorld.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  },
                  {
                    "AttachmentID": "ff7c439e-a057-4807-ac2c-b558d7df7511",
                    "FileName": "foobar.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/ManualJournals/0b159335-606b-485f-b51b-97b3b32bad32/Attachments/foobar.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/ManualJournals/{ManualJournalID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Allows you to retrieve a specific attachment from a specific manual journal using a unique attachment Id",
        "summary": "getManualJournalAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getManualJournalAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ManualJournal"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Attachment object"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Manual Journal as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/ManualJournals/{ManualJournalID}/Attachments/{FileName}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific manual journal by file name",
        "summary": "getManualJournalAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getManualJournalAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ManualJournal"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Manual Journal as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific attachment from a specific manual journal by file name",
        "summary": "updateManualJournalAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateManualJournalAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ManualJournal"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with an update Attachment for a ManualJournals",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "e1cb9deb-a8f0-477f-b4d1-cf0c6c39e080",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552401039306)/",
                "Attachments": [
                  {
                    "AttachmentID": "16e86f32-3e25-4209-8662-c0dfd91b654c",
                    "FileName": "HelloWorld.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/ManualJournals/0b159335-606b-485f-b51b-97b3b32bad32/Attachments/HelloWorld.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a specific attachment for a specific manual journal by file name",
        "summary": "createManualJournalAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createManualJournalAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ManualJournal"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with a newly created Attachment for a ManualJournals",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "a864994c-e7d7-4dee-b5ca-0a729fde2f39",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552400898428)/",
                "Attachments": [
                  {
                    "AttachmentID": "47ac97ff-d4f9-48a0-8a8e-49fae29129e7",
                    "FileName": "foobar.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/ManualJournals/0b159335-606b-485f-b51b-97b3b32bad32/Attachments/foobar.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      }
    },
    "/ManualJournals/{ManualJournalID}/History": {
      "get": {
        "description": "Retrieves history for a specific manual journal",
        "summary": "getManualJournalsHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getManualJournalsHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ManualJournal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific manual journal",
        "summary": "createManualJournalHistoryRecord",
        "tags": [
          "Accounting"
        ],
        "operationId": "createManualJournalHistoryRecord",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a ManualJournal"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Organisation": {
      "get": {
        "description": "Retrieves Xero organisation details",
        "summary": "getOrganisations",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOrganisations",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Organisation array with all Organisation",
            "schema": {
              "$ref": "#/definitions/Organisations"
            },
            "examples": {
              "application/json": {
                "Id": "27b7a645-a3ee-43c8-b2c6-a2fa7b84c8c5",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552404447003)/",
                "Organisations": [
                  {
                    "APIKey": "CTJ60UH519MXQIXEJSDPDALS3EOZ5Y",
                    "Name": "Dev Evangelist - Sid Test 3 (NZ-2016-02)",
                    "LegalName": "Dev Evangelist - Sid Test 3 (NZ-2016-02)",
                    "PaysTax": true,
                    "Version": "NZ",
                    "OrganisationType": "COMPANY",
                    "BaseCurrency": "NZD",
                    "CountryCode": "NZ",
                    "IsDemoCompany": false,
                    "OrganisationStatus": "ACTIVE",
                    "TaxNumber": "071-138-054",
                    "FinancialYearEndDay": 31,
                    "FinancialYearEndMonth": 3,
                    "SalesTaxBasis": "PAYMENTS",
                    "SalesTaxPeriod": "TWOMONTHS",
                    "DefaultSalesTax": "Tax Exclusive",
                    "DefaultPurchasesTax": "Tax Exclusive",
                    "PeriodLockDate": "/Date(1546214400000+0000)/",
                    "EndOfYearLockDate": "/Date(1546214400000+0000)/",
                    "CreatedDateUTC": "/Date(1455827393000)/",
                    "OrganisationEntityType": "COMPANY",
                    "Timezone": "NEWZEALANDSTANDARDTIME",
                    "ShortCode": "!mBdtL",
                    "OrganisationID": "b2c885a9-4bb9-4a00-9b6e-6c2bf60b1a2b",
                    "Edition": "BUSINESS",
                    "Class": "PREMIUM",
                    "Addresses": [],
                    "Phones": [],
                    "ExternalLinks": [],
                    "PaymentTerms": {}
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      }
    },
    "/Organisation/Actions": {
      "get": {
        "description": "Retrieves a list of the key actions your app has permission to perform in the connected Xero organisation.",
        "summary": "getOrganisationActions",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOrganisationActions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Actions array with all key actions",
            "schema": {
              "$ref": "#/definitions/Actions"
            },
            "examples": {
              "application/json": {
                "Id": "f02c0dd1-1917-4d57-9853-997f6bcaf2bc",
                "Status": "OK",
                "ProviderName": "Java OA2 dev 01",
                "DateTimeUTC": "/Date(1602883301013)/",
                "Actions": [
                  {
                    "Name": "CreateApprovedInvoice",
                    "Status": "ALLOWED"
                  },
                  {
                    "Name": "CreateDraftPurchaseOrder",
                    "Status": "ALLOWED"
                  },
                  {
                    "Name": "CreateApprovedBill",
                    "Status": "ALLOWED"
                  },
                  {
                    "Name": "AttachFilesIntoInvoice",
                    "Status": "ALLOWED"
                  },
                  {
                    "Name": "UseMulticurrency",
                    "Status": "ALLOWED"
                  },
                  {
                    "Name": "CreateDraftInvoice",
                    "Status": "ALLOWED"
                  },
                  {
                    "Name": "CreateRepeatingInvoice",
                    "Status": "ALLOWED"
                  },
                  {
                    "Name": "CreateRepeatingBill",
                    "Status": "ALLOWED"
                  },
                  {
                    "Name": "CreateSentQuote",
                    "Status": "ALLOWED"
                  },
                  {
                    "Name": "CreateInvoicePayment",
                    "Status": "ALLOWED"
                  },
                  {
                    "Name": "CreateApprovedPurchaseOrder",
                    "Status": "ALLOWED"
                  },
                  {
                    "Name": "CreateDraftQuote",
                    "Status": "ALLOWED"
                  },
                  {
                    "Name": "CreateDraftBill",
                    "Status": "ALLOWED"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      }
    },
    "/Organisation/{OrganisationID}/CISSettings": {
      "get": {
        "description": "Retrieves the CIS settings for the Xero organistaion.",
        "summary": "getOrganisationCISSettings",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOrganisationCISSettings",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "OrganisationID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "The unique Xero identifier for an organisation"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Organisation array with specified Organisation",
            "schema": {
              "$ref": "#/definitions/CISOrgSettings"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      }
    },
    "/Overpayments": {
      "get": {
        "description": "Retrieves overpayments",
        "summary": "getOverpayments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOverpayments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 – Up to 100 overpayments will be returned in a single API call with line items shown for each overpayment"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Overpayments array with all Overpayments",
            "schema": {
              "$ref": "#/definitions/Overpayments"
            },
            "examples": {
              "application/json": {
                "Id": "c0ce675e-e5bc-4b2a-a20e-76a9eaedf89d",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552428951416)/",
                "Overpayments": [
                  {
                    "OverpaymentID": "098b4dcb-5622-4699-87f8-9d40c4ccceb3",
                    "ID": "098b4dcb-5622-4699-87f8-9d40c4ccceb3",
                    "Type": "SPEND-OVERPAYMENT",
                    "RemainingCredit": 500.0,
                    "Allocations": [],
                    "Payments": [],
                    "HasAttachments": false,
                    "Contact": {
                      "ContactID": "af3ffcc1-c578-4658-82f3-5d8d458cc7af",
                      "Name": "Daddy Warbucks",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-12T00:00:00",
                    "Date": "/Date(1552348800000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "NoTax",
                    "LineItems": [],
                    "SubTotal": 500.0,
                    "TotalTax": 0.0,
                    "Total": 500.0,
                    "UpdatedDateUTC": "/Date(1552428535123+0000)/",
                    "CurrencyCode": "NZD"
                  },
                  {
                    "OverpaymentID": "2a8bda49-8908-473b-8bcf-1f90990460eb",
                    "ID": "2a8bda49-8908-473b-8bcf-1f90990460eb",
                    "Type": "RECEIVE-OVERPAYMENT",
                    "RemainingCredit": 20.0,
                    "Allocations": [],
                    "Payments": [],
                    "HasAttachments": false,
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "Name": "Liam Gallagher",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-13T00:00:00",
                    "Date": "/Date(1552435200000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "NoTax",
                    "LineItems": [],
                    "SubTotal": 20.0,
                    "TotalTax": 0.0,
                    "Total": 20.0,
                    "UpdatedDateUTC": "/Date(1552428568250+0000)/",
                    "CurrencyCode": "NZD"
                  },
                  {
                    "OverpaymentID": "ed7f6041-c915-4667-bd1d-54c48e92161e",
                    "ID": "ed7f6041-c915-4667-bd1d-54c48e92161e",
                    "Type": "SPEND-OVERPAYMENT",
                    "RemainingCredit": 3000.0,
                    "Allocations": [],
                    "Payments": [],
                    "HasAttachments": false,
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "Name": "Liam Gallagher",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-12T00:00:00",
                    "Date": "/Date(1552348800000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "NoTax",
                    "LineItems": [],
                    "SubTotal": 3000.0,
                    "TotalTax": 0.0,
                    "Total": 3000.0,
                    "UpdatedDateUTC": "/Date(1552428781527+0000)/",
                    "CurrencyCode": "NZD"
                  },
                  {
                    "OverpaymentID": "0859adbc-ea00-40cd-a877-258cf8644975",
                    "ID": "0859adbc-ea00-40cd-a877-258cf8644975",
                    "Type": "RECEIVE-OVERPAYMENT",
                    "RemainingCredit": 20.0,
                    "Allocations": [],
                    "Payments": [],
                    "HasAttachments": false,
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "Name": "Liam Gallagher",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-13T00:00:00",
                    "Date": "/Date(1552435200000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "NoTax",
                    "LineItems": [],
                    "SubTotal": 20.0,
                    "TotalTax": 0.0,
                    "Total": 20.0,
                    "UpdatedDateUTC": "/Date(1552428842190+0000)/",
                    "CurrencyCode": "NZD"
                  },
                  {
                    "OverpaymentID": "687b877f-634a-415d-92b2-74e62977de30",
                    "ID": "687b877f-634a-415d-92b2-74e62977de30",
                    "Type": "RECEIVE-OVERPAYMENT",
                    "RemainingCredit": 20.0,
                    "Allocations": [],
                    "Payments": [],
                    "HasAttachments": false,
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "Name": "Liam Gallagher",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-13T00:00:00",
                    "Date": "/Date(1552435200000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "NoTax",
                    "LineItems": [],
                    "SubTotal": 20.0,
                    "TotalTax": 0.0,
                    "Total": 20.0,
                    "UpdatedDateUTC": "/Date(1552428950730+0000)/",
                    "CurrencyCode": "NZD"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/Overpayments/{OverpaymentID}": {
      "get": {
        "description": "Retrieves a specific overpayment using a unique overpayment Id",
        "summary": "getOverpayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOverpayment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "OverpaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Overpayment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Overpayments array with specified Overpayments",
            "schema": {
              "$ref": "#/definitions/Overpayments"
            },
            "examples": {
              "application/json": {
                "Id": "46c9e8e2-9410-4e75-9297-f0ca8fa76c32",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1553278835158)/",
                "Overpayments": [
                  {
                    "OverpaymentID": "ed7f6041-c915-4667-bd1d-54c48e92161e",
                    "ID": "ed7f6041-c915-4667-bd1d-54c48e92161e",
                    "CurrencyRate": 1.0,
                    "Type": "SPEND-OVERPAYMENT",
                    "RemainingCredit": 2999.0,
                    "Allocations": [
                      {
                        "Amount": 1.0,
                        "Date": "/Date(1552348800000+0000)/",
                        "Invoice": {
                          "InvoiceID": "c45720a1-ade3-4a38-a064-d15489be6841",
                          "InvoiceNumber": "",
                          "Payments": [],
                          "CreditNotes": [],
                          "Prepayments": [],
                          "Overpayments": [],
                          "HasErrors": false,
                          "IsDiscounted": false,
                          "LineItems": []
                        }
                      }
                    ],
                    "Payments": [],
                    "HasAttachments": true,
                    "Attachments": [
                      {
                        "AttachmentID": "247dd942-5245-47a7-adb1-4d9ea075b431",
                        "FileName": "giphy.gif",
                        "Url": "https://api.xero.com/api.xro/2.0/banktransaction/ed7f6041-c915-4667-bd1d-54c48e92161e/Attachments/giphy.gif",
                        "MimeType": "image/gif",
                        "ContentLength": 495727
                      }
                    ],
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "EmailAddress": "liam@rockstar.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": "",
                          "AttentionTo": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1551747281053+0000)/",
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-12T00:00:00",
                    "Date": "/Date(1552348800000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "NoTax",
                    "LineItems": [
                      {
                        "Description": "Broken TV deposit",
                        "UnitAmount": 3000.0,
                        "TaxType": "NONE",
                        "TaxAmount": 0.0,
                        "LineAmount": 3000.0,
                        "AccountCode": "800",
                        "Tracking": [],
                        "Quantity": 1.0,
                        "DiscountEnteredAsPercent": true,
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 3000.0,
                    "TotalTax": 0.0,
                    "Total": 3000.0,
                    "UpdatedDateUTC": "/Date(1552428952890+0000)/",
                    "CurrencyCode": "NZD"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/Overpayments/{OverpaymentID}/Allocations": {
      "put": {
        "description": "Creates a single allocation for a specific overpayment",
        "summary": "createOverpaymentAllocations",
        "tags": [
          "Accounting"
        ],
        "operationId": "createOverpaymentAllocations",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "OverpaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Overpayment"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Allocations array with Allocation object in body of request",
            "schema": {
              "$ref": "#/definitions/Allocations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Allocations array with all Allocation for Overpayments",
            "schema": {
              "$ref": "#/definitions/Allocations"
            },
            "examples": {
              "application/json": {
                "Id": "3b7f7be2-384a-4703-bcfb-c56e9116c914",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552428952968)/",
                "Allocations": [
                  {
                    "Amount": 1.0,
                    "Date": "/Date(1552348800000+0000)/",
                    "Invoice": {
                      "InvoiceID": "c45720a1-ade3-4a38-a064-d15489be6841",
                      "Payments": [],
                      "CreditNotes": [],
                      "Prepayments": [],
                      "Overpayments": [],
                      "HasErrors": false,
                      "IsDiscounted": false,
                      "LineItems": [],
                      "ValidationErrors": []
                    },
                    "Overpayment": {
                      "OverpaymentID": "ed7f6041-c915-4667-bd1d-54c48e92161e",
                      "ID": "ed7f6041-c915-4667-bd1d-54c48e92161e",
                      "LineItems": []
                    },
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Overpayments/{OverpaymentID}/History": {
      "get": {
        "description": "Retrieves history records of a specific overpayment",
        "summary": "getOverpaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOverpaymentHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "OverpaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Overpayment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific overpayment",
        "summary": "createOverpaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createOverpaymentHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "OverpaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Overpayment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error - API is not able to create HistoryRecord for Overpayments",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "ErrorNumber": 10,
                "Type": "ValidationException",
                "Message": "A validation exception occurred",
                "Elements": [
                  {
                    "DateUTCString": "2019-03-12T22:30:13",
                    "DateUTC": "/Date(1552429813667)/",
                    "Details": "Hello World",
                    "ValidationErrors": [
                      {
                        "Message": "The document with the supplied id was not found for this endpoint."
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Payments": {
      "get": {
        "description": "Retrieves payments for invoices and credit notes",
        "summary": "getPayments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPayments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Up to 100 payments will be returned in a single API call"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Payments array for all Payments",
            "schema": {
              "$ref": "#/definitions/Payments"
            },
            "examples": {
              "application/json": {
                "Id": "9f310473-e1b5-4704-a25c-eec653deb596",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552431874205)/",
                "Payments": [
                  {
                    "PaymentID": "99ea7f6b-c513-4066-bc27-b7c65dcd76c2",
                    "BatchPaymentID": "b54aa50c-794c-461b-89d1-846e1b84d9c0",
                    "BatchPayment": {
                      "Account": {
                        "AccountID": "5690f1e8-1d02-4893-90c2-ee1a69eff942"
                      },
                      "BatchPaymentID": "b54aa50c-794c-461b-89d1-846e1b84d9c0",
                      "Date": "/Date(1552521600000+0000)/",
                      "Type": "RECBATCH",
                      "Status": "AUTHORISED",
                      "TotalAmount": "50.00",
                      "UpdatedDateUTC": "/Date(1541176592690+0000)/",
                      "IsReconciled": "false"
                    },
                    "Date": "/Date(1543449600000+0000)/",
                    "BankAmount": 46.0,
                    "Amount": 46.0,
                    "Reference": "",
                    "CurrencyRate": 1.0,
                    "PaymentType": "ACCRECPAYMENT",
                    "Status": "AUTHORISED",
                    "UpdatedDateUTC": "/Date(1541176592690+0000)/",
                    "HasAccount": true,
                    "IsReconciled": false,
                    "Account": {
                      "AccountID": "5690f1e8-1d02-4893-90c2-ee1a69eff942",
                      "Code": "970"
                    },
                    "Invoice": {
                      "Type": "ACCREC",
                      "InvoiceID": "046d8a6d-1ae1-4b4d-9340-5601bdf41b87",
                      "InvoiceNumber": "INV-0002",
                      "Payments": [],
                      "CreditNotes": [],
                      "Prepayments": [],
                      "Overpayments": [],
                      "HasErrors": false,
                      "IsDiscounted": false,
                      "Contact": {
                        "ContactID": "a3675fc4-f8dd-4f03-ba5b-f1870566bcd7",
                        "ContactNumber": "",
                        "Name": "Barney Rubble-83203",
                        "Addresses": [],
                        "Phones": [],
                        "ContactGroups": [],
                        "ContactPersons": [],
                        "HasValidationErrors": false
                      },
                      "LineItems": [],
                      "CurrencyCode": "NZD"
                    },
                    "HasValidationErrors": false
                  },
                  {
                    "PaymentID": "6b037c9b-2e5d-4905-84d3-eabfb3438242",
                    "Date": "/Date(1552521600000+0000)/",
                    "BankAmount": 2.0,
                    "Amount": 2.0,
                    "Reference": "Too much",
                    "CurrencyRate": 1.0,
                    "PaymentType": "ARCREDITPAYMENT",
                    "Status": "AUTHORISED",
                    "UpdatedDateUTC": "/Date(1551812346173+0000)/",
                    "HasAccount": true,
                    "IsReconciled": false,
                    "Account": {
                      "AccountID": "136ebd08-60ea-4592-8982-be92c153b53a",
                      "Code": "980"
                    },
                    "Invoice": {
                      "Type": "ACCRECCREDIT",
                      "InvoiceID": "249f15fa-f2a7-4acc-8769-0984103f2225",
                      "InvoiceNumber": "CN-0005",
                      "Payments": [],
                      "CreditNotes": [],
                      "Prepayments": [],
                      "Overpayments": [],
                      "HasErrors": false,
                      "IsDiscounted": false,
                      "Contact": {
                        "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                        "ContactNumber": "",
                        "Name": "Liam Gallagher",
                        "Addresses": [],
                        "Phones": [],
                        "ContactGroups": [],
                        "ContactPersons": [],
                        "HasValidationErrors": false
                      },
                      "LineItems": [],
                      "CurrencyCode": "NZD"
                    },
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates multiple payments for invoices or credit notes",
        "summary": "createPayments",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPayments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Payments array with Payment object in body of request",
            "schema": {
              "$ref": "#/definitions/Payments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Payments array for newly created Payment",
            "schema": {
              "$ref": "#/definitions/Payments"
            },
            "examples": {
              "application/json": {
                "Id": "83b5715a-6a77-4c16-b5b8-2da08b5fde44",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552432238716)/",
                "Payments": [
                  {
                    "PaymentID": "61ed71fc-01bf-4eb8-8419-8a18789ff45f",
                    "Date": "/Date(1552348800000+0000)/",
                    "BankAmount": 1.0,
                    "Amount": 1.0,
                    "CurrencyRate": 1.0,
                    "PaymentType": "ACCRECPAYMENT",
                    "Status": "AUTHORISED",
                    "UpdatedDateUTC": "/Date(1552432238623+0000)/",
                    "HasAccount": true,
                    "IsReconciled": false,
                    "Account": {
                      "AccountID": "5690f1e8-1d02-4893-90c2-ee1a69eff942",
                      "Code": "970",
                      "Name": "Owner A Funds Introduced"
                    },
                    "Invoice": {
                      "Type": "ACCREC",
                      "InvoiceID": "c7c37b83-ac95-45ea-88ba-8ad83a5f22fe",
                      "InvoiceNumber": "INV-0004",
                      "Reference": "",
                      "Prepayments": [],
                      "Overpayments": [],
                      "AmountDue": 229.0,
                      "AmountPaid": 1.0,
                      "SentToContact": false,
                      "CurrencyRate": 1.0,
                      "HasErrors": false,
                      "IsDiscounted": false,
                      "Contact": {
                        "ContactID": "a3675fc4-f8dd-4f03-ba5b-f1870566bcd7",
                        "Name": "Barney Rubble-83203",
                        "ContactPersons": [],
                        "HasValidationErrors": false
                      },
                      "DateString": "2018-10-10T00:00:00",
                      "Date": "/Date(1539129600000+0000)/",
                      "DueDateString": "2018-10-18T00:00:00",
                      "DueDate": "/Date(1539820800000+0000)/",
                      "Status": "AUTHORISED",
                      "LineAmountTypes": "Exclusive",
                      "LineItems": [
                        {
                          "Description": "boo",
                          "UnitAmount": 200.0,
                          "TaxType": "OUTPUT2",
                          "TaxAmount": 30.0,
                          "LineAmount": 200.0,
                          "AccountCode": "200",
                          "Tracking": [],
                          "Quantity": 1.0,
                          "LineItemID": "173dfdb9-43b5-4bd2-ae25-9419e662a3a7",
                          "ValidationErrors": []
                        }
                      ],
                      "SubTotal": 200.0,
                      "TotalTax": 30.0,
                      "Total": 230.0,
                      "UpdatedDateUTC": "/Date(1552432238623+0000)/",
                      "CurrencyCode": "NZD"
                    },
                    "HasValidationErrors": true,
                    "ValidationErrors": [
                      {
                        "Message": "Payment amount exceeds the amount outstanding on this document"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      },
      "post": {
        "description": "Creates a single payment for invoice or credit notes",
        "summary": "createPayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPayment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Request body with a single Payment object",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Payments array for newly created Payment",
            "schema": {
              "$ref": "#/definitions/Payments"
            },
            "examples": {
              "application/json": {
                "Id": "83b5715a-6a77-4c16-b5b8-2da08b5fde44",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552432238716)/",
                "Payments": [
                  {
                    "PaymentID": "61ed71fc-01bf-4eb8-8419-8a18789ff45f",
                    "Date": "/Date(1552348800000+0000)/",
                    "BankAmount": 1.0,
                    "Amount": 1.0,
                    "CurrencyRate": 1.0,
                    "PaymentType": "ACCRECPAYMENT",
                    "Status": "AUTHORISED",
                    "UpdatedDateUTC": "/Date(1552432238623+0000)/",
                    "HasAccount": true,
                    "IsReconciled": false,
                    "Account": {
                      "AccountID": "5690f1e8-1d02-4893-90c2-ee1a69eff942",
                      "Code": "970",
                      "Name": "Owner A Funds Introduced"
                    },
                    "Invoice": {
                      "Type": "ACCREC",
                      "InvoiceID": "c7c37b83-ac95-45ea-88ba-8ad83a5f22fe",
                      "InvoiceNumber": "INV-0004",
                      "Reference": "",
                      "Prepayments": [],
                      "Overpayments": [],
                      "AmountDue": 229.0,
                      "AmountPaid": 1.0,
                      "SentToContact": false,
                      "CurrencyRate": 1.0,
                      "HasErrors": false,
                      "IsDiscounted": false,
                      "Contact": {
                        "ContactID": "a3675fc4-f8dd-4f03-ba5b-f1870566bcd7",
                        "Name": "Barney Rubble-83203",
                        "ContactPersons": [],
                        "HasValidationErrors": false
                      },
                      "DateString": "2018-10-10T00:00:00",
                      "Date": "/Date(1539129600000+0000)/",
                      "DueDateString": "2018-10-18T00:00:00",
                      "DueDate": "/Date(1539820800000+0000)/",
                      "Status": "AUTHORISED",
                      "LineAmountTypes": "Exclusive",
                      "LineItems": [
                        {
                          "Description": "boo",
                          "UnitAmount": 200.0,
                          "TaxType": "OUTPUT2",
                          "TaxAmount": 30.0,
                          "LineAmount": 200.0,
                          "AccountCode": "200",
                          "Tracking": [],
                          "Quantity": 1.0,
                          "LineItemID": "173dfdb9-43b5-4bd2-ae25-9419e662a3a7",
                          "ValidationErrors": []
                        }
                      ],
                      "SubTotal": 200.0,
                      "TotalTax": 30.0,
                      "Total": 230.0,
                      "UpdatedDateUTC": "/Date(1552432238623+0000)/",
                      "CurrencyCode": "NZD"
                    },
                    "HasValidationErrors": true,
                    "ValidationErrors": [
                      {
                        "Message": "Payment amount exceeds the amount outstanding on this document"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Payments/{PaymentID}": {
      "get": {
        "description": "Retrieves a specific payment for invoices and credit notes using a unique payment Id",
        "summary": "getPayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPayment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Payment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Payments array for specified Payment",
            "schema": {
              "$ref": "#/definitions/Payments"
            },
            "examples": {
              "application/json": {
                "Id": "4876f9ee-3a17-47d8-8c1b-84377c8f2998",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552431874852)/",
                "Payments": [
                  {
                    "PaymentID": "99ea7f6b-c513-4066-bc27-b7c65dcd76c2",
                    "BatchPaymentID": "b54aa50c-794c-461b-89d1-846e1b84d9c0",
                    "BatchPayment": {
                      "Account": {
                        "AccountID": "5690f1e8-1d02-4893-90c2-ee1a69eff942"
                      },
                      "BatchPaymentID": "b54aa50c-794c-461b-89d1-846e1b84d9c0",
                      "Date": "/Date(1543449600000+0000)/",
                      "Type": "RECBATCH",
                      "Status": "AUTHORISED",
                      "TotalAmount": "50.00",
                      "UpdatedDateUTC": "/Date(1541176592690+0000)/",
                      "IsReconciled": "false"
                    },
                    "Date": "/Date(1543449600000+0000)/",
                    "BankAmount": 46.0,
                    "Amount": 46.0,
                    "CurrencyRate": 1.0,
                    "PaymentType": "ACCRECPAYMENT",
                    "Status": "AUTHORISED",
                    "UpdatedDateUTC": "/Date(1541176592690+0000)/",
                    "HasAccount": true,
                    "IsReconciled": false,
                    "Account": {
                      "AccountID": "5690f1e8-1d02-4893-90c2-ee1a69eff942",
                      "Code": "970",
                      "Name": "Owner A Funds Introduced"
                    },
                    "Invoice": {
                      "Type": "ACCREC",
                      "InvoiceID": "046d8a6d-1ae1-4b4d-9340-5601bdf41b87",
                      "InvoiceNumber": "INV-0002",
                      "Reference": "Red Fish, Blue Fish",
                      "Payments": [
                        {
                          "PaymentID": "99ea7f6b-c513-4066-bc27-b7c65dcd76c2",
                          "Date": "/Date(1543449600000+0000)/",
                          "Amount": 46.0,
                          "CurrencyRate": 1.0,
                          "HasAccount": false,
                          "HasValidationErrors": false
                        }
                      ],
                      "Prepayments": [],
                      "Overpayments": [],
                      "AmountDue": 0.0,
                      "AmountPaid": 46.0,
                      "SentToContact": true,
                      "CurrencyRate": 1.0,
                      "HasErrors": false,
                      "IsDiscounted": false,
                      "Contact": {
                        "ContactID": "a3675fc4-f8dd-4f03-ba5b-f1870566bcd7",
                        "Name": "Barney Rubble-83203",
                        "ContactPersons": [],
                        "HasValidationErrors": false
                      },
                      "DateString": "2018-10-20T00:00:00",
                      "Date": "/Date(1539993600000+0000)/",
                      "DueDateString": "2018-12-30T00:00:00",
                      "DueDate": "/Date(1546128000000+0000)/",
                      "Status": "PAID",
                      "LineAmountTypes": "Exclusive",
                      "LineItems": [
                        {
                          "Description": "Acme Tires",
                          "UnitAmount": 20.0,
                          "TaxType": "OUTPUT2",
                          "TaxAmount": 6.0,
                          "LineAmount": 40.0,
                          "AccountCode": "200",
                          "Tracking": [],
                          "Quantity": 2.0,
                          "LineItemID": "878d1688-a905-4866-ae91-5a772c2540c7",
                          "ValidationErrors": []
                        }
                      ],
                      "SubTotal": 40.0,
                      "TotalTax": 6.0,
                      "Total": 46.0,
                      "UpdatedDateUTC": "/Date(1541176592690+0000)/",
                      "CurrencyCode": "NZD",
                      "FullyPaidOnDate": "/Date(1543449600000+0000)/"
                    },
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific payment for invoices and credit notes",
        "summary": "deletePayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "deletePayment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Payment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentDelete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Payments array for updated Payment",
            "schema": {
              "$ref": "#/definitions/Payments"
            },
            "examples": {
              "application/json": {
                "Id": "ee23328c-4a8b-4ee7-8fb6-9796ffab9cb0",
                "Status": "OK",
                "ProviderName": "provider-name",
                "DateTimeUTC": "/Date(1583945852489)/",
                "Payments": [
                  {
                    "PaymentID": "c94c996b-1ab3-4ff3-ad19-1cdc77f30817",
                    "Date": "/Date(1567382400000+0000)/",
                    "BankAmount": 2.0,
                    "Amount": 2.0,
                    "Reference": "foobar",
                    "CurrencyRate": 1.0,
                    "PaymentType": "APCREDITPAYMENT",
                    "Status": "DELETED",
                    "UpdatedDateUTC": "/Date(1583945852373+0000)/",
                    "HasAccount": true,
                    "IsReconciled": false,
                    "Account": {
                      "AccountID": "57f261f0-e32d-4a7f-be82-22cd992c6367",
                      "Code": "033",
                      "Name": "Checking account"
                    },
                    "Invoice": {
                      "Type": "ACCPAYCREDIT",
                      "InvoiceID": "dba68ebc-c05a-4e2d-b97d-964349e5b8d6",
                      "InvoiceNumber": "",
                      "Reference": "",
                      "Prepayments": [],
                      "Overpayments": [],
                      "AmountDue": 22.0,
                      "AmountPaid": 0.0,
                      "SentToContact": false,
                      "CurrencyRate": 1.0,
                      "IsDiscounted": false,
                      "HasErrors": false,
                      "Contact": {
                        "ContactID": "216830cb-9a68-487e-928b-c1a7ccc4fc81",
                        "Name": "FooBar73005",
                        "ContactPersons": [],
                        "HasValidationErrors": false
                      },
                      "DateString": "2017-01-02T00:00:00",
                      "Date": "/Date(1483315200000+0000)/",
                      "Status": "AUTHORISED",
                      "LineAmountTypes": "Exclusive",
                      "LineItems": [
                        {
                          "Description": "Sample Item72716",
                          "UnitAmount": 20.0,
                          "TaxType": "INPUT",
                          "TaxAmount": 2.0,
                          "LineAmount": 20.0,
                          "AccountCode": "400",
                          "Tracking": [],
                          "Quantity": 1.0,
                          "ValidationErrors": []
                        }
                      ],
                      "SubTotal": 20.0,
                      "TotalTax": 2.0,
                      "Total": 22.0,
                      "UpdatedDateUTC": "/Date(1583945852363+0000)/",
                      "CurrencyCode": "AUD"
                    },
                    "HasValidationErrors": false
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Payments/{PaymentID}/History": {
      "get": {
        "description": "Retrieves history records of a specific payment",
        "summary": "getPaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPaymentHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Payment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific payment",
        "summary": "createPaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPaymentHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Payment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error - API is not able to create HistoryRecord for Payments",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "ErrorNumber": 10,
                "Type": "ValidationException",
                "Message": "A validation exception occurred",
                "Elements": [
                  {
                    "DateUTCString": "2019-03-12T22:30:13",
                    "DateUTC": "/Date(1552429813667)/",
                    "Details": "Hello World",
                    "ValidationErrors": [
                      {
                        "Message": "The document with the supplied id was not found for this endpoint."
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/PaymentServices": {
      "get": {
        "description": "Retrieves payment services",
        "summary": "getPaymentServices",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPaymentServices",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PaymentServices array for all PaymentService",
            "schema": {
              "$ref": "#/definitions/PaymentServices"
            },
            "examples": {
              "application/json": {
                "Id": "ab82a7dd-5070-4e82-b841-0af52909fe04",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552488713171)/",
                "PaymentServices": [
                  {
                    "PaymentServiceID": "54b3b4f6-0443-4fba-bcd1-61ec0c35ca55",
                    "PaymentServiceName": "PayUpNow",
                    "PaymentServiceUrl": "https://www.payupnow.com/",
                    "PaymentServiceType": "Custom",
                    "PayNowText": "Time To Pay"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "paymentservices"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a payment service",
        "summary": "createPaymentService",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPaymentService",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "PaymentServices array with PaymentService object in body of request",
            "schema": {
              "$ref": "#/definitions/PaymentServices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PaymentServices array for newly created PaymentService",
            "schema": {
              "$ref": "#/definitions/PaymentServices"
            },
            "examples": {
              "application/json": {
                "Id": "7ed8b3c0-2155-49ee-a583-f2dce6607dfb",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552488712813)/",
                "PaymentServices": [
                  {
                    "PaymentServiceID": "54b3b4f6-0443-4fba-bcd1-61ec0c35ca55",
                    "PaymentServiceName": "PayUpNow",
                    "PaymentServiceUrl": "https://www.payupnow.com/",
                    "PaymentServiceType": "Custom",
                    "PayNowText": "Time To Pay",
                    "ValidationErrors": [
                      {
                        "Message": "Payment service could not be found"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "paymentservices"
            ]
          }
        ]
      }
    },
    "/Prepayments": {
      "get": {
        "description": "Retrieves prepayments",
        "summary": "getPrepayments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPrepayments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 – Up to 100 prepayments will be returned in a single API call with line items shown for each overpayment"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Prepayments array for all Prepayment",
            "schema": {
              "$ref": "#/definitions/Prepayments"
            },
            "examples": {
              "application/json": {
                "Id": "d7a9ca0c-6159-4c26-ad2e-715440c50b7d",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552489227595)/",
                "Prepayments": [
                  {
                    "PrepaymentID": "ce0cddef-cf5a-4e59-b638-f225679115a7",
                    "ID": "ce0cddef-cf5a-4e59-b638-f225679115a7",
                    "Type": "RECEIVE-PREPAYMENT",
                    "Reference": "INV-0011",
                    "RemainingCredit": 3450.0,
                    "Allocations": [],
                    "Payments": [],
                    "HasAttachments": true,
                    "Contact": {
                      "ContactID": "be392c72-c121-4f83-9512-03ac71e54c20",
                      "Name": "Luke Skywalker",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-13T00:00:00",
                    "Date": "/Date(1552435200000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [],
                    "SubTotal": 3000.0,
                    "TotalTax": 450.0,
                    "Total": 3450.0,
                    "UpdatedDateUTC": "/Date(1552489187730+0000)/",
                    "CurrencyCode": "NZD"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/Prepayments/{PrepaymentID}": {
      "get": {
        "description": "Allows you to retrieve a specified prepayments",
        "summary": "getPrepayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPrepayment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PrepaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a PrePayment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Prepayments array for a specified Prepayment",
            "schema": {
              "$ref": "#/definitions/Prepayments"
            },
            "examples": {
              "application/json": {
                "Id": "18e5f578-ef28-4096-a7aa-d06d65574b99",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1553540376847)/",
                "Prepayments": [
                  {
                    "PrepaymentID": "ce0cddef-cf5a-4e59-b638-f225679115a7",
                    "ID": "ce0cddef-cf5a-4e59-b638-f225679115a7",
                    "CurrencyRate": 1.0,
                    "Type": "RECEIVE-PREPAYMENT",
                    "Reference": "INV-0011",
                    "RemainingCredit": 3449.0,
                    "Allocations": [
                      {
                        "Amount": 1.0,
                        "Date": "/Date(1552435200000+0000)/",
                        "Invoice": {
                          "InvoiceID": "c7c37b83-ac95-45ea-88ba-8ad83a5f22fe",
                          "InvoiceNumber": "INV-0004",
                          "Payments": [],
                          "CreditNotes": [],
                          "Prepayments": [],
                          "Overpayments": [],
                          "HasErrors": false,
                          "IsDiscounted": false,
                          "LineItems": []
                        }
                      }
                    ],
                    "Payments": [],
                    "HasAttachments": true,
                    "Attachments": [
                      {
                        "AttachmentID": "2ca06aa0-3629-474a-9401-553d4b7fa9b0",
                        "FileName": "giphy.gif",
                        "Url": "https://api.xero.com/api.xro/2.0/banktransaction/ce0cddef-cf5a-4e59-b638-f225679115a7/Attachments/giphy.gif",
                        "MimeType": "image/gif",
                        "ContentLength": 495727
                      }
                    ],
                    "Contact": {
                      "ContactID": "be392c72-c121-4f83-9512-03ac71e54c20",
                      "ContactStatus": "ACTIVE",
                      "Name": "Luke Skywalker",
                      "EmailAddress": "",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1552329691573+0000)/",
                      "ContactGroups": [],
                      "DefaultCurrency": "NZD",
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "DateString": "2019-03-13T00:00:00",
                    "Date": "/Date(1552435200000+0000)/",
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "Light Speeder",
                        "UnitAmount": 3000.0,
                        "TaxType": "OUTPUT2",
                        "TaxAmount": 450.0,
                        "LineAmount": 3000.0,
                        "AccountCode": "200",
                        "Tracking": [],
                        "Quantity": 1.0,
                        "DiscountEnteredAsPercent": true,
                        "ValidationErrors": []
                      }
                    ],
                    "SubTotal": 3000.0,
                    "TotalTax": 450.0,
                    "Total": 3450.0,
                    "UpdatedDateUTC": "/Date(1552522424850+0000)/",
                    "CurrencyCode": "NZD"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/Prepayments/{PrepaymentID}/Allocations": {
      "put": {
        "description": "Allows you to create an Allocation for prepayments",
        "summary": "createPrepaymentAllocations",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPrepaymentAllocations",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PrepaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a PrePayment"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Allocations with an array of Allocation object in body of request",
            "schema": {
              "$ref": "#/definitions/Allocations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Allocations array of Allocation for all Prepayment",
            "schema": {
              "$ref": "#/definitions/Allocations"
            },
            "examples": {
              "application/json": {
                "Id": "d4758808-d14d-45d5-851a-52787ae5739a",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552522424927)/",
                "Allocations": [
                  {
                    "Amount": 1.0,
                    "Date": "/Date(1552435200000+0000)/",
                    "Invoice": {
                      "InvoiceID": "c7c37b83-ac95-45ea-88ba-8ad83a5f22fe",
                      "Payments": [],
                      "CreditNotes": [],
                      "Prepayments": [],
                      "Overpayments": [],
                      "HasErrors": false,
                      "IsDiscounted": false,
                      "LineItems": [],
                      "ValidationErrors": []
                    },
                    "Prepayment": {
                      "PrepaymentID": "ce0cddef-cf5a-4e59-b638-f225679115a7",
                      "ID": "ce0cddef-cf5a-4e59-b638-f225679115a7",
                      "LineItems": []
                    },
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Prepayments/{PrepaymentID}/History": {
      "get": {
        "description": "Retrieves history record for a specific prepayment",
        "summary": "getPrepaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPrepaymentHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PrepaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a PrePayment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific prepayment",
        "summary": "createPrepaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPrepaymentHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PrepaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a PrePayment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Unsupported - return response incorrect exception, API is not able to create HistoryRecord for Expense Claims",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "ErrorNumber": 10,
                "Type": "ValidationException",
                "Message": "A validation exception occurred",
                "Elements": [
                  {
                    "DateUTCString": "2019-03-14T00:15:35",
                    "DateUTC": "/Date(1552522535440)/",
                    "Details": "Hello World",
                    "ValidationErrors": [
                      {
                        "Message": "The document with the supplied id was not found for this endpoint."
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/PurchaseOrders": {
      "get": {
        "description": "Retrieves purchase orders",
        "summary": "getPurchaseOrders",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPurchaseOrders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "enum": [
              "DRAFT",
              "SUBMITTED",
              "AUTHORISED",
              "BILLED",
              "DELETED"
            ],
            "type": "string",
            "description": "Filter by purchase order status"
          },
          {
            "name": "DateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by purchase order date (e.g. GET https://.../PurchaseOrders?DateFrom=2015-12-01&DateTo=2015-12-31"
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by purchase order date (e.g. GET https://.../PurchaseOrders?DateFrom=2015-12-01&DateTo=2015-12-31"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "To specify a page, append the page parameter to the URL e.g. ?page=1. If there are 100 records in the response you will need to check if there is any more data by fetching the next page e.g ?page=2 and continuing this process until no more results are returned."
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PurchaseOrder array of all PurchaseOrder",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            },
            "examples": {
              "application/json": {
                "Id": "66910bfc-15cc-4692-bd4c-cc8f671e653c",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552523977238)/",
                "PurchaseOrders": [
                  {
                    "PurchaseOrderID": "f9627f0d-b715-4039-bb6a-96dc3eae5ec5",
                    "PurchaseOrderNumber": "PO-0001",
                    "DateString": "2019-03-12T00:00:00",
                    "Date": "/Date(1552348800000+0000)/",
                    "AttentionTo": "Jimmy",
                    "HasErrors": false,
                    "IsDiscounted": false,
                    "Type": "PURCHASEORDER",
                    "CurrencyRate": 1.0,
                    "CurrencyCode": "NZD",
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "Addresses": [
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1551747281053+0000)/",
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "Status": "DELETED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "TaxAmount": 0.0,
                        "LineAmount": 20.0,
                        "Tracking": [],
                        "Quantity": 1.0,
                        "LineItemID": "0f7b54b8-bfa4-4c5d-9c22-73dbd5796e54"
                      }
                    ],
                    "SubTotal": 20.0,
                    "TotalTax": 0.0,
                    "Total": 20.0,
                    "UpdatedDateUTC": "/Date(1552522703443+0000)/",
                    "HasAttachments": false
                  },
                  {
                    "PurchaseOrderID": "6afa2e02-c514-4964-ab89-b5c0179b8c50",
                    "PurchaseOrderNumber": "PO-0002",
                    "DateString": "2019-03-12T00:00:00",
                    "Date": "/Date(1552348800000+0000)/",
                    "AttentionTo": "Jimmy",
                    "HasErrors": false,
                    "IsDiscounted": false,
                    "Type": "PURCHASEORDER",
                    "CurrencyRate": 1.0,
                    "CurrencyCode": "NZD",
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "Addresses": [
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1551747281053+0000)/",
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "Status": "DELETED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "TaxAmount": 0.0,
                        "LineAmount": 20.0,
                        "Tracking": [],
                        "Quantity": 1.0,
                        "LineItemID": "3e4ec232-32b9-491b-84dd-48fb9aa8916f"
                      }
                    ],
                    "SubTotal": 20.0,
                    "TotalTax": 0.0,
                    "Total": 20.0,
                    "UpdatedDateUTC": "/Date(1552522834733+0000)/",
                    "HasAttachments": false
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates one or more purchase orders",
        "summary": "createPurchaseOrders",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPurchaseOrders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "PurchaseOrders with an array of PurchaseOrder object in body of request",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PurchaseOrder array for specified PurchaseOrder",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates or creates one or more purchase orders",
        "summary": "updateOrCreatePurchaseOrders",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateOrCreatePurchaseOrders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PurchaseOrder array for specified PurchaseOrder",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/PurchaseOrders/{PurchaseOrderID}/pdf": {
      "get": {
        "description": "Retrieves specific purchase order as PDF files using a unique purchase order Id",
        "summary": "getPurchaseOrderAsPdf",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPurchaseOrderAsPdf",
        "deprecated": false,
        "produces": [
          "application/pdf"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Purchase Order"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of byte array pdf version of specified Purchase Orders",
            "schema": {
              "default": ""
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/PurchaseOrders/{PurchaseOrderID}": {
      "get": {
        "description": "Retrieves a specific purchase order using a unique purchase order Id",
        "summary": "getPurchaseOrder",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPurchaseOrder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Purchase Order"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PurchaseOrder array for specified PurchaseOrder",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific purchase order",
        "summary": "updatePurchaseOrder",
        "tags": [
          "Accounting"
        ],
        "operationId": "updatePurchaseOrder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Purchase Order"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PurchaseOrder array for updated PurchaseOrder",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/PurchaseOrders/{PurchaseOrderNumber}": {
      "get": {
        "description": "Retrieves a specific purchase order using purchase order number",
        "summary": "getPurchaseOrderByNumber",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPurchaseOrderByNumber",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PurchaseOrderNumber",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique identifier for a PurchaseOrder"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PurchaseOrder array for specified PurchaseOrder",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/PurchaseOrders/{PurchaseOrderID}/History": {
      "get": {
        "description": "Retrieves history for a specific purchase order",
        "summary": "getPurchaseOrderHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPurchaseOrderHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Purchase Order"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific purchase orders",
        "summary": "createPurchaseOrderHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPurchaseOrderHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Purchase Order"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/PurchaseOrders/{PurchaseOrderID}/Attachments": {
      "get": {
        "description": "Retrieves attachments for a specific purchase order",
        "summary": "getPurchaseOrderAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPurchaseOrderAttachments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Purchase Order"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Purchase Orders",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "dfc29f55-8ddd-4921-a82c-bcc0798d207f",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1602100184437)/",
                "Attachments": [
                  {
                    "AttachmentID": "dce4eaa7-c8a9-4867-9434-95832b427d3b",
                    "FileName": "xero-dev1.png",
                    "Url": "https://api.xero.com/api.xro/2.0/PurchaseOrders/93369c9b-c481-4e21-aaab-bb19e9a26efe/Attachments/2D_2.png",
                    "MimeType": "image/png",
                    "ContentLength": 98715
                  },
                  {
                    "AttachmentID": "e58bd37b-e47f-451a-a42c-f946ef229c3e",
                    "FileName": "xero-dev2.png",
                    "Url": "https://api.xero.com/api.xro/2.0/PurchaseOrders/93369c9b-c481-4e21-aaab-bb19e9a26efe/Attachments/2D.png",
                    "MimeType": "image/png",
                    "ContentLength": 82529
                  },
                  {
                    "AttachmentID": "c8faa564-223f-45e4-a5a1-94430a5b52c1",
                    "FileName": "xero-dev3.png",
                    "Url": "https://api.xero.com/api.xro/2.0/PurchaseOrders/93369c9b-c481-4e21-aaab-bb19e9a26efe/Attachments/Screen%20Shot%202020-09-12%20at%204.31.14%20pm.png",
                    "MimeType": "image/png",
                    "ContentLength": 146384
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/PurchaseOrders/{PurchaseOrderID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Retrieves specific attachment for a specific purchase order using a unique attachment Id",
        "summary": "getPurchaseOrderAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPurchaseOrderAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Purchase Order"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Attachment object"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Account as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}": {
      "get": {
        "description": "Retrieves a specific attachment for a specific purchase order by filename",
        "summary": "getPurchaseOrder≠AttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPurchaseOrder≠AttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Purchase Order"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Purchase Order as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific attachment for a specific purchase order by filename",
        "summary": "updatePurchaseOrderAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updatePurchaseOrderAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Purchase Order"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "aeff9be0-54c2-45dd-8e3d-aa4f8af0fbd7",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1602100086197)/",
                "Attachments": [
                  {
                    "AttachmentID": "dce4eaa7-c8a9-4867-9434-95832b427d3b",
                    "FileName": "xero-dev.png",
                    "Url": "https://api.xero.com/api.xro/2.0/PurchaseOrders/93369c9b-c481-4e21-aaab-bb19e9a26efe/Attachments/2D_2.png",
                    "MimeType": "image/png",
                    "ContentLength": 98715
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates attachment for a specific purchase order",
        "summary": "createPurchaseOrderAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPurchaseOrderAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Purchase Order"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "c728a4a4-179e-4bbd-a2d5-63e7f9ceba92",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1602099934723)/",
                "Attachments": [
                  {
                    "AttachmentID": "e58bd37b-e47f-451a-a42c-f946ef229c3e",
                    "FileName": "xero-dev.png",
                    "Url": "https://api.xero.com/api.xro/2.0/PurchaseOrders/93369c9b-c481-4e21-aaab-bb19e9a26efe/Attachments/2D.png",
                    "MimeType": "image/png",
                    "ContentLength": 82529
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      }
    },
    "/Quotes": {
      "get": {
        "description": "Retrieves sales quotes",
        "summary": "getQuotes",
        "tags": [
          "Accounting"
        ],
        "operationId": "getQuotes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "DateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Filter for quotes after a particular date"
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Filter for quotes before a particular date"
          },
          {
            "name": "ExpiryDateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Filter for quotes expiring after a particular date"
          },
          {
            "name": "ExpiryDateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Filter for quotes before a particular date"
          },
          {
            "name": "ContactID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid",
            "description": "Filter for quotes belonging to a particular contact"
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter for quotes of a particular Status"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 – Up to 100 Quotes will be returned in a single API call with line items shown for each quote"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "QuoteNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by quote number (e.g. GET https://.../Quotes?QuoteNumber=QU-0001)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type quotes array with all quotes",
            "schema": {
              "$ref": "#/definitions/Quotes"
            },
            "examples": {
              "application/json": {
                "Id": "bb583e7e-9b6b-471e-88da-4cbfcfad7a57",
                "Status": "OK",
                "ProviderName": "Adams OAuth2 App",
                "DateTimeUTC": "/Date(1571876635477)/",
                "Quotes": [
                  {
                    "QuoteID": "be59294f-2a9c-4cee-8c64-0f0ddbc1883a",
                    "QuoteNumber": "QU-0001",
                    "Reference": "REF-123",
                    "Terms": "Not valid after the expiry date",
                    "Contact": {
                      "ContactID": "060816db-0ed7-44de-ab58-8fee9316fcd5",
                      "Name": "Adam"
                    },
                    "LineItems": [
                      {
                        "LineItemID": "ccf5e45c-73b6-4659-83e8-520f4c6126fd",
                        "AccountCode": "200",
                        "Description": "Fish out of Water",
                        "UnitAmount": 19.95,
                        "DiscountRate": 10.0,
                        "LineAmount": 17.96,
                        "ItemCode": "BOOK",
                        "Quantity": 1.0,
                        "TaxAmount": 2.69,
                        "TaxType": "OUTPUT2",
                        "Tracking": [
                          {
                            "TrackingCategoryID": "351953c4-8127-4009-88c3-f9cd8c9cbe9f",
                            "TrackingOptionID": "ce205173-7387-4651-9726-2cf4c5405ba2",
                            "Name": "Region",
                            "Option": "Eastside"
                          }
                        ]
                      }
                    ],
                    "Date": "/Date(1571875200000)/",
                    "DateString": "2019-10-24T00:00:00",
                    "ExpiryDate": "/Date(1571961600000)/",
                    "ExpiryDateString": "2019-10-25T00:00:00",
                    "Status": "ACCEPTED",
                    "CurrencyRate": 0.937053,
                    "CurrencyCode": "AUD",
                    "SubTotal": 17.96,
                    "TotalTax": 2.69,
                    "Total": 20.65,
                    "TotalDiscount": 1.99,
                    "Title": "Your Quote",
                    "Summary": "Please buy this",
                    "BrandingThemeID": "4c82c365-35cb-467f-bb11-dce1f2f2f67c",
                    "UpdatedDateUTC": "/Date(1571869373890)/",
                    "LineAmountTypes": "EXCLUSIVE"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Create one or more quotes",
        "summary": "createQuotes",
        "tags": [
          "Accounting"
        ],
        "operationId": "createQuotes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Quotes with an array of Quote object in body of request",
            "schema": {
              "$ref": "#/definitions/Quotes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Quotes with array with newly created Quote",
            "schema": {
              "$ref": "#/definitions/Quotes"
            },
            "examples": {
              "application/json": {
                "SummarizeErrors": false,
                "Id": "29571f5a-bf73-4bb6-9de5-86be44e6bf2e",
                "Status": "OK",
                "ProviderName": "provider-name",
                "DateTimeUTC": "/Date(1580607782916)/",
                "Quotes": [
                  {
                    "QuoteID": "60031d53-6488-4321-9cbd-c1db6dbf9ba4",
                    "QuoteNumber": "QU-0008",
                    "Terms": "",
                    "Contact": {
                      "ContactID": "6a65f055-b0e0-471a-a933-d1ffdd89393f",
                      "Name": "John Smith-82160",
                      "EmailAddress": ""
                    },
                    "LineItems": [
                      {
                        "LineItemID": "26995857-0eea-45fb-b46c-f8ea896ec46e",
                        "AccountCode": "12775",
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "LineAmount": 20.0,
                        "ItemCode": "",
                        "Quantity": 1.0,
                        "TaxAmount": 0.0,
                        "Tracking": []
                      }
                    ],
                    "Date": "/Date(1580515200000)/",
                    "DateString": "2020-02-01T00:00:00",
                    "Status": "DRAFT",
                    "CurrencyRate": 1.0,
                    "CurrencyCode": "USD",
                    "SubTotal": 20.0,
                    "TotalTax": 0.0,
                    "Total": 20.0,
                    "UpdatedDateUTC": "/Date(1580607782913)/",
                    "LineAmountTypes": "EXCLUSIVE",
                    "StatusAttributeString": "OK"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates or creates one or more quotes",
        "summary": "updateOrCreateQuotes",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateOrCreateQuotes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Quotes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Quotes array with updated or created Quote",
            "schema": {
              "$ref": "#/definitions/Quotes"
            },
            "examples": {
              "application/json": {
                "SummarizeErrors": false,
                "Id": "b425754f-0512-481d-827b-c8958db7667e",
                "Status": "OK",
                "ProviderName": "provider-name",
                "DateTimeUTC": "/Date(1580607783833)/",
                "Quotes": [
                  {
                    "QuoteID": "fd53e0b7-4d24-4c20-be85-043a62ea5847",
                    "QuoteNumber": "QU-0009",
                    "Terms": "",
                    "Contact": {
                      "ContactID": "6a65f055-b0e0-471a-a933-d1ffdd89393f",
                      "Name": "John Smith-82160",
                      "EmailAddress": ""
                    },
                    "LineItems": [
                      {
                        "LineItemID": "898c7fd6-0d94-4ac0-ace8-87e350a042de",
                        "AccountCode": "12775",
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "LineAmount": 20.0,
                        "ItemCode": "",
                        "Quantity": 1.0,
                        "TaxAmount": 0.0,
                        "Tracking": []
                      }
                    ],
                    "Date": "/Date(1580515200000)/",
                    "DateString": "2020-02-01T00:00:00",
                    "Status": "DRAFT",
                    "CurrencyRate": 1.0,
                    "CurrencyCode": "USD",
                    "SubTotal": 20.0,
                    "TotalTax": 0.0,
                    "Total": 20.0,
                    "UpdatedDateUTC": "/Date(1580607783467)/",
                    "LineAmountTypes": "EXCLUSIVE",
                    "StatusAttributeString": "OK"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Quotes/{QuoteID}": {
      "get": {
        "description": "Retrieves a specific quote using a unique quote Id",
        "summary": "getQuote",
        "tags": [
          "Accounting"
        ],
        "operationId": "getQuote",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Quote"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Quotes array with specified Quote",
            "schema": {
              "$ref": "#/definitions/Quotes"
            },
            "examples": {
              "application/json": {
                "SummarizeErrors": true,
                "Id": "e3626c45-77f1-4ab0-ba9b-3593c7bcd25c",
                "Status": "OK",
                "ProviderName": "provider-name",
                "DateTimeUTC": "/Date(1580607864786)/",
                "Quotes": [
                  {
                    "QuoteID": "1f90e77a-7b88-4462-874f-1aa675be8fef",
                    "QuoteNumber": "QU-0007",
                    "Reference": "MyQuote",
                    "Terms": "These are my terms",
                    "Contact": {
                      "ContactID": "4bc3ecb2-8e2a-4267-a171-0e0ce7e5ac2a",
                      "Name": "ABC Limited",
                      "EmailAddress": "john.smith@gmail.com",
                      "FirstName": "John",
                      "LastName": "Smith"
                    },
                    "LineItems": [
                      {
                        "LineItemID": "09b47d9f-f78d-4bab-b226-957f55bfb1b5",
                        "AccountCode": "400",
                        "Description": "Half day training - Microsoft Office",
                        "UnitAmount": 500.0,
                        "LineAmount": 500.0,
                        "ItemCode": "Train-MS",
                        "Quantity": 1.0,
                        "TaxAmount": 0.0,
                        "TaxType": "NONE",
                        "Tracking": [
                          {
                            "TrackingCategoryID": "9bd3f506-6d91-4625-81f0-0f9147f099f4",
                            "TrackingOptionID": "d30e2a0d-ae6f-4806-88ca-d8ebdba2af73",
                            "Name": "Avengers",
                            "Option": "IronMan"
                          }
                        ]
                      }
                    ],
                    "Date": "/Date(1580515200000)/",
                    "DateString": "2020-02-01T00:00:00",
                    "ExpiryDate": "/Date(1581724800000)/",
                    "ExpiryDateString": "2020-02-15T00:00:00",
                    "Status": "DRAFT",
                    "CurrencyRate": 1.54715,
                    "CurrencyCode": "NZD",
                    "SubTotal": 500.0,
                    "TotalTax": 0.0,
                    "Total": 500.0,
                    "TotalDiscount": 0.0,
                    "Title": "",
                    "Summary": "",
                    "BrandingThemeID": "324587a9-7eed-46c0-ad64-fa941a1b5b3e",
                    "UpdatedDateUTC": "/Date(1580607757040)/",
                    "LineAmountTypes": "EXCLUSIVE"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific quote",
        "summary": "updateQuote",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateQuote",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Quote"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Quotes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Quotes array with updated Quote",
            "schema": {
              "$ref": "#/definitions/Quotes"
            },
            "examples": {
              "application/json": {
                "SummarizeErrors": true,
                "Id": "be4f43a7-ef02-497a-96c2-fc0bc047a82a",
                "Status": "OK",
                "ProviderName": "provider-name",
                "DateTimeUTC": "/Date(1580605644385)/",
                "Quotes": [
                  {
                    "QuoteID": "8ce6b14c-ef87-4f45-93f0-853137c6d0e1",
                    "QuoteNumber": "QU-0008",
                    "Reference": "I am an update",
                    "Terms": "",
                    "Contact": {
                      "ContactID": "8ed7dd03-4e6a-4078-a807-c5309abfec52",
                      "Name": "Orlena Greenville 35",
                      "EmailAddress": ""
                    },
                    "LineItems": [
                      {
                        "LineItemID": "be69f44e-9c72-4fcd-9152-0174867cce49",
                        "AccountCode": "12775",
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "LineAmount": 20.0,
                        "ItemCode": "",
                        "Quantity": 1.0,
                        "TaxAmount": 0.0,
                        "Tracking": []
                      }
                    ],
                    "Date": "/Date(1580515200000)/",
                    "DateString": "2020-02-01T00:00:00",
                    "Status": "DRAFT",
                    "CurrencyRate": 1.0,
                    "CurrencyCode": "USD",
                    "SubTotal": 20.0,
                    "TotalTax": 0.0,
                    "Total": 20.0,
                    "UpdatedDateUTC": "/Date(1580605644360)/",
                    "LineAmountTypes": "EXCLUSIVE"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Quotes/{QuoteID}/History": {
      "get": {
        "description": "Retrieves history records of a specific quote",
        "summary": "getQuoteHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getQuoteHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Quote"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific quote",
        "summary": "createQuoteHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createQuoteHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Quote"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Quotes/{QuoteID}/pdf": {
      "get": {
        "description": "Retrieves a specific quote as a PDF file using a unique quote Id",
        "summary": "getQuoteAsPdf",
        "tags": [
          "Accounting"
        ],
        "operationId": "getQuoteAsPdf",
        "deprecated": false,
        "produces": [
          "application/pdf"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Quote"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of byte array pdf version of specified Quotes",
            "schema": {
              "default": ""
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/Quotes/{QuoteID}/Attachments": {
      "get": {
        "description": "Retrieves attachments for a specific quote",
        "summary": "getQuoteAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getQuoteAttachments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Quote"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "439c1573-3cd8-4697-a9f6-81fa651ee8f3",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550852630329)/",
                "Attachments": [
                  {
                    "AttachmentID": "52a643be-cd5c-489f-9778-53a9fd337756",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Quotes/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/Quotes/{QuoteID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific quote using a unique attachment Id",
        "summary": "getQuoteAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getQuoteAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Quote"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Attachment object"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Quote as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/Quotes/{QuoteID}/Attachments/{FileName}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific quote by filename",
        "summary": "getQuoteAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getQuoteAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Quote"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Quote as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific attachment from a specific quote by filename",
        "summary": "updateQuoteAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateQuoteAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Quote"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "c8d6413a-1da2-4faa-9848-21f60443e906",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550859714477)/",
                "Attachments": [
                  {
                    "AttachmentID": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Quotes/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates attachment for a specific quote",
        "summary": "createQuoteAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createQuoteAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for an Quote"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "724cdff5-bcd1-4c5c-977e-e864c24258e0",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550856817769)/",
                "Attachments": [
                  {
                    "AttachmentID": "ab95b276-9dce-4925-9077-439818ba270f",
                    "FileName": "sample5.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Quotes/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      }
    },
    "/Receipts": {
      "get": {
        "description": "Retrieves draft expense claim receipts for any user",
        "summary": "getReceipts",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReceipts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Receipts array for all Receipt",
            "schema": {
              "$ref": "#/definitions/Receipts"
            },
            "examples": {
              "application/json": {
                "Id": "078b2a2c-902f-4154-8739-357ece5982e5",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552524584695)/",
                "Receipts": [
                  {
                    "ReceiptID": "a44fd147-af4e-4fe8-a09a-55332df74162",
                    "ReceiptNumber": "1",
                    "Status": "DRAFT",
                    "User": {
                      "UserID": "d1164823-0ac1-41ad-987b-b4e30fe0b273",
                      "FirstName": "API ",
                      "LastName": "Team",
                      "ValidationErrors": [],
                      "Warnings": []
                    },
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "Name": "Liam Gallagher",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "SalesTrackingCategories": [],
                      "PurchasesTrackingCategories": [],
                      "ContactPersons": [],
                      "Attachments": [],
                      "HasValidationErrors": false,
                      "ValidationErrors": [],
                      "Warnings": []
                    },
                    "Date": "/Date(1552435200000+0000)/",
                    "UpdatedDateUTC": "/Date(1552524583983+0000)/",
                    "Reference": "",
                    "LineAmountTypes": "NoTax",
                    "LineItems": [],
                    "SubTotal": 40.0,
                    "TotalTax": 0.0,
                    "Total": 40.0,
                    "ID": "a44fd147-af4e-4fe8-a09a-55332df74162",
                    "HasAttachments": false,
                    "Attachments": [],
                    "ValidationErrors": [],
                    "Warnings": []
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates draft expense claim receipts for any user",
        "summary": "createReceipt",
        "tags": [
          "Accounting"
        ],
        "operationId": "createReceipt",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Receipts with an array of Receipt object in body of request",
            "schema": {
              "$ref": "#/definitions/Receipts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Receipts array for newly created Receipt",
            "schema": {
              "$ref": "#/definitions/Receipts"
            },
            "examples": {
              "application/json": {
                "Id": "35898898-5361-4b42-b6ca-9d2c584fc53d",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552524583429)/",
                "Receipts": [
                  {
                    "ReceiptID": "a44fd147-af4e-4fe8-a09a-55332df74162",
                    "ReceiptNumber": "1",
                    "Status": "DRAFT",
                    "User": {
                      "UserID": "d1164823-0ac1-41ad-987b-b4e30fe0b273",
                      "EmailAddress": "api@xero.com",
                      "FirstName": "API ",
                      "LastName": "Team",
                      "UpdatedDateUTC": "/Date(1511957179217+0000)/",
                      "IsSubscriber": true,
                      "OrganisationRole": "FINANCIALADVISER"
                    },
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "EmailAddress": "liam@rockstar.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": "",
                          "AttentionTo": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1551747281053+0000)/",
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "Date": "/Date(1552521600000+0000)/",
                    "UpdatedDateUTC": "/Date(1552524583367+0000)/",
                    "Reference": "",
                    "LineAmountTypes": "NoTax",
                    "LineItems": [
                      {
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "TaxType": "NONE",
                        "TaxAmount": 0.0,
                        "LineAmount": 40.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "Quantity": 2.0
                      }
                    ],
                    "SubTotal": 40.0,
                    "TotalTax": 0.0,
                    "Total": 40.0,
                    "ID": "a44fd147-af4e-4fe8-a09a-55332df74162",
                    "HasAttachments": false,
                    "ValidationErrors": [
                      {
                        "Message": "A valid user should be identified using the UserID."
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Receipts/{ReceiptID}": {
      "get": {
        "description": "Retrieves a specific draft expense claim receipt by using a unique receipt Id",
        "summary": "getReceipt",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReceipt",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Receipt"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Receipts array for a specified Receipt",
            "schema": {
              "$ref": "#/definitions/Receipts"
            },
            "examples": {
              "application/json": {
                "Id": "2c99af06-d278-4580-8c8c-463c806af5b6",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1553800357225)/",
                "Receipts": [
                  {
                    "ReceiptID": "a44fd147-af4e-4fe8-a09a-55332df74162",
                    "ReceiptNumber": "1",
                    "Status": "DRAFT",
                    "User": {
                      "UserID": "d1164823-0ac1-41ad-987b-b4e30fe0b273",
                      "EmailAddress": "api@xero.com",
                      "FirstName": "API ",
                      "LastName": "Team",
                      "UpdatedDateUTC": "/Date(1511957179217+0000)/",
                      "IsSubscriber": true,
                      "OrganisationRole": "FINANCIALADVISER"
                    },
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "EmailAddress": "liam@rockstar.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": "",
                          "AttentionTo": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1553672800957+0000)/",
                      "ContactGroups": [],
                      "DefaultCurrency": "NZD",
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "Date": "/Date(1552435200000+0000)/",
                    "UpdatedDateUTC": "/Date(1552524583983+0000)/",
                    "Reference": "Foobar",
                    "LineAmountTypes": "NoTax",
                    "LineItems": [
                      {
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "TaxType": "NONE",
                        "TaxAmount": 0.0,
                        "LineAmount": 40.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "Quantity": 2.0,
                        "DiscountEnteredAsPercent": true
                      }
                    ],
                    "SubTotal": 40.0,
                    "TotalTax": 0.0,
                    "Total": 40.0,
                    "ID": "a44fd147-af4e-4fe8-a09a-55332df74162",
                    "HasAttachments": true,
                    "Attachments": [
                      {
                        "AttachmentID": "e02a84f6-b83a-4983-b3b9-35cd8880c7bc",
                        "FileName": "HelloWorld.jpg",
                        "Url": "https://api.xero.com/api.xro/2.0/receipts/a44fd147-af4e-4fe8-a09a-55332df74162/Attachments/HelloWorld.jpg",
                        "MimeType": "image/jpg",
                        "ContentLength": 2878711
                      },
                      {
                        "AttachmentID": "3451e34c-66a6-42b0-91e2-88618bdc169b",
                        "FileName": "foobar.jpg",
                        "Url": "https://api.xero.com/api.xro/2.0/receipts/a44fd147-af4e-4fe8-a09a-55332df74162/Attachments/foobar.jpg",
                        "MimeType": "image/jpg",
                        "ContentLength": 2878711
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific draft expense claim receipts",
        "summary": "updateReceipt",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateReceipt",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Receipt"
          },
          {
            "name": "unitdp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Receipts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Receipts array for updated Receipt",
            "schema": {
              "$ref": "#/definitions/Receipts"
            },
            "examples": {
              "application/json": {
                "Id": "05b76bf7-4734-4633-a399-7d569a6a25c6",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552675557052)/",
                "Receipts": [
                  {
                    "ReceiptID": "e3686fdc-c661-4581-b9df-cbb20782ea66",
                    "ReceiptNumber": "2",
                    "Status": "DRAFT",
                    "User": {
                      "UserID": "d1164823-0ac1-41ad-987b-b4e30fe0b273",
                      "EmailAddress": "api@xero.com",
                      "FirstName": "API ",
                      "LastName": "Team",
                      "UpdatedDateUTC": "/Date(1511957179217+0000)/",
                      "IsSubscriber": true,
                      "OrganisationRole": "FINANCIALADVISER"
                    },
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "ContactStatus": "ACTIVE",
                      "Name": "Liam Gallagher",
                      "FirstName": "Liam",
                      "LastName": "Gallagher",
                      "EmailAddress": "liam@rockstar.com",
                      "BankAccountDetails": "",
                      "Addresses": [
                        {
                          "AddressType": "STREET",
                          "City": "",
                          "Region": "",
                          "PostalCode": "",
                          "Country": "",
                          "AttentionTo": ""
                        },
                        {
                          "AddressType": "POBOX",
                          "City": "Anytown",
                          "Region": "NY",
                          "PostalCode": "10101",
                          "Country": "USA",
                          "AttentionTo": ""
                        }
                      ],
                      "Phones": [
                        {
                          "PhoneType": "DEFAULT",
                          "PhoneNumber": "222-2222",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "DDI",
                          "PhoneNumber": "",
                          "PhoneAreaCode": "",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "FAX",
                          "PhoneNumber": "333-2233",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        },
                        {
                          "PhoneType": "MOBILE",
                          "PhoneNumber": "444-3433",
                          "PhoneAreaCode": "212",
                          "PhoneCountryCode": ""
                        }
                      ],
                      "UpdatedDateUTC": "/Date(1551747281053+0000)/",
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "Date": "/Date(1552694400000+0000)/",
                    "UpdatedDateUTC": "/Date(1552675556927+0000)/",
                    "Reference": "Foobar",
                    "LineAmountTypes": "NoTax",
                    "LineItems": [
                      {
                        "Description": "Foobar",
                        "UnitAmount": 20.0,
                        "TaxType": "NONE",
                        "TaxAmount": 0.0,
                        "LineAmount": 40.0,
                        "AccountCode": "400",
                        "Tracking": [],
                        "Quantity": 2.0
                      }
                    ],
                    "SubTotal": 40.0,
                    "TotalTax": 0.0,
                    "Total": 40.0,
                    "ID": "e3686fdc-c661-4581-b9df-cbb20782ea66",
                    "HasAttachments": false,
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Receipts/{ReceiptID}/Attachments": {
      "get": {
        "description": "Retrieves attachments for a specific expense claim receipt",
        "summary": "getReceiptAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReceiptAttachments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Receipt"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachments for a specified Receipt",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "d379c04d-d3aa-4034-95b8-af69a449bd78",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552686430436)/",
                "Attachments": [
                  {
                    "AttachmentID": "11e5ca6b-d38c-42ab-a29f-c1710d171aa1",
                    "FileName": "giphy.gif",
                    "Url": "https://api.xero.com/api.xro/2.0/Receipts/7923c00d-163d-404c-a608-af3de333db29/Attachments/giphy.gif",
                    "MimeType": "image/gif",
                    "ContentLength": 495727
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/Receipts/{ReceiptID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Retrieves a specific attachments from a specific expense claim receipts by using a unique attachment Id",
        "summary": "getReceiptAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReceiptAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Receipt"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Attachment object"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Receipt as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/Receipts/{ReceiptID}/Attachments/{FileName}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific expense claim receipts by file name",
        "summary": "getReceiptAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReceiptAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Receipt"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Receipt as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific attachment on a specific expense claim receipts by file name",
        "summary": "updateReceiptAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateReceiptAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Receipt"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with updated Attachment for a specified Receipt",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "aeca1ea8-8fd9-4757-96a6-397dc4957a69",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552686602761)/",
                "Attachments": [
                  {
                    "AttachmentID": "e02a84f6-b83a-4983-b3b9-35cd8880c7bc",
                    "FileName": "HelloWorld.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Receipts/a44fd147-af4e-4fe8-a09a-55332df74162/Attachments/HelloWorld.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates an attachment on a specific expense claim receipts by file name",
        "summary": "createReceiptAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createReceiptAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Receipt"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with newly created Attachment for a specified Receipt",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "01c9a720-b1f1-4477-8de8-ff46d945fd1d",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1552686599884)/",
                "Attachments": [
                  {
                    "AttachmentID": "3451e34c-66a6-42b0-91e2-88618bdc169b",
                    "FileName": "foobar.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/Receipts/a44fd147-af4e-4fe8-a09a-55332df74162/Attachments/foobar.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      }
    },
    "/Receipts/{ReceiptID}/History": {
      "get": {
        "description": "Retrieves a history record for a specific receipt",
        "summary": "getReceiptHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReceiptHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Receipt"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a history record for a specific receipt",
        "summary": "createReceiptHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createReceiptHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Receipt"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Unsupported - return response incorrect exception, API is not able to create HistoryRecord for Receipts",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "ErrorNumber": 10,
                "Type": "ValidationException",
                "Message": "A validation exception occurred",
                "Elements": [
                  {
                    "DateUTCString": "2019-03-15T21:51:50",
                    "DateUTC": "/Date(1552686710791)/",
                    "Details": "Hello World",
                    "ValidationErrors": [
                      {
                        "Message": "The document with the supplied id was not found for this endpoint."
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/RepeatingInvoices": {
      "get": {
        "description": "Retrieves repeating invoices",
        "summary": "getRepeatingInvoices",
        "tags": [
          "Accounting"
        ],
        "operationId": "getRepeatingInvoices",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Repeating Invoices array for all Repeating Invoice",
            "schema": {
              "$ref": "#/definitions/RepeatingInvoices"
            },
            "examples": {
              "application/json": {
                "Id": "b336833d-a3a8-4a67-ab4c-6280b3ad87b0",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1553805183228)/",
                "RepeatingInvoices": [
                  {
                    "Schedule": {
                      "Period": 1,
                      "Unit": "MONTHLY",
                      "DueDate": 10,
                      "DueDateType": "OFFOLLOWINGMONTH",
                      "StartDate": "/Date(1555286400000+0000)/",
                      "EndDate": "/Date(1569801600000+0000)/",
                      "NextScheduledDate": "/Date(1555286400000+0000)/"
                    },
                    "RepeatingInvoiceID": "428c0d75-909f-4b04-8403-a48dc27283b0",
                    "Type": "ACCREC",
                    "Reference": "[Week]",
                    "HasAttachments": true,
                    "ID": "428c0d75-909f-4b04-8403-a48dc27283b0",
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "Name": "Liam Gallagher",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "Guitars Fender Strat",
                        "UnitAmount": 5000.0,
                        "TaxType": "OUTPUT2",
                        "TaxAmount": 750.0,
                        "LineAmount": 5000.0,
                        "AccountCode": "200",
                        "Tracking": [],
                        "Quantity": 1.0,
                        "LineItemID": "13a8353c-d2af-4d5b-920c-438449f08900",
                        "DiscountEnteredAsPercent": true
                      }
                    ],
                    "SubTotal": 5000.0,
                    "TotalTax": 750.0,
                    "Total": 5750.0,
                    "CurrencyCode": "NZD"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}": {
      "get": {
        "description": "Retrieves a specific repeating invoice by using a unique repeating invoice Id",
        "summary": "getRepeatingInvoice",
        "tags": [
          "Accounting"
        ],
        "operationId": "getRepeatingInvoice",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Repeating Invoice"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Repeating Invoices array with a specified Repeating Invoice",
            "schema": {
              "$ref": "#/definitions/RepeatingInvoices"
            },
            "examples": {
              "application/json": {
                "Id": "d9ac3755-7b81-4e3a-bef0-fa8a4f171442",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1553805184820)/",
                "RepeatingInvoices": [
                  {
                    "Schedule": {
                      "Period": 1,
                      "Unit": "MONTHLY",
                      "DueDate": 10,
                      "DueDateType": "OFFOLLOWINGMONTH",
                      "StartDate": "/Date(1555286400000+0000)/",
                      "EndDate": "/Date(1569801600000+0000)/",
                      "NextScheduledDate": "/Date(1555286400000+0000)/"
                    },
                    "RepeatingInvoiceID": "428c0d75-909f-4b04-8403-a48dc27283b0",
                    "Type": "ACCREC",
                    "Reference": "[Week]",
                    "HasAttachments": true,
                    "Attachments": [
                      {
                        "AttachmentID": "2a488b0f-3966-4b6e-a7e1-b6d3286351f2",
                        "FileName": "HelloWorld.jpg",
                        "Url": "https://api.xero.com/api.xro/2.0/Invoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/HelloWorld.jpg",
                        "MimeType": "image/jpg",
                        "ContentLength": 2878711
                      },
                      {
                        "AttachmentID": "48294e40-bfd2-4027-a365-f034383cb7aa",
                        "FileName": "foobar.jpg",
                        "Url": "https://api.xero.com/api.xro/2.0/Invoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/foobar.jpg",
                        "MimeType": "image/jpg",
                        "ContentLength": 2878711
                      },
                      {
                        "AttachmentID": "528e978a-87b8-44c4-9465-9456ec2f7ee6",
                        "FileName": "helo-heros.jpg",
                        "Url": "https://api.xero.com/api.xro/2.0/Invoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/helo-heros.jpg",
                        "MimeType": "image/jpeg",
                        "ContentLength": 2878711
                      }
                    ],
                    "ID": "428c0d75-909f-4b04-8403-a48dc27283b0",
                    "Contact": {
                      "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                      "Name": "Liam Gallagher",
                      "Addresses": [],
                      "Phones": [],
                      "ContactGroups": [],
                      "ContactPersons": [],
                      "HasValidationErrors": false
                    },
                    "Status": "AUTHORISED",
                    "LineAmountTypes": "Exclusive",
                    "LineItems": [
                      {
                        "Description": "Guitars Fender Strat",
                        "UnitAmount": 5000.0,
                        "TaxType": "OUTPUT2",
                        "TaxAmount": 750.0,
                        "LineAmount": 5000.0,
                        "AccountCode": "200",
                        "Tracking": [],
                        "Quantity": 1.0,
                        "LineItemID": "13a8353c-d2af-4d5b-920c-438449f08900",
                        "DiscountEnteredAsPercent": true
                      }
                    ],
                    "SubTotal": 5000.0,
                    "TotalTax": 750.0,
                    "Total": 5750.0,
                    "CurrencyCode": "NZD"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      }
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments": {
      "get": {
        "description": "Retrieves attachments from a specific repeating invoice",
        "summary": "getRepeatingInvoiceAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getRepeatingInvoiceAttachments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Repeating Invoice"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with all Attachments for a specified Repeating Invoice",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "b88b807b-3087-474b-a4f9-d8f1b4f5a899",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1553805762049)/",
                "Attachments": [
                  {
                    "AttachmentID": "2a488b0f-3966-4b6e-a7e1-b6d3286351f2",
                    "FileName": "HelloWorld.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/HelloWorld.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  },
                  {
                    "AttachmentID": "48294e40-bfd2-4027-a365-f034383cb7aa",
                    "FileName": "foobar.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/foobar.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  },
                  {
                    "AttachmentID": "528e978a-87b8-44c4-9465-9456ec2f7ee6",
                    "FileName": "helo-heros.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/helo-heros.jpg",
                    "MimeType": "image/jpeg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific repeating invoice",
        "summary": "getRepeatingInvoiceAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getRepeatingInvoiceAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Repeating Invoice"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for Attachment object"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Repeating Invoice as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}": {
      "get": {
        "description": "Retrieves a specific attachment from a specific repeating invoices by file name",
        "summary": "getRepeatingInvoiceAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getRepeatingInvoiceAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Repeating Invoice"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Repeating Invoice as binary data",
            "schema": {
              "type": "string",
              "default": "",
              "format": "binary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments",
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific attachment from a specific repeating invoices by file name",
        "summary": "updateRepeatingInvoiceAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateRepeatingInvoiceAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Repeating Invoice"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with specified Attachment for a specified Repeating Invoice",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "61b24d5c-4d6e-468f-9de1-abbc234b239a",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1553805873362)/",
                "Attachments": [
                  {
                    "AttachmentID": "d086d5f4-9c3d-4edc-a87e-906248eeb652",
                    "FileName": "HelloWorld.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/HelloWorld.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates an attachment from a specific repeating invoices by file name",
        "summary": "createRepeatingInvoiceAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createRepeatingInvoiceAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Repeating Invoice"
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attachment"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/octet-stream"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "Byte array of file in body of request"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with updated Attachment for a specified Repeating Invoice",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "examples": {
              "application/json": {
                "Id": "219de8c0-ee70-48af-a000-594eba14b417",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1553805866696)/",
                "Attachments": [
                  {
                    "AttachmentID": "e078e56c-9a2b-4f6c-a1fa-5d19b0dab611",
                    "FileName": "foobar.jpg",
                    "Url": "https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/foobar.jpg",
                    "MimeType": "image/jpg",
                    "ContentLength": 2878711
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ]
      }
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}/History": {
      "get": {
        "description": "Retrieves history record for a specific repeating invoice",
        "summary": "getRepeatingInvoiceHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getRepeatingInvoiceHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Repeating Invoice"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1551311321819)/",
                "HistoryRecords": [
                  {
                    "Changes": "Attached a file",
                    "DateUTCString": "2018-11-08T15:01:21",
                    "DateUTC": "/Date(1541689281470+0000)/",
                    "User": "System Generated",
                    "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                  },
                  {
                    "Changes": "Credit Applied",
                    "DateUTCString": "2016-10-17T20:46:01",
                    "DateUTC": "/Date(1476737161173+0000)/",
                    "User": "System Generated",
                    "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions",
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates a  history record for a specific repeating invoice",
        "summary": "createRepeatingInvoiceHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createRepeatingInvoiceHistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Repeating Invoice"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "examples": {
              "application/json": {
                "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                "Status": "OK",
                "ProviderName": "Xero API Partner",
                "DateTimeUTC": "/Date(1550899400362)/",
                "HistoryRecords": [
                  {
                    "DateUTCString": "2019-02-23T05:23:20",
                    "DateUTC": "/Date(1550899400362)/",
                    "Details": "Hello World",
                    "ValidationErrors": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      }
    },
    "/Reports/TenNinetyNine": {
      "get": {
        "description": "Retrieve reports for 1099",
        "summary": "getReportTenNinetyNine",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportTenNinetyNine",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "reportYear",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The year of the 1099 report"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Reports",
            "schema": {
              "$ref": "#/definitions/Reports"
            },
            "examples": {
              "application/json": {
                "Id": "8b474ddb-9ef4-457c-8640-1c0e3670ea0e",
                "Status": "OK",
                "ProviderName": "Java Public Example",
                "DateTimeUTC": "/Date(1555968100978)/",
                "Reports": [
                  {
                    "ReportName": "1099 report",
                    "ReportDate": "1 Jan 2016 to 31 Dec 2016",
                    "Fields": [],
                    "Contacts": [
                      {
                        "Box1": 0.0,
                        "Box2": 0.0,
                        "Box3": 1000.0,
                        "Box4": 0.0,
                        "Box5": 0.0,
                        "Box6": 0.0,
                        "Box7": 0.0,
                        "Box8": 0.0,
                        "Box9": 0.0,
                        "Box10": 0.0,
                        "Box11": 0.0,
                        "Box13": 0.0,
                        "Box14": 0.0,
                        "Name": "Bank West",
                        "FederalTaxIDType": "SSN",
                        "City": "Pinehaven",
                        "Zip": "12345",
                        "State": "CA",
                        "Email": "jack@bowest.com",
                        "StreetAddress": "Procurement Services\r\nGPO 1234\r\n\r\n\r\n",
                        "TaxID": "234-22-2223",
                        "ContactId": "81d5706a-8057-4338-8511-747cd85f4c68"
                      },
                      {
                        "Box1": 0.0,
                        "Box2": 0.0,
                        "Box3": 1000.0,
                        "Box4": 0.0,
                        "Box5": 0.0,
                        "Box6": 0.0,
                        "Box7": 0.0,
                        "Box8": 0.0,
                        "Box9": 0.0,
                        "Box10": 0.0,
                        "Box11": 0.0,
                        "Box13": 0.0,
                        "Box14": 0.0,
                        "Name": "Hoyt Productions",
                        "FederalTaxIDType": "SSN",
                        "City": "Oaktown",
                        "Zip": "45123",
                        "State": "NY",
                        "Email": "accounts@hoytmadeupdemo.com",
                        "StreetAddress": "100 Rusty Ridge Road\r\nSuite 100\r\n\r\n\r\n",
                        "TaxID": "123-45-6780",
                        "ContactId": "19732b6a-9a5c-4651-b33c-3f8f682e2a2b"
                      },
                      {
                        "Box1": 5543.75,
                        "Box2": 0.0,
                        "Box3": 0.0,
                        "Box4": 0.0,
                        "Box5": 0.0,
                        "Box6": 0.0,
                        "Box7": 0.0,
                        "Box8": 0.0,
                        "Box9": 0.0,
                        "Box10": 0.0,
                        "Box11": 0.0,
                        "Box13": 0.0,
                        "Box14": 0.0,
                        "Name": "Truxton Property Management",
                        "FederalTaxIDType": "EIN",
                        "City": "Coppertown",
                        "Zip": "21321",
                        "State": "FL",
                        "Email": "accounts@truxtonmadeupdemo.com",
                        "StreetAddress": "1000 Copper Avenue\r\nSuite 1000\r\n\r\n\r\n",
                        "TaxID": "33-3332233",
                        "ContactId": "018355fc-c67e-4352-b443-ef3873031983"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read",
              "accounting.reports.tenninetynine.read"
            ]
          }
        ]
      }
    },
    "/Reports/AgedPayablesByContact": {
      "get": {
        "description": "Retrieves report for aged payables by contact",
        "summary": "getReportAgedPayablesByContact",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportAgedPayablesByContact",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "contactId",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "The date of the Aged Payables By Contact report"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "filter by the from date of the report e.g. 2021-02-01"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "filter by the to date of the report e.g. 2021-02-28"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "examples": {
              "application/json": {
                "Id": "5a33f9d4-44a6-4467-a812-4f025506ee35",
                "Status": "OK",
                "ProviderName": "Java Public Example",
                "DateTimeUTC": "/Date(1555971088085)/",
                "Reports": [
                  {
                    "ReportName": "Aged Payables By Contact",
                    "ReportType": "AgedPayablesByContact",
                    "ReportTitles": [
                      "Invoices",
                      "ABC",
                      "From 10 October 2017 to 22 April 2019",
                      "Showing payments to 22 April 2019"
                    ],
                    "ReportDate": "22 April 2019",
                    "UpdatedDateUTC": "/Date(1555971088085)/",
                    "Fields": [],
                    "Rows": [
                      {
                        "RowType": "Header",
                        "Cells": [
                          {
                            "Value": "Date"
                          },
                          {
                            "Value": "Reference"
                          },
                          {
                            "Value": "Due Date"
                          },
                          {
                            "Value": ""
                          },
                          {
                            "Value": "Total"
                          },
                          {
                            "Value": "Paid"
                          },
                          {
                            "Value": "Credited"
                          },
                          {
                            "Value": "Due"
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "2017-10-10T00:00:00"
                              },
                              {
                                "Value": "Opening Balance"
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": "0.00"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "2018-10-09T00:00:00",
                                "Attributes": [
                                  {
                                    "Value": "1f3960ae-0537-4438-a4dd-76d785e6d7d8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "1f3960ae-0537-4438-a4dd-76d785e6d7d8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "2018-10-23T00:00:00",
                                "Attributes": [
                                  {
                                    "Value": "1f3960ae-0537-4438-a4dd-76d785e6d7d8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "181 days overdue",
                                "Attributes": [
                                  {
                                    "Value": "1f3960ae-0537-4438-a4dd-76d785e6d7d8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "250.00",
                                "Attributes": [
                                  {
                                    "Value": "1f3960ae-0537-4438-a4dd-76d785e6d7d8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "1f3960ae-0537-4438-a4dd-76d785e6d7d8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "1f3960ae-0537-4438-a4dd-76d785e6d7d8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "250.00",
                                "Attributes": [
                                  {
                                    "Value": "1f3960ae-0537-4438-a4dd-76d785e6d7d8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Total"
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": "250.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "250.00"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Closing Balance"
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": "250.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "250.00"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      }
    },
    "/Reports/AgedReceivablesByContact": {
      "get": {
        "description": "Retrieves report for aged receivables by contact",
        "summary": "getReportAgedReceivablesByContact",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportAgedReceivablesByContact",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "contactId",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Contact"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "The date of the Aged Receivables By Contact report"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "filter by the from date of the report e.g. 2021-02-01"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "filter by the to date of the report e.g. 2021-02-28"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "examples": {
              "application/json": {
                "Id": "b977b607-955d-47cb-92fd-7c29b3dd755c",
                "Status": "OK",
                "ProviderName": "Java Public Example",
                "DateTimeUTC": "/Date(1556032862815)/",
                "Reports": [
                  {
                    "ReportName": "Aged Receivables By Contact",
                    "ReportType": "AgedReceivablesByContact",
                    "ReportTitles": [
                      "Invoices",
                      "ABC",
                      "From 10 October 2017 to 23 April 2019",
                      "Showing payments to 23 April 2019"
                    ],
                    "ReportDate": "23 April 2019",
                    "UpdatedDateUTC": "/Date(1556032862815)/",
                    "Fields": [],
                    "Rows": [
                      {
                        "RowType": "Header",
                        "Cells": [
                          {
                            "Value": "Date"
                          },
                          {
                            "Value": "Number"
                          },
                          {
                            "Value": "Due Date"
                          },
                          {
                            "Value": ""
                          },
                          {
                            "Value": "Total"
                          },
                          {
                            "Value": "Paid"
                          },
                          {
                            "Value": "Credited"
                          },
                          {
                            "Value": "Due"
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "2017-10-10T00:00:00"
                              },
                              {
                                "Value": "Opening Balance"
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": "0.00"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "2018-05-13T00:00:00",
                                "Attributes": [
                                  {
                                    "Value": "40ebad47-24e2-4dc9-a5f5-579df427671b",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "IV1242016",
                                "Attributes": [
                                  {
                                    "Value": "40ebad47-24e2-4dc9-a5f5-579df427671b",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "2018-06-22T00:00:00",
                                "Attributes": [
                                  {
                                    "Value": "40ebad47-24e2-4dc9-a5f5-579df427671b",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "305 days overdue",
                                "Attributes": [
                                  {
                                    "Value": "40ebad47-24e2-4dc9-a5f5-579df427671b",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "100.00",
                                "Attributes": [
                                  {
                                    "Value": "40ebad47-24e2-4dc9-a5f5-579df427671b",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "40ebad47-24e2-4dc9-a5f5-579df427671b",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "40ebad47-24e2-4dc9-a5f5-579df427671b",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "100.00",
                                "Attributes": [
                                  {
                                    "Value": "40ebad47-24e2-4dc9-a5f5-579df427671b",
                                    "Id": "invoiceID"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "2019-04-23T00:00:00",
                                "Attributes": [
                                  {
                                    "Value": "ca0483ce-fa43-4335-8512-751e655337b8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "INV-0086",
                                "Attributes": [
                                  {
                                    "Value": "ca0483ce-fa43-4335-8512-751e655337b8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "2019-05-07T00:00:00",
                                "Attributes": [
                                  {
                                    "Value": "ca0483ce-fa43-4335-8512-751e655337b8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "ca0483ce-fa43-4335-8512-751e655337b8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "50.00",
                                "Attributes": [
                                  {
                                    "Value": "ca0483ce-fa43-4335-8512-751e655337b8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "ca0483ce-fa43-4335-8512-751e655337b8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "ca0483ce-fa43-4335-8512-751e655337b8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              },
                              {
                                "Value": "50.00",
                                "Attributes": [
                                  {
                                    "Value": "ca0483ce-fa43-4335-8512-751e655337b8",
                                    "Id": "invoiceID"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Total"
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": "150.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "150.00"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Closing Balance"
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": "150.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "150.00"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      }
    },
    "/Reports/BalanceSheet": {
      "get": {
        "description": "Retrieves report for balancesheet",
        "summary": "getReportBalanceSheet",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportBalanceSheet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "The date of the Balance Sheet report"
          },
          {
            "name": "periods",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of periods for the Balance Sheet report"
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": false,
            "enum": [
              "MONTH",
              "QUARTER",
              "YEAR"
            ],
            "type": "string",
            "description": "The period size to compare to (MONTH, QUARTER, YEAR)"
          },
          {
            "name": "trackingOptionID1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The tracking option 1 for the Balance Sheet report"
          },
          {
            "name": "trackingOptionID2",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The tracking option 2 for the Balance Sheet report"
          },
          {
            "name": "standardLayout",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "The standard layout boolean for the Balance Sheet report"
          },
          {
            "name": "paymentsOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "return a cash basis for the Balance Sheet report"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "examples": {
              "application/json": {
                "Id": "2ddba304-6ed3-4da4-b185-3b6289699653",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1555099412778)/",
                "Reports": [
                  {
                    "ReportName": "Balance Sheet",
                    "ReportType": "BalanceSheet",
                    "ReportTitles": [
                      "Balance Sheet",
                      "Dev Evangelist - Sid Test 3 (NZ-2016-02)",
                      "As at 30 April 2019"
                    ],
                    "ReportDate": "12 April 2019",
                    "UpdatedDateUTC": "/Date(1555099412778)/",
                    "Fields": [],
                    "Rows": [
                      {
                        "RowType": "Header",
                        "Cells": [
                          {
                            "Value": ""
                          },
                          {
                            "Value": "30 Apr 2019"
                          },
                          {
                            "Value": "31 Mar 2019"
                          },
                          {
                            "Value": "28 Feb 2019"
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Assets",
                        "Rows": []
                      },
                      {
                        "RowType": "Section",
                        "Title": "Bank",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Country Savings",
                                "Attributes": [
                                  {
                                    "Value": "041207d2-3d61-4e5d-8c1a-b9236955a71c",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "-1850.00",
                                "Attributes": [
                                  {
                                    "Value": "041207d2-3d61-4e5d-8c1a-b9236955a71c",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "-1850.00",
                                "Attributes": [
                                  {
                                    "Value": "041207d2-3d61-4e5d-8c1a-b9236955a71c",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "041207d2-3d61-4e5d-8c1a-b9236955a71c",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "My Big Bank",
                                "Attributes": [
                                  {
                                    "Value": "300f3bde-3a5c-4035-9ec5-45b09777679a",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "2146.37",
                                "Attributes": [
                                  {
                                    "Value": "300f3bde-3a5c-4035-9ec5-45b09777679a",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "2020.00",
                                "Attributes": [
                                  {
                                    "Value": "300f3bde-3a5c-4035-9ec5-45b09777679a",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "300f3bde-3a5c-4035-9ec5-45b09777679a",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Total Bank"
                              },
                              {
                                "Value": "296.37"
                              },
                              {
                                "Value": "170.00"
                              },
                              {
                                "Value": "0.00"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Current Assets",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Accounts Receivable",
                                "Attributes": [
                                  {
                                    "Value": "b94495d0-44ab-4199-a1d0-427a4877e100",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "154355.72",
                                "Attributes": [
                                  {
                                    "Value": "b94495d0-44ab-4199-a1d0-427a4877e100",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "154351.78",
                                "Attributes": [
                                  {
                                    "Value": "b94495d0-44ab-4199-a1d0-427a4877e100",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "356.50",
                                "Attributes": [
                                  {
                                    "Value": "b94495d0-44ab-4199-a1d0-427a4877e100",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Inventory",
                                "Attributes": [
                                  {
                                    "Value": "53a12a15-7e9b-4a31-85f4-a7cee6d04215",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "25000.00",
                                "Attributes": [
                                  {
                                    "Value": "53a12a15-7e9b-4a31-85f4-a7cee6d04215",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "25000.00",
                                "Attributes": [
                                  {
                                    "Value": "53a12a15-7e9b-4a31-85f4-a7cee6d04215",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "53a12a15-7e9b-4a31-85f4-a7cee6d04215",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Total Current Assets"
                              },
                              {
                                "Value": "179355.72"
                              },
                              {
                                "Value": "179351.78"
                              },
                              {
                                "Value": "356.50"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Fixed Assets",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Office Equipment",
                                "Attributes": [
                                  {
                                    "Value": "7132cab3-ce56-4389-8e47-8f60d4c137f8",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "-119.00",
                                "Attributes": [
                                  {
                                    "Value": "7132cab3-ce56-4389-8e47-8f60d4c137f8",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "-119.00",
                                "Attributes": [
                                  {
                                    "Value": "7132cab3-ce56-4389-8e47-8f60d4c137f8",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "7132cab3-ce56-4389-8e47-8f60d4c137f8",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Total Fixed Assets"
                              },
                              {
                                "Value": "-119.00"
                              },
                              {
                                "Value": "-119.00"
                              },
                              {
                                "Value": "0.00"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Total Assets"
                              },
                              {
                                "Value": "179533.09"
                              },
                              {
                                "Value": "179402.78"
                              },
                              {
                                "Value": "356.50"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Liabilities",
                        "Rows": []
                      },
                      {
                        "RowType": "Section",
                        "Title": "Current Liabilities",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Accounts Payable",
                                "Attributes": [
                                  {
                                    "Value": "a2a4795b-a01f-40eb-afa6-a34b4514875d",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "-3469.00",
                                "Attributes": [
                                  {
                                    "Value": "a2a4795b-a01f-40eb-afa6-a34b4514875d",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "-3469.00",
                                "Attributes": [
                                  {
                                    "Value": "a2a4795b-a01f-40eb-afa6-a34b4514875d",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "-184.00",
                                "Attributes": [
                                  {
                                    "Value": "a2a4795b-a01f-40eb-afa6-a34b4514875d",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "GST",
                                "Attributes": [
                                  {
                                    "Value": "17d9a4a0-3181-4803-a96b-f0dbe589091b",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "-2446.21",
                                "Attributes": [
                                  {
                                    "Value": "17d9a4a0-3181-4803-a96b-f0dbe589091b",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "-2461.89",
                                "Attributes": [
                                  {
                                    "Value": "17d9a4a0-3181-4803-a96b-f0dbe589091b",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "76.50",
                                "Attributes": [
                                  {
                                    "Value": "17d9a4a0-3181-4803-a96b-f0dbe589091b",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Total Current Liabilities"
                              },
                              {
                                "Value": "-5915.21"
                              },
                              {
                                "Value": "-5930.89"
                              },
                              {
                                "Value": "-107.50"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Total Liabilities"
                              },
                              {
                                "Value": "-5915.21"
                              },
                              {
                                "Value": "-5930.89"
                              },
                              {
                                "Value": "-107.50"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Net Assets"
                              },
                              {
                                "Value": "185448.30"
                              },
                              {
                                "Value": "185333.67"
                              },
                              {
                                "Value": "464.00"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Equity",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Current Year Earnings",
                                "Attributes": [
                                  {
                                    "Value": "00000000-0000-0000-0000-000000000000",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "114.62",
                                "Attributes": [
                                  {
                                    "Value": "00000000-0000-0000-0000-000000000000",
                                    "Id": "account"
                                  },
                                  {
                                    "Value": "4/1/2019",
                                    "Id": "fromDate"
                                  },
                                  {
                                    "Value": "4/30/2019",
                                    "Id": "toDate"
                                  }
                                ]
                              },
                              {
                                "Value": "156621.67",
                                "Attributes": [
                                  {
                                    "Value": "00000000-0000-0000-0000-000000000000",
                                    "Id": "account"
                                  },
                                  {
                                    "Value": "4/1/2018",
                                    "Id": "fromDate"
                                  },
                                  {
                                    "Value": "3/31/2019",
                                    "Id": "toDate"
                                  }
                                ]
                              },
                              {
                                "Value": "500.00",
                                "Attributes": [
                                  {
                                    "Value": "00000000-0000-0000-0000-000000000000",
                                    "Id": "account"
                                  },
                                  {
                                    "Value": "4/1/2018",
                                    "Id": "fromDate"
                                  },
                                  {
                                    "Value": "2/28/2019",
                                    "Id": "toDate"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Owner A Drawings",
                                "Attributes": [
                                  {
                                    "Value": "136ebd08-60ea-4592-8982-be92c153b53a",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "28752.00",
                                "Attributes": [
                                  {
                                    "Value": "136ebd08-60ea-4592-8982-be92c153b53a",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "28752.00",
                                "Attributes": [
                                  {
                                    "Value": "136ebd08-60ea-4592-8982-be92c153b53a",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "136ebd08-60ea-4592-8982-be92c153b53a",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Owner A Funds Introduced",
                                "Attributes": [
                                  {
                                    "Value": "5690f1e8-1d02-4893-90c2-ee1a69eff942",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "-50.00",
                                "Attributes": [
                                  {
                                    "Value": "5690f1e8-1d02-4893-90c2-ee1a69eff942",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "-50.00",
                                "Attributes": [
                                  {
                                    "Value": "5690f1e8-1d02-4893-90c2-ee1a69eff942",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "-46.00",
                                "Attributes": [
                                  {
                                    "Value": "5690f1e8-1d02-4893-90c2-ee1a69eff942",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Retained Earnings",
                                "Attributes": [
                                  {
                                    "Value": "7fc16c06-c342-4f32-995f-889b5f9996fd",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "156631.67",
                                "Attributes": [
                                  {
                                    "Value": "7fc16c06-c342-4f32-995f-889b5f9996fd",
                                    "Id": "account"
                                  },
                                  {
                                    "Value": "",
                                    "Id": "fromDate"
                                  },
                                  {
                                    "Value": "4/30/2019",
                                    "Id": "toDate"
                                  }
                                ]
                              },
                              {
                                "Value": "10.00",
                                "Attributes": [
                                  {
                                    "Value": "7fc16c06-c342-4f32-995f-889b5f9996fd",
                                    "Id": "account"
                                  },
                                  {
                                    "Value": "",
                                    "Id": "fromDate"
                                  },
                                  {
                                    "Value": "3/31/2019",
                                    "Id": "toDate"
                                  }
                                ]
                              },
                              {
                                "Value": "10.00",
                                "Attributes": [
                                  {
                                    "Value": "7fc16c06-c342-4f32-995f-889b5f9996fd",
                                    "Id": "account"
                                  },
                                  {
                                    "Value": "",
                                    "Id": "fromDate"
                                  },
                                  {
                                    "Value": "2/28/2019",
                                    "Id": "toDate"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Total Equity"
                              },
                              {
                                "Value": "185448.29"
                              },
                              {
                                "Value": "185333.67"
                              },
                              {
                                "Value": "464.00"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      }
    },
    "/Reports/BankSummary": {
      "get": {
        "description": "Retrieves report for bank summary",
        "summary": "getReportBankSummary",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportBankSummary",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "filter by the from date of the report e.g. 2021-02-01"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "filter by the to date of the report e.g. 2021-02-28"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "examples": {
              "application/json": {
                "Id": "ae58d0ec-9c5c-455f-b96e-690107579257",
                "Status": "OK",
                "ProviderName": "Java Public Example",
                "DateTimeUTC": "/Date(1556035526223)/",
                "Reports": [
                  {
                    "ReportName": "Bank Summary",
                    "ReportType": "BankSummary",
                    "ReportTitles": [
                      "Bank Summary",
                      "MindBody Test 10 (AU-2016-02)",
                      "From 1 April 2019 to 30 April 2019"
                    ],
                    "ReportDate": "23 April 2019",
                    "UpdatedDateUTC": "/Date(1556035526223)/",
                    "Fields": [],
                    "Rows": [
                      {
                        "RowType": "Header",
                        "Cells": [
                          {
                            "Value": "Bank Accounts"
                          },
                          {
                            "Value": "Opening Balance"
                          },
                          {
                            "Value": "Cash Received"
                          },
                          {
                            "Value": "Cash Spent"
                          },
                          {
                            "Value": "Closing Balance"
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Big City Bank",
                                "Attributes": [
                                  {
                                    "Value": "03f9cf1e-2deb-4bf1-b0a8-b57f08672eb8",
                                    "Id": "accountID"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "110.00",
                                "Attributes": [
                                  {
                                    "Value": "03f9cf1e-2deb-4bf1-b0a8-b57f08672eb8",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "100.00",
                                "Attributes": [
                                  {
                                    "Value": "03f9cf1e-2deb-4bf1-b0a8-b57f08672eb8",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "10.00"
                              }
                            ]
                          },
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Total"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "110.00"
                              },
                              {
                                "Value": "100.00"
                              },
                              {
                                "Value": "10.00"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      }
    },
    "/Reports/{ReportID}": {
      "get": {
        "description": "Retrieves a specific report using a unique ReportID",
        "summary": "getReportFromId",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportFromId",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "ReportID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique identifier for a Report"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      }
    },
    "/Reports/BudgetSummary": {
      "get": {
        "description": "Retrieves report for budget summary",
        "summary": "getReportBudgetSummary",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportBudgetSummary",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "The date for the Bank Summary report e.g. 2018-03-31"
          },
          {
            "name": "periods",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of periods to compare (integer between 1 and 12)"
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The period size to compare to (1=month, 3=quarter, 12=year)"
          }
        ],
        "responses": {
          "200": {
            "description": "success- return a Report with Rows object",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "examples": {
              "application/json": {
                "Id": "9f1e2722-0d98-4669-890f-f8f4217c968b",
                "Status": "OK",
                "ProviderName": "provider-name",
                "DateTimeUTC": "/Date(1573755037865)/",
                "Reports": [
                  {
                    "ReportName": "Budget Summary",
                    "ReportType": "BudgetSummary",
                    "ReportTitles": [
                      "Overall Budget",
                      "Budget Summary",
                      "Online Test 11",
                      "November 2019 to October 2022"
                    ],
                    "ReportDate": "14 November 2019",
                    "UpdatedDateUTC": "/Date(1573755037865)/",
                    "Fields": [],
                    "Rows": [
                      {
                        "RowType": "Header",
                        "Cells": [
                          {
                            "Value": "Account"
                          },
                          {
                            "Value": "Jan-20"
                          },
                          {
                            "Value": "Apr-20"
                          },
                          {
                            "Value": "Jul-20"
                          },
                          {
                            "Value": "Oct-20"
                          },
                          {
                            "Value": "Jan-21"
                          },
                          {
                            "Value": "Apr-21"
                          },
                          {
                            "Value": "Jul-21"
                          },
                          {
                            "Value": "Oct-21"
                          },
                          {
                            "Value": "Jan-22"
                          },
                          {
                            "Value": "Apr-22"
                          },
                          {
                            "Value": "Jul-22"
                          },
                          {
                            "Value": "Oct-22"
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Gross Profit"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Total Expenses"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Net Profit"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      }
    },
    "/Reports/ExecutiveSummary": {
      "get": {
        "description": "Retrieves report for executive summary",
        "summary": "getReportExecutiveSummary",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportExecutiveSummary",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "The date for the Bank Summary report e.g. 2018-03-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "examples": {
              "application/json": {
                "Id": "068d3505-ac37-43f3-8135-f912a5963d8a",
                "Status": "OK",
                "ProviderName": "provider-name",
                "DateTimeUTC": "/Date(1573755038314)/",
                "Reports": [
                  {
                    "ReportName": "Executive Summary",
                    "ReportType": "ExecutiveSummary",
                    "ReportTitles": [
                      "Executive Summary",
                      "Online Test 11",
                      "For the month of November 2019"
                    ],
                    "ReportDate": "14 November 2019",
                    "UpdatedDateUTC": "/Date(1573755038314)/",
                    "Fields": [],
                    "Rows": [
                      {
                        "RowType": "Header",
                        "Cells": [
                          {
                            "Value": ""
                          },
                          {
                            "Value": "Nov 2019"
                          },
                          {
                            "Value": "Oct 2019"
                          },
                          {
                            "Value": "Variance"
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Cash",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Cash received"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Cash spent"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Cash surplus (deficit)"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Closing bank balance"
                              },
                              {
                                "Value": "79.01"
                              },
                              {
                                "Value": "79.01"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Profitability",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Income"
                              },
                              {
                                "Value": "40.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Direct costs"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Gross profit (loss)"
                              },
                              {
                                "Value": "40.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Other Income"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Expenses"
                              },
                              {
                                "Value": "205.40"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Profit (loss)"
                              },
                              {
                                "Value": "-165.40"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Balance Sheet",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Debtors"
                              },
                              {
                                "Value": "590.00"
                              },
                              {
                                "Value": "550.00"
                              },
                              {
                                "Value": "7.3%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Creditors"
                              },
                              {
                                "Value": "-44.00"
                              },
                              {
                                "Value": "-44.00"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Net assets"
                              },
                              {
                                "Value": "594.16"
                              },
                              {
                                "Value": "759.56"
                              },
                              {
                                "Value": "-21.8%"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Income",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Number of invoices issued"
                              },
                              {
                                "Value": "1"
                              },
                              {
                                "Value": "0"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Average value of invoices"
                              },
                              {
                                "Value": "40.00"
                              },
                              {
                                "Value": "0.00"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Performance",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Gross profit margin"
                              },
                              {
                                "Value": "100.0%"
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Net profit margin"
                              },
                              {
                                "Value": "-413.5%"
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Return on investment (p.a.)"
                              },
                              {
                                "Value": "-334.1%"
                              },
                              {
                                "Value": "0.0%"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Position",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Average debtors days"
                              },
                              {
                                "Value": "442.50"
                              },
                              {
                                "Value": "0"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Average creditors days"
                              },
                              {
                                "Value": "-6.426484907497565725413826680"
                              },
                              {
                                "Value": "0"
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Short term cash forecast"
                              },
                              {
                                "Value": "634.00"
                              },
                              {
                                "Value": "594.00"
                              },
                              {
                                "Value": "6.7%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Current assets to liabilities"
                              },
                              {
                                "Value": "4.0729764675459012154124644427"
                              },
                              {
                                "Value": "-62.034024896265560165975103734"
                              },
                              {
                                "Value": "106.6%"
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Term assets to liabilities"
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": ""
                              },
                              {
                                "Value": "0.0%"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      }
    },
    "/Reports": {
      "get": {
        "description": "Retrieves a list of the organistaions unique reports that require a uuid to fetch",
        "summary": "getReportsList",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportsList",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      }
    },
    "/Reports/ProfitAndLoss": {
      "get": {
        "description": "Retrieves report for profit and loss",
        "summary": "getReportProfitAndLoss",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportProfitAndLoss",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "filter by the from date of the report e.g. 2021-02-01"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "filter by the to date of the report e.g. 2021-02-28"
          },
          {
            "name": "periods",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of periods to compare (integer between 1 and 12)"
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": false,
            "enum": [
              "MONTH",
              "QUARTER",
              "YEAR"
            ],
            "type": "string",
            "description": "The period size to compare to (MONTH, QUARTER, YEAR)"
          },
          {
            "name": "trackingCategoryID",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The trackingCategory 1 for the ProfitAndLoss report"
          },
          {
            "name": "trackingCategoryID2",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The trackingCategory 2 for the ProfitAndLoss report"
          },
          {
            "name": "trackingOptionID",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The tracking option 1 for the ProfitAndLoss report"
          },
          {
            "name": "trackingOptionID2",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The tracking option 2 for the ProfitAndLoss report"
          },
          {
            "name": "standardLayout",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Return the standard layout for the ProfitAndLoss report"
          },
          {
            "name": "paymentsOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Return cash only basis for the ProfitAndLoss report"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      }
    },
    "/Reports/TrialBalance": {
      "get": {
        "description": "Retrieves report for trial balance",
        "summary": "getReportTrialBalance",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportTrialBalance",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "The date for the Trial Balance report e.g. 2018-03-31"
          },
          {
            "name": "paymentsOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Return cash only basis for the Trial Balance report"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "examples": {
              "application/json": {
                "Id": "0b3ee35e-b97c-4b3c-b7e2-9a465233e329",
                "Status": "OK",
                "ProviderName": "Java Public Example",
                "DateTimeUTC": "/Date(1556129558740)/",
                "Reports": [
                  {
                    "ReportName": "Trial Balance",
                    "ReportType": "TrialBalance",
                    "ReportTitles": [
                      "Trial Balance",
                      "Dev Evangelist - Sid Test 1 (US-2016-06)",
                      "As at 24 April 2019"
                    ],
                    "ReportDate": "24 April 2019",
                    "UpdatedDateUTC": "/Date(1556129558724)/",
                    "Fields": [],
                    "Rows": [
                      {
                        "RowType": "Header",
                        "Cells": [
                          {
                            "Value": "Account"
                          },
                          {
                            "Value": "Debit"
                          },
                          {
                            "Value": "Credit"
                          },
                          {
                            "Value": "YTD Debit"
                          },
                          {
                            "Value": "YTD Credit"
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Revenue",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Big Expense (002)",
                                "Attributes": [
                                  {
                                    "Value": "da962997-a8bd-4dff-9616-01cdc199283f",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "da962997-a8bd-4dff-9616-01cdc199283f",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "da962997-a8bd-4dff-9616-01cdc199283f",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "da962997-a8bd-4dff-9616-01cdc199283f",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "80.00",
                                "Attributes": [
                                  {
                                    "Value": "da962997-a8bd-4dff-9616-01cdc199283f",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Sales (400)",
                                "Attributes": [
                                  {
                                    "Value": "02439bca-5fdc-4b62-b281-0bdf9f16fd5b",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "02439bca-5fdc-4b62-b281-0bdf9f16fd5b",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "200.00",
                                "Attributes": [
                                  {
                                    "Value": "02439bca-5fdc-4b62-b281-0bdf9f16fd5b",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "02439bca-5fdc-4b62-b281-0bdf9f16fd5b",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "1020.22",
                                "Attributes": [
                                  {
                                    "Value": "02439bca-5fdc-4b62-b281-0bdf9f16fd5b",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Sales-35325 (1302)",
                                "Attributes": [
                                  {
                                    "Value": "3f50db14-1fe6-450b-bfe8-b2d894f18c62",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "3f50db14-1fe6-450b-bfe8-b2d894f18c62",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "1000.00",
                                "Attributes": [
                                  {
                                    "Value": "3f50db14-1fe6-450b-bfe8-b2d894f18c62",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "3f50db14-1fe6-450b-bfe8-b2d894f18c62",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "1000.00",
                                "Attributes": [
                                  {
                                    "Value": "3f50db14-1fe6-450b-bfe8-b2d894f18c62",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Expenses",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Foobar14043 (123)",
                                "Attributes": [
                                  {
                                    "Value": "d1602f69-f900-4616-8d34-90af393fa368",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "d1602f69-f900-4616-8d34-90af393fa368",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "d1602f69-f900-4616-8d34-90af393fa368",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "40.00",
                                "Attributes": [
                                  {
                                    "Value": "d1602f69-f900-4616-8d34-90af393fa368",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "d1602f69-f900-4616-8d34-90af393fa368",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "MyExp51937 (1231239)",
                                "Attributes": [
                                  {
                                    "Value": "90f10e0a-a043-46fe-b87e-630e9a951dae",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "90f10e0a-a043-46fe-b87e-630e9a951dae",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "90f10e0a-a043-46fe-b87e-630e9a951dae",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "80.00",
                                "Attributes": [
                                  {
                                    "Value": "90f10e0a-a043-46fe-b87e-630e9a951dae",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "90f10e0a-a043-46fe-b87e-630e9a951dae",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Assets",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Accounts Receivable (120)",
                                "Attributes": [
                                  {
                                    "Value": "31ae5bb4-611c-4f89-a369-86e4d56e90b6",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "1190.00",
                                "Attributes": [
                                  {
                                    "Value": "31ae5bb4-611c-4f89-a369-86e4d56e90b6",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "31ae5bb4-611c-4f89-a369-86e4d56e90b6",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "36555.04",
                                "Attributes": [
                                  {
                                    "Value": "31ae5bb4-611c-4f89-a369-86e4d56e90b6",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "31ae5bb4-611c-4f89-a369-86e4d56e90b6",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Business Wells Fargo (088)",
                                "Attributes": [
                                  {
                                    "Value": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "7639.04",
                                "Attributes": [
                                  {
                                    "Value": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "6f7594f2-f059-4d56-9e67-47ac9733bfe9",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Generic Cash Clearing (8003)",
                                "Attributes": [
                                  {
                                    "Value": "f4be973a-25fc-48d0-a7df-7f719f239729",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "f4be973a-25fc-48d0-a7df-7f719f239729",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "f4be973a-25fc-48d0-a7df-7f719f239729",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "1443.00",
                                "Attributes": [
                                  {
                                    "Value": "f4be973a-25fc-48d0-a7df-7f719f239729",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "f4be973a-25fc-48d0-a7df-7f719f239729",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Generic Credit Card Clearing (8002)",
                                "Attributes": [
                                  {
                                    "Value": "a10867ac-0bc4-4aa5-af00-b9e5b207c6c3",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "a10867ac-0bc4-4aa5-af00-b9e5b207c6c3",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "a10867ac-0bc4-4aa5-af00-b9e5b207c6c3",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "a10867ac-0bc4-4aa5-af00-b9e5b207c6c3",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "96.49",
                                "Attributes": [
                                  {
                                    "Value": "a10867ac-0bc4-4aa5-af00-b9e5b207c6c3",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Generic Inventory (1400)",
                                "Attributes": [
                                  {
                                    "Value": "7422f1b6-619f-488c-89e1-91bdde20216c",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "7422f1b6-619f-488c-89e1-91bdde20216c",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "7422f1b6-619f-488c-89e1-91bdde20216c",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "7422f1b6-619f-488c-89e1-91bdde20216c",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "160.00",
                                "Attributes": [
                                  {
                                    "Value": "7422f1b6-619f-488c-89e1-91bdde20216c",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "My Savings (090)",
                                "Attributes": [
                                  {
                                    "Value": "7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "219.92",
                                "Attributes": [
                                  {
                                    "Value": "7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Payment Wall Clearing Account (8001)",
                                "Attributes": [
                                  {
                                    "Value": "bc06840c-12c5-4e22-bb57-fef4d64bac10",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "bc06840c-12c5-4e22-bb57-fef4d64bac10",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "bc06840c-12c5-4e22-bb57-fef4d64bac10",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "1.00",
                                "Attributes": [
                                  {
                                    "Value": "bc06840c-12c5-4e22-bb57-fef4d64bac10",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "bc06840c-12c5-4e22-bb57-fef4d64bac10",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Liabilities",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Accounts Payable (200)",
                                "Attributes": [
                                  {
                                    "Value": "e9132ee7-4dcf-4fad-b76c-86e212af645a",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "e9132ee7-4dcf-4fad-b76c-86e212af645a",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "e9132ee7-4dcf-4fad-b76c-86e212af645a",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "e9132ee7-4dcf-4fad-b76c-86e212af645a",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "9223.00",
                                "Attributes": [
                                  {
                                    "Value": "e9132ee7-4dcf-4fad-b76c-86e212af645a",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Deferred Revenue (2300)",
                                "Attributes": [
                                  {
                                    "Value": "f22cd74e-f59d-4f38-a08d-07e14df28c24",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "f22cd74e-f59d-4f38-a08d-07e14df28c24",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "f22cd74e-f59d-4f38-a08d-07e14df28c24",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "f22cd74e-f59d-4f38-a08d-07e14df28c24",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "1854.24",
                                "Attributes": [
                                  {
                                    "Value": "f22cd74e-f59d-4f38-a08d-07e14df28c24",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Rounding (260)",
                                "Attributes": [
                                  {
                                    "Value": "f0072999-8f7c-4b01-bce9-bd9352f98e02",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "f0072999-8f7c-4b01-bce9-bd9352f98e02",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "f0072999-8f7c-4b01-bce9-bd9352f98e02",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "f0072999-8f7c-4b01-bce9-bd9352f98e02",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.01",
                                "Attributes": [
                                  {
                                    "Value": "f0072999-8f7c-4b01-bce9-bd9352f98e02",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Sales Tax (220)",
                                "Attributes": [
                                  {
                                    "Value": "af0be362-45fe-4730-a8af-634c2fb93f4d",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "af0be362-45fe-4730-a8af-634c2fb93f4d",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "af0be362-45fe-4730-a8af-634c2fb93f4d",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "af0be362-45fe-4730-a8af-634c2fb93f4d",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "1578.35",
                                "Attributes": [
                                  {
                                    "Value": "af0be362-45fe-4730-a8af-634c2fb93f4d",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Suspense (250)",
                                "Attributes": [
                                  {
                                    "Value": "5ec2f302-cd60-4f8b-a915-9229dd45e6fa",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "10.00",
                                "Attributes": [
                                  {
                                    "Value": "5ec2f302-cd60-4f8b-a915-9229dd45e6fa",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "5ec2f302-cd60-4f8b-a915-9229dd45e6fa",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "41.00",
                                "Attributes": [
                                  {
                                    "Value": "5ec2f302-cd60-4f8b-a915-9229dd45e6fa",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "5ec2f302-cd60-4f8b-a915-9229dd45e6fa",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Unpaid Expense Claims (210)",
                                "Attributes": [
                                  {
                                    "Value": "38e6967d-4da1-4a93-85f1-ea3c93b61041",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "38e6967d-4da1-4a93-85f1-ea3c93b61041",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "38e6967d-4da1-4a93-85f1-ea3c93b61041",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "38e6967d-4da1-4a93-85f1-ea3c93b61041",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "135.00",
                                "Attributes": [
                                  {
                                    "Value": "38e6967d-4da1-4a93-85f1-ea3c93b61041",
                                    "Id": "account"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "Equity",
                        "Rows": [
                          {
                            "RowType": "Row",
                            "Cells": [
                              {
                                "Value": "Retained Earnings (320)",
                                "Attributes": [
                                  {
                                    "Value": "6ef53919-b47d-4341-b11a-735a3f8a6515",
                                    "Id": "account"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "6ef53919-b47d-4341-b11a-735a3f8a6515",
                                    "Id": "account"
                                  },
                                  {
                                    "Value": "",
                                    "Id": "fromDate"
                                  },
                                  {
                                    "Value": "12/31/2018",
                                    "Id": "toDate"
                                  }
                                ]
                              },
                              {
                                "Value": "0.00",
                                "Attributes": [
                                  {
                                    "Value": "6ef53919-b47d-4341-b11a-735a3f8a6515",
                                    "Id": "account"
                                  },
                                  {
                                    "Value": "",
                                    "Id": "fromDate"
                                  },
                                  {
                                    "Value": "12/31/2018",
                                    "Id": "toDate"
                                  }
                                ]
                              },
                              {
                                "Value": "",
                                "Attributes": [
                                  {
                                    "Value": "6ef53919-b47d-4341-b11a-735a3f8a6515",
                                    "Id": "account"
                                  },
                                  {
                                    "Value": "",
                                    "Id": "fromDate"
                                  },
                                  {
                                    "Value": "12/31/2018",
                                    "Id": "toDate"
                                  }
                                ]
                              },
                              {
                                "Value": "30871.69",
                                "Attributes": [
                                  {
                                    "Value": "6ef53919-b47d-4341-b11a-735a3f8a6515",
                                    "Id": "account"
                                  },
                                  {
                                    "Value": "",
                                    "Id": "fromDate"
                                  },
                                  {
                                    "Value": "12/31/2018",
                                    "Id": "toDate"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "RowType": "Section",
                        "Title": "",
                        "Rows": [
                          {
                            "RowType": "SummaryRow",
                            "Cells": [
                              {
                                "Value": "Total"
                              },
                              {
                                "Value": "1200.00"
                              },
                              {
                                "Value": "1200.00"
                              },
                              {
                                "Value": "46019.00"
                              },
                              {
                                "Value": "46019.00"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      }
    },
    "/Setup": {
      "post": {
        "description": "Sets the chart of accounts, the conversion date and conversion balances",
        "summary": "postSetup",
        "tags": [
          "Accounting"
        ],
        "operationId": "postSetup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Object including an accounts array, a conversion balances array and a conversion date object in body of request",
            "schema": {
              "$ref": "#/definitions/Setup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - returns a summary of the chart of accounts updates",
            "schema": {
              "$ref": "#/definitions/ImportSummaryObject"
            },
            "examples": {
              "application/json": {
                "Id": "80dcb65b-4d14-4350-84e6-1438a809244a",
                "Status": "OK",
                "ProviderName": "Java Public Example",
                "DateTimeUTC": "/Date(1604457589645)/",
                "ImportSummary": {
                  "Accounts": {
                    "Total": 17,
                    "New": 0,
                    "Updated": 8,
                    "Deleted": 0,
                    "Locked": 0,
                    "System": 9,
                    "Errored": 0,
                    "Present": true,
                    "NewOrUpdated": 8
                  },
                  "Organisation": {
                    "Present": false
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/TaxRates": {
      "get": {
        "description": "Retrieves tax rates",
        "summary": "getTaxRates",
        "tags": [
          "Accounting"
        ],
        "operationId": "getTaxRates",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "TaxType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by tax type"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TaxRates array with TaxRates",
            "schema": {
              "$ref": "#/definitions/TaxRates"
            },
            "examples": {
              "application/json": {
                "Id": "455d494d-9706-465b-b584-7086ca406b27",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1555086839841)/",
                "TaxRates": [
                  {
                    "Name": "15% GST on Expenses",
                    "TaxType": "INPUT2",
                    "ReportTaxType": "INPUT",
                    "CanApplyToAssets": true,
                    "CanApplyToEquity": true,
                    "CanApplyToExpenses": true,
                    "CanApplyToLiabilities": true,
                    "CanApplyToRevenue": false,
                    "DisplayTaxRate": 15.0,
                    "EffectiveRate": 15.0,
                    "Status": "ACTIVE",
                    "TaxComponents": [
                      {
                        "Name": "GST",
                        "Rate": 15.0,
                        "IsCompound": false,
                        "IsNonRecoverable": false
                      }
                    ]
                  },
                  {
                    "Name": "15% GST on Income",
                    "TaxType": "OUTPUT2",
                    "ReportTaxType": "OUTPUT",
                    "CanApplyToAssets": true,
                    "CanApplyToEquity": true,
                    "CanApplyToExpenses": false,
                    "CanApplyToLiabilities": true,
                    "CanApplyToRevenue": true,
                    "DisplayTaxRate": 15.0,
                    "EffectiveRate": 15.0,
                    "Status": "ACTIVE",
                    "TaxComponents": [
                      {
                        "Name": "GST",
                        "Rate": 15.0,
                        "IsCompound": false,
                        "IsNonRecoverable": false
                      }
                    ]
                  },
                  {
                    "Name": "GST on Imports",
                    "TaxType": "GSTONIMPORTS",
                    "ReportTaxType": "GSTONIMPORTS",
                    "CanApplyToAssets": false,
                    "CanApplyToEquity": false,
                    "CanApplyToExpenses": false,
                    "CanApplyToLiabilities": true,
                    "CanApplyToRevenue": false,
                    "DisplayTaxRate": 0.0,
                    "EffectiveRate": 0.0,
                    "Status": "ACTIVE",
                    "TaxComponents": [
                      {
                        "Name": "GST",
                        "Rate": 0.0,
                        "IsCompound": false,
                        "IsNonRecoverable": false
                      }
                    ]
                  },
                  {
                    "Name": "No GST",
                    "TaxType": "NONE",
                    "ReportTaxType": "NONE",
                    "CanApplyToAssets": true,
                    "CanApplyToEquity": true,
                    "CanApplyToExpenses": true,
                    "CanApplyToLiabilities": true,
                    "CanApplyToRevenue": true,
                    "DisplayTaxRate": 0.0,
                    "EffectiveRate": 0.0,
                    "Status": "ACTIVE",
                    "TaxComponents": [
                      {
                        "Name": "GST",
                        "Rate": 0.0,
                        "IsCompound": false,
                        "IsNonRecoverable": false
                      }
                    ]
                  },
                  {
                    "Name": "Zero Rated",
                    "TaxType": "ZERORATED",
                    "ReportTaxType": "OUTPUT",
                    "CanApplyToAssets": false,
                    "CanApplyToEquity": false,
                    "CanApplyToExpenses": false,
                    "CanApplyToLiabilities": true,
                    "CanApplyToRevenue": true,
                    "DisplayTaxRate": 0.0,
                    "EffectiveRate": 0.0,
                    "Status": "ACTIVE",
                    "TaxComponents": [
                      {
                        "Name": "GST",
                        "Rate": 0.0,
                        "IsCompound": false,
                        "IsNonRecoverable": false
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Creates one or more tax rates",
        "summary": "createTaxRates",
        "tags": [
          "Accounting"
        ],
        "operationId": "createTaxRates",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "TaxRates array with TaxRate object in body of request",
            "schema": {
              "$ref": "#/definitions/TaxRates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TaxRates array newly created TaxRate",
            "schema": {
              "$ref": "#/definitions/TaxRates"
            },
            "examples": {
              "application/json": {
                "Id": "9d2c5e56-fab4-450b-a5ff-d47409508eab",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1555086839080)/",
                "TaxRates": [
                  {
                    "Name": "SDKTax29067",
                    "TaxType": "TAX002",
                    "ReportTaxType": "INPUT",
                    "CanApplyToAssets": true,
                    "CanApplyToEquity": true,
                    "CanApplyToExpenses": true,
                    "CanApplyToLiabilities": true,
                    "CanApplyToRevenue": false,
                    "DisplayTaxRate": 2.25,
                    "EffectiveRate": 2.25,
                    "Status": "ACTIVE",
                    "TaxComponents": [
                      {
                        "Name": "State Tax",
                        "Rate": 2.25,
                        "IsCompound": false,
                        "IsNonRecoverable": false
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates tax rates",
        "summary": "updateTaxRate",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateTaxRate",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TaxRates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TaxRates array updated TaxRate",
            "schema": {
              "$ref": "#/definitions/TaxRates"
            },
            "examples": {
              "application/json": {
                "Id": "12f4c453-2e25-41aa-a52f-6faaf6c05832",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1555086839658)/",
                "TaxRates": [
                  {
                    "Name": "SDKTax29067",
                    "TaxType": "TAX002",
                    "ReportTaxType": "INPUT",
                    "CanApplyToAssets": true,
                    "CanApplyToEquity": true,
                    "CanApplyToExpenses": true,
                    "CanApplyToLiabilities": true,
                    "CanApplyToRevenue": false,
                    "DisplayTaxRate": 2.25,
                    "EffectiveRate": 2.25,
                    "Status": "DELETED",
                    "TaxComponents": [
                      {
                        "Name": "State Tax",
                        "Rate": 2.25,
                        "IsCompound": false,
                        "IsNonRecoverable": false
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/TrackingCategories": {
      "get": {
        "description": "Retrieves tracking categories and options",
        "summary": "getTrackingCategories",
        "tags": [
          "Accounting"
        ],
        "operationId": "getTrackingCategories",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "includeArchived",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "e.g. includeArchived=true - Categories and options with a status of ARCHIVED will be included in the response"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingCategories array of TrackingCategory",
            "schema": {
              "$ref": "#/definitions/TrackingCategories"
            },
            "examples": {
              "application/json": {
                "Id": "cec55068-8061-48e5-ac83-c77e7c54cf3d",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1555085855047)/",
                "TrackingCategories": [
                  {
                    "Name": "BarFoo",
                    "Status": "ACTIVE",
                    "TrackingCategoryID": "22f10184-0deb-44ae-a312-b1f6ea70e51f",
                    "Options": []
                  },
                  {
                    "Name": "HelloWorld",
                    "Status": "ACTIVE",
                    "TrackingCategoryID": "0c9fce3e-a111-4d99-803a-62cf3f40e633",
                    "Options": []
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "description": "Create tracking categories",
        "summary": "createTrackingCategory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createTrackingCategory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "TrackingCategory object in body of request",
            "schema": {
              "$ref": "#/definitions/TrackingCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingCategories array of newly created TrackingCategory",
            "schema": {
              "$ref": "#/definitions/TrackingCategories"
            },
            "examples": {
              "application/json": {
                "Id": "1a9f8e03-9916-4a42-93a9-e8fa4902d49c",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1555085855988)/",
                "TrackingCategories": [
                  {
                    "Name": "FooBar",
                    "Status": "ACTIVE",
                    "TrackingCategoryID": "b1df776b-b093-4730-b6ea-590cca40e723",
                    "Options": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/TrackingCategories/{TrackingCategoryID}": {
      "get": {
        "description": "Retrieves specific tracking categories and options using a unique tracking category Id",
        "summary": "getTrackingCategory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getTrackingCategory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a TrackingCategory"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingCategories array of specified TrackingCategory",
            "schema": {
              "$ref": "#/definitions/TrackingCategories"
            },
            "examples": {
              "application/json": {
                "Id": "b75b8862-39c0-45a8-82b8-30ab4831996b",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1555085855442)/",
                "TrackingCategories": [
                  {
                    "Name": "Foo41157",
                    "Status": "DELETED",
                    "TrackingCategoryID": "22f10184-0deb-44ae-a312-b1f6ea70e51f",
                    "Options": []
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Updates a specific tracking category",
        "summary": "updateTrackingCategory",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateTrackingCategory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a TrackingCategory"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TrackingCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingCategories array of updated TrackingCategory",
            "schema": {
              "$ref": "#/definitions/TrackingCategories"
            },
            "examples": {
              "application/json": {
                "Id": "55438774-f87d-4731-b586-799cf0f914ed",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1555085856275)/",
                "TrackingCategories": [
                  {
                    "Name": "BarFoo",
                    "Status": "ACTIVE",
                    "TrackingCategoryID": "b1df776b-b093-4730-b6ea-590cca40e723",
                    "Options": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      },
      "delete": {
        "description": "Deletes a specific tracking category",
        "summary": "deleteTrackingCategory",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteTrackingCategory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a TrackingCategory"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingCategories array of deleted TrackingCategory",
            "schema": {
              "$ref": "#/definitions/TrackingCategories"
            },
            "examples": {
              "application/json": {
                "Id": "ca7f8145-c8a5-4366-a2fb-784edc0cfbb7",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1555086457922)/",
                "TrackingCategories": [
                  {
                    "Name": "Foo46189",
                    "Status": "DELETED",
                    "TrackingCategoryID": "0390bdfd-94f2-49d6-b7a0-4a38c46ebf03",
                    "Options": []
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/TrackingCategories/{TrackingCategoryID}/Options": {
      "put": {
        "description": "Creates options for a specific tracking category",
        "summary": "createTrackingOptions",
        "tags": [
          "Accounting"
        ],
        "operationId": "createTrackingOptions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a TrackingCategory"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "TrackingOption object in body of request",
            "schema": {
              "$ref": "#/definitions/TrackingOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingOptions array of options for a specified category",
            "schema": {
              "$ref": "#/definitions/TrackingOptions"
            },
            "examples": {
              "application/json": {
                "Id": "923be702-d124-4f5c-a568-760906538d8e",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1555085857061)/",
                "Options": [
                  {
                    "TrackingOptionID": "34669548-b989-487a-979f-0787d04568a2",
                    "Name": "Bar40423",
                    "Status": "ACTIVE",
                    "HasValidationErrors": false,
                    "IsDeleted": false,
                    "IsArchived": false,
                    "IsActive": true
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/TrackingCategories/{TrackingCategoryID}/Options/{TrackingOptionID}": {
      "post": {
        "description": "Updates a specific option for a specific tracking category",
        "summary": "updateTrackingOptions",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateTrackingOptions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a TrackingCategory"
          },
          {
            "name": "TrackingOptionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Tracking Option"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TrackingOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingOptions array of options for a specified category",
            "schema": {
              "$ref": "#/definitions/TrackingOptions"
            },
            "examples": {
              "application/json": {
                "Id": "923be702-d124-4f5c-a568-760906538d8e",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1555085857061)/",
                "Options": [
                  {
                    "TrackingOptionID": "34669548-b989-487a-979f-0787d04568a2",
                    "Name": "Bar40423",
                    "Status": "ACTIVE",
                    "HasValidationErrors": false,
                    "IsDeleted": false,
                    "IsArchived": false,
                    "IsActive": true
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      },
      "delete": {
        "description": "Deletes a specific option for a specific tracking category",
        "summary": "deleteTrackingOptions",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteTrackingOptions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a TrackingCategory"
          },
          {
            "name": "TrackingOptionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a Tracking Option"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingOptions array of remaining options for a specified category",
            "schema": {
              "$ref": "#/definitions/TrackingOptions"
            },
            "examples": {
              "application/json": {
                "Id": "d985866e-0831-418f-a07c-4d843ff66d25",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1555085857338)/",
                "Options": [
                  {
                    "TrackingOptionID": "34669548-b989-487a-979f-0787d04568a2",
                    "Name": "Bar40423",
                    "Status": "DELETED",
                    "HasValidationErrors": false,
                    "IsDeleted": true,
                    "IsArchived": false,
                    "IsActive": false
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      }
    },
    "/Users": {
      "get": {
        "description": "Retrieves users",
        "summary": "getUsers",
        "tags": [
          "Accounting"
        ],
        "operationId": "getUsers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Users array of all User",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "examples": {
              "application/json": {
                "Id": "17932a4e-4948-4d50-8672-4ef0e1dd90c5",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1553880796393)/",
                "Users": [
                  {
                    "UserID": "3c37ef1d-cd49-4589-9787-3c418ed8b6ac",
                    "EmailAddress": "test@email.com",
                    "FirstName": "Test",
                    "LastName": "Xero",
                    "UpdatedDateUTC": "/Date(1508523261613+0000)/",
                    "IsSubscriber": false,
                    "OrganisationRole": "FINANCIALADVISER"
                  },
                  {
                    "UserID": "d1164823-0ac1-41ad-987b-b4e30fe0b273",
                    "EmailAddress": "api@xero.com",
                    "FirstName": "API ",
                    "LastName": "Team",
                    "UpdatedDateUTC": "/Date(1511957179217+0000)/",
                    "IsSubscriber": true,
                    "OrganisationRole": "FINANCIALADVISER"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      }
    },
    "/Users/{UserID}": {
      "get": {
        "description": "Retrieves a specific user",
        "summary": "getUser",
        "tags": [
          "Accounting"
        ],
        "operationId": "getUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Xero identifier for Tenant"
          },
          {
            "name": "UserID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a User"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Users array of specified User",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "examples": {
              "application/json": {
                "Id": "51250ce8-1b35-4ba4-b404-dc94ff75bd87",
                "Status": "OK",
                "ProviderName": "Provider Name Example",
                "DateTimeUTC": "/Date(1553880796732)/",
                "Users": [
                  {
                    "UserID": "3c37ef1d-cd49-4589-9787-3c418ed8b6ac",
                    "EmailAddress": "test@email.com",
                    "FirstName": "Test",
                    "LastName": "Xero",
                    "UpdatedDateUTC": "/Date(1508523261613+0000)/",
                    "IsSubscriber": false,
                    "OrganisationRole": "FINANCIALADVISER"
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings",
              "accounting.settings.read"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "AddressForOrganisation": {
      "title": "AddressForOrganisation",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/types"
      },
      "type": "object",
      "properties": {
        "AddressType": {
          "$ref": "#/definitions/AddressType"
        },
        "AddressLine1": {
          "description": "max length = 500",
          "type": "string",
          "maxLength": 500
        },
        "AddressLine2": {
          "description": "max length = 500",
          "type": "string",
          "maxLength": 500
        },
        "AddressLine3": {
          "description": "max length = 500",
          "type": "string",
          "maxLength": 500
        },
        "AddressLine4": {
          "description": "max length = 500",
          "type": "string",
          "maxLength": 500
        },
        "City": {
          "description": "max length = 255",
          "type": "string",
          "maxLength": 255
        },
        "Region": {
          "description": "max length = 255",
          "type": "string",
          "maxLength": 255
        },
        "PostalCode": {
          "description": "max length = 50",
          "type": "string",
          "maxLength": 50
        },
        "Country": {
          "description": "max length = 50, [A-Z], [a-z] only",
          "type": "string",
          "maxLength": 50
        },
        "AttentionTo": {
          "description": "max length = 255",
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "Address": {
      "title": "Address",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/types"
      },
      "type": "object",
      "properties": {
        "AddressType": {
          "$ref": "#/definitions/AddressType1"
        },
        "AddressLine1": {
          "description": "max length = 500",
          "type": "string",
          "maxLength": 500
        },
        "AddressLine2": {
          "description": "max length = 500",
          "type": "string",
          "maxLength": 500
        },
        "AddressLine3": {
          "description": "max length = 500",
          "type": "string",
          "maxLength": 500
        },
        "AddressLine4": {
          "description": "max length = 500",
          "type": "string",
          "maxLength": 500
        },
        "City": {
          "description": "max length = 255",
          "type": "string",
          "maxLength": 255
        },
        "Region": {
          "description": "max length = 255",
          "type": "string",
          "maxLength": 255
        },
        "PostalCode": {
          "description": "max length = 50",
          "type": "string",
          "maxLength": 50
        },
        "Country": {
          "description": "max length = 50, [A-Z], [a-z] only",
          "type": "string",
          "maxLength": 50
        },
        "AttentionTo": {
          "description": "max length = 255",
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "Phone": {
      "title": "Phone",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/types"
      },
      "type": "object",
      "properties": {
        "PhoneType": {
          "$ref": "#/definitions/PhoneType"
        },
        "PhoneNumber": {
          "description": "max length = 50",
          "type": "string",
          "maxLength": 50
        },
        "PhoneAreaCode": {
          "description": "max length = 10",
          "type": "string",
          "maxLength": 10
        },
        "PhoneCountryCode": {
          "description": "max length = 20",
          "type": "string",
          "maxLength": 20
        }
      }
    },
    "Accounts": {
      "title": "Accounts",
      "type": "object",
      "properties": {
        "Accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        }
      }
    },
    "Account": {
      "title": "Account",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/accounts/"
      },
      "type": "object",
      "properties": {
        "Code": {
          "description": "Customer defined alpha numeric account code e.g 200 or SALES (max length = 10)",
          "example": "4400",
          "type": "string"
        },
        "Name": {
          "description": "Name of account (max length = 150)",
          "example": "Food Sales",
          "type": "string",
          "maxLength": 150
        },
        "AccountID": {
          "description": "The Xero identifier for an account – specified as a string following  the endpoint name   e.g. /297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "Type": {
          "$ref": "#/definitions/AccountType"
        },
        "BankAccountNumber": {
          "description": "For bank accounts only (Account Type BANK)",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/Status"
        },
        "Description": {
          "description": "Description of the Account. Valid for all types of accounts except bank accounts (max length = 4000)",
          "type": "string"
        },
        "BankAccountType": {
          "$ref": "#/definitions/BankAccountType"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "TaxType": {
          "description": "The tax type from TaxRates",
          "type": "string"
        },
        "EnablePaymentsToAccount": {
          "description": "Boolean – describes whether account can have payments applied to it",
          "type": "boolean"
        },
        "ShowInExpenseClaims": {
          "description": "Boolean – describes whether account code is available for use with expense claims",
          "type": "boolean"
        },
        "Class": {
          "$ref": "#/definitions/Class"
        },
        "SystemAccount": {
          "$ref": "#/definitions/SystemAccount"
        },
        "ReportingCode": {
          "description": "Shown if set",
          "type": "string"
        },
        "ReportingCodeName": {
          "description": "Shown if set",
          "readOnly": true,
          "type": "string"
        },
        "HasAttachments": {
          "description": "boolean to indicate if an account has an attachment (read only)",
          "example": false,
          "readOnly": true,
          "type": "boolean",
          "default": false
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "AddToWatchlist": {
          "description": "Boolean – describes whether the account is shown in the watchlist widget on the dashboard",
          "type": "boolean"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "AccountType": {
      "title": "AccountType",
      "description": "See Account Types",
      "type": "string",
      "enum": [
        "BANK",
        "CURRENT",
        "CURRLIAB",
        "DEPRECIATN",
        "DIRECTCOSTS",
        "EQUITY",
        "EXPENSE",
        "FIXED",
        "INVENTORY",
        "LIABILITY",
        "NONCURRENT",
        "OTHERINCOME",
        "OVERHEADS",
        "PREPAYMENT",
        "REVENUE",
        "SALES",
        "TERMLIAB",
        "PAYGLIABILITY",
        "PAYG",
        "SUPERANNUATIONEXPENSE",
        "SUPERANNUATIONLIABILITY",
        "WAGESEXPENSE"
      ]
    },
    "Attachments": {
      "title": "Attachments",
      "type": "object",
      "properties": {
        "Attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        }
      }
    },
    "Attachment": {
      "title": "Attachment",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/attachments/"
      },
      "type": "object",
      "properties": {
        "AttachmentID": {
          "description": "Unique ID for the file",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "FileName": {
          "description": "Name of the file",
          "example": "xero-dev.jpg",
          "type": "string"
        },
        "Url": {
          "description": "URL to the file on xero.com",
          "example": "https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg",
          "type": "string"
        },
        "MimeType": {
          "description": "Type of file",
          "example": "image/jpg",
          "type": "string"
        },
        "ContentLength": {
          "description": "Length of the file content",
          "type": "integer",
          "format": "int32"
        },
        "IncludeOnline": {
          "description": "Include the file with the online invoice",
          "type": "boolean"
        }
      }
    },
    "BankTransactions": {
      "title": "BankTransactions",
      "type": "object",
      "properties": {
        "BankTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankTransaction"
          }
        }
      }
    },
    "BankTransaction": {
      "title": "BankTransaction",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/banktransactions/"
      },
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Type"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "LineItems": {
          "description": "See LineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "BankAccount": {
          "$ref": "#/definitions/Account"
        },
        "IsReconciled": {
          "description": "Boolean to show if transaction is reconciled",
          "type": "boolean"
        },
        "Date": {
          "description": "Date of transaction – YYYY-MM-DD",
          "type": "string"
        },
        "Reference": {
          "description": "Reference for the transaction. Only supported for SPEND and RECEIVE transactions.",
          "type": "string"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "CurrencyRate": {
          "description": "Exchange rate to base currency when money is spent or received. e.g.0.7500 Only used for bank transactions in non base currency. If this isn’t specified for non base currency accounts then either the user-defined rate (preference) or the XE.com day rate will be used. Setting currency is only supported on overpayments.",
          "type": "number",
          "format": "double"
        },
        "Url": {
          "description": "URL link to a source document – shown as “Go to App Name”",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/Status2"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "SubTotal": {
          "description": "Total of bank transaction excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "Total tax on bank transaction",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "Total of bank transaction tax inclusive",
          "type": "number",
          "format": "double"
        },
        "BankTransactionID": {
          "description": "Xero generated unique identifier for bank transaction",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "PrepaymentID": {
          "description": "Xero generated unique identifier for a Prepayment. This will be returned on BankTransactions with a Type of SPEND-PREPAYMENT or RECEIVE-PREPAYMENT",
          "example": "00000000-0000-0000-0000-000000000000",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "OverpaymentID": {
          "description": "Xero generated unique identifier for an Overpayment. This will be returned on BankTransactions with a Type of SPEND-OVERPAYMENT or RECEIVE-OVERPAYMENT",
          "example": "00000000-0000-0000-0000-000000000000",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "HasAttachments": {
          "description": "Boolean to indicate if a bank transaction has an attachment",
          "example": false,
          "readOnly": true,
          "type": "boolean",
          "default": false
        },
        "StatusAttributeString": {
          "description": "A string to indicate if a invoice status",
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      },
      "required": [
        "Type",
        "LineItems",
        "BankAccount"
      ]
    },
    "LineAmountTypes": {
      "title": "LineAmountTypes",
      "description": "Line amounts are exclusive of tax by default if you don’t specify this element. See Line Amount Types",
      "type": "string",
      "enum": [
        "Exclusive",
        "Inclusive",
        "NoTax"
      ]
    },
    "LineItem": {
      "title": "LineItem",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/invoices#post"
      },
      "type": "object",
      "properties": {
        "LineItemID": {
          "description": "LineItem unique ID",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "Description": {
          "description": "Description needs to be at least 1 char long. A line item with just a description (i.e no unit amount or quantity) can be created by specifying just a <Description> element that contains at least 1 character",
          "type": "string"
        },
        "Quantity": {
          "description": "LineItem Quantity",
          "type": "number",
          "format": "double"
        },
        "UnitAmount": {
          "description": "LineItem Unit Amount",
          "type": "number",
          "format": "double"
        },
        "ItemCode": {
          "description": "See Items",
          "type": "string"
        },
        "AccountCode": {
          "description": "See Accounts",
          "type": "string"
        },
        "AccountID": {
          "description": "The associated account ID related to this line item",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "TaxType": {
          "description": "The tax type from TaxRates",
          "type": "string"
        },
        "TaxAmount": {
          "description": "The tax amount is auto calculated as a percentage of the line amount (see below) based on the tax rate. This value can be overriden if the calculated <TaxAmount> is not correct.",
          "type": "number",
          "format": "double"
        },
        "Item": {
          "$ref": "#/definitions/LineItemItem"
        },
        "LineAmount": {
          "description": "If you wish to omit either of the <Quantity> or <UnitAmount> you can provide a LineAmount and Xero will calculate the missing amount for you. The line amount reflects the discounted price if a DiscountRate has been used . i.e LineAmount = Quantity * Unit Amount * ((100 – DiscountRate)/100)",
          "type": "number",
          "format": "double"
        },
        "Tracking": {
          "description": "Optional Tracking Category – see Tracking.  Any LineItem can have a  maximum of 2 <TrackingCategory> elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemTracking"
          }
        },
        "DiscountRate": {
          "description": "Percentage discount being applied to a line item (only supported on  ACCREC invoices – ACC PAY invoices and credit notes in Xero do not support discounts",
          "type": "number",
          "format": "double"
        },
        "DiscountAmount": {
          "description": "Discount amount being applied to a line item. Only supported on ACCREC invoices - ACCPAY invoices and credit notes in Xero do not support discounts.",
          "type": "number",
          "format": "double"
        },
        "RepeatingInvoiceID": {
          "description": "The Xero identifier for a Repeating Invoice",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "LineItemItem": {
      "title": "LineItemItem",
      "type": "object",
      "properties": {
        "Code": {
          "description": "User defined item code (max length = 30)",
          "type": "string",
          "maxLength": 30
        },
        "Name": {
          "description": "The name of the item (max length = 50)",
          "type": "string",
          "maxLength": 50
        },
        "ItemID": {
          "description": "The Xero identifier for an Item",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "LineItemTracking": {
      "title": "LineItemTracking",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/invoices#post"
      },
      "type": "object",
      "properties": {
        "TrackingCategoryID": {
          "description": "The Xero identifier for a tracking category",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "TrackingOptionID": {
          "description": "The Xero identifier for a tracking category option",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "Name": {
          "description": "The name of the tracking category",
          "example": "Region",
          "type": "string",
          "maxLength": 100
        },
        "Option": {
          "description": "See Tracking Options",
          "example": "North",
          "type": "string"
        }
      }
    },
    "BankTransfers": {
      "title": "BankTransfers",
      "type": "object",
      "properties": {
        "BankTransfers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankTransfer"
          }
        }
      }
    },
    "BankTransfer": {
      "title": "BankTransfer",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/bank-transfers/"
      },
      "type": "object",
      "properties": {
        "FromBankAccount": {
          "$ref": "#/definitions/Account"
        },
        "ToBankAccount": {
          "$ref": "#/definitions/Account"
        },
        "Amount": {
          "description": "amount of the transaction",
          "type": "number",
          "format": "double"
        },
        "Date": {
          "description": "The date of the Transfer YYYY-MM-DD",
          "type": "string"
        },
        "BankTransferID": {
          "description": "The identifier of the Bank Transfer",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "CurrencyRate": {
          "description": "The currency rate",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "FromBankTransactionID": {
          "description": "The Bank Transaction ID for the source account",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "ToBankTransactionID": {
          "description": "The Bank Transaction ID for the destination account",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "FromIsReconciled": {
          "description": "The Bank Transaction boolean to show if it is reconciled for the source account",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "ToIsReconciled": {
          "description": "The Bank Transaction boolean to show if it is reconciled for the destination account",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "Reference": {
          "description": "Reference for the transactions.",
          "type": "string"
        },
        "HasAttachments": {
          "description": "Boolean to indicate if a Bank Transfer has an attachment",
          "example": false,
          "readOnly": true,
          "type": "boolean",
          "default": false
        },
        "CreatedDateUTC": {
          "description": "UTC timestamp of creation date of bank transfer",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      },
      "required": [
        "FromBankAccount",
        "ToBankAccount",
        "Amount"
      ]
    },
    "BatchPayments": {
      "title": "BatchPayments",
      "type": "object",
      "properties": {
        "BatchPayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchPayment"
          }
        }
      }
    },
    "BatchPayment": {
      "title": "BatchPayment",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/BatchPayments/"
      },
      "type": "object",
      "properties": {
        "Account": {
          "$ref": "#/definitions/Account"
        },
        "Reference": {
          "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero.",
          "type": "string",
          "maxLength": 255
        },
        "Particulars": {
          "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero.",
          "type": "string",
          "maxLength": 12
        },
        "Code": {
          "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero.",
          "type": "string",
          "maxLength": 12
        },
        "Details": {
          "description": "(Non-NZ Only) These details are sent to the org’s bank as a reference for the batch payment transaction. They will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement imported into Xero. Maximum field length = 18",
          "type": "string"
        },
        "Narrative": {
          "description": "(UK Only) Only shows on the statement line in Xero. Max length =18",
          "type": "string",
          "maxLength": 18
        },
        "BatchPaymentID": {
          "description": "The Xero generated unique identifier for the bank transaction (read-only)",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "DateString": {
          "description": "Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06",
          "type": "string"
        },
        "Date": {
          "description": "Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06",
          "type": "string"
        },
        "Amount": {
          "description": "The amount of the payment. Must be less than or equal to the outstanding amount owing on the invoice e.g. 200.00",
          "type": "number",
          "format": "double"
        },
        "Payments": {
          "description": "An array of payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "Type": {
          "$ref": "#/definitions/Type6"
        },
        "Status": {
          "$ref": "#/definitions/Status8"
        },
        "TotalAmount": {
          "description": "The total of the payments that make up the batch (read-only)",
          "readOnly": true,
          "type": "string"
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to the payment",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "IsReconciled": {
          "description": "Booelan that tells you if the batch payment has been reconciled (read-only)",
          "readOnly": true,
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "BatchPaymentDetails": {
      "title": "BatchPaymentDetails",
      "description": "Bank details for use on a batch payment stored with each contact",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/Contact/"
      },
      "type": "object",
      "properties": {
        "BankAccountNumber": {
          "description": "Bank account number for use with Batch Payments",
          "example": "123-456-1111111",
          "type": "string"
        },
        "BankAccountName": {
          "description": "Name of bank for use with Batch Payments",
          "example": "ACME Bank",
          "type": "string"
        },
        "Details": {
          "description": "(Non-NZ Only) These details are sent to the org’s bank as a reference for the batch payment transaction. They will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement imported into Xero. Maximum field length = 18",
          "example": "Hello World",
          "type": "string"
        },
        "Code": {
          "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero.",
          "example": "ABC",
          "type": "string",
          "maxLength": 12
        },
        "Reference": {
          "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero.",
          "example": "Foobar",
          "type": "string",
          "maxLength": 12
        }
      }
    },
    "BrandingThemes": {
      "title": "BrandingThemes",
      "type": "object",
      "properties": {
        "BrandingThemes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandingTheme"
          }
        }
      }
    },
    "BrandingTheme": {
      "title": "BrandingTheme",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/branding-themes/"
      },
      "type": "object",
      "properties": {
        "BrandingThemeID": {
          "description": "Xero identifier",
          "type": "string",
          "format": "uuid"
        },
        "Name": {
          "description": "Name of branding theme",
          "type": "string"
        },
        "LogoUrl": {
          "description": "The location of the image file used as the logo on this branding theme",
          "type": "string"
        },
        "Type": {
          "$ref": "#/definitions/Type1"
        },
        "SortOrder": {
          "description": "Integer – ranked order of branding theme. The default branding theme has a value of 0",
          "type": "integer",
          "format": "int32"
        },
        "CreatedDateUTC": {
          "description": "UTC timestamp of creation date of branding theme",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "PaymentServices": {
      "title": "PaymentServices",
      "type": "object",
      "properties": {
        "PaymentServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentService"
          }
        }
      }
    },
    "PaymentService": {
      "title": "PaymentService",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/branding-themes/"
      },
      "type": "object",
      "properties": {
        "PaymentServiceID": {
          "description": "Xero identifier",
          "type": "string",
          "format": "uuid"
        },
        "PaymentServiceName": {
          "description": "Name of payment service",
          "type": "string"
        },
        "PaymentServiceUrl": {
          "description": "The custom payment URL",
          "type": "string"
        },
        "PayNowText": {
          "description": "The text displayed on the Pay Now button in Xero Online Invoicing. If this is not set it will default to Pay by credit card",
          "type": "string"
        },
        "PaymentServiceType": {
          "description": "This will always be CUSTOM for payment services created via the API.",
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "Contacts": {
      "title": "Contacts",
      "type": "object",
      "properties": {
        "Contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          }
        }
      }
    },
    "Contact": {
      "title": "Contact",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/contacts/"
      },
      "type": "object",
      "properties": {
        "ContactID": {
          "description": "Xero identifier",
          "type": "string",
          "format": "uuid"
        },
        "MergedToContactID": {
          "description": "ID for the destination of a merged contact. Only returned when using paging or when fetching a contact by ContactId or ContactNumber.",
          "type": "string",
          "format": "uuid"
        },
        "ContactNumber": {
          "description": "This can be updated via the API only i.e. This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50). If the Contact Number is used, this is displayed as Contact Code in the Contacts UI in Xero.",
          "type": "string",
          "maxLength": 50
        },
        "AccountNumber": {
          "description": "A user defined account number. This can be updated via the API and the Xero UI (max length = 50)",
          "type": "string",
          "maxLength": 50
        },
        "ContactStatus": {
          "$ref": "#/definitions/ContactStatus"
        },
        "Name": {
          "description": "Full name of contact/organisation (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "FirstName": {
          "description": "First name of contact person (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "LastName": {
          "description": "Last name of contact person (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "CompanyNumber": {
          "description": "Company registration number (max length = 50)",
          "type": "string",
          "maxLength": 50
        },
        "EmailAddress": {
          "description": "Email address of contact person (umlauts not supported) (max length  = 255)",
          "type": "string",
          "maxLength": 255
        },
        "SkypeUserName": {
          "description": "Skype user name of contact",
          "type": "string"
        },
        "ContactPersons": {
          "description": "See contact persons",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPerson"
          }
        },
        "BankAccountDetails": {
          "description": "Bank account number of contact",
          "type": "string"
        },
        "TaxNumber": {
          "description": "Tax number of contact – this is also known as the ABN (Australia), GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and global) in the Xero UI depending on which regionalized version of Xero you are using (max length = 50)",
          "type": "string",
          "maxLength": 50
        },
        "AccountsReceivableTaxType": {
          "description": "The tax type from TaxRates",
          "type": "string"
        },
        "AccountsPayableTaxType": {
          "description": "The tax type from TaxRates",
          "type": "string"
        },
        "Addresses": {
          "description": "Store certain address types for a contact – see address types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "Phones": {
          "description": "Store certain phone types for a contact – see phone types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Phone"
          }
        },
        "IsSupplier": {
          "description": "true or false – Boolean that describes if a contact that has any AP  invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts payable invoice is generated against this contact.",
          "type": "boolean"
        },
        "IsCustomer": {
          "description": "true or false – Boolean that describes if a contact has any AR invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts receivable invoice is generated against this contact.",
          "type": "boolean"
        },
        "SalesDefaultLineAmountType": {
          "$ref": "#/definitions/SalesDefaultLineAmountType"
        },
        "PurchasesDefaultLineAmountType": {
          "$ref": "#/definitions/PurchasesDefaultLineAmountType"
        },
        "DefaultCurrency": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "XeroNetworkKey": {
          "description": "Store XeroNetworkKey for contacts.",
          "type": "string"
        },
        "SalesDefaultAccountCode": {
          "description": "The default sales account code for contacts",
          "type": "string"
        },
        "PurchasesDefaultAccountCode": {
          "description": "The default purchases account code for contacts",
          "type": "string"
        },
        "SalesTrackingCategories": {
          "description": "The default sales tracking categories for contacts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesTrackingCategory"
          }
        },
        "PurchasesTrackingCategories": {
          "description": "The default purchases tracking categories for contacts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesTrackingCategory"
          }
        },
        "TrackingCategoryName": {
          "description": "The name of the Tracking Category assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories",
          "type": "string"
        },
        "TrackingCategoryOption": {
          "description": "The name of the Tracking Option assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories",
          "type": "string"
        },
        "PaymentTerms": {
          "$ref": "#/definitions/PaymentTerm"
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to contact",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "ContactGroups": {
          "description": "Displays which contact groups a contact is included in",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactGroup"
          }
        },
        "Website": {
          "description": "Website address for contact (read only)",
          "readOnly": true,
          "type": "string"
        },
        "BrandingTheme": {
          "$ref": "#/definitions/BrandingTheme"
        },
        "BatchPayments": {
          "$ref": "#/definitions/BatchPaymentDetails"
        },
        "Discount": {
          "description": "The default discount rate for the contact (read only)",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "Balances": {
          "$ref": "#/definitions/Balances"
        },
        "Attachments": {
          "description": "Displays array of attachments from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "HasAttachments": {
          "description": "A boolean to indicate if a contact has an attachment",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "ValidationErrors": {
          "description": "Displays validation errors returned from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "HasValidationErrors": {
          "description": "A boolean to indicate if a contact has an validation errors",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "StatusAttributeString": {
          "description": "Status of object",
          "type": "string"
        }
      }
    },
    "Budgets": {
      "title": "Budgets",
      "type": "object",
      "properties": {
        "Budgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Budget"
          }
        }
      }
    },
    "Budget": {
      "title": "Budget",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/budgets/"
      },
      "type": "object",
      "properties": {
        "BudgetID": {
          "description": "Xero identifier",
          "type": "string",
          "format": "uuid"
        },
        "Type": {
          "$ref": "#/definitions/Type7"
        },
        "Description": {
          "description": "The Budget description",
          "type": "string",
          "maxLength": 255
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to budget",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "BudgetLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetLine"
          }
        },
        "Tracking": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingCategory"
          }
        }
      }
    },
    "BudgetLine": {
      "title": "BudgetLine",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/budgets/"
      },
      "type": "object",
      "properties": {
        "AccountID": {
          "description": "See Accounts",
          "type": "string",
          "format": "uuid"
        },
        "AccountCode": {
          "description": "See Accounts",
          "example": "090",
          "type": "string"
        },
        "BudgetBalances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetBalance"
          }
        }
      }
    },
    "BudgetBalance": {
      "title": "BudgetBalance",
      "type": "object",
      "properties": {
        "Period": {
          "description": "Period the amount applies to (e.g. “2019-08”)",
          "type": "string"
        },
        "Amount": {
          "description": "LineItem Quantity",
          "type": "number",
          "format": "double"
        },
        "UnitAmount": {
          "description": "Budgeted amount",
          "type": "number",
          "format": "double"
        },
        "Notes": {
          "description": "Any footnotes associated with this balance",
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "Balances": {
      "title": "Balances",
      "description": "The raw AccountsReceivable(sales invoices) and AccountsPayable(bills) outstanding and overdue amounts, not converted to base currency (read only)",
      "type": "object",
      "properties": {
        "AccountsReceivable": {
          "$ref": "#/definitions/AccountsReceivable"
        },
        "AccountsPayable": {
          "$ref": "#/definitions/AccountsPayable"
        }
      }
    },
    "AccountsReceivable": {
      "title": "AccountsReceivable",
      "type": "object",
      "properties": {
        "Outstanding": {
          "type": "number",
          "format": "double"
        },
        "Overdue": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "AccountsPayable": {
      "title": "AccountsPayable",
      "type": "object",
      "properties": {
        "Outstanding": {
          "type": "number",
          "format": "double"
        },
        "Overdue": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CISSettings": {
      "title": "CISSettings",
      "type": "object",
      "properties": {
        "CISSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CISSetting"
          }
        }
      }
    },
    "CISSetting": {
      "title": "CISSetting",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/contacts/"
      },
      "type": "object",
      "properties": {
        "CISEnabled": {
          "description": "Boolean that describes if the contact is a CIS Subcontractor",
          "type": "boolean"
        },
        "Rate": {
          "description": "CIS Deduction rate for the contact if he is a subcontractor. If the contact is not CISEnabled, then the rate is not returned",
          "readOnly": true,
          "type": "number",
          "format": "double"
        }
      }
    },
    "CISOrgSettings": {
      "title": "CISOrgSettings",
      "type": "object",
      "properties": {
        "CISSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CISOrgSetting"
          }
        }
      }
    },
    "CISOrgSetting": {
      "title": "CISOrgSetting",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/organisation"
      },
      "type": "object",
      "properties": {
        "CISContractorEnabled": {
          "description": "true or false - Boolean that describes if the organisation is a CIS Contractor",
          "type": "boolean"
        },
        "CISSubContractorEnabled": {
          "description": "true or false - Boolean that describes if the organisation is a CIS SubContractor",
          "type": "boolean"
        },
        "Rate": {
          "description": "CIS Deduction rate for the organisation",
          "readOnly": true,
          "type": "number",
          "format": "double"
        }
      }
    },
    "ContactPerson": {
      "title": "ContactPerson",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/contacts/"
      },
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "First name of person",
          "type": "string"
        },
        "LastName": {
          "description": "Last name of person",
          "type": "string"
        },
        "EmailAddress": {
          "description": "Email address of person",
          "type": "string"
        },
        "IncludeInEmails": {
          "description": "boolean to indicate whether contact should be included on emails with invoices etc.",
          "type": "boolean"
        }
      }
    },
    "ContactGroups": {
      "title": "ContactGroups",
      "type": "object",
      "properties": {
        "ContactGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactGroup"
          }
        }
      }
    },
    "ContactGroup": {
      "title": "ContactGroup",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/contactgroups/"
      },
      "type": "object",
      "properties": {
        "Name": {
          "description": "The Name of the contact group. Required when creating a new contact  group",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/Status1"
        },
        "ContactGroupID": {
          "description": "The Xero identifier for an contact group – specified as a string following the endpoint name. e.g. /297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        },
        "Contacts": {
          "description": "The ContactID and Name of Contacts in a contact group. Returned on GETs when the ContactGroupID is supplied in the URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          }
        }
      }
    },
    "RequestEmpty": {
      "title": "RequestEmpty",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/invoice/"
      },
      "type": "object",
      "properties": {
        "Status": {
          "description": "Need at least one field to create an empty JSON payload",
          "type": "string"
        }
      }
    },
    "CreditNotes": {
      "title": "CreditNotes",
      "type": "object",
      "properties": {
        "CreditNotes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreditNote"
          }
        }
      }
    },
    "CreditNote": {
      "title": "CreditNote",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/credit-notes/"
      },
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Type5"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "Date": {
          "description": "The date the credit note is issued YYYY-MM-DD. If the Date element is not specified then it will default to the current date based on the timezone setting of the organisation",
          "type": "string"
        },
        "DueDate": {
          "description": "Date invoice is due – YYYY-MM-DD",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/Status6"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "LineItems": {
          "description": "See Invoice Line Items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "SubTotal": {
          "description": "The subtotal of the credit note excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "The total tax on the credit note",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "The total of the Credit Note(subtotal + total tax)",
          "type": "number",
          "format": "double"
        },
        "CISDeduction": {
          "description": "CIS deduction for UK contractors",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "CISRate": {
          "description": "CIS Deduction rate for the organisation",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to the credit note",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "FullyPaidOnDate": {
          "description": "Date when credit note was fully paid(UTC format)",
          "type": "string"
        },
        "CreditNoteID": {
          "description": "Xero generated unique identifier",
          "type": "string",
          "format": "uuid"
        },
        "CreditNoteNumber": {
          "description": "ACCRECCREDIT – Unique alpha numeric code identifying credit note (when missing will auto-generate from your Organisation Invoice Settings)",
          "type": "string"
        },
        "Reference": {
          "description": "ACCRECCREDIT only – additional reference number",
          "type": "string"
        },
        "SentToContact": {
          "description": "boolean to indicate if a credit note has been sent to a contact via  the Xero app (currently read only)",
          "readOnly": true,
          "type": "boolean"
        },
        "CurrencyRate": {
          "description": "The currency rate for a multicurrency invoice. If no rate is specified, the XE.com day rate is used",
          "type": "number",
          "format": "double"
        },
        "RemainingCredit": {
          "description": "The remaining credit balance on the Credit Note",
          "type": "number",
          "format": "double"
        },
        "Allocations": {
          "description": "See Allocations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        },
        "AppliedAmount": {
          "description": "The amount of applied to an invoice",
          "example": 2,
          "type": "number",
          "format": "double"
        },
        "Payments": {
          "description": "See Payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "BrandingThemeID": {
          "description": "See BrandingThemes",
          "type": "string",
          "format": "uuid"
        },
        "StatusAttributeString": {
          "description": "A string to indicate if a invoice status",
          "type": "string"
        },
        "HasAttachments": {
          "description": "boolean to indicate if a credit note has an attachment",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "HasErrors": {
          "description": "A boolean to indicate if a credit note has an validation errors",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "Warnings": {
          "description": "Displays array of warning messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "Allocations": {
      "title": "Allocations",
      "type": "object",
      "properties": {
        "Allocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        }
      }
    },
    "Allocation": {
      "title": "Allocation",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/prepayments/"
      },
      "type": "object",
      "properties": {
        "Invoice": {
          "$ref": "#/definitions/Invoice"
        },
        "Overpayment": {
          "$ref": "#/definitions/Overpayment"
        },
        "Prepayment": {
          "$ref": "#/definitions/Prepayment"
        },
        "CreditNote": {
          "$ref": "#/definitions/CreditNote"
        },
        "Amount": {
          "description": "the amount being applied to the invoice",
          "type": "number",
          "format": "double"
        },
        "Date": {
          "description": "the date the allocation is applied YYYY-MM-DD.",
          "type": "string"
        },
        "StatusAttributeString": {
          "description": "A string to indicate if a invoice status",
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      },
      "required": [
        "Invoice",
        "Amount",
        "Date"
      ]
    },
    "Currencies": {
      "title": "Currencies",
      "type": "object",
      "properties": {
        "Currencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Currency"
          }
        }
      }
    },
    "Currency": {
      "title": "Currency",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/currencies/"
      },
      "type": "object",
      "properties": {
        "Code": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "Description": {
          "description": "Name of Currency",
          "type": "string"
        }
      }
    },
    "CurrencyCode": {
      "title": "CurrencyCode",
      "description": "3 letter alpha code for the currency – see list of currency codes",
      "type": "string",
      "enum": [
        "AED",
        "AFN",
        "ALL",
        "AMD",
        "ANG",
        "AOA",
        "ARS",
        "AUD",
        "AWG",
        "AZN",
        "BAM",
        "BBD",
        "BDT",
        "BGN",
        "BHD",
        "BIF",
        "BMD",
        "BND",
        "BOB",
        "BRL",
        "BSD",
        "BTN",
        "BWP",
        "BYN",
        "BYR",
        "BZD",
        "CAD",
        "CDF",
        "CHF",
        "CLP",
        "CNY",
        "COP",
        "CRC",
        "CUC",
        "CUP",
        "CVE",
        "CZK",
        "DJF",
        "DKK",
        "DOP",
        "DZD",
        "EGP",
        "ERN",
        "ETB",
        "EUR",
        "FJD",
        "FKP",
        "GBP",
        "GEL",
        "GGP",
        "GHS",
        "GIP",
        "GMD",
        "GNF",
        "GTQ",
        "GYD",
        "HKD",
        "HNL",
        "HRK",
        "HTG",
        "HUF",
        "IDR",
        "ILS",
        "IMP",
        "INR",
        "IQD",
        "IRR",
        "ISK",
        "JEP",
        "JMD",
        "JOD",
        "JPY",
        "KES",
        "KGS",
        "KHR",
        "KMF",
        "KPW",
        "KRW",
        "KWD",
        "KYD",
        "KZT",
        "LAK",
        "LBP",
        "LKR",
        "LRD",
        "LSL",
        "LTL",
        "LYD",
        "MAD",
        "MDL",
        "MGA",
        "MKD",
        "MMK",
        "MNT",
        "MOP",
        "MRU",
        "MUR",
        "MVR",
        "MWK",
        "MXN",
        "MYR",
        "MZN",
        "NAD",
        "NGN",
        "NIO",
        "NOK",
        "NPR",
        "NZD",
        "OMR",
        "PAB",
        "PEN",
        "PGK",
        "PHP",
        "PKR",
        "PLN",
        "PYG",
        "QAR",
        "RON",
        "RSD",
        "RUB",
        "RWF",
        "SAR",
        "SBD",
        "SCR",
        "SDG",
        "SEK",
        "SGD",
        "SHP",
        "SLL",
        "SOS",
        "SPL",
        "SRD",
        "STN",
        "SVC",
        "SYP",
        "SZL",
        "THB",
        "TJS",
        "TMT",
        "TND",
        "TOP",
        "TRY",
        "TTD",
        "TVD",
        "TWD",
        "TZS",
        "UAH",
        "UGX",
        "USD",
        "UYU",
        "UZS",
        "VEF",
        "VND",
        "VUV",
        "WST",
        "XAF",
        "XCD",
        "XDR",
        "XOF",
        "XPF",
        "YER",
        "ZAR",
        "ZMW",
        "ZMK",
        "ZWD"
      ]
    },
    "Employees": {
      "title": "Employees",
      "type": "object",
      "properties": {
        "Employees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Employee"
          }
        }
      }
    },
    "Employee": {
      "title": "Employee",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/employees/"
      },
      "type": "object",
      "properties": {
        "EmployeeID": {
          "description": "The Xero identifier for an employee e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        },
        "Status": {
          "$ref": "#/definitions/Status11"
        },
        "FirstName": {
          "description": "First name of an employee (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "LastName": {
          "description": "Last name of an employee (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "ExternalLink": {
          "$ref": "#/definitions/ExternalLink"
        },
        "UpdatedDateUTC": {
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "StatusAttributeString": {
          "description": "A string to indicate if a invoice status",
          "example": "ERROR",
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "ExpenseClaims": {
      "title": "ExpenseClaims",
      "type": "object",
      "properties": {
        "ExpenseClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpenseClaim"
          }
        }
      }
    },
    "ExpenseClaim": {
      "title": "ExpenseClaim",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/expense-claims/"
      },
      "type": "object",
      "properties": {
        "ExpenseClaimID": {
          "description": "Xero generated unique identifier for an expense claim",
          "type": "string",
          "format": "uuid"
        },
        "Status": {
          "$ref": "#/definitions/Status12"
        },
        "Payments": {
          "description": "See Payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "User": {
          "$ref": "#/definitions/User"
        },
        "Receipts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Receipt"
          }
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "Total": {
          "description": "The total of an expense claim being paid",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "AmountDue": {
          "description": "The amount due to be paid for an expense claim",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "AmountPaid": {
          "description": "The amount still to pay for an expense claim",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "PaymentDueDate": {
          "description": "The date when the expense claim is due to be paid YYYY-MM-DD",
          "readOnly": true,
          "type": "string"
        },
        "ReportingDate": {
          "description": "The date the expense claim will be reported in Xero YYYY-MM-DD",
          "readOnly": true,
          "type": "string"
        },
        "ReceiptID": {
          "description": "The Xero identifier for the Receipt e.g. e59a2c7f-1306-4078-a0f3-73537afcbba9",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "HistoryRecords": {
      "title": "HistoryRecords",
      "type": "object",
      "properties": {
        "HistoryRecords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoryRecord"
          }
        }
      }
    },
    "HistoryRecord": {
      "title": "HistoryRecord",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/history-and-notes"
      },
      "type": "object",
      "properties": {
        "Details": {
          "description": "details",
          "type": "string"
        },
        "Changes": {
          "description": "Name of branding theme",
          "type": "string"
        },
        "User": {
          "description": "has a value of 0",
          "type": "string"
        },
        "DateUTC": {
          "description": "UTC timestamp of creation date of branding theme",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Invoices": {
      "title": "Invoices",
      "type": "object",
      "properties": {
        "Invoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Invoice"
          }
        }
      }
    },
    "Invoice": {
      "title": "Invoice",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/invoices/"
      },
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Type2"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "LineItems": {
          "description": "See LineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "Date": {
          "description": "Date invoice was issued – YYYY-MM-DD. If the Date element is not specified it will default to the current date based on the timezone setting of the organisation",
          "type": "string"
        },
        "DueDate": {
          "description": "Date invoice is due – YYYY-MM-DD",
          "type": "string"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "InvoiceNumber": {
          "description": "ACCREC – Unique alpha numeric code identifying invoice (when missing will auto-generate from your Organisation Invoice Settings) (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "Reference": {
          "description": "ACCREC only – additional reference number",
          "type": "string"
        },
        "BrandingThemeID": {
          "description": "See BrandingThemes",
          "type": "string",
          "format": "uuid"
        },
        "Url": {
          "description": "URL link to a source document – shown as “Go to [appName]” in the Xero app",
          "type": "string"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "CurrencyRate": {
          "description": "The currency rate for a multicurrency invoice. If no rate is specified, the XE.com day rate is used. (max length = [18].[6])",
          "type": "number",
          "format": "double"
        },
        "Status": {
          "$ref": "#/definitions/Status3"
        },
        "SentToContact": {
          "description": "Boolean to set whether the invoice in the Xero app should be marked as “sent”. This can be set only on invoices that have been approved",
          "type": "boolean"
        },
        "ExpectedPaymentDate": {
          "description": "Shown on sales invoices (Accounts Receivable) when this has been set",
          "type": "string"
        },
        "PlannedPaymentDate": {
          "description": "Shown on bills (Accounts Payable) when this has been set",
          "type": "string"
        },
        "CISDeduction": {
          "description": "CIS deduction for UK contractors",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "CISRate": {
          "description": "CIS Deduction rate for the organisation",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "SubTotal": {
          "description": "Total of invoice excluding taxes",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "Total tax on invoice",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "Total of Invoice tax inclusive (i.e. SubTotal + TotalTax). This will be ignored if it doesn’t equal the sum of the LineAmounts",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "TotalDiscount": {
          "description": "Total of discounts applied on the invoice line items",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "InvoiceID": {
          "description": "Xero generated unique identifier for invoice",
          "type": "string",
          "format": "uuid"
        },
        "RepeatingInvoiceID": {
          "description": "Xero generated unique identifier for repeating invoices",
          "type": "string",
          "format": "uuid"
        },
        "HasAttachments": {
          "description": "boolean to indicate if an invoice has an attachment",
          "example": false,
          "readOnly": true,
          "type": "boolean",
          "default": false
        },
        "IsDiscounted": {
          "description": "boolean to indicate if an invoice has a discount",
          "readOnly": true,
          "type": "boolean"
        },
        "Payments": {
          "description": "See Payments",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "Prepayments": {
          "description": "See Prepayments",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Prepayment"
          }
        },
        "Overpayments": {
          "description": "See Overpayments",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Overpayment"
          }
        },
        "AmountDue": {
          "description": "Amount remaining to be paid on invoice",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "AmountPaid": {
          "description": "Sum of payments received for invoice",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "FullyPaidOnDate": {
          "description": "The date the invoice was fully paid. Only returned on fully paid invoices",
          "readOnly": true,
          "type": "string"
        },
        "AmountCredited": {
          "description": "Sum of all credit notes, over-payments and pre-payments applied to invoice",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "CreditNotes": {
          "description": "Details of credit notes that have been applied to an invoice",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreditNote"
          }
        },
        "Attachments": {
          "description": "Displays array of attachments from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "HasErrors": {
          "description": "A boolean to indicate if a invoice has an validation errors",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "StatusAttributeString": {
          "description": "A string to indicate if a invoice status",
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "Warnings": {
          "description": "Displays array of warning messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "OnlineInvoices": {
      "title": "OnlineInvoices",
      "type": "object",
      "properties": {
        "OnlineInvoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineInvoice"
          }
        }
      }
    },
    "OnlineInvoice": {
      "title": "OnlineInvoice",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/invoices/"
      },
      "type": "object",
      "properties": {
        "OnlineInvoiceUrl": {
          "description": "the URL to an online invoice",
          "type": "string"
        }
      }
    },
    "InvoiceReminders": {
      "title": "InvoiceReminders",
      "type": "object",
      "properties": {
        "InvoiceReminders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceReminder"
          }
        }
      }
    },
    "InvoiceReminder": {
      "title": "InvoiceReminder",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/invoice-reminders/"
      },
      "type": "object",
      "properties": {
        "Enabled": {
          "description": "setting for on or off",
          "type": "boolean"
        }
      }
    },
    "Items": {
      "title": "Items",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        }
      }
    },
    "Item": {
      "title": "Item",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/items/"
      },
      "type": "object",
      "properties": {
        "Code": {
          "description": "User defined item code (max length = 30)",
          "type": "string",
          "maxLength": 30
        },
        "InventoryAssetAccountCode": {
          "description": "The inventory asset account for the item. The account must be of type INVENTORY. The  COGSAccountCode in PurchaseDetails is also required to create a tracked item",
          "type": "string"
        },
        "Name": {
          "description": "The name of the item (max length = 50)",
          "type": "string",
          "maxLength": 50
        },
        "IsSold": {
          "description": "Boolean value, defaults to true. When IsSold is true the item will be available on sales transactions in the Xero UI. If IsSold is updated to false then Description and SalesDetails values will be nulled.",
          "type": "boolean"
        },
        "IsPurchased": {
          "description": "Boolean value, defaults to true. When IsPurchased is true the item is available for purchase transactions in the Xero UI. If IsPurchased is updated to false then PurchaseDescription and PurchaseDetails values will be nulled.",
          "type": "boolean"
        },
        "Description": {
          "description": "The sales description of the item (max length = 4000)",
          "type": "string",
          "maxLength": 4000
        },
        "PurchaseDescription": {
          "description": "The purchase description of the item (max length = 4000)",
          "type": "string",
          "maxLength": 4000
        },
        "PurchaseDetails": {
          "$ref": "#/definitions/Purchase"
        },
        "SalesDetails": {
          "$ref": "#/definitions/Purchase"
        },
        "IsTrackedAsInventory": {
          "description": "True for items that are tracked as inventory. An item will be tracked as inventory if the InventoryAssetAccountCode and COGSAccountCode are set.",
          "type": "boolean"
        },
        "TotalCostPool": {
          "description": "The value of the item on hand. Calculated using average cost accounting.",
          "type": "number",
          "format": "double"
        },
        "QuantityOnHand": {
          "description": "The quantity of the item on hand",
          "type": "number",
          "format": "double"
        },
        "UpdatedDateUTC": {
          "description": "Last modified date in UTC format",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "ItemID": {
          "description": "The Xero identifier for an Item",
          "type": "string",
          "format": "uuid"
        },
        "StatusAttributeString": {
          "description": "Status of object",
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      },
      "required": [
        "Code"
      ]
    },
    "Purchase": {
      "title": "Purchase",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/items/"
      },
      "type": "object",
      "properties": {
        "UnitPrice": {
          "description": "Unit Price of the item. By default UnitPrice is rounded to two decimal places. You can use 4 decimal places by adding the unitdp=4 querystring parameter to your request.",
          "type": "number",
          "format": "double"
        },
        "AccountCode": {
          "description": "Default account code to be used for purchased/sale. Not applicable to the purchase details of tracked items",
          "type": "string"
        },
        "COGSAccountCode": {
          "description": "Cost of goods sold account. Only applicable to the purchase details of tracked items.",
          "type": "string"
        },
        "TaxType": {
          "description": "The tax type from TaxRates",
          "type": "string"
        }
      }
    },
    "Journals": {
      "title": "Journals",
      "type": "object",
      "properties": {
        "Journals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Journal"
          }
        }
      }
    },
    "Journal": {
      "title": "Journal",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/journals/"
      },
      "type": "object",
      "properties": {
        "JournalID": {
          "description": "Xero identifier",
          "type": "string",
          "format": "uuid"
        },
        "JournalDate": {
          "description": "Date the journal was posted",
          "type": "string"
        },
        "JournalNumber": {
          "description": "Xero generated journal number",
          "type": "integer",
          "format": "int32"
        },
        "CreatedDateUTC": {
          "description": "Created date UTC format",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "Reference": {
          "description": "reference field for additional indetifying information",
          "type": "string"
        },
        "SourceID": {
          "description": "The identifier for the source transaction (e.g. InvoiceID)",
          "type": "string",
          "format": "uuid"
        },
        "SourceType": {
          "$ref": "#/definitions/SourceType"
        },
        "JournalLines": {
          "description": "See JournalLines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JournalLine"
          }
        }
      }
    },
    "JournalLine": {
      "title": "JournalLine",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/journals#JournalLines"
      },
      "type": "object",
      "properties": {
        "JournalLineID": {
          "description": "Xero identifier for Journal",
          "example": "7be9db36-3598-4755-ba5c-c2dbc8c4a7a2",
          "type": "string",
          "format": "uuid"
        },
        "AccountID": {
          "description": "See Accounts",
          "example": "ceef66a5-a545-413b-9312-78a53caadbc4",
          "type": "string",
          "format": "uuid"
        },
        "AccountCode": {
          "description": "See Accounts",
          "example": "090",
          "type": "string"
        },
        "AccountType": {
          "$ref": "#/definitions/AccountType"
        },
        "AccountName": {
          "description": "See AccountCodes",
          "example": "Checking Account",
          "type": "string"
        },
        "Description": {
          "description": "The description from the source transaction line item. Only returned if populated.",
          "example": "My business checking account",
          "type": "string"
        },
        "NetAmount": {
          "description": "Net amount of journal line. This will be a positive value for a debit and negative for a credit",
          "example": 4130.98,
          "type": "number",
          "format": "double"
        },
        "GrossAmount": {
          "description": "Gross amount of journal line (NetAmount + TaxAmount).",
          "example": 4130.98,
          "type": "number",
          "format": "double"
        },
        "TaxAmount": {
          "description": "Total tax on a journal line",
          "example": 0,
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "TaxType": {
          "description": "The tax type from TaxRates",
          "type": "string"
        },
        "TaxName": {
          "description": "see TaxRates",
          "example": "Tax Exempt",
          "type": "string"
        },
        "TrackingCategories": {
          "description": "Optional Tracking Category – see Tracking. Any JournalLine can have a maximum of 2 <TrackingCategory> elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingCategory"
          }
        }
      }
    },
    "LinkedTransactions": {
      "title": "LinkedTransactions",
      "type": "object",
      "properties": {
        "LinkedTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedTransaction"
          }
        }
      }
    },
    "LinkedTransaction": {
      "title": "LinkedTransaction",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/linked-transactions/"
      },
      "type": "object",
      "properties": {
        "SourceTransactionID": {
          "description": "Filter by the SourceTransactionID. Get all the linked transactions created from a particular ACCPAY invoice",
          "type": "string",
          "format": "uuid"
        },
        "SourceLineItemID": {
          "description": "The line item identifier from the source transaction.",
          "type": "string",
          "format": "uuid"
        },
        "ContactID": {
          "description": "Filter by the combination of ContactID and Status. Get all the linked transactions that have been assigned to a particular customer and have a particular status e.g. GET /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.",
          "type": "string",
          "format": "uuid"
        },
        "TargetTransactionID": {
          "description": "Filter by the TargetTransactionID. Get all the linked transactions  allocated to a particular ACCREC invoice",
          "type": "string",
          "format": "uuid"
        },
        "TargetLineItemID": {
          "description": "The line item identifier from the target transaction. It is possible  to link multiple billable expenses to the same TargetLineItemID.",
          "type": "string",
          "format": "uuid"
        },
        "LinkedTransactionID": {
          "description": "The Xero identifier for an Linked Transaction e.g./LinkedTransactions/297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        },
        "Status": {
          "$ref": "#/definitions/Status14"
        },
        "Type": {
          "$ref": "#/definitions/Type8"
        },
        "UpdatedDateUTC": {
          "description": "The last modified date in UTC format",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "SourceTransactionTypeCode": {
          "$ref": "#/definitions/SourceTransactionTypeCode"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "ManualJournals": {
      "title": "ManualJournals",
      "type": "object",
      "properties": {
        "ManualJournals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManualJournal"
          }
        }
      }
    },
    "ManualJournal": {
      "title": "ManualJournal",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/manual-journals/"
      },
      "type": "object",
      "properties": {
        "Narration": {
          "description": "Description of journal being posted",
          "type": "string"
        },
        "JournalLines": {
          "description": "See JournalLines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManualJournalLine"
          }
        },
        "Date": {
          "description": "Date journal was posted – YYYY-MM-DD",
          "type": "string"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "Status": {
          "$ref": "#/definitions/Status15"
        },
        "Url": {
          "description": "Url link to a source document – shown as “Go to [appName]” in the Xero app",
          "type": "string"
        },
        "ShowOnCashBasisReports": {
          "description": "Boolean – default is true if not specified",
          "type": "boolean"
        },
        "HasAttachments": {
          "description": "Boolean to indicate if a manual journal has an attachment",
          "example": false,
          "readOnly": true,
          "type": "boolean",
          "default": false
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "ManualJournalID": {
          "description": "The Xero identifier for a Manual Journal",
          "type": "string",
          "format": "uuid"
        },
        "StatusAttributeString": {
          "description": "A string to indicate if a invoice status",
          "example": "ERROR",
          "type": "string"
        },
        "Warnings": {
          "description": "Displays array of warning messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "Attachments": {
          "description": "Displays array of attachments from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        }
      },
      "required": [
        "Narration"
      ]
    },
    "ManualJournalLine": {
      "title": "ManualJournalLine",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/manual-journals/"
      },
      "type": "object",
      "properties": {
        "LineAmount": {
          "description": "total for line. Debits are positive, credits are negative value",
          "example": -2569,
          "type": "number",
          "format": "double"
        },
        "AccountCode": {
          "description": "See Accounts",
          "example": "720",
          "type": "string"
        },
        "AccountID": {
          "description": "See Accounts",
          "type": "string",
          "format": "uuid"
        },
        "Description": {
          "description": "Description for journal line",
          "example": "Coded incorrectly Office Equipment should be Computer Equipment",
          "type": "string"
        },
        "TaxType": {
          "description": "The tax type from TaxRates",
          "type": "string"
        },
        "Tracking": {
          "description": "Optional Tracking Category – see Tracking. Any JournalLine can have a maximum of 2 <TrackingCategory> elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingCategory"
          }
        },
        "TaxAmount": {
          "description": "The calculated tax amount based on the TaxType and LineAmount",
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "IsBlank": {
          "description": "is the line blank",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Actions": {
      "title": "Actions",
      "type": "object",
      "properties": {
        "Actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          }
        }
      }
    },
    "Action": {
      "title": "Action",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/organisation/"
      },
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of the actions for this organisation",
          "example": "UseMulticurrency",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/Status16"
        }
      }
    },
    "Organisations": {
      "title": "Organisations",
      "type": "object",
      "properties": {
        "Organisations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Organisation"
          }
        }
      }
    },
    "Organisation": {
      "title": "Organisation",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/organisation/"
      },
      "type": "object",
      "properties": {
        "OrganisationID": {
          "description": "Unique Xero identifier",
          "example": "8be9db36-3598-4755-ba5c-c2dbc8c4a7a2",
          "type": "string",
          "format": "uuid"
        },
        "APIKey": {
          "description": "Display a unique key used for Xero-to-Xero transactions",
          "type": "string"
        },
        "Name": {
          "description": "Display name of organisation shown in Xero",
          "type": "string"
        },
        "LegalName": {
          "description": "Organisation name shown on Reports",
          "type": "string"
        },
        "PaysTax": {
          "description": "Boolean to describe if organisation is registered with a local tax authority i.e. true, false",
          "type": "boolean"
        },
        "Version": {
          "$ref": "#/definitions/Version"
        },
        "OrganisationType": {
          "$ref": "#/definitions/OrganisationType"
        },
        "BaseCurrency": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "CountryCode": {
          "$ref": "#/definitions/CountryCode"
        },
        "IsDemoCompany": {
          "description": "Boolean to describe if organisation is a demo company.",
          "type": "boolean"
        },
        "OrganisationStatus": {
          "description": "Will be set to ACTIVE if you can connect to organisation via the Xero API",
          "type": "string"
        },
        "RegistrationNumber": {
          "description": "Shows for New Zealand, Australian and UK organisations",
          "type": "string"
        },
        "EmployerIdentificationNumber": {
          "description": "Shown if set. US Only.",
          "type": "string"
        },
        "TaxNumber": {
          "description": "Shown if set. Displays in the Xero UI as Tax File Number (AU), GST Number (NZ), VAT Number (UK) and Tax ID Number (US & Global).",
          "type": "string"
        },
        "FinancialYearEndDay": {
          "description": "Calendar day e.g. 0-31",
          "type": "integer",
          "format": "int32"
        },
        "FinancialYearEndMonth": {
          "description": "Calendar Month e.g. 1-12",
          "type": "integer",
          "format": "int32"
        },
        "SalesTaxBasis": {
          "$ref": "#/definitions/SalesTaxBasis"
        },
        "SalesTaxPeriod": {
          "$ref": "#/definitions/SalesTaxPeriod"
        },
        "DefaultSalesTax": {
          "description": "The default for LineAmountTypes on sales transactions",
          "type": "string"
        },
        "DefaultPurchasesTax": {
          "description": "The default for LineAmountTypes on purchase transactions",
          "type": "string"
        },
        "PeriodLockDate": {
          "description": "Shown if set. See lock dates",
          "type": "string"
        },
        "EndOfYearLockDate": {
          "description": "Shown if set. See lock dates",
          "type": "string"
        },
        "CreatedDateUTC": {
          "description": "Timestamp when the organisation was created in Xero",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "Timezone": {
          "$ref": "#/definitions/TimeZone"
        },
        "OrganisationEntityType": {
          "$ref": "#/definitions/OrganisationEntityType"
        },
        "ShortCode": {
          "description": "A unique identifier for the organisation. Potential uses.",
          "type": "string"
        },
        "Class": {
          "$ref": "#/definitions/Class1"
        },
        "Edition": {
          "$ref": "#/definitions/Edition"
        },
        "LineOfBusiness": {
          "description": "Description of business type as defined in Organisation settings",
          "type": "string"
        },
        "Addresses": {
          "description": "Address details for organisation – see Addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressForOrganisation"
          }
        },
        "Phones": {
          "description": "Phones details for organisation – see Phones",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Phone"
          }
        },
        "ExternalLinks": {
          "description": "Organisation profile links for popular services such as Facebook,Twitter, GooglePlus and LinkedIn. You can also add link to your website here. Shown if Organisation settings  is updated in Xero. See ExternalLinks below",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalLink"
          }
        },
        "PaymentTerms": {
          "$ref": "#/definitions/PaymentTerm"
        }
      }
    },
    "CountryCode": {
      "title": "CountryCode",
      "type": "string",
      "enum": [
        "AD",
        "AE",
        "AF",
        "AG",
        "AI",
        "AL",
        "AM",
        "AN",
        "AO",
        "AQ",
        "AR",
        "AS",
        "AT",
        "AU",
        "AW",
        "AZ",
        "BA",
        "BB",
        "BD",
        "BE",
        "BF",
        "BG",
        "BH",
        "BI",
        "BJ",
        "BL",
        "BM",
        "BN",
        "BO",
        "BR",
        "BS",
        "BT",
        "BW",
        "BY",
        "BZ",
        "CA",
        "CC",
        "CD",
        "CF",
        "CG",
        "CH",
        "CI",
        "CK",
        "CL",
        "CM",
        "CN",
        "CO",
        "CR",
        "CU",
        "CV",
        "CW",
        "CX",
        "CY",
        "CZ",
        "DE",
        "DJ",
        "DK",
        "DM",
        "DO",
        "DZ",
        "EC",
        "EE",
        "EG",
        "EH",
        "ER",
        "ES",
        "ET",
        "FI",
        "FJ",
        "FK",
        "FM",
        "FO",
        "FR",
        "GA",
        "GB",
        "GD",
        "GE",
        "GG",
        "GH",
        "GI",
        "GL",
        "GM",
        "GN",
        "GQ",
        "GR",
        "GT",
        "GU",
        "GW",
        "GY",
        "HK",
        "HN",
        "HR",
        "HT",
        "HU",
        "ID",
        "IE",
        "IL",
        "IM",
        "IN",
        "IO",
        "IQ",
        "IR",
        "IS",
        "IT",
        "JE",
        "JM",
        "JO",
        "JP",
        "KE",
        "KG",
        "KH",
        "KI",
        "KM",
        "KN",
        "KP",
        "KR",
        "KW",
        "KY",
        "KZ",
        "LA",
        "LB",
        "LC",
        "LI",
        "LK",
        "LR",
        "LS",
        "LT",
        "LU",
        "LV",
        "LY",
        "MA",
        "MC",
        "MD",
        "ME",
        "MF",
        "MG",
        "MH",
        "MK",
        "ML",
        "MM",
        "MN",
        "MO",
        "MP",
        "MR",
        "MS",
        "MT",
        "MU",
        "MV",
        "MW",
        "MX",
        "MY",
        "MZ",
        "NA",
        "NC",
        "NE",
        "NG",
        "NI",
        "NL",
        "NO",
        "NP",
        "NR",
        "NU",
        "NZ",
        "OM",
        "PA",
        "PE",
        "PF",
        "PG",
        "PH",
        "PK",
        "PL",
        "PM",
        "PN",
        "PR",
        "PS",
        "PT",
        "PW",
        "PY",
        "QA",
        "RE",
        "RO",
        "RS",
        "RU",
        "RW",
        "SA",
        "SB",
        "SC",
        "SD",
        "SE",
        "SG",
        "SH",
        "SI",
        "SJ",
        "SK",
        "SL",
        "SM",
        "SN",
        "SO",
        "SR",
        "SS",
        "ST",
        "SV",
        "SX",
        "SY",
        "SZ",
        "TC",
        "TD",
        "TG",
        "TH",
        "TJ",
        "TK",
        "TL",
        "TM",
        "TN",
        "TO",
        "TR",
        "TT",
        "TV",
        "TW",
        "TZ",
        "UA",
        "UG",
        "US",
        "UY",
        "UZ",
        "VA",
        "VC",
        "VE",
        "VG",
        "VI",
        "VN",
        "VU",
        "WF",
        "WS",
        "XK",
        "YE",
        "YT",
        "ZA",
        "ZM",
        "ZW"
      ]
    },
    "TimeZone": {
      "title": "TimeZone",
      "description": "Timezone specifications",
      "type": "string",
      "enum": [
        "MOROCCOSTANDARDTIME",
        "UTC",
        "GMTSTANDARDTIME",
        "GREENWICHSTANDARDTIME",
        "WEUROPESTANDARDTIME",
        "CENTRALEUROPESTANDARDTIME",
        "ROMANCESTANDARDTIME",
        "CENTRALEUROPEANSTANDARDTIME",
        "WCENTRALAFRICASTANDARDTIME",
        "NAMIBIASTANDARDTIME",
        "JORDANSTANDARDTIME",
        "GTBSTANDARDTIME",
        "MIDDLEEASTSTANDARDTIME",
        "EGYPTSTANDARDTIME",
        "SYRIASTANDARDTIME",
        "EEUROPESTANDARDTIME",
        "SOUTHAFRICASTANDARDTIME",
        "FLESTANDARDTIME",
        "TURKEYSTANDARDTIME",
        "ISRAELSTANDARDTIME",
        "KALININGRADSTANDARDTIME",
        "LIBYASTANDARDTIME",
        "ARABICSTANDARDTIME",
        "ARABSTANDARDTIME",
        "BELARUSSTANDARDTIME",
        "RUSSIANSTANDARDTIME",
        "EAFRICASTANDARDTIME",
        "IRANSTANDARDTIME",
        "ARABIANSTANDARDTIME",
        "AZERBAIJANSTANDARDTIME",
        "RUSSIATIMEZONE3",
        "MAURITIUSSTANDARDTIME",
        "GEORGIANSTANDARDTIME",
        "CAUCASUSSTANDARDTIME",
        "AFGHANISTANSTANDARDTIME",
        "WESTASIASTANDARDTIME",
        "EKATERINBURGSTANDARDTIME",
        "PAKISTANSTANDARDTIME",
        "INDIASTANDARDTIME",
        "SRILANKASTANDARDTIME",
        "NEPALSTANDARDTIME",
        "CENTRALASIASTANDARDTIME",
        "BANGLADESHSTANDARDTIME",
        "NCENTRALASIASTANDARDTIME",
        "MYANMARSTANDARDTIME",
        "SEASIASTANDARDTIME",
        "NORTHASIASTANDARDTIME",
        "CHINASTANDARDTIME",
        "NORTHASIAEASTSTANDARDTIME",
        "SINGAPORESTANDARDTIME",
        "WAUSTRALIASTANDARDTIME",
        "TAIPEISTANDARDTIME",
        "ULAANBAATARSTANDARDTIME",
        "TOKYOSTANDARDTIME",
        "KOREASTANDARDTIME",
        "YAKUTSKSTANDARDTIME",
        "CENAUSTRALIASTANDARDTIME",
        "AUSCENTRALSTANDARDTIME",
        "EAUSTRALIASTANDARDTIME",
        "AUSEASTERNSTANDARDTIME",
        "WESTPACIFICSTANDARDTIME",
        "TASMANIASTANDARDTIME",
        "MAGADANSTANDARDTIME",
        "VLADIVOSTOKSTANDARDTIME",
        "RUSSIATIMEZONE10",
        "CENTRALPACIFICSTANDARDTIME",
        "RUSSIATIMEZONE11",
        "NEWZEALANDSTANDARDTIME",
        "UTC+12",
        "UTC+13",
        "FIJISTANDARDTIME",
        "KAMCHATKASTANDARDTIME",
        "TONGASTANDARDTIME",
        "SAMOASTANDARDTIME",
        "LINEISLANDSSTANDARDTIME",
        "AZORESSTANDARDTIME",
        "CAPEVERDESTANDARDTIME",
        "UTC02",
        "MIDATLANTICSTANDARDTIME",
        "ESOUTHAMERICASTANDARDTIME",
        "ARGENTINASTANDARDTIME",
        "SAEASTERNSTANDARDTIME",
        "GREENLANDSTANDARDTIME",
        "MONTEVIDEOSTANDARDTIME",
        "BAHIASTANDARDTIME",
        "NEWFOUNDLANDSTANDARDTIME",
        "PARAGUAYSTANDARDTIME",
        "ATLANTICSTANDARDTIME",
        "CENTRALBRAZILIANSTANDARDTIME",
        "SAWESTERNSTANDARDTIME",
        "PACIFICSASTANDARDTIME",
        "VENEZUELASTANDARDTIME",
        "SAPACIFICSTANDARDTIME",
        "EASTERNSTANDARDTIME",
        "USEASTERNSTANDARDTIME",
        "CENTRALAMERICASTANDARDTIME",
        "CENTRALSTANDARDTIME",
        "CENTRALSTANDARDTIME(MEXICO)",
        "CANADACENTRALSTANDARDTIME",
        "USMOUNTAINSTANDARDTIME",
        "MOUNTAINSTANDARDTIME(MEXICO)",
        "MOUNTAINSTANDARDTIME",
        "PACIFICSTANDARDTIME(MEXICO)",
        "PACIFICSTANDARDTIME",
        "ALASKANSTANDARDTIME",
        "HAWAIIANSTANDARDTIME",
        "UTC11",
        "DATELINESTANDARDTIME",
        "EASTERISLANDSTANDARDTIME"
      ]
    },
    "PaymentTerm": {
      "title": "PaymentTerm",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/organisation/"
      },
      "type": "object",
      "properties": {
        "Bills": {
          "$ref": "#/definitions/Bill"
        },
        "Sales": {
          "$ref": "#/definitions/Bill"
        }
      }
    },
    "PaymentTermType": {
      "title": "PaymentTermType",
      "type": "string",
      "enum": [
        "DAYSAFTERBILLDATE",
        "DAYSAFTERBILLMONTH",
        "OFCURRENTMONTH",
        "OFFOLLOWINGMONTH"
      ]
    },
    "ExternalLink": {
      "title": "ExternalLink",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/organisation/"
      },
      "type": "object",
      "properties": {
        "LinkType": {
          "$ref": "#/definitions/LinkType"
        },
        "Url": {
          "description": "URL for service e.g. http://twitter.com/xeroapi",
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Bill": {
      "title": "Bill",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/organisation/"
      },
      "type": "object",
      "properties": {
        "Day": {
          "description": "Day of Month (0-31)",
          "type": "integer",
          "format": "int32"
        },
        "Type": {
          "$ref": "#/definitions/PaymentTermType"
        }
      }
    },
    "Overpayments": {
      "title": "Overpayments",
      "type": "object",
      "properties": {
        "Overpayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Overpayment"
          }
        }
      }
    },
    "Overpayment": {
      "title": "Overpayment",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/overpayments/"
      },
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Type4"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "Date": {
          "description": "The date the overpayment is created YYYY-MM-DD",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/Status5"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "LineItems": {
          "description": "See Overpayment Line Items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "SubTotal": {
          "description": "The subtotal of the overpayment excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "The total tax on the overpayment",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "The total of the overpayment (subtotal + total tax)",
          "type": "number",
          "format": "double"
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to the overpayment",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "OverpaymentID": {
          "description": "Xero generated unique identifier",
          "type": "string",
          "format": "uuid"
        },
        "CurrencyRate": {
          "description": "The currency rate for a multicurrency overpayment. If no rate is specified, the XE.com day rate is used",
          "type": "number",
          "format": "double"
        },
        "RemainingCredit": {
          "description": "The remaining credit balance on the overpayment",
          "type": "number",
          "format": "double"
        },
        "Allocations": {
          "description": "See Allocations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        },
        "AppliedAmount": {
          "description": "The amount of applied to an invoice",
          "example": 2,
          "type": "number",
          "format": "double"
        },
        "Payments": {
          "description": "See Payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "HasAttachments": {
          "description": "boolean to indicate if a overpayment has an attachment",
          "example": false,
          "readOnly": true,
          "type": "boolean",
          "default": false
        },
        "Attachments": {
          "description": "See Attachments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        }
      }
    },
    "Payments": {
      "title": "Payments",
      "type": "object",
      "properties": {
        "Payments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        }
      }
    },
    "PaymentDelete": {
      "title": "PaymentDelete",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/payments/"
      },
      "type": "object",
      "properties": {
        "Status": {
          "description": "The status of the payment.",
          "type": "string",
          "default": "DELETED"
        }
      },
      "required": [
        "Status"
      ]
    },
    "Payment": {
      "title": "Payment",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/payments/"
      },
      "type": "object",
      "properties": {
        "Invoice": {
          "$ref": "#/definitions/Invoice"
        },
        "CreditNote": {
          "$ref": "#/definitions/CreditNote"
        },
        "Prepayment": {
          "$ref": "#/definitions/Prepayment"
        },
        "Overpayment": {
          "$ref": "#/definitions/Overpayment"
        },
        "InvoiceNumber": {
          "description": "Number of invoice or credit note you are applying payment to e.g.INV-4003",
          "type": "string"
        },
        "CreditNoteNumber": {
          "description": "Number of invoice or credit note you are applying payment to e.g. INV-4003",
          "type": "string"
        },
        "Account": {
          "$ref": "#/definitions/Account"
        },
        "Code": {
          "description": "Code of account you are using to make the payment e.g. 001 (note- not all accounts have a code value)",
          "type": "string"
        },
        "Date": {
          "description": "Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06",
          "type": "string"
        },
        "CurrencyRate": {
          "description": "Exchange rate when payment is received. Only used for non base currency invoices and credit notes e.g. 0.7500",
          "type": "number",
          "format": "double"
        },
        "Amount": {
          "description": "The amount of the payment. Must be less than or equal to the outstanding amount owing on the invoice e.g. 200.00",
          "type": "number",
          "format": "double"
        },
        "BankAmount": {
          "description": "The amount of the payment in the currency of the bank account.",
          "type": "number",
          "format": "double"
        },
        "Reference": {
          "description": "An optional description for the payment e.g. Direct Debit",
          "type": "string"
        },
        "IsReconciled": {
          "description": "An optional parameter for the payment. A boolean indicating whether you would like the payment to be created as reconciled when using PUT, or whether a payment has been reconciled when using GET",
          "type": "boolean"
        },
        "Status": {
          "$ref": "#/definitions/Status7"
        },
        "PaymentType": {
          "$ref": "#/definitions/PaymentType"
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to the payment",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "PaymentID": {
          "description": "The Xero identifier for an Payment e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "BatchPaymentID": {
          "description": "Present if the payment was created as part of a batch.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string",
          "format": "uuid"
        },
        "BankAccountNumber": {
          "description": "The suppliers bank account number the payment is being made to",
          "type": "string"
        },
        "Particulars": {
          "description": "The suppliers bank account number the payment is being made to",
          "type": "string"
        },
        "Details": {
          "description": "The information to appear on the supplier's bank account",
          "type": "string"
        },
        "HasAccount": {
          "description": "A boolean to indicate if a contact has an validation errors",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "HasValidationErrors": {
          "description": "A boolean to indicate if a contact has an validation errors",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "StatusAttributeString": {
          "description": "A string to indicate if a invoice status",
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "Prepayments": {
      "title": "Prepayments",
      "type": "object",
      "properties": {
        "Prepayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Prepayment"
          }
        }
      }
    },
    "Prepayment": {
      "title": "Prepayment",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/prepayments/"
      },
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Type3"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "Date": {
          "description": "The date the prepayment is created YYYY-MM-DD",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/Status4"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "LineItems": {
          "description": "See Prepayment Line Items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "SubTotal": {
          "description": "The subtotal of the prepayment excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "The total tax on the prepayment",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "The total of the prepayment(subtotal + total tax)",
          "type": "number",
          "format": "double"
        },
        "Reference": {
          "description": "Returns Invoice number field. Reference field isn't available.",
          "readOnly": true,
          "type": "string"
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to the prepayment",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "PrepaymentID": {
          "description": "Xero generated unique identifier",
          "type": "string",
          "format": "uuid"
        },
        "CurrencyRate": {
          "description": "The currency rate for a multicurrency prepayment. If no rate is specified, the XE.com day rate is used",
          "type": "number",
          "format": "double"
        },
        "RemainingCredit": {
          "description": "The remaining credit balance on the prepayment",
          "type": "number",
          "format": "double"
        },
        "Allocations": {
          "description": "See Allocations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        },
        "Payments": {
          "description": "See Payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "AppliedAmount": {
          "description": "The amount of applied to an invoice",
          "example": 2,
          "type": "number",
          "format": "double"
        },
        "HasAttachments": {
          "description": "boolean to indicate if a prepayment has an attachment",
          "example": false,
          "readOnly": true,
          "type": "boolean",
          "default": false
        },
        "Attachments": {
          "description": "See Attachments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        }
      }
    },
    "PurchaseOrders": {
      "title": "PurchaseOrders",
      "type": "object",
      "properties": {
        "PurchaseOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchaseOrder"
          }
        }
      }
    },
    "PurchaseOrder": {
      "title": "PurchaseOrder",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/purchase-orders/"
      },
      "type": "object",
      "properties": {
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "LineItems": {
          "description": "See LineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "Date": {
          "description": "Date purchase order was issued – YYYY-MM-DD. If the Date element is not specified then it will default to the current date based on the timezone setting of the organisation",
          "type": "string"
        },
        "DeliveryDate": {
          "description": "Date the goods are to be delivered – YYYY-MM-DD",
          "type": "string"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "PurchaseOrderNumber": {
          "description": "Unique alpha numeric code identifying purchase order (when missing will auto-generate from your Organisation Invoice Settings)",
          "type": "string"
        },
        "Reference": {
          "description": "Additional reference number",
          "type": "string"
        },
        "BrandingThemeID": {
          "description": "See BrandingThemes",
          "type": "string",
          "format": "uuid"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "Status": {
          "$ref": "#/definitions/Status17"
        },
        "SentToContact": {
          "description": "Boolean to set whether the purchase order should be marked as “sent”. This can be set only on purchase orders that have been approved or billed",
          "type": "boolean"
        },
        "DeliveryAddress": {
          "description": "The address the goods are to be delivered to",
          "type": "string"
        },
        "AttentionTo": {
          "description": "The person that the delivery is going to",
          "type": "string"
        },
        "Telephone": {
          "description": "The phone number for the person accepting the delivery",
          "type": "string"
        },
        "DeliveryInstructions": {
          "description": "A free text feild for instructions (500 characters max)",
          "type": "string"
        },
        "ExpectedArrivalDate": {
          "description": "The date the goods are expected to arrive.",
          "type": "string"
        },
        "PurchaseOrderID": {
          "description": "Xero generated unique identifier for purchase order",
          "type": "string",
          "format": "uuid"
        },
        "CurrencyRate": {
          "description": "The currency rate for a multicurrency purchase order. If no rate is specified, the XE.com day rate is used.",
          "type": "number",
          "format": "double"
        },
        "SubTotal": {
          "description": "Total of purchase order excluding taxes",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "Total tax on purchase order",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "Total of Purchase Order tax inclusive (i.e. SubTotal + TotalTax)",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "TotalDiscount": {
          "description": "Total of discounts applied on the purchase order line items",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "HasAttachments": {
          "description": "boolean to indicate if a purchase order has an attachment",
          "example": false,
          "readOnly": true,
          "type": "boolean",
          "default": false
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "StatusAttributeString": {
          "description": "A string to indicate if a invoice status",
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "Warnings": {
          "description": "Displays array of warning messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "Attachments": {
          "description": "Displays array of attachments from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        }
      }
    },
    "Quotes": {
      "title": "Quotes",
      "type": "object",
      "properties": {
        "Quotes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Quote"
          }
        }
      }
    },
    "Quote": {
      "title": "Quote",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/Quotes/"
      },
      "type": "object",
      "properties": {
        "QuoteID": {
          "description": "QuoteID GUID is automatically generated and is returned after create or GET.",
          "type": "string",
          "format": "uuid"
        },
        "QuoteNumber": {
          "description": "Unique alpha numeric code identifying a quote (Max Length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "Reference": {
          "description": "Additional reference number",
          "type": "string",
          "maxLength": 4000
        },
        "Terms": {
          "description": "Terms of the quote",
          "type": "string",
          "maxLength": 4000
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "LineItems": {
          "description": "See LineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "Date": {
          "description": "Date quote was issued – YYYY-MM-DD. If the Date element is not specified it will default to the current date based on the timezone setting of the organisation",
          "type": "string"
        },
        "DateString": {
          "description": "Date the quote was issued (YYYY-MM-DD)",
          "type": "string"
        },
        "ExpiryDate": {
          "description": "Date the quote expires – YYYY-MM-DD.",
          "type": "string"
        },
        "ExpiryDateString": {
          "description": "Date the quote expires – YYYY-MM-DD.",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/QuoteStatusCodes"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "CurrencyRate": {
          "description": "The currency rate for a multicurrency quote",
          "type": "number",
          "format": "double"
        },
        "SubTotal": {
          "description": "Total of quote excluding taxes.",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "Total tax on quote",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "Total of Quote tax inclusive (i.e. SubTotal + TotalTax). This will be ignored if it doesn’t equal the sum of the LineAmounts",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "TotalDiscount": {
          "description": "Total of discounts applied on the quote line items",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "Title": {
          "description": "Title text for the quote",
          "type": "string",
          "maxLength": 100
        },
        "Summary": {
          "description": "Summary text for the quote",
          "type": "string",
          "maxLength": 3000
        },
        "BrandingThemeID": {
          "description": "See BrandingThemes",
          "type": "string",
          "format": "uuid"
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/QuoteLineAmountTypes"
        },
        "StatusAttributeString": {
          "description": "A string to indicate if a invoice status",
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "QuoteLineAmountTypes": {
      "title": "QuoteLineAmountTypes",
      "description": "Line amounts are exclusive of tax by default if you don’t specify this element. See Line Amount Types",
      "type": "string",
      "enum": [
        "EXCLUSIVE",
        "INCLUSIVE",
        "NOTAX"
      ]
    },
    "QuoteStatusCodes": {
      "title": "QuoteStatusCodes",
      "description": "The status of the quote.",
      "type": "string",
      "enum": [
        "DRAFT",
        "SENT",
        "DECLINED",
        "ACCEPTED",
        "INVOICED",
        "DELETED"
      ]
    },
    "Receipts": {
      "title": "Receipts",
      "type": "object",
      "properties": {
        "Receipts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Receipt"
          }
        }
      }
    },
    "Receipt": {
      "title": "Receipt",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/receipts/"
      },
      "type": "object",
      "properties": {
        "Date": {
          "description": "Date of receipt – YYYY-MM-DD",
          "type": "string"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "LineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "User": {
          "$ref": "#/definitions/User"
        },
        "Reference": {
          "description": "Additional reference number",
          "type": "string"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "SubTotal": {
          "description": "Total of receipt excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "Total tax on receipt",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "Total of receipt tax inclusive (i.e. SubTotal + TotalTax)",
          "type": "number",
          "format": "double"
        },
        "ReceiptID": {
          "description": "Xero generated unique identifier for receipt",
          "type": "string",
          "format": "uuid"
        },
        "Status": {
          "$ref": "#/definitions/Status13"
        },
        "ReceiptNumber": {
          "description": "Xero generated sequence number for receipt in current claim for a given user",
          "readOnly": true,
          "type": "string"
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "HasAttachments": {
          "description": "boolean to indicate if a receipt has an attachment",
          "example": false,
          "readOnly": true,
          "type": "boolean",
          "default": false
        },
        "Url": {
          "description": "URL link to a source document – shown as “Go to [appName]” in the Xero app",
          "readOnly": true,
          "type": "string"
        },
        "ValidationErrors": {
          "description": "Displays array of validation error messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "Warnings": {
          "description": "Displays array of warning messages from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "Attachments": {
          "description": "Displays array of attachments from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        }
      }
    },
    "RepeatingInvoices": {
      "title": "RepeatingInvoices",
      "type": "object",
      "properties": {
        "RepeatingInvoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RepeatingInvoice"
          }
        }
      }
    },
    "RepeatingInvoice": {
      "title": "RepeatingInvoice",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/repeating-invoices/"
      },
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Type9"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "Schedule": {
          "$ref": "#/definitions/Schedule"
        },
        "LineItems": {
          "description": "See LineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "Reference": {
          "description": "ACCREC only – additional reference number",
          "type": "string"
        },
        "BrandingThemeID": {
          "description": "See BrandingThemes",
          "type": "string",
          "format": "uuid"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "Status": {
          "$ref": "#/definitions/Status18"
        },
        "SubTotal": {
          "description": "Total of invoice excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "Total tax on invoice",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "Total of Invoice tax inclusive (i.e. SubTotal + TotalTax)",
          "type": "number",
          "format": "double"
        },
        "RepeatingInvoiceID": {
          "description": "Xero generated unique identifier for repeating invoice template",
          "type": "string",
          "format": "uuid"
        },
        "ID": {
          "description": "Xero generated unique identifier for repeating invoice template",
          "type": "string",
          "format": "uuid"
        },
        "HasAttachments": {
          "description": "boolean to indicate if an invoice has an attachment",
          "example": false,
          "readOnly": true,
          "type": "boolean",
          "default": false
        },
        "Attachments": {
          "description": "Displays array of attachments from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        }
      }
    },
    "ReportWithRows": {
      "title": "ReportWithRows",
      "type": "object",
      "properties": {
        "Reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportWithRow"
          }
        }
      }
    },
    "ReportWithRow": {
      "title": "ReportWithRow",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/reports/"
      },
      "type": "object",
      "properties": {
        "ReportID": {
          "description": "ID of the Report",
          "type": "string"
        },
        "ReportName": {
          "description": "Name of the report",
          "type": "string"
        },
        "ReportTitle": {
          "description": "Title of the report",
          "type": "string"
        },
        "ReportType": {
          "description": "The type of report (BalanceSheet,ProfitLoss, etc)",
          "type": "string"
        },
        "ReportTitles": {
          "description": "Report titles array (3 to 4 strings with the report name, orgnisation name and time frame of report)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ReportDate": {
          "description": "Date of report",
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportRows"
          }
        },
        "UpdatedDateUTC": {
          "description": "Updated Date",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "Fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportFields"
          }
        }
      }
    },
    "ReportRows": {
      "title": "ReportRows",
      "type": "object",
      "properties": {
        "RowType": {
          "$ref": "#/definitions/RowType"
        },
        "Title": {
          "type": "string"
        },
        "Cells": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCell"
          }
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportRow"
          }
        }
      }
    },
    "RowType": {
      "title": "RowType",
      "type": "string",
      "enum": [
        "Header",
        "Section",
        "Row",
        "SummaryRow"
      ]
    },
    "ReportRow": {
      "title": "ReportRow",
      "type": "object",
      "properties": {
        "RowType": {
          "$ref": "#/definitions/RowType"
        },
        "Title": {
          "type": "string"
        },
        "Cells": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCell"
          }
        }
      }
    },
    "ReportCell": {
      "title": "ReportCell",
      "type": "object",
      "properties": {
        "Value": {
          "type": "string"
        },
        "Attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportAttribute"
          }
        }
      }
    },
    "ReportAttribute": {
      "title": "ReportAttribute",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/reports/"
      },
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "ReportFields": {
      "title": "ReportFields",
      "type": "object",
      "properties": {
        "FieldID": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "Reports": {
      "title": "Reports",
      "type": "object",
      "properties": {
        "Reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Report"
          }
        }
      }
    },
    "Report": {
      "title": "Report",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/reports/"
      },
      "type": "object",
      "properties": {
        "ReportName": {
          "description": "See Prepayment Types",
          "type": "string"
        },
        "ReportType": {
          "$ref": "#/definitions/ReportType"
        },
        "ReportTitle": {
          "description": "See Prepayment Types",
          "type": "string"
        },
        "ReportDate": {
          "description": "Date of report",
          "type": "string"
        },
        "UpdatedDateUTC": {
          "description": "Updated Date",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "Contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenNinetyNineContact"
          }
        }
      }
    },
    "TenNinetyNineContact": {
      "title": "TenNinetyNineContact",
      "type": "object",
      "properties": {
        "Box1": {
          "description": "Box 1 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Box2": {
          "description": "Box 2 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Box3": {
          "description": "Box 3 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Box4": {
          "description": "Box 4 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Box5": {
          "description": "Box 5 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Box6": {
          "description": "Box 6 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Box7": {
          "description": "Box 7 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Box8": {
          "description": "Box 8 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Box9": {
          "description": "Box 9 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Box10": {
          "description": "Box 10 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Box11": {
          "description": "Box 11 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Box13": {
          "description": "Box 13 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Box14": {
          "description": "Box 14 on 1099 Form",
          "type": "number",
          "format": "double"
        },
        "Name": {
          "description": "Contact name on 1099 Form",
          "type": "string"
        },
        "FederalTaxIDType": {
          "description": "Contact Fed Tax ID type",
          "type": "string"
        },
        "City": {
          "description": "Contact city on 1099 Form",
          "type": "string"
        },
        "Zip": {
          "description": "Contact zip on 1099 Form",
          "type": "string"
        },
        "State": {
          "description": "Contact State on 1099 Form",
          "type": "string"
        },
        "Email": {
          "description": "Contact email on 1099 Form",
          "type": "string"
        },
        "StreetAddress": {
          "description": "Contact address on 1099 Form",
          "type": "string"
        },
        "TaxID": {
          "description": "Contact tax id on 1099 Form",
          "type": "string"
        },
        "ContactId": {
          "description": "Contact contact id",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Schedule": {
      "title": "Schedule",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/repeating-invoices/"
      },
      "type": "object",
      "properties": {
        "Period": {
          "description": "Integer used with the unit e.g. 1 (every 1 week), 2 (every 2 months)",
          "type": "integer",
          "format": "int32"
        },
        "Unit": {
          "$ref": "#/definitions/Unit"
        },
        "DueDate": {
          "description": "Integer used with due date type e.g 20 (of following month), 31 (of current month)",
          "type": "integer",
          "format": "int32"
        },
        "DueDateType": {
          "$ref": "#/definitions/DueDateType"
        },
        "StartDate": {
          "description": "Date the first invoice of the current version of the repeating schedule was generated (changes when repeating invoice is edited)",
          "type": "string"
        },
        "NextScheduledDate": {
          "description": "The calendar date of the next invoice in the schedule to be generated",
          "type": "string"
        },
        "EndDate": {
          "description": "Invoice end date – only returned if the template has an end date set",
          "type": "string"
        }
      }
    },
    "TaxRates": {
      "title": "TaxRates",
      "type": "object",
      "properties": {
        "TaxRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxRate"
          }
        }
      }
    },
    "TaxType": {
      "title": "TaxType",
      "description": "See Tax Types – can only be used on update calls",
      "type": "string",
      "enum": [
        "OUTPUT",
        "INPUT",
        "CAPEXINPUT",
        "EXEMPTEXPORT",
        "EXEMPTEXPENSES",
        "EXEMPTCAPITAL",
        "EXEMPTOUTPUT",
        "INPUTTAXED",
        "BASEXCLUDED",
        "GSTONCAPIMPORTS",
        "GSTONIMPORTS",
        "NONE",
        "INPUT2",
        "ZERORATED",
        "OUTPUT2",
        "CAPEXINPUT2",
        "CAPEXOUTPUT",
        "CAPEXOUTPUT2",
        "CAPEXSRINPUT",
        "CAPEXSROUTPUT",
        "ECACQUISITIONS",
        "ECZRINPUT",
        "ECZROUTPUT",
        "ECZROUTPUTSERVICES",
        "EXEMPTINPUT",
        "REVERSECHARGES",
        "RRINPUT",
        "RROUTPUT",
        "SRINPUT",
        "SROUTPUT",
        "ZERORATEDINPUT",
        "ZERORATEDOUTPUT",
        "BLINPUT",
        "DSOUTPUT",
        "EPINPUT",
        "ES33OUTPUT",
        "ESN33OUTPUT",
        "IGDSINPUT2",
        "IMINPUT2",
        "MEINPUT",
        "NRINPUT",
        "OPINPUT",
        "OSOUTPUT",
        "TXESSINPUT",
        "TXN33INPUT",
        "TXPETINPUT",
        "TXREINPUT",
        "INPUT3",
        "INPUT4",
        "OUTPUT3",
        "OUTPUT4",
        "SROUTPUT2",
        "TXCA",
        "SRCAS",
        "BLINPUT2",
        "DRCHARGESUPPLY20",
        "DRCHARGE20",
        "DRCHARGESUPPLY5",
        "DRCHARGE5",
        "BADDEBTRELIEF",
        "IGDSINPUT3",
        "SROVR",
        "TOURISTREFUND",
        "TXRCN33INPUT",
        "TXRCREINPUT",
        "TXRCESSINPUT",
        "TXRCTSINPUT"
      ]
    },
    "Setup": {
      "title": "Setup",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api-guides/conversions"
      },
      "type": "object",
      "properties": {
        "ConversionDate": {
          "$ref": "#/definitions/ConversionDate"
        },
        "ConversionBalances": {
          "description": "Balance supplied for each account that has a value as at the conversion date.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConversionBalances"
          }
        },
        "Accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        }
      }
    },
    "ConversionDate": {
      "title": "ConversionDate",
      "description": "The date when the organisation starts using Xero",
      "type": "object",
      "properties": {
        "Month": {
          "description": "The month the organisation starts using Xero. Value is an integer between 1 and 12",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "Year": {
          "description": "The year the organisation starts using Xero. Value is an integer greater than 2006",
          "example": 2020,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ConversionBalances": {
      "title": "ConversionBalances",
      "description": "Balance supplied for each account that has a value as at the conversion date.",
      "type": "object",
      "properties": {
        "AccountCode": {
          "description": "The account code for a account",
          "type": "string"
        },
        "Balance": {
          "description": "The opening balances of the account. Debits are positive, credits are negative values",
          "type": "number",
          "format": "double"
        },
        "BalanceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BalanceDetails"
          }
        }
      }
    },
    "BalanceDetails": {
      "title": "BalanceDetails",
      "description": "An array to specify multiple currency balances of an account",
      "type": "object",
      "properties": {
        "Balance": {
          "description": "The opening balances of the account. Debits are positive, credits are negative values",
          "type": "number",
          "format": "double"
        },
        "CurrencyCode": {
          "description": "The currency of the balance (Not required for base currency)",
          "type": "string"
        },
        "CurrencyRate": {
          "description": "(Optional) Exchange rate to base currency when money is spent or received. If not specified, XE rate for the day is applied",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ImportSummaryObject": {
      "title": "ImportSummaryObject",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api-guides/conversions"
      },
      "type": "object",
      "properties": {
        "ImportSummary": {
          "$ref": "#/definitions/ImportSummary"
        }
      }
    },
    "ImportSummary": {
      "title": "ImportSummary",
      "description": "A summary of the import from setup endpoint",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api-guides/conversions"
      },
      "type": "object",
      "properties": {
        "Accounts": {
          "$ref": "#/definitions/ImportSummaryAccounts"
        },
        "Organisation": {
          "$ref": "#/definitions/ImportSummaryOrganisation"
        }
      }
    },
    "ImportSummaryAccounts": {
      "title": "ImportSummaryAccounts",
      "description": "A summary of the accounts changes",
      "type": "object",
      "properties": {
        "Total": {
          "description": "The total number of accounts in the org",
          "type": "integer",
          "format": "int32"
        },
        "New": {
          "description": "The number of new accounts created",
          "type": "integer",
          "format": "int32"
        },
        "Updated": {
          "description": "The number of accounts updated",
          "type": "integer",
          "format": "int32"
        },
        "Deleted": {
          "description": "The number of accounts deleted",
          "type": "integer",
          "format": "int32"
        },
        "Locked": {
          "description": "The number of locked accounts",
          "type": "integer",
          "format": "int32"
        },
        "System": {
          "description": "The number of system accounts",
          "type": "integer",
          "format": "int32"
        },
        "Errored": {
          "description": "The number of accounts that had an error",
          "type": "integer",
          "format": "int32"
        },
        "Present": {
          "type": "boolean"
        },
        "NewOrUpdated": {
          "description": "The number of new or updated accounts",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ImportSummaryOrganisation": {
      "title": "ImportSummaryOrganisation",
      "type": "object",
      "properties": {
        "Present": {
          "type": "boolean"
        }
      }
    },
    "TaxRate": {
      "title": "TaxRate",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/tax-rates/"
      },
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of tax rate",
          "type": "string"
        },
        "TaxType": {
          "description": "The tax type",
          "type": "string"
        },
        "TaxComponents": {
          "description": "See TaxComponents",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxComponent"
          }
        },
        "Status": {
          "$ref": "#/definitions/Status19"
        },
        "ReportTaxType": {
          "$ref": "#/definitions/ReportTaxType"
        },
        "CanApplyToAssets": {
          "description": "Boolean to describe if tax rate can be used for asset accounts i.e.  true,false",
          "readOnly": true,
          "type": "boolean"
        },
        "CanApplyToEquity": {
          "description": "Boolean to describe if tax rate can be used for equity accounts i.e true,false",
          "readOnly": true,
          "type": "boolean"
        },
        "CanApplyToExpenses": {
          "description": "Boolean to describe if tax rate can be used for expense accounts  i.e. true,false",
          "readOnly": true,
          "type": "boolean"
        },
        "CanApplyToLiabilities": {
          "description": "Boolean to describe if tax rate can be used for liability accounts  i.e. true,false",
          "readOnly": true,
          "type": "boolean"
        },
        "CanApplyToRevenue": {
          "description": "Boolean to describe if tax rate can be used for revenue accounts i.e. true,false",
          "readOnly": true,
          "type": "boolean"
        },
        "DisplayTaxRate": {
          "description": "Tax Rate (decimal to 4dp) e.g 12.5000",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "EffectiveRate": {
          "description": "Effective Tax Rate (decimal to 4dp) e.g 12.5000",
          "readOnly": true,
          "type": "number",
          "format": "double"
        }
      }
    },
    "TaxComponent": {
      "title": "TaxComponent",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/tax-rates/"
      },
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of Tax Component",
          "type": "string"
        },
        "Rate": {
          "description": "Tax Rate (up to 4dp)",
          "type": "number",
          "format": "double"
        },
        "IsCompound": {
          "description": "Boolean to describe if Tax rate is compounded.",
          "type": "boolean"
        },
        "IsNonRecoverable": {
          "description": "Boolean to describe if tax rate is non-recoverable. Non-recoverable rates are only applicable to Canadian organisations",
          "type": "boolean"
        }
      }
    },
    "TrackingCategories": {
      "title": "TrackingCategories",
      "type": "object",
      "properties": {
        "TrackingCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingCategory"
          }
        }
      }
    },
    "TrackingCategory": {
      "title": "TrackingCategory",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/tracking-categories/"
      },
      "type": "object",
      "properties": {
        "TrackingCategoryID": {
          "description": "The Xero identifier for a tracking category e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        },
        "TrackingOptionID": {
          "description": "The Xero identifier for a tracking option e.g. dc54c220-0140-495a-b925-3246adc0075f",
          "type": "string",
          "format": "uuid"
        },
        "Name": {
          "description": "The name of the tracking category e.g. Department, Region (max length = 100)",
          "type": "string",
          "maxLength": 100
        },
        "Option": {
          "description": "The option name of the tracking option e.g. East, West (max length = 100)",
          "type": "string",
          "maxLength": 100
        },
        "Status": {
          "$ref": "#/definitions/Status9"
        },
        "Options": {
          "description": "See Tracking Options",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingOption"
          }
        }
      }
    },
    "TrackingOptions": {
      "title": "TrackingOptions",
      "type": "object",
      "properties": {
        "Options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingOption"
          }
        }
      }
    },
    "TrackingOption": {
      "title": "TrackingOption",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/tracking-categories/"
      },
      "type": "object",
      "properties": {
        "TrackingOptionID": {
          "description": "The Xero identifier for a tracking option e.g. ae777a87-5ef3-4fa0-a4f0-d10e1f13073a",
          "type": "string",
          "format": "uuid"
        },
        "Name": {
          "description": "The name of the tracking option e.g. Marketing, East (max length = 100)",
          "type": "string",
          "maxLength": 100
        },
        "Status": {
          "$ref": "#/definitions/Status10"
        },
        "TrackingCategoryID": {
          "description": "Filter by a tracking category e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "SalesTrackingCategory": {
      "title": "SalesTrackingCategory",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/tracking-categories/"
      },
      "type": "object",
      "properties": {
        "TrackingCategoryName": {
          "description": "The default sales tracking category name for contacts",
          "type": "string"
        },
        "TrackingOptionName": {
          "description": "The default purchase tracking category name for contacts",
          "type": "string"
        }
      }
    },
    "Users": {
      "title": "Users",
      "type": "object",
      "properties": {
        "Users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "User": {
      "title": "User",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/users/"
      },
      "type": "object",
      "properties": {
        "UserID": {
          "description": "Xero identifier",
          "type": "string",
          "format": "uuid"
        },
        "EmailAddress": {
          "description": "Email address of user",
          "type": "string"
        },
        "FirstName": {
          "description": "First name of user",
          "type": "string"
        },
        "LastName": {
          "description": "Last name of user",
          "type": "string"
        },
        "UpdatedDateUTC": {
          "description": "Timestamp of last change to user",
          "example": "/Date(1573755038314)/",
          "readOnly": true,
          "type": "string"
        },
        "IsSubscriber": {
          "description": "Boolean to indicate if user is the subscriber",
          "type": "boolean"
        },
        "OrganisationRole": {
          "$ref": "#/definitions/OrganisationRole"
        }
      }
    },
    "Error": {
      "title": "Error",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/http-response-codes"
      },
      "type": "object",
      "properties": {
        "ErrorNumber": {
          "description": "Exception number",
          "type": "integer",
          "format": "int32"
        },
        "Type": {
          "description": "Exception type",
          "type": "string"
        },
        "Message": {
          "description": "Exception message",
          "type": "string"
        },
        "Elements": {
          "description": "Array of Elements of validation Errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Element"
          }
        }
      }
    },
    "Element": {
      "title": "Element",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/http-response-codes"
      },
      "type": "object",
      "properties": {
        "ValidationErrors": {
          "description": "Array of Validation Error message",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "BatchPaymentID": {
          "description": "Unique ID for batch payment object with validation error",
          "type": "string",
          "format": "uuid"
        },
        "BankTransactionID": {
          "type": "string",
          "format": "uuid"
        },
        "CreditNoteID": {
          "type": "string",
          "format": "uuid"
        },
        "ContactID": {
          "type": "string",
          "format": "uuid"
        },
        "InvoiceID": {
          "type": "string",
          "format": "uuid"
        },
        "ItemID": {
          "type": "string",
          "format": "uuid"
        },
        "PurchaseOrderID": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ValidationError": {
      "title": "ValidationError",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/http-response-codes"
      },
      "type": "object",
      "properties": {
        "Message": {
          "description": "Validation error message",
          "type": "string"
        }
      }
    },
    "AddressType": {
      "title": "AddressType",
      "description": "define the type of address",
      "type": "string",
      "enum": [
        "POBOX",
        "STREET",
        "DELIVERY"
      ]
    },
    "AddressType1": {
      "title": "AddressType1",
      "description": "define the type of address",
      "type": "string",
      "enum": [
        "POBOX",
        "STREET"
      ]
    },
    "BankAccountType": {
      "title": "BankAccountType",
      "description": "For bank accounts only. See Bank Account types",
      "type": "string",
      "enum": [
        "BANK",
        "CREDITCARD",
        "PAYPAL",
        "NONE"
      ]
    },
    "Class": {
      "title": "Class",
      "description": "See Account Class Types",
      "type": "string",
      "enum": [
        "ASSET",
        "EQUITY",
        "EXPENSE",
        "LIABILITY",
        "REVENUE"
      ]
    },
    "Class1": {
      "title": "Class1",
      "description": "Organisation Classes describe which plan the Xero organisation is on (e.g. DEMO, TRIAL, PREMIUM)",
      "type": "string",
      "enum": [
        "DEMO",
        "TRIAL",
        "STARTER",
        "STANDARD",
        "PREMIUM",
        "PREMIUM_20",
        "PREMIUM_50",
        "PREMIUM_100",
        "LEDGER",
        "GST_CASHBOOK",
        "NON_GST_CASHBOOK",
        "ULTIMATE"
      ]
    },
    "ContactStatus": {
      "title": "ContactStatus",
      "description": "Current status of a contact – see contact status types",
      "type": "string",
      "enum": [
        "ACTIVE",
        "ARCHIVED",
        "GDPRREQUEST"
      ]
    },
    "DueDateType": {
      "title": "DueDateType",
      "description": "the payment terms",
      "type": "string",
      "enum": [
        "DAYSAFTERBILLDATE",
        "DAYSAFTERBILLMONTH",
        "DAYSAFTERINVOICEDATE",
        "DAYSAFTERINVOICEMONTH",
        "OFCURRENTMONTH",
        "OFFOLLOWINGMONTH"
      ]
    },
    "Edition": {
      "title": "Edition",
      "description": "BUSINESS or PARTNER. Partner edition organisations are sold exclusively through accounting partners and have restricted functionality (e.g. no access to invoicing)",
      "type": "string",
      "enum": [
        "BUSINESS",
        "PARTNER"
      ]
    },
    "LinkType": {
      "title": "LinkType",
      "description": "See External link types",
      "type": "string",
      "enum": [
        "Facebook",
        "GooglePlus",
        "LinkedIn",
        "Twitter",
        "Website"
      ]
    },
    "OrganisationEntityType": {
      "title": "OrganisationEntityType",
      "description": "Organisation Entity Type",
      "type": "string",
      "enum": [
        "ACCOUNTING_PRACTICE",
        "COMPANY",
        "CHARITY",
        "CLUB_OR_SOCIETY",
        "INDIVIDUAL",
        "LOOK_THROUGH_COMPANY",
        "NOT_FOR_PROFIT",
        "PARTNERSHIP",
        "S_CORPORATION",
        "SELF_MANAGED_SUPERANNUATION_FUND",
        "SOLE_TRADER",
        "SUPERANNUATION_FUND",
        "TRUST"
      ]
    },
    "OrganisationRole": {
      "title": "OrganisationRole",
      "description": "User role that defines permissions in Xero and via API (READONLY, INVOICEONLY, STANDARD, FINANCIALADVISER, etc)",
      "type": "string",
      "enum": [
        "READONLY",
        "INVOICEONLY",
        "STANDARD",
        "FINANCIALADVISER",
        "MANAGEDCLIENT",
        "CASHBOOKCLIENT",
        "UNKNOWN"
      ]
    },
    "OrganisationType": {
      "title": "OrganisationType",
      "description": "Organisation Type",
      "type": "string",
      "enum": [
        "ACCOUNTING_PRACTICE",
        "COMPANY",
        "CHARITY",
        "CLUB_OR_SOCIETY",
        "INDIVIDUAL",
        "LOOK_THROUGH_COMPANY",
        "NOT_FOR_PROFIT",
        "PARTNERSHIP",
        "S_CORPORATION",
        "SELF_MANAGED_SUPERANNUATION_FUND",
        "SOLE_TRADER",
        "SUPERANNUATION_FUND",
        "TRUST"
      ]
    },
    "PaymentType": {
      "title": "PaymentType",
      "description": "See Payment Types.",
      "type": "string",
      "enum": [
        "ACCRECPAYMENT",
        "ACCPAYPAYMENT",
        "ARCREDITPAYMENT",
        "APCREDITPAYMENT",
        "AROVERPAYMENTPAYMENT",
        "ARPREPAYMENTPAYMENT",
        "APPREPAYMENTPAYMENT",
        "APOVERPAYMENTPAYMENT"
      ]
    },
    "PhoneType": {
      "title": "PhoneType",
      "type": "string",
      "enum": [
        "DEFAULT",
        "DDI",
        "MOBILE",
        "FAX",
        "OFFICE"
      ]
    },
    "PurchasesDefaultLineAmountType": {
      "title": "PurchasesDefaultLineAmountType",
      "description": "The default purchases line amount type for a contact Only available when summaryOnly parameter or paging is used, or when fetch by ContactId or ContactNumber.",
      "type": "string",
      "enum": [
        "INCLUSIVE",
        "EXCLUSIVE",
        "NONE"
      ]
    },
    "ReportTaxType": {
      "title": "ReportTaxType",
      "description": "See ReportTaxTypes",
      "type": "string",
      "enum": [
        "AVALARA",
        "BASEXCLUDED",
        "CAPITALSALESOUTPUT",
        "CAPITALEXPENSESINPUT",
        "ECOUTPUT",
        "ECOUTPUTSERVICES",
        "ECINPUT",
        "ECACQUISITIONS",
        "EXEMPTEXPENSES",
        "EXEMPTINPUT",
        "EXEMPTOUTPUT",
        "GSTONIMPORTS",
        "INPUT",
        "INPUTTAXED",
        "MOSSSALES",
        "NONE",
        "NONEOUTPUT",
        "OUTPUT",
        "PURCHASESINPUT",
        "SALESOUTPUT",
        "EXEMPTCAPITAL",
        "EXEMPTEXPORT",
        "CAPITALEXINPUT",
        "GSTONCAPIMPORTS",
        "GSTONCAPITALIMPORTS",
        "REVERSECHARGES",
        "PAYMENTS",
        "INVOICE",
        "CASH",
        "ACCRUAL",
        "FLATRATECASH",
        "FLATRATEACCRUAL",
        "ACCRUALS",
        "TXCA",
        "SRCAS",
        "DSOUTPUT",
        "BLINPUT2",
        "EPINPUT",
        "IMINPUT2",
        "MEINPUT",
        "IGDSINPUT2",
        "ESN33OUTPUT",
        "OPINPUT",
        "OSOUTPUT",
        "TXN33INPUT",
        "TXESSINPUT",
        "TXREINPUT",
        "TXPETINPUT",
        "NRINPUT",
        "ES33OUTPUT",
        "ZERORATEDINPUT",
        "ZERORATEDOUTPUT",
        "DRCHARGESUPPLY",
        "DRCHARGE",
        "CAPINPUT",
        "CAPIMPORTS",
        "IMINPUT",
        "INPUT2",
        "CIUINPUT",
        "SRINPUT",
        "OUTPUT2",
        "SROUTPUT",
        "CAPOUTPUT",
        "SROUTPUT2",
        "CIUOUTPUT",
        "ZROUTPUT",
        "ZREXPORT",
        "ACC28PLUS",
        "ACCUPTO28",
        "OTHEROUTPUT",
        "SHOUTPUT",
        "ZRINPUT",
        "BADDEBT",
        "OTHERINPUT",
        "BADDEBTRELIEF",
        "IGDSINPUT3",
        "SROVR",
        "TOURISTREFUND",
        "TXRCN33INPUT",
        "TXRCREINPUT",
        "TXRCESSINPUT",
        "TXRCTSINPUT"
      ]
    },
    "ReportType": {
      "title": "ReportType",
      "description": "See Prepayment Types",
      "type": "string",
      "enum": [
        "AgedPayablesByContact"
      ]
    },
    "SalesDefaultLineAmountType": {
      "title": "SalesDefaultLineAmountType",
      "description": "The default sales line amount type for a contact. Only available when summaryOnly parameter or paging is used, or when fetch by ContactId or ContactNumber.",
      "type": "string",
      "enum": [
        "INCLUSIVE",
        "EXCLUSIVE",
        "NONE"
      ]
    },
    "SalesTaxBasis": {
      "title": "SalesTaxBasis",
      "description": "The accounting basis used for tax returns. See Sales Tax Basis",
      "type": "string",
      "enum": [
        "PAYMENTS",
        "INVOICE",
        "NONE",
        "CASH",
        "ACCRUAL",
        "FLATRATECASH",
        "FLATRATEACCRUAL",
        "ACCRUALS"
      ]
    },
    "SalesTaxPeriod": {
      "title": "SalesTaxPeriod",
      "description": "The frequency with which tax returns are processed. See Sales Tax Period",
      "type": "string",
      "enum": [
        "MONTHLY",
        "QUARTERLY1",
        "QUARTERLY2",
        "QUARTERLY3",
        "ANNUALLY",
        "ONEMONTHS",
        "TWOMONTHS",
        "SIXMONTHS",
        "1MONTHLY",
        "2MONTHLY",
        "3MONTHLY",
        "6MONTHLY",
        "QUARTERLY",
        "YEARLY",
        "NONE"
      ]
    },
    "SourceTransactionTypeCode": {
      "title": "SourceTransactionTypeCode",
      "description": "The Type of the source tranasction. This will be ACCPAY if the linked transaction was created from an invoice and SPEND if it was created from a bank transaction.",
      "type": "string",
      "enum": [
        "ACCPAY",
        "SPEND"
      ]
    },
    "SourceType": {
      "title": "SourceType",
      "description": "The journal source type. The type of transaction that created the journal",
      "type": "string",
      "enum": [
        "ACCREC",
        "ACCPAY",
        "ACCRECCREDIT",
        "ACCPAYCREDIT",
        "ACCRECPAYMENT",
        "ACCPAYPAYMENT",
        "ARCREDITPAYMENT",
        "APCREDITPAYMENT",
        "CASHREC",
        "CASHPAID",
        "TRANSFER",
        "ARPREPAYMENT",
        "APPREPAYMENT",
        "AROVERPAYMENT",
        "APOVERPAYMENT",
        "EXPCLAIM",
        "EXPPAYMENT",
        "MANJOURNAL",
        "PAYSLIP",
        "WAGEPAYABLE",
        "INTEGRATEDPAYROLLPE",
        "INTEGRATEDPAYROLLPT",
        "EXTERNALSPENDMONEY",
        "INTEGRATEDPAYROLLPTPAYMENT",
        "INTEGRATEDPAYROLLCN"
      ]
    },
    "Status": {
      "title": "Status",
      "description": "Accounts with a status of ACTIVE can be updated to ARCHIVED. See Account Status Codes",
      "type": "string",
      "enum": [
        "ACTIVE",
        "ARCHIVED",
        "DELETED"
      ]
    },
    "Status1": {
      "title": "Status1",
      "description": "The Status of a contact group. To delete a contact group update the status to DELETED. Only contact groups with a status of ACTIVE are returned on GETs.",
      "type": "string",
      "enum": [
        "ACTIVE",
        "DELETED"
      ]
    },
    "Status2": {
      "title": "Status2",
      "description": "See Bank Transaction Status Codes",
      "type": "string",
      "enum": [
        "AUTHORISED",
        "DELETED",
        "VOIDED"
      ]
    },
    "Status3": {
      "title": "Status3",
      "description": "See Invoice Status Codes",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "DELETED",
        "AUTHORISED",
        "PAID",
        "VOIDED"
      ]
    },
    "Status4": {
      "title": "Status4",
      "description": "See Prepayment Status Codes",
      "type": "string",
      "enum": [
        "AUTHORISED",
        "PAID",
        "VOIDED"
      ]
    },
    "Status5": {
      "title": "Status5",
      "description": "See Overpayment Status Codes",
      "type": "string",
      "enum": [
        "AUTHORISED",
        "PAID",
        "VOIDED"
      ]
    },
    "Status6": {
      "title": "Status6",
      "description": "See Credit Note Status Codes",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "DELETED",
        "AUTHORISED",
        "PAID",
        "VOIDED"
      ]
    },
    "Status7": {
      "title": "Status7",
      "description": "The status of the payment.",
      "type": "string",
      "enum": [
        "AUTHORISED",
        "DELETED"
      ]
    },
    "Status8": {
      "title": "Status8",
      "description": "AUTHORISED or DELETED (read-only). New batch payments will have a status of AUTHORISED. It is not possible to delete batch payments via the API.",
      "type": "string",
      "enum": [
        "AUTHORISED",
        "DELETED"
      ]
    },
    "Status9": {
      "title": "Status9",
      "description": "The status of a tracking category",
      "type": "string",
      "enum": [
        "ACTIVE",
        "ARCHIVED",
        "DELETED"
      ]
    },
    "Status10": {
      "title": "Status10",
      "description": "The status of a tracking option",
      "type": "string",
      "enum": [
        "ACTIVE",
        "ARCHIVED",
        "DELETED"
      ]
    },
    "Status11": {
      "title": "Status11",
      "description": "Current status of an employee – see contact status types",
      "type": "string",
      "enum": [
        "ACTIVE",
        "ARCHIVED",
        "GDPRREQUEST",
        "DELETED"
      ]
    },
    "Status12": {
      "title": "Status12",
      "description": "Current status of an expense claim – see status types",
      "type": "string",
      "enum": [
        "SUBMITTED",
        "AUTHORISED",
        "PAID",
        "VOIDED",
        "DELETED"
      ]
    },
    "Status13": {
      "title": "Status13",
      "description": "Current status of receipt – see status types",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "AUTHORISED",
        "DECLINED",
        "VOIDED"
      ]
    },
    "Status14": {
      "title": "Status14",
      "description": "Filter by the combination of ContactID and Status. Get all the linked transactions that have been assigned to a particular customer and have a particular status e.g. GET /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.",
      "type": "string",
      "enum": [
        "APPROVED",
        "DRAFT",
        "ONDRAFT",
        "BILLED",
        "VOIDED"
      ]
    },
    "Status15": {
      "title": "Status15",
      "description": "See Manual Journal Status Codes",
      "type": "string",
      "enum": [
        "DRAFT",
        "POSTED",
        "DELETED",
        "VOIDED",
        "ARCHIVED"
      ]
    },
    "Status16": {
      "title": "Status16",
      "description": "Status of the action for this organisation",
      "type": "string",
      "enum": [
        "ALLOWED",
        "NOT-ALLOWED"
      ]
    },
    "Status17": {
      "title": "Status17",
      "description": "See Purchase Order Status Codes",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "AUTHORISED",
        "BILLED",
        "DELETED"
      ]
    },
    "Status18": {
      "title": "Status18",
      "description": "One of the following - DRAFT or AUTHORISED – See Invoice Status Codes",
      "type": "string",
      "enum": [
        "DRAFT",
        "AUTHORISED",
        "DELETED"
      ]
    },
    "Status19": {
      "title": "Status19",
      "description": "See Status Codes",
      "type": "string",
      "enum": [
        "ACTIVE",
        "DELETED",
        "ARCHIVED",
        "PENDING"
      ]
    },
    "Status20": {
      "title": "Status20",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "AUTHORISED",
        "BILLED",
        "DELETED"
      ]
    },
    "SystemAccount": {
      "title": "SystemAccount",
      "description": "If this is a system account then this element is returned. See System Account types. Note that non-system accounts may have this element set as either “” or null.",
      "type": "string",
      "enum": [
        "DEBTORS",
        "CREDITORS",
        "BANKCURRENCYGAIN",
        "GST",
        "GSTONIMPORTS",
        "HISTORICAL",
        "REALISEDCURRENCYGAIN",
        "RETAINEDEARNINGS",
        "ROUNDING",
        "TRACKINGTRANSFERS",
        "UNPAIDEXPCLM",
        "UNREALISEDCURRENCYGAIN",
        "WAGEPAYABLES",
        "CISASSETS",
        "CISASSET",
        "CISLABOUR",
        "CISLABOUREXPENSE",
        "CISLABOURINCOME",
        "CISLIABILITY",
        "CISMATERIALS"
      ]
    },
    "timeframe": {
      "title": "timeframe",
      "type": "string",
      "enum": [
        "MONTH",
        "QUARTER",
        "YEAR"
      ]
    },
    "Type": {
      "title": "Type",
      "description": "See Bank Transaction Types",
      "type": "string",
      "enum": [
        "RECEIVE",
        "RECEIVE-OVERPAYMENT",
        "RECEIVE-PREPAYMENT",
        "SPEND",
        "SPEND-OVERPAYMENT",
        "SPEND-PREPAYMENT",
        "RECEIVE-TRANSFER",
        "SPEND-TRANSFER"
      ]
    },
    "Type1": {
      "title": "Type1",
      "description": "Always INVOICE",
      "type": "string",
      "enum": [
        "INVOICE"
      ]
    },
    "Type2": {
      "title": "Type2",
      "description": "See Invoice Types",
      "type": "string",
      "enum": [
        "ACCPAY",
        "ACCPAYCREDIT",
        "APOVERPAYMENT",
        "APPREPAYMENT",
        "ACCREC",
        "ACCRECCREDIT",
        "AROVERPAYMENT",
        "ARPREPAYMENT"
      ]
    },
    "Type3": {
      "title": "Type3",
      "description": "See Prepayment Types",
      "type": "string",
      "enum": [
        "RECEIVE-PREPAYMENT",
        "SPEND-PREPAYMENT",
        "ARPREPAYMENT",
        "APPREPAYMENT"
      ]
    },
    "Type4": {
      "title": "Type4",
      "description": "See Overpayment Types",
      "type": "string",
      "enum": [
        "RECEIVE-OVERPAYMENT",
        "SPEND-OVERPAYMENT",
        "AROVERPAYMENT"
      ]
    },
    "Type5": {
      "title": "Type5",
      "description": "See Credit Note Types",
      "type": "string",
      "enum": [
        "ACCPAYCREDIT",
        "ACCRECCREDIT"
      ]
    },
    "Type6": {
      "title": "Type6",
      "description": "PAYBATCH for bill payments or RECBATCH for sales invoice payments (read-only)",
      "type": "string",
      "enum": [
        "PAYBATCH",
        "RECBATCH"
      ]
    },
    "Type7": {
      "title": "Type7",
      "description": "Type of Budget. OVERALL or TRACKING",
      "type": "string",
      "enum": [
        "OVERALL",
        "TRACKING"
      ]
    },
    "Type8": {
      "title": "Type8",
      "description": "This will always be BILLABLEEXPENSE. More types may be added in future.",
      "type": "string",
      "enum": [
        "BILLABLEEXPENSE"
      ]
    },
    "Type9": {
      "title": "Type9",
      "description": "See Invoice Types",
      "type": "string",
      "enum": [
        "ACCPAY",
        "ACCREC"
      ]
    },
    "Unit": {
      "title": "Unit",
      "description": "One of the following - WEEKLY or MONTHLY",
      "type": "string",
      "enum": [
        "WEEKLY",
        "MONTHLY"
      ]
    },
    "Version": {
      "title": "Version",
      "description": "See Version Types",
      "type": "string",
      "enum": [
        "AU",
        "NZ",
        "GLOBAL",
        "UK",
        "US",
        "AUONRAMP",
        "NZONRAMP",
        "GLOBALONRAMP",
        "UKONRAMP",
        "USONRAMP"
      ]
    }
  },
  "security": [],
  "tags": [
    {
      "name": "Accounting",
      "description": ""
    }
  ]
}