{
  "swagger": "2.0",
  "info": {
    "title": "DPIRD Science - West Australia",
    "description": "This API provides the back-end to the Rainfall to Date, Potential Yield, and Soil Water tools already available on the DPIRD website",
    "version": "1.0",
    "contact": {
      "name": "Paul Culmsee",
      "url": "https://www.sevensigma.com.au",
      "email": "paul.culmsee@sevensigma.com.au"
    }
  },
  "host": "api.dpird.wa.gov.au",
  "basePath": "/v2/science",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/stations": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "$ref": "#/definitions/apiMetaDataModel"
                },
                "collection": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/stationModel"
                  },
                  "description": "Collection of Stations"
                }
              }
            }
          }
        },
        "summary": "Get Stations",
        "description": "Returns a list of stations that can be used with the Science API.",
        "operationId": "GetStations",
        "parameters": [
          {
            "name": "stationCode",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Station codes",
            "description": "A comma separated list of case-sensitive station codes. Limits the stations which will be returned."
          },
          {
            "$ref": "#/parameters/offsetInQuery"
          },
          {
            "$ref": "#/parameters/limitInQuery"
          },
          {
            "$ref": "#/parameters/sortInQuery"
          },
          {
            "$ref": "#/parameters/selectInQuery"
          },
          {
            "$ref": "#/parameters/groupInQuery"
          },
          {
            "$ref": "#/parameters/stateInQuery"
          }
        ]
      }
    },
    "/stationsminimal": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "collection": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "stationCode": {
                        "type": "string",
                        "description": "stationCode"
                      },
                      "stationName": {
                        "type": "string",
                        "description": "stationName"
                      }
                    }
                  },
                  "description": "collection"
                }
              }
            }
          }
        },
        "summary": "Get Stations for Lookup",
        "description": "Get Stations for Lookup",
        "operationId": "GetStationsMinimal",
        "parameters": [
          {
            "$ref": "#/parameters/offsetInQuery"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "Limit (internal)",
            "x-ms-summary": "The pagination limit parameter restricts the number of entries returned.",
            "default": 1000,
            "x-ms-visibility": "internal"
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A comma-separated list of fields to sort by, defaulted to stationName.",
            "x-ms-summary": "Sort Fields",
            "default": "stationName",
            "x-ms-visibility": "internal"
          },
          {
            "name": "select",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A comma-separated list of fields to include in the result, defaulted to stationCode and stationName to reduce payload size.",
            "x-ms-summary": "Fields to Include",
            "default": "stationCode,stationName",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/groupInQuery"
          }
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/station/{stationCode}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "$ref": "#/definitions/apiMetaDataModel"
                },
                "data": {
                  "$ref": "#/definitions/stationModel"
                }
              }
            }
          }
        },
        "summary": "Get Single Station",
        "description": "Get the metadata for a specific station",
        "operationId": "GetStation",
        "parameters": [
          {
            "$ref": "#/parameters/stationCodeLookupInPath"
          }
        ]
      }
    },
    "/stations/nearby": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "$ref": "#/definitions/apiMetaDataModel"
                },
                "collection": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/stationModel"
                  },
                  "description": "Collection of Stations"
                }
              }
            }
          }
        },
        "summary": "Get Stations Nearby",
        "description": "Returns a list of nearby stations, sorted by distance. Use paging to control the number of stations returned. Returns 5 stations by default. Sorted by distance from location ascending.",
        "operationId": "GetNearbyWeatherStations",
        "parameters": [
          {
            "$ref": "#/parameters/latitudeInQueryRequired"
          },
          {
            "$ref": "#/parameters/longitudeInQueryRequired"
          },
          {
            "$ref": "#/parameters/radiusInQuery"
          },
          {
            "$ref": "#/parameters/offsetInQuery"
          },
          {
            "$ref": "#/parameters/limitInQuery"
          },
          {
            "$ref": "#/parameters/sortInQuery"
          },
          {
            "$ref": "#/parameters/selectInQuery"
          },
          {
            "$ref": "#/parameters/groupInQuery"
          },
          {
            "$ref": "#/parameters/stateInQuery"
          }
        ]
      }
    },
    "/rainfall/{stationCode}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "$ref": "#/definitions/apiMetaDataModel"
                },
                "data": {
                  "$ref": "#/definitions/stationRainfallModel"
                }
              }
            }
          }
        },
        "summary": "Get Single Station Rainfall",
        "description": "Returns the rainfall to date, historical rainfall data, and projected rainfall data, depending on already received rainfall",
        "operationId": "GetStationRainfall",
        "parameters": [
          {
            "$ref": "#/parameters/stationCodeLookupInPath"
          },
          {
            "$ref": "#/parameters/summerStartDateInQuery"
          },
          {
            "$ref": "#/parameters/growingSeasonStartDateInQuery"
          },
          {
            "$ref": "#/parameters/growingSeasonEndDateInQuery"
          },
          {
            "$ref": "#/parameters/forecastDateInQuery"
          },
          {
            "$ref": "#/parameters/selectInQuery"
          }
        ]
      }
    },
    "/potential-yield": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "$ref": "#/definitions/apiMetaDataModel"
                },
                "data": {
                  "$ref": "#/definitions/potentialYieldModel"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/stationCodeLookupInQuery"
          },
          {
            "$ref": "#/parameters/latitudeInQuery"
          },
          {
            "$ref": "#/parameters/longitudeInQuery"
          },
          {
            "$ref": "#/parameters/summerStartDateInQuery"
          },
          {
            "$ref": "#/parameters/growingSeasonStartDateInQuery"
          },
          {
            "$ref": "#/parameters/growingSeasonEndDateInQuery"
          },
          {
            "$ref": "#/parameters/forecastDateInQuery"
          },
          {
            "$ref": "#/parameters/waterUseEfficiencyInQuery"
          },
          {
            "$ref": "#/parameters/evaporationInQuery"
          }
        ],
        "summary": "Get Potential Yield",
        "description": "Get Potential Yield",
        "operationId": "GetPotentialYield"
      }
    },
    "/soilwater": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "$ref": "#/definitions/apiMetaDataModel"
                },
                "data": {
                  "$ref": "#/definitions/soilWaterModel"
                }
              }
            }
          }
        },
        "summary": "Get Soil Water",
        "operationId": "GetSoilWater",
        "parameters": [
          {
            "$ref": "#/parameters/stationCodeLookupInQuery"
          },
          {
            "$ref": "#/parameters/latitudeInQuery"
          },
          {
            "$ref": "#/parameters/longitudeInQuery"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The start date for the period.",
            "x-ms-summary": "Start date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The end date for the period.",
            "x-ms-summary": "End date"
          },
          {
            "name": "soilType",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A code for a type of soil",
            "x-ms-summary": "Soil Code",
            "enum": [
              "gravel",
              "shallow-soil",
              "sand",
              "sandy-earth",
              "shallow-sandy-duplex",
              "deep-sandy-duplex",
              "shallow-loamy-duplex",
              "deep-loamy-duplex",
              "loamy-earth",
              "clay"
            ]
          },
          {
            "name": "faoInitialisationDays",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Number of days in crop initialization period, used in the estimation of crop evapotranspiration.",
            "x-ms-summary": "Crop initialization period"
          },
          {
            "name": "faoInitialisationCropCoefficient",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Proportion of potential evaporation used by crop during initialization period",
            "x-ms-summary": "Crop evaporation initialization period"
          },
          {
            "name": "faoDevelopmentDays",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Number of days in crop development period, used in the estimation of crop evapotranspiration.",
            "x-ms-summary": "Days in crop development"
          },
          {
            "name": "faoDevelopmentCropCoefficient",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Proportion of potential evaporation used by crop during development period.",
            "x-ms-summary": "Crop evaporation development period."
          },
          {
            "name": "faoMidSeasonDays",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Number of days in crop mid-season period, used in the estimation of crop evapotranspiration.",
            "x-ms-summary": "Days in crop mid-season"
          },
          {
            "name": "faoMidSeasonCropCoefficient",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Proportion of potential evaporation used by during mid-season period",
            "x-ms-summary": "Crop evaporation mid-season period"
          },
          {
            "name": "faoLateSeasonDays",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Number of days in crop late-season period, used in estimation of crop evapotranspiration.",
            "x-ms-summary": "Days in crop late-season"
          },
          {
            "name": "faoLateSeasonCropCoefficient",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Proportion of potential evaporation used by crop during late-season period.",
            "x-ms-summary": "Crop evaporation late-season period."
          },
          {
            "name": "faoBreakOfSeason3Days25April",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The number of mm of rainfall after April 25th which triggers the break of the season.",
            "x-ms-summary": "Rainfall (mm) after April 25th"
          },
          {
            "name": "faoBreakOfSeason3Days5June",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The number of mm of rainfall after June 5th which triggers the break of the season.",
            "x-ms-summary": "Rainfall (mm) after June 5th"
          }
        ],
        "description": "Returns the amount of water in the soil depending on the rainfall received and the type of soil."
      }
    },
    "/yellowspot": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "$ref": "#/definitions/apiMetaDataModel"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "moin": {
                      "type": "object",
                      "properties": {
                        "maturation": {
                          "$ref": "#/definitions/maturationModel"
                        },
                        "model": {
                          "$ref": "#/definitions/yellowSpotModel"
                        }
                      },
                      "description": "Moin's model calculates the date of maturation of a yellow spot primary infection assuming that days are either suitable for maturation or not, based on daily temperature and rainfall data."
                    },
                    "chris": {
                      "type": "object",
                      "properties": {
                        "maturation": {
                          "$ref": "#/definitions/maturationModel"
                        },
                        "model": {
                          "$ref": "#/definitions/yellowSpotModel"
                        }
                      },
                      "description": "Chris' model calculates the date of maturation of a yellow spot primary infection assuming that days can be fractionally suitable for maturation, depending on how close the day temperature and rainfall values are to optimal values."
                    }
                  },
                  "description": "Yellow Spot Model Data"
                }
              }
            }
          }
        },
        "summary": "Get Yellow Spot",
        "operationId": "GetYellowSpot",
        "parameters": [
          {
            "$ref": "#/parameters/stationCodeLookupInQuery"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "format YYYY-MM-DD. Defaults to the current day if not provided",
            "x-ms-summary": "The date to run the model for"
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Options are 'moin', 'chris', 'moinMaturation', 'moinModel', 'chrisMaturation', 'chrisModel'. Multiple options can be provided as a comma separated string ie. 'moinMaturation,chrisMaturation'. By default all results are returned.",
            "x-ms-summary": "Return only a part of the results."
          }
        ],
        "description": "Run the Moin or Chris Yellow Spot model."
      }
    }
  },
  "definitions": {
    "apiMetaDataModel": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "status"
        },
        "links": {
          "$ref": "#/definitions/linksModel"
        },
        "collection": {
          "$ref": "#/definitions/paginationModel"
        }
      },
      "description": "A wrapper on all responses providing useful information related to the API call."
    },
    "yellowSpotModel": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "The date."
          },
          "temperature": {
            "type": "object",
            "properties": {
              "minimum": {
                "type": "number",
                "format": "float",
                "description": "The minimum temperature for the day."
              },
              "maximum": {
                "type": "number",
                "format": "float",
                "description": "The maximum temperature for the day."
              },
              "average": {
                "type": "number",
                "format": "float",
                "description": "The average temperature for the day."
              },
              "movingAverage": {
                "type": "number",
                "format": "float",
                "description": "The moving average."
              }
            },
            "description": "Temperature for the day"
          },
          "rainfall": {
            "type": "object",
            "properties": {
              "rain": {
                "type": "number",
                "format": "float",
                "description": "The daily rainfall for the period"
              },
              "movingSum": {
                "type": "number",
                "format": "float",
                "description": "The rainfall moving sum."
              }
            },
            "description": "Rainfall"
          },
          "suitable": {
            "description": "Model suitable"
          },
          "maturationProgress": {
            "description": "Model maturation Progress"
          }
        }
      },
      "description": "model"
    },
    "maturationModel": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "description": "Calculated date of maturity, if it has occurred."
        },
        "progress": {
          "type": "number",
          "format": "float",
          "description": "Current maturation as percentage of target as of the request date. If request date is the calculated date of maturity this will be 100%; if after it will be larger."
        },
        "target": {
          "type": "integer",
          "format": "int32",
          "description": "Number of suitable days required to reach maturation."
        }
      },
      "description": "maturation"
    },
    "soilWaterModel": {
      "type": "object",
      "properties": {
        "soilWater": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "description": "The summer start date."
              },
              "rainfall": {
                "type": "number",
                "format": "float",
                "description": "The amount of rain that fell on the day."
              },
              "fallow": {
                "type": "number",
                "format": "float",
                "description": "The soil water in mm for a fallow paddock."
              },
              "crop": {
                "type": "number",
                "format": "float",
                "description": "The soil water in mm for a cropped paddock."
              }
            }
          },
          "description": "the soil water data"
        },
        "breakOfSeason": {
          "type": "string",
          "description": "Break Of Season"
        }
      },
      "description": "Soil water data"
    },
    "potentialYieldModel": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "object",
          "properties": {
            "forecastDate": {
              "type": "string",
              "description": "forecastDate"
            },
            "inGrowingSeason": {
              "type": "boolean",
              "description": "inGrowingSeason"
            },
            "summer": {
              "type": "object",
              "properties": {
                "startDate": {
                  "type": "string",
                  "description": "The summer start date."
                },
                "endDate": {
                  "type": "string",
                  "description": "The end of the summer period (the day before the season starts)"
                },
                "cumulativeRainfall": {
                  "type": "number",
                  "format": "float",
                  "description": "The amount of rain that has fallen during the summer period."
                },
                "decile": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The historical decile this summers rainfall falls into."
                }
              },
              "description": "The summer rainfall summary."
            },
            "growingSeason": {
              "type": "object",
              "properties": {
                "startDate": {
                  "type": "string",
                  "description": "The date the season starts"
                },
                "endDate": {
                  "type": "string",
                  "description": "The date the season ends, or the current date if currently within the season."
                },
                "cumulativeRainfall": {
                  "type": "number",
                  "format": "float",
                  "description": "The amount of rain that has fallen between the start and end dates."
                },
                "decile": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Given the current cumulative rainfall, this is the historical decile the rainfall would fit into."
                }
              },
              "description": "The seasonal rainfall summary."
            }
          },
          "description": "A rainfall summary for the growing season and the last summer."
        },
        "potentialYield": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "decile": {
                "type": "integer",
                "format": "int32",
                "description": "The decile from 1 to 9"
              },
              "projectedRainfall": {
                "type": "number",
                "format": "float",
                "description": "The projected rainfall for the decile in mm."
              },
              "potentialYield": {
                "description": "The potential yield in tonnes/ha."
              }
            }
          },
          "description": "The potential yield and expected rainfall for the season, by decile."
        }
      },
      "description": "Potential yield data"
    },
    "stationRainfallModel": {
      "type": "object",
      "properties": {
        "forecastDate": {
          "type": "string",
          "description": "This is the unique case-sensitive weather station code."
        },
        "summary": {
          "type": "object",
          "properties": {
            "summer": {
              "type": "object",
              "properties": {
                "startDate": {
                  "type": "string",
                  "description": "The summer start date."
                },
                "endDate": {
                  "type": "string",
                  "description": "The end of the summer period (the day before the season starts)"
                },
                "cumulativeRainfall": {
                  "type": "number",
                  "format": "float",
                  "description": "The amount of rain that has fallen during the summer period."
                },
                "decile": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The historical decile this summers rainfall falls into."
                }
              },
              "description": "The summer rainfall summary"
            },
            "season": {
              "type": "object",
              "properties": {
                "startDate": {
                  "type": "string",
                  "description": "The season start date."
                },
                "endDate": {
                  "type": "string",
                  "description": "The date the season ends, or the current date if currently within the season"
                },
                "cumulativeRainfall": {
                  "type": "number",
                  "format": "float",
                  "description": "The amount of rain that has fallen between the start and end dates."
                },
                "decile": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Given the current cumulative rainfall, this is the historical decile the rainfall would fit into."
                }
              },
              "description": "The season rainfall summary"
            },
            "currentSeasonalRainfall": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "description": "The date the rainfall occurred on."
                  },
                  "rainfall": {
                    "type": "number",
                    "format": "float",
                    "description": "The rainfall that occurred on the given day."
                  },
                  "cumulativeRainfall": {
                    "type": "number",
                    "format": "float",
                    "description": "The cumulative rainfall that has occurred so far this season."
                  }
                }
              },
              "description": "The season rainfall summary"
            },
            "projectedSeasonalRainfall": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "description": "The date of the projected rainfall."
                  },
                  "deciles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "decile": {
                          "type": "integer",
                          "description": "The decile from 1 to 9"
                        },
                        "rainfall": {
                          "type": "number",
                          "format": "float",
                          "description": "The projected rainfall for the decile."
                        }
                      }
                    }
                  }
                }
              },
              "description": "The projected season rainfall"
            },
            "historicalRainfall": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "description": "The month and day of the historical rainfall deciles."
                  },
                  "deciles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "decile": {
                          "type": "integer",
                          "description": "The decile from 1 to 9"
                        },
                        "rainfall": {
                          "type": "number",
                          "format": "float",
                          "description": "The projected rainfall for the decile."
                        }
                      }
                    },
                    "description": "The projected rainfall values by decile."
                  }
                }
              },
              "description": "The historical season rainfall"
            }
          },
          "description": "A rainfall summary for the growing season and the last summer"
        }
      }
    },
    "paginationModel": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "count"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "limit"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "offset"
        },
        "links": {
          "$ref": "#/definitions/linksModel"
        }
      },
      "description": "Pagination details"
    },
    "stationModel": {
      "type": "object",
      "properties": {
        "stationCode": {
          "type": "string",
          "description": "The unique identifier for a station. Case sensitive."
        },
        "stationName": {
          "type": "string",
          "description": "The human readable name of the weather station."
        },
        "latitude": {
          "type": "number",
          "format": "float",
          "description": "Latitude of the weather station in decimal degrees, used for displaying on a map."
        },
        "longitude": {
          "type": "number",
          "format": "float",
          "description": "Longitude of the weather station in decimal degrees, used for displaying on a map."
        },
        "owner": {
          "type": "string",
          "description": "The owner of the weather station."
        },
        "state": {
          "type": "string",
          "description": "The Australian state the station resides in."
        },
        "startYear": {
          "type": "number",
          "description": "The year the station was started"
        },
        "endYear": {
          "type": "boolean",
          "description": "The year the station was turned off. Null if still running."
        }
      }
    },
    "linksModel": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "Links",
        "properties": {
          "href": {
            "type": "string",
            "description": "Specifies the URL of the page the link goes to.",
            "title": "URL"
          },
          "rel": {
            "type": "string",
            "description": "Specifies the relationship between the current document and the linked document.",
            "title": "Relationship"
          }
        }
      },
      "description": "A series of links related to the endpoint."
    }
  },
  "parameters": {
    "latitudeInQuery": {
      "name": "latitude",
      "in": "query",
      "required": false,
      "type": "number",
      "description": "The latitude to search by in decimal degrees.",
      "x-ms-summary": "Latitude"
    },
    "longitudeInQuery": {
      "name": "longitude",
      "in": "query",
      "required": false,
      "type": "number",
      "description": "The longitude to search by in decimal degrees.",
      "x-ms-summary": "Longitude"
    },
    "latitudeInQueryRequired": {
      "name": "latitude",
      "in": "query",
      "required": true,
      "type": "number",
      "description": "The latitude to search by in decimal degrees.",
      "x-ms-summary": "Latitude"
    },
    "longitudeInQueryRequired": {
      "name": "longitude",
      "in": "query",
      "required": true,
      "type": "number",
      "description": "The longitude to search by in decimal degrees.",
      "x-ms-summary": "Longitude"
    },
    "radiusInQuery": {
      "name": "radius",
      "in": "query",
      "required": false,
      "type": "integer",
      "description": "Only look for stations within this kilometer range. Defaults to 100km.",
      "x-ms-summary": "Search Radius"
    },
    "offsetInQuery": {
      "name": "offset",
      "in": "query",
      "required": false,
      "type": "integer",
      "x-ms-summary": "Query Offset",
      "description": "The pagination offset parameter specifies the first entry to return from a collection."
    },
    "limitInQuery": {
      "name": "limit",
      "in": "query",
      "required": false,
      "type": "integer",
      "x-ms-summary": "Number of records to retrieve",
      "description": "The pagination limit parameter restricts the number of entries returned."
    },
    "sortInQuery": {
      "name": "sort",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "A comma separated list of fields to sort by. Defaults to ascending. Prepend '-' for descending. For wind fields you can only sort or select by the lowest sensor.",
      "x-ms-summary": "Fields to sort by"
    },
    "groupInQuery": {
      "name": "group",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Filter the stations to a predefined group. These need to be supported on the back end. 'all' returns all stations, 'api' returns the default stations in use with the API, 'web' returns the list in use by the weather.agric.wa.gov.au and 'rtd' returns stations with scientifically complete datasets.",
      "x-ms-summary": "Station group",
      "enum": [
        "all",
        "api",
        "web",
        "rtd"
      ]
    },
    "selectInQuery": {
      "name": "select",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "A comma separated list of fields to include in the result. Note that this will not include station codes or names unless explicitly included.",
      "x-ms-summary": "Fields to Include"
    },
    "summerStartDateInQuery": {
      "name": "summerStartDate",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The date that summer starts on. Defaults to 1/11 of the previous year",
      "x-ms-summary": "Summer Start Date",
      "format": "date"
    },
    "growingSeasonStartDateInQuery": {
      "name": "growingSeasonStartDate",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The date that the growing season starts. Defaults to 1/4 of the current year.",
      "x-ms-summary": "Growing Season Start Date",
      "format": "date"
    },
    "growingSeasonEndDateInQuery": {
      "name": "endDate",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The end date for the growing season. Defaults to 31/10 of the current year.",
      "x-ms-summary": "Growing Season End Date",
      "format": "date"
    },
    "forecastDateInQuery": {
      "name": "forecastDate",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The date to conduct the projections from. Can be used to see historical predictions. Defaults to the current date.",
      "x-ms-summary": "Forecast Date",
      "format": "date"
    },
    "stateInQuery": {
      "name": "state",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-summary": "Available values are 'all', 'wa', 'sa', 'nsw', 'vic', 'qld', 'tas', 'nt'",
      "description": "Filter by state. By default, all states are returned."
    },
    "waterUseEfficiencyInQuery": {
      "name": "waterUseEfficiency",
      "in": "query",
      "required": false,
      "type": "integer",
      "x-ms-summary": "The water use efficiency to use.",
      "description": "The water use efficiency to use."
    },
    "evaporationInQuery": {
      "name": "evaporation",
      "in": "query",
      "required": false,
      "type": "integer",
      "x-ms-summary": "The evaporation.",
      "description": "The evaporation."
    },
    "stationCodeLookupInQuery": {
      "name": "stationCode",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "A single case-sensitive station code.",
      "x-ms-summary": "Station Code",
      "x-ms-dynamic-values": {
        "operationId": "GetStationsMinimal",
        "value-path": "stationCode",
        "value-collection": "collection",
        "value-title": "stationName",
        "parameters": {
          "limit": 1000,
          "sort": "stationName",
          "select": "stationCode,stationName"
        }
      }
    },
    "stationCodeLookupInPath": {
      "name": "stationCode",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "A single case-sensitive station code.",
      "x-ms-summary": "Station Code",
      "x-ms-url-encoding": "single",
      "x-ms-dynamic-values": {
        "operationId": "GetStationsMinimal",
        "value-path": "stationCode",
        "value-collection": "collection",
        "value-title": "stationName",
        "parameters": {
          "limit": 1000,
          "sort": "stationName",
          "select": "stationCode,stationName"
        }
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.agric.wa.gov.au/"
    },
    {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://www.agric.wa.gov.au/apis/api-terms-and-conditions"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Intelligence; Data"
    }
  ],
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "query",
      "name": "api_key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}